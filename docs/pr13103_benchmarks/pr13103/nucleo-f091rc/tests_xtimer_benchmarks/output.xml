<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 09:42:36.676" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:42:37.240" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:42:37.248" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:42:38.390" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:42:37.238" endtime="20201112 09:42:38.392"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.397" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:42:38.394" endtime="20201112 09:42:38.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:37.236" endtime="20201112 09:42:38.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:38.403" endtime="20201112 09:42:38.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.400" endtime="20201112 09:42:38.589"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.603" endtime="20201112 09:42:38.622"></status>
</kw>
<msg timestamp="20201112 09:42:38.623" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc',...</msg>
<status status="PASS" starttime="20201112 09:42:38.601" endtime="20201112 09:42:38.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.625" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc',...</msg>
<status status="PASS" starttime="20201112 09:42:38.624" endtime="20201112 09:42:38.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.628" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:38.626" endtime="20201112 09:42:38.629"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:38.599" endtime="20201112 09:42:38.629"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:38.596" endtime="20201112 09:42:38.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.595" endtime="20201112 09:42:38.630"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:38.634" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:38.633" endtime="20201112 09:42:38.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.631" endtime="20201112 09:42:38.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.594" endtime="20201112 09:42:38.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.593" endtime="20201112 09:42:38.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.636" endtime="20201112 09:42:38.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.592" endtime="20201112 09:42:38.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.639" endtime="20201112 09:42:38.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.590" endtime="20201112 09:42:38.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:37.235" endtime="20201112 09:42:38.641"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:38.648" endtime="20201112 09:42:38.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.646" endtime="20201112 09:42:38.668"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.682" endtime="20201112 09:42:38.702"></status>
</kw>
<msg timestamp="20201112 09:42:38.702" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:38.681" endtime="20201112 09:42:38.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.705" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:38.703" endtime="20201112 09:42:38.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.708" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:38.706" endtime="20201112 09:42:38.708"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:38.678" endtime="20201112 09:42:38.709"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:38.676" endtime="20201112 09:42:38.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.674" endtime="20201112 09:42:38.710"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:38.714" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:38.713" endtime="20201112 09:42:38.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.711" endtime="20201112 09:42:38.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.673" endtime="20201112 09:42:38.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.672" endtime="20201112 09:42:38.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.715" endtime="20201112 09:42:38.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.670" endtime="20201112 09:42:38.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.668" endtime="20201112 09:42:38.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.645" endtime="20201112 09:42:38.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.725" endtime="20201112 09:42:38.736"></status>
</kw>
<msg timestamp="20201112 09:42:38.736" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:38.724" endtime="20201112 09:42:38.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.739" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:38.737" endtime="20201112 09:42:38.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.740" endtime="20201112 09:42:38.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.721" endtime="20201112 09:42:38.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.719" endtime="20201112 09:42:38.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.747" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 09:42:38.746" endtime="20201112 09:42:38.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.749" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 09:42:38.748" endtime="20201112 09:42:38.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.743" endtime="20201112 09:42:38.750"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:38.642" endtime="20201112 09:42:38.751" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:42:36.788" endtime="20201112 09:42:38.753"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.806" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:42:38.814" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:42:39.993" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:42:38.804" endtime="20201112 09:42:39.995"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.002" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:42:39.997" endtime="20201112 09:42:40.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.803" endtime="20201112 09:42:40.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:40.008" endtime="20201112 09:42:40.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.005" endtime="20201112 09:42:40.231"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.244" endtime="20201112 09:42:40.263"></status>
</kw>
<msg timestamp="20201112 09:42:40.264" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_si...</msg>
<status status="PASS" starttime="20201112 09:42:40.242" endtime="20201112 09:42:40.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.266" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_si...</msg>
<status status="PASS" starttime="20201112 09:42:40.265" endtime="20201112 09:42:40.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.270" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:40.268" endtime="20201112 09:42:40.270"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:40.240" endtime="20201112 09:42:40.271"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:40.237" endtime="20201112 09:42:40.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.236" endtime="20201112 09:42:40.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:40.275" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:40.275" endtime="20201112 09:42:40.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.272" endtime="20201112 09:42:40.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.235" endtime="20201112 09:42:40.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.235" endtime="20201112 09:42:40.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.277" endtime="20201112 09:42:40.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.233" endtime="20201112 09:42:40.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.280" endtime="20201112 09:42:40.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.232" endtime="20201112 09:42:40.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.801" endtime="20201112 09:42:40.282"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:40.288" endtime="20201112 09:42:40.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.286" endtime="20201112 09:42:40.308"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.322" endtime="20201112 09:42:40.341"></status>
</kw>
<msg timestamp="20201112 09:42:40.341" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:40.320" endtime="20201112 09:42:40.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.344" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:40.343" endtime="20201112 09:42:40.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.347" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:40.345" endtime="20201112 09:42:40.347"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:40.317" endtime="20201112 09:42:40.348"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:40.314" endtime="20201112 09:42:40.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.313" endtime="20201112 09:42:40.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:40.353" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:40.352" endtime="20201112 09:42:40.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.350" endtime="20201112 09:42:40.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.312" endtime="20201112 09:42:40.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.312" endtime="20201112 09:42:40.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.354" endtime="20201112 09:42:40.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.310" endtime="20201112 09:42:40.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.309" endtime="20201112 09:42:40.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.285" endtime="20201112 09:42:40.357"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 09:42:40.359" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.367" endtime="20201112 09:42:40.377"></status>
</kw>
<msg timestamp="20201112 09:42:40.377" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:40.366" endtime="20201112 09:42:40.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.380" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:40.378" endtime="20201112 09:42:40.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.381" endtime="20201112 09:42:40.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.363" endtime="20201112 09:42:40.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.361" endtime="20201112 09:42:40.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.390" endtime="20201112 09:42:40.677"></status>
</kw>
<msg timestamp="20201112 09:42:40.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069141889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069142361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:40.389" endtime="20201112 09:42:40.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069141889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069142361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:40.682" endtime="20201112 09:42:40.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.690" endtime="20201112 09:42:40.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.386" endtime="20201112 09:42:40.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.384" endtime="20201112 09:42:40.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.697" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:40.696" endtime="20201112 09:42:40.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.702" level="INFO">VALUE: [{'time': 0.069141889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069142361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069154792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2431000000007186e-05, 'source_diff': 1.2431000000007186e-05}, {'time': 0.069155264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.069163722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.458000000002852e-06, 'source_diff': 8.458000000002852e-06}, {'time': 0.069164194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069172889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.695000000003006e-06, 'source_diff': 8.695000000003006e-06}, {'time': 0.069173361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069180708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.346999999990889e-06, 'source_diff': 7.346999999990889e-06}, {'time': 0.069181194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.069187625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.069188097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069201875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3777999999992074e-05, 'source_diff': 1.3777999999992074e-05}, {'time': 0.069202361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.069214208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1846999999995389e-05, 'source_diff': 1.1846999999995389e-05}, {'time': 0.069214694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.069219069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.069219542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069234056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000007132e-05, 'source_diff': 1.4514000000007132e-05}, {'time': 0.069234528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069245056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999995763e-05, 'source_diff': 1.0527999999995763e-05}, {'time': 0.069245528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069256889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1361000000001398e-05, 'source_diff': 1.1361000000001398e-05}, {'time': 0.069257361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069271056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3694999999994129e-05, 'source_diff': 1.3694999999994129e-05}, {'time': 0.069271528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069277889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999996397e-06, 'source_diff': 6.360999999996397e-06}, {'time': 0.069278361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069286611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.069287083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069301056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3973000000000457e-05, 'source_diff': 1.3973000000000457e-05}, {'time': 0.069301542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.069314556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3014000000005632e-05, 'source_diff': 1.3014000000005632e-05}, {'time': 0.069315042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.069319889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.069320375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.069327069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.069327542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069341403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.386099999999002e-05, 'source_diff': 1.386099999999002e-05}, {'time': 0.069341875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069350903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.02800000000814e-06, 'source_diff': 9.02800000000814e-06}, {'time': 0.069351375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069362069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0693999999991655e-05, 'source_diff': 1.0693999999991655e-05}, {'time': 0.069362542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069366903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999994397e-06, 'source_diff': 4.360999999994397e-06}, {'time': 0.069367375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069378736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1361000000001398e-05, 'source_diff': 1.1361000000001398e-05}, {'time': 0.069379208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069389792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.058400000000792e-05, 'source_diff': 1.058400000000792e-05}, {'time': 0.069390264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.069395583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319000000003626e-06, 'source_diff': 5.319000000003626e-06}, {'time': 0.069396056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069400403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.069400875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069409569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000003532e-06, 'source_diff': 8.694000000003532e-06}, {'time': 0.069410056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999934649e-07, 'source_diff': 4.869999999934649e-07}, {'time': 0.069419264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.207999999996663e-06, 'source_diff': 9.207999999996663e-06}, {'time': 0.069419736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069434403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4667000000009867e-05, 'source_diff': 1.4667000000009867e-05}, {'time': 0.069434889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.06944675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1861000000001898e-05, 'source_diff': 1.1861000000001898e-05}, {'time': 0.069447222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069452764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541999999997271e-06, 'source_diff': 5.541999999997271e-06}, {'time': 0.069453236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.06946675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3513999999992254e-05, 'source_diff': 1.3513999999992254e-05}, {'time': 0.069467222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.06947175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.069472222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.06948575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.069486222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069498431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2208999999999137e-05, 'source_diff': 1.2208999999999137e-05}, {'time': 0.069498903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069512931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.069513403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069520764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.069521236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069534597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3361000000003398e-05, 'source_diff': 1.3361000000003398e-05}, {'time': 0.069535069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069541083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.069541569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.06955375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2180999999999997e-05, 'source_diff': 1.2180999999999997e-05}, {'time': 0.069554236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.069562583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999991889e-06, 'source_diff': 8.346999999991889e-06}, {'time': 0.069563069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.06957025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999994997e-06, 'source_diff': 7.180999999994997e-06}, {'time': 0.069570736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.069581778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1042000000002772e-05, 'source_diff': 1.1042000000002772e-05}, {'time': 0.06958225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069596444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4193999999995155e-05, 'source_diff': 1.4193999999995155e-05}, {'time': 0.069596917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069610097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3180000000001524e-05, 'source_diff': 1.3180000000001524e-05}, {'time': 0.069610569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069621097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.052800000000964e-05, 'source_diff': 1.052800000000964e-05}, {'time': 0.069621569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.069629764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.069630236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069638944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999996163e-06, 'source_diff': 8.707999999996163e-06}, {'time': 0.069639417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069648764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347000000006767e-06, 'source_diff': 9.347000000006767e-06}, {'time': 0.06964925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:40.698" endtime="20201112 09:42:40.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.693" endtime="20201112 09:42:40.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:40.729" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 1.2431000000007186e-05, 4.7199999998748243e-07, 8.458000000002852e-06, 4.720000000013602e-07, 8.695000000003006e-06, 4.720000000013602e-07, 7.346999999990889e-06, 4...</msg>
<status status="PASS" starttime="20201112 09:42:40.705" endtime="20201112 09:42:40.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.733" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:40.732" endtime="20201112 09:42:40.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.737" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.2431000000007186e-05, 4.7199999998748243e-07, 8.458000000002852e-06, 4.720000000013602e-07, 8.695000000003006e-06, 4.720000000013602e-07, 7.346999999990889e-06, 4.86000000007869e-07, 6.431000000001186e-06, 4.720000000013602e-07, 1.3777999999992074e-05, 4.86000000007869e-07, 1.1846999999995389e-05, 4.859999999939912e-07, 4.375000000000906e-06, 4.7300000000083386e-07, 1.4514000000007132e-05, 4.720000000013602e-07, 1.0527999999995763e-05, 4.720000000013602e-07, 1.1361000000001398e-05, 4.720000000013602e-07, 1.3694999999994129e-05, 4.720000000013602e-07, 6.360999999996397e-06, 4.720000000013602e-07, 8.250000000001312e-06, 4.720000000013602e-07, 1.3973000000000457e-05, 4.859999999939912e-07, 1.3014000000005632e-05, 4.859999999939912e-07, 4.847000000002266e-06, 4.86000000007869e-07, 6.694000000001532e-06, 4.7300000000083386e-07, 1.386099999999002e-05, 4.720000000013602e-07, 9.02800000000814e-06, 4.720000000013602e-07, 1.0693999999991655e-05, 4.7300000000083386e-07, 4.360999999994397e-06, 4.720000000013602e-07, 1.1361000000001398e-05, 4.720000000013602e-07, 1.058400000000792e-05, 4.7199999998748243e-07, 5.319000000003626e-06, 4.7300000000083386e-07, 4.347000000001766e-06, 4.720000000013602e-07, 8.694000000003532e-06, 4.869999999934649e-07, 9.207999999996663e-06, 4.720000000013602e-07, 1.4667000000009867e-05, 4.859999999939912e-07, 1.1861000000001898e-05, 4.720000000013602e-07, 5.541999999997271e-06, 4.720000000013602e-07, 1.3513999999992254e-05, 4.720000000013602e-07, 4.52800000000364e-06, 4.720000000013602e-07, 1.3527999999998763e-05, 4.720000000013602e-07, 1.2208999999999137e-05, 4.720000000013602e-07, 1.4027999999999263e-05, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.3361000000003398e-05, 4.720000000013602e-07, 6.0139999999986316e-06, 4.859999999939912e-07, 1.2180999999999997e-05, 4.86000000007869e-07, 8.346999999991889e-06, 4.86000000007869e-07, 7.180999999994997e-06, 4.859999999939912e-07, 1.1042000000002772e-05, 4.720000000013602e-07, 1.4193999999995155e-05, 4.7300000000083386e-07, 1.3180000000001524e-05, 4.720000000013602e-07, 1.052800000000964e-05, 4.7199999998748243e-07, 8.195000000002506e-06, 4.720000000013602e-07, 8.707999999996163e-06, 4.7300000000083386e-07, 9.347000000006767e-06, 4.859999999939912e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 1.2431000000007186e-05, 4.7199999998748243e-07, 8.458000000002852e-06, 4.720000000013602e-07, 8.695000000003006e-06, 4.720000000013602e-07, 7.346999999990889e-06, 4.86000000007869e-07, 6.431000000001186e-06, 4.720000000013602e-07, 1.3777999999992074e-05, 4.86000000007869e-07, 1.1846999999995389e-05, 4.859999999939912e-07, 4.375000000000906e-06, 4.7300000000083386e-07, 1.4514000000007132e-05, 4.720000000013602e-07, 1.0527999999995763e-05, 4.720000000013602e-07, 1.1361000000001398e-05, 4.720000000013602e-07, 1.3694999999994129e-05, 4.720000000013602e-07, 6.360999999996397e-06, 4.720000000013602e-07, 8.250000000001312e-06, 4.720000000013602e-07, 1.3973000000000457e-05, 4.859999999939912e-07, 1.3014000000005632e-05, 4.859999999939912e-07, 4.847000000002266e-06, 4.86000000007869e-07, 6.694000000001532e-06, 4.7300000000083386e-07, 1.386099999999002e-05, 4.720000000013602e-07, 9.02800000000814e-06, 4.720000000013602e-07, 1.0693999999991655e-05, 4.7300000000083386e-07, 4.360999999994397e-06, 4.720000000013602e-07, 1.1361000000001398e-05, 4.720000000013602e-07, 1.058400000000792e-05, 4.7199999998748243e-07, 5.319000000003626e-06, 4.7300000000083386e-07, 4.347000000001766e-06, 4.720000000013602e-07, 8.694000000003532e-06, 4.869999999934649e-07, 9.207999999996663e-06, 4.720000000013602e-07, 1.4667000000009867e-05, 4.859999999939912e-07, 1.1861000000001898e-05, 4.720000000013602e-07, 5.541999999997271e-06, 4.720000000013602e-07, 1.3513999999992254e-05, 4.720000000013602e-07, 4.52800000000364e-06, 4.720000000013602e-07, 1.3527999999998763e-05, 4.720000000013602e-07, 1.2208999999999137e-05, 4.720000000013602e-07, 1.4027999999999263e-05, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.3361000000003398e-05, 4.720000000013602e-07, 6.0139999999986316e-06, 4.859999999939912e-07, 1.2180999999999997e-05, 4.86000000007869e-07, 8.346999999991889e-06, 4.86000000007869e-07, 7.180999999994997e-06, 4.859999999939912e-07, 1.1042000000002772e-05, 4.720000000013602e-07, 1.4193999999995155e-05, 4.7300000000083386e-07, 1.3180000000001524e-05, 4.720000000013602e-07, 1.052800000000964e-05, 4.7199999998748243e-07, 8.195000000002506e-06, 4.720000000013602e-07, 8.707999999996163e-06, 4.7300000000083386e-07, 9.347000000006767e-06, 4.859999999939912e-07], 'sourcetime': [0.069141889, 0.069142361, 0.069154792, 0.069155264, 0.069163722, 0.069164194, 0.069172889, 0.069173361, 0.069180708, 0.069181194, 0.069187625, 0.069188097, 0.069201875, 0.069202361, 0.069214208, 0.069214694, 0.069219069, 0.069219542, 0.069234056, 0.069234528, 0.069245056, 0.069245528, 0.069256889, 0.069257361, 0.069271056, 0.069271528, 0.069277889, 0.069278361, 0.069286611, 0.069287083, 0.069301056, 0.069301542, 0.069314556, 0.069315042, 0.069319889, 0.069320375, 0.069327069, 0.069327542, 0.069341403, 0.069341875, 0.069350903, 0.069351375, 0.069362069, 0.069362542, 0.069366903, 0.069367375, 0.069378736, 0.069379208, 0.069389792, 0.069390264, 0.069395583, 0.069396056, 0.069400403, 0.069400875, 0.069409569, 0.069410056, 0.069419264, 0.069419736, 0.069434403, 0.069434889, 0.06944675, 0.069447222, 0.069452764, 0.069453236, 0.06946675, 0.069467222, 0.06947175, 0.069472222, 0.06948575, 0.069486222, 0.069498431, 0.069498903, 0.069512931, 0.069513403, 0.069520764, 0.069521236, 0.069534597, 0.069535069, 0.069541083, 0.069541569, 0.06955375, 0.069554236, 0.069562583, 0.069563069, 0.06957025, 0.069570736, 0.069581778, 0.06958225, 0.069596444, 0.069596917, 0.069610097, 0.069610569, 0.069621097, 0.069621569, 0.069629764, 0.069630236, 0.069638944, 0.069639417, 0.069648764, 0.06964925]}</msg>
<status status="PASS" starttime="20201112 09:42:40.734" endtime="20201112 09:42:40.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.730" endtime="20201112 09:42:40.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:40.742" level="INFO">${RESULT} = [{'time': 0.069142361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069155264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:40.739" endtime="20201112 09:42:40.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:40.756" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.73000...</msg>
<status status="PASS" starttime="20201112 09:42:40.744" endtime="20201112 09:42:40.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.760" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:40.759" endtime="20201112 09:42:40.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.763" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.869999999934649e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999939912e-07]</msg>
<status status="PASS" starttime="20201112 09:42:40.761" endtime="20201112 09:42:40.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.757" endtime="20201112 09:42:40.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.766" endtime="20201112 09:42:40.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:40.769" endtime="20201112 09:42:40.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.768" endtime="20201112 09:42:40.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.764" endtime="20201112 09:42:40.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.360" endtime="20201112 09:42:40.790"></status>
</kw>
<msg timestamp="20201112 09:42:40.790" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.800" endtime="20201112 09:42:40.810"></status>
</kw>
<msg timestamp="20201112 09:42:40.811" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:40.799" endtime="20201112 09:42:40.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.813" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:40.812" endtime="20201112 09:42:40.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.814" endtime="20201112 09:42:40.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.794" endtime="20201112 09:42:40.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.792" endtime="20201112 09:42:40.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.823" endtime="20201112 09:42:41.106"></status>
</kw>
<msg timestamp="20201112 09:42:41.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020883389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020883861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:40.822" endtime="20201112 09:42:41.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020883389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020883861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:41.110" endtime="20201112 09:42:41.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.119" endtime="20201112 09:42:41.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.819" endtime="20201112 09:42:41.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.817" endtime="20201112 09:42:41.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.125" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:41.124" endtime="20201112 09:42:41.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.130" level="INFO">VALUE: [{'time': 0.020883389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020883861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020895681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1819999999999192e-05, 'source_diff': 1.1819999999999192e-05}, {'time': 0.020896153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020909514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.020909986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0209145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.020914972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020927514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2542000000000803e-05, 'source_diff': 1.2542000000000803e-05}, {'time': 0.020927986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020934333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.347000000000297e-06, 'source_diff': 6.347000000000297e-06}, {'time': 0.020934806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020939167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.020939639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020948333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.020948806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020953861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.020954333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020962, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.020962486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020976833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4347000000001359e-05, 'source_diff': 1.4347000000001359e-05}, {'time': 0.020977319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020983361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.020983833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020994, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.020994486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021006542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2055999999999872e-05, 'source_diff': 1.2055999999999872e-05}, {'time': 0.021007014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021020528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.021021, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021033514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.021033986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021040194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.021040667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021052514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1847000000002328e-05, 'source_diff': 1.1847000000002328e-05}, {'time': 0.021052986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021060847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.021061319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021067847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.528000000002171e-06, 'source_diff': 6.528000000002171e-06}, {'time': 0.021068319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021078528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0209000000000606e-05, 'source_diff': 1.0209000000000606e-05}, {'time': 0.021079, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021091347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.021091833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021096847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.021097333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021110528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3195000000000567e-05, 'source_diff': 1.3195000000000567e-05}, {'time': 0.021111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021115556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555999999999311e-06, 'source_diff': 4.555999999999311e-06}, {'time': 0.021116028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021130694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4665999999999985e-05, 'source_diff': 1.4665999999999985e-05}, {'time': 0.021131167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021143194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2027000000001259e-05, 'source_diff': 1.2027000000001259e-05}, {'time': 0.021143667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021148264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.021148736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021153875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.021154347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021168875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.021169347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021174194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.021174667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021182028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.0211825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021195542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3042000000001303e-05, 'source_diff': 1.3042000000001303e-05}, {'time': 0.021196014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021206028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.021206514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021210681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.021211153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021223681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2528000000001233e-05, 'source_diff': 1.2528000000001233e-05}, {'time': 0.021224153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021229681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.021230153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021241681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1527999999996763e-05, 'source_diff': 1.1527999999996763e-05}, {'time': 0.021242153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021256681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.021257167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021271181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.021271667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021282681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1014000000000163e-05, 'source_diff': 1.1014000000000163e-05}, {'time': 0.021283167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021291569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402000000001103e-06, 'source_diff': 8.402000000001103e-06}, {'time': 0.021292042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021297014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.0212975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021308903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1403000000000107e-05, 'source_diff': 1.1403000000000107e-05}, {'time': 0.021309375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021320194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0819000000002188e-05, 'source_diff': 1.0819000000002188e-05}, {'time': 0.021320667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021332694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.202699999999779e-05, 'source_diff': 1.202699999999779e-05}, {'time': 0.021333167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021338361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.021338833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021352875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4041999999998833e-05, 'source_diff': 1.4041999999998833e-05}, {'time': 0.021353347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021358694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.021359167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021373028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.0213735, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:41.126" endtime="20201112 09:42:41.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.122" endtime="20201112 09:42:41.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:41.156" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 1.1819999999999192e-05, 4.720000000013602e-07, 1.3360999999999928e-05, 4.7199999999789077e-07, 4.514000000000601e-06, 4.720000000013602e-07, 1.2542000000000803e-05,...</msg>
<status status="PASS" starttime="20201112 09:42:41.133" endtime="20201112 09:42:41.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.160" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:41.159" endtime="20201112 09:42:41.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.164" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.1819999999999192e-05, 4.720000000013602e-07, 1.3360999999999928e-05, 4.7199999999789077e-07, 4.514000000000601e-06, 4.720000000013602e-07, 1.2542000000000803e-05, 4.7199999999789077e-07, 6.347000000000297e-06, 4.7300000000083386e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 8.694000000000063e-06, 4.7300000000083386e-07, 5.055000000000337e-06, 4.7199999999789077e-07, 7.667000000002866e-06, 4.859999999974607e-07, 1.4347000000001359e-05, 4.860000000009301e-07, 6.041999999997771e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.860000000009301e-07, 1.2055999999999872e-05, 4.720000000013602e-07, 1.3513999999999193e-05, 4.720000000013602e-07, 1.2513999999998193e-05, 4.720000000013602e-07, 6.208000000000602e-06, 4.729999999973644e-07, 1.1847000000002328e-05, 4.7199999999789077e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 1.0209000000000606e-05, 4.720000000013602e-07, 1.2346999999999358e-05, 4.860000000009301e-07, 5.0139999999976315e-06, 4.860000000009301e-07, 1.3195000000000567e-05, 4.720000000013602e-07, 4.555999999999311e-06, 4.7199999999789077e-07, 1.4665999999999985e-05, 4.7300000000083386e-07, 1.2027000000001259e-05, 4.7300000000083386e-07, 4.596999999998547e-06, 4.720000000013602e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 4.846999999998797e-06, 4.7300000000083386e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.3042000000001303e-05, 4.7199999999789077e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 4.166999999999366e-06, 4.720000000013602e-07, 1.2528000000001233e-05, 4.7199999999789077e-07, 5.528000000001171e-06, 4.720000000013602e-07, 1.1527999999996763e-05, 4.720000000013602e-07, 1.4527999999999763e-05, 4.860000000009301e-07, 1.4013999999999693e-05, 4.860000000009301e-07, 1.1014000000000163e-05, 4.859999999974607e-07, 8.402000000001103e-06, 4.7300000000083386e-07, 4.971999999998922e-06, 4.860000000009301e-07, 1.1403000000000107e-05, 4.7199999999789077e-07, 1.0819000000002188e-05, 4.7300000000083386e-07, 1.202699999999779e-05, 4.7300000000083386e-07, 5.194000000000032e-06, 4.720000000013602e-07, 1.4041999999998833e-05, 4.720000000013602e-07, 5.346999999999297e-06, 4.729999999973644e-07, 1.3861000000000429e-05, 4.720000000013602e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 1.1819999999999192e-05, 4.720000000013602e-07, 1.3360999999999928e-05, 4.7199999999789077e-07, 4.514000000000601e-06, 4.720000000013602e-07, 1.2542000000000803e-05, 4.7199999999789077e-07, 6.347000000000297e-06, 4.7300000000083386e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 8.694000000000063e-06, 4.7300000000083386e-07, 5.055000000000337e-06, 4.7199999999789077e-07, 7.667000000002866e-06, 4.859999999974607e-07, 1.4347000000001359e-05, 4.860000000009301e-07, 6.041999999997771e-06, 4.720000000013602e-07, 1.0166999999998427e-05, 4.860000000009301e-07, 1.2055999999999872e-05, 4.720000000013602e-07, 1.3513999999999193e-05, 4.720000000013602e-07, 1.2513999999998193e-05, 4.720000000013602e-07, 6.208000000000602e-06, 4.729999999973644e-07, 1.1847000000002328e-05, 4.7199999999789077e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 1.0209000000000606e-05, 4.720000000013602e-07, 1.2346999999999358e-05, 4.860000000009301e-07, 5.0139999999976315e-06, 4.860000000009301e-07, 1.3195000000000567e-05, 4.720000000013602e-07, 4.555999999999311e-06, 4.7199999999789077e-07, 1.4665999999999985e-05, 4.7300000000083386e-07, 1.2027000000001259e-05, 4.7300000000083386e-07, 4.596999999998547e-06, 4.720000000013602e-07, 5.1389999999977565e-06, 4.720000000013602e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 4.846999999998797e-06, 4.7300000000083386e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.3042000000001303e-05, 4.7199999999789077e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 4.166999999999366e-06, 4.720000000013602e-07, 1.2528000000001233e-05, 4.7199999999789077e-07, 5.528000000001171e-06, 4.720000000013602e-07, 1.1527999999996763e-05, 4.720000000013602e-07, 1.4527999999999763e-05, 4.860000000009301e-07, 1.4013999999999693e-05, 4.860000000009301e-07, 1.1014000000000163e-05, 4.859999999974607e-07, 8.402000000001103e-06, 4.7300000000083386e-07, 4.971999999998922e-06, 4.860000000009301e-07, 1.1403000000000107e-05, 4.7199999999789077e-07, 1.0819000000002188e-05, 4.7300000000083386e-07, 1.202699999999779e-05, 4.7300000000083386e-07, 5.194000000000032e-06, 4.720000000013602e-07, 1.4041999999998833e-05, 4.720000000013602e-07, 5.346999999999297e-06, 4.729999999973644e-07, 1.3861000000000429e-05, 4.720000000013602e-07], 'sourcetime': [0.020883389, 0.020883861, 0.020895681, 0.020896153, 0.020909514, 0.020909986, 0.0209145, 0.020914972, 0.020927514, 0.020927986, 0.020934333, 0.020934806, 0.020939167, 0.020939639, 0.020948333, 0.020948806, 0.020953861, 0.020954333, 0.020962, 0.020962486, 0.020976833, 0.020977319, 0.020983361, 0.020983833, 0.020994, 0.020994486, 0.021006542, 0.021007014, 0.021020528, 0.021021, 0.021033514, 0.021033986, 0.021040194, 0.021040667, 0.021052514, 0.021052986, 0.021060847, 0.021061319, 0.021067847, 0.021068319, 0.021078528, 0.021079, 0.021091347, 0.021091833, 0.021096847, 0.021097333, 0.021110528, 0.021111, 0.021115556, 0.021116028, 0.021130694, 0.021131167, 0.021143194, 0.021143667, 0.021148264, 0.021148736, 0.021153875, 0.021154347, 0.021168875, 0.021169347, 0.021174194, 0.021174667, 0.021182028, 0.0211825, 0.021195542, 0.021196014, 0.021206028, 0.021206514, 0.021210681, 0.021211153, 0.021223681, 0.021224153, 0.021229681, 0.021230153, 0.021241681, 0.021242153, 0.021256681, 0.021257167, 0.021271181, 0.021271667, 0.021282681, 0.021283167, 0.021291569, 0.021292042, 0.021297014, 0.0212975, 0.021308903, 0.021309375, 0.021320194, 0.021320667, 0.021332694, 0.021333167, 0.021338361, 0.021338833, 0.021352875, 0.021353347, 0.021358694, 0.021359167, 0.021373028, 0.0213735]}</msg>
<status status="PASS" starttime="20201112 09:42:41.161" endtime="20201112 09:42:41.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.157" endtime="20201112 09:42:41.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:41.170" level="INFO">${RESULT} = [{'time': 0.020883861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020896153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:41.167" endtime="20201112 09:42:41.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:41.184" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4...</msg>
<status status="PASS" starttime="20201112 09:42:41.171" endtime="20201112 09:42:41.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.188" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:41.187" endtime="20201112 09:42:41.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.191" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:41.189" endtime="20201112 09:42:41.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.185" endtime="20201112 09:42:41.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.194" endtime="20201112 09:42:41.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:41.197" endtime="20201112 09:42:41.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.196" endtime="20201112 09:42:41.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.192" endtime="20201112 09:42:41.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.791" endtime="20201112 09:42:41.218"></status>
</kw>
<msg timestamp="20201112 09:42:41.218" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.226" endtime="20201112 09:42:41.235"></status>
</kw>
<msg timestamp="20201112 09:42:41.236" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.224" endtime="20201112 09:42:41.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.238" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.237" endtime="20201112 09:42:41.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.239" endtime="20201112 09:42:41.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.222" endtime="20201112 09:42:41.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.220" endtime="20201112 09:42:41.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.248" endtime="20201112 09:42:41.538"></status>
</kw>
<msg timestamp="20201112 09:42:41.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018607347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018607819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:41.247" endtime="20201112 09:42:41.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018607347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018607819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:41.542" endtime="20201112 09:42:41.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.551" endtime="20201112 09:42:41.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.244" endtime="20201112 09:42:41.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.243" endtime="20201112 09:42:41.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.557" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:41.556" endtime="20201112 09:42:41.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.562" level="INFO">VALUE: [{'time': 0.018607347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018607819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018619181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1361999999997402e-05, 'source_diff': 1.1361999999997402e-05}, {'time': 0.018619667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018628347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.018628833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018638222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.018638694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018649194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0500000000000093e-05, 'source_diff': 1.0500000000000093e-05}, {'time': 0.018649667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018662194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.252699999999829e-05, 'source_diff': 1.252699999999829e-05}, {'time': 0.018662667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018669861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.018670333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018682694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.018683167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018687333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.018687819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018702333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.018702819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018709014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.018709486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018718167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.018718653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018732014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3361000000003398e-05, 'source_diff': 1.3361000000003398e-05}, {'time': 0.018732486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018741514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.018741986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018748514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.528000000002171e-06, 'source_diff': 6.528000000002171e-06}, {'time': 0.018748986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018761347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2361000000002398e-05, 'source_diff': 1.2361000000002398e-05}, {'time': 0.018761819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018768181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.36199999999934e-06, 'source_diff': 6.36199999999934e-06}, {'time': 0.018768653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018780069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1416000000000204e-05, 'source_diff': 1.1416000000000204e-05}, {'time': 0.018780542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018785847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.018786319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018797847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.018798333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018810181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1847999999998332e-05, 'source_diff': 1.1847999999998332e-05}, {'time': 0.018810667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018821681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1014000000000163e-05, 'source_diff': 1.1014000000000163e-05}, {'time': 0.018822167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018831681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999998662e-06, 'source_diff': 9.513999999998662e-06}, {'time': 0.018832167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018844028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1860999999998428e-05, 'source_diff': 1.1860999999998428e-05}, {'time': 0.0188445, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018857528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3027999999998263e-05, 'source_diff': 1.3027999999998263e-05}, {'time': 0.018858, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018872042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4041999999998833e-05, 'source_diff': 1.4041999999998833e-05}, {'time': 0.018872514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018882361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.018882833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018896694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3860999999996959e-05, 'source_diff': 1.3860999999996959e-05}, {'time': 0.018897167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018905194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.027000000000728e-06, 'source_diff': 8.027000000000728e-06}, {'time': 0.018905667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018916194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0526999999999759e-05, 'source_diff': 1.0526999999999759e-05}, {'time': 0.018916681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018924528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.018925014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018938708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3693999999998124e-05, 'source_diff': 1.3693999999998124e-05}, {'time': 0.018939181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018949361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180000000001993e-05, 'source_diff': 1.0180000000001993e-05}, {'time': 0.018949847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018954528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.018955014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018959361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.018959847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018967083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.018967556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018977875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0319000000001688e-05, 'source_diff': 1.0319000000001688e-05}, {'time': 0.018978347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018992875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.018993347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019005542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194999999999567e-05, 'source_diff': 1.2194999999999567e-05}, {'time': 0.019006014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019014875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.019015347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019025708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.019026181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019036889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0708000000001633e-05, 'source_diff': 1.0708000000001633e-05}, {'time': 0.019037361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019046389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.019046861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019060375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.019060861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019070222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.361000000002867e-06, 'source_diff': 9.361000000002867e-06}, {'time': 0.019070694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019077056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.36199999999934e-06, 'source_diff': 6.36199999999934e-06}, {'time': 0.019077528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019084708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.179999999998993e-06, 'source_diff': 7.179999999998993e-06}, {'time': 0.019085194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019090236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.019090708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019105056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4347999999997363e-05, 'source_diff': 1.4347999999997363e-05}, {'time': 0.019105528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019114292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.019114764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:41.558" endtime="20201112 09:42:41.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.554" endtime="20201112 09:42:41.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:41.589" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 1.1361999999997402e-05, 4.860000000009301e-07, 8.680000000000493e-06, 4.860000000009301e-07, 9.388999999998537e-06, 4.720000000013602e-07, 1.0500000000000093e-05, 4...</msg>
<status status="PASS" starttime="20201112 09:42:41.565" endtime="20201112 09:42:41.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.593" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:41.592" endtime="20201112 09:42:41.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.597" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.1361999999997402e-05, 4.860000000009301e-07, 8.680000000000493e-06, 4.860000000009301e-07, 9.388999999998537e-06, 4.720000000013602e-07, 1.0500000000000093e-05, 4.7300000000083386e-07, 1.252699999999829e-05, 4.7300000000083386e-07, 7.193999999998563e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.7300000000083386e-07, 4.165999999999892e-06, 4.860000000009301e-07, 1.4514000000000193e-05, 4.859999999974607e-07, 6.195000000000506e-06, 4.720000000013602e-07, 8.680999999999967e-06, 4.859999999974607e-07, 1.3361000000003398e-05, 4.7199999999789077e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 1.2361000000002398e-05, 4.7199999999789077e-07, 6.36199999999934e-06, 4.720000000013602e-07, 1.1416000000000204e-05, 4.7300000000083386e-07, 5.305000000000587e-06, 4.7199999999789077e-07, 1.1528000000000233e-05, 4.860000000009301e-07, 1.1847999999998332e-05, 4.860000000009301e-07, 1.1014000000000163e-05, 4.860000000009301e-07, 9.513999999998662e-06, 4.860000000009301e-07, 1.1860999999998428e-05, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 1.4041999999998833e-05, 4.720000000013602e-07, 9.847000000000328e-06, 4.720000000013602e-07, 1.3860999999996959e-05, 4.7300000000083386e-07, 8.027000000000728e-06, 4.7300000000083386e-07, 1.0526999999999759e-05, 4.870000000004038e-07, 7.846999999998328e-06, 4.860000000009301e-07, 1.3693999999998124e-05, 4.7300000000083386e-07, 1.0180000000001993e-05, 4.859999999974607e-07, 4.680999999999436e-06, 4.860000000009301e-07, 4.347000000001766e-06, 4.859999999974607e-07, 7.236000000000742e-06, 4.7300000000083386e-07, 1.0319000000001688e-05, 4.7199999999789077e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.2194999999999567e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4.7199999999789077e-07, 1.0361000000000398e-05, 4.7300000000083386e-07, 1.0708000000001633e-05, 4.7199999999789077e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.3513999999999193e-05, 4.859999999974607e-07, 9.361000000002867e-06, 4.7199999999789077e-07, 6.36199999999934e-06, 4.720000000013602e-07, 7.179999999998993e-06, 4.860000000009301e-07, 5.042000000000241e-06, 4.720000000013602e-07, 1.4347999999997363e-05, 4.720000000013602e-07, 8.764000000001382e-06, 4.7199999999789077e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 1.1361999999997402e-05, 4.860000000009301e-07, 8.680000000000493e-06, 4.860000000009301e-07, 9.388999999998537e-06, 4.720000000013602e-07, 1.0500000000000093e-05, 4.7300000000083386e-07, 1.252699999999829e-05, 4.7300000000083386e-07, 7.193999999998563e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.7300000000083386e-07, 4.165999999999892e-06, 4.860000000009301e-07, 1.4514000000000193e-05, 4.859999999974607e-07, 6.195000000000506e-06, 4.720000000013602e-07, 8.680999999999967e-06, 4.859999999974607e-07, 1.3361000000003398e-05, 4.7199999999789077e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 1.2361000000002398e-05, 4.7199999999789077e-07, 6.36199999999934e-06, 4.720000000013602e-07, 1.1416000000000204e-05, 4.7300000000083386e-07, 5.305000000000587e-06, 4.7199999999789077e-07, 1.1528000000000233e-05, 4.860000000009301e-07, 1.1847999999998332e-05, 4.860000000009301e-07, 1.1014000000000163e-05, 4.860000000009301e-07, 9.513999999998662e-06, 4.860000000009301e-07, 1.1860999999998428e-05, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 1.4041999999998833e-05, 4.720000000013602e-07, 9.847000000000328e-06, 4.720000000013602e-07, 1.3860999999996959e-05, 4.7300000000083386e-07, 8.027000000000728e-06, 4.7300000000083386e-07, 1.0526999999999759e-05, 4.870000000004038e-07, 7.846999999998328e-06, 4.860000000009301e-07, 1.3693999999998124e-05, 4.7300000000083386e-07, 1.0180000000001993e-05, 4.859999999974607e-07, 4.680999999999436e-06, 4.860000000009301e-07, 4.347000000001766e-06, 4.859999999974607e-07, 7.236000000000742e-06, 4.7300000000083386e-07, 1.0319000000001688e-05, 4.7199999999789077e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.2194999999999567e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4.7199999999789077e-07, 1.0361000000000398e-05, 4.7300000000083386e-07, 1.0708000000001633e-05, 4.7199999999789077e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.3513999999999193e-05, 4.859999999974607e-07, 9.361000000002867e-06, 4.7199999999789077e-07, 6.36199999999934e-06, 4.720000000013602e-07, 7.179999999998993e-06, 4.860000000009301e-07, 5.042000000000241e-06, 4.720000000013602e-07, 1.4347999999997363e-05, 4.720000000013602e-07, 8.764000000001382e-06, 4.7199999999789077e-07], 'sourcetime': [0.018607347, 0.018607819, 0.018619181, 0.018619667, 0.018628347, 0.018628833, 0.018638222, 0.018638694, 0.018649194, 0.018649667, 0.018662194, 0.018662667, 0.018669861, 0.018670333, 0.018682694, 0.018683167, 0.018687333, 0.018687819, 0.018702333, 0.018702819, 0.018709014, 0.018709486, 0.018718167, 0.018718653, 0.018732014, 0.018732486, 0.018741514, 0.018741986, 0.018748514, 0.018748986, 0.018761347, 0.018761819, 0.018768181, 0.018768653, 0.018780069, 0.018780542, 0.018785847, 0.018786319, 0.018797847, 0.018798333, 0.018810181, 0.018810667, 0.018821681, 0.018822167, 0.018831681, 0.018832167, 0.018844028, 0.0188445, 0.018857528, 0.018858, 0.018872042, 0.018872514, 0.018882361, 0.018882833, 0.018896694, 0.018897167, 0.018905194, 0.018905667, 0.018916194, 0.018916681, 0.018924528, 0.018925014, 0.018938708, 0.018939181, 0.018949361, 0.018949847, 0.018954528, 0.018955014, 0.018959361, 0.018959847, 0.018967083, 0.018967556, 0.018977875, 0.018978347, 0.018992875, 0.018993347, 0.019005542, 0.019006014, 0.019014875, 0.019015347, 0.019025708, 0.019026181, 0.019036889, 0.019037361, 0.019046389, 0.019046861, 0.019060375, 0.019060861, 0.019070222, 0.019070694, 0.019077056, 0.019077528, 0.019084708, 0.019085194, 0.019090236, 0.019090708, 0.019105056, 0.019105528, 0.019114292, 0.019114764]}</msg>
<status status="PASS" starttime="20201112 09:42:41.594" endtime="20201112 09:42:41.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.590" endtime="20201112 09:42:41.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:41.603" level="INFO">${RESULT} = [{'time': 0.018607819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018619667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:41.600" endtime="20201112 09:42:41.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:41.616" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.8...</msg>
<status status="PASS" starttime="20201112 09:42:41.604" endtime="20201112 09:42:41.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.621" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:41.620" endtime="20201112 09:42:41.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.623" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 09:42:41.622" endtime="20201112 09:42:41.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.617" endtime="20201112 09:42:41.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.626" endtime="20201112 09:42:41.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:41.630" endtime="20201112 09:42:41.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.628" endtime="20201112 09:42:41.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.625" endtime="20201112 09:42:41.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.219" endtime="20201112 09:42:41.650"></status>
</kw>
<msg timestamp="20201112 09:42:41.651" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.658" endtime="20201112 09:42:41.668"></status>
</kw>
<msg timestamp="20201112 09:42:41.669" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.657" endtime="20201112 09:42:41.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.671" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.670" endtime="20201112 09:42:41.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.673" endtime="20201112 09:42:41.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.654" endtime="20201112 09:42:41.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.652" endtime="20201112 09:42:41.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.683" endtime="20201112 09:42:41.971"></status>
</kw>
<msg timestamp="20201112 09:42:41.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018491792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018492264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:41.681" endtime="20201112 09:42:41.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018491792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018492264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:41.975" endtime="20201112 09:42:41.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.984" endtime="20201112 09:42:41.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.678" endtime="20201112 09:42:41.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.676" endtime="20201112 09:42:41.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.990" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:41.989" endtime="20201112 09:42:41.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.995" level="INFO">VALUE: [{'time': 0.018491792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018492264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018501792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527999999998232e-06, 'source_diff': 9.527999999998232e-06}, {'time': 0.018502264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018508792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.018509264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018523625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.018524111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018531292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.181000000001936e-06, 'source_diff': 7.181000000001936e-06}, {'time': 0.018531778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018544528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2750000000002343e-05, 'source_diff': 1.2750000000002343e-05}, {'time': 0.018545, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018558806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3806000000001623e-05, 'source_diff': 1.3806000000001623e-05}, {'time': 0.018559278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018568653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.375000000002437e-06, 'source_diff': 9.375000000002437e-06}, {'time': 0.018569125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018583667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4542000000002803e-05, 'source_diff': 1.4542000000002803e-05}, {'time': 0.018584139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018590639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.018591111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018600806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.695000000000537e-06, 'source_diff': 9.695000000000537e-06}, {'time': 0.018601278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018606653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.018607125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018621806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4681000000002498e-05, 'source_diff': 1.4681000000002498e-05}, {'time': 0.018622278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018632806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.018633278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018638806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.018639292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018650667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1375000000000968e-05, 'source_diff': 1.1375000000000968e-05}, {'time': 0.018651139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018656861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018657333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018669486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2152999999997388e-05, 'source_diff': 1.2152999999997388e-05}, {'time': 0.018669958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018684486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.018684958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018695819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0860999999997428e-05, 'source_diff': 1.0860999999997428e-05}, {'time': 0.018696292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018702333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041000000001767e-06, 'source_diff': 6.041000000001767e-06}, {'time': 0.018702806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018716653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847000000000859e-05, 'source_diff': 1.3847000000000859e-05}, {'time': 0.018717125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018728319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1193999999999094e-05, 'source_diff': 1.1193999999999094e-05}, {'time': 0.018728792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018742486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3693999999998124e-05, 'source_diff': 1.3693999999998124e-05}, {'time': 0.018742958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018755167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2208999999999137e-05, 'source_diff': 1.2208999999999137e-05}, {'time': 0.018755639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018764653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999998162e-06, 'source_diff': 9.013999999998162e-06}, {'time': 0.018765139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018770333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.018770806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018775375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.568999999999407e-06, 'source_diff': 4.568999999999407e-06}, {'time': 0.018775847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018784319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.018784806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018792486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.679999999999493e-06, 'source_diff': 7.679999999999493e-06}, {'time': 0.018792972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018800333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.018800806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4193999999998624e-05, 'source_diff': 1.4193999999998624e-05}, {'time': 0.018815472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0188265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027999999999732e-05, 'source_diff': 1.1027999999999732e-05}, {'time': 0.018826972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018831333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.018831806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018837833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.026999999998728e-06, 'source_diff': 6.026999999998728e-06}, {'time': 0.018838306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0188445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.018844972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018858, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3027999999998263e-05, 'source_diff': 1.3027999999998263e-05}, {'time': 0.018858472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018872208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3736000000000304e-05, 'source_diff': 1.3736000000000304e-05}, {'time': 0.018872681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018882014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.018882486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018888014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.018888486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0189, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.018900486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018910847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.018911319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018924014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2695000000000067e-05, 'source_diff': 1.2695000000000067e-05}, {'time': 0.018924486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018930347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018930819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018939694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.018940167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018953014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.018953486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018959181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.018959653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018972181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2528000000001233e-05, 'source_diff': 1.2528000000001233e-05}, {'time': 0.018972653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018982847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194000000001563e-05, 'source_diff': 1.0194000000001563e-05}, {'time': 0.018983319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018988014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.695000000002475e-06, 'source_diff': 4.695000000002475e-06}, {'time': 0.018988486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:41.991" endtime="20201112 09:42:41.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.987" endtime="20201112 09:42:41.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:42.022" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 9.527999999998232e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.4360999999997459e-05, 4.860000000009301e-07, 7.181000000001936e-06, 4...</msg>
<status status="PASS" starttime="20201112 09:42:41.998" endtime="20201112 09:42:42.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.025" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:42.025" endtime="20201112 09:42:42.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.030" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 9.527999999998232e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.4360999999997459e-05, 4.860000000009301e-07, 7.181000000001936e-06, 4.859999999974607e-07, 1.2750000000002343e-05, 4.7199999999789077e-07, 1.3806000000001623e-05, 4.7199999999789077e-07, 9.375000000002437e-06, 4.7199999999789077e-07, 1.4542000000002803e-05, 4.7199999999789077e-07, 6.499999999999562e-06, 4.720000000013602e-07, 9.695000000000537e-06, 4.7199999999789077e-07, 5.375000000001906e-06, 4.7199999999789077e-07, 1.4681000000002498e-05, 4.7199999999789077e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 5.528000000001171e-06, 4.859999999974607e-07, 1.1375000000000968e-05, 4.720000000013602e-07, 5.721999999999672e-06, 4.720000000013602e-07, 1.2152999999997388e-05, 4.720000000013602e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.0860999999997428e-05, 4.7300000000083386e-07, 6.041000000001767e-06, 4.729999999973644e-07, 1.3847000000000859e-05, 4.720000000013602e-07, 1.1193999999999094e-05, 4.7300000000083386e-07, 1.3693999999998124e-05, 4.720000000013602e-07, 1.2208999999999137e-05, 4.720000000013602e-07, 9.013999999998162e-06, 4.860000000009301e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 4.568999999999407e-06, 4.7199999999789077e-07, 8.472000000002422e-06, 4.870000000004038e-07, 7.679999999999493e-06, 4.860000000009301e-07, 7.360999999997397e-06, 4.7300000000083386e-07, 1.4193999999998624e-05, 4.720000000013602e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 4.360999999997867e-06, 4.7300000000083386e-07, 6.026999999998728e-06, 4.7300000000083386e-07, 6.194000000001032e-06, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 1.3736000000000304e-05, 4.729999999973644e-07, 9.333000000000258e-06, 4.720000000013602e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 1.2695000000000067e-05, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 1.2846999999999859e-05, 4.7199999999789077e-07, 5.695000000000006e-06, 4.720000000013602e-07, 1.2528000000001233e-05, 4.7199999999789077e-07, 1.0194000000001563e-05, 4.7199999999789077e-07, 4.695000000002475e-06, 4.7199999999789077e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 9.527999999998232e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.4360999999997459e-05, 4.860000000009301e-07, 7.181000000001936e-06, 4.859999999974607e-07, 1.2750000000002343e-05, 4.7199999999789077e-07, 1.3806000000001623e-05, 4.7199999999789077e-07, 9.375000000002437e-06, 4.7199999999789077e-07, 1.4542000000002803e-05, 4.7199999999789077e-07, 6.499999999999562e-06, 4.720000000013602e-07, 9.695000000000537e-06, 4.7199999999789077e-07, 5.375000000001906e-06, 4.7199999999789077e-07, 1.4681000000002498e-05, 4.7199999999789077e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 5.528000000001171e-06, 4.859999999974607e-07, 1.1375000000000968e-05, 4.720000000013602e-07, 5.721999999999672e-06, 4.720000000013602e-07, 1.2152999999997388e-05, 4.720000000013602e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.0860999999997428e-05, 4.7300000000083386e-07, 6.041000000001767e-06, 4.729999999973644e-07, 1.3847000000000859e-05, 4.720000000013602e-07, 1.1193999999999094e-05, 4.7300000000083386e-07, 1.3693999999998124e-05, 4.720000000013602e-07, 1.2208999999999137e-05, 4.720000000013602e-07, 9.013999999998162e-06, 4.860000000009301e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 4.568999999999407e-06, 4.7199999999789077e-07, 8.472000000002422e-06, 4.870000000004038e-07, 7.679999999999493e-06, 4.860000000009301e-07, 7.360999999997397e-06, 4.7300000000083386e-07, 1.4193999999998624e-05, 4.720000000013602e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 4.360999999997867e-06, 4.7300000000083386e-07, 6.026999999998728e-06, 4.7300000000083386e-07, 6.194000000001032e-06, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 1.3736000000000304e-05, 4.729999999973644e-07, 9.333000000000258e-06, 4.720000000013602e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 1.2695000000000067e-05, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 1.2846999999999859e-05, 4.7199999999789077e-07, 5.695000000000006e-06, 4.720000000013602e-07, 1.2528000000001233e-05, 4.7199999999789077e-07, 1.0194000000001563e-05, 4.7199999999789077e-07, 4.695000000002475e-06, 4.7199999999789077e-07], 'sourcetime': [0.018491792, 0.018492264, 0.018501792, 0.018502264, 0.018508792, 0.018509264, 0.018523625, 0.018524111, 0.018531292, 0.018531778, 0.018544528, 0.018545, 0.018558806, 0.018559278, 0.018568653, 0.018569125, 0.018583667, 0.018584139, 0.018590639, 0.018591111, 0.018600806, 0.018601278, 0.018606653, 0.018607125, 0.018621806, 0.018622278, 0.018632806, 0.018633278, 0.018638806, 0.018639292, 0.018650667, 0.018651139, 0.018656861, 0.018657333, 0.018669486, 0.018669958, 0.018684486, 0.018684958, 0.018695819, 0.018696292, 0.018702333, 0.018702806, 0.018716653, 0.018717125, 0.018728319, 0.018728792, 0.018742486, 0.018742958, 0.018755167, 0.018755639, 0.018764653, 0.018765139, 0.018770333, 0.018770806, 0.018775375, 0.018775847, 0.018784319, 0.018784806, 0.018792486, 0.018792972, 0.018800333, 0.018800806, 0.018815, 0.018815472, 0.0188265, 0.018826972, 0.018831333, 0.018831806, 0.018837833, 0.018838306, 0.0188445, 0.018844972, 0.018858, 0.018858472, 0.018872208, 0.018872681, 0.018882014, 0.018882486, 0.018888014, 0.018888486, 0.0189, 0.018900486, 0.018910847, 0.018911319, 0.018924014, 0.018924486, 0.018930347, 0.018930819, 0.018939694, 0.018940167, 0.018953014, 0.018953486, 0.018959181, 0.018959653, 0.018972181, 0.018972653, 0.018982847, 0.018983319, 0.018988014, 0.018988486]}</msg>
<status status="PASS" starttime="20201112 09:42:42.027" endtime="20201112 09:42:42.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.023" endtime="20201112 09:42:42.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:42.035" level="INFO">${RESULT} = [{'time': 0.018492264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018502264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:42.032" endtime="20201112 09:42:42.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:42.049" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7...</msg>
<status status="PASS" starttime="20201112 09:42:42.036" endtime="20201112 09:42:42.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.054" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:42.052" endtime="20201112 09:42:42.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.056" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 09:42:42.055" endtime="20201112 09:42:42.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.050" endtime="20201112 09:42:42.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.060" endtime="20201112 09:42:42.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:42.063" endtime="20201112 09:42:42.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.062" endtime="20201112 09:42:42.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.058" endtime="20201112 09:42:42.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.651" endtime="20201112 09:42:42.084"></status>
</kw>
<msg timestamp="20201112 09:42:42.084" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.092" endtime="20201112 09:42:42.102"></status>
</kw>
<msg timestamp="20201112 09:42:42.102" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.090" endtime="20201112 09:42:42.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.105" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.103" endtime="20201112 09:42:42.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.106" endtime="20201112 09:42:42.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.087" endtime="20201112 09:42:42.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.086" endtime="20201112 09:42:42.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.115" endtime="20201112 09:42:42.405"></status>
</kw>
<msg timestamp="20201112 09:42:42.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018575028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0185755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:42:42.113" endtime="20201112 09:42:42.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018575028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0185755, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:42:42.409" endtime="20201112 09:42:42.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.418" endtime="20201112 09:42:42.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.111" endtime="20201112 09:42:42.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.109" endtime="20201112 09:42:42.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.425" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:42.424" endtime="20201112 09:42:42.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.430" level="INFO">VALUE: [{'time': 0.018575028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0185755, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018582292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.018582764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018591458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.018591944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018603139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1195000000002037e-05, 'source_diff': 1.1195000000002037e-05}, {'time': 0.018603611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018612458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.018612944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018626806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861999999999902e-05, 'source_diff': 1.3861999999999902e-05}, {'time': 0.018627278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018638125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0846999999997858e-05, 'source_diff': 1.0846999999997858e-05}, {'time': 0.018638611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018644639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018645111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018649472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018649944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018662472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2527999999997763e-05, 'source_diff': 1.2527999999997763e-05}, {'time': 0.018662944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018668139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.018668611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018680972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.018681444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018692819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1375000000000968e-05, 'source_diff': 1.1375000000000968e-05}, {'time': 0.018693292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018705486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.018705958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018713972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.013999999997162e-06, 'source_diff': 8.013999999997162e-06}, {'time': 0.018714444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018722319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000000937e-06, 'source_diff': 7.875000000000937e-06}, {'time': 0.018722792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018730139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000001297e-06, 'source_diff': 7.347000000001297e-06}, {'time': 0.018730625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018741139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999999663e-05, 'source_diff': 1.0513999999999663e-05}, {'time': 0.018741625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018751486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.018751958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018764986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3028000000001733e-05, 'source_diff': 1.3028000000001733e-05}, {'time': 0.018765458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0187715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.018771972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018783542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1569999999998942e-05, 'source_diff': 1.1569999999998942e-05}, {'time': 0.018784014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018790486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.471999999996952e-06, 'source_diff': 6.471999999996952e-06}, {'time': 0.018790958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018798833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000000937e-06, 'source_diff': 7.875000000000937e-06}, {'time': 0.018799306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018806333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.027000000003197e-06, 'source_diff': 7.027000000003197e-06}, {'time': 0.018806806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018811819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.013000000001627e-06, 'source_diff': 5.013000000001627e-06}, {'time': 0.018812292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018824833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.254099999999786e-05, 'source_diff': 1.254099999999786e-05}, {'time': 0.018825306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018834653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018835139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018844153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999998162e-06, 'source_diff': 9.013999999998162e-06}, {'time': 0.018844639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018857194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2555000000000899e-05, 'source_diff': 1.2555000000000899e-05}, {'time': 0.018857667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018864153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.018864639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018877833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.018878306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018888, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.693999999997593e-06, 'source_diff': 9.693999999997593e-06}, {'time': 0.018888472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018895333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.018895806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0189065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0693999999998594e-05, 'source_diff': 1.0693999999998594e-05}, {'time': 0.018906972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018920167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3195000000000567e-05, 'source_diff': 1.3195000000000567e-05}, {'time': 0.018920639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018935167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.018935639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018943, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.018943472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018954167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0695000000001537e-05, 'source_diff': 1.0695000000001537e-05}, {'time': 0.018954653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018959667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.018960153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018966, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018966486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018972667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180999999997466e-06, 'source_diff': 6.180999999997466e-06}, {'time': 0.018973153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018981833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.018982319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0189955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3180999999997528e-05, 'source_diff': 1.3180999999997528e-05}, {'time': 0.018995986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019003764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.019004236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019017514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3277999999998513e-05, 'source_diff': 1.3277999999998513e-05}, {'time': 0.019017986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019029028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1041999999999302e-05, 'source_diff': 1.1041999999999302e-05}, {'time': 0.0190295, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019034514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.019034986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019044694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.019045167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019055514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0346999999997358e-05, 'source_diff': 1.0346999999997358e-05}, {'time': 0.019055986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:42.426" endtime="20201112 09:42:42.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.421" endtime="20201112 09:42:42.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:42.457" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 8.694000000000063e-06, 4.859999999974607e-07, 1.1195000000002037e-05, 4.7199999999789077e-07, 8.846999999999328e-06, ...</msg>
<status status="PASS" starttime="20201112 09:42:42.432" endtime="20201112 09:42:42.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.461" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:42.460" endtime="20201112 09:42:42.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.465" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 8.694000000000063e-06, 4.859999999974607e-07, 1.1195000000002037e-05, 4.7199999999789077e-07, 8.846999999999328e-06, 4.860000000009301e-07, 1.3861999999999902e-05, 4.720000000013602e-07, 1.0846999999997858e-05, 4.860000000009301e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 4.361000000001336e-06, 4.720000000013602e-07, 1.2527999999997763e-05, 4.720000000013602e-07, 5.1949999999995056e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.7199999999789077e-07, 1.1375000000000968e-05, 4.7300000000083386e-07, 1.2194000000000094e-05, 4.720000000013602e-07, 8.013999999997162e-06, 4.720000000013602e-07, 7.875000000000937e-06, 4.729999999973644e-07, 7.347000000001297e-06, 4.860000000009301e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 9.860999999999898e-06, 4.7199999999789077e-07, 1.3028000000001733e-05, 4.7199999999789077e-07, 6.042000000001241e-06, 4.720000000013602e-07, 1.1569999999998942e-05, 4.720000000013602e-07, 6.471999999996952e-06, 4.720000000013602e-07, 7.875000000000937e-06, 4.729999999973644e-07, 7.027000000003197e-06, 4.729999999973644e-07, 5.013000000001627e-06, 4.7300000000083386e-07, 1.254099999999786e-05, 4.7300000000083386e-07, 9.346999999999828e-06, 4.860000000009301e-07, 9.013999999998162e-06, 4.860000000009301e-07, 1.2555000000000899e-05, 4.7300000000083386e-07, 6.485999999999992e-06, 4.859999999974607e-07, 1.3194000000001094e-05, 4.7300000000083386e-07, 9.693999999997593e-06, 4.720000000013602e-07, 6.861000000000367e-06, 4.7300000000083386e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 1.3195000000000567e-05, 4.7199999999789077e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 1.0695000000001537e-05, 4.859999999974607e-07, 5.014000000001101e-06, 4.860000000009301e-07, 5.846999999999797e-06, 4.860000000009301e-07, 6.180999999997466e-06, 4.860000000009301e-07, 8.680000000000493e-06, 4.860000000009301e-07, 1.3180999999997528e-05, 4.860000000009301e-07, 7.777999999999952e-06, 4.720000000013602e-07, 1.3277999999998513e-05, 4.720000000013602e-07, 1.1041999999999302e-05, 4.720000000013602e-07, 5.0139999999976315e-06, 4.720000000013602e-07, 9.708000000000633e-06, 4.7300000000083386e-07, 1.0346999999997358e-05, 4.720000000013602e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 8.694000000000063e-06, 4.859999999974607e-07, 1.1195000000002037e-05, 4.7199999999789077e-07, 8.846999999999328e-06, 4.860000000009301e-07, 1.3861999999999902e-05, 4.720000000013602e-07, 1.0846999999997858e-05, 4.860000000009301e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 4.361000000001336e-06, 4.720000000013602e-07, 1.2527999999997763e-05, 4.720000000013602e-07, 5.1949999999995056e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.7199999999789077e-07, 1.1375000000000968e-05, 4.7300000000083386e-07, 1.2194000000000094e-05, 4.720000000013602e-07, 8.013999999997162e-06, 4.720000000013602e-07, 7.875000000000937e-06, 4.729999999973644e-07, 7.347000000001297e-06, 4.860000000009301e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 9.860999999999898e-06, 4.7199999999789077e-07, 1.3028000000001733e-05, 4.7199999999789077e-07, 6.042000000001241e-06, 4.720000000013602e-07, 1.1569999999998942e-05, 4.720000000013602e-07, 6.471999999996952e-06, 4.720000000013602e-07, 7.875000000000937e-06, 4.729999999973644e-07, 7.027000000003197e-06, 4.729999999973644e-07, 5.013000000001627e-06, 4.7300000000083386e-07, 1.254099999999786e-05, 4.7300000000083386e-07, 9.346999999999828e-06, 4.860000000009301e-07, 9.013999999998162e-06, 4.860000000009301e-07, 1.2555000000000899e-05, 4.7300000000083386e-07, 6.485999999999992e-06, 4.859999999974607e-07, 1.3194000000001094e-05, 4.7300000000083386e-07, 9.693999999997593e-06, 4.720000000013602e-07, 6.861000000000367e-06, 4.7300000000083386e-07, 1.0693999999998594e-05, 4.720000000013602e-07, 1.3195000000000567e-05, 4.7199999999789077e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 1.0695000000001537e-05, 4.859999999974607e-07, 5.014000000001101e-06, 4.860000000009301e-07, 5.846999999999797e-06, 4.860000000009301e-07, 6.180999999997466e-06, 4.860000000009301e-07, 8.680000000000493e-06, 4.860000000009301e-07, 1.3180999999997528e-05, 4.860000000009301e-07, 7.777999999999952e-06, 4.720000000013602e-07, 1.3277999999998513e-05, 4.720000000013602e-07, 1.1041999999999302e-05, 4.720000000013602e-07, 5.0139999999976315e-06, 4.720000000013602e-07, 9.708000000000633e-06, 4.7300000000083386e-07, 1.0346999999997358e-05, 4.720000000013602e-07], 'sourcetime': [0.018575028, 0.0185755, 0.018582292, 0.018582764, 0.018591458, 0.018591944, 0.018603139, 0.018603611, 0.018612458, 0.018612944, 0.018626806, 0.018627278, 0.018638125, 0.018638611, 0.018644639, 0.018645111, 0.018649472, 0.018649944, 0.018662472, 0.018662944, 0.018668139, 0.018668611, 0.018680972, 0.018681444, 0.018692819, 0.018693292, 0.018705486, 0.018705958, 0.018713972, 0.018714444, 0.018722319, 0.018722792, 0.018730139, 0.018730625, 0.018741139, 0.018741625, 0.018751486, 0.018751958, 0.018764986, 0.018765458, 0.0187715, 0.018771972, 0.018783542, 0.018784014, 0.018790486, 0.018790958, 0.018798833, 0.018799306, 0.018806333, 0.018806806, 0.018811819, 0.018812292, 0.018824833, 0.018825306, 0.018834653, 0.018835139, 0.018844153, 0.018844639, 0.018857194, 0.018857667, 0.018864153, 0.018864639, 0.018877833, 0.018878306, 0.018888, 0.018888472, 0.018895333, 0.018895806, 0.0189065, 0.018906972, 0.018920167, 0.018920639, 0.018935167, 0.018935639, 0.018943, 0.018943472, 0.018954167, 0.018954653, 0.018959667, 0.018960153, 0.018966, 0.018966486, 0.018972667, 0.018973153, 0.018981833, 0.018982319, 0.0189955, 0.018995986, 0.019003764, 0.019004236, 0.019017514, 0.019017986, 0.019029028, 0.0190295, 0.019034514, 0.019034986, 0.019044694, 0.019045167, 0.019055514, 0.019055986]}</msg>
<status status="PASS" starttime="20201112 09:42:42.462" endtime="20201112 09:42:42.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.458" endtime="20201112 09:42:42.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:42.471" level="INFO">${RESULT} = [{'time': 0.0185755, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018582764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:42:42.467" endtime="20201112 09:42:42.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:42.484" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.72...</msg>
<status status="PASS" starttime="20201112 09:42:42.472" endtime="20201112 09:42:42.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.488" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:42.487" endtime="20201112 09:42:42.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.491" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:42.489" endtime="20201112 09:42:42.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.485" endtime="20201112 09:42:42.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.494" endtime="20201112 09:42:42.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:42.497" endtime="20201112 09:42:42.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.496" endtime="20201112 09:42:42.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.492" endtime="20201112 09:42:42.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.084" endtime="20201112 09:42:42.518"></status>
</kw>
<msg timestamp="20201112 09:42:42.518" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.526" endtime="20201112 09:42:42.535"></status>
</kw>
<msg timestamp="20201112 09:42:42.536" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.524" endtime="20201112 09:42:42.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.538" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.537" endtime="20201112 09:42:42.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.539" endtime="20201112 09:42:42.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.522" endtime="20201112 09:42:42.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.520" endtime="20201112 09:42:42.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.549" endtime="20201112 09:42:42.838"></status>
</kw>
<msg timestamp="20201112 09:42:42.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018646125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018646611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:42.548" endtime="20201112 09:42:42.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018646125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018646611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:42.842" endtime="20201112 09:42:42.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.851" endtime="20201112 09:42:42.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.544" endtime="20201112 09:42:42.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.543" endtime="20201112 09:42:42.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.857" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:42.856" endtime="20201112 09:42:42.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.863" level="INFO">VALUE: [{'time': 0.018646125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018646611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018652139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.018652611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018659806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.195000000001506e-06, 'source_diff': 7.195000000001506e-06}, {'time': 0.018660278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018670625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.018671111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018676458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018676944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018687639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694999999998067e-05, 'source_diff': 1.0694999999998067e-05}, {'time': 0.018688111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018693972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018694444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018699139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.018699611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018705306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.018705778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018715139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.018715611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018726639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027999999999732e-05, 'source_diff': 1.1027999999999732e-05}, {'time': 0.018727111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018731972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.018732444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018741472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027999999997732e-06, 'source_diff': 9.027999999997732e-06}, {'time': 0.018741944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018753486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1541999999999802e-05, 'source_diff': 1.1541999999999802e-05}, {'time': 0.018753958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018765486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.018765958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018776306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0348000000000301e-05, 'source_diff': 1.0348000000000301e-05}, {'time': 0.018776792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018785361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.568999999999938e-06, 'source_diff': 8.568999999999938e-06}, {'time': 0.018785833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018798139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2306000000000122e-05, 'source_diff': 1.2306000000000122e-05}, {'time': 0.018798625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018812153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3528000000002233e-05, 'source_diff': 1.3528000000002233e-05}, {'time': 0.018812625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018819819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.194000000002032e-06, 'source_diff': 7.194000000002032e-06}, {'time': 0.018820292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018827486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.194000000002032e-06, 'source_diff': 7.194000000002032e-06}, {'time': 0.018827958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018841167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3209000000000137e-05, 'source_diff': 1.3209000000000137e-05}, {'time': 0.018841639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018855542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3902999999999138e-05, 'source_diff': 1.3902999999999138e-05}, {'time': 0.018856014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018869833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.381899999999825e-05, 'source_diff': 1.381899999999825e-05}, {'time': 0.018870306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018884819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.451300000000072e-05, 'source_diff': 1.451300000000072e-05}, {'time': 0.018885306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018893986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.018894472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018900056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5839999999994505e-06, 'source_diff': 5.5839999999994505e-06}, {'time': 0.018900528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018909653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.018910139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018922319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2180000000000524e-05, 'source_diff': 1.2180000000000524e-05}, {'time': 0.018922806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018927319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513000000001127e-06, 'source_diff': 4.513000000001127e-06}, {'time': 0.018927806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018939833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2027000000001259e-05, 'source_diff': 1.2027000000001259e-05}, {'time': 0.018940306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018949167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018949639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018961667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.018962139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018976333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4194000000002094e-05, 'source_diff': 1.4194000000002094e-05}, {'time': 0.018976806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018983708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.901999999999603e-06, 'source_diff': 6.901999999999603e-06}, {'time': 0.018984181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018990667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.018991139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018999514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.018999986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019013833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847000000000859e-05, 'source_diff': 1.3847000000000859e-05}, {'time': 0.019014319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019024333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.019024819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019032014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.195000000001506e-06, 'source_diff': 7.195000000001506e-06}, {'time': 0.019032486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019046, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.019046486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019051014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.019051486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019059028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.0190595, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019068847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.019069319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019074014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.019074486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019079847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.019080319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019090181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.86200000000284e-06, 'source_diff': 9.86200000000284e-06}, {'time': 0.019090653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019101181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.019101653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019106847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.019107319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019114014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694999999997536e-06, 'source_diff': 6.694999999997536e-06}, {'time': 0.019114486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:42.859" endtime="20201112 09:42:42.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.854" endtime="20201112 09:42:42.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:42.889" level="INFO">${debug-compressed} = {'diff': [0, 4.860000000009301e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 7.195000000001506e-06, 4.7199999999789077e-07, 1.0347000000000828e-05, 4.860000000009301e-07, 5.346999999999297e-06, ...</msg>
<status status="PASS" starttime="20201112 09:42:42.865" endtime="20201112 09:42:42.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.893" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:42.892" endtime="20201112 09:42:42.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.897" level="INFO">VALUE: {'diff': [0, 4.860000000009301e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 7.195000000001506e-06, 4.7199999999789077e-07, 1.0347000000000828e-05, 4.860000000009301e-07, 5.346999999999297e-06, 4.860000000009301e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 4.6949999999990055e-06, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999789077e-07, 9.360999999999398e-06, 4.720000000013602e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 4.860999999998367e-06, 4.720000000013602e-07, 9.027999999997732e-06, 4.720000000013602e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 1.0348000000000301e-05, 4.860000000009301e-07, 8.568999999999938e-06, 4.7199999999789077e-07, 1.2306000000000122e-05, 4.860000000009301e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 7.194000000002032e-06, 4.729999999973644e-07, 7.194000000002032e-06, 4.7199999999789077e-07, 1.3209000000000137e-05, 4.720000000013602e-07, 1.3902999999999138e-05, 4.720000000013602e-07, 1.381899999999825e-05, 4.7300000000083386e-07, 1.451300000000072e-05, 4.870000000004038e-07, 8.680000000000493e-06, 4.859999999974607e-07, 5.5839999999994505e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.860000000009301e-07, 1.2180000000000524e-05, 4.870000000004038e-07, 4.513000000001127e-06, 4.869999999969343e-07, 1.2027000000001259e-05, 4.7300000000083386e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.2028000000000733e-05, 4.7199999999789077e-07, 1.4194000000002094e-05, 4.729999999973644e-07, 6.901999999999603e-06, 4.7300000000083386e-07, 6.485999999999992e-06, 4.720000000013602e-07, 8.374999999997967e-06, 4.720000000013602e-07, 1.3847000000000859e-05, 4.859999999974607e-07, 1.0014000000002632e-05, 4.859999999974607e-07, 7.195000000001506e-06, 4.720000000013602e-07, 1.3513999999999193e-05, 4.860000000009301e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 4.6949999999990055e-06, 4.720000000013602e-07, 5.360999999998867e-06, 4.7199999999789077e-07, 9.86200000000284e-06, 4.7199999999789077e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 5.194000000000032e-06, 4.720000000013602e-07, 6.694999999997536e-06, 4.720000000013602e-07], 'eventsource_diff': [0, 4.860000000009301e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 7.195000000001506e-06, 4.7199999999789077e-07, 1.0347000000000828e-05, 4.860000000009301e-07, 5.346999999999297e-06, 4.860000000009301e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 4.6949999999990055e-06, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999789077e-07, 9.360999999999398e-06, 4.720000000013602e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 4.860999999998367e-06, 4.720000000013602e-07, 9.027999999997732e-06, 4.720000000013602e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 1.0348000000000301e-05, 4.860000000009301e-07, 8.568999999999938e-06, 4.7199999999789077e-07, 1.2306000000000122e-05, 4.860000000009301e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 7.194000000002032e-06, 4.729999999973644e-07, 7.194000000002032e-06, 4.7199999999789077e-07, 1.3209000000000137e-05, 4.720000000013602e-07, 1.3902999999999138e-05, 4.720000000013602e-07, 1.381899999999825e-05, 4.7300000000083386e-07, 1.451300000000072e-05, 4.870000000004038e-07, 8.680000000000493e-06, 4.859999999974607e-07, 5.5839999999994505e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.860000000009301e-07, 1.2180000000000524e-05, 4.870000000004038e-07, 4.513000000001127e-06, 4.869999999969343e-07, 1.2027000000001259e-05, 4.7300000000083386e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.2028000000000733e-05, 4.7199999999789077e-07, 1.4194000000002094e-05, 4.729999999973644e-07, 6.901999999999603e-06, 4.7300000000083386e-07, 6.485999999999992e-06, 4.720000000013602e-07, 8.374999999997967e-06, 4.720000000013602e-07, 1.3847000000000859e-05, 4.859999999974607e-07, 1.0014000000002632e-05, 4.859999999974607e-07, 7.195000000001506e-06, 4.720000000013602e-07, 1.3513999999999193e-05, 4.860000000009301e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 4.6949999999990055e-06, 4.720000000013602e-07, 5.360999999998867e-06, 4.7199999999789077e-07, 9.86200000000284e-06, 4.7199999999789077e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 5.194000000000032e-06, 4.720000000013602e-07, 6.694999999997536e-06, 4.720000000013602e-07], 'sourcetime': [0.018646125, 0.018646611, 0.018652139, 0.018652611, 0.018659806, 0.018660278, 0.018670625, 0.018671111, 0.018676458, 0.018676944, 0.018687639, 0.018688111, 0.018693972, 0.018694444, 0.018699139, 0.018699611, 0.018705306, 0.018705778, 0.018715139, 0.018715611, 0.018726639, 0.018727111, 0.018731972, 0.018732444, 0.018741472, 0.018741944, 0.018753486, 0.018753958, 0.018765486, 0.018765958, 0.018776306, 0.018776792, 0.018785361, 0.018785833, 0.018798139, 0.018798625, 0.018812153, 0.018812625, 0.018819819, 0.018820292, 0.018827486, 0.018827958, 0.018841167, 0.018841639, 0.018855542, 0.018856014, 0.018869833, 0.018870306, 0.018884819, 0.018885306, 0.018893986, 0.018894472, 0.018900056, 0.018900528, 0.018909653, 0.018910139, 0.018922319, 0.018922806, 0.018927319, 0.018927806, 0.018939833, 0.018940306, 0.018949167, 0.018949639, 0.018961667, 0.018962139, 0.018976333, 0.018976806, 0.018983708, 0.018984181, 0.018990667, 0.018991139, 0.018999514, 0.018999986, 0.019013833, 0.019014319, 0.019024333, 0.019024819, 0.019032014, 0.019032486, 0.019046, 0.019046486, 0.019051014, 0.019051486, 0.019059028, 0.0190595, 0.019068847, 0.019069319, 0.019074014, 0.019074486, 0.019079847, 0.019080319, 0.019090181, 0.019090653, 0.019101181, 0.019101653, 0.019106847, 0.019107319, 0.019114014, 0.019114486]}</msg>
<status status="PASS" starttime="20201112 09:42:42.894" endtime="20201112 09:42:42.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.890" endtime="20201112 09:42:42.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:42.903" level="INFO">${RESULT} = [{'time': 0.018646611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018652611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:42.899" endtime="20201112 09:42:42.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:42.916" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.71...</msg>
<status status="PASS" starttime="20201112 09:42:42.904" endtime="20201112 09:42:42.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.921" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:42.920" endtime="20201112 09:42:42.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.923" level="INFO">VALUE: [4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.869999999969343e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:42.922" endtime="20201112 09:42:42.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.917" endtime="20201112 09:42:42.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.927" endtime="20201112 09:42:42.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:42.931" endtime="20201112 09:42:42.950"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.928" endtime="20201112 09:42:42.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.925" endtime="20201112 09:42:42.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.519" endtime="20201112 09:42:42.951"></status>
</kw>
<msg timestamp="20201112 09:42:42.952" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.959" endtime="20201112 09:42:42.969"></status>
</kw>
<msg timestamp="20201112 09:42:42.970" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.958" endtime="20201112 09:42:42.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.972" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.971" endtime="20201112 09:42:42.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.974" endtime="20201112 09:42:42.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.955" endtime="20201112 09:42:42.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.953" endtime="20201112 09:42:42.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.983" endtime="20201112 09:42:43.270"></status>
</kw>
<msg timestamp="20201112 09:42:43.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018651306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018651778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:42.981" endtime="20201112 09:42:43.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018651306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018651778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:43.274" endtime="20201112 09:42:43.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.283" endtime="20201112 09:42:43.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.978" endtime="20201112 09:42:43.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.977" endtime="20201112 09:42:43.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.289" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:43.288" endtime="20201112 09:42:43.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.295" level="INFO">VALUE: [{'time': 0.018651306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018651778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018666444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4665999999999985e-05, 'source_diff': 1.4665999999999985e-05}, {'time': 0.018666917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018675611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.018676083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018683444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.018683917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018695611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1693999999999594e-05, 'source_diff': 1.1693999999999594e-05}, {'time': 0.018696083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018700667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.58400000000192e-06, 'source_diff': 4.58400000000192e-06}, {'time': 0.018701139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018712972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1833000000002758e-05, 'source_diff': 1.1833000000002758e-05}, {'time': 0.018713444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018723458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.018723931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018735458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1527000000000759e-05, 'source_diff': 1.1527000000000759e-05}, {'time': 0.018735931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018746167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0236000000000273e-05, 'source_diff': 1.0236000000000273e-05}, {'time': 0.018746639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018753972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.333000000001727e-06, 'source_diff': 7.333000000001727e-06}, {'time': 0.018754444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018758958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018759431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018765792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.018766264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018774319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.018774792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018784125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.018784597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018794792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0195000000001037e-05, 'source_diff': 1.0195000000001037e-05}, {'time': 0.018795264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018800458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.018800931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018812958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2027000000001259e-05, 'source_diff': 1.2027000000001259e-05}, {'time': 0.018813444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018825625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2180999999999997e-05, 'source_diff': 1.2180999999999997e-05}, {'time': 0.018826111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018832792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.681000000001436e-06, 'source_diff': 6.681000000001436e-06}, {'time': 0.018833278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018847847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4569000000002469e-05, 'source_diff': 1.4569000000002469e-05}, {'time': 0.018848319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018861958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3639000000002788e-05, 'source_diff': 1.3639000000002788e-05}, {'time': 0.018862444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018873, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0556000000001842e-05, 'source_diff': 1.0556000000001842e-05}, {'time': 0.018873472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018886472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3000000000002593e-05, 'source_diff': 1.3000000000002593e-05}, {'time': 0.018886944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018897167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0223000000000176e-05, 'source_diff': 1.0223000000000176e-05}, {'time': 0.018897639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018908639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1000000000000593e-05, 'source_diff': 1.1000000000000593e-05}, {'time': 0.018909111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018922972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018923444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018932639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.018933111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018943139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.018943625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018949306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.018949792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018958972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180000000000993e-06, 'source_diff': 9.180000000000993e-06}, {'time': 0.018959458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018969139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.681000000000967e-06, 'source_diff': 9.681000000000967e-06}, {'time': 0.018969625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018981819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.018982292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018986833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.018987306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018991472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.018991944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019001958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.019002444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019010486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.019010958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019019292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.333999999998731e-06, 'source_diff': 8.333999999998731e-06}, {'time': 0.019019778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019028292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.513999999997662e-06, 'source_diff': 8.513999999997662e-06}, {'time': 0.019028778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019040458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.019040944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019050333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.019050806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019062306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1500000000001093e-05, 'source_diff': 1.1500000000001093e-05}, {'time': 0.019062778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019072153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.375000000002437e-06, 'source_diff': 9.375000000002437e-06}, {'time': 0.019072625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019082153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.019082625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019092819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194000000001563e-05, 'source_diff': 1.0194000000001563e-05}, {'time': 0.019093292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019097819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.526999999997228e-06, 'source_diff': 4.526999999997228e-06}, {'time': 0.019098292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019107819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527000000002228e-06, 'source_diff': 9.527000000002228e-06}, {'time': 0.019108292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019122472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4180000000002524e-05, 'source_diff': 1.4180000000002524e-05}, {'time': 0.019122958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019132806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847999999999801e-06, 'source_diff': 9.847999999999801e-06}, {'time': 0.019133292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019145639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.019146125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:43.291" endtime="20201112 09:42:43.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.286" endtime="20201112 09:42:43.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:43.321" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 1.4665999999999985e-05, 4.7300000000083386e-07, 8.694000000000063e-06, 4.7199999999789077e-07, 7.361000000000867e-06, 4.7300000000083386e-07, 1.1693999999999594e-05...</msg>
<status status="PASS" starttime="20201112 09:42:43.297" endtime="20201112 09:42:43.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.325" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:43.324" endtime="20201112 09:42:43.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.329" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.4665999999999985e-05, 4.7300000000083386e-07, 8.694000000000063e-06, 4.7199999999789077e-07, 7.361000000000867e-06, 4.7300000000083386e-07, 1.1693999999999594e-05, 4.7199999999789077e-07, 4.58400000000192e-06, 4.7199999999789077e-07, 1.1833000000002758e-05, 4.7199999999789077e-07, 1.0013999999999162e-05, 4.7300000000083386e-07, 1.1527000000000759e-05, 4.7300000000083386e-07, 1.0236000000000273e-05, 4.7199999999789077e-07, 7.333000000001727e-06, 4.7199999999789077e-07, 4.514000000000601e-06, 4.7300000000083386e-07, 6.360999999999867e-06, 4.720000000013602e-07, 8.054999999999868e-06, 4.729999999973644e-07, 9.333000000000258e-06, 4.720000000013602e-07, 1.0195000000001037e-05, 4.7199999999789077e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 1.2027000000001259e-05, 4.859999999974607e-07, 1.2180999999999997e-05, 4.860000000009301e-07, 6.681000000001436e-06, 4.859999999974607e-07, 1.4569000000002469e-05, 4.7199999999789077e-07, 1.3639000000002788e-05, 4.859999999974607e-07, 1.0556000000001842e-05, 4.7199999999789077e-07, 1.3000000000002593e-05, 4.7199999999789077e-07, 1.0223000000000176e-05, 4.720000000013602e-07, 1.1000000000000593e-05, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 9.195000000000036e-06, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.859999999974607e-07, 5.681000000000436e-06, 4.860000000009301e-07, 9.180000000000993e-06, 4.859999999974607e-07, 9.681000000000967e-06, 4.860000000009301e-07, 1.2194000000000094e-05, 4.7300000000083386e-07, 4.541000000000267e-06, 4.729999999973644e-07, 4.165999999999892e-06, 4.720000000013602e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 8.041999999999772e-06, 4.720000000013602e-07, 8.333999999998731e-06, 4.860000000009301e-07, 8.513999999997662e-06, 4.860000000009301e-07, 1.1680000000000024e-05, 4.860000000009301e-07, 9.388999999998537e-06, 4.7300000000083386e-07, 1.1500000000001093e-05, 4.7199999999789077e-07, 9.375000000002437e-06, 4.7199999999789077e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 1.0194000000001563e-05, 4.7300000000083386e-07, 4.526999999997228e-06, 4.7300000000083386e-07, 9.527000000002228e-06, 4.729999999973644e-07, 1.4180000000002524e-05, 4.859999999974607e-07, 9.847999999999801e-06, 4.860000000009301e-07, 1.2346999999999358e-05, 4.860000000009301e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 1.4665999999999985e-05, 4.7300000000083386e-07, 8.694000000000063e-06, 4.7199999999789077e-07, 7.361000000000867e-06, 4.7300000000083386e-07, 1.1693999999999594e-05, 4.7199999999789077e-07, 4.58400000000192e-06, 4.7199999999789077e-07, 1.1833000000002758e-05, 4.7199999999789077e-07, 1.0013999999999162e-05, 4.7300000000083386e-07, 1.1527000000000759e-05, 4.7300000000083386e-07, 1.0236000000000273e-05, 4.7199999999789077e-07, 7.333000000001727e-06, 4.7199999999789077e-07, 4.514000000000601e-06, 4.7300000000083386e-07, 6.360999999999867e-06, 4.720000000013602e-07, 8.054999999999868e-06, 4.729999999973644e-07, 9.333000000000258e-06, 4.720000000013602e-07, 1.0195000000001037e-05, 4.7199999999789077e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 1.2027000000001259e-05, 4.859999999974607e-07, 1.2180999999999997e-05, 4.860000000009301e-07, 6.681000000001436e-06, 4.859999999974607e-07, 1.4569000000002469e-05, 4.7199999999789077e-07, 1.3639000000002788e-05, 4.859999999974607e-07, 1.0556000000001842e-05, 4.7199999999789077e-07, 1.3000000000002593e-05, 4.7199999999789077e-07, 1.0223000000000176e-05, 4.720000000013602e-07, 1.1000000000000593e-05, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 9.195000000000036e-06, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.859999999974607e-07, 5.681000000000436e-06, 4.860000000009301e-07, 9.180000000000993e-06, 4.859999999974607e-07, 9.681000000000967e-06, 4.860000000009301e-07, 1.2194000000000094e-05, 4.7300000000083386e-07, 4.541000000000267e-06, 4.729999999973644e-07, 4.165999999999892e-06, 4.720000000013602e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 8.041999999999772e-06, 4.720000000013602e-07, 8.333999999998731e-06, 4.860000000009301e-07, 8.513999999997662e-06, 4.860000000009301e-07, 1.1680000000000024e-05, 4.860000000009301e-07, 9.388999999998537e-06, 4.7300000000083386e-07, 1.1500000000001093e-05, 4.7199999999789077e-07, 9.375000000002437e-06, 4.7199999999789077e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 1.0194000000001563e-05, 4.7300000000083386e-07, 4.526999999997228e-06, 4.7300000000083386e-07, 9.527000000002228e-06, 4.729999999973644e-07, 1.4180000000002524e-05, 4.859999999974607e-07, 9.847999999999801e-06, 4.860000000009301e-07, 1.2346999999999358e-05, 4.860000000009301e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.018651306, 0.018651778, 0.018666444, 0.018666917, 0.018675611, 0.018676083, 0.018683444, 0.018683917, 0.018695611, 0.018696083, 0.018700667, 0.018701139, 0.018712972, 0.018713444, 0.018723458, 0.018723931, 0.018735458, 0.018735931, 0.018746167, 0.018746639, 0.018753972, 0.018754444, 0.018758958, 0.018759431, 0.018765792, 0.018766264, 0.018774319, 0.018774792, 0.018784125, 0.018784597, 0.018794792, 0.018795264, 0.018800458, 0.018800931, 0.018812958, 0.018813444, 0.018825625, 0.018826111, 0.018832792, 0.018833278, 0.018847847, 0.018848319, 0.018861958, 0.018862444, 0.018873, 0.018873472, 0.018886472, 0.018886944, 0.018897167, 0.018897639, 0.018908639, 0.018909111, 0.018922972, 0.018923444, 0.018932639, 0.018933111, 0.018943139, 0.018943625, 0.018949306, 0.018949792, 0.018958972, 0.018959458, 0.018969139, 0.018969625, 0.018981819, 0.018982292, 0.018986833, 0.018987306, 0.018991472, 0.018991944, 0.019001958, 0.019002444, 0.019010486, 0.019010958, 0.019019292, 0.019019778, 0.019028292, 0.019028778, 0.019040458, 0.019040944, 0.019050333, 0.019050806, 0.019062306, 0.019062778, 0.019072153, 0.019072625, 0.019082153, 0.019082625, 0.019092819, 0.019093292, 0.019097819, 0.019098292, 0.019107819, 0.019108292, 0.019122472, 0.019122958, 0.019132806, 0.019133292, 0.019145639, 0.019146125]}</msg>
<status status="PASS" starttime="20201112 09:42:43.326" endtime="20201112 09:42:43.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.322" endtime="20201112 09:42:43.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:43.335" level="INFO">${RESULT} = [{'time': 0.018651778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018666917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:43.332" endtime="20201112 09:42:43.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:43.348" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07,...</msg>
<status status="PASS" starttime="20201112 09:42:43.336" endtime="20201112 09:42:43.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.353" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:43.352" endtime="20201112 09:42:43.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.355" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 09:42:43.354" endtime="20201112 09:42:43.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.349" endtime="20201112 09:42:43.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.358" endtime="20201112 09:42:43.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:43.362" endtime="20201112 09:42:43.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.360" endtime="20201112 09:42:43.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.357" endtime="20201112 09:42:43.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.952" endtime="20201112 09:42:43.383"></status>
</kw>
<msg timestamp="20201112 09:42:43.383" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.390" endtime="20201112 09:42:43.401"></status>
</kw>
<msg timestamp="20201112 09:42:43.401" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:43.389" endtime="20201112 09:42:43.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.404" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:43.402" endtime="20201112 09:42:43.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.405" endtime="20201112 09:42:43.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.386" endtime="20201112 09:42:43.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.385" endtime="20201112 09:42:43.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.414" endtime="20201112 09:42:43.704"></status>
</kw>
<msg timestamp="20201112 09:42:43.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018558319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018558792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:43.412" endtime="20201112 09:42:43.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018558319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018558792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:43.708" endtime="20201112 09:42:43.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.717" endtime="20201112 09:42:43.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.410" endtime="20201112 09:42:43.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.408" endtime="20201112 09:42:43.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.724" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:43.723" endtime="20201112 09:42:43.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.729" level="INFO">VALUE: [{'time': 0.018558319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018558792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018566986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.018567458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018576653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.018577125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018591819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4693999999999124e-05, 'source_diff': 1.4693999999999124e-05}, {'time': 0.018592292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018600319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.027000000000728e-06, 'source_diff': 8.027000000000728e-06}, {'time': 0.018600792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018609028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.235999999998272e-06, 'source_diff': 8.235999999998272e-06}, {'time': 0.0186095, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018614194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.018614667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018625333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0665999999999454e-05, 'source_diff': 1.0665999999999454e-05}, {'time': 0.018625806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018640153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.434699999999789e-05, 'source_diff': 1.434699999999789e-05}, {'time': 0.018640625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018652153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.018652625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018661833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208000000000133e-06, 'source_diff': 9.208000000000133e-06}, {'time': 0.018662306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018674153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1846999999998858e-05, 'source_diff': 1.1846999999998858e-05}, {'time': 0.018674639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018682167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.018682639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018697153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.018697639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018703833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.018704306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0187095, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.018709972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0187155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.018715972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.018722472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018729181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.709000000000576e-06, 'source_diff': 6.709000000000576e-06}, {'time': 0.018729653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018737056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402999999999577e-06, 'source_diff': 7.402999999999577e-06}, {'time': 0.018737528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018746167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.018746639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0187605, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018760972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018765667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.018766139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018774667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527999999997232e-06, 'source_diff': 8.527999999997232e-06}, {'time': 0.018775139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018788667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.018789153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018800667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.018801153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018813347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.018813819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018821333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.018821819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0188265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.018826986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018841208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4222000000001234e-05, 'source_diff': 1.4222000000001234e-05}, {'time': 0.018841681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018855514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3833000000001289e-05, 'source_diff': 1.3833000000001289e-05}, {'time': 0.018855986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018866347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0360999999996928e-05, 'source_diff': 1.0360999999996928e-05}, {'time': 0.018866819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018873847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.018874319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018880194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.018880667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018886347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.018886819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018897222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0403000000002577e-05, 'source_diff': 1.0403000000002577e-05}, {'time': 0.018897694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018911181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3486999999999527e-05, 'source_diff': 1.3486999999999527e-05}, {'time': 0.018911667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018917181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.018917667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018930028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2361000000002398e-05, 'source_diff': 1.2361000000002398e-05}, {'time': 0.0189305, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018944347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847000000000859e-05, 'source_diff': 1.3847000000000859e-05}, {'time': 0.018944833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01895775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2916999999997708e-05, 'source_diff': 1.2916999999997708e-05}, {'time': 0.018958222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018968528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0305999999998122e-05, 'source_diff': 1.0305999999998122e-05}, {'time': 0.018969, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018980736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1736000000001773e-05, 'source_diff': 1.1736000000001773e-05}, {'time': 0.018981208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018987694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.018988167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018997708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.540999999998329e-06, 'source_diff': 9.540999999998329e-06}, {'time': 0.018998181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019012375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4194000000002094e-05, 'source_diff': 1.4194000000002094e-05}, {'time': 0.019012847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019021208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.019021681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019032736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1055000000002868e-05, 'source_diff': 1.1055000000002868e-05}, {'time': 0.019033208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019038028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.019038514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019052528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.019053014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:43.725" endtime="20201112 09:42:43.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.720" endtime="20201112 09:42:43.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:43.755" level="INFO">${debug-compressed} = {'diff': [0, 4.7300000000083386e-07, 8.193999999999563e-06, 4.7199999999789077e-07, 9.195000000000036e-06, 4.720000000013602e-07, 1.4693999999999124e-05, 4.7300000000083386e-07, 8.027000000000728e-06,...</msg>
<status status="PASS" starttime="20201112 09:42:43.731" endtime="20201112 09:42:43.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.760" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:43.758" endtime="20201112 09:42:43.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.764" level="INFO">VALUE: {'diff': [0, 4.7300000000083386e-07, 8.193999999999563e-06, 4.7199999999789077e-07, 9.195000000000036e-06, 4.720000000013602e-07, 1.4693999999999124e-05, 4.7300000000083386e-07, 8.027000000000728e-06, 4.7300000000083386e-07, 8.235999999998272e-06, 4.720000000013602e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 1.0665999999999454e-05, 4.7300000000083386e-07, 1.434699999999789e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 9.208000000000133e-06, 4.7300000000083386e-07, 1.1846999999998858e-05, 4.860000000009301e-07, 7.527999999999702e-06, 4.720000000013602e-07, 1.4514000000000193e-05, 4.859999999974607e-07, 6.194000000001032e-06, 4.7300000000083386e-07, 5.194000000000032e-06, 4.7199999999789077e-07, 5.528000000001171e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 6.709000000000576e-06, 4.7199999999789077e-07, 7.402999999999577e-06, 4.720000000013602e-07, 8.639000000001257e-06, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 4.6949999999990055e-06, 4.720000000013602e-07, 8.527999999997232e-06, 4.720000000013602e-07, 1.3527999999998763e-05, 4.860000000009301e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 1.2194000000000094e-05, 4.7199999999789077e-07, 7.514000000000132e-06, 4.860000000009301e-07, 4.680999999999436e-06, 4.860000000009301e-07, 1.4222000000001234e-05, 4.729999999973644e-07, 1.3833000000001289e-05, 4.720000000013602e-07, 1.0360999999996928e-05, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.7300000000083386e-07, 5.680000000000962e-06, 4.7199999999789077e-07, 1.0403000000002577e-05, 4.7199999999789077e-07, 1.3486999999999527e-05, 4.860000000009301e-07, 5.514000000001601e-06, 4.859999999974607e-07, 1.2361000000002398e-05, 4.7199999999789077e-07, 1.3847000000000859e-05, 4.860000000009301e-07, 1.2916999999997708e-05, 4.720000000013602e-07, 1.0305999999998122e-05, 4.720000000013602e-07, 1.1736000000001773e-05, 4.7199999999789077e-07, 6.485999999999992e-06, 4.7300000000083386e-07, 9.540999999998329e-06, 4.7300000000083386e-07, 1.4194000000002094e-05, 4.7199999999789077e-07, 8.361000000001867e-06, 4.729999999973644e-07, 1.1055000000002868e-05, 4.7199999999789077e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 1.4013999999999693e-05, 4.860000000009301e-07], 'eventsource_diff': [0, 4.7300000000083386e-07, 8.193999999999563e-06, 4.7199999999789077e-07, 9.195000000000036e-06, 4.720000000013602e-07, 1.4693999999999124e-05, 4.7300000000083386e-07, 8.027000000000728e-06, 4.7300000000083386e-07, 8.235999999998272e-06, 4.720000000013602e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 1.0665999999999454e-05, 4.7300000000083386e-07, 1.434699999999789e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 9.208000000000133e-06, 4.7300000000083386e-07, 1.1846999999998858e-05, 4.860000000009301e-07, 7.527999999999702e-06, 4.720000000013602e-07, 1.4514000000000193e-05, 4.859999999974607e-07, 6.194000000001032e-06, 4.7300000000083386e-07, 5.194000000000032e-06, 4.7199999999789077e-07, 5.528000000001171e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 6.709000000000576e-06, 4.7199999999789077e-07, 7.402999999999577e-06, 4.720000000013602e-07, 8.639000000001257e-06, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 4.6949999999990055e-06, 4.720000000013602e-07, 8.527999999997232e-06, 4.720000000013602e-07, 1.3527999999998763e-05, 4.860000000009301e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 1.2194000000000094e-05, 4.7199999999789077e-07, 7.514000000000132e-06, 4.860000000009301e-07, 4.680999999999436e-06, 4.860000000009301e-07, 1.4222000000001234e-05, 4.729999999973644e-07, 1.3833000000001289e-05, 4.720000000013602e-07, 1.0360999999996928e-05, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 5.874999999998937e-06, 4.7300000000083386e-07, 5.680000000000962e-06, 4.7199999999789077e-07, 1.0403000000002577e-05, 4.7199999999789077e-07, 1.3486999999999527e-05, 4.860000000009301e-07, 5.514000000001601e-06, 4.859999999974607e-07, 1.2361000000002398e-05, 4.7199999999789077e-07, 1.3847000000000859e-05, 4.860000000009301e-07, 1.2916999999997708e-05, 4.720000000013602e-07, 1.0305999999998122e-05, 4.720000000013602e-07, 1.1736000000001773e-05, 4.7199999999789077e-07, 6.485999999999992e-06, 4.7300000000083386e-07, 9.540999999998329e-06, 4.7300000000083386e-07, 1.4194000000002094e-05, 4.7199999999789077e-07, 8.361000000001867e-06, 4.729999999973644e-07, 1.1055000000002868e-05, 4.7199999999789077e-07, 4.8199999999991305e-06, 4.860000000009301e-07, 1.4013999999999693e-05, 4.860000000009301e-07], 'sourcetime': [0.018558319, 0.018558792, 0.018566986, 0.018567458, 0.018576653, 0.018577125, 0.018591819, 0.018592292, 0.018600319, 0.018600792, 0.018609028, 0.0186095, 0.018614194, 0.018614667, 0.018625333, 0.018625806, 0.018640153, 0.018640625, 0.018652153, 0.018652625, 0.018661833, 0.018662306, 0.018674153, 0.018674639, 0.018682167, 0.018682639, 0.018697153, 0.018697639, 0.018703833, 0.018704306, 0.0187095, 0.018709972, 0.0187155, 0.018715972, 0.018722, 0.018722472, 0.018729181, 0.018729653, 0.018737056, 0.018737528, 0.018746167, 0.018746639, 0.0187605, 0.018760972, 0.018765667, 0.018766139, 0.018774667, 0.018775139, 0.018788667, 0.018789153, 0.018800667, 0.018801153, 0.018813347, 0.018813819, 0.018821333, 0.018821819, 0.0188265, 0.018826986, 0.018841208, 0.018841681, 0.018855514, 0.018855986, 0.018866347, 0.018866819, 0.018873847, 0.018874319, 0.018880194, 0.018880667, 0.018886347, 0.018886819, 0.018897222, 0.018897694, 0.018911181, 0.018911667, 0.018917181, 0.018917667, 0.018930028, 0.0189305, 0.018944347, 0.018944833, 0.01895775, 0.018958222, 0.018968528, 0.018969, 0.018980736, 0.018981208, 0.018987694, 0.018988167, 0.018997708, 0.018998181, 0.019012375, 0.019012847, 0.019021208, 0.019021681, 0.019032736, 0.019033208, 0.019038028, 0.019038514, 0.019052528, 0.019053014]}</msg>
<status status="PASS" starttime="20201112 09:42:43.761" endtime="20201112 09:42:43.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.756" endtime="20201112 09:42:43.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:43.770" level="INFO">${RESULT} = [{'time': 0.018558792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018567458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:43.767" endtime="20201112 09:42:43.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:43.784" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, ...</msg>
<status status="PASS" starttime="20201112 09:42:43.771" endtime="20201112 09:42:43.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.788" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:43.787" endtime="20201112 09:42:43.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.791" level="INFO">VALUE: [4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 09:42:43.789" endtime="20201112 09:42:43.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.785" endtime="20201112 09:42:43.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.794" endtime="20201112 09:42:43.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:43.797" endtime="20201112 09:42:43.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.796" endtime="20201112 09:42:43.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.792" endtime="20201112 09:42:43.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.383" endtime="20201112 09:42:43.818"></status>
</kw>
<msg timestamp="20201112 09:42:43.818" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.827" endtime="20201112 09:42:43.836"></status>
</kw>
<msg timestamp="20201112 09:42:43.837" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:43.825" endtime="20201112 09:42:43.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.839" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:43.838" endtime="20201112 09:42:43.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.840" endtime="20201112 09:42:43.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.822" endtime="20201112 09:42:43.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.820" endtime="20201112 09:42:43.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.849" endtime="20201112 09:42:44.138"></status>
</kw>
<msg timestamp="20201112 09:42:44.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019441111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019441583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:43.848" endtime="20201112 09:42:44.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019441111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019441583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.142" endtime="20201112 09:42:44.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.151" endtime="20201112 09:42:44.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.845" endtime="20201112 09:42:44.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.844" endtime="20201112 09:42:44.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.157" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:44.156" endtime="20201112 09:42:44.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.162" level="INFO">VALUE: [{'time': 0.019441111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019441583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019445736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.153000000003265e-06, 'source_diff': 4.153000000003265e-06}, {'time': 0.019446222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019460986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.019461458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019468264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.019468736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019480597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1860999999998428e-05, 'source_diff': 1.1860999999998428e-05}, {'time': 0.019481069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019491083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.019491556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01950025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.019500722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019513917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194999999997098e-05, 'source_diff': 1.3194999999997098e-05}, {'time': 0.019514389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019528417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.019528903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019542083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3179999999998054e-05, 'source_diff': 1.3179999999998054e-05}, {'time': 0.019542569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019548111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.019548583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019554764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180999999997466e-06, 'source_diff': 6.180999999997466e-06}, {'time': 0.019555236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019564764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527999999998232e-06, 'source_diff': 9.527999999998232e-06}, {'time': 0.019565236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019571083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.019571569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019583597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.019584069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019591431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3620000000003405e-06, 'source_diff': 7.3620000000003405e-06}, {'time': 0.019591903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019604097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.019604569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019616806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2237000000001746e-05, 'source_diff': 1.2237000000001746e-05}, {'time': 0.019617278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019621597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.019622069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019633097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027999999999732e-05, 'source_diff': 1.1027999999999732e-05}, {'time': 0.019633569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019645111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1541999999999802e-05, 'source_diff': 1.1541999999999802e-05}, {'time': 0.019645583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019651264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.01965175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019657264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.01965775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019663431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680999999996966e-06, 'source_diff': 5.680999999996966e-06}, {'time': 0.019663917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019671944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.027000000000728e-06, 'source_diff': 8.027000000000728e-06}, {'time': 0.019672417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019680764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.01968125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019688097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.019688583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.01969275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.019693222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019705917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2695000000000067e-05, 'source_diff': 1.2695000000000067e-05}, {'time': 0.019706389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019711583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.019712069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019725917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3848000000000332e-05, 'source_diff': 1.3848000000000332e-05}, {'time': 0.019726403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01973925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.019739736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019754417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4680999999999028e-05, 'source_diff': 1.4680999999999028e-05}, {'time': 0.019754903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019767944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.304099999999836e-05, 'source_diff': 1.304099999999836e-05}, {'time': 0.019768417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019782597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4179999999999054e-05, 'source_diff': 1.4179999999999054e-05}, {'time': 0.019783069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019788597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.019789069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019794264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.019794736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019805097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.019805569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019810764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.195000000002975e-06, 'source_diff': 5.195000000002975e-06}, {'time': 0.019811236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019816264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.019816736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019823111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.019823583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019832931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.34800000000277e-06, 'source_diff': 9.34800000000277e-06}, {'time': 0.019833417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019846764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347000000000359e-05, 'source_diff': 1.3347000000000359e-05}, {'time': 0.01984725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019855431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.019855917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019861431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.019861917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019871111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.019871583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019878944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.019879417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019890444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027000000000259e-05, 'source_diff': 1.1027000000000259e-05}, {'time': 0.019890917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019900611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.693999999997593e-06, 'source_diff': 9.693999999997593e-06}, {'time': 0.019901083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019908458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.019908931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:44.158" endtime="20201112 09:42:44.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.154" endtime="20201112 09:42:44.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:44.189" level="INFO">${debug-compressed} = {'diff': [0, 4.7199999999789077e-07, 4.153000000003265e-06, 4.859999999974607e-07, 1.4764000000000443e-05, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 1.1860999999998428e-05, ...</msg>
<status status="PASS" starttime="20201112 09:42:44.165" endtime="20201112 09:42:44.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.193" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:44.192" endtime="20201112 09:42:44.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.197" level="INFO">VALUE: {'diff': [0, 4.7199999999789077e-07, 4.153000000003265e-06, 4.859999999974607e-07, 1.4764000000000443e-05, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 1.1860999999998428e-05, 4.720000000013602e-07, 1.0013999999999162e-05, 4.7300000000083386e-07, 8.694000000000063e-06, 4.720000000013602e-07, 1.3194999999997098e-05, 4.720000000013602e-07, 1.4027999999999263e-05, 4.860000000009301e-07, 1.3179999999998054e-05, 4.860000000009301e-07, 5.542000000000741e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 9.527999999998232e-06, 4.720000000013602e-07, 5.846999999999797e-06, 4.860000000009301e-07, 1.2028000000000733e-05, 4.7199999999789077e-07, 7.3620000000003405e-06, 4.720000000013602e-07, 1.2194000000000094e-05, 4.7199999999789077e-07, 1.2237000000001746e-05, 4.7199999999789077e-07, 4.319000000002626e-06, 4.7199999999789077e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 5.681000000000436e-06, 4.859999999974607e-07, 5.514000000001601e-06, 4.860000000009301e-07, 5.680999999996966e-06, 4.860000000009301e-07, 8.027000000000728e-06, 4.7300000000083386e-07, 8.346999999998828e-06, 4.860000000009301e-07, 6.847000000000797e-06, 4.859999999974607e-07, 4.166999999999366e-06, 4.720000000013602e-07, 1.2695000000000067e-05, 4.720000000013602e-07, 5.194000000000032e-06, 4.859999999974607e-07, 1.3848000000000332e-05, 4.860000000009301e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.4680999999999028e-05, 4.860000000009301e-07, 1.304099999999836e-05, 4.7300000000083386e-07, 1.4179999999999054e-05, 4.720000000013602e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 5.1949999999995056e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 5.195000000002975e-06, 4.7199999999789077e-07, 5.028000000000671e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.7199999999789077e-07, 9.34800000000277e-06, 4.859999999974607e-07, 1.3347000000000359e-05, 4.860000000009301e-07, 8.180999999999466e-06, 4.860000000009301e-07, 5.5139999999981315e-06, 4.860000000009301e-07, 9.194000000000563e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.7300000000083386e-07, 1.1027000000000259e-05, 4.7300000000083386e-07, 9.693999999997593e-06, 4.720000000013602e-07, 7.375000000000437e-06, 4.7300000000083386e-07], 'eventsource_diff': [0, 4.7199999999789077e-07, 4.153000000003265e-06, 4.859999999974607e-07, 1.4764000000000443e-05, 4.720000000013602e-07, 6.805999999998091e-06, 4.720000000013602e-07, 1.1860999999998428e-05, 4.720000000013602e-07, 1.0013999999999162e-05, 4.7300000000083386e-07, 8.694000000000063e-06, 4.720000000013602e-07, 1.3194999999997098e-05, 4.720000000013602e-07, 1.4027999999999263e-05, 4.860000000009301e-07, 1.3179999999998054e-05, 4.860000000009301e-07, 5.542000000000741e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 9.527999999998232e-06, 4.720000000013602e-07, 5.846999999999797e-06, 4.860000000009301e-07, 1.2028000000000733e-05, 4.7199999999789077e-07, 7.3620000000003405e-06, 4.720000000013602e-07, 1.2194000000000094e-05, 4.7199999999789077e-07, 1.2237000000001746e-05, 4.7199999999789077e-07, 4.319000000002626e-06, 4.7199999999789077e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 5.681000000000436e-06, 4.859999999974607e-07, 5.514000000001601e-06, 4.860000000009301e-07, 5.680999999996966e-06, 4.860000000009301e-07, 8.027000000000728e-06, 4.7300000000083386e-07, 8.346999999998828e-06, 4.860000000009301e-07, 6.847000000000797e-06, 4.859999999974607e-07, 4.166999999999366e-06, 4.720000000013602e-07, 1.2695000000000067e-05, 4.720000000013602e-07, 5.194000000000032e-06, 4.859999999974607e-07, 1.3848000000000332e-05, 4.860000000009301e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.4680999999999028e-05, 4.860000000009301e-07, 1.304099999999836e-05, 4.7300000000083386e-07, 1.4179999999999054e-05, 4.720000000013602e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 5.1949999999995056e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 5.195000000002975e-06, 4.7199999999789077e-07, 5.028000000000671e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.7199999999789077e-07, 9.34800000000277e-06, 4.859999999974607e-07, 1.3347000000000359e-05, 4.860000000009301e-07, 8.180999999999466e-06, 4.860000000009301e-07, 5.5139999999981315e-06, 4.860000000009301e-07, 9.194000000000563e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.7300000000083386e-07, 1.1027000000000259e-05, 4.7300000000083386e-07, 9.693999999997593e-06, 4.720000000013602e-07, 7.375000000000437e-06, 4.7300000000083386e-07], 'sourcetime': [0.019441111, 0.019441583, 0.019445736, 0.019446222, 0.019460986, 0.019461458, 0.019468264, 0.019468736, 0.019480597, 0.019481069, 0.019491083, 0.019491556, 0.01950025, 0.019500722, 0.019513917, 0.019514389, 0.019528417, 0.019528903, 0.019542083, 0.019542569, 0.019548111, 0.019548583, 0.019554764, 0.019555236, 0.019564764, 0.019565236, 0.019571083, 0.019571569, 0.019583597, 0.019584069, 0.019591431, 0.019591903, 0.019604097, 0.019604569, 0.019616806, 0.019617278, 0.019621597, 0.019622069, 0.019633097, 0.019633569, 0.019645111, 0.019645583, 0.019651264, 0.01965175, 0.019657264, 0.01965775, 0.019663431, 0.019663917, 0.019671944, 0.019672417, 0.019680764, 0.01968125, 0.019688097, 0.019688583, 0.01969275, 0.019693222, 0.019705917, 0.019706389, 0.019711583, 0.019712069, 0.019725917, 0.019726403, 0.01973925, 0.019739736, 0.019754417, 0.019754903, 0.019767944, 0.019768417, 0.019782597, 0.019783069, 0.019788597, 0.019789069, 0.019794264, 0.019794736, 0.019805097, 0.019805569, 0.019810764, 0.019811236, 0.019816264, 0.019816736, 0.019823111, 0.019823583, 0.019832931, 0.019833417, 0.019846764, 0.01984725, 0.019855431, 0.019855917, 0.019861431, 0.019861917, 0.019871111, 0.019871583, 0.019878944, 0.019879417, 0.019890444, 0.019890917, 0.019900611, 0.019901083, 0.019908458, 0.019908931]}</msg>
<status status="PASS" starttime="20201112 09:42:44.194" endtime="20201112 09:42:44.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.190" endtime="20201112 09:42:44.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:44.202" level="INFO">${RESULT} = [{'time': 0.019441583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019446222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:44.199" endtime="20201112 09:42:44.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:44.216" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86...</msg>
<status status="PASS" starttime="20201112 09:42:44.203" endtime="20201112 09:42:44.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.221" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:44.220" endtime="20201112 09:42:44.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.223" level="INFO">VALUE: [4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 09:42:44.222" endtime="20201112 09:42:44.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.217" endtime="20201112 09:42:44.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.226" endtime="20201112 09:42:44.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:44.230" endtime="20201112 09:42:44.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.228" endtime="20201112 09:42:44.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.225" endtime="20201112 09:42:44.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.819" endtime="20201112 09:42:44.250"></status>
</kw>
<msg timestamp="20201112 09:42:44.251" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.258" endtime="20201112 09:42:44.269"></status>
</kw>
<msg timestamp="20201112 09:42:44.269" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.257" endtime="20201112 09:42:44.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.272" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.270" endtime="20201112 09:42:44.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.273" endtime="20201112 09:42:44.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.254" endtime="20201112 09:42:44.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.253" endtime="20201112 09:42:44.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.282" endtime="20201112 09:42:44.571"></status>
</kw>
<msg timestamp="20201112 09:42:44.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018566389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018566861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.281" endtime="20201112 09:42:44.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018566389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018566861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.575" endtime="20201112 09:42:44.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.584" endtime="20201112 09:42:44.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.278" endtime="20201112 09:42:44.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.276" endtime="20201112 09:42:44.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.591" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:44.589" endtime="20201112 09:42:44.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.597" level="INFO">VALUE: [{'time': 0.018566389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018566861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018572556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.018573028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018581611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.583000000002977e-06, 'source_diff': 8.583000000002977e-06}, {'time': 0.018582083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018589889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.805999999999091e-06, 'source_diff': 7.805999999999091e-06}, {'time': 0.018590375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018599236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.861000000002367e-06, 'source_diff': 8.861000000002367e-06}, {'time': 0.018599708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018605083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.018605556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018617056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1500000000001093e-05, 'source_diff': 1.1500000000001093e-05}, {'time': 0.018617542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018624903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.018625375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018635056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.681000000000967e-06, 'source_diff': 9.681000000000967e-06}, {'time': 0.018635542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018645569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.018646042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01866075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4707999999998694e-05, 'source_diff': 1.4707999999998694e-05}, {'time': 0.018661222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018666417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.018666889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018677069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180000000001993e-05, 'source_diff': 1.0180000000001993e-05}, {'time': 0.018677542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018682903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.018683375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018693069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.694000000001063e-06, 'source_diff': 9.694000000001063e-06}, {'time': 0.018693542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018697722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.018698194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018705625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.430999999998716e-06, 'source_diff': 7.430999999998716e-06}, {'time': 0.018706097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018712556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.459000000000326e-06, 'source_diff': 6.459000000000326e-06}, {'time': 0.018713028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018721389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.018721861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018731222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.018731694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018743722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.018744194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018757722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3528000000002233e-05, 'source_diff': 1.3528000000002233e-05}, {'time': 0.018758194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018763056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.86200000000131e-06, 'source_diff': 4.86200000000131e-06}, {'time': 0.018763528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018776389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.018776875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018787556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0681000000001967e-05, 'source_diff': 1.0681000000001967e-05}, {'time': 0.018788042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018800569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.252699999999829e-05, 'source_diff': 1.252699999999829e-05}, {'time': 0.018801042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018806722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.018807208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018813889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.681000000001436e-06, 'source_diff': 6.681000000001436e-06}, {'time': 0.018814375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018820583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2079999999971325e-06, 'source_diff': 6.2079999999971325e-06}, {'time': 0.018821056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018825736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.018826208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018834736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.018835208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018849236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.018849708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018856778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.070000000001381e-06, 'source_diff': 7.070000000001381e-06}, {'time': 0.01885725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018863583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333000000000727e-06, 'source_diff': 6.333000000000727e-06}, {'time': 0.018864056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018875569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.151299999999772e-05, 'source_diff': 1.151299999999772e-05}, {'time': 0.018876042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018888403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2361000000002398e-05, 'source_diff': 1.2361000000002398e-05}, {'time': 0.018888875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018896069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.194000000002032e-06, 'source_diff': 7.194000000002032e-06}, {'time': 0.018896556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018904403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.018904889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01891225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.018912722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018927069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4347000000001359e-05, 'source_diff': 1.4347000000001359e-05}, {'time': 0.018927556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018940417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.018940889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018952083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1194000000002563e-05, 'source_diff': 1.1194000000002563e-05}, {'time': 0.018952556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018956806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.018957278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018961375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.018961847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018973208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1360999999997928e-05, 'source_diff': 1.1360999999997928e-05}, {'time': 0.018973681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018987042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.018987514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019000542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3027999999998263e-05, 'source_diff': 1.3027999999998263e-05}, {'time': 0.019001014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019011875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.019012361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019018708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.347000000000297e-06, 'source_diff': 6.347000000000297e-06}, {'time': 0.019019181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019029208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.019029694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:44.592" endtime="20201112 09:42:44.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.587" endtime="20201112 09:42:44.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:44.623" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999789077e-07, 8.583000000002977e-06, 4.7199999999789077e-07, 7.805999999999091e-06, 4.860000000009301e-07, 8.861000000002367e-06, 4...</msg>
<status status="PASS" starttime="20201112 09:42:44.600" endtime="20201112 09:42:44.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.627" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:44.626" endtime="20201112 09:42:44.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.631" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999789077e-07, 8.583000000002977e-06, 4.7199999999789077e-07, 7.805999999999091e-06, 4.860000000009301e-07, 8.861000000002367e-06, 4.7199999999789077e-07, 5.375000000001906e-06, 4.729999999973644e-07, 1.1500000000001093e-05, 4.860000000009301e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 9.681000000000967e-06, 4.860000000009301e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 1.4707999999998694e-05, 4.720000000013602e-07, 5.1949999999995056e-06, 4.7199999999789077e-07, 1.0180000000001993e-05, 4.729999999973644e-07, 5.361000000002336e-06, 4.7199999999789077e-07, 9.694000000001063e-06, 4.7300000000083386e-07, 4.179999999999462e-06, 4.720000000013602e-07, 7.430999999998716e-06, 4.720000000013602e-07, 6.459000000000326e-06, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 9.360999999999398e-06, 4.720000000013602e-07, 1.2028000000000733e-05, 4.7199999999789077e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 4.86200000000131e-06, 4.720000000013602e-07, 1.2860999999999428e-05, 4.859999999974607e-07, 1.0681000000001967e-05, 4.860000000009301e-07, 1.252699999999829e-05, 4.7300000000083386e-07, 5.680000000000962e-06, 4.859999999974607e-07, 6.681000000001436e-06, 4.860000000009301e-07, 6.2079999999971325e-06, 4.7300000000083386e-07, 4.679999999999962e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.7199999999789077e-07, 1.4027999999999263e-05, 4.720000000013602e-07, 7.070000000001381e-06, 4.7199999999789077e-07, 6.333000000000727e-06, 4.7300000000083386e-07, 1.151299999999772e-05, 4.7300000000083386e-07, 1.2361000000002398e-05, 4.7199999999789077e-07, 7.194000000002032e-06, 4.869999999969343e-07, 7.847000000001797e-06, 4.860000000009301e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.4347000000001359e-05, 4.870000000004038e-07, 1.2860999999999428e-05, 4.7199999999789077e-07, 1.1194000000002563e-05, 4.729999999973644e-07, 4.250000000000781e-06, 4.720000000013602e-07, 4.096999999998047e-06, 4.720000000013602e-07, 1.1360999999997928e-05, 4.7300000000083386e-07, 1.3360999999999928e-05, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 1.0861000000000898e-05, 4.859999999974607e-07, 6.347000000000297e-06, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.860000000009301e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999789077e-07, 8.583000000002977e-06, 4.7199999999789077e-07, 7.805999999999091e-06, 4.860000000009301e-07, 8.861000000002367e-06, 4.7199999999789077e-07, 5.375000000001906e-06, 4.729999999973644e-07, 1.1500000000001093e-05, 4.860000000009301e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 9.681000000000967e-06, 4.860000000009301e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 1.4707999999998694e-05, 4.720000000013602e-07, 5.1949999999995056e-06, 4.7199999999789077e-07, 1.0180000000001993e-05, 4.729999999973644e-07, 5.361000000002336e-06, 4.7199999999789077e-07, 9.694000000001063e-06, 4.7300000000083386e-07, 4.179999999999462e-06, 4.720000000013602e-07, 7.430999999998716e-06, 4.720000000013602e-07, 6.459000000000326e-06, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 9.360999999999398e-06, 4.720000000013602e-07, 1.2028000000000733e-05, 4.7199999999789077e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 4.86200000000131e-06, 4.720000000013602e-07, 1.2860999999999428e-05, 4.859999999974607e-07, 1.0681000000001967e-05, 4.860000000009301e-07, 1.252699999999829e-05, 4.7300000000083386e-07, 5.680000000000962e-06, 4.859999999974607e-07, 6.681000000001436e-06, 4.860000000009301e-07, 6.2079999999971325e-06, 4.7300000000083386e-07, 4.679999999999962e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.7199999999789077e-07, 1.4027999999999263e-05, 4.720000000013602e-07, 7.070000000001381e-06, 4.7199999999789077e-07, 6.333000000000727e-06, 4.7300000000083386e-07, 1.151299999999772e-05, 4.7300000000083386e-07, 1.2361000000002398e-05, 4.7199999999789077e-07, 7.194000000002032e-06, 4.869999999969343e-07, 7.847000000001797e-06, 4.860000000009301e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.4347000000001359e-05, 4.870000000004038e-07, 1.2860999999999428e-05, 4.7199999999789077e-07, 1.1194000000002563e-05, 4.729999999973644e-07, 4.250000000000781e-06, 4.720000000013602e-07, 4.096999999998047e-06, 4.720000000013602e-07, 1.1360999999997928e-05, 4.7300000000083386e-07, 1.3360999999999928e-05, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 1.0861000000000898e-05, 4.859999999974607e-07, 6.347000000000297e-06, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.860000000009301e-07], 'sourcetime': [0.018566389, 0.018566861, 0.018572556, 0.018573028, 0.018581611, 0.018582083, 0.018589889, 0.018590375, 0.018599236, 0.018599708, 0.018605083, 0.018605556, 0.018617056, 0.018617542, 0.018624903, 0.018625375, 0.018635056, 0.018635542, 0.018645569, 0.018646042, 0.01866075, 0.018661222, 0.018666417, 0.018666889, 0.018677069, 0.018677542, 0.018682903, 0.018683375, 0.018693069, 0.018693542, 0.018697722, 0.018698194, 0.018705625, 0.018706097, 0.018712556, 0.018713028, 0.018721389, 0.018721861, 0.018731222, 0.018731694, 0.018743722, 0.018744194, 0.018757722, 0.018758194, 0.018763056, 0.018763528, 0.018776389, 0.018776875, 0.018787556, 0.018788042, 0.018800569, 0.018801042, 0.018806722, 0.018807208, 0.018813889, 0.018814375, 0.018820583, 0.018821056, 0.018825736, 0.018826208, 0.018834736, 0.018835208, 0.018849236, 0.018849708, 0.018856778, 0.01885725, 0.018863583, 0.018864056, 0.018875569, 0.018876042, 0.018888403, 0.018888875, 0.018896069, 0.018896556, 0.018904403, 0.018904889, 0.01891225, 0.018912722, 0.018927069, 0.018927556, 0.018940417, 0.018940889, 0.018952083, 0.018952556, 0.018956806, 0.018957278, 0.018961375, 0.018961847, 0.018973208, 0.018973681, 0.018987042, 0.018987514, 0.019000542, 0.019001014, 0.019011875, 0.019012361, 0.019018708, 0.019019181, 0.019029208, 0.019029694]}</msg>
<status status="PASS" starttime="20201112 09:42:44.628" endtime="20201112 09:42:44.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.624" endtime="20201112 09:42:44.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:44.636" level="INFO">${RESULT} = [{'time': 0.018566861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018573028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:44.633" endtime="20201112 09:42:44.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:44.650" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4....</msg>
<status status="PASS" starttime="20201112 09:42:44.637" endtime="20201112 09:42:44.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.654" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:44.653" endtime="20201112 09:42:44.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.657" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.869999999969343e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 09:42:44.655" endtime="20201112 09:42:44.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.651" endtime="20201112 09:42:44.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.660" endtime="20201112 09:42:44.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:44.663" endtime="20201112 09:42:44.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.662" endtime="20201112 09:42:44.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.658" endtime="20201112 09:42:44.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.251" endtime="20201112 09:42:44.684"></status>
</kw>
<msg timestamp="20201112 09:42:44.684" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.693" endtime="20201112 09:42:44.702"></status>
</kw>
<msg timestamp="20201112 09:42:44.703" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.690" endtime="20201112 09:42:44.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.705" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.704" endtime="20201112 09:42:44.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.706" endtime="20201112 09:42:44.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.688" endtime="20201112 09:42:44.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.686" endtime="20201112 09:42:44.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.715" endtime="20201112 09:42:45.003"></status>
</kw>
<msg timestamp="20201112 09:42:45.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019414667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019415139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.714" endtime="20201112 09:42:45.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019414667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019415139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.008" endtime="20201112 09:42:45.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.016" endtime="20201112 09:42:45.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.711" endtime="20201112 09:42:45.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.710" endtime="20201112 09:42:45.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.023" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:45.022" endtime="20201112 09:42:45.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.028" level="INFO">VALUE: [{'time': 0.019414667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019415139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019428333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3193999999997624e-05, 'source_diff': 1.3193999999997624e-05}, {'time': 0.019428806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019439667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.019440139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019446417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.019446889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019452667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.019453153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019461167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.019461653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019469347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.694000000002532e-06, 'source_diff': 7.694000000002532e-06}, {'time': 0.019469819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019483167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347999999999832e-05, 'source_diff': 1.3347999999999832e-05}, {'time': 0.019483653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019497181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.019497653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019503181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.019503653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019511181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.019511653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019521694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0040999999998829e-05, 'source_diff': 1.0040999999998829e-05}, {'time': 0.019522167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019531014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.019531486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019539014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.019539486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019544181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.695000000002475e-06, 'source_diff': 4.695000000002475e-06}, {'time': 0.019544653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019550181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.019550653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019558014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.019558486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019570514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.019571, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019583694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2693999999997124e-05, 'source_diff': 1.2693999999997124e-05}, {'time': 0.019584167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019596847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2680000000001024e-05, 'source_diff': 1.2680000000001024e-05}, {'time': 0.019597333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019603528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194999999997036e-06, 'source_diff': 6.194999999997036e-06}, {'time': 0.019604, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019611361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.019611833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019617861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.019618333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019625861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.019626333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019637042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0709000000001107e-05, 'source_diff': 1.0709000000001107e-05}, {'time': 0.019637514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019645694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.019646167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019659528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.01966, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019665361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.019665833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019680528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4694999999998598e-05, 'source_diff': 1.4694999999998598e-05}, {'time': 0.019681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019694375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3374999999999498e-05, 'source_diff': 1.3374999999999498e-05}, {'time': 0.019694847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019702861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.013999999997162e-06, 'source_diff': 8.013999999997162e-06}, {'time': 0.019703347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019711542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.019712014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019724528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2514000000001663e-05, 'source_diff': 1.2514000000001663e-05}, {'time': 0.019725014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019729375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.019729847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019737361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.019737847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019746042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.019746514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019750681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.019751153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019763694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.254099999999786e-05, 'source_diff': 1.254099999999786e-05}, {'time': 0.019764167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019775681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.019776167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019781694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.526999999998228e-06, 'source_diff': 5.526999999998228e-06}, {'time': 0.019782167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019794347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2180000000000524e-05, 'source_diff': 1.2180000000000524e-05}, {'time': 0.019794833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019807681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2847999999999332e-05, 'source_diff': 1.2847999999999332e-05}, {'time': 0.019808167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019819028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0860999999997428e-05, 'source_diff': 1.0860999999997428e-05}, {'time': 0.0198195, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019824194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.019824667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019835528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.019836, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019847208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1208000000002133e-05, 'source_diff': 1.1208000000002133e-05}, {'time': 0.019847681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019861861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4180000000002524e-05, 'source_diff': 1.4180000000002524e-05}, {'time': 0.019862333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019871208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.019871681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019879694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.013000000001158e-06, 'source_diff': 8.013000000001158e-06}, {'time': 0.019880167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019889194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.026999999998259e-06, 'source_diff': 9.026999999998259e-06}, {'time': 0.019889681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:45.024" endtime="20201112 09:42:45.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.020" endtime="20201112 09:42:45.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:45.054" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 1.3193999999997624e-05, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 6.278000000001921e-06, 4.7199999999789077e-07, 5.778000000001421e-06...</msg>
<status status="PASS" starttime="20201112 09:42:45.031" endtime="20201112 09:42:45.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.058" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:45.057" endtime="20201112 09:42:45.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.062" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.3193999999997624e-05, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 6.278000000001921e-06, 4.7199999999789077e-07, 5.778000000001421e-06, 4.860000000009301e-07, 8.014000000000632e-06, 4.859999999974607e-07, 7.694000000002532e-06, 4.7199999999789077e-07, 1.3347999999999832e-05, 4.860000000009301e-07, 1.3527999999998763e-05, 4.720000000013602e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 7.527999999999702e-06, 4.720000000013602e-07, 1.0040999999998829e-05, 4.7300000000083386e-07, 8.846999999999328e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 4.695000000002475e-06, 4.7199999999789077e-07, 5.528000000001171e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.2028000000000733e-05, 4.860000000009301e-07, 1.2693999999997124e-05, 4.7300000000083386e-07, 1.2680000000001024e-05, 4.860000000009301e-07, 6.194999999997036e-06, 4.720000000013602e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 1.0709000000001107e-05, 4.7199999999789077e-07, 8.179999999999993e-06, 4.7300000000083386e-07, 1.3360999999999928e-05, 4.720000000013602e-07, 5.360999999998867e-06, 4.720000000013602e-07, 1.4694999999998598e-05, 4.720000000013602e-07, 1.3374999999999498e-05, 4.720000000013602e-07, 8.013999999997162e-06, 4.860000000009301e-07, 8.194999999999036e-06, 4.720000000013602e-07, 1.2514000000001663e-05, 4.859999999974607e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 7.514000000000132e-06, 4.860000000009301e-07, 8.194999999999036e-06, 4.720000000013602e-07, 4.166999999999366e-06, 4.720000000013602e-07, 1.254099999999786e-05, 4.7300000000083386e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 5.526999999998228e-06, 4.7300000000083386e-07, 1.2180000000000524e-05, 4.860000000009301e-07, 1.2847999999999332e-05, 4.860000000009301e-07, 1.0860999999997428e-05, 4.720000000013602e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 1.1208000000002133e-05, 4.729999999973644e-07, 1.4180000000002524e-05, 4.7199999999789077e-07, 8.875000000001937e-06, 4.729999999973644e-07, 8.013000000001158e-06, 4.7300000000083386e-07, 9.026999999998259e-06, 4.870000000004038e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 1.3193999999997624e-05, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 6.278000000001921e-06, 4.7199999999789077e-07, 5.778000000001421e-06, 4.860000000009301e-07, 8.014000000000632e-06, 4.859999999974607e-07, 7.694000000002532e-06, 4.7199999999789077e-07, 1.3347999999999832e-05, 4.860000000009301e-07, 1.3527999999998763e-05, 4.720000000013602e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 7.527999999999702e-06, 4.720000000013602e-07, 1.0040999999998829e-05, 4.7300000000083386e-07, 8.846999999999328e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 4.695000000002475e-06, 4.7199999999789077e-07, 5.528000000001171e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.2028000000000733e-05, 4.860000000009301e-07, 1.2693999999997124e-05, 4.7300000000083386e-07, 1.2680000000001024e-05, 4.860000000009301e-07, 6.194999999997036e-06, 4.720000000013602e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 1.0709000000001107e-05, 4.7199999999789077e-07, 8.179999999999993e-06, 4.7300000000083386e-07, 1.3360999999999928e-05, 4.720000000013602e-07, 5.360999999998867e-06, 4.720000000013602e-07, 1.4694999999998598e-05, 4.720000000013602e-07, 1.3374999999999498e-05, 4.720000000013602e-07, 8.013999999997162e-06, 4.860000000009301e-07, 8.194999999999036e-06, 4.720000000013602e-07, 1.2514000000001663e-05, 4.859999999974607e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 7.514000000000132e-06, 4.860000000009301e-07, 8.194999999999036e-06, 4.720000000013602e-07, 4.166999999999366e-06, 4.720000000013602e-07, 1.254099999999786e-05, 4.7300000000083386e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 5.526999999998228e-06, 4.7300000000083386e-07, 1.2180000000000524e-05, 4.860000000009301e-07, 1.2847999999999332e-05, 4.860000000009301e-07, 1.0860999999997428e-05, 4.720000000013602e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 1.1208000000002133e-05, 4.729999999973644e-07, 1.4180000000002524e-05, 4.7199999999789077e-07, 8.875000000001937e-06, 4.729999999973644e-07, 8.013000000001158e-06, 4.7300000000083386e-07, 9.026999999998259e-06, 4.870000000004038e-07], 'sourcetime': [0.019414667, 0.019415139, 0.019428333, 0.019428806, 0.019439667, 0.019440139, 0.019446417, 0.019446889, 0.019452667, 0.019453153, 0.019461167, 0.019461653, 0.019469347, 0.019469819, 0.019483167, 0.019483653, 0.019497181, 0.019497653, 0.019503181, 0.019503653, 0.019511181, 0.019511653, 0.019521694, 0.019522167, 0.019531014, 0.019531486, 0.019539014, 0.019539486, 0.019544181, 0.019544653, 0.019550181, 0.019550653, 0.019558014, 0.019558486, 0.019570514, 0.019571, 0.019583694, 0.019584167, 0.019596847, 0.019597333, 0.019603528, 0.019604, 0.019611361, 0.019611833, 0.019617861, 0.019618333, 0.019625861, 0.019626333, 0.019637042, 0.019637514, 0.019645694, 0.019646167, 0.019659528, 0.01966, 0.019665361, 0.019665833, 0.019680528, 0.019681, 0.019694375, 0.019694847, 0.019702861, 0.019703347, 0.019711542, 0.019712014, 0.019724528, 0.019725014, 0.019729375, 0.019729847, 0.019737361, 0.019737847, 0.019746042, 0.019746514, 0.019750681, 0.019751153, 0.019763694, 0.019764167, 0.019775681, 0.019776167, 0.019781694, 0.019782167, 0.019794347, 0.019794833, 0.019807681, 0.019808167, 0.019819028, 0.0198195, 0.019824194, 0.019824667, 0.019835528, 0.019836, 0.019847208, 0.019847681, 0.019861861, 0.019862333, 0.019871208, 0.019871681, 0.019879694, 0.019880167, 0.019889194, 0.019889681]}</msg>
<status status="PASS" starttime="20201112 09:42:45.059" endtime="20201112 09:42:45.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.055" endtime="20201112 09:42:45.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:45.068" level="INFO">${RESULT} = [{'time': 0.019415139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019428806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:45.065" endtime="20201112 09:42:45.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:45.082" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4....</msg>
<status status="PASS" starttime="20201112 09:42:45.069" endtime="20201112 09:42:45.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.087" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:45.086" endtime="20201112 09:42:45.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.089" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.870000000004038e-07]</msg>
<status status="PASS" starttime="20201112 09:42:45.088" endtime="20201112 09:42:45.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.083" endtime="20201112 09:42:45.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.092" endtime="20201112 09:42:45.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:45.096" endtime="20201112 09:42:45.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.094" endtime="20201112 09:42:45.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.091" endtime="20201112 09:42:45.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.685" endtime="20201112 09:42:45.116"></status>
</kw>
<msg timestamp="20201112 09:42:45.116" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.124" endtime="20201112 09:42:45.134"></status>
</kw>
<msg timestamp="20201112 09:42:45.135" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.123" endtime="20201112 09:42:45.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.137" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.136" endtime="20201112 09:42:45.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.138" endtime="20201112 09:42:45.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.120" endtime="20201112 09:42:45.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.118" endtime="20201112 09:42:45.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.147" endtime="20201112 09:42:45.435"></status>
</kw>
<msg timestamp="20201112 09:42:45.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018468069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018468556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.146" endtime="20201112 09:42:45.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018468069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018468556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.440" endtime="20201112 09:42:45.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.457" endtime="20201112 09:42:45.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.143" endtime="20201112 09:42:45.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.141" endtime="20201112 09:42:45.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.463" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:45.462" endtime="20201112 09:42:45.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.468" level="INFO">VALUE: [{'time': 0.018468069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018468556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018479764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1207999999998663e-05, 'source_diff': 1.1207999999998663e-05}, {'time': 0.018480236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018491583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1346999999998358e-05, 'source_diff': 1.1346999999998358e-05}, {'time': 0.018492056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018504083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2027000000001259e-05, 'source_diff': 1.2027000000001259e-05}, {'time': 0.018504556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018516292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1736000000001773e-05, 'source_diff': 1.1736000000001773e-05}, {'time': 0.018516764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018524083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.318999999998688e-06, 'source_diff': 7.318999999998688e-06}, {'time': 0.018524556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01853925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4693999999999124e-05, 'source_diff': 1.4693999999999124e-05}, {'time': 0.018539722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018548917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.018549403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018556583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180000000002462e-06, 'source_diff': 7.180000000002462e-06}, {'time': 0.018557069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.01856925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2180999999999997e-05, 'source_diff': 1.2180999999999997e-05}, {'time': 0.018569736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018579083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018579569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018589597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.018590069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018597097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.018597569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018611931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4362000000000402e-05, 'source_diff': 1.4362000000000402e-05}, {'time': 0.018612403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018626444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.404099999999936e-05, 'source_diff': 1.404099999999936e-05}, {'time': 0.018626917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018639764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.018640236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018647597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.018648069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018656944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.875000000001937e-06, 'source_diff': 8.875000000001937e-06}, {'time': 0.018657417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018662625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.018663097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018668431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3339999999992005e-06, 'source_diff': 5.3339999999992005e-06}, {'time': 0.018668917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018677278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.01867775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018691764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.01869225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018698097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018698583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018709611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027999999999732e-05, 'source_diff': 1.1027999999999732e-05}, {'time': 0.018710083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018717444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.018717917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018724944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.026999999999728e-06, 'source_diff': 7.026999999999728e-06}, {'time': 0.018725417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018735792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.018736264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018747278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1014000000000163e-05, 'source_diff': 1.1014000000000163e-05}, {'time': 0.01874775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018754292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.018754764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018763778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999998162e-06, 'source_diff': 9.013999999998162e-06}, {'time': 0.01876425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018773444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.018773917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018782111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.018782583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018789611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.028000000002671e-06, 'source_diff': 7.028000000002671e-06}, {'time': 0.018790097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018795639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.018796111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018803292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999998466e-06, 'source_diff': 7.180999999998466e-06}, {'time': 0.018803764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018815292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.018815764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018827111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1347000000001828e-05, 'source_diff': 1.1347000000001828e-05}, {'time': 0.018827597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018837444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.846999999996858e-06, 'source_diff': 9.846999999996858e-06}, {'time': 0.018837931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018845792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.018846264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018859972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3707999999997694e-05, 'source_diff': 1.3707999999997694e-05}, {'time': 0.018860444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018869625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.018870097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018878292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.018878764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018888153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.389000000002007e-06, 'source_diff': 9.389000000002007e-06}, {'time': 0.018888625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018895625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.018896097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018910625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.018911111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018925458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.434699999999789e-05, 'source_diff': 1.434699999999789e-05}, {'time': 0.018925944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018933625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.018934111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018945458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1346999999998358e-05, 'source_diff': 1.1346999999998358e-05}, {'time': 0.018945944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018950292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.34800000000124e-06, 'source_diff': 4.34800000000124e-06}, {'time': 0.018950778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018956472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6939999999970625e-06, 'source_diff': 5.6939999999970625e-06}, {'time': 0.018956944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:45.464" endtime="20201112 09:42:45.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.460" endtime="20201112 09:42:45.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:45.495" level="INFO">${debug-compressed} = {'diff': [0, 4.870000000004038e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 1.1346999999998358e-05, 4.7300000000083386e-07, 1.2027000000001259e-05, 4.729999999973644e-07, 1.1736000000001773e-05...</msg>
<status status="PASS" starttime="20201112 09:42:45.471" endtime="20201112 09:42:45.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.499" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:45.498" endtime="20201112 09:42:45.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.503" level="INFO">VALUE: {'diff': [0, 4.870000000004038e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 1.1346999999998358e-05, 4.7300000000083386e-07, 1.2027000000001259e-05, 4.729999999973644e-07, 1.1736000000001773e-05, 4.720000000013602e-07, 7.318999999998688e-06, 4.7300000000083386e-07, 1.4693999999999124e-05, 4.720000000013602e-07, 9.195000000000036e-06, 4.859999999974607e-07, 7.180000000002462e-06, 4.859999999974607e-07, 1.2180999999999997e-05, 4.860000000009301e-07, 9.346999999999828e-06, 4.860000000009301e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 1.4362000000000402e-05, 4.7199999999789077e-07, 1.404099999999936e-05, 4.7300000000083386e-07, 1.2846999999999859e-05, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 8.875000000001937e-06, 4.729999999973644e-07, 5.207999999999602e-06, 4.720000000013602e-07, 5.3339999999992005e-06, 4.860000000009301e-07, 8.360999999998397e-06, 4.720000000013602e-07, 1.4013999999999693e-05, 4.860000000009301e-07, 5.846999999999797e-06, 4.860000000009301e-07, 1.1027999999999732e-05, 4.7199999999789077e-07, 7.361000000000867e-06, 4.7300000000083386e-07, 7.026999999999728e-06, 4.7300000000083386e-07, 1.0374999999999968e-05, 4.7199999999789077e-07, 1.1014000000000163e-05, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 9.013999999998162e-06, 4.720000000013602e-07, 9.194000000000563e-06, 4.7300000000083386e-07, 8.193999999999563e-06, 4.7199999999789077e-07, 7.028000000002671e-06, 4.859999999974607e-07, 5.542000000000741e-06, 4.720000000013602e-07, 7.180999999998466e-06, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 1.1347000000001828e-05, 4.860000000009301e-07, 9.846999999996858e-06, 4.870000000004038e-07, 7.861000000001367e-06, 4.720000000013602e-07, 1.3707999999997694e-05, 4.720000000013602e-07, 9.181000000000467e-06, 4.7199999999789077e-07, 8.195000000002506e-06, 4.7199999999789077e-07, 9.389000000002007e-06, 4.7199999999789077e-07, 7.000000000000062e-06, 4.720000000013602e-07, 1.4527999999999763e-05, 4.860000000009301e-07, 1.434699999999789e-05, 4.860000000009301e-07, 7.680999999998966e-06, 4.860000000009301e-07, 1.1346999999998358e-05, 4.860000000009301e-07, 4.34800000000124e-06, 4.860000000009301e-07, 5.6939999999970625e-06, 4.720000000013602e-07], 'eventsource_diff': [0, 4.870000000004038e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 1.1346999999998358e-05, 4.7300000000083386e-07, 1.2027000000001259e-05, 4.729999999973644e-07, 1.1736000000001773e-05, 4.720000000013602e-07, 7.318999999998688e-06, 4.7300000000083386e-07, 1.4693999999999124e-05, 4.720000000013602e-07, 9.195000000000036e-06, 4.859999999974607e-07, 7.180000000002462e-06, 4.859999999974607e-07, 1.2180999999999997e-05, 4.860000000009301e-07, 9.346999999999828e-06, 4.860000000009301e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 1.4362000000000402e-05, 4.7199999999789077e-07, 1.404099999999936e-05, 4.7300000000083386e-07, 1.2846999999999859e-05, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 8.875000000001937e-06, 4.729999999973644e-07, 5.207999999999602e-06, 4.720000000013602e-07, 5.3339999999992005e-06, 4.860000000009301e-07, 8.360999999998397e-06, 4.720000000013602e-07, 1.4013999999999693e-05, 4.860000000009301e-07, 5.846999999999797e-06, 4.860000000009301e-07, 1.1027999999999732e-05, 4.7199999999789077e-07, 7.361000000000867e-06, 4.7300000000083386e-07, 7.026999999999728e-06, 4.7300000000083386e-07, 1.0374999999999968e-05, 4.7199999999789077e-07, 1.1014000000000163e-05, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 9.013999999998162e-06, 4.720000000013602e-07, 9.194000000000563e-06, 4.7300000000083386e-07, 8.193999999999563e-06, 4.7199999999789077e-07, 7.028000000002671e-06, 4.859999999974607e-07, 5.542000000000741e-06, 4.720000000013602e-07, 7.180999999998466e-06, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 1.1347000000001828e-05, 4.860000000009301e-07, 9.846999999996858e-06, 4.870000000004038e-07, 7.861000000001367e-06, 4.720000000013602e-07, 1.3707999999997694e-05, 4.720000000013602e-07, 9.181000000000467e-06, 4.7199999999789077e-07, 8.195000000002506e-06, 4.7199999999789077e-07, 9.389000000002007e-06, 4.7199999999789077e-07, 7.000000000000062e-06, 4.720000000013602e-07, 1.4527999999999763e-05, 4.860000000009301e-07, 1.434699999999789e-05, 4.860000000009301e-07, 7.680999999998966e-06, 4.860000000009301e-07, 1.1346999999998358e-05, 4.860000000009301e-07, 4.34800000000124e-06, 4.860000000009301e-07, 5.6939999999970625e-06, 4.720000000013602e-07], 'sourcetime': [0.018468069, 0.018468556, 0.018479764, 0.018480236, 0.018491583, 0.018492056, 0.018504083, 0.018504556, 0.018516292, 0.018516764, 0.018524083, 0.018524556, 0.01853925, 0.018539722, 0.018548917, 0.018549403, 0.018556583, 0.018557069, 0.01856925, 0.018569736, 0.018579083, 0.018579569, 0.018589597, 0.018590069, 0.018597097, 0.018597569, 0.018611931, 0.018612403, 0.018626444, 0.018626917, 0.018639764, 0.018640236, 0.018647597, 0.018648069, 0.018656944, 0.018657417, 0.018662625, 0.018663097, 0.018668431, 0.018668917, 0.018677278, 0.01867775, 0.018691764, 0.01869225, 0.018698097, 0.018698583, 0.018709611, 0.018710083, 0.018717444, 0.018717917, 0.018724944, 0.018725417, 0.018735792, 0.018736264, 0.018747278, 0.01874775, 0.018754292, 0.018754764, 0.018763778, 0.01876425, 0.018773444, 0.018773917, 0.018782111, 0.018782583, 0.018789611, 0.018790097, 0.018795639, 0.018796111, 0.018803292, 0.018803764, 0.018815292, 0.018815764, 0.018827111, 0.018827597, 0.018837444, 0.018837931, 0.018845792, 0.018846264, 0.018859972, 0.018860444, 0.018869625, 0.018870097, 0.018878292, 0.018878764, 0.018888153, 0.018888625, 0.018895625, 0.018896097, 0.018910625, 0.018911111, 0.018925458, 0.018925944, 0.018933625, 0.018934111, 0.018945458, 0.018945944, 0.018950292, 0.018950778, 0.018956472, 0.018956944]}</msg>
<status status="PASS" starttime="20201112 09:42:45.500" endtime="20201112 09:42:45.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.496" endtime="20201112 09:42:45.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:45.509" level="INFO">${RESULT} = [{'time': 0.018468556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018480236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:45.506" endtime="20201112 09:42:45.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:45.522" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.870000000004038e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.85...</msg>
<status status="PASS" starttime="20201112 09:42:45.510" endtime="20201112 09:42:45.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.527" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:45.526" endtime="20201112 09:42:45.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.529" level="INFO">VALUE: [4.870000000004038e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:45.528" endtime="20201112 09:42:45.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.523" endtime="20201112 09:42:45.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.532" endtime="20201112 09:42:45.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:45.536" endtime="20201112 09:42:45.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.534" endtime="20201112 09:42:45.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.531" endtime="20201112 09:42:45.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.117" endtime="20201112 09:42:45.556"></status>
</kw>
<msg timestamp="20201112 09:42:45.557" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.564" endtime="20201112 09:42:45.575"></status>
</kw>
<msg timestamp="20201112 09:42:45.575" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.563" endtime="20201112 09:42:45.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.578" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.576" endtime="20201112 09:42:45.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.579" endtime="20201112 09:42:45.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.560" endtime="20201112 09:42:45.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.559" endtime="20201112 09:42:45.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.589" endtime="20201112 09:42:45.879"></status>
</kw>
<msg timestamp="20201112 09:42:45.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018600764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018601236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.587" endtime="20201112 09:42:45.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018600764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018601236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.883" endtime="20201112 09:42:45.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.892" endtime="20201112 09:42:45.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.585" endtime="20201112 09:42:45.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.582" endtime="20201112 09:42:45.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.898" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:45.897" endtime="20201112 09:42:45.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.903" level="INFO">VALUE: [{'time': 0.018600764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018601236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018606611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.018607083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018616764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.681000000000967e-06, 'source_diff': 9.681000000000967e-06}, {'time': 0.018617236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018622944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.018623417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018633097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.680000000001493e-06, 'source_diff': 9.680000000001493e-06}, {'time': 0.018633569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018647597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.018648083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018655931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.84800000000127e-06, 'source_diff': 7.84800000000127e-06}, {'time': 0.018656417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018661611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.018662083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018667778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.01866825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018676597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.018677083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018687278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0195000000001037e-05, 'source_diff': 1.0195000000001037e-05}, {'time': 0.01868775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018702278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.01870275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018712611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.018713083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018718292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.209000000002545e-06, 'source_diff': 5.209000000002545e-06}, {'time': 0.018718764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018729944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1179999999999524e-05, 'source_diff': 1.1179999999999524e-05}, {'time': 0.018730417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018742625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2207999999999664e-05, 'source_diff': 1.2207999999999664e-05}, {'time': 0.018743097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018752278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.01875275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018766611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018767097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018778611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.018779097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018789611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999999663e-05, 'source_diff': 1.0513999999999663e-05}, {'time': 0.018790097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018797292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.195000000001506e-06, 'source_diff': 7.195000000001506e-06}, {'time': 0.018797764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018807111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018807597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018815319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.018815792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018825958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0165999999998954e-05, 'source_diff': 1.0165999999998954e-05}, {'time': 0.018826431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018835458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.026999999998259e-06, 'source_diff': 9.026999999998259e-06}, {'time': 0.018835931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018840458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.018840931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018851167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0235999999996803e-05, 'source_diff': 1.0235999999996803e-05}, {'time': 0.018851639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018857458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.819000000000657e-06, 'source_diff': 5.819000000000657e-06}, {'time': 0.018857931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018863958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.026999999998728e-06, 'source_diff': 6.026999999998728e-06}, {'time': 0.018864431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018873292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018873764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018879792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.018880264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018891139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.018891611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018900458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.018900944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018907792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8480000000002705e-06, 'source_diff': 6.8480000000002705e-06}, {'time': 0.018908278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018922292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.018922778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018935306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2527999999997763e-05, 'source_diff': 1.2527999999997763e-05}, {'time': 0.018935778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018944819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041000000001298e-06, 'source_diff': 9.041000000001298e-06}, {'time': 0.018945292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018958972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3680000000002024e-05, 'source_diff': 1.3680000000002024e-05}, {'time': 0.018959444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018969472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.018969944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018981986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2042000000000302e-05, 'source_diff': 1.2042000000000302e-05}, {'time': 0.018982458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018996306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3848000000000332e-05, 'source_diff': 1.3848000000000332e-05}, {'time': 0.018996778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019004806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.019005278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019018972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3693999999998124e-05, 'source_diff': 1.3693999999998124e-05}, {'time': 0.019019458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019025181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.019025653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019037139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1486000000001523e-05, 'source_diff': 1.1486000000001523e-05}, {'time': 0.019037625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019049972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.019050458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019055972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.019056458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019068208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1750000000001343e-05, 'source_diff': 1.1750000000001343e-05}, {'time': 0.019068681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019082361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3679999999998554e-05, 'source_diff': 1.3679999999998554e-05}, {'time': 0.019082833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019090986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019091458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:45.899" endtime="20201112 09:42:45.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.895" endtime="20201112 09:42:45.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:45.930" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 5.374999999998437e-06, 4.720000000013602e-07, 9.681000000000967e-06, 4.7199999999789077e-07, 5.708000000000102e-06, 4.7300000000083386e-07, 9.680000000001493e-06, 4...</msg>
<status status="PASS" starttime="20201112 09:42:45.906" endtime="20201112 09:42:45.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.934" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:45.933" endtime="20201112 09:42:45.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.938" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 5.374999999998437e-06, 4.720000000013602e-07, 9.681000000000967e-06, 4.7199999999789077e-07, 5.708000000000102e-06, 4.7300000000083386e-07, 9.680000000001493e-06, 4.7199999999789077e-07, 1.4027999999999263e-05, 4.860000000009301e-07, 7.84800000000127e-06, 4.860000000009301e-07, 5.194000000000032e-06, 4.7199999999789077e-07, 5.695000000000006e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.860000000009301e-07, 1.0195000000001037e-05, 4.7199999999789077e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.7199999999789077e-07, 5.209000000002545e-06, 4.7199999999789077e-07, 1.1179999999999524e-05, 4.7300000000083386e-07, 1.2207999999999664e-05, 4.720000000013602e-07, 9.181000000000467e-06, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.860000000009301e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 1.0513999999999663e-05, 4.859999999974607e-07, 7.195000000001506e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.859999999974607e-07, 7.722000000001672e-06, 4.7300000000083386e-07, 1.0165999999998954e-05, 4.7300000000083386e-07, 9.026999999998259e-06, 4.7300000000083386e-07, 4.527000000000697e-06, 4.7300000000083386e-07, 1.0235999999996803e-05, 4.720000000013602e-07, 5.819000000000657e-06, 4.7300000000083386e-07, 6.026999999998728e-06, 4.7300000000083386e-07, 8.860999999998898e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 1.0875000000000468e-05, 4.7199999999789077e-07, 8.846999999999328e-06, 4.860000000009301e-07, 6.8480000000002705e-06, 4.860000000009301e-07, 1.4013999999999693e-05, 4.860000000009301e-07, 1.2527999999997763e-05, 4.720000000013602e-07, 9.041000000001298e-06, 4.729999999973644e-07, 1.3680000000002024e-05, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.7199999999789077e-07, 1.2042000000000302e-05, 4.720000000013602e-07, 1.3848000000000332e-05, 4.7199999999789077e-07, 8.028000000000202e-06, 4.720000000013602e-07, 1.3693999999998124e-05, 4.860000000009301e-07, 5.7229999999991454e-06, 4.720000000013602e-07, 1.1486000000001523e-05, 4.859999999974607e-07, 1.2346999999999358e-05, 4.860000000009301e-07, 5.514000000001601e-06, 4.859999999974607e-07, 1.1750000000001343e-05, 4.7300000000083386e-07, 1.3679999999998554e-05, 4.720000000013602e-07, 8.153000000000327e-06, 4.7199999999789077e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 5.374999999998437e-06, 4.720000000013602e-07, 9.681000000000967e-06, 4.7199999999789077e-07, 5.708000000000102e-06, 4.7300000000083386e-07, 9.680000000001493e-06, 4.7199999999789077e-07, 1.4027999999999263e-05, 4.860000000009301e-07, 7.84800000000127e-06, 4.860000000009301e-07, 5.194000000000032e-06, 4.7199999999789077e-07, 5.695000000000006e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.860000000009301e-07, 1.0195000000001037e-05, 4.7199999999789077e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.7199999999789077e-07, 5.209000000002545e-06, 4.7199999999789077e-07, 1.1179999999999524e-05, 4.7300000000083386e-07, 1.2207999999999664e-05, 4.720000000013602e-07, 9.181000000000467e-06, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.860000000009301e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 1.0513999999999663e-05, 4.859999999974607e-07, 7.195000000001506e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.859999999974607e-07, 7.722000000001672e-06, 4.7300000000083386e-07, 1.0165999999998954e-05, 4.7300000000083386e-07, 9.026999999998259e-06, 4.7300000000083386e-07, 4.527000000000697e-06, 4.7300000000083386e-07, 1.0235999999996803e-05, 4.720000000013602e-07, 5.819000000000657e-06, 4.7300000000083386e-07, 6.026999999998728e-06, 4.7300000000083386e-07, 8.860999999998898e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 1.0875000000000468e-05, 4.7199999999789077e-07, 8.846999999999328e-06, 4.860000000009301e-07, 6.8480000000002705e-06, 4.860000000009301e-07, 1.4013999999999693e-05, 4.860000000009301e-07, 1.2527999999997763e-05, 4.720000000013602e-07, 9.041000000001298e-06, 4.729999999973644e-07, 1.3680000000002024e-05, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.7199999999789077e-07, 1.2042000000000302e-05, 4.720000000013602e-07, 1.3848000000000332e-05, 4.7199999999789077e-07, 8.028000000000202e-06, 4.720000000013602e-07, 1.3693999999998124e-05, 4.860000000009301e-07, 5.7229999999991454e-06, 4.720000000013602e-07, 1.1486000000001523e-05, 4.859999999974607e-07, 1.2346999999999358e-05, 4.860000000009301e-07, 5.514000000001601e-06, 4.859999999974607e-07, 1.1750000000001343e-05, 4.7300000000083386e-07, 1.3679999999998554e-05, 4.720000000013602e-07, 8.153000000000327e-06, 4.7199999999789077e-07], 'sourcetime': [0.018600764, 0.018601236, 0.018606611, 0.018607083, 0.018616764, 0.018617236, 0.018622944, 0.018623417, 0.018633097, 0.018633569, 0.018647597, 0.018648083, 0.018655931, 0.018656417, 0.018661611, 0.018662083, 0.018667778, 0.01866825, 0.018676597, 0.018677083, 0.018687278, 0.01868775, 0.018702278, 0.01870275, 0.018712611, 0.018713083, 0.018718292, 0.018718764, 0.018729944, 0.018730417, 0.018742625, 0.018743097, 0.018752278, 0.01875275, 0.018766611, 0.018767097, 0.018778611, 0.018779097, 0.018789611, 0.018790097, 0.018797292, 0.018797764, 0.018807111, 0.018807597, 0.018815319, 0.018815792, 0.018825958, 0.018826431, 0.018835458, 0.018835931, 0.018840458, 0.018840931, 0.018851167, 0.018851639, 0.018857458, 0.018857931, 0.018863958, 0.018864431, 0.018873292, 0.018873764, 0.018879792, 0.018880264, 0.018891139, 0.018891611, 0.018900458, 0.018900944, 0.018907792, 0.018908278, 0.018922292, 0.018922778, 0.018935306, 0.018935778, 0.018944819, 0.018945292, 0.018958972, 0.018959444, 0.018969472, 0.018969944, 0.018981986, 0.018982458, 0.018996306, 0.018996778, 0.019004806, 0.019005278, 0.019018972, 0.019019458, 0.019025181, 0.019025653, 0.019037139, 0.019037625, 0.019049972, 0.019050458, 0.019055972, 0.019056458, 0.019068208, 0.019068681, 0.019082361, 0.019082833, 0.019090986, 0.019091458]}</msg>
<status status="PASS" starttime="20201112 09:42:45.935" endtime="20201112 09:42:45.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.931" endtime="20201112 09:42:45.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:45.944" level="INFO">${RESULT} = [{'time': 0.018601236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018607083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:45.940" endtime="20201112 09:42:45.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:45.957" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4....</msg>
<status status="PASS" starttime="20201112 09:42:45.945" endtime="20201112 09:42:45.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.962" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:45.960" endtime="20201112 09:42:45.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.965" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 09:42:45.963" endtime="20201112 09:42:45.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.958" endtime="20201112 09:42:45.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.968" endtime="20201112 09:42:45.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:45.971" endtime="20201112 09:42:45.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.970" endtime="20201112 09:42:45.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.966" endtime="20201112 09:42:45.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.557" endtime="20201112 09:42:45.992"></status>
</kw>
<msg timestamp="20201112 09:42:45.992" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.000" endtime="20201112 09:42:46.010"></status>
</kw>
<msg timestamp="20201112 09:42:46.011" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.998" endtime="20201112 09:42:46.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.013" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.012" endtime="20201112 09:42:46.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.014" endtime="20201112 09:42:46.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.996" endtime="20201112 09:42:46.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.994" endtime="20201112 09:42:46.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.023" endtime="20201112 09:42:46.312"></status>
</kw>
<msg timestamp="20201112 09:42:46.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018552722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018553194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.022" endtime="20201112 09:42:46.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018552722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018553194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.316" endtime="20201112 09:42:46.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.325" endtime="20201112 09:42:46.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.019" endtime="20201112 09:42:46.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.017" endtime="20201112 09:42:46.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.331" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:46.330" endtime="20201112 09:42:46.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.336" level="INFO">VALUE: [{'time': 0.018552722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018553194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018565403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2209000000002607e-05, 'source_diff': 1.2209000000002607e-05}, {'time': 0.018565875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018574222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347000000002297e-06, 'source_diff': 8.347000000002297e-06}, {'time': 0.018574694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018585097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.018585569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018592389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.820000000001131e-06, 'source_diff': 6.820000000001131e-06}, {'time': 0.018592861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018607236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000000498e-05, 'source_diff': 1.4375000000000498e-05}, {'time': 0.018607708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018618889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1180999999998997e-05, 'source_diff': 1.1180999999998997e-05}, {'time': 0.018619375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018631222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1846999999998858e-05, 'source_diff': 1.1846999999998858e-05}, {'time': 0.018631708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018637556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.018638042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018645069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.026999999999728e-06, 'source_diff': 7.026999999999728e-06}, {'time': 0.018645542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018657903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.018658375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018665417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.018665889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018670403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.018670875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018684903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.018685375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018691903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.018692375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018707069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4693999999999124e-05, 'source_diff': 1.4693999999999124e-05}, {'time': 0.018707542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018722236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4693999999999124e-05, 'source_diff': 1.4693999999999124e-05}, {'time': 0.018722722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018734236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.018734722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018743569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.847000000002797e-06, 'source_diff': 8.847000000002797e-06}, {'time': 0.018744056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018758569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.451300000000072e-05, 'source_diff': 1.451300000000072e-05}, {'time': 0.018759056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018772431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3374999999999498e-05, 'source_diff': 1.3374999999999498e-05}, {'time': 0.018772903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018780917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.018781389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018787264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.018787736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01879475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.018795222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018799403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.018799875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018808056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.018808542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018812944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.018813417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018824222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805000000002618e-05, 'source_diff': 1.0805000000002618e-05}, {'time': 0.018824708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018835069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.018835542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01884675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1207999999998663e-05, 'source_diff': 1.1207999999998663e-05}, {'time': 0.018847222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018860958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3736000000000304e-05, 'source_diff': 1.3736000000000304e-05}, {'time': 0.018861431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018870917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.018871389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018878736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000001297e-06, 'source_diff': 7.347000000001297e-06}, {'time': 0.018879208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018889736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.018890208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018903736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3528000000002233e-05, 'source_diff': 1.3528000000002233e-05}, {'time': 0.018904222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018912083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.018912556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018924403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1846999999998858e-05, 'source_diff': 1.1846999999998858e-05}, {'time': 0.018924889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018935417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.018935889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018948403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.018948889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018957417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.018957889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01896875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.018969222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018982083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.018982556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018997083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.452700000000029e-05, 'source_diff': 1.452700000000029e-05}, {'time': 0.018997556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019005917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.019006389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019014583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194000000003032e-06, 'source_diff': 8.194000000003032e-06}, {'time': 0.019015056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019029583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.452700000000029e-05, 'source_diff': 1.452700000000029e-05}, {'time': 0.019030069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019042764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2695000000000067e-05, 'source_diff': 1.2695000000000067e-05}, {'time': 0.019043236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019050083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.019050569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019059583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.019060069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019073431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3361999999999402e-05, 'source_diff': 1.3361999999999402e-05}, {'time': 0.019073903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:46.332" endtime="20201112 09:42:46.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.328" endtime="20201112 09:42:46.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:46.363" level="INFO">${debug-compressed} = {'diff': [0, 4.7199999999789077e-07, 1.2209000000002607e-05, 4.7199999999789077e-07, 8.347000000002297e-06, 4.7199999999789077e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 6.820000000001131e-06...</msg>
<status status="PASS" starttime="20201112 09:42:46.339" endtime="20201112 09:42:46.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.367" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:46.366" endtime="20201112 09:42:46.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.371" level="INFO">VALUE: {'diff': [0, 4.7199999999789077e-07, 1.2209000000002607e-05, 4.7199999999789077e-07, 8.347000000002297e-06, 4.7199999999789077e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 6.820000000001131e-06, 4.7199999999789077e-07, 1.4375000000000498e-05, 4.720000000013602e-07, 1.1180999999998997e-05, 4.860000000009301e-07, 1.1846999999998858e-05, 4.860000000009301e-07, 5.8479999999992704e-06, 4.860000000009301e-07, 7.026999999999728e-06, 4.7300000000083386e-07, 1.2360999999998928e-05, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 4.513999999997131e-06, 4.720000000013602e-07, 1.4027999999999263e-05, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.4693999999999124e-05, 4.7300000000083386e-07, 1.4693999999999124e-05, 4.860000000009301e-07, 1.1514000000000663e-05, 4.859999999974607e-07, 8.847000000002797e-06, 4.869999999969343e-07, 1.451300000000072e-05, 4.870000000004038e-07, 1.3374999999999498e-05, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999789077e-07, 5.875000000002406e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.720000000013602e-07, 4.1809999999989356e-06, 4.720000000013602e-07, 8.180999999999466e-06, 4.860000000009301e-07, 4.402000000000572e-06, 4.729999999973644e-07, 1.0805000000002618e-05, 4.859999999974607e-07, 1.0361000000000398e-05, 4.7300000000083386e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 1.3736000000000304e-05, 4.7300000000083386e-07, 9.485999999999523e-06, 4.7199999999789077e-07, 7.347000000001297e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.7199999999789077e-07, 1.3528000000002233e-05, 4.859999999974607e-07, 7.861000000001367e-06, 4.7300000000083386e-07, 1.1846999999998858e-05, 4.860000000009301e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 8.528000000000702e-06, 4.7199999999789077e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 1.2860999999999428e-05, 4.7300000000083386e-07, 1.452700000000029e-05, 4.729999999973644e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 8.194000000003032e-06, 4.729999999973644e-07, 1.452700000000029e-05, 4.860000000009301e-07, 1.2695000000000067e-05, 4.720000000013602e-07, 6.8469999999973274e-06, 4.860000000009301e-07, 9.014000000001632e-06, 4.859999999974607e-07, 1.3361999999999402e-05, 4.720000000013602e-07], 'eventsource_diff': [0, 4.7199999999789077e-07, 1.2209000000002607e-05, 4.7199999999789077e-07, 8.347000000002297e-06, 4.7199999999789077e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 6.820000000001131e-06, 4.7199999999789077e-07, 1.4375000000000498e-05, 4.720000000013602e-07, 1.1180999999998997e-05, 4.860000000009301e-07, 1.1846999999998858e-05, 4.860000000009301e-07, 5.8479999999992704e-06, 4.860000000009301e-07, 7.026999999999728e-06, 4.7300000000083386e-07, 1.2360999999998928e-05, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 4.513999999997131e-06, 4.720000000013602e-07, 1.4027999999999263e-05, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.4693999999999124e-05, 4.7300000000083386e-07, 1.4693999999999124e-05, 4.860000000009301e-07, 1.1514000000000663e-05, 4.859999999974607e-07, 8.847000000002797e-06, 4.869999999969343e-07, 1.451300000000072e-05, 4.870000000004038e-07, 1.3374999999999498e-05, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999789077e-07, 5.875000000002406e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.720000000013602e-07, 4.1809999999989356e-06, 4.720000000013602e-07, 8.180999999999466e-06, 4.860000000009301e-07, 4.402000000000572e-06, 4.729999999973644e-07, 1.0805000000002618e-05, 4.859999999974607e-07, 1.0361000000000398e-05, 4.7300000000083386e-07, 1.1207999999998663e-05, 4.720000000013602e-07, 1.3736000000000304e-05, 4.7300000000083386e-07, 9.485999999999523e-06, 4.7199999999789077e-07, 7.347000000001297e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.7199999999789077e-07, 1.3528000000002233e-05, 4.859999999974607e-07, 7.861000000001367e-06, 4.7300000000083386e-07, 1.1846999999998858e-05, 4.860000000009301e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 8.528000000000702e-06, 4.7199999999789077e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 1.2860999999999428e-05, 4.7300000000083386e-07, 1.452700000000029e-05, 4.729999999973644e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 8.194000000003032e-06, 4.729999999973644e-07, 1.452700000000029e-05, 4.860000000009301e-07, 1.2695000000000067e-05, 4.720000000013602e-07, 6.8469999999973274e-06, 4.860000000009301e-07, 9.014000000001632e-06, 4.859999999974607e-07, 1.3361999999999402e-05, 4.720000000013602e-07], 'sourcetime': [0.018552722, 0.018553194, 0.018565403, 0.018565875, 0.018574222, 0.018574694, 0.018585097, 0.018585569, 0.018592389, 0.018592861, 0.018607236, 0.018607708, 0.018618889, 0.018619375, 0.018631222, 0.018631708, 0.018637556, 0.018638042, 0.018645069, 0.018645542, 0.018657903, 0.018658375, 0.018665417, 0.018665889, 0.018670403, 0.018670875, 0.018684903, 0.018685375, 0.018691903, 0.018692375, 0.018707069, 0.018707542, 0.018722236, 0.018722722, 0.018734236, 0.018734722, 0.018743569, 0.018744056, 0.018758569, 0.018759056, 0.018772431, 0.018772903, 0.018780917, 0.018781389, 0.018787264, 0.018787736, 0.01879475, 0.018795222, 0.018799403, 0.018799875, 0.018808056, 0.018808542, 0.018812944, 0.018813417, 0.018824222, 0.018824708, 0.018835069, 0.018835542, 0.01884675, 0.018847222, 0.018860958, 0.018861431, 0.018870917, 0.018871389, 0.018878736, 0.018879208, 0.018889736, 0.018890208, 0.018903736, 0.018904222, 0.018912083, 0.018912556, 0.018924403, 0.018924889, 0.018935417, 0.018935889, 0.018948403, 0.018948889, 0.018957417, 0.018957889, 0.01896875, 0.018969222, 0.018982083, 0.018982556, 0.018997083, 0.018997556, 0.019005917, 0.019006389, 0.019014583, 0.019015056, 0.019029583, 0.019030069, 0.019042764, 0.019043236, 0.019050083, 0.019050569, 0.019059583, 0.019060069, 0.019073431, 0.019073903]}</msg>
<status status="PASS" starttime="20201112 09:42:46.368" endtime="20201112 09:42:46.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.364" endtime="20201112 09:42:46.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:46.377" level="INFO">${RESULT} = [{'time': 0.018553194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018565875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:46.374" endtime="20201112 09:42:46.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:46.391" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4....</msg>
<status status="PASS" starttime="20201112 09:42:46.378" endtime="20201112 09:42:46.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.395" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:46.394" endtime="20201112 09:42:46.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.398" level="INFO">VALUE: [4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.869999999969343e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:46.396" endtime="20201112 09:42:46.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.392" endtime="20201112 09:42:46.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.401" endtime="20201112 09:42:46.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:46.404" endtime="20201112 09:42:46.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.403" endtime="20201112 09:42:46.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.399" endtime="20201112 09:42:46.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.993" endtime="20201112 09:42:46.425"></status>
</kw>
<msg timestamp="20201112 09:42:46.425" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.433" endtime="20201112 09:42:46.443"></status>
</kw>
<msg timestamp="20201112 09:42:46.443" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.432" endtime="20201112 09:42:46.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.446" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.444" endtime="20201112 09:42:46.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.447" endtime="20201112 09:42:46.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.429" endtime="20201112 09:42:46.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.427" endtime="20201112 09:42:46.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.457" endtime="20201112 09:42:46.746"></status>
</kw>
<msg timestamp="20201112 09:42:46.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018560222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018560694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.454" endtime="20201112 09:42:46.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018560222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018560694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.750" endtime="20201112 09:42:46.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.759" endtime="20201112 09:42:46.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.452" endtime="20201112 09:42:46.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.450" endtime="20201112 09:42:46.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.766" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:46.765" endtime="20201112 09:42:46.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.771" level="INFO">VALUE: [{'time': 0.018560222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018560694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018567667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9730000000003955e-06, 'source_diff': 6.9730000000003955e-06}, {'time': 0.018568139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018578847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.018579319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018587667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347999999998301e-06, 'source_diff': 8.347999999998301e-06}, {'time': 0.018588153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018593514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018593986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018599833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018600319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018608181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.86200000000084e-06, 'source_diff': 7.86200000000084e-06}, {'time': 0.018608653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018618333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.680000000001493e-06, 'source_diff': 9.680000000001493e-06}, {'time': 0.018618819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018633347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.018633819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018640028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.0186405, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018654847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.434699999999789e-05, 'source_diff': 1.434699999999789e-05}, {'time': 0.018655319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018665861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0541999999998802e-05, 'source_diff': 1.0541999999998802e-05}, {'time': 0.018666333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018676681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0348000000000301e-05, 'source_diff': 1.0348000000000301e-05}, {'time': 0.018677153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018687014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.018687486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018698014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.018698486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018707181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694999999999536e-06, 'source_diff': 8.694999999999536e-06}, {'time': 0.018707667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018717347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.679999999998024e-06, 'source_diff': 9.679999999998024e-06}, {'time': 0.018717833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018731181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347999999999832e-05, 'source_diff': 1.3347999999999832e-05}, {'time': 0.018731667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018743361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1693999999999594e-05, 'source_diff': 1.1693999999999594e-05}, {'time': 0.018743833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018754347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999999663e-05, 'source_diff': 1.0513999999999663e-05}, {'time': 0.018754833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018768694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018769167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018777722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555000000000368e-06, 'source_diff': 8.555000000000368e-06}, {'time': 0.018778194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018783389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.018783861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018798528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4666999999999458e-05, 'source_diff': 1.4666999999999458e-05}, {'time': 0.018799, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018804194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.018804667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018818042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3374999999999498e-05, 'source_diff': 1.3374999999999498e-05}, {'time': 0.018818514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018827861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018828347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018833528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.018834014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018839361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018839847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018852694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.018853181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018860861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.679999999999493e-06, 'source_diff': 7.679999999999493e-06}, {'time': 0.018861347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018872722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1375000000000968e-05, 'source_diff': 1.1375000000000968e-05}, {'time': 0.018873194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018886708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.018887181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018901375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4194000000002094e-05, 'source_diff': 1.4194000000002094e-05}, {'time': 0.018901847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018915375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3528000000002233e-05, 'source_diff': 1.3528000000002233e-05}, {'time': 0.018915847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018920222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.018920694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018928375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}, {'time': 0.018928847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018939542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0695000000001537e-05, 'source_diff': 1.0695000000001537e-05}, {'time': 0.018940014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018948056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.018948528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018958708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180000000001993e-05, 'source_diff': 1.0180000000001993e-05}, {'time': 0.018959194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018971875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2681000000000497e-05, 'source_diff': 1.2681000000000497e-05}, {'time': 0.018972361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018986042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3681000000001498e-05, 'source_diff': 1.3681000000001498e-05}, {'time': 0.018986528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019000806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4277999999999513e-05, 'source_diff': 1.4277999999999513e-05}, {'time': 0.019001278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019007903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999999687e-06, 'source_diff': 6.624999999999687e-06}, {'time': 0.019008375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019014889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.019015361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019025889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.019026361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019037222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.019037694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019042222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.019042694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019052222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.019052694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019064903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2209000000002607e-05, 'source_diff': 1.2209000000002607e-05}, {'time': 0.019065375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:46.767" endtime="20201112 09:42:46.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.762" endtime="20201112 09:42:46.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:46.797" level="INFO">${debug-compressed} = {'diff': [0, 4.7199999999789077e-07, 6.9730000000003955e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 8.347999999998301e-06, 4.860000000009301e-07, 5.360999999998867e-06, ...</msg>
<status status="PASS" starttime="20201112 09:42:46.773" endtime="20201112 09:42:46.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.801" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:46.800" endtime="20201112 09:42:46.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.805" level="INFO">VALUE: {'diff': [0, 4.7199999999789077e-07, 6.9730000000003955e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 8.347999999998301e-06, 4.860000000009301e-07, 5.360999999998867e-06, 4.720000000013602e-07, 5.846999999999797e-06, 4.860000000009301e-07, 7.86200000000084e-06, 4.7199999999789077e-07, 9.680000000001493e-06, 4.860000000009301e-07, 1.4527999999999763e-05, 4.7199999999789077e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 1.434699999999789e-05, 4.720000000013602e-07, 1.0541999999998802e-05, 4.720000000013602e-07, 1.0348000000000301e-05, 4.7199999999789077e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 8.694999999999536e-06, 4.860000000009301e-07, 9.679999999998024e-06, 4.860000000009301e-07, 1.3347999999999832e-05, 4.860000000009301e-07, 1.1693999999999594e-05, 4.720000000013602e-07, 1.0513999999999663e-05, 4.859999999974607e-07, 1.3861000000000429e-05, 4.7300000000083386e-07, 8.555000000000368e-06, 4.720000000013602e-07, 5.1949999999995056e-06, 4.7199999999789077e-07, 1.4666999999999458e-05, 4.720000000013602e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 1.3374999999999498e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.859999999974607e-07, 5.180999999999936e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.860000000009301e-07, 1.2846999999999859e-05, 4.870000000004038e-07, 7.679999999999493e-06, 4.860000000009301e-07, 1.1375000000000968e-05, 4.7199999999789077e-07, 1.3513999999999193e-05, 4.7300000000083386e-07, 1.4194000000002094e-05, 4.7199999999789077e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 4.375000000000906e-06, 4.7199999999789077e-07, 7.681000000002436e-06, 4.7199999999789077e-07, 1.0695000000001537e-05, 4.720000000013602e-07, 8.041999999999772e-06, 4.7199999999789077e-07, 1.0180000000001993e-05, 4.859999999974607e-07, 1.2681000000000497e-05, 4.860000000009301e-07, 1.3681000000001498e-05, 4.859999999974607e-07, 1.4277999999999513e-05, 4.720000000013602e-07, 6.624999999999687e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.7199999999789077e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 1.2209000000002607e-05, 4.7199999999789077e-07], 'eventsource_diff': [0, 4.7199999999789077e-07, 6.9730000000003955e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 8.347999999998301e-06, 4.860000000009301e-07, 5.360999999998867e-06, 4.720000000013602e-07, 5.846999999999797e-06, 4.860000000009301e-07, 7.86200000000084e-06, 4.7199999999789077e-07, 9.680000000001493e-06, 4.860000000009301e-07, 1.4527999999999763e-05, 4.7199999999789077e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 1.434699999999789e-05, 4.720000000013602e-07, 1.0541999999998802e-05, 4.720000000013602e-07, 1.0348000000000301e-05, 4.7199999999789077e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 8.694999999999536e-06, 4.860000000009301e-07, 9.679999999998024e-06, 4.860000000009301e-07, 1.3347999999999832e-05, 4.860000000009301e-07, 1.1693999999999594e-05, 4.720000000013602e-07, 1.0513999999999663e-05, 4.859999999974607e-07, 1.3861000000000429e-05, 4.7300000000083386e-07, 8.555000000000368e-06, 4.720000000013602e-07, 5.1949999999995056e-06, 4.7199999999789077e-07, 1.4666999999999458e-05, 4.720000000013602e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 1.3374999999999498e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.859999999974607e-07, 5.180999999999936e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.860000000009301e-07, 1.2846999999999859e-05, 4.870000000004038e-07, 7.679999999999493e-06, 4.860000000009301e-07, 1.1375000000000968e-05, 4.7199999999789077e-07, 1.3513999999999193e-05, 4.7300000000083386e-07, 1.4194000000002094e-05, 4.7199999999789077e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 4.375000000000906e-06, 4.7199999999789077e-07, 7.681000000002436e-06, 4.7199999999789077e-07, 1.0695000000001537e-05, 4.720000000013602e-07, 8.041999999999772e-06, 4.7199999999789077e-07, 1.0180000000001993e-05, 4.859999999974607e-07, 1.2681000000000497e-05, 4.860000000009301e-07, 1.3681000000001498e-05, 4.859999999974607e-07, 1.4277999999999513e-05, 4.720000000013602e-07, 6.624999999999687e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.7199999999789077e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 1.2209000000002607e-05, 4.7199999999789077e-07], 'sourcetime': [0.018560222, 0.018560694, 0.018567667, 0.018568139, 0.018578847, 0.018579319, 0.018587667, 0.018588153, 0.018593514, 0.018593986, 0.018599833, 0.018600319, 0.018608181, 0.018608653, 0.018618333, 0.018618819, 0.018633347, 0.018633819, 0.018640028, 0.0186405, 0.018654847, 0.018655319, 0.018665861, 0.018666333, 0.018676681, 0.018677153, 0.018687014, 0.018687486, 0.018698014, 0.018698486, 0.018707181, 0.018707667, 0.018717347, 0.018717833, 0.018731181, 0.018731667, 0.018743361, 0.018743833, 0.018754347, 0.018754833, 0.018768694, 0.018769167, 0.018777722, 0.018778194, 0.018783389, 0.018783861, 0.018798528, 0.018799, 0.018804194, 0.018804667, 0.018818042, 0.018818514, 0.018827861, 0.018828347, 0.018833528, 0.018834014, 0.018839361, 0.018839847, 0.018852694, 0.018853181, 0.018860861, 0.018861347, 0.018872722, 0.018873194, 0.018886708, 0.018887181, 0.018901375, 0.018901847, 0.018915375, 0.018915847, 0.018920222, 0.018920694, 0.018928375, 0.018928847, 0.018939542, 0.018940014, 0.018948056, 0.018948528, 0.018958708, 0.018959194, 0.018971875, 0.018972361, 0.018986042, 0.018986528, 0.019000806, 0.019001278, 0.019007903, 0.019008375, 0.019014889, 0.019015361, 0.019025889, 0.019026361, 0.019037222, 0.019037694, 0.019042222, 0.019042694, 0.019052222, 0.019052694, 0.019064903, 0.019065375]}</msg>
<status status="PASS" starttime="20201112 09:42:46.802" endtime="20201112 09:42:46.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.798" endtime="20201112 09:42:46.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:46.811" level="INFO">${RESULT} = [{'time': 0.018560694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018568139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:46.808" endtime="20201112 09:42:46.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:46.825" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.71...</msg>
<status status="PASS" starttime="20201112 09:42:46.812" endtime="20201112 09:42:46.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.830" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:46.828" endtime="20201112 09:42:46.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.832" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 09:42:46.831" endtime="20201112 09:42:46.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.826" endtime="20201112 09:42:46.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.835" endtime="20201112 09:42:46.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:46.839" endtime="20201112 09:42:46.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.837" endtime="20201112 09:42:46.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.834" endtime="20201112 09:42:46.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.426" endtime="20201112 09:42:46.860"></status>
</kw>
<msg timestamp="20201112 09:42:46.860" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.868" endtime="20201112 09:42:46.878"></status>
</kw>
<msg timestamp="20201112 09:42:46.879" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.866" endtime="20201112 09:42:46.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.881" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.880" endtime="20201112 09:42:46.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.882" endtime="20201112 09:42:46.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.864" endtime="20201112 09:42:46.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.862" endtime="20201112 09:42:46.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.891" endtime="20201112 09:42:47.177"></status>
</kw>
<msg timestamp="20201112 09:42:47.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018384639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018385111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.890" endtime="20201112 09:42:47.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018384639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018385111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.182" endtime="20201112 09:42:47.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.190" endtime="20201112 09:42:47.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.887" endtime="20201112 09:42:47.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.886" endtime="20201112 09:42:47.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.197" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:47.196" endtime="20201112 09:42:47.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.202" level="INFO">VALUE: [{'time': 0.018384639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018385111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018389958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.018390444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018400153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.709000000000106e-06, 'source_diff': 9.709000000000106e-06}, {'time': 0.018400625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018413472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.018413944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018426306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2361999999998402e-05, 'source_diff': 1.2361999999998402e-05}, {'time': 0.018426778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018435486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.018435958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018447139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1181000000002467e-05, 'source_diff': 1.1181000000002467e-05}, {'time': 0.018447611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018457306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.695000000000537e-06, 'source_diff': 9.695000000000537e-06}, {'time': 0.018457778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018468639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0860999999997428e-05, 'source_diff': 1.0860999999997428e-05}, {'time': 0.018469111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018483306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4195000000001567e-05, 'source_diff': 1.4195000000001567e-05}, {'time': 0.018483792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018490639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.018491125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018500972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.018501458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018506972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.018507458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018514306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8480000000002705e-06, 'source_diff': 6.8480000000002705e-06}, {'time': 0.018514792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018524, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208000000000133e-06, 'source_diff': 9.208000000000133e-06}, {'time': 0.018524472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018530153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.018530625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018535042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.417000000003085e-06, 'source_diff': 4.417000000003085e-06}, {'time': 0.018535514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018542319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805000000002087e-06, 'source_diff': 6.805000000002087e-06}, {'time': 0.018542792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018550389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.597000000001547e-06, 'source_diff': 7.597000000001547e-06}, {'time': 0.018550861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018558653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.792000000002991e-06, 'source_diff': 7.792000000002991e-06}, {'time': 0.018559125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018567347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.222000000002172e-06, 'source_diff': 8.222000000002172e-06}, {'time': 0.018567819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018576667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.84800000000227e-06, 'source_diff': 8.84800000000227e-06}, {'time': 0.018577139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018584153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.018584625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018599153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.018599639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018603806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.018604278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018614319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0041000000002298e-05, 'source_diff': 1.0041000000002298e-05}, {'time': 0.018614792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018628639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.384699999999739e-05, 'source_diff': 1.384699999999739e-05}, {'time': 0.018629111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01864, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0889000000000038e-05, 'source_diff': 1.0889000000000038e-05}, {'time': 0.018640472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018652806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2333999999999262e-05, 'source_diff': 1.2333999999999262e-05}, {'time': 0.018653292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018661972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.018662458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018669806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.348000000000771e-06, 'source_diff': 7.348000000000771e-06}, {'time': 0.018670292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018675472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1799999999969926e-06, 'source_diff': 5.1799999999969926e-06}, {'time': 0.018675958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018689819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018690292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018697486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.018697958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018708833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.018709306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018719319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013000000003158e-05, 'source_diff': 1.0013000000003158e-05}, {'time': 0.018719792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018729153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.018729625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018738181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.018738653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018750319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666000000000454e-05, 'source_diff': 1.1666000000000454e-05}, {'time': 0.018750792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018762153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1361000000001398e-05, 'source_diff': 1.1361000000001398e-05}, {'time': 0.018762625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018770653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.018771125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018779056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.930999999999216e-06, 'source_diff': 7.930999999999216e-06}, {'time': 0.018779528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018788153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.018788639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018794819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.018795306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018809319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.401300000000022e-05, 'source_diff': 1.401300000000022e-05}, {'time': 0.018809806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018821, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1194000000002563e-05, 'source_diff': 1.1194000000002563e-05}, {'time': 0.018821472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018834833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.018835306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018843833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527000000001228e-06, 'source_diff': 8.527000000001228e-06}, {'time': 0.018844306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018852028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.721999999998203e-06, 'source_diff': 7.721999999998203e-06}, {'time': 0.0188525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018864, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1499999999997623e-05, 'source_diff': 1.1499999999997623e-05}, {'time': 0.018864472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:47.198" endtime="20201112 09:42:47.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.194" endtime="20201112 09:42:47.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:47.229" level="INFO">${debug-compressed} = {'diff': [0, 4.7199999999789077e-07, 4.847000000002266e-06, 4.859999999974607e-07, 9.709000000000106e-06, 4.720000000013602e-07, 1.2846999999999859e-05, 4.720000000013602e-07, 1.2361999999998402e-05, ...</msg>
<status status="PASS" starttime="20201112 09:42:47.205" endtime="20201112 09:42:47.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.233" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:47.232" endtime="20201112 09:42:47.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.237" level="INFO">VALUE: {'diff': [0, 4.7199999999789077e-07, 4.847000000002266e-06, 4.859999999974607e-07, 9.709000000000106e-06, 4.720000000013602e-07, 1.2846999999999859e-05, 4.720000000013602e-07, 1.2361999999998402e-05, 4.720000000013602e-07, 8.707999999999633e-06, 4.7199999999789077e-07, 1.1181000000002467e-05, 4.7199999999789077e-07, 9.695000000000537e-06, 4.720000000013602e-07, 1.0860999999997428e-05, 4.720000000013602e-07, 1.4195000000001567e-05, 4.859999999974607e-07, 6.847000000000797e-06, 4.860000000009301e-07, 9.847000000000328e-06, 4.859999999974607e-07, 5.514000000001601e-06, 4.860000000009301e-07, 6.8480000000002705e-06, 4.859999999974607e-07, 9.208000000000133e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.7199999999789077e-07, 4.417000000003085e-06, 4.7199999999789077e-07, 6.805000000002087e-06, 4.729999999973644e-07, 7.597000000001547e-06, 4.7199999999789077e-07, 7.792000000002991e-06, 4.7199999999789077e-07, 8.222000000002172e-06, 4.7199999999789077e-07, 8.84800000000227e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.720000000013602e-07, 1.4527999999999763e-05, 4.860000000009301e-07, 4.166999999999366e-06, 4.7199999999789077e-07, 1.0041000000002298e-05, 4.7300000000083386e-07, 1.384699999999739e-05, 4.720000000013602e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 1.2333999999999262e-05, 4.859999999974607e-07, 8.680000000000493e-06, 4.860000000009301e-07, 7.348000000000771e-06, 4.860000000009301e-07, 5.1799999999969926e-06, 4.860000000009301e-07, 1.3861000000000429e-05, 4.7300000000083386e-07, 7.193999999998563e-06, 4.720000000013602e-07, 1.0875000000000468e-05, 4.729999999973644e-07, 1.0013000000003158e-05, 4.729999999973644e-07, 9.360999999999398e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07, 1.1666000000000454e-05, 4.729999999973644e-07, 1.1361000000001398e-05, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 7.930999999999216e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.860000000009301e-07, 6.180000000001462e-06, 4.870000000004038e-07, 1.401300000000022e-05, 4.869999999969343e-07, 1.1194000000002563e-05, 4.7199999999789077e-07, 1.3360999999999928e-05, 4.7300000000083386e-07, 8.527000000001228e-06, 4.7300000000083386e-07, 7.721999999998203e-06, 4.720000000013602e-07, 1.1499999999997623e-05, 4.720000000013602e-07], 'eventsource_diff': [0, 4.7199999999789077e-07, 4.847000000002266e-06, 4.859999999974607e-07, 9.709000000000106e-06, 4.720000000013602e-07, 1.2846999999999859e-05, 4.720000000013602e-07, 1.2361999999998402e-05, 4.720000000013602e-07, 8.707999999999633e-06, 4.7199999999789077e-07, 1.1181000000002467e-05, 4.7199999999789077e-07, 9.695000000000537e-06, 4.720000000013602e-07, 1.0860999999997428e-05, 4.720000000013602e-07, 1.4195000000001567e-05, 4.859999999974607e-07, 6.847000000000797e-06, 4.860000000009301e-07, 9.847000000000328e-06, 4.859999999974607e-07, 5.514000000001601e-06, 4.860000000009301e-07, 6.8480000000002705e-06, 4.859999999974607e-07, 9.208000000000133e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.7199999999789077e-07, 4.417000000003085e-06, 4.7199999999789077e-07, 6.805000000002087e-06, 4.729999999973644e-07, 7.597000000001547e-06, 4.7199999999789077e-07, 7.792000000002991e-06, 4.7199999999789077e-07, 8.222000000002172e-06, 4.7199999999789077e-07, 8.84800000000227e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.720000000013602e-07, 1.4527999999999763e-05, 4.860000000009301e-07, 4.166999999999366e-06, 4.7199999999789077e-07, 1.0041000000002298e-05, 4.7300000000083386e-07, 1.384699999999739e-05, 4.720000000013602e-07, 1.0889000000000038e-05, 4.720000000013602e-07, 1.2333999999999262e-05, 4.859999999974607e-07, 8.680000000000493e-06, 4.860000000009301e-07, 7.348000000000771e-06, 4.860000000009301e-07, 5.1799999999969926e-06, 4.860000000009301e-07, 1.3861000000000429e-05, 4.7300000000083386e-07, 7.193999999998563e-06, 4.720000000013602e-07, 1.0875000000000468e-05, 4.729999999973644e-07, 1.0013000000003158e-05, 4.729999999973644e-07, 9.360999999999398e-06, 4.720000000013602e-07, 8.555999999999842e-06, 4.720000000013602e-07, 1.1666000000000454e-05, 4.729999999973644e-07, 1.1361000000001398e-05, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 7.930999999999216e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.860000000009301e-07, 6.180000000001462e-06, 4.870000000004038e-07, 1.401300000000022e-05, 4.869999999969343e-07, 1.1194000000002563e-05, 4.7199999999789077e-07, 1.3360999999999928e-05, 4.7300000000083386e-07, 8.527000000001228e-06, 4.7300000000083386e-07, 7.721999999998203e-06, 4.720000000013602e-07, 1.1499999999997623e-05, 4.720000000013602e-07], 'sourcetime': [0.018384639, 0.018385111, 0.018389958, 0.018390444, 0.018400153, 0.018400625, 0.018413472, 0.018413944, 0.018426306, 0.018426778, 0.018435486, 0.018435958, 0.018447139, 0.018447611, 0.018457306, 0.018457778, 0.018468639, 0.018469111, 0.018483306, 0.018483792, 0.018490639, 0.018491125, 0.018500972, 0.018501458, 0.018506972, 0.018507458, 0.018514306, 0.018514792, 0.018524, 0.018524472, 0.018530153, 0.018530625, 0.018535042, 0.018535514, 0.018542319, 0.018542792, 0.018550389, 0.018550861, 0.018558653, 0.018559125, 0.018567347, 0.018567819, 0.018576667, 0.018577139, 0.018584153, 0.018584625, 0.018599153, 0.018599639, 0.018603806, 0.018604278, 0.018614319, 0.018614792, 0.018628639, 0.018629111, 0.01864, 0.018640472, 0.018652806, 0.018653292, 0.018661972, 0.018662458, 0.018669806, 0.018670292, 0.018675472, 0.018675958, 0.018689819, 0.018690292, 0.018697486, 0.018697958, 0.018708833, 0.018709306, 0.018719319, 0.018719792, 0.018729153, 0.018729625, 0.018738181, 0.018738653, 0.018750319, 0.018750792, 0.018762153, 0.018762625, 0.018770653, 0.018771125, 0.018779056, 0.018779528, 0.018788153, 0.018788639, 0.018794819, 0.018795306, 0.018809319, 0.018809806, 0.018821, 0.018821472, 0.018834833, 0.018835306, 0.018843833, 0.018844306, 0.018852028, 0.0188525, 0.018864, 0.018864472]}</msg>
<status status="PASS" starttime="20201112 09:42:47.234" endtime="20201112 09:42:47.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.230" endtime="20201112 09:42:47.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:47.243" level="INFO">${RESULT} = [{'time': 0.018385111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018390444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:47.240" endtime="20201112 09:42:47.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:47.256" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201112 09:42:47.244" endtime="20201112 09:42:47.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.261" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:47.260" endtime="20201112 09:42:47.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.263" level="INFO">VALUE: [4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.869999999969343e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:47.262" endtime="20201112 09:42:47.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.257" endtime="20201112 09:42:47.264"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.266" endtime="20201112 09:42:47.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:47.270" endtime="20201112 09:42:47.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.268" endtime="20201112 09:42:47.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.265" endtime="20201112 09:42:47.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.861" endtime="20201112 09:42:47.291"></status>
</kw>
<msg timestamp="20201112 09:42:47.291" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.298" endtime="20201112 09:42:47.309"></status>
</kw>
<msg timestamp="20201112 09:42:47.309" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.297" endtime="20201112 09:42:47.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.312" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.310" endtime="20201112 09:42:47.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.313" endtime="20201112 09:42:47.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.294" endtime="20201112 09:42:47.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.293" endtime="20201112 09:42:47.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.322" endtime="20201112 09:42:47.613"></status>
</kw>
<msg timestamp="20201112 09:42:47.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018520528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018521, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:42:47.320" endtime="20201112 09:42:47.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018520528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018521, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:42:47.617" endtime="20201112 09:42:47.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.626" endtime="20201112 09:42:47.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.318" endtime="20201112 09:42:47.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.316" endtime="20201112 09:42:47.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.633" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:47.632" endtime="20201112 09:42:47.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.638" level="INFO">VALUE: [{'time': 0.018520528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018521, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018529861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.861000000002367e-06, 'source_diff': 8.861000000002367e-06}, {'time': 0.018530333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018544694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4361000000000929e-05, 'source_diff': 1.4361000000000929e-05}, {'time': 0.018545167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018554542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.018555014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018564028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999998162e-06, 'source_diff': 9.013999999998162e-06}, {'time': 0.018564514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018576722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2207999999999664e-05, 'source_diff': 1.2207999999999664e-05}, {'time': 0.018577194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018583208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.018583681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018595028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1346999999998358e-05, 'source_diff': 1.1346999999998358e-05}, {'time': 0.018595514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018603361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.018603847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018609056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.018609528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018618042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.018618514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018631542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3028000000001733e-05, 'source_diff': 1.3028000000001733e-05}, {'time': 0.018632014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018642889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.018643361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018651931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.569999999999411e-06, 'source_diff': 8.569999999999411e-06}, {'time': 0.018652403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018660542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.018661014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018669389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.375000000001437e-06, 'source_diff': 8.375000000001437e-06}, {'time': 0.018669861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018683708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847000000000859e-05, 'source_diff': 1.3847000000000859e-05}, {'time': 0.018684194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018693056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.861999999998371e-06, 'source_diff': 8.861999999998371e-06}, {'time': 0.018693528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018707889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.018708361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018718389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.018718861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018730139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1277999999999982e-05, 'source_diff': 1.1277999999999982e-05}, {'time': 0.018730611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018743889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3277999999998513e-05, 'source_diff': 1.3277999999998513e-05}, {'time': 0.018744361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018750056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.018750528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018758222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.694000000002532e-06, 'source_diff': 7.694000000002532e-06}, {'time': 0.018758694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018772403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3709000000000637e-05, 'source_diff': 1.3709000000000637e-05}, {'time': 0.018772875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018779889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.018780361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018784903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.018785375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018796389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1014000000000163e-05, 'source_diff': 1.1014000000000163e-05}, {'time': 0.018796875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018807889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1014000000000163e-05, 'source_diff': 1.1014000000000163e-05}, {'time': 0.018808375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018817736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.361000000002867e-06, 'source_diff': 9.361000000002867e-06}, {'time': 0.018818208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018828722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999999663e-05, 'source_diff': 1.0513999999999663e-05}, {'time': 0.018829208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018836722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.018837208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018849069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1860999999998428e-05, 'source_diff': 1.1860999999998428e-05}, {'time': 0.018849542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018856903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.018857375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018862083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.708000000002571e-06, 'source_diff': 4.708000000002571e-06}, {'time': 0.018862556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018873736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1179999999999524e-05, 'source_diff': 1.1179999999999524e-05}, {'time': 0.018874208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018886069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1860999999998428e-05, 'source_diff': 1.1860999999998428e-05}, {'time': 0.018886542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018897736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1193999999999094e-05, 'source_diff': 1.1193999999999094e-05}, {'time': 0.018898208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018908403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0195000000001037e-05, 'source_diff': 1.0195000000001037e-05}, {'time': 0.018908875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018917236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.018917708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018923736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018924222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018928903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.018929389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018941736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.018942222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018952569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0346999999997358e-05, 'source_diff': 1.0346999999997358e-05}, {'time': 0.018953056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018959903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.018960389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018967931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.018968403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018974083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.679999999997493e-06, 'source_diff': 5.679999999997493e-06}, {'time': 0.018974556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01898875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4193999999998624e-05, 'source_diff': 1.4193999999998624e-05}, {'time': 0.018989222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019000917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1694999999999067e-05, 'source_diff': 1.1694999999999067e-05}, {'time': 0.019001389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01900725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019007722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:47.634" endtime="20201112 09:42:47.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.629" endtime="20201112 09:42:47.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:47.664" level="INFO">${debug-compressed} = {'diff': [0, 4.7199999999789077e-07, 8.861000000002367e-06, 4.7199999999789077e-07, 1.4361000000000929e-05, 4.7300000000083386e-07, 9.374999999998967e-06, 4.720000000013602e-07, 9.013999999998162e-06,...</msg>
<status status="PASS" starttime="20201112 09:42:47.640" endtime="20201112 09:42:47.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.668" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:47.667" endtime="20201112 09:42:47.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.672" level="INFO">VALUE: {'diff': [0, 4.7199999999789077e-07, 8.861000000002367e-06, 4.7199999999789077e-07, 1.4361000000000929e-05, 4.7300000000083386e-07, 9.374999999998967e-06, 4.720000000013602e-07, 9.013999999998162e-06, 4.860000000009301e-07, 1.2207999999999664e-05, 4.720000000013602e-07, 6.0139999999986316e-06, 4.7300000000083386e-07, 1.1346999999998358e-05, 4.860000000009301e-07, 7.846999999998328e-06, 4.860000000009301e-07, 5.2089999999990755e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7199999999789077e-07, 1.3028000000001733e-05, 4.7199999999789077e-07, 1.0875000000000468e-05, 4.720000000013602e-07, 8.569999999999411e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.720000000013602e-07, 8.375000000001437e-06, 4.7199999999789077e-07, 1.3847000000000859e-05, 4.860000000009301e-07, 8.861999999998371e-06, 4.720000000013602e-07, 1.4360999999997459e-05, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 1.1277999999999982e-05, 4.720000000013602e-07, 1.3277999999998513e-05, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999789077e-07, 7.694000000002532e-06, 4.7199999999789077e-07, 1.3709000000000637e-05, 4.720000000013602e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 4.541999999999741e-06, 4.720000000013602e-07, 1.1014000000000163e-05, 4.860000000009301e-07, 1.1014000000000163e-05, 4.859999999974607e-07, 9.361000000002867e-06, 4.7199999999789077e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 7.514000000000132e-06, 4.860000000009301e-07, 1.1860999999998428e-05, 4.7300000000083386e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 4.708000000002571e-06, 4.729999999973644e-07, 1.1179999999999524e-05, 4.720000000013602e-07, 1.1860999999998428e-05, 4.7300000000083386e-07, 1.1193999999999094e-05, 4.720000000013602e-07, 1.0195000000001037e-05, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.860000000009301e-07, 4.680999999999436e-06, 4.860000000009301e-07, 1.2346999999999358e-05, 4.860000000009301e-07, 1.0346999999997358e-05, 4.870000000004038e-07, 6.847000000000797e-06, 4.860000000009301e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 5.679999999997493e-06, 4.7300000000083386e-07, 1.4193999999998624e-05, 4.720000000013602e-07, 1.1694999999999067e-05, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07], 'eventsource_diff': [0, 4.7199999999789077e-07, 8.861000000002367e-06, 4.7199999999789077e-07, 1.4361000000000929e-05, 4.7300000000083386e-07, 9.374999999998967e-06, 4.720000000013602e-07, 9.013999999998162e-06, 4.860000000009301e-07, 1.2207999999999664e-05, 4.720000000013602e-07, 6.0139999999986316e-06, 4.7300000000083386e-07, 1.1346999999998358e-05, 4.860000000009301e-07, 7.846999999998328e-06, 4.860000000009301e-07, 5.2089999999990755e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7199999999789077e-07, 1.3028000000001733e-05, 4.7199999999789077e-07, 1.0875000000000468e-05, 4.720000000013602e-07, 8.569999999999411e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.720000000013602e-07, 8.375000000001437e-06, 4.7199999999789077e-07, 1.3847000000000859e-05, 4.860000000009301e-07, 8.861999999998371e-06, 4.720000000013602e-07, 1.4360999999997459e-05, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 1.1277999999999982e-05, 4.720000000013602e-07, 1.3277999999998513e-05, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999789077e-07, 7.694000000002532e-06, 4.7199999999789077e-07, 1.3709000000000637e-05, 4.720000000013602e-07, 7.013999999999632e-06, 4.7199999999789077e-07, 4.541999999999741e-06, 4.720000000013602e-07, 1.1014000000000163e-05, 4.860000000009301e-07, 1.1014000000000163e-05, 4.859999999974607e-07, 9.361000000002867e-06, 4.7199999999789077e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 7.514000000000132e-06, 4.860000000009301e-07, 1.1860999999998428e-05, 4.7300000000083386e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 4.708000000002571e-06, 4.729999999973644e-07, 1.1179999999999524e-05, 4.720000000013602e-07, 1.1860999999998428e-05, 4.7300000000083386e-07, 1.1193999999999094e-05, 4.720000000013602e-07, 1.0195000000001037e-05, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.860000000009301e-07, 4.680999999999436e-06, 4.860000000009301e-07, 1.2346999999999358e-05, 4.860000000009301e-07, 1.0346999999997358e-05, 4.870000000004038e-07, 6.847000000000797e-06, 4.860000000009301e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 5.679999999997493e-06, 4.7300000000083386e-07, 1.4193999999998624e-05, 4.720000000013602e-07, 1.1694999999999067e-05, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.018520528, 0.018521, 0.018529861, 0.018530333, 0.018544694, 0.018545167, 0.018554542, 0.018555014, 0.018564028, 0.018564514, 0.018576722, 0.018577194, 0.018583208, 0.018583681, 0.018595028, 0.018595514, 0.018603361, 0.018603847, 0.018609056, 0.018609528, 0.018618042, 0.018618514, 0.018631542, 0.018632014, 0.018642889, 0.018643361, 0.018651931, 0.018652403, 0.018660542, 0.018661014, 0.018669389, 0.018669861, 0.018683708, 0.018684194, 0.018693056, 0.018693528, 0.018707889, 0.018708361, 0.018718389, 0.018718861, 0.018730139, 0.018730611, 0.018743889, 0.018744361, 0.018750056, 0.018750528, 0.018758222, 0.018758694, 0.018772403, 0.018772875, 0.018779889, 0.018780361, 0.018784903, 0.018785375, 0.018796389, 0.018796875, 0.018807889, 0.018808375, 0.018817736, 0.018818208, 0.018828722, 0.018829208, 0.018836722, 0.018837208, 0.018849069, 0.018849542, 0.018856903, 0.018857375, 0.018862083, 0.018862556, 0.018873736, 0.018874208, 0.018886069, 0.018886542, 0.018897736, 0.018898208, 0.018908403, 0.018908875, 0.018917236, 0.018917708, 0.018923736, 0.018924222, 0.018928903, 0.018929389, 0.018941736, 0.018942222, 0.018952569, 0.018953056, 0.018959903, 0.018960389, 0.018967931, 0.018968403, 0.018974083, 0.018974556, 0.01898875, 0.018989222, 0.019000917, 0.019001389, 0.01900725, 0.019007722]}</msg>
<status status="PASS" starttime="20201112 09:42:47.669" endtime="20201112 09:42:47.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.665" endtime="20201112 09:42:47.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:47.678" level="INFO">${RESULT} = [{'time': 0.018521, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018530333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:42:47.674" endtime="20201112 09:42:47.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:47.691" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4....</msg>
<status status="PASS" starttime="20201112 09:42:47.679" endtime="20201112 09:42:47.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.696" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:47.695" endtime="20201112 09:42:47.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.698" level="INFO">VALUE: [4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:47.697" endtime="20201112 09:42:47.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.692" endtime="20201112 09:42:47.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.701" endtime="20201112 09:42:47.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:47.705" endtime="20201112 09:42:47.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.703" endtime="20201112 09:42:47.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.700" endtime="20201112 09:42:47.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.291" endtime="20201112 09:42:47.725"></status>
</kw>
<msg timestamp="20201112 09:42:47.726" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.734" endtime="20201112 09:42:47.745"></status>
</kw>
<msg timestamp="20201112 09:42:47.745" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.733" endtime="20201112 09:42:47.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.748" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.746" endtime="20201112 09:42:47.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.749" endtime="20201112 09:42:47.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.730" endtime="20201112 09:42:47.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.728" endtime="20201112 09:42:47.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.758" endtime="20201112 09:42:48.048"></status>
</kw>
<msg timestamp="20201112 09:42:48.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019490153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019490625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.756" endtime="20201112 09:42:48.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019490153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019490625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.052" endtime="20201112 09:42:48.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.061" endtime="20201112 09:42:48.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.754" endtime="20201112 09:42:48.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.752" endtime="20201112 09:42:48.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.068" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:48.067" endtime="20201112 09:42:48.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.073" level="INFO">VALUE: [{'time': 0.019490153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019490625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019498639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.019499125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019508986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.019509458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019522486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3027999999998263e-05, 'source_diff': 1.3027999999998263e-05}, {'time': 0.019522958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019531819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.019532292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019546153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.019546625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019555986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.019556458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019565986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.019566458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019572486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.019572958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019581833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.019582306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019593167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.019593639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019600153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.019600639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019609986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.019610472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019620153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.681000000000967e-06, 'source_diff': 9.681000000000967e-06}, {'time': 0.019620639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019627333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.019627806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019638333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0526999999999759e-05, 'source_diff': 1.0526999999999759e-05}, {'time': 0.019638806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019643667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.019644139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019653333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.193999999997093e-06, 'source_diff': 9.193999999997093e-06}, {'time': 0.019653806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019666667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.019667139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0196795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.019679972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0196915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.019691986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019701333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.019701819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3181000000000997e-05, 'source_diff': 1.3181000000000997e-05}, {'time': 0.019715486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019724722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.235999999999273e-06, 'source_diff': 9.235999999999273e-06}, {'time': 0.019725194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019732, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.019732486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019740347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.019740819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019747347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.019747819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019759514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1694999999999067e-05, 'source_diff': 1.1694999999999067e-05}, {'time': 0.019759986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019768181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.019768653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019774681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.019775153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019779514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.019779986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019791847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1861000000001898e-05, 'source_diff': 1.1861000000001898e-05}, {'time': 0.019792319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019801847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.019802319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019815181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2862000000002372e-05, 'source_diff': 1.2862000000002372e-05}, {'time': 0.019815667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019827514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1847000000002328e-05, 'source_diff': 1.1847000000002328e-05}, {'time': 0.019828, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019837347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347000000003297e-06, 'source_diff': 9.347000000003297e-06}, {'time': 0.019837833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019842514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.019843, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019851514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.019852, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019866708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4707999999998694e-05, 'source_diff': 1.4707999999998694e-05}, {'time': 0.019867181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019874028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.0198745, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019879208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.019879681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019883833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152000000000322e-06, 'source_diff': 4.152000000000322e-06}, {'time': 0.019884319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019892833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.513999999997662e-06, 'source_diff': 8.513999999997662e-06}, {'time': 0.019893319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019905056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1737000000001246e-05, 'source_diff': 1.1737000000001246e-05}, {'time': 0.019905528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0199155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.019915986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019920333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.019920819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019925514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.019925986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019938847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.019939319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019945028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.0199455, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019957903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2402999999997638e-05, 'source_diff': 1.2402999999997638e-05}, {'time': 0.019958375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:48.069" endtime="20201112 09:42:48.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.064" endtime="20201112 09:42:48.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:48.100" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 8.014000000000632e-06, 4.859999999974607e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4....</msg>
<status status="PASS" starttime="20201112 09:42:48.075" endtime="20201112 09:42:48.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.104" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:48.102" endtime="20201112 09:42:48.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.108" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 8.014000000000632e-06, 4.859999999974607e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4.7300000000083386e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 9.360999999999398e-06, 4.7199999999789077e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 6.513999999999132e-06, 4.860000000009301e-07, 9.346999999999828e-06, 4.860000000009301e-07, 9.681000000000967e-06, 4.859999999974607e-07, 6.694000000001532e-06, 4.7300000000083386e-07, 1.0526999999999759e-05, 4.7300000000083386e-07, 4.860999999998367e-06, 4.720000000013602e-07, 9.193999999997093e-06, 4.7300000000083386e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.860000000009301e-07, 9.346999999999828e-06, 4.859999999974607e-07, 1.3181000000000997e-05, 4.860000000009301e-07, 9.235999999999273e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.860000000009301e-07, 7.860999999997897e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.1694999999999067e-05, 4.720000000013602e-07, 8.194999999999036e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 1.1861000000001898e-05, 4.7199999999789077e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 1.2862000000002372e-05, 4.859999999974607e-07, 1.1847000000002328e-05, 4.859999999974607e-07, 9.347000000003297e-06, 4.859999999974607e-07, 4.680999999999436e-06, 4.860000000009301e-07, 8.514000000001132e-06, 4.860000000009301e-07, 1.4707999999998694e-05, 4.7300000000083386e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 4.707999999999102e-06, 4.7300000000083386e-07, 4.152000000000322e-06, 4.860000000009301e-07, 8.513999999997662e-06, 4.860000000009301e-07, 1.1737000000001246e-05, 4.7199999999789077e-07, 9.972000000000453e-06, 4.860000000009301e-07, 4.346999999998297e-06, 4.860000000009301e-07, 4.6949999999990055e-06, 4.720000000013602e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 5.7089999999995755e-06, 4.720000000013602e-07, 1.2402999999997638e-05, 4.720000000013602e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 8.014000000000632e-06, 4.859999999974607e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4.7300000000083386e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 9.360999999999398e-06, 4.7199999999789077e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 6.513999999999132e-06, 4.860000000009301e-07, 9.346999999999828e-06, 4.860000000009301e-07, 9.681000000000967e-06, 4.859999999974607e-07, 6.694000000001532e-06, 4.7300000000083386e-07, 1.0526999999999759e-05, 4.7300000000083386e-07, 4.860999999998367e-06, 4.720000000013602e-07, 9.193999999997093e-06, 4.7300000000083386e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.860000000009301e-07, 9.346999999999828e-06, 4.859999999974607e-07, 1.3181000000000997e-05, 4.860000000009301e-07, 9.235999999999273e-06, 4.720000000013602e-07, 6.805999999998091e-06, 4.860000000009301e-07, 7.860999999997897e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.1694999999999067e-05, 4.720000000013602e-07, 8.194999999999036e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 1.1861000000001898e-05, 4.7199999999789077e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 1.2862000000002372e-05, 4.859999999974607e-07, 1.1847000000002328e-05, 4.859999999974607e-07, 9.347000000003297e-06, 4.859999999974607e-07, 4.680999999999436e-06, 4.860000000009301e-07, 8.514000000001132e-06, 4.860000000009301e-07, 1.4707999999998694e-05, 4.7300000000083386e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 4.707999999999102e-06, 4.7300000000083386e-07, 4.152000000000322e-06, 4.860000000009301e-07, 8.513999999997662e-06, 4.860000000009301e-07, 1.1737000000001246e-05, 4.7199999999789077e-07, 9.972000000000453e-06, 4.860000000009301e-07, 4.346999999998297e-06, 4.860000000009301e-07, 4.6949999999990055e-06, 4.720000000013602e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 5.7089999999995755e-06, 4.720000000013602e-07, 1.2402999999997638e-05, 4.720000000013602e-07], 'sourcetime': [0.019490153, 0.019490625, 0.019498639, 0.019499125, 0.019508986, 0.019509458, 0.019522486, 0.019522958, 0.019531819, 0.019532292, 0.019546153, 0.019546625, 0.019555986, 0.019556458, 0.019565986, 0.019566458, 0.019572486, 0.019572958, 0.019581833, 0.019582306, 0.019593167, 0.019593639, 0.019600153, 0.019600639, 0.019609986, 0.019610472, 0.019620153, 0.019620639, 0.019627333, 0.019627806, 0.019638333, 0.019638806, 0.019643667, 0.019644139, 0.019653333, 0.019653806, 0.019666667, 0.019667139, 0.0196795, 0.019679972, 0.0196915, 0.019691986, 0.019701333, 0.019701819, 0.019715, 0.019715486, 0.019724722, 0.019725194, 0.019732, 0.019732486, 0.019740347, 0.019740819, 0.019747347, 0.019747819, 0.019759514, 0.019759986, 0.019768181, 0.019768653, 0.019774681, 0.019775153, 0.019779514, 0.019779986, 0.019791847, 0.019792319, 0.019801847, 0.019802319, 0.019815181, 0.019815667, 0.019827514, 0.019828, 0.019837347, 0.019837833, 0.019842514, 0.019843, 0.019851514, 0.019852, 0.019866708, 0.019867181, 0.019874028, 0.0198745, 0.019879208, 0.019879681, 0.019883833, 0.019884319, 0.019892833, 0.019893319, 0.019905056, 0.019905528, 0.0199155, 0.019915986, 0.019920333, 0.019920819, 0.019925514, 0.019925986, 0.019938847, 0.019939319, 0.019945028, 0.0199455, 0.019957903, 0.019958375]}</msg>
<status status="PASS" starttime="20201112 09:42:48.105" endtime="20201112 09:42:48.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.101" endtime="20201112 09:42:48.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:48.114" level="INFO">${RESULT} = [{'time': 0.019490625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019499125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:48.111" endtime="20201112 09:42:48.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:48.127" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7...</msg>
<status status="PASS" starttime="20201112 09:42:48.115" endtime="20201112 09:42:48.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.132" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:48.131" endtime="20201112 09:42:48.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.134" level="INFO">VALUE: [4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:48.133" endtime="20201112 09:42:48.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.128" endtime="20201112 09:42:48.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.138" endtime="20201112 09:42:48.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:48.141" endtime="20201112 09:42:48.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.140" endtime="20201112 09:42:48.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.136" endtime="20201112 09:42:48.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.726" endtime="20201112 09:42:48.162"></status>
</kw>
<msg timestamp="20201112 09:42:48.162" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.170" endtime="20201112 09:42:48.180"></status>
</kw>
<msg timestamp="20201112 09:42:48.181" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.168" endtime="20201112 09:42:48.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.183" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.182" endtime="20201112 09:42:48.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.184" endtime="20201112 09:42:48.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.166" endtime="20201112 09:42:48.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.164" endtime="20201112 09:42:48.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.193" endtime="20201112 09:42:48.483"></status>
</kw>
<msg timestamp="20201112 09:42:48.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018651861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018652333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.192" endtime="20201112 09:42:48.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018651861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018652333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.487" endtime="20201112 09:42:48.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.496" endtime="20201112 09:42:48.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.189" endtime="20201112 09:42:48.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.188" endtime="20201112 09:42:48.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.503" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:48.502" endtime="20201112 09:42:48.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.508" level="INFO">VALUE: [{'time': 0.018651861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018652333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018666681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4348000000000832e-05, 'source_diff': 1.4348000000000832e-05}, {'time': 0.018667167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018678694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1527000000000759e-05, 'source_diff': 1.1527000000000759e-05}, {'time': 0.018679167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018693861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4693999999999124e-05, 'source_diff': 1.4693999999999124e-05}, {'time': 0.018694333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018704194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.018704667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018713861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.193999999997093e-06, 'source_diff': 9.193999999997093e-06}, {'time': 0.018714333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018728875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4541999999999333e-05, 'source_diff': 1.4541999999999333e-05}, {'time': 0.018729347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018739361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.018739833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018746528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694999999997536e-06, 'source_diff': 6.694999999997536e-06}, {'time': 0.018747014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018751542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018752014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018761194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.018761681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018771194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513000000002658e-06, 'source_diff': 9.513000000002658e-06}, {'time': 0.018771681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018777694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.013000000002627e-06, 'source_diff': 6.013000000002627e-06}, {'time': 0.018778181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018789236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1054999999999399e-05, 'source_diff': 1.1054999999999399e-05}, {'time': 0.018789708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018802625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2917000000001178e-05, 'source_diff': 1.2917000000001178e-05}, {'time': 0.018803097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018808208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.018808681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018819708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027000000000259e-05, 'source_diff': 1.1027000000000259e-05}, {'time': 0.018820181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018828542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.018829014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018842556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3541999999998333e-05, 'source_diff': 1.3541999999998333e-05}, {'time': 0.018843028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018857542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.018858014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018872708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4693999999999124e-05, 'source_diff': 1.4693999999999124e-05}, {'time': 0.018873194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018887792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4598000000001082e-05, 'source_diff': 1.4598000000001082e-05}, {'time': 0.018888264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018901042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2778000000001483e-05, 'source_diff': 1.2778000000001483e-05}, {'time': 0.018901528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018910389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018910861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018919722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018920194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018933389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194999999997098e-05, 'source_diff': 1.3194999999997098e-05}, {'time': 0.018933861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018946222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.018946694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018958236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1541999999999802e-05, 'source_diff': 1.1541999999999802e-05}, {'time': 0.018958708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018971889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3180999999997528e-05, 'source_diff': 1.3180999999997528e-05}, {'time': 0.018972361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018982056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.695000000000537e-06, 'source_diff': 9.695000000000537e-06}, {'time': 0.018982528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018990431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000000077e-06, 'source_diff': 7.903000000000077e-06}, {'time': 0.018990903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018998278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.01899875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019010069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1319000000002688e-05, 'source_diff': 1.1319000000002688e-05}, {'time': 0.019010542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019019889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347000000003297e-06, 'source_diff': 9.347000000003297e-06}, {'time': 0.019020375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019030056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.681000000000967e-06, 'source_diff': 9.681000000000967e-06}, {'time': 0.019030542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019034708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.019035181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019039708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.526999999997228e-06, 'source_diff': 4.526999999997228e-06}, {'time': 0.019040181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019045042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.019045528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019051542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.019052028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019065875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847000000000859e-05, 'source_diff': 1.3847000000000859e-05}, {'time': 0.019066361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019074208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.019074694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019079042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.34800000000124e-06, 'source_diff': 4.34800000000124e-06}, {'time': 0.019079528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019092708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3180000000001524e-05, 'source_diff': 1.3180000000001524e-05}, {'time': 0.019093194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019103403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0209000000000606e-05, 'source_diff': 1.0209000000000606e-05}, {'time': 0.019103875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019108222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.019108694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019112861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.019113347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019127028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3681000000001498e-05, 'source_diff': 1.3681000000001498e-05}, {'time': 0.019127514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019140528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3013999999998693e-05, 'source_diff': 1.3013999999998693e-05}, {'time': 0.019141014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019150361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.019150847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019159028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.181000000002936e-06, 'source_diff': 8.181000000002936e-06}, {'time': 0.019159514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:48.504" endtime="20201112 09:42:48.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.499" endtime="20201112 09:42:48.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:48.534" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 1.4348000000000832e-05, 4.859999999974607e-07, 1.1527000000000759e-05, 4.7300000000083386e-07, 1.4693999999999124e-05, 4.720000000013602e-07, 9.860999999999898e-06,...</msg>
<status status="PASS" starttime="20201112 09:42:48.510" endtime="20201112 09:42:48.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.538" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:48.537" endtime="20201112 09:42:48.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.542" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.4348000000000832e-05, 4.859999999974607e-07, 1.1527000000000759e-05, 4.7300000000083386e-07, 1.4693999999999124e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.7300000000083386e-07, 9.193999999997093e-06, 4.720000000013602e-07, 1.4541999999999333e-05, 4.720000000013602e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 6.694999999997536e-06, 4.860000000009301e-07, 4.528000000000171e-06, 4.720000000013602e-07, 9.179999999997523e-06, 4.870000000004038e-07, 9.513000000002658e-06, 4.869999999969343e-07, 6.013000000002627e-06, 4.870000000004038e-07, 1.1054999999999399e-05, 4.7199999999789077e-07, 1.2917000000001178e-05, 4.720000000013602e-07, 5.110999999998617e-06, 4.7300000000083386e-07, 1.1027000000000259e-05, 4.729999999973644e-07, 8.361000000001867e-06, 4.720000000013602e-07, 1.3541999999998333e-05, 4.720000000013602e-07, 1.4514000000000193e-05, 4.7199999999789077e-07, 1.4693999999999124e-05, 4.860000000009301e-07, 1.4598000000001082e-05, 4.7199999999789077e-07, 1.2778000000001483e-05, 4.860000000009301e-07, 8.860999999998898e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.3194999999997098e-05, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 1.3180999999997528e-05, 4.720000000013602e-07, 9.695000000000537e-06, 4.7199999999789077e-07, 7.903000000000077e-06, 4.720000000013602e-07, 7.375000000000437e-06, 4.7199999999789077e-07, 1.1319000000002688e-05, 4.729999999973644e-07, 9.347000000003297e-06, 4.859999999974607e-07, 9.681000000000967e-06, 4.860000000009301e-07, 4.165999999999892e-06, 4.7300000000083386e-07, 4.526999999997228e-06, 4.7300000000083386e-07, 4.861000000001836e-06, 4.859999999974607e-07, 6.014000000002101e-06, 4.859999999974607e-07, 1.3847000000000859e-05, 4.860000000009301e-07, 7.846999999998328e-06, 4.860000000009301e-07, 4.34800000000124e-06, 4.859999999974607e-07, 1.3180000000001524e-05, 4.860000000009301e-07, 1.0209000000000606e-05, 4.7199999999789077e-07, 4.347000000001766e-06, 4.7199999999789077e-07, 4.166999999999366e-06, 4.860000000009301e-07, 1.3681000000001498e-05, 4.860000000009301e-07, 1.3013999999998693e-05, 4.860000000009301e-07, 9.346999999999828e-06, 4.859999999974607e-07, 8.181000000002936e-06, 4.859999999974607e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 1.4348000000000832e-05, 4.859999999974607e-07, 1.1527000000000759e-05, 4.7300000000083386e-07, 1.4693999999999124e-05, 4.720000000013602e-07, 9.860999999999898e-06, 4.7300000000083386e-07, 9.193999999997093e-06, 4.720000000013602e-07, 1.4541999999999333e-05, 4.720000000013602e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 6.694999999997536e-06, 4.860000000009301e-07, 4.528000000000171e-06, 4.720000000013602e-07, 9.179999999997523e-06, 4.870000000004038e-07, 9.513000000002658e-06, 4.869999999969343e-07, 6.013000000002627e-06, 4.870000000004038e-07, 1.1054999999999399e-05, 4.7199999999789077e-07, 1.2917000000001178e-05, 4.720000000013602e-07, 5.110999999998617e-06, 4.7300000000083386e-07, 1.1027000000000259e-05, 4.729999999973644e-07, 8.361000000001867e-06, 4.720000000013602e-07, 1.3541999999998333e-05, 4.720000000013602e-07, 1.4514000000000193e-05, 4.7199999999789077e-07, 1.4693999999999124e-05, 4.860000000009301e-07, 1.4598000000001082e-05, 4.7199999999789077e-07, 1.2778000000001483e-05, 4.860000000009301e-07, 8.860999999998898e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.3194999999997098e-05, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 1.3180999999997528e-05, 4.720000000013602e-07, 9.695000000000537e-06, 4.7199999999789077e-07, 7.903000000000077e-06, 4.720000000013602e-07, 7.375000000000437e-06, 4.7199999999789077e-07, 1.1319000000002688e-05, 4.729999999973644e-07, 9.347000000003297e-06, 4.859999999974607e-07, 9.681000000000967e-06, 4.860000000009301e-07, 4.165999999999892e-06, 4.7300000000083386e-07, 4.526999999997228e-06, 4.7300000000083386e-07, 4.861000000001836e-06, 4.859999999974607e-07, 6.014000000002101e-06, 4.859999999974607e-07, 1.3847000000000859e-05, 4.860000000009301e-07, 7.846999999998328e-06, 4.860000000009301e-07, 4.34800000000124e-06, 4.859999999974607e-07, 1.3180000000001524e-05, 4.860000000009301e-07, 1.0209000000000606e-05, 4.7199999999789077e-07, 4.347000000001766e-06, 4.7199999999789077e-07, 4.166999999999366e-06, 4.860000000009301e-07, 1.3681000000001498e-05, 4.860000000009301e-07, 1.3013999999998693e-05, 4.860000000009301e-07, 9.346999999999828e-06, 4.859999999974607e-07, 8.181000000002936e-06, 4.859999999974607e-07], 'sourcetime': [0.018651861, 0.018652333, 0.018666681, 0.018667167, 0.018678694, 0.018679167, 0.018693861, 0.018694333, 0.018704194, 0.018704667, 0.018713861, 0.018714333, 0.018728875, 0.018729347, 0.018739361, 0.018739833, 0.018746528, 0.018747014, 0.018751542, 0.018752014, 0.018761194, 0.018761681, 0.018771194, 0.018771681, 0.018777694, 0.018778181, 0.018789236, 0.018789708, 0.018802625, 0.018803097, 0.018808208, 0.018808681, 0.018819708, 0.018820181, 0.018828542, 0.018829014, 0.018842556, 0.018843028, 0.018857542, 0.018858014, 0.018872708, 0.018873194, 0.018887792, 0.018888264, 0.018901042, 0.018901528, 0.018910389, 0.018910861, 0.018919722, 0.018920194, 0.018933389, 0.018933861, 0.018946222, 0.018946694, 0.018958236, 0.018958708, 0.018971889, 0.018972361, 0.018982056, 0.018982528, 0.018990431, 0.018990903, 0.018998278, 0.01899875, 0.019010069, 0.019010542, 0.019019889, 0.019020375, 0.019030056, 0.019030542, 0.019034708, 0.019035181, 0.019039708, 0.019040181, 0.019045042, 0.019045528, 0.019051542, 0.019052028, 0.019065875, 0.019066361, 0.019074208, 0.019074694, 0.019079042, 0.019079528, 0.019092708, 0.019093194, 0.019103403, 0.019103875, 0.019108222, 0.019108694, 0.019112861, 0.019113347, 0.019127028, 0.019127514, 0.019140528, 0.019141014, 0.019150361, 0.019150847, 0.019159028, 0.019159514]}</msg>
<status status="PASS" starttime="20201112 09:42:48.539" endtime="20201112 09:42:48.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.535" endtime="20201112 09:42:48.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:48.548" level="INFO">${RESULT} = [{'time': 0.018652333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018667167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:48.544" endtime="20201112 09:42:48.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:48.562" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86...</msg>
<status status="PASS" starttime="20201112 09:42:48.549" endtime="20201112 09:42:48.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.566" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:48.565" endtime="20201112 09:42:48.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.569" level="INFO">VALUE: [4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.869999999969343e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.859999999974607e-07]</msg>
<status status="PASS" starttime="20201112 09:42:48.567" endtime="20201112 09:42:48.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.563" endtime="20201112 09:42:48.570"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.572" endtime="20201112 09:42:48.573"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:48.575" endtime="20201112 09:42:48.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.574" endtime="20201112 09:42:48.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.570" endtime="20201112 09:42:48.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.163" endtime="20201112 09:42:48.596"></status>
</kw>
<msg timestamp="20201112 09:42:48.596" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.605" endtime="20201112 09:42:48.614"></status>
</kw>
<msg timestamp="20201112 09:42:48.615" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.603" endtime="20201112 09:42:48.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.617" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.616" endtime="20201112 09:42:48.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.618" endtime="20201112 09:42:48.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.600" endtime="20201112 09:42:48.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.598" endtime="20201112 09:42:48.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.627" endtime="20201112 09:42:48.916"></status>
</kw>
<msg timestamp="20201112 09:42:48.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019442319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019442792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.626" endtime="20201112 09:42:48.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019442319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019442792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.921" endtime="20201112 09:42:48.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.929" endtime="20201112 09:42:48.931"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.623" endtime="20201112 09:42:48.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.621" endtime="20201112 09:42:48.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.936" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:48.935" endtime="20201112 09:42:48.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.941" level="INFO">VALUE: [{'time': 0.019442319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019442792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019453667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.019454139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019467653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3514000000002663e-05, 'source_diff': 1.3514000000002663e-05}, {'time': 0.019468125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019479639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.019480125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019489472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.019489958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019496806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847999999996801e-06, 'source_diff': 6.847999999996801e-06}, {'time': 0.019497292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019511153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.019511625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019525986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.019526458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019532819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.019533292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019537819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.019538292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019544319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.027000000002197e-06, 'source_diff': 6.027000000002197e-06}, {'time': 0.019544792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019558667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3874999999999998e-05, 'source_diff': 1.3874999999999998e-05}, {'time': 0.019559139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019566319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.179999999998993e-06, 'source_diff': 7.179999999998993e-06}, {'time': 0.019566806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019579486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2680000000001024e-05, 'source_diff': 1.2680000000001024e-05}, {'time': 0.019579972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019588653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.019589139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019595819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.680000000001962e-06, 'source_diff': 6.680000000001962e-06}, {'time': 0.019596306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019602319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.012999999999158e-06, 'source_diff': 6.012999999999158e-06}, {'time': 0.019602806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019607167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.019607639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019616, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.019616472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019625667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.019626139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019633694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.019634167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019648667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4500000000000624e-05, 'source_diff': 1.4500000000000624e-05}, {'time': 0.019649139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019653306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.019653792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019664639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.019665125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019669472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.019669958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019683486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.019683958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019689, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.019689472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019701319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1846999999998858e-05, 'source_diff': 1.1846999999998858e-05}, {'time': 0.019701792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019708333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541000000002267e-06, 'source_diff': 6.541000000002267e-06}, {'time': 0.019708806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019713514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.708000000002571e-06, 'source_diff': 4.708000000002571e-06}, {'time': 0.019713986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019727819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3833000000001289e-05, 'source_diff': 1.3833000000001289e-05}, {'time': 0.019728292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019733319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.026999999997728e-06, 'source_diff': 5.026999999997728e-06}, {'time': 0.019733792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019742986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.019743458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019754486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1028000000003202e-05, 'source_diff': 1.1028000000003202e-05}, {'time': 0.019754958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01976, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.019760472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019765514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.019765986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019778833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.019779306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019784222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.019784694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019795167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0473000000000426e-05, 'source_diff': 1.0473000000000426e-05}, {'time': 0.019795639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019809333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3693999999998124e-05, 'source_diff': 1.3693999999998124e-05}, {'time': 0.019809806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019816875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.069000000001907e-06, 'source_diff': 7.069000000001907e-06}, {'time': 0.019817347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019827167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.019827639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019836667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027999999997732e-06, 'source_diff': 9.027999999997732e-06}, {'time': 0.019837139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019844833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.693999999999063e-06, 'source_diff': 7.693999999999063e-06}, {'time': 0.019845306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019853167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.019853639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019862681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.019863153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019871333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.019871806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019884167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2361000000002398e-05, 'source_diff': 1.2361000000002398e-05}, {'time': 0.019884653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019892861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.019893333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019900347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019900819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 09:42:48.937" endtime="20201112 09:42:48.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.933" endtime="20201112 09:42:48.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:48.967" level="INFO">${debug-compressed} = {'diff': [0, 4.7300000000083386e-07, 1.0875000000000468e-05, 4.7199999999789077e-07, 1.3514000000002663e-05, 4.7199999999789077e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 9.346999999999828e-0...</msg>
<status status="PASS" starttime="20201112 09:42:48.944" endtime="20201112 09:42:48.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.971" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:48.970" endtime="20201112 09:42:48.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.975" level="INFO">VALUE: {'diff': [0, 4.7300000000083386e-07, 1.0875000000000468e-05, 4.7199999999789077e-07, 1.3514000000002663e-05, 4.7199999999789077e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 9.346999999999828e-06, 4.860000000009301e-07, 6.847999999996801e-06, 4.860000000009301e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 1.4360999999997459e-05, 4.720000000013602e-07, 6.360999999999867e-06, 4.7300000000083386e-07, 4.527000000000697e-06, 4.729999999973644e-07, 6.027000000002197e-06, 4.729999999973644e-07, 1.3874999999999998e-05, 4.720000000013602e-07, 7.179999999998993e-06, 4.870000000004038e-07, 1.2680000000001024e-05, 4.860000000009301e-07, 8.680999999999967e-06, 4.859999999974607e-07, 6.680000000001962e-06, 4.870000000004038e-07, 6.012999999999158e-06, 4.870000000004038e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 9.195000000000036e-06, 4.720000000013602e-07, 7.554999999999368e-06, 4.7300000000083386e-07, 1.4500000000000624e-05, 4.7199999999789077e-07, 4.166999999999366e-06, 4.860000000009301e-07, 1.0847000000001328e-05, 4.859999999974607e-07, 4.347000000001766e-06, 4.860000000009301e-07, 1.3527999999998763e-05, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 1.1846999999998858e-05, 4.7300000000083386e-07, 6.541000000002267e-06, 4.729999999973644e-07, 4.708000000002571e-06, 4.7199999999789077e-07, 1.3833000000001289e-05, 4.7300000000083386e-07, 5.026999999997728e-06, 4.7300000000083386e-07, 9.194000000000563e-06, 4.7199999999789077e-07, 1.1028000000003202e-05, 4.7199999999789077e-07, 5.042000000000241e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 1.2846999999999859e-05, 4.7300000000083386e-07, 4.916000000000642e-06, 4.7199999999789077e-07, 1.0473000000000426e-05, 4.720000000013602e-07, 1.3693999999998124e-05, 4.7300000000083386e-07, 7.069000000001907e-06, 4.7199999999789077e-07, 9.820000000000662e-06, 4.720000000013602e-07, 9.027999999997732e-06, 4.720000000013602e-07, 7.693999999999063e-06, 4.7300000000083386e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 9.042000000000772e-06, 4.720000000013602e-07, 8.179999999999993e-06, 4.729999999973644e-07, 1.2361000000002398e-05, 4.859999999974607e-07, 8.208000000002602e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.720000000013602e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 4.7300000000083386e-07, 1.0875000000000468e-05, 4.7199999999789077e-07, 1.3514000000002663e-05, 4.7199999999789077e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 9.346999999999828e-06, 4.860000000009301e-07, 6.847999999996801e-06, 4.860000000009301e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 1.4360999999997459e-05, 4.720000000013602e-07, 6.360999999999867e-06, 4.7300000000083386e-07, 4.527000000000697e-06, 4.729999999973644e-07, 6.027000000002197e-06, 4.729999999973644e-07, 1.3874999999999998e-05, 4.720000000013602e-07, 7.179999999998993e-06, 4.870000000004038e-07, 1.2680000000001024e-05, 4.860000000009301e-07, 8.680999999999967e-06, 4.859999999974607e-07, 6.680000000001962e-06, 4.870000000004038e-07, 6.012999999999158e-06, 4.870000000004038e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 9.195000000000036e-06, 4.720000000013602e-07, 7.554999999999368e-06, 4.7300000000083386e-07, 1.4500000000000624e-05, 4.7199999999789077e-07, 4.166999999999366e-06, 4.860000000009301e-07, 1.0847000000001328e-05, 4.859999999974607e-07, 4.347000000001766e-06, 4.860000000009301e-07, 1.3527999999998763e-05, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 1.1846999999998858e-05, 4.7300000000083386e-07, 6.541000000002267e-06, 4.729999999973644e-07, 4.708000000002571e-06, 4.7199999999789077e-07, 1.3833000000001289e-05, 4.7300000000083386e-07, 5.026999999997728e-06, 4.7300000000083386e-07, 9.194000000000563e-06, 4.7199999999789077e-07, 1.1028000000003202e-05, 4.7199999999789077e-07, 5.042000000000241e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.7199999999789077e-07, 1.2846999999999859e-05, 4.7300000000083386e-07, 4.916000000000642e-06, 4.7199999999789077e-07, 1.0473000000000426e-05, 4.720000000013602e-07, 1.3693999999998124e-05, 4.7300000000083386e-07, 7.069000000001907e-06, 4.7199999999789077e-07, 9.820000000000662e-06, 4.720000000013602e-07, 9.027999999997732e-06, 4.720000000013602e-07, 7.693999999999063e-06, 4.7300000000083386e-07, 7.861000000001367e-06, 4.7199999999789077e-07, 9.042000000000772e-06, 4.720000000013602e-07, 8.179999999999993e-06, 4.729999999973644e-07, 1.2361000000002398e-05, 4.859999999974607e-07, 8.208000000002602e-06, 4.7199999999789077e-07, 7.013999999999632e-06, 4.720000000013602e-07], 'sourcetime': [0.019442319, 0.019442792, 0.019453667, 0.019454139, 0.019467653, 0.019468125, 0.019479639, 0.019480125, 0.019489472, 0.019489958, 0.019496806, 0.019497292, 0.019511153, 0.019511625, 0.019525986, 0.019526458, 0.019532819, 0.019533292, 0.019537819, 0.019538292, 0.019544319, 0.019544792, 0.019558667, 0.019559139, 0.019566319, 0.019566806, 0.019579486, 0.019579972, 0.019588653, 0.019589139, 0.019595819, 0.019596306, 0.019602319, 0.019602806, 0.019607167, 0.019607639, 0.019616, 0.019616472, 0.019625667, 0.019626139, 0.019633694, 0.019634167, 0.019648667, 0.019649139, 0.019653306, 0.019653792, 0.019664639, 0.019665125, 0.019669472, 0.019669958, 0.019683486, 0.019683958, 0.019689, 0.019689472, 0.019701319, 0.019701792, 0.019708333, 0.019708806, 0.019713514, 0.019713986, 0.019727819, 0.019728292, 0.019733319, 0.019733792, 0.019742986, 0.019743458, 0.019754486, 0.019754958, 0.01976, 0.019760472, 0.019765514, 0.019765986, 0.019778833, 0.019779306, 0.019784222, 0.019784694, 0.019795167, 0.019795639, 0.019809333, 0.019809806, 0.019816875, 0.019817347, 0.019827167, 0.019827639, 0.019836667, 0.019837139, 0.019844833, 0.019845306, 0.019853167, 0.019853639, 0.019862681, 0.019863153, 0.019871333, 0.019871806, 0.019884167, 0.019884653, 0.019892861, 0.019893333, 0.019900347, 0.019900819]}</msg>
<status status="PASS" starttime="20201112 09:42:48.972" endtime="20201112 09:42:48.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.968" endtime="20201112 09:42:48.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:48.981" level="INFO">${RESULT} = [{'time': 0.019442792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019454139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:48.978" endtime="20201112 09:42:48.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:48.995" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201112 09:42:48.982" endtime="20201112 09:42:48.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.999" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:48.998" endtime="20201112 09:42:49.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.002" level="INFO">VALUE: [4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 09:42:49.000" endtime="20201112 09:42:49.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.996" endtime="20201112 09:42:49.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.005" endtime="20201112 09:42:49.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.008" endtime="20201112 09:42:49.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.007" endtime="20201112 09:42:49.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.003" endtime="20201112 09:42:49.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.597" endtime="20201112 09:42:49.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.358" endtime="20201112 09:42:49.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.034" endtime="20201112 09:42:49.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.032" endtime="20201112 09:42:49.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.031" endtime="20201112 09:42:49.054"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:40.283" endtime="20201112 09:42:49.054" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.062" endtime="20201112 09:42:49.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.060" endtime="20201112 09:42:49.082"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.095" endtime="20201112 09:42:49.113"></status>
</kw>
<msg timestamp="20201112 09:42:49.114" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.093" endtime="20201112 09:42:49.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.116" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.115" endtime="20201112 09:42:49.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.120" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:49.118" endtime="20201112 09:42:49.120"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:49.091" endtime="20201112 09:42:49.121"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:49.088" endtime="20201112 09:42:49.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.087" endtime="20201112 09:42:49.122"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:49.126" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:49.126" endtime="20201112 09:42:49.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.123" endtime="20201112 09:42:49.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.086" endtime="20201112 09:42:49.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.085" endtime="20201112 09:42:49.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.128" endtime="20201112 09:42:49.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.084" endtime="20201112 09:42:49.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.082" endtime="20201112 09:42:49.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.059" endtime="20201112 09:42:49.131"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 09:42:49.133" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.141" endtime="20201112 09:42:49.152"></status>
</kw>
<msg timestamp="20201112 09:42:49.153" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.139" endtime="20201112 09:42:49.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.155" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.154" endtime="20201112 09:42:49.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.156" endtime="20201112 09:42:49.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.137" endtime="20201112 09:42:49.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.135" endtime="20201112 09:42:49.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.165" endtime="20201112 09:42:49.453"></status>
</kw>
<msg timestamp="20201112 09:42:49.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070538306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070540972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.164" endtime="20201112 09:42:49.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070538306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070540972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.457" endtime="20201112 09:42:49.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.465" endtime="20201112 09:42:49.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.161" endtime="20201112 09:42:49.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.159" endtime="20201112 09:42:49.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:49.472" level="INFO">${RESULT} = [{'time': 0.070540972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.070548514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:49.469" endtime="20201112 09:42:49.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:49.486" level="INFO">${OVERHEAD} = {'diff': [2.665999999998392e-06, 2.6810000000043743e-06, 2.6530000000052345e-06, 2.6669999999978655e-06, 2.6939999999975317e-06, 2.665999999998392e-06, 2.6809999999904965e-06, 2.665999999998392e-06, 2...</msg>
<status status="PASS" starttime="20201112 09:42:49.473" endtime="20201112 09:42:49.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.491" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:49.490" endtime="20201112 09:42:49.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.494" level="INFO">VALUE: [2.665999999998392e-06, 2.6810000000043743e-06, 2.6530000000052345e-06, 2.6669999999978655e-06, 2.6939999999975317e-06, 2.665999999998392e-06, 2.6809999999904965e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6800000000049007e-06, 2.6809999999904965e-06, 2.6670000000117433e-06, 2.665999999998392e-06, 2.6119999999990595e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.652000000005761e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6809999999904965e-06, 2.6530000000052345e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.6800000000049007e-06, 2.6809999999904965e-06, 2.665999999998392e-06, 2.6800000000049007e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.5839999999999197e-06, 2.652000000005761e-06, 2.7360000000031803e-06, 2.6669999999978655e-06, 2.652000000005761e-06, 2.6389999999987257e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.597000000006955e-06, 2.6530000000052345e-06, 2.665999999998392e-06, 2.6250000000060947e-06, 2.679999999991023e-06, 2.6810000000043743e-06, 2.6669999999978655e-06, 2.6669999999978655e-06]</msg>
<status status="PASS" starttime="20201112 09:42:49.492" endtime="20201112 09:42:49.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.488" endtime="20201112 09:42:49.495"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.497" endtime="20201112 09:42:49.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.501" endtime="20201112 09:42:49.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.500" endtime="20201112 09:42:49.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.495" endtime="20201112 09:42:49.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.134" endtime="20201112 09:42:49.522"></status>
</kw>
<msg timestamp="20201112 09:42:49.522" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.530" endtime="20201112 09:42:49.542"></status>
</kw>
<msg timestamp="20201112 09:42:49.542" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.528" endtime="20201112 09:42:49.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.545" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.543" endtime="20201112 09:42:49.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.546" endtime="20201112 09:42:49.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.525" endtime="20201112 09:42:49.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.524" endtime="20201112 09:42:49.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.555" endtime="20201112 09:42:49.839"></status>
</kw>
<msg timestamp="20201112 09:42:49.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019896792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019899486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.553" endtime="20201112 09:42:49.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019896792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019899486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.843" endtime="20201112 09:42:49.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.852" endtime="20201112 09:42:49.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.551" endtime="20201112 09:42:49.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.549" endtime="20201112 09:42:49.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:49.859" level="INFO">${RESULT} = [{'time': 0.019899486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.694000000001001e-06, 'source_diff': 2.694000000001001e-06}, {'time': 0.019914292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:49.855" endtime="20201112 09:42:49.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:49.873" level="INFO">${OVERHEAD} = {'diff': [2.694000000001001e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.708000000000571e-06, 2.681000000000905e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.651...</msg>
<status status="PASS" starttime="20201112 09:42:49.860" endtime="20201112 09:42:49.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.878" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:49.877" endtime="20201112 09:42:49.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.880" level="INFO">VALUE: [2.694000000001001e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.708000000000571e-06, 2.681000000000905e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.651999999998822e-06, 2.6529999999982956e-06, 2.6939999999975317e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.708000000000571e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.7090000000000447e-06, 2.6249999999991558e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.722000000000141e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.6520000000022914e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.651999999998822e-06, 2.667000000001335e-06]</msg>
<status status="PASS" starttime="20201112 09:42:49.879" endtime="20201112 09:42:49.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.874" endtime="20201112 09:42:49.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.884" endtime="20201112 09:42:49.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.888" endtime="20201112 09:42:49.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.885" endtime="20201112 09:42:49.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.882" endtime="20201112 09:42:49.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.523" endtime="20201112 09:42:49.908"></status>
</kw>
<msg timestamp="20201112 09:42:49.909" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.916" endtime="20201112 09:42:49.928"></status>
</kw>
<msg timestamp="20201112 09:42:49.929" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.915" endtime="20201112 09:42:49.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.931" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.930" endtime="20201112 09:42:49.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.932" endtime="20201112 09:42:49.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.912" endtime="20201112 09:42:49.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.911" endtime="20201112 09:42:49.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.941" endtime="20201112 09:42:50.226"></status>
</kw>
<msg timestamp="20201112 09:42:50.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019706806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019709472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.940" endtime="20201112 09:42:50.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019706806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019709472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.230" endtime="20201112 09:42:50.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.239" endtime="20201112 09:42:50.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.937" endtime="20201112 09:42:50.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.935" endtime="20201112 09:42:50.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:50.246" level="INFO">${RESULT} = [{'time': 0.019709472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.0197265, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:42:50.243" endtime="20201112 09:42:50.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:50.260" level="INFO">${OVERHEAD} = {'diff': [2.665999999998392e-06, 2.653000000001765e-06, 2.735999999999711e-06, 2.665999999998392e-06, 2.597000000000016e-06, 2.6389999999987257e-06, 2.679999999997962e-06, 2.6660000000018613e-06, 2.66...</msg>
<status status="PASS" starttime="20201112 09:42:50.247" endtime="20201112 09:42:50.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.264" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:50.263" endtime="20201112 09:42:50.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.266" level="INFO">VALUE: [2.665999999998392e-06, 2.653000000001765e-06, 2.735999999999711e-06, 2.665999999998392e-06, 2.597000000000016e-06, 2.6389999999987257e-06, 2.679999999997962e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.6660000000018613e-06, 2.610999999999586e-06, 2.681000000000905e-06, 2.6250000000026252e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.735999999999711e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.7090000000000447e-06, 2.653000000001765e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.6249999999991558e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.651999999998822e-06, 2.651999999998822e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.679999999997962e-06, 2.597000000000016e-06, 2.665999999998392e-06, 2.6669999999978655e-06]</msg>
<status status="PASS" starttime="20201112 09:42:50.265" endtime="20201112 09:42:50.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.260" endtime="20201112 09:42:50.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.269" endtime="20201112 09:42:50.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:50.274" endtime="20201112 09:42:50.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.271" endtime="20201112 09:42:50.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.268" endtime="20201112 09:42:50.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.909" endtime="20201112 09:42:50.294"></status>
</kw>
<msg timestamp="20201112 09:42:50.294" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.302" endtime="20201112 09:42:50.314"></status>
</kw>
<msg timestamp="20201112 09:42:50.315" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.301" endtime="20201112 09:42:50.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.317" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.316" endtime="20201112 09:42:50.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.318" endtime="20201112 09:42:50.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.298" endtime="20201112 09:42:50.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.296" endtime="20201112 09:42:50.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.327" endtime="20201112 09:42:50.612"></status>
</kw>
<msg timestamp="20201112 09:42:50.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0196815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019684181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:42:50.326" endtime="20201112 09:42:50.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0196815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019684181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:42:50.617" endtime="20201112 09:42:50.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.630" endtime="20201112 09:42:50.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.323" endtime="20201112 09:42:50.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.322" endtime="20201112 09:42:50.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:50.636" level="INFO">${RESULT} = [{'time': 0.019684181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6809999999974354e-06, 'source_diff': 2.6809999999974354e-06}, {'time': 0.019691181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:50.633" endtime="20201112 09:42:50.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:50.650" level="INFO">${OVERHEAD} = {'diff': [2.6809999999974354e-06, 2.5839999999999197e-06, 2.665999999998392e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.695000000000475e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6...</msg>
<status status="PASS" starttime="20201112 09:42:50.637" endtime="20201112 09:42:50.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.654" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:50.653" endtime="20201112 09:42:50.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.657" level="INFO">VALUE: [2.6809999999974354e-06, 2.5839999999999197e-06, 2.665999999998392e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.695000000000475e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.651999999998822e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.610999999999586e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.6949999999970053e-06, 2.6249999999991558e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.597000000000016e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.6520000000022914e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6520000000022914e-06, 2.665999999998392e-06]</msg>
<status status="PASS" starttime="20201112 09:42:50.655" endtime="20201112 09:42:50.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.651" endtime="20201112 09:42:50.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.660" endtime="20201112 09:42:50.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:50.664" endtime="20201112 09:42:50.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.662" endtime="20201112 09:42:50.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.658" endtime="20201112 09:42:50.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.295" endtime="20201112 09:42:50.685"></status>
</kw>
<msg timestamp="20201112 09:42:50.685" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.693" endtime="20201112 09:42:50.704"></status>
</kw>
<msg timestamp="20201112 09:42:50.705" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.691" endtime="20201112 09:42:50.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.707" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.706" endtime="20201112 09:42:50.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.708" endtime="20201112 09:42:50.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.688" endtime="20201112 09:42:50.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.687" endtime="20201112 09:42:50.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.717" endtime="20201112 09:42:51.003"></status>
</kw>
<msg timestamp="20201112 09:42:51.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019711847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.716" endtime="20201112 09:42:51.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019711847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.007" endtime="20201112 09:42:51.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.016" endtime="20201112 09:42:51.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.713" endtime="20201112 09:42:51.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.711" endtime="20201112 09:42:51.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:51.022" level="INFO">${RESULT} = [{'time': 0.019714514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.019725014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:51.019" endtime="20201112 09:42:51.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:51.037" level="INFO">${OVERHEAD} = {'diff': [2.6669999999978655e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2...</msg>
<status status="PASS" starttime="20201112 09:42:51.023" endtime="20201112 09:42:51.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.041" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:51.040" endtime="20201112 09:42:51.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.044" level="INFO">VALUE: [2.6669999999978655e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6939999999975317e-06, 2.6389999999987257e-06, 2.653000000001765e-06, 2.6520000000022914e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6809999999974354e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6250000000026252e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.6529999999982956e-06, 2.6809999999974354e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.749999999999281e-06, 2.6249999999991558e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.708000000000571e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06]</msg>
<status status="PASS" starttime="20201112 09:42:51.042" endtime="20201112 09:42:51.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.038" endtime="20201112 09:42:51.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.047" endtime="20201112 09:42:51.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:51.051" endtime="20201112 09:42:51.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.049" endtime="20201112 09:42:51.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.045" endtime="20201112 09:42:51.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.685" endtime="20201112 09:42:51.072"></status>
</kw>
<msg timestamp="20201112 09:42:51.072" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.080" endtime="20201112 09:42:51.092"></status>
</kw>
<msg timestamp="20201112 09:42:51.092" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.078" endtime="20201112 09:42:51.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.095" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.093" endtime="20201112 09:42:51.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.096" endtime="20201112 09:42:51.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.076" endtime="20201112 09:42:51.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.074" endtime="20201112 09:42:51.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.105" endtime="20201112 09:42:51.392"></status>
</kw>
<msg timestamp="20201112 09:42:51.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019594153, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:42:51.103" endtime="20201112 09:42:51.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019594153, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:42:51.396" endtime="20201112 09:42:51.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.404" endtime="20201112 09:42:51.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.101" endtime="20201112 09:42:51.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.099" endtime="20201112 09:42:51.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:51.411" level="INFO">${RESULT} = [{'time': 0.019594153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.019609528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:51.407" endtime="20201112 09:42:51.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:51.424" level="INFO">${OVERHEAD} = {'diff': [2.6529999999982956e-06, 2.681000000000905e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2....</msg>
<status status="PASS" starttime="20201112 09:42:51.412" endtime="20201112 09:42:51.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.429" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:51.428" endtime="20201112 09:42:51.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.431" level="INFO">VALUE: [2.6529999999982956e-06, 2.681000000000905e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.6249999999991558e-06, 2.6520000000022914e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.695000000000475e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.6520000000022914e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.639000000002195e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6939999999975317e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.679999999997962e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.639000000002195e-06, 2.6250000000026252e-06, 2.665999999998392e-06, 2.665999999998392e-06]</msg>
<status status="PASS" starttime="20201112 09:42:51.430" endtime="20201112 09:42:51.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.425" endtime="20201112 09:42:51.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.434" endtime="20201112 09:42:51.436"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:51.438" endtime="20201112 09:42:51.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.436" endtime="20201112 09:42:51.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.433" endtime="20201112 09:42:51.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.073" endtime="20201112 09:42:51.459"></status>
</kw>
<msg timestamp="20201112 09:42:51.459" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.467" endtime="20201112 09:42:51.479"></status>
</kw>
<msg timestamp="20201112 09:42:51.479" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.466" endtime="20201112 09:42:51.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.482" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.481" endtime="20201112 09:42:51.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.483" endtime="20201112 09:42:51.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.463" endtime="20201112 09:42:51.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.461" endtime="20201112 09:42:51.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.493" endtime="20201112 09:42:51.780"></status>
</kw>
<msg timestamp="20201112 09:42:51.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019545431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019548111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.491" endtime="20201112 09:42:51.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019545431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019548111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.784" endtime="20201112 09:42:51.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.793" endtime="20201112 09:42:51.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.488" endtime="20201112 09:42:51.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.487" endtime="20201112 09:42:51.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:51.799" level="INFO">${RESULT} = [{'time': 0.019548111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6800000000014312e-06, 'source_diff': 2.6800000000014312e-06}, {'time': 0.019555306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:51.796" endtime="20201112 09:42:51.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:51.813" level="INFO">${OVERHEAD} = {'diff': [2.6800000000014312e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.651999999998822e-06, 2.722000000000141e-06, 2.695000000000475e-06, 2.6669999999978655e-06, 2....</msg>
<status status="PASS" starttime="20201112 09:42:51.800" endtime="20201112 09:42:51.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.817" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:51.816" endtime="20201112 09:42:51.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.820" level="INFO">VALUE: [2.6800000000014312e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.651999999998822e-06, 2.722000000000141e-06, 2.695000000000475e-06, 2.6669999999978655e-06, 2.7079999999971016e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.610999999999586e-06, 2.6660000000018613e-06, 2.679999999997962e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6939999999975317e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.6520000000022914e-06, 2.6110000000030553e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.679999999997962e-06, 2.6660000000018613e-06, 2.6389999999987257e-06, 2.651999999998822e-06, 2.722000000000141e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.708000000000571e-06, 2.6800000000014312e-06, 2.651999999998822e-06, 2.6660000000018613e-06, 2.7090000000000447e-06, 2.6520000000022914e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.679999999997962e-06]</msg>
<status status="PASS" starttime="20201112 09:42:51.818" endtime="20201112 09:42:51.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.814" endtime="20201112 09:42:51.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.823" endtime="20201112 09:42:51.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:51.827" endtime="20201112 09:42:51.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.825" endtime="20201112 09:42:51.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.821" endtime="20201112 09:42:51.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.460" endtime="20201112 09:42:51.848"></status>
</kw>
<msg timestamp="20201112 09:42:51.848" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.856" endtime="20201112 09:42:51.867"></status>
</kw>
<msg timestamp="20201112 09:42:51.868" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.854" endtime="20201112 09:42:51.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.871" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.869" endtime="20201112 09:42:51.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.872" endtime="20201112 09:42:51.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.852" endtime="20201112 09:42:51.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.850" endtime="20201112 09:42:51.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.882" endtime="20201112 09:42:52.169"></status>
</kw>
<msg timestamp="20201112 09:42:52.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019616833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196195, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:42:51.880" endtime="20201112 09:42:52.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019616833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196195, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:42:52.173" endtime="20201112 09:42:52.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.181" endtime="20201112 09:42:52.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.877" endtime="20201112 09:42:52.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.875" endtime="20201112 09:42:52.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:52.188" level="INFO">${RESULT} = [{'time': 0.0196195, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.019627167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:42:52.184" endtime="20201112 09:42:52.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:52.201" level="INFO">${OVERHEAD} = {'diff': [2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.610999999999586e-06, 2.6669999999978655e-06, 2.639...</msg>
<status status="PASS" starttime="20201112 09:42:52.189" endtime="20201112 09:42:52.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.206" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:52.205" endtime="20201112 09:42:52.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.208" level="INFO">VALUE: [2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.610999999999586e-06, 2.6669999999978655e-06, 2.639000000002195e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6520000000022914e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.6389999999987257e-06, 2.653000000001765e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.597000000000016e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.6660000000018613e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6249999999991558e-06, 2.7090000000000447e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.749999999999281e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.695000000000475e-06, 2.6660000000018613e-06, 2.6800000000014312e-06, 2.667000000001335e-06]</msg>
<status status="PASS" starttime="20201112 09:42:52.207" endtime="20201112 09:42:52.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.202" endtime="20201112 09:42:52.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.211" endtime="20201112 09:42:52.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:52.215" endtime="20201112 09:42:52.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.213" endtime="20201112 09:42:52.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.210" endtime="20201112 09:42:52.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.848" endtime="20201112 09:42:52.236"></status>
</kw>
<msg timestamp="20201112 09:42:52.236" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.244" endtime="20201112 09:42:52.257"></status>
</kw>
<msg timestamp="20201112 09:42:52.257" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.242" endtime="20201112 09:42:52.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.260" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.258" endtime="20201112 09:42:52.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.261" endtime="20201112 09:42:52.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.240" endtime="20201112 09:42:52.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.238" endtime="20201112 09:42:52.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.270" endtime="20201112 09:42:52.559"></status>
</kw>
<msg timestamp="20201112 09:42:52.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02029925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020301931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:42:52.268" endtime="20201112 09:42:52.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02029925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020301931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:42:52.563" endtime="20201112 09:42:52.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.571" endtime="20201112 09:42:52.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.266" endtime="20201112 09:42:52.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.264" endtime="20201112 09:42:52.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:52.578" level="INFO">${RESULT} = [{'time': 0.020301931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6809999999974354e-06, 'source_diff': 2.6809999999974354e-06}, {'time': 0.020311792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:52.574" endtime="20201112 09:42:52.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:52.593" level="INFO">${OVERHEAD} = {'diff': [2.6809999999974354e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6...</msg>
<status status="PASS" starttime="20201112 09:42:52.579" endtime="20201112 09:42:52.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.597" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:52.596" endtime="20201112 09:42:52.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.600" level="INFO">VALUE: [2.6809999999974354e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.610999999999586e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.6249999999991558e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.695000000000475e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.5839999999999197e-06, 2.695000000000475e-06, 2.694000000001001e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.681000000000905e-06]</msg>
<status status="PASS" starttime="20201112 09:42:52.598" endtime="20201112 09:42:52.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.594" endtime="20201112 09:42:52.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.603" endtime="20201112 09:42:52.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:52.607" endtime="20201112 09:42:52.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.605" endtime="20201112 09:42:52.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.601" endtime="20201112 09:42:52.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.237" endtime="20201112 09:42:52.628"></status>
</kw>
<msg timestamp="20201112 09:42:52.628" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.636" endtime="20201112 09:42:52.648"></status>
</kw>
<msg timestamp="20201112 09:42:52.649" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.635" endtime="20201112 09:42:52.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.651" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.650" endtime="20201112 09:42:52.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.652" endtime="20201112 09:42:52.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.632" endtime="20201112 09:42:52.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.630" endtime="20201112 09:42:52.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.661" endtime="20201112 09:42:52.948"></status>
</kw>
<msg timestamp="20201112 09:42:52.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020150931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020153597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.660" endtime="20201112 09:42:52.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020150931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020153597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.953" endtime="20201112 09:42:52.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.961" endtime="20201112 09:42:52.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.657" endtime="20201112 09:42:52.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.656" endtime="20201112 09:42:52.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:52.968" level="INFO">${RESULT} = [{'time': 0.020153597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.020161806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:52.964" endtime="20201112 09:42:52.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:52.981" level="INFO">${OVERHEAD} = {'diff': [2.665999999998392e-06, 2.695000000000475e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.6809999999974354e-06, 2.709...</msg>
<status status="PASS" starttime="20201112 09:42:52.969" endtime="20201112 09:42:52.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.986" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:52.985" endtime="20201112 09:42:52.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.988" level="INFO">VALUE: [2.665999999998392e-06, 2.695000000000475e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.6809999999974354e-06, 2.7090000000000447e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.6800000000014312e-06, 2.6809999999974354e-06, 2.6809999999974354e-06, 2.651999999998822e-06, 2.665999999998392e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.6809999999974354e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.651999999998822e-06, 2.610999999999586e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.694000000001001e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.7090000000000447e-06, 2.681000000000905e-06, 2.6800000000014312e-06, 2.722000000000141e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.6669999999978655e-06]</msg>
<status status="PASS" starttime="20201112 09:42:52.987" endtime="20201112 09:42:52.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.982" endtime="20201112 09:42:52.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.991" endtime="20201112 09:42:52.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:52.996" endtime="20201112 09:42:53.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.993" endtime="20201112 09:42:53.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.990" endtime="20201112 09:42:53.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.629" endtime="20201112 09:42:53.017"></status>
</kw>
<msg timestamp="20201112 09:42:53.017" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.025" endtime="20201112 09:42:53.037"></status>
</kw>
<msg timestamp="20201112 09:42:53.038" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.023" endtime="20201112 09:42:53.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.040" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.039" endtime="20201112 09:42:53.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.041" endtime="20201112 09:42:53.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.021" endtime="20201112 09:42:53.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.019" endtime="20201112 09:42:53.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.050" endtime="20201112 09:42:53.337"></status>
</kw>
<msg timestamp="20201112 09:42:53.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019600514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019603153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.049" endtime="20201112 09:42:53.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019600514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019603153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.342" endtime="20201112 09:42:53.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.350" endtime="20201112 09:42:53.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.046" endtime="20201112 09:42:53.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.044" endtime="20201112 09:42:53.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:53.357" level="INFO">${RESULT} = [{'time': 0.019603153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.639000000002195e-06, 'source_diff': 2.639000000002195e-06}, {'time': 0.019613681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:53.353" endtime="20201112 09:42:53.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:53.370" level="INFO">${OVERHEAD} = {'diff': [2.639000000002195e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2...</msg>
<status status="PASS" starttime="20201112 09:42:53.358" endtime="20201112 09:42:53.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.375" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:53.374" endtime="20201112 09:42:53.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.377" level="INFO">VALUE: [2.639000000002195e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.651999999998822e-06, 2.6249999999991558e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.6389999999987257e-06, 2.6660000000018613e-06, 2.637999999999252e-06, 2.653000000001765e-06, 2.6809999999974354e-06, 2.6529999999982956e-06, 2.7079999999971016e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.6520000000022914e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6800000000014312e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.735999999999711e-06, 2.665999999998392e-06, 2.749999999999281e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.597000000000016e-06, 2.6249999999991558e-06, 2.694000000001001e-06, 2.6249999999991558e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.6660000000018613e-06, 2.6389999999987257e-06]</msg>
<status status="PASS" starttime="20201112 09:42:53.376" endtime="20201112 09:42:53.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.371" endtime="20201112 09:42:53.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.381" endtime="20201112 09:42:53.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:53.385" endtime="20201112 09:42:53.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.383" endtime="20201112 09:42:53.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.379" endtime="20201112 09:42:53.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.018" endtime="20201112 09:42:53.406"></status>
</kw>
<msg timestamp="20201112 09:42:53.406" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.413" endtime="20201112 09:42:53.425"></status>
</kw>
<msg timestamp="20201112 09:42:53.425" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.412" endtime="20201112 09:42:53.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.428" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.426" endtime="20201112 09:42:53.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.429" endtime="20201112 09:42:53.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.409" endtime="20201112 09:42:53.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.408" endtime="20201112 09:42:53.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.438" endtime="20201112 09:42:53.725"></status>
</kw>
<msg timestamp="20201112 09:42:53.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019596444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019599111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.436" endtime="20201112 09:42:53.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019596444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019599111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.729" endtime="20201112 09:42:53.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.737" endtime="20201112 09:42:53.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.434" endtime="20201112 09:42:53.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.432" endtime="20201112 09:42:53.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:53.744" level="INFO">${RESULT} = [{'time': 0.019599111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.019613653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:53.741" endtime="20201112 09:42:53.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:53.758" level="INFO">${OVERHEAD} = {'diff': [2.6669999999978655e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2....</msg>
<status status="PASS" starttime="20201112 09:42:53.745" endtime="20201112 09:42:53.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.762" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:53.761" endtime="20201112 09:42:53.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.765" level="INFO">VALUE: [2.6669999999978655e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.722000000000141e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.695000000000475e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.695000000000475e-06, 2.6800000000014312e-06, 2.639000000002195e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.695000000000475e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.639000000002195e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6809999999974354e-06, 2.6669999999978655e-06, 2.6809999999974354e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.708000000000571e-06, 2.6529999999982956e-06]</msg>
<status status="PASS" starttime="20201112 09:42:53.764" endtime="20201112 09:42:53.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.759" endtime="20201112 09:42:53.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.768" endtime="20201112 09:42:53.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:53.773" endtime="20201112 09:42:53.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.771" endtime="20201112 09:42:53.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.767" endtime="20201112 09:42:53.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.406" endtime="20201112 09:42:53.793"></status>
</kw>
<msg timestamp="20201112 09:42:53.794" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.801" endtime="20201112 09:42:53.814"></status>
</kw>
<msg timestamp="20201112 09:42:53.814" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.800" endtime="20201112 09:42:53.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.817" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.815" endtime="20201112 09:42:53.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.818" endtime="20201112 09:42:53.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.797" endtime="20201112 09:42:53.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.795" endtime="20201112 09:42:53.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.827" endtime="20201112 09:42:54.111"></status>
</kw>
<msg timestamp="20201112 09:42:54.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019832306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.825" endtime="20201112 09:42:54.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019832306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.115" endtime="20201112 09:42:54.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.123" endtime="20201112 09:42:54.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.823" endtime="20201112 09:42:54.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.821" endtime="20201112 09:42:54.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:54.130" level="INFO">${RESULT} = [{'time': 0.019832306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.019840833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:54.126" endtime="20201112 09:42:54.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:54.144" level="INFO">${OVERHEAD} = {'diff': [2.667000000001335e-06, 2.679999999997962e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.6...</msg>
<status status="PASS" starttime="20201112 09:42:54.131" endtime="20201112 09:42:54.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.148" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:54.148" endtime="20201112 09:42:54.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.151" level="INFO">VALUE: [2.667000000001335e-06, 2.679999999997962e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.6520000000022914e-06, 2.6660000000018613e-06, 2.695000000000475e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6250000000026252e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.651999999998822e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.7090000000000447e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.6249999999991558e-06, 2.679999999997962e-06]</msg>
<status status="PASS" starttime="20201112 09:42:54.150" endtime="20201112 09:42:54.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.145" endtime="20201112 09:42:54.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.155" endtime="20201112 09:42:54.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:54.159" endtime="20201112 09:42:54.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.156" endtime="20201112 09:42:54.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.153" endtime="20201112 09:42:54.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.794" endtime="20201112 09:42:54.183"></status>
</kw>
<msg timestamp="20201112 09:42:54.183" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.199" endtime="20201112 09:42:54.214"></status>
</kw>
<msg timestamp="20201112 09:42:54.215" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.196" endtime="20201112 09:42:54.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.220" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.217" endtime="20201112 09:42:54.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.223" endtime="20201112 09:42:54.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.190" endtime="20201112 09:42:54.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.187" endtime="20201112 09:42:54.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.241" endtime="20201112 09:42:54.533"></status>
</kw>
<msg timestamp="20201112 09:42:54.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032827458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032830125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.238" endtime="20201112 09:42:54.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032827458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032830125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.538" endtime="20201112 09:42:54.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.546" endtime="20201112 09:42:54.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.233" endtime="20201112 09:42:54.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.229" endtime="20201112 09:42:54.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:54.553" level="INFO">${RESULT} = [{'time': 0.032830125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6670000000048044e-06, 'source_diff': 2.6670000000048044e-06}, {'time': 0.032837139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:54.549" endtime="20201112 09:42:54.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:54.566" level="INFO">${OVERHEAD} = {'diff': [2.6670000000048044e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.679999999997962e-06, 2.6660000000053308e-06,...</msg>
<status status="PASS" starttime="20201112 09:42:54.554" endtime="20201112 09:42:54.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.570" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:54.569" endtime="20201112 09:42:54.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.573" level="INFO">VALUE: [2.6670000000048044e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.679999999997962e-06, 2.6660000000053308e-06, 2.665999999998392e-06, 2.6670000000048044e-06, 2.5980000000064285e-06, 2.665999999998392e-06, 2.597000000000016e-06, 2.6800000000049007e-06, 2.6669999999978655e-06, 2.597000000000016e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6800000000049007e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6809999999974354e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.6670000000048044e-06, 2.651999999998822e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6939999999975317e-06, 2.6529999999982956e-06, 2.6670000000048044e-06, 2.6670000000048044e-06, 2.6670000000048044e-06, 2.665999999998392e-06, 2.6670000000048044e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.6669999999978655e-06, 2.6660000000053308e-06, 2.6670000000048044e-06, 2.6809999999974354e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6800000000049007e-06, 2.652000000005761e-06, 2.679999999997962e-06]</msg>
<status status="PASS" starttime="20201112 09:42:54.571" endtime="20201112 09:42:54.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.567" endtime="20201112 09:42:54.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.576" endtime="20201112 09:42:54.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:54.580" endtime="20201112 09:42:54.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.578" endtime="20201112 09:42:54.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.575" endtime="20201112 09:42:54.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.184" endtime="20201112 09:42:54.601"></status>
</kw>
<msg timestamp="20201112 09:42:54.601" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.609" endtime="20201112 09:42:54.621"></status>
</kw>
<msg timestamp="20201112 09:42:54.621" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.607" endtime="20201112 09:42:54.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.624" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.622" endtime="20201112 09:42:54.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.625" endtime="20201112 09:42:54.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.605" endtime="20201112 09:42:54.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.603" endtime="20201112 09:42:54.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.634" endtime="20201112 09:42:54.922"></status>
</kw>
<msg timestamp="20201112 09:42:54.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019478208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019480889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.632" endtime="20201112 09:42:54.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019478208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019480889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.927" endtime="20201112 09:42:54.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.935" endtime="20201112 09:42:54.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.630" endtime="20201112 09:42:54.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.628" endtime="20201112 09:42:54.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:54.942" level="INFO">${RESULT} = [{'time': 0.019480889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.019495569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:54.939" endtime="20201112 09:42:54.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:54.956" level="INFO">${OVERHEAD} = {'diff': [2.681000000000905e-06, 2.637999999999252e-06, 2.694000000001001e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.69...</msg>
<status status="PASS" starttime="20201112 09:42:54.943" endtime="20201112 09:42:54.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.960" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:54.959" endtime="20201112 09:42:54.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.962" level="INFO">VALUE: [2.681000000000905e-06, 2.637999999999252e-06, 2.694000000001001e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.6949999999970053e-06, 2.6529999999982956e-06, 2.5839999999999197e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.610999999999586e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.694000000001001e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.679999999997962e-06, 2.694000000001001e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.610999999999586e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.610999999999586e-06, 2.6800000000014312e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6110000000030553e-06]</msg>
<status status="PASS" starttime="20201112 09:42:54.961" endtime="20201112 09:42:54.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.957" endtime="20201112 09:42:54.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.966" endtime="20201112 09:42:54.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:54.970" endtime="20201112 09:42:54.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.968" endtime="20201112 09:42:54.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.964" endtime="20201112 09:42:54.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.602" endtime="20201112 09:42:54.991"></status>
</kw>
<msg timestamp="20201112 09:42:54.991" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.999" endtime="20201112 09:42:55.010"></status>
</kw>
<msg timestamp="20201112 09:42:55.011" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.997" endtime="20201112 09:42:55.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.013" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.012" endtime="20201112 09:42:55.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.014" endtime="20201112 09:42:55.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.994" endtime="20201112 09:42:55.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.993" endtime="20201112 09:42:55.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.023" endtime="20201112 09:42:55.309"></status>
</kw>
<msg timestamp="20201112 09:42:55.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019664486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019667167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.021" endtime="20201112 09:42:55.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019664486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019667167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.313" endtime="20201112 09:42:55.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.321" endtime="20201112 09:42:55.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.019" endtime="20201112 09:42:55.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.017" endtime="20201112 09:42:55.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:55.328" level="INFO">${RESULT} = [{'time': 0.019667167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.019678361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:55.324" endtime="20201112 09:42:55.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:55.341" level="INFO">${OVERHEAD} = {'diff': [2.681000000000905e-06, 2.679999999997962e-06, 2.665999999998392e-06, 2.735999999999711e-06, 2.610999999999586e-06, 2.694000000001001e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.6660...</msg>
<status status="PASS" starttime="20201112 09:42:55.329" endtime="20201112 09:42:55.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.345" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:55.344" endtime="20201112 09:42:55.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.348" level="INFO">VALUE: [2.681000000000905e-06, 2.679999999997962e-06, 2.665999999998392e-06, 2.735999999999711e-06, 2.610999999999586e-06, 2.694000000001001e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.708000000000571e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.6949999999970053e-06, 2.6809999999974354e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.6660000000018613e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.694000000001001e-06, 2.667000000001335e-06, 2.7229999999996146e-06, 2.667000000001335e-06, 2.6520000000022914e-06, 2.665999999998392e-06, 2.610999999999586e-06, 2.679999999997962e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.637999999999252e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.695000000000475e-06]</msg>
<status status="PASS" starttime="20201112 09:42:55.346" endtime="20201112 09:42:55.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.342" endtime="20201112 09:42:55.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.351" endtime="20201112 09:42:55.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:55.355" endtime="20201112 09:42:55.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.353" endtime="20201112 09:42:55.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.350" endtime="20201112 09:42:55.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.992" endtime="20201112 09:42:55.376"></status>
</kw>
<msg timestamp="20201112 09:42:55.376" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.384" endtime="20201112 09:42:55.396"></status>
</kw>
<msg timestamp="20201112 09:42:55.397" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.382" endtime="20201112 09:42:55.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.399" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.398" endtime="20201112 09:42:55.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.400" endtime="20201112 09:42:55.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.380" endtime="20201112 09:42:55.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.378" endtime="20201112 09:42:55.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.409" endtime="20201112 09:42:55.697"></status>
</kw>
<msg timestamp="20201112 09:42:55.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019439847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019442458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.408" endtime="20201112 09:42:55.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019439847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019442458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.701" endtime="20201112 09:42:55.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.709" endtime="20201112 09:42:55.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.405" endtime="20201112 09:42:55.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.403" endtime="20201112 09:42:55.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:55.716" level="INFO">${RESULT} = [{'time': 0.019442458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.019450986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:55.713" endtime="20201112 09:42:55.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:55.731" level="INFO">${OVERHEAD} = {'diff': [2.610999999999586e-06, 2.597000000000016e-06, 2.679999999997962e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.66...</msg>
<status status="PASS" starttime="20201112 09:42:55.717" endtime="20201112 09:42:55.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.735" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:55.734" endtime="20201112 09:42:55.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.737" level="INFO">VALUE: [2.610999999999586e-06, 2.597000000000016e-06, 2.679999999997962e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.637999999999252e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.6389999999987257e-06, 2.681000000000905e-06, 2.653000000001765e-06, 2.6939999999975317e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.679999999997962e-06]</msg>
<status status="PASS" starttime="20201112 09:42:55.736" endtime="20201112 09:42:55.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.731" endtime="20201112 09:42:55.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.745" endtime="20201112 09:42:55.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:55.749" endtime="20201112 09:42:55.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.747" endtime="20201112 09:42:55.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.743" endtime="20201112 09:42:55.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.377" endtime="20201112 09:42:55.770"></status>
</kw>
<msg timestamp="20201112 09:42:55.770" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.778" endtime="20201112 09:42:55.789"></status>
</kw>
<msg timestamp="20201112 09:42:55.790" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.776" endtime="20201112 09:42:55.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.792" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.791" endtime="20201112 09:42:55.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.793" endtime="20201112 09:42:55.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.774" endtime="20201112 09:42:55.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.772" endtime="20201112 09:42:55.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.802" endtime="20201112 09:42:56.090"></status>
</kw>
<msg timestamp="20201112 09:42:56.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019323014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019325653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.801" endtime="20201112 09:42:56.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019323014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019325653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.094" endtime="20201112 09:42:56.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.102" endtime="20201112 09:42:56.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.798" endtime="20201112 09:42:56.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.796" endtime="20201112 09:42:56.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:56.109" level="INFO">${RESULT} = [{'time': 0.019325653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.639000000002195e-06, 'source_diff': 2.639000000002195e-06}, {'time': 0.019336681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:56.105" endtime="20201112 09:42:56.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:56.122" level="INFO">${OVERHEAD} = {'diff': [2.639000000002195e-06, 2.653000000001765e-06, 2.749999999999281e-06, 2.653000000001765e-06, 2.6809999999974354e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.6249999999991558e-06, 2.66...</msg>
<status status="PASS" starttime="20201112 09:42:56.110" endtime="20201112 09:42:56.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.126" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:56.125" endtime="20201112 09:42:56.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.129" level="INFO">VALUE: [2.639000000002195e-06, 2.653000000001765e-06, 2.749999999999281e-06, 2.653000000001765e-06, 2.6809999999974354e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.6249999999991558e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.637999999999252e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6520000000022914e-06, 2.665999999998392e-06, 2.695000000000475e-06, 2.610999999999586e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.639000000002195e-06, 2.6529999999982956e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.679999999997962e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.6249999999991558e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.653000000001765e-06]</msg>
<status status="PASS" starttime="20201112 09:42:56.127" endtime="20201112 09:42:56.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.123" endtime="20201112 09:42:56.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.132" endtime="20201112 09:42:56.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.137" endtime="20201112 09:42:56.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.134" endtime="20201112 09:42:56.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.131" endtime="20201112 09:42:56.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.771" endtime="20201112 09:42:56.157"></status>
</kw>
<msg timestamp="20201112 09:42:56.158" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.165" endtime="20201112 09:42:56.177"></status>
</kw>
<msg timestamp="20201112 09:42:56.178" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.164" endtime="20201112 09:42:56.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.180" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.179" endtime="20201112 09:42:56.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.181" endtime="20201112 09:42:56.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.161" endtime="20201112 09:42:56.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.159" endtime="20201112 09:42:56.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.190" endtime="20201112 09:42:56.479"></status>
</kw>
<msg timestamp="20201112 09:42:56.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019405444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019408097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.188" endtime="20201112 09:42:56.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019405444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019408097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.483" endtime="20201112 09:42:56.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.491" endtime="20201112 09:42:56.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.186" endtime="20201112 09:42:56.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.184" endtime="20201112 09:42:56.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:56.497" level="INFO">${RESULT} = [{'time': 0.019408097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.019419792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:56.494" endtime="20201112 09:42:56.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:56.511" level="INFO">${OVERHEAD} = {'diff': [2.6529999999982956e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.583000000000446e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.61...</msg>
<status status="PASS" starttime="20201112 09:42:56.498" endtime="20201112 09:42:56.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.515" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:56.514" endtime="20201112 09:42:56.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.518" level="INFO">VALUE: [2.6529999999982956e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.583000000000446e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.610999999999586e-06, 2.681000000000905e-06, 2.695000000000475e-06, 2.667000000001335e-06, 2.6250000000026252e-06, 2.653000000001765e-06, 2.6939999999975317e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.695000000000475e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.6520000000022914e-06, 2.665999999998392e-06, 2.6809999999974354e-06, 2.6529999999982956e-06, 2.6520000000022914e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6250000000026252e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.651999999998822e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.651999999998822e-06, 2.665999999998392e-06, 2.679999999997962e-06, 2.6800000000014312e-06, 2.6389999999987257e-06, 2.597000000000016e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.6389999999987257e-06, 2.653000000001765e-06, 2.665999999998392e-06]</msg>
<status status="PASS" starttime="20201112 09:42:56.516" endtime="20201112 09:42:56.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.512" endtime="20201112 09:42:56.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.521" endtime="20201112 09:42:56.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.525" endtime="20201112 09:42:56.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.523" endtime="20201112 09:42:56.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.520" endtime="20201112 09:42:56.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.158" endtime="20201112 09:42:56.546"></status>
</kw>
<msg timestamp="20201112 09:42:56.546" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.554" endtime="20201112 09:42:56.566"></status>
</kw>
<msg timestamp="20201112 09:42:56.566" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.552" endtime="20201112 09:42:56.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.569" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.567" endtime="20201112 09:42:56.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.570" endtime="20201112 09:42:56.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.550" endtime="20201112 09:42:56.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.548" endtime="20201112 09:42:56.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.579" endtime="20201112 09:42:56.863"></status>
</kw>
<msg timestamp="20201112 09:42:56.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019733153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.577" endtime="20201112 09:42:56.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019733153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.867" endtime="20201112 09:42:56.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.875" endtime="20201112 09:42:56.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.575" endtime="20201112 09:42:56.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.573" endtime="20201112 09:42:56.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:56.882" level="INFO">${RESULT} = [{'time': 0.019733153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.019746236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:56.878" endtime="20201112 09:42:56.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:56.895" level="INFO">${OVERHEAD} = {'diff': [2.667000000001335e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.679999999997962e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.66...</msg>
<status status="PASS" starttime="20201112 09:42:56.883" endtime="20201112 09:42:56.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.899" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:56.898" endtime="20201112 09:42:56.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.902" level="INFO">VALUE: [2.667000000001335e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.679999999997962e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6250000000026252e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.694000000001001e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.597000000000016e-06, 2.665999999998392e-06, 2.7090000000000447e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.6250000000026252e-06, 2.695000000000475e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6389999999987257e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.6520000000022914e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.735999999999711e-06, 2.679999999997962e-06]</msg>
<status status="PASS" starttime="20201112 09:42:56.900" endtime="20201112 09:42:56.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.896" endtime="20201112 09:42:56.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.905" endtime="20201112 09:42:56.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.910" endtime="20201112 09:42:56.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.907" endtime="20201112 09:42:56.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.904" endtime="20201112 09:42:56.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.547" endtime="20201112 09:42:56.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.132" endtime="20201112 09:42:56.930"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.938" endtime="20201112 09:42:56.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.937" endtime="20201112 09:42:56.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.935" endtime="20201112 09:42:56.958"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:49.056" endtime="20201112 09:42:56.959" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.966" endtime="20201112 09:42:56.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.965" endtime="20201112 09:42:56.986"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.999" endtime="20201112 09:42:57.019"></status>
</kw>
<msg timestamp="20201112 09:42:57.020" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.998" endtime="20201112 09:42:57.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.022" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.021" endtime="20201112 09:42:57.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.025" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:57.023" endtime="20201112 09:42:57.025"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:56.995" endtime="20201112 09:42:57.026"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:56.993" endtime="20201112 09:42:57.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.992" endtime="20201112 09:42:57.027"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:57.030" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:57.030" endtime="20201112 09:42:57.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.028" endtime="20201112 09:42:57.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.991" endtime="20201112 09:42:57.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.990" endtime="20201112 09:42:57.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.032" endtime="20201112 09:42:57.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.989" endtime="20201112 09:42:57.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.987" endtime="20201112 09:42:57.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.963" endtime="20201112 09:42:57.035"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.045" endtime="20201112 09:42:57.065"></status>
</kw>
<msg timestamp="20201112 09:42:57.065" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.043" endtime="20201112 09:42:57.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.068" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.066" endtime="20201112 09:42:57.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.069" endtime="20201112 09:42:57.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.041" endtime="20201112 09:42:57.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.038" endtime="20201112 09:42:57.072"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.074" endtime="20201112 09:42:57.075"></status>
</kw>
<msg timestamp="20201112 09:42:57.076" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:42:57.072" endtime="20201112 09:42:57.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.080" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:42:57.079" endtime="20201112 09:42:57.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.082" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:42:57.081" endtime="20201112 09:42:57.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.077" endtime="20201112 09:42:57.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.086" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:42:57.085" endtime="20201112 09:42:57.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.088" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:42:57.087" endtime="20201112 09:42:57.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.083" endtime="20201112 09:42:57.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.096" endtime="20201112 09:42:57.381"></status>
</kw>
<msg timestamp="20201112 09:42:57.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071600764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071607083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.094" endtime="20201112 09:42:57.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071600764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071607083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.385" endtime="20201112 09:42:57.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.394" endtime="20201112 09:42:57.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.092" endtime="20201112 09:42:57.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.090" endtime="20201112 09:42:57.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:57.400" level="INFO">${RESULT} = [{'time': 0.071607083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.3190000000046265e-06, 'source_diff': 6.3190000000046265e-06}, {'time': 0.071626972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:57.397" endtime="20201112 09:42:57.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:57.415" level="INFO">${OVERHEAD} = {'diff': [6.3190000000046265e-06, 6.513999999999132e-06, 6.430000000001712e-06, 6.429999999987834e-06, 6.431000000001186e-06, 6.443999999994343e-06, 6.417000000008555e-06, 6.431000000001186e-06, 6.444...</msg>
<status status="PASS" starttime="20201112 09:42:57.401" endtime="20201112 09:42:57.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.420" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 09:42:57.419" endtime="20201112 09:42:57.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.423" level="INFO">VALUE: [6.3190000000046265e-06, 6.513999999999132e-06, 6.430000000001712e-06, 6.429999999987834e-06, 6.431000000001186e-06, 6.443999999994343e-06, 6.417000000008555e-06, 6.431000000001186e-06, 6.444000000008221e-06, 6.417000000008555e-06, 6.4450000000076946e-06, 6.471999999993483e-06, 6.443999999994343e-06, 6.430000000001712e-06, 6.431000000001186e-06, 6.444999999993817e-06, 6.431000000001186e-06, 6.4450000000076946e-06, 6.444999999993817e-06, 6.361000000010275e-06, 6.444999999993817e-06, 6.403000000002046e-06, 6.430000000001712e-06, 6.361000000010275e-06, 6.431000000001186e-06, 6.472000000007361e-06, 6.458000000000852e-06, 6.431000000001186e-06, 6.417000000008555e-06, 6.430999999987308e-06, 6.430000000001712e-06, 6.444999999993817e-06, 6.416999999994677e-06, 6.388999999995537e-06, 6.458000000000852e-06, 6.485999999999992e-06, 6.443999999994343e-06, 6.417000000008555e-06, 6.443999999994343e-06, 6.431000000001186e-06, 6.417000000008555e-06, 6.443999999994343e-06, 6.4450000000076946e-06, 6.444999999993817e-06, 6.443999999994343e-06, 6.444999999993817e-06, 6.375000000002906e-06, 6.430000000001712e-06, 6.443999999994343e-06, 6.443999999994343e-06]</msg>
<status status="PASS" starttime="20201112 09:42:57.421" endtime="20201112 09:42:57.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.416" endtime="20201112 09:42:57.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.426" endtime="20201112 09:42:57.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.429" endtime="20201112 09:42:57.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.428" endtime="20201112 09:42:57.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.424" endtime="20201112 09:42:57.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.036" endtime="20201112 09:42:57.450"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:56.961" endtime="20201112 09:42:57.451" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.458" endtime="20201112 09:42:57.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.457" endtime="20201112 09:42:57.478"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.491" endtime="20201112 09:42:57.511"></status>
</kw>
<msg timestamp="20201112 09:42:57.511" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.489" endtime="20201112 09:42:57.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.514" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.512" endtime="20201112 09:42:57.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.517" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:57.515" endtime="20201112 09:42:57.517"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:57.487" endtime="20201112 09:42:57.518"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:57.484" endtime="20201112 09:42:57.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.483" endtime="20201112 09:42:57.518"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:57.522" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:57.521" endtime="20201112 09:42:57.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.519" endtime="20201112 09:42:57.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.482" endtime="20201112 09:42:57.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.482" endtime="20201112 09:42:57.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.525" endtime="20201112 09:42:57.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.480" endtime="20201112 09:42:57.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.479" endtime="20201112 09:42:57.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.455" endtime="20201112 09:42:57.528"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.537" endtime="20201112 09:42:57.627"></status>
</kw>
<msg timestamp="20201112 09:42:57.627" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.535" endtime="20201112 09:42:57.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.630" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.628" endtime="20201112 09:42:57.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.631" endtime="20201112 09:42:57.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.533" endtime="20201112 09:42:57.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.531" endtime="20201112 09:42:57.634"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.636" endtime="20201112 09:42:57.637"></status>
</kw>
<msg timestamp="20201112 09:42:57.638" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:42:57.634" endtime="20201112 09:42:57.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.642" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:42:57.641" endtime="20201112 09:42:57.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.644" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:42:57.643" endtime="20201112 09:42:57.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.638" endtime="20201112 09:42:57.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.648" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:42:57.647" endtime="20201112 09:42:57.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.650" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:42:57.649" endtime="20201112 09:42:57.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.645" endtime="20201112 09:42:57.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.658" endtime="20201112 09:42:57.966"></status>
</kw>
<msg timestamp="20201112 09:42:57.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072739306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072790444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.656" endtime="20201112 09:42:57.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072739306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072790444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.970" endtime="20201112 09:42:57.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.978" endtime="20201112 09:42:57.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.654" endtime="20201112 09:42:57.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.652" endtime="20201112 09:42:57.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:57.985" level="INFO">${RESULT} = [{'time': 0.072790444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1137999999992245e-05, 'source_diff': 5.1137999999992245e-05}, {'time': 0.074224083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:57.982" endtime="20201112 09:42:57.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:57.999" level="INFO">${OVERHEAD} = {'diff': [5.1137999999992245e-05, 5.1193999999990525e-05, 5.127800000000182e-05, 5.1235999999996173e-05, 5.126299999999584e-05, 5.11940000000044e-05, 5.125000000000268e-05, 5.1277999999987944e-05, 5.1...</msg>
<status status="PASS" starttime="20201112 09:42:57.986" endtime="20201112 09:42:58.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.004" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 09:42:58.003" endtime="20201112 09:42:58.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.007" level="INFO">VALUE: [5.1137999999992245e-05, 5.1193999999990525e-05, 5.127800000000182e-05, 5.1235999999996173e-05, 5.126299999999584e-05, 5.11940000000044e-05, 5.125000000000268e-05, 5.1277999999987944e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.126399999999531e-05, 5.1235999999996173e-05, 5.126399999999531e-05, 5.125000000000268e-05, 5.126299999999584e-05, 5.126400000000919e-05, 5.126399999999531e-05, 5.1235999999996173e-05, 5.126399999999531e-05, 5.123600000001005e-05, 5.13340000000001e-05, 5.1235999999996173e-05, 5.1235999999996173e-05, 5.126300000000972e-05, 5.1235999999996173e-05, 5.126399999999531e-05, 5.1207999999997034e-05, 5.126400000000919e-05, 5.1249999999988805e-05, 5.126399999999531e-05, 5.126399999999531e-05, 5.125000000000268e-05, 5.1235999999996173e-05, 5.126399999999531e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.126399999999531e-05, 5.1291999999980575e-05, 5.124999999997493e-05, 5.1277000000016226e-05, 5.125000000000268e-05, 5.1277999999987944e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.125000000000268e-05]</msg>
<status status="PASS" starttime="20201112 09:42:58.006" endtime="20201112 09:42:58.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.001" endtime="20201112 09:42:58.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.010" endtime="20201112 09:42:58.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.013" endtime="20201112 09:42:58.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.012" endtime="20201112 09:42:58.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.008" endtime="20201112 09:42:58.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.528" endtime="20201112 09:42:58.034"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:57.453" endtime="20201112 09:42:58.035" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.043" endtime="20201112 09:42:58.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.041" endtime="20201112 09:42:58.062"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.075" endtime="20201112 09:42:58.094"></status>
</kw>
<msg timestamp="20201112 09:42:58.095" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.074" endtime="20201112 09:42:58.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.097" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.096" endtime="20201112 09:42:58.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.101" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:58.098" endtime="20201112 09:42:58.102"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:58.071" endtime="20201112 09:42:58.102"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:58.069" endtime="20201112 09:42:58.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.068" endtime="20201112 09:42:58.103"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:58.107" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:58.106" endtime="20201112 09:42:58.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.104" endtime="20201112 09:42:58.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.067" endtime="20201112 09:42:58.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.066" endtime="20201112 09:42:58.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.109" endtime="20201112 09:42:58.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.065" endtime="20201112 09:42:58.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.063" endtime="20201112 09:42:58.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.040" endtime="20201112 09:42:58.112"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.121" endtime="20201112 09:42:58.401"></status>
</kw>
<msg timestamp="20201112 09:42:58.402" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.119" endtime="20201112 09:42:58.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.404" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.403" endtime="20201112 09:42:58.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.406" endtime="20201112 09:42:58.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.117" endtime="20201112 09:42:58.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.114" endtime="20201112 09:42:58.408"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.410" endtime="20201112 09:42:58.412"></status>
</kw>
<msg timestamp="20201112 09:42:58.412" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:42:58.409" endtime="20201112 09:42:58.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.416" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:42:58.415" endtime="20201112 09:42:58.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.418" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:42:58.417" endtime="20201112 09:42:58.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.413" endtime="20201112 09:42:58.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.423" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:42:58.422" endtime="20201112 09:42:58.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.425" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:42:58.424" endtime="20201112 09:42:58.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.420" endtime="20201112 09:42:58.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.432" endtime="20201112 09:42:58.736"></status>
</kw>
<msg timestamp="20201112 09:42:58.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075115611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075213681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.430" endtime="20201112 09:42:58.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075115611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075213681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.740" endtime="20201112 09:42:58.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.748" endtime="20201112 09:42:58.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.428" endtime="20201112 09:42:58.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.426" endtime="20201112 09:42:58.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:58.755" level="INFO">${RESULT} = [{'time': 0.075213681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.807000000000565e-05, 'source_diff': 9.807000000000565e-05}, {'time': 0.080454667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:58.751" endtime="20201112 09:42:58.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:58.768" level="INFO">${OVERHEAD} = {'diff': [9.807000000000565e-05, 9.747299999998682e-05, 9.747199999998735e-05, 9.743099999999505e-05, 9.748599999999386e-05, 9.745799999999472e-05, 9.747200000000122e-05, 9.745799999999472e-05, 9.7473...</msg>
<status status="PASS" starttime="20201112 09:42:58.756" endtime="20201112 09:42:58.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.773" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 09:42:58.772" endtime="20201112 09:42:58.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.775" level="INFO">VALUE: [9.807000000000565e-05, 9.747299999998682e-05, 9.747199999998735e-05, 9.743099999999505e-05, 9.748599999999386e-05, 9.745799999999472e-05, 9.747200000000122e-05, 9.745799999999472e-05, 9.74730000000007e-05, 9.744500000000156e-05, 9.745799999999472e-05, 9.744500000000156e-05, 9.744400000000208e-05, 9.744500000000156e-05, 9.745799999999472e-05, 9.747199999998735e-05, 9.745799999999472e-05, 9.747300000001458e-05, 9.745799999999472e-05, 9.745899999999419e-05, 9.745799999999472e-05, 9.747199999998735e-05, 9.744400000000208e-05, 9.747300000001458e-05, 9.74720000000151e-05, 9.745900000002194e-05, 9.745899999999419e-05, 9.74720000000151e-05, 9.744500000000156e-05, 9.74720000000151e-05, 9.745799999999472e-05, 9.743100000000893e-05, 9.750000000000036e-05, 9.74720000000151e-05, 9.745900000002194e-05, 9.748599999997998e-05, 9.743100000003668e-05, 9.747199999998735e-05, 9.744500000002931e-05, 9.748600000003549e-05, 9.747199999998735e-05, 9.752800000001338e-05, 9.747200000004286e-05, 9.747199999998735e-05, 9.751400000002075e-05, 9.748599999997998e-05, 9.747199999998735e-05, 9.745799999999472e-05, 9.740299999999591e-05, 9.747199999998735e-05]</msg>
<status status="PASS" starttime="20201112 09:42:58.774" endtime="20201112 09:42:58.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.769" endtime="20201112 09:42:58.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.779" endtime="20201112 09:42:58.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.782" endtime="20201112 09:42:58.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.780" endtime="20201112 09:42:58.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.777" endtime="20201112 09:42:58.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.113" endtime="20201112 09:42:58.803"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:58.037" endtime="20201112 09:42:58.803" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.811" endtime="20201112 09:42:58.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.809" endtime="20201112 09:42:58.831"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.845" endtime="20201112 09:42:58.863"></status>
</kw>
<msg timestamp="20201112 09:42:58.864" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.842" endtime="20201112 09:42:58.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.866" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.865" endtime="20201112 09:42:58.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.869" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:58.867" endtime="20201112 09:42:58.870"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:58.840" endtime="20201112 09:42:58.870"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:58.837" endtime="20201112 09:42:58.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.836" endtime="20201112 09:42:58.871"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:58.875" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:58.874" endtime="20201112 09:42:58.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.872" endtime="20201112 09:42:58.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.835" endtime="20201112 09:42:58.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.835" endtime="20201112 09:42:58.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.877" endtime="20201112 09:42:58.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.833" endtime="20201112 09:42:58.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.832" endtime="20201112 09:42:58.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.808" endtime="20201112 09:42:58.880"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.889" endtime="20201112 09:42:58.908"></status>
</kw>
<msg timestamp="20201112 09:42:58.909" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.887" endtime="20201112 09:42:58.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.911" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.910" endtime="20201112 09:42:58.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.912" endtime="20201112 09:42:58.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.885" endtime="20201112 09:42:58.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.882" endtime="20201112 09:42:58.915"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.917" endtime="20201112 09:42:58.919"></status>
</kw>
<msg timestamp="20201112 09:42:58.919" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:42:58.916" endtime="20201112 09:42:58.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.924" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:42:58.923" endtime="20201112 09:42:58.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.926" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:42:58.925" endtime="20201112 09:42:58.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.920" endtime="20201112 09:42:58.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.930" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:42:58.929" endtime="20201112 09:42:58.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.932" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:42:58.931" endtime="20201112 09:42:58.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.927" endtime="20201112 09:42:58.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.940" endtime="20201112 09:42:59.229"></status>
</kw>
<msg timestamp="20201112 09:42:59.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071018319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071019861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.938" endtime="20201112 09:42:59.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071018319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071019861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.233" endtime="20201112 09:42:59.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.241" endtime="20201112 09:42:59.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.935" endtime="20201112 09:42:59.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.934" endtime="20201112 09:42:59.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:59.248" level="INFO">${RESULT} = [{'time': 0.071019861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000071488e-06, 'source_diff': 1.5420000000071488e-06}, {'time': 0.071034403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:59.245" endtime="20201112 09:42:59.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:59.262" level="INFO">${OVERHEAD} = {'diff': [1.5420000000071488e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.5559999999997798e-06, 1.5409999999937973e-06, 1....</msg>
<status status="PASS" starttime="20201112 09:42:59.249" endtime="20201112 09:42:59.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.266" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 09:42:59.265" endtime="20201112 09:42:59.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.268" level="INFO">VALUE: [1.5420000000071488e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.5559999999997798e-06, 1.5409999999937973e-06, 1.5559999999997798e-06, 1.5420000000071488e-06, 1.5689999999929372e-06, 1.5420000000071488e-06, 1.5409999999937973e-06, 1.541999999993271e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.541999999993271e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5420000000071488e-06, 1.5420000000071488e-06, 1.5420000000071488e-06, 1.5559999999997798e-06, 1.5410000000076751e-06, 1.5409999999937973e-06, 1.541999999993271e-06, 1.5420000000071488e-06, 1.4720000000023603e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.5409999999937973e-06, 1.5559999999997798e-06, 1.5420000000071488e-06, 1.5420000000071488e-06, 1.5409999999937973e-06, 1.541999999993271e-06, 1.582999999999446e-06, 1.4859999999949913e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.5409999999937973e-06, 1.5279999999867622e-06, 1.5420000000071488e-06, 1.5550000000003061e-06, 1.541999999993271e-06, 1.4859999999949913e-06, 1.514000000008009e-06]</msg>
<status status="PASS" starttime="20201112 09:42:59.267" endtime="20201112 09:42:59.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.262" endtime="20201112 09:42:59.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.272" endtime="20201112 09:42:59.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:59.275" endtime="20201112 09:42:59.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.273" endtime="20201112 09:42:59.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.270" endtime="20201112 09:42:59.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.880" endtime="20201112 09:42:59.296"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:58.805" endtime="20201112 09:42:59.296" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:59.304" endtime="20201112 09:42:59.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.303" endtime="20201112 09:42:59.324"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.337" endtime="20201112 09:42:59.357"></status>
</kw>
<msg timestamp="20201112 09:42:59.357" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.335" endtime="20201112 09:42:59.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.360" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.358" endtime="20201112 09:42:59.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.363" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:59.361" endtime="20201112 09:42:59.363"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:59.333" endtime="20201112 09:42:59.364"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:59.330" endtime="20201112 09:42:59.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.329" endtime="20201112 09:42:59.365"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:59.369" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:59.368" endtime="20201112 09:42:59.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.366" endtime="20201112 09:42:59.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.328" endtime="20201112 09:42:59.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.328" endtime="20201112 09:42:59.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.370" endtime="20201112 09:42:59.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.326" endtime="20201112 09:42:59.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.325" endtime="20201112 09:42:59.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.301" endtime="20201112 09:42:59.373"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.382" endtime="20201112 09:42:59.474"></status>
</kw>
<msg timestamp="20201112 09:42:59.474" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.381" endtime="20201112 09:42:59.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.477" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.475" endtime="20201112 09:42:59.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.478" endtime="20201112 09:42:59.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.378" endtime="20201112 09:42:59.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.376" endtime="20201112 09:42:59.481"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.483" endtime="20201112 09:42:59.484"></status>
</kw>
<msg timestamp="20201112 09:42:59.485" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:42:59.481" endtime="20201112 09:42:59.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.489" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:42:59.488" endtime="20201112 09:42:59.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.491" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:42:59.490" endtime="20201112 09:42:59.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.485" endtime="20201112 09:42:59.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.495" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:42:59.494" endtime="20201112 09:42:59.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.497" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:42:59.496" endtime="20201112 09:42:59.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.492" endtime="20201112 09:42:59.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.504" endtime="20201112 09:42:59.798"></status>
</kw>
<msg timestamp="20201112 09:42:59.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072560014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072577889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.503" endtime="20201112 09:42:59.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072560014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072577889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.803" endtime="20201112 09:42:59.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.811" endtime="20201112 09:42:59.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.500" endtime="20201112 09:42:59.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.499" endtime="20201112 09:42:59.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:59.818" level="INFO">${RESULT} = [{'time': 0.072577889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.787500000000053e-05, 'source_diff': 1.787500000000053e-05}, {'time': 0.074021514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:59.814" endtime="20201112 09:42:59.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:59.831" level="INFO">${OVERHEAD} = {'diff': [1.787500000000053e-05, 1.786099999999402e-05, 1.7887999999993687e-05, 1.787500000000053e-05, 1.784700000000139e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.786...</msg>
<status status="PASS" starttime="20201112 09:42:59.819" endtime="20201112 09:42:59.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.836" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 09:42:59.834" endtime="20201112 09:42:59.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.838" level="INFO">VALUE: [1.787500000000053e-05, 1.786099999999402e-05, 1.7887999999993687e-05, 1.787500000000053e-05, 1.784700000000139e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.7862000000007372e-05, 1.780499999999574e-05, 1.788899999999316e-05, 1.7902000000000196e-05, 1.788899999999316e-05, 1.787500000000053e-05, 1.7861999999993494e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.7887999999993687e-05, 1.787500000000053e-05, 1.78610000000079e-05, 1.7888000000007565e-05, 1.7915999999992827e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.7917000000006178e-05, 1.78610000000079e-05, 1.7818999999988372e-05, 1.787500000000053e-05, 1.790299999999967e-05, 1.787500000000053e-05, 1.788899999999316e-05, 1.7887999999993687e-05, 1.787500000000053e-05, 1.7917000000006178e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.78610000000079e-05, 1.7862000000007372e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.784800000001474e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.7903000000013547e-05, 1.7847000000015267e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.790299999998579e-05, 1.787500000000053e-05]</msg>
<status status="PASS" starttime="20201112 09:42:59.837" endtime="20201112 09:42:59.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.832" endtime="20201112 09:42:59.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.841" endtime="20201112 09:42:59.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:59.844" endtime="20201112 09:42:59.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.843" endtime="20201112 09:42:59.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.839" endtime="20201112 09:42:59.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.374" endtime="20201112 09:42:59.865"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:59.298" endtime="20201112 09:42:59.866" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:59.873" endtime="20201112 09:42:59.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.872" endtime="20201112 09:42:59.893"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.906" endtime="20201112 09:42:59.925"></status>
</kw>
<msg timestamp="20201112 09:42:59.926" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.904" endtime="20201112 09:42:59.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.928" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.927" endtime="20201112 09:42:59.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.932" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:59.930" endtime="20201112 09:42:59.932"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:59.902" endtime="20201112 09:42:59.933"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:59.900" endtime="20201112 09:42:59.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.898" endtime="20201112 09:42:59.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:59.937" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:59.937" endtime="20201112 09:42:59.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.934" endtime="20201112 09:42:59.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.898" endtime="20201112 09:42:59.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.897" endtime="20201112 09:42:59.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.939" endtime="20201112 09:42:59.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.896" endtime="20201112 09:42:59.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.894" endtime="20201112 09:42:59.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.871" endtime="20201112 09:42:59.942"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.951" endtime="20201112 09:43:00.238"></status>
</kw>
<msg timestamp="20201112 09:43:00.239" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.949" endtime="20201112 09:43:00.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.244" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.241" endtime="20201112 09:43:00.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.246" endtime="20201112 09:43:00.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.947" endtime="20201112 09:43:00.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.944" endtime="20201112 09:43:00.251"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.256" endtime="20201112 09:43:00.259"></status>
</kw>
<msg timestamp="20201112 09:43:00.260" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:00.253" endtime="20201112 09:43:00.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.268" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:00.266" endtime="20201112 09:43:00.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.272" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:00.270" endtime="20201112 09:43:00.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.261" endtime="20201112 09:43:00.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.282" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:00.280" endtime="20201112 09:43:00.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.286" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:00.284" endtime="20201112 09:43:00.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.275" endtime="20201112 09:43:00.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.301" endtime="20201112 09:43:00.600"></status>
</kw>
<msg timestamp="20201112 09:43:00.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07545925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075493792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:00.298" endtime="20201112 09:43:00.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07545925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075493792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:00.604" endtime="20201112 09:43:00.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.612" endtime="20201112 09:43:00.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.293" endtime="20201112 09:43:00.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.289" endtime="20201112 09:43:00.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:00.619" level="INFO">${RESULT} = [{'time': 0.075493792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.454199999999852e-05, 'source_diff': 3.454199999999852e-05}, {'time': 0.080770264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:00.615" endtime="20201112 09:43:00.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:00.632" level="INFO">${OVERHEAD} = {'diff': [3.454199999999852e-05, 3.455599999999115e-05, 3.4540999999999045e-05, 3.4540999999999045e-05, 3.4540999999999045e-05, 3.4540999999999045e-05, 3.4542000000012396e-05, 3.4540999999999045e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:00.620" endtime="20201112 09:43:00.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.637" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 09:43:00.636" endtime="20201112 09:43:00.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.639" level="INFO">VALUE: [3.454199999999852e-05, 3.455599999999115e-05, 3.4540999999999045e-05, 3.4540999999999045e-05, 3.4540999999999045e-05, 3.4540999999999045e-05, 3.4542000000012396e-05, 3.4540999999999045e-05, 3.4555000000005553e-05, 3.4568999999998185e-05, 3.452800000000589e-05, 3.454199999999852e-05, 3.454199999999852e-05, 3.456999999998378e-05, 3.448699999999971e-05, 3.454199999999852e-05, 3.455599999999115e-05, 3.452800000000589e-05, 3.448600000000024e-05, 3.455599999999115e-05, 3.454199999999852e-05, 3.4540999999999045e-05, 3.452800000000589e-05, 3.454199999999852e-05, 3.455599999999115e-05, 3.454199999999852e-05, 3.4540999999999045e-05, 3.455599999999115e-05, 3.454199999999852e-05, 3.454199999999852e-05, 3.454199999999852e-05, 3.4540999999999045e-05, 3.452800000000589e-05, 3.455599999999115e-05, 3.45269999999509e-05, 3.4541000000054556e-05, 3.452799999997813e-05, 3.4556000000018905e-05, 3.4542000000026274e-05, 3.455500000004719e-05, 3.4555999999963394e-05, 3.449999999999287e-05, 3.454199999997076e-05, 3.4542000000026274e-05, 3.4554999999991676e-05, 3.452800000003364e-05, 3.4554999999991676e-05, 3.454199999997076e-05, 3.454199999997076e-05, 3.454199999997076e-05]</msg>
<status status="PASS" starttime="20201112 09:43:00.638" endtime="20201112 09:43:00.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.633" endtime="20201112 09:43:00.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.642" endtime="20201112 09:43:00.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:00.646" endtime="20201112 09:43:00.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.644" endtime="20201112 09:43:00.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.641" endtime="20201112 09:43:00.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.942" endtime="20201112 09:43:00.666"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:59.868" endtime="20201112 09:43:00.667" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:42:38.758" endtime="20201112 09:43:00.675"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.742" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:43:00.750" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:43:01.933" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:43:00.741" endtime="20201112 09:43:01.934"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.937" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:43:01.935" endtime="20201112 09:43:01.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.739" endtime="20201112 09:43:01.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:01.940" endtime="20201112 09:43:02.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.938" endtime="20201112 09:43:02.126"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.139" endtime="20201112 09:43:02.158"></status>
</kw>
<msg timestamp="20201112 09:43:02.159" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '...</msg>
<status status="PASS" starttime="20201112 09:43:02.138" endtime="20201112 09:43:02.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.161" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '...</msg>
<status status="PASS" starttime="20201112 09:43:02.160" endtime="20201112 09:43:02.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.164" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:02.162" endtime="20201112 09:43:02.165"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:02.135" endtime="20201112 09:43:02.165"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:02.133" endtime="20201112 09:43:02.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.132" endtime="20201112 09:43:02.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:02.171" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:02.169" endtime="20201112 09:43:02.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.167" endtime="20201112 09:43:02.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.131" endtime="20201112 09:43:02.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.130" endtime="20201112 09:43:02.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.173" endtime="20201112 09:43:02.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.129" endtime="20201112 09:43:02.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.176" endtime="20201112 09:43:02.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.127" endtime="20201112 09:43:02.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.737" endtime="20201112 09:43:02.178"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.184" endtime="20201112 09:43:02.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.183" endtime="20201112 09:43:02.204"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.217" endtime="20201112 09:43:02.236"></status>
</kw>
<msg timestamp="20201112 09:43:02.237" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.215" endtime="20201112 09:43:02.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.239" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.238" endtime="20201112 09:43:02.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.243" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:02.241" endtime="20201112 09:43:02.243"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:02.213" endtime="20201112 09:43:02.244"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:02.210" endtime="20201112 09:43:02.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.209" endtime="20201112 09:43:02.245"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:02.248" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:02.248" endtime="20201112 09:43:02.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.246" endtime="20201112 09:43:02.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.208" endtime="20201112 09:43:02.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.208" endtime="20201112 09:43:02.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.250" endtime="20201112 09:43:02.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.206" endtime="20201112 09:43:02.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.205" endtime="20201112 09:43:02.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.181" endtime="20201112 09:43:02.253"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.264" endtime="20201112 09:43:02.278"></status>
</kw>
<msg timestamp="20201112 09:43:02.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.263" endtime="20201112 09:43:02.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.280" endtime="20201112 09:43:02.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.282" endtime="20201112 09:43:02.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.259" endtime="20201112 09:43:02.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.257" endtime="20201112 09:43:02.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.291" endtime="20201112 09:43:02.580"></status>
</kw>
<msg timestamp="20201112 09:43:02.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072811194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072814556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.290" endtime="20201112 09:43:02.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072811194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072814556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.584" endtime="20201112 09:43:02.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.593" endtime="20201112 09:43:02.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.287" endtime="20201112 09:43:02.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.285" endtime="20201112 09:43:02.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:02.599" level="INFO">${RESULT} = [{'time': 0.072814556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3620000000067485e-06, 'source_diff': 3.3620000000067485e-06}, {'time': 0.072832917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:02.596" endtime="20201112 09:43:02.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:02.613" level="INFO">${ACCURACY} = {'diff': [3.3620000000067485e-06, 5.1949999999995056e-06, 4.5829999999885684e-06, 4.569999999995411e-06, 3.374999999999906e-06, 5.180999999992997e-06, 5.1810000000068746e-06, 3.374999999999906e-06, 4....</msg>
<status status="PASS" starttime="20201112 09:43:02.600" endtime="20201112 09:43:02.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.618" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 09:43:02.616" endtime="20201112 09:43:02.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.620" level="INFO">VALUE: [3.3620000000067485e-06, 5.1949999999995056e-06, 4.5829999999885684e-06, 4.569999999995411e-06, 3.374999999999906e-06, 5.180999999992997e-06, 5.1810000000068746e-06, 3.374999999999906e-06, 4.583000000002446e-06, 4.568999999995937e-06, 5.1949999999995056e-06, 3.374999999999906e-06, 3.973000000004334e-06, 4.5279999999897624e-06, 5.1810000000068746e-06, 5.167000000000366e-06, 3.986000000011369e-06, 3.971999999990983e-06, 4.583999999988042e-06, 3.361000000007275e-06, 4.598000000008429e-06, 3.9720000000048605e-06, 5.250000000012189e-06, 3.9720000000048605e-06, 4.58400000000192e-06, 3.9720000000048605e-06, 4.583000000002446e-06, 4.61200000000106e-06, 3.971999999990983e-06, 4.568999999995937e-06, 5.2360000000056806e-06, 3.429999999998712e-06, 3.9720000000048605e-06, 4.597999999994551e-06, 3.9720000000048605e-06, 4.611000000001586e-06, 3.374999999999906e-06, 3.971999999990983e-06, 3.4029999999990457e-06, 3.3340000000076087e-06, 5.194000000000032e-06, 4.611000000001586e-06, 3.9999999999901226e-06, 3.902999999999546e-06, 3.374999999999906e-06, 3.971999999990983e-06, 4.570000000009289e-06, 5.207999999992663e-06, 4.596999999995077e-06, 3.360999999993397e-06]</msg>
<status status="PASS" starttime="20201112 09:43:02.619" endtime="20201112 09:43:02.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.614" endtime="20201112 09:43:02.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.623" endtime="20201112 09:43:02.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.627" endtime="20201112 09:43:02.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.625" endtime="20201112 09:43:02.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.622" endtime="20201112 09:43:02.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.255" endtime="20201112 09:43:02.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.254" endtime="20201112 09:43:02.648"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.656" endtime="20201112 09:43:02.672"></status>
</kw>
<msg timestamp="20201112 09:43:02.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.655" endtime="20201112 09:43:02.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.673" endtime="20201112 09:43:02.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.676" endtime="20201112 09:43:02.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.652" endtime="20201112 09:43:02.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.650" endtime="20201112 09:43:02.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.685" endtime="20201112 09:43:02.971"></status>
</kw>
<msg timestamp="20201112 09:43:02.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0230225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0230295, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 09:43:02.683" endtime="20201112 09:43:02.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0230225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0230295, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 09:43:02.975" endtime="20201112 09:43:02.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.983" endtime="20201112 09:43:02.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.681" endtime="20201112 09:43:02.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.679" endtime="20201112 09:43:02.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:02.990" level="INFO">${RESULT} = [{'time': 0.0230295, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.023047347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:02.986" endtime="20201112 09:43:02.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:03.004" level="INFO">${ACCURACY} = {'diff': [7.000000000000062e-06, 5.180000000000462e-06, 5.7779999999979514e-06, 6.986000000000492e-06, 6.374999999999437e-06, 7.000000000000062e-06, 6.999999999996592e-06, 6.388999999999007e-06, 6.403...</msg>
<status status="PASS" starttime="20201112 09:43:02.991" endtime="20201112 09:43:03.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.008" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 09:43:03.007" endtime="20201112 09:43:03.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.011" level="INFO">VALUE: [7.000000000000062e-06, 5.180000000000462e-06, 5.7779999999979514e-06, 6.986000000000492e-06, 6.374999999999437e-06, 7.000000000000062e-06, 6.999999999996592e-06, 6.388999999999007e-06, 6.403000000002046e-06, 5.1949999999995056e-06, 7.000000000000062e-06, 6.986000000000492e-06, 6.959000000000826e-06, 5.180999999999936e-06, 5.735999999999242e-06, 6.388999999999007e-06, 7.013999999999632e-06, 5.792000000000991e-06, 6.986000000000492e-06, 6.986000000000492e-06, 6.959000000000826e-06, 6.360999999999867e-06, 6.389000000002476e-06, 5.791999999997521e-06, 7.000000000000062e-06, 6.388999999999007e-06, 7.000000000000062e-06, 7.013999999999632e-06, 5.735999999999242e-06, 6.429999999998243e-06, 6.4029999999985765e-06, 5.778000000001421e-06, 6.417000000001616e-06, 7.000000000000062e-06, 7.000000000000062e-06, 6.9869999999999655e-06, 5.792000000000991e-06, 5.139000000001226e-06, 7.013999999999632e-06, 7.000000000000062e-06, 6.388999999999007e-06, 6.401999999999103e-06, 6.389000000002476e-06, 5.778000000001421e-06, 6.36199999999934e-06, 7.000000000000062e-06, 6.4029999999985765e-06, 7.000000000000062e-06, 5.791000000001517e-06, 5.194000000000032e-06]</msg>
<status status="PASS" starttime="20201112 09:43:03.009" endtime="20201112 09:43:03.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.005" endtime="20201112 09:43:03.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.014" endtime="20201112 09:43:03.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:03.017" endtime="20201112 09:43:03.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.016" endtime="20201112 09:43:03.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.012" endtime="20201112 09:43:03.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.648" endtime="20201112 09:43:03.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.648" endtime="20201112 09:43:03.038"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.047" endtime="20201112 09:43:03.063"></status>
</kw>
<msg timestamp="20201112 09:43:03.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.046" endtime="20201112 09:43:03.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.064" endtime="20201112 09:43:03.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.067" endtime="20201112 09:43:03.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.043" endtime="20201112 09:43:03.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.041" endtime="20201112 09:43:03.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.077" endtime="20201112 09:43:03.361"></status>
</kw>
<msg timestamp="20201112 09:43:03.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022791194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022800014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.075" endtime="20201112 09:43:03.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022791194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022800014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.365" endtime="20201112 09:43:03.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.374" endtime="20201112 09:43:03.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.072" endtime="20201112 09:43:03.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.071" endtime="20201112 09:43:03.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:03.381" level="INFO">${RESULT} = [{'time': 0.022800014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.022820389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:03.377" endtime="20201112 09:43:03.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:03.394" level="INFO">${ACCURACY} = {'diff': [8.819999999999661e-06, 8.207999999999133e-06, 8.208000000002602e-06, 7.625000000000687e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.207999999999133e-06, 8.889000000001507e-06, 8.7640...</msg>
<status status="PASS" starttime="20201112 09:43:03.382" endtime="20201112 09:43:03.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.399" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 09:43:03.398" endtime="20201112 09:43:03.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.401" level="INFO">VALUE: [8.819999999999661e-06, 8.207999999999133e-06, 8.208000000002602e-06, 7.625000000000687e-06, 8.806000000000092e-06, 8.819999999999661e-06, 8.207999999999133e-06, 8.889000000001507e-06, 8.764000000001382e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.819999999999661e-06, 7.611000000001117e-06, 8.153000000000327e-06, 8.792000000000522e-06, 8.806000000000092e-06, 8.832999999999758e-06, 7.583000000001977e-06, 7.597999999997551e-06, 8.222000000002172e-06, 8.832999999999758e-06, 8.221999999998703e-06, 7.6109999999976474e-06, 7.598000000001021e-06, 8.222000000002172e-06, 9.389000000002007e-06, 8.805000000000618e-06, 7.583000000001977e-06, 9.402999999998107e-06, 8.222999999998176e-06, 7.598000000001021e-06, 7.611000000001117e-06, 8.805000000000618e-06, 8.208000000002602e-06, 9.417000000001147e-06, 7.582999999998508e-06, 8.819000000000188e-06, 8.792000000000522e-06, 8.721999999999203e-06, 8.264000000000882e-06, 9.417000000001147e-06, 8.208000000002602e-06, 8.223000000001646e-06, 7.625000000000687e-06, 7.597000000001547e-06, 8.792000000000522e-06, 8.166000000000423e-06, 8.179999999999993e-06, 8.888999999998037e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201112 09:43:03.400" endtime="20201112 09:43:03.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.395" endtime="20201112 09:43:03.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.404" endtime="20201112 09:43:03.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:03.408" endtime="20201112 09:43:03.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.406" endtime="20201112 09:43:03.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.403" endtime="20201112 09:43:03.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.039" endtime="20201112 09:43:03.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.038" endtime="20201112 09:43:03.428"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.437" endtime="20201112 09:43:03.452"></status>
</kw>
<msg timestamp="20201112 09:43:03.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.435" endtime="20201112 09:43:03.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.453" endtime="20201112 09:43:03.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.456" endtime="20201112 09:43:03.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.433" endtime="20201112 09:43:03.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.431" endtime="20201112 09:43:03.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.466" endtime="20201112 09:43:03.750"></status>
</kw>
<msg timestamp="20201112 09:43:03.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021824097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.464" endtime="20201112 09:43:03.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021824097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.755" endtime="20201112 09:43:03.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.763" endtime="20201112 09:43:03.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.462" endtime="20201112 09:43:03.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.460" endtime="20201112 09:43:03.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:03.770" level="INFO">${RESULT} = [{'time': 0.021834708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.021854458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:03.767" endtime="20201112 09:43:03.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:03.784" level="INFO">${ACCURACY} = {'diff': [1.0611000000000648e-05, 9.416000000001673e-06, 1.0638999999999788e-05, 1.1221999999998233e-05, 9.416999999997677e-06, 1.0625000000000218e-05, 9.429999999997773e-06, 1.0027999999998732e-05, 1...</msg>
<status status="PASS" starttime="20201112 09:43:03.771" endtime="20201112 09:43:03.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.789" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 09:43:03.788" endtime="20201112 09:43:03.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.791" level="INFO">VALUE: [1.0611000000000648e-05, 9.416000000001673e-06, 1.0638999999999788e-05, 1.1221999999998233e-05, 9.416999999997677e-06, 1.0625000000000218e-05, 9.429999999997773e-06, 1.0027999999998732e-05, 1.0625000000000218e-05, 1.0638000000000314e-05, 9.416999999997677e-06, 1.0013999999999162e-05, 1.0625000000000218e-05, 1.0638999999999788e-05, 9.389000000002007e-06, 1.0027000000002728e-05, 9.416999999997677e-06, 1.1207999999998663e-05, 1.0625000000000218e-05, 1.0028000000002202e-05, 9.445000000000286e-06, 1.1236000000001273e-05, 1.0028000000002202e-05, 9.416000000001673e-06, 1.1236000000001273e-05, 9.999999999999593e-06, 1.0014000000002632e-05, 1.0611000000000648e-05, 1.0611000000000648e-05, 9.417000000001147e-06, 1.0013999999999162e-05, 1.0597000000001078e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.1166999999999427e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 9.416000000001673e-06, 1.0014000000002632e-05, 9.416999999997677e-06, 9.417000000001147e-06, 1.1222000000001703e-05, 1.0638999999999788e-05, 1.1236000000001273e-05, 1.0028000000002202e-05, 1.0611000000000648e-05, 9.444000000000813e-06, 1.0624999999996748e-05, 1.1209000000001607e-05, 1.0083000000001008e-05]</msg>
<status status="PASS" starttime="20201112 09:43:03.790" endtime="20201112 09:43:03.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.785" endtime="20201112 09:43:03.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.795" endtime="20201112 09:43:03.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:03.798" endtime="20201112 09:43:03.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.796" endtime="20201112 09:43:03.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.793" endtime="20201112 09:43:03.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.429" endtime="20201112 09:43:03.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.429" endtime="20201112 09:43:03.819"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.827" endtime="20201112 09:43:03.842"></status>
</kw>
<msg timestamp="20201112 09:43:03.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.826" endtime="20201112 09:43:03.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.843" endtime="20201112 09:43:03.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.846" endtime="20201112 09:43:03.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.823" endtime="20201112 09:43:03.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.821" endtime="20201112 09:43:03.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.856" endtime="20201112 09:43:04.143"></status>
</kw>
<msg timestamp="20201112 09:43:04.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021689472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021700708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.855" endtime="20201112 09:43:04.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021689472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021700708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.147" endtime="20201112 09:43:04.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.156" endtime="20201112 09:43:04.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.852" endtime="20201112 09:43:04.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.850" endtime="20201112 09:43:04.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:04.162" level="INFO">${RESULT} = [{'time': 0.021700708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1235999999997803e-05, 'source_diff': 1.1235999999997803e-05}, {'time': 0.021720833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:04.159" endtime="20201112 09:43:04.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:04.176" level="INFO">${ACCURACY} = {'diff': [1.1235999999997803e-05, 1.2457999999999914e-05, 1.2444999999999817e-05, 1.1832999999999289e-05, 1.2457999999999914e-05, 1.1236000000001273e-05, 1.2429999999997304e-05, 1.1208000000002133e-05...</msg>
<status status="PASS" starttime="20201112 09:43:04.163" endtime="20201112 09:43:04.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.181" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 09:43:04.180" endtime="20201112 09:43:04.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.183" level="INFO">VALUE: [1.1235999999997803e-05, 1.2457999999999914e-05, 1.2444999999999817e-05, 1.1832999999999289e-05, 1.2457999999999914e-05, 1.1236000000001273e-05, 1.2429999999997304e-05, 1.1208000000002133e-05, 1.305499999999793e-05, 1.2417000000000677e-05, 1.1832999999999289e-05, 1.3041000000001829e-05, 1.1833999999998762e-05, 1.3041000000001829e-05, 1.304099999999836e-05, 1.1236000000001273e-05, 1.1832999999999289e-05, 1.3041999999997833e-05, 1.3041000000001829e-05, 1.2443999999996874e-05, 1.2985999999999553e-05, 1.1847999999998332e-05, 1.2431000000000247e-05, 1.1291999999999552e-05, 1.2430000000000774e-05, 1.1847000000002328e-05, 1.3055999999997403e-05, 1.1834000000002232e-05, 1.1846999999998858e-05, 1.305499999999793e-05, 1.2472999999998957e-05, 1.1833999999998762e-05, 1.1832999999999289e-05, 1.2444000000000344e-05, 1.2430000000000774e-05, 1.1805999999999622e-05, 1.2445000000003287e-05, 1.1834000000002232e-05, 1.2444000000000344e-05, 1.2431000000000247e-05, 1.1235999999997803e-05, 1.3055000000001399e-05, 1.2472999999998957e-05, 1.1846999999998858e-05, 1.1832999999999289e-05, 1.1847000000002328e-05, 1.1832999999999289e-05, 1.2431000000000247e-05, 1.1222000000001703e-05, 1.304099999999836e-05]</msg>
<status status="PASS" starttime="20201112 09:43:04.182" endtime="20201112 09:43:04.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.177" endtime="20201112 09:43:04.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.186" endtime="20201112 09:43:04.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:04.190" endtime="20201112 09:43:04.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.188" endtime="20201112 09:43:04.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.185" endtime="20201112 09:43:04.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.820" endtime="20201112 09:43:04.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.819" endtime="20201112 09:43:04.211"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.219" endtime="20201112 09:43:04.234"></status>
</kw>
<msg timestamp="20201112 09:43:04.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.218" endtime="20201112 09:43:04.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.235" endtime="20201112 09:43:04.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.238" endtime="20201112 09:43:04.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.215" endtime="20201112 09:43:04.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.213" endtime="20201112 09:43:04.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.248" endtime="20201112 09:43:04.532"></status>
</kw>
<msg timestamp="20201112 09:43:04.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.246" endtime="20201112 09:43:04.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.537" endtime="20201112 09:43:04.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.545" endtime="20201112 09:43:04.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.244" endtime="20201112 09:43:04.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.242" endtime="20201112 09:43:04.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:04.552" level="INFO">${RESULT} = [{'time': 0.021821625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3653000000002358e-05, 'source_diff': 1.3653000000002358e-05}, {'time': 0.021841611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:04.548" endtime="20201112 09:43:04.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:04.565" level="INFO">${ACCURACY} = {'diff': [1.3653000000002358e-05, 1.3583000000001039e-05, 1.4263999999999943e-05, 1.484699999999839e-05, 1.3665999999998985e-05, 1.4277999999999513e-05, 1.3596999999997139e-05, 1.4263999999999943e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:04.553" endtime="20201112 09:43:04.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.570" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 09:43:04.568" endtime="20201112 09:43:04.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.572" level="INFO">VALUE: [1.3653000000002358e-05, 1.3583000000001039e-05, 1.4263999999999943e-05, 1.484699999999839e-05, 1.3665999999998985e-05, 1.4277999999999513e-05, 1.3596999999997139e-05, 1.4263999999999943e-05, 1.3598000000000082e-05, 1.3596999999997139e-05, 1.4277999999999513e-05, 1.4263999999999943e-05, 1.4250000000000373e-05, 1.3652000000002884e-05, 1.3638999999999318e-05, 1.4848000000001332e-05, 1.4874999999997529e-05, 1.486099999999796e-05, 1.3638999999999318e-05, 1.3666999999998458e-05, 1.430499999999918e-05, 1.4221999999997764e-05, 1.486099999999796e-05, 1.3667000000001928e-05, 1.479100000000011e-05, 1.4249999999996904e-05, 1.3639000000002788e-05, 1.4250000000000373e-05, 1.4848000000001332e-05, 1.4263999999999943e-05, 1.3611000000000179e-05, 1.4236000000000804e-05, 1.4847000000001859e-05, 1.5445000000002818e-05, 1.4250000000000373e-05, 1.429099999999961e-05, 1.486099999999796e-05, 1.3638999999999318e-05, 1.481899999999925e-05, 1.4264000000003413e-05, 1.3665999999998985e-05, 1.486099999999796e-05, 1.3638999999999318e-05, 1.3679999999998554e-05, 1.4249999999996904e-05, 1.4179999999999054e-05, 1.5471999999999014e-05, 1.4250000000000373e-05, 1.4236000000000804e-05, 1.4250000000000373e-05]</msg>
<status status="PASS" starttime="20201112 09:43:04.571" endtime="20201112 09:43:04.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.566" endtime="20201112 09:43:04.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.575" endtime="20201112 09:43:04.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:04.578" endtime="20201112 09:43:04.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.577" endtime="20201112 09:43:04.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.573" endtime="20201112 09:43:04.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.211" endtime="20201112 09:43:04.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.211" endtime="20201112 09:43:04.599"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.608" endtime="20201112 09:43:04.622"></status>
</kw>
<msg timestamp="20201112 09:43:04.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.606" endtime="20201112 09:43:04.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.624" endtime="20201112 09:43:04.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.627" endtime="20201112 09:43:04.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.604" endtime="20201112 09:43:04.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.602" endtime="20201112 09:43:04.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.636" endtime="20201112 09:43:04.921"></status>
</kw>
<msg timestamp="20201112 09:43:04.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021856708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.635" endtime="20201112 09:43:04.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021856708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.925" endtime="20201112 09:43:04.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.933" endtime="20201112 09:43:04.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.632" endtime="20201112 09:43:04.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.631" endtime="20201112 09:43:04.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:04.940" level="INFO">${RESULT} = [{'time': 0.021872125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.541700000000021e-05, 'source_diff': 1.541700000000021e-05}, {'time': 0.021904292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:04.937" endtime="20201112 09:43:04.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:04.953" level="INFO">${ACCURACY} = {'diff': [1.541700000000021e-05, 1.666699999999799e-05, 1.606899999999703e-05, 1.5999999999998654e-05, 1.5472999999998488e-05, 1.666700000000146e-05, 1.5458000000002914e-05, 1.7277999999999044e-05, 1....</msg>
<status status="PASS" starttime="20201112 09:43:04.941" endtime="20201112 09:43:04.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.958" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 09:43:04.957" endtime="20201112 09:43:04.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.961" level="INFO">VALUE: [1.541700000000021e-05, 1.666699999999799e-05, 1.606899999999703e-05, 1.5999999999998654e-05, 1.5472999999998488e-05, 1.666700000000146e-05, 1.5458000000002914e-05, 1.7277999999999044e-05, 1.5443999999999874e-05, 1.7278000000002514e-05, 1.5457999999999444e-05, 1.665300000000189e-05, 1.7277999999999044e-05, 1.666700000000146e-05, 1.612499999999878e-05, 1.7249999999999904e-05, 1.5445000000002818e-05, 1.5416000000000735e-05, 1.668100000000103e-05, 1.665299999999842e-05, 1.668100000000103e-05, 1.5443999999999874e-05, 1.661099999999971e-05, 1.6056000000000403e-05, 1.5443999999999874e-05, 1.6055999999996934e-05, 1.5471999999999014e-05, 1.611099999999921e-05, 1.661099999999971e-05, 1.541700000000021e-05, 1.606899999999703e-05, 1.5458000000002914e-05, 1.540300000000064e-05, 1.6695000000000598e-05, 1.6694000000001125e-05, 1.541700000000021e-05, 1.7277999999999044e-05, 1.668100000000103e-05, 1.665300000000189e-05, 1.5514000000001194e-05, 1.6041999999997364e-05, 1.5444999999999348e-05, 1.6042000000000833e-05, 1.5458999999998918e-05, 1.666699999999799e-05, 1.665299999999842e-05, 1.6056000000000403e-05, 1.665299999999842e-05, 1.5458999999998918e-05, 1.666700000000146e-05]</msg>
<status status="PASS" starttime="20201112 09:43:04.959" endtime="20201112 09:43:04.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.954" endtime="20201112 09:43:04.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.964" endtime="20201112 09:43:04.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:04.967" endtime="20201112 09:43:04.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.966" endtime="20201112 09:43:04.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.962" endtime="20201112 09:43:04.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.600" endtime="20201112 09:43:04.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.600" endtime="20201112 09:43:04.988"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.997" endtime="20201112 09:43:05.012"></status>
</kw>
<msg timestamp="20201112 09:43:05.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.995" endtime="20201112 09:43:05.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.014" endtime="20201112 09:43:05.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.016" endtime="20201112 09:43:05.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.993" endtime="20201112 09:43:05.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.990" endtime="20201112 09:43:05.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.026" endtime="20201112 09:43:05.314"></status>
</kw>
<msg timestamp="20201112 09:43:05.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022202875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.025" endtime="20201112 09:43:05.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022202875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.318" endtime="20201112 09:43:05.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.326" endtime="20201112 09:43:05.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.022" endtime="20201112 09:43:05.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.020" endtime="20201112 09:43:05.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:05.333" level="INFO">${RESULT} = [{'time': 0.022202875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8500000000001154e-05, 'source_diff': 1.8500000000001154e-05}, {'time': 0.022229153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:05.330" endtime="20201112 09:43:05.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:05.347" level="INFO">${ACCURACY} = {'diff': [1.8500000000001154e-05, 1.7292000000002083e-05, 1.786099999999749e-05, 1.8485999999998115e-05, 1.7277999999999044e-05, 1.909699999999917e-05, 1.847299999999802e-05, 1.851300000000125e-05, 1....</msg>
<status status="PASS" starttime="20201112 09:43:05.334" endtime="20201112 09:43:05.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.352" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 09:43:05.351" endtime="20201112 09:43:05.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.354" level="INFO">VALUE: [1.8500000000001154e-05, 1.7292000000002083e-05, 1.786099999999749e-05, 1.8485999999998115e-05, 1.7277999999999044e-05, 1.909699999999917e-05, 1.847299999999802e-05, 1.851300000000125e-05, 1.9014000000001224e-05, 1.7222000000000764e-05, 1.7929999999999335e-05, 1.7888000000000626e-05, 1.7263999999999474e-05, 1.909699999999917e-05, 1.8500000000001154e-05, 1.8487000000001058e-05, 1.7291999999998614e-05, 1.7236000000000334e-05, 1.8485999999998115e-05, 1.787500000000053e-05, 1.845900000000192e-05, 1.7277999999999044e-05, 1.8472000000002015e-05, 1.90829999999996e-05, 1.7249999999999904e-05, 1.790299999999967e-05, 1.9083999999999074e-05, 1.7277999999999044e-05, 1.8472000000002015e-05, 1.7263999999999474e-05, 1.729099999999914e-05, 1.906900000000003e-05, 1.787500000000053e-05, 1.7291999999998614e-05, 1.786100000000096e-05, 1.8472000000002015e-05, 1.787500000000053e-05, 1.7888000000000626e-05, 1.8527999999996825e-05, 1.7263999999999474e-05, 1.848699999999759e-05, 1.909700000000264e-05, 1.729099999999914e-05, 1.854100000000039e-05, 1.786100000000096e-05, 1.90829999999996e-05, 1.8570000000002473e-05, 1.8486000000001584e-05, 1.8528000000000294e-05, 1.909700000000264e-05]</msg>
<status status="PASS" starttime="20201112 09:43:05.353" endtime="20201112 09:43:05.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.348" endtime="20201112 09:43:05.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.357" endtime="20201112 09:43:05.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:05.361" endtime="20201112 09:43:05.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.359" endtime="20201112 09:43:05.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.356" endtime="20201112 09:43:05.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.989" endtime="20201112 09:43:05.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.988" endtime="20201112 09:43:05.382"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.391" endtime="20201112 09:43:05.406"></status>
</kw>
<msg timestamp="20201112 09:43:05.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.389" endtime="20201112 09:43:05.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.407" endtime="20201112 09:43:05.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.410" endtime="20201112 09:43:05.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.387" endtime="20201112 09:43:05.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.385" endtime="20201112 09:43:05.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.420" endtime="20201112 09:43:05.704"></status>
</kw>
<msg timestamp="20201112 09:43:05.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021833417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.418" endtime="20201112 09:43:05.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021833417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.708" endtime="20201112 09:43:05.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.716" endtime="20201112 09:43:05.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.416" endtime="20201112 09:43:05.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.414" endtime="20201112 09:43:05.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:05.723" level="INFO">${RESULT} = [{'time': 0.021854319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0901999999999726e-05, 'source_diff': 2.0901999999999726e-05}, {'time': 0.021880181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:05.720" endtime="20201112 09:43:05.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:05.736" level="INFO">${ACCURACY} = {'diff': [2.0901999999999726e-05, 2.0805999999998215e-05, 2.0306000000001184e-05, 2.02769999999991e-05, 1.968100000000056e-05, 2.088899999999963e-05, 2.09029999999992e-05, 1.9721999999999795e-05, 1.90...</msg>
<status status="PASS" starttime="20201112 09:43:05.724" endtime="20201112 09:43:05.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.741" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 09:43:05.740" endtime="20201112 09:43:05.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.743" level="INFO">VALUE: [2.0901999999999726e-05, 2.0805999999998215e-05, 2.0306000000001184e-05, 2.02769999999991e-05, 1.968100000000056e-05, 2.088899999999963e-05, 2.09029999999992e-05, 1.9721999999999795e-05, 1.9083999999999074e-05, 2.029100000000214e-05, 1.966699999999752e-05, 2.09029999999992e-05, 1.969500000000013e-05, 1.912500000000178e-05, 1.906900000000003e-05, 2.0291999999998145e-05, 2.088899999999963e-05, 2.091699999999877e-05, 2.088899999999963e-05, 2.033300000000085e-05, 1.9694000000000655e-05, 1.9042000000000364e-05, 1.969500000000013e-05, 1.961099999999924e-05, 2.09029999999992e-05, 2.091699999999877e-05, 2.0278000000002044e-05, 1.90829999999996e-05, 2.097300000000052e-05, 1.969500000000013e-05, 1.969500000000013e-05, 2.030500000000171e-05, 2.0306000000001184e-05, 2.034700000000042e-05, 2.090300000000267e-05, 1.9680000000001086e-05, 1.970900000000317e-05, 2.088899999999963e-05, 2.0291999999998145e-05, 2.0320000000000754e-05, 2.0888000000000156e-05, 1.9694000000000655e-05, 1.969500000000013e-05, 2.0888000000000156e-05, 1.9694000000000655e-05, 2.0292000000001614e-05, 1.965300000000142e-05, 2.0305999999997715e-05, 1.909700000000264e-05, 2.031900000000128e-05]</msg>
<status status="PASS" starttime="20201112 09:43:05.742" endtime="20201112 09:43:05.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.737" endtime="20201112 09:43:05.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.747" endtime="20201112 09:43:05.748"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:05.750" endtime="20201112 09:43:05.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.749" endtime="20201112 09:43:05.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.745" endtime="20201112 09:43:05.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.383" endtime="20201112 09:43:05.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.382" endtime="20201112 09:43:05.771"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.780" endtime="20201112 09:43:05.795"></status>
</kw>
<msg timestamp="20201112 09:43:05.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.778" endtime="20201112 09:43:05.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.796" endtime="20201112 09:43:05.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.799" endtime="20201112 09:43:05.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.776" endtime="20201112 09:43:05.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.774" endtime="20201112 09:43:05.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.809" endtime="20201112 09:43:06.094"></status>
</kw>
<msg timestamp="20201112 09:43:06.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021840139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.807" endtime="20201112 09:43:06.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021840139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.099" endtime="20201112 09:43:06.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.107" endtime="20201112 09:43:06.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.805" endtime="20201112 09:43:06.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.803" endtime="20201112 09:43:06.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:06.114" level="INFO">${RESULT} = [{'time': 0.021861653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1514000000000255e-05, 'source_diff': 2.1514000000000255e-05}, {'time': 0.021889639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:06.111" endtime="20201112 09:43:06.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:06.127" level="INFO">${ACCURACY} = {'diff': [2.1514000000000255e-05, 2.1499999999997216e-05, 2.2721999999999326e-05, 2.1500000000000685e-05, 2.213899999999741e-05, 2.211099999999827e-05, 2.1500000000000685e-05, 2.212500000000131e-05, 2...</msg>
<status status="PASS" starttime="20201112 09:43:06.115" endtime="20201112 09:43:06.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.132" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 09:43:06.131" endtime="20201112 09:43:06.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.134" level="INFO">VALUE: [2.1514000000000255e-05, 2.1499999999997216e-05, 2.2721999999999326e-05, 2.1500000000000685e-05, 2.213899999999741e-05, 2.211099999999827e-05, 2.1500000000000685e-05, 2.212500000000131e-05, 2.1499999999997216e-05, 2.3320000000000285e-05, 2.212500000000131e-05, 2.2112000000001214e-05, 2.3290999999998202e-05, 2.1472000000001545e-05, 2.1485999999997646e-05, 2.3320000000000285e-05, 2.1485999999997646e-05, 2.2721999999999326e-05, 2.2749999999998466e-05, 2.2138000000001407e-05, 2.3306000000000715e-05, 2.1500000000000685e-05, 2.2055999999999465e-05, 2.269499999999966e-05, 2.211100000000174e-05, 2.2707999999999756e-05, 2.1500000000000685e-05, 2.270899999999923e-05, 2.2735999999998896e-05, 2.265299999999748e-05, 2.269500000000313e-05, 2.3333999999999855e-05, 2.209700000000217e-05, 2.2680000000000616e-05, 2.1471999999998076e-05, 2.3319999999996815e-05, 2.151300000000078e-05, 2.1514000000000255e-05, 2.20969999999987e-05, 2.2707999999999756e-05, 2.2097999999998175e-05, 2.20969999999987e-05, 2.3318999999997342e-05, 2.2707999999999756e-05, 2.20969999999987e-05, 2.1500000000000685e-05, 2.211099999999827e-05, 2.2708000000003226e-05, 2.2721999999999326e-05, 2.3319999999996815e-05]</msg>
<status status="PASS" starttime="20201112 09:43:06.133" endtime="20201112 09:43:06.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.128" endtime="20201112 09:43:06.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.138" endtime="20201112 09:43:06.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.141" endtime="20201112 09:43:06.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.140" endtime="20201112 09:43:06.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.136" endtime="20201112 09:43:06.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.772" endtime="20201112 09:43:06.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.772" endtime="20201112 09:43:06.162"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.171" endtime="20201112 09:43:06.187"></status>
</kw>
<msg timestamp="20201112 09:43:06.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.169" endtime="20201112 09:43:06.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.189" endtime="20201112 09:43:06.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.191" endtime="20201112 09:43:06.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.167" endtime="20201112 09:43:06.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.165" endtime="20201112 09:43:06.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.201" endtime="20201112 09:43:06.486"></status>
</kw>
<msg timestamp="20201112 09:43:06.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022034833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02205875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:06.200" endtime="20201112 09:43:06.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022034833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02205875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:06.491" endtime="20201112 09:43:06.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.499" endtime="20201112 09:43:06.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.197" endtime="20201112 09:43:06.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.195" endtime="20201112 09:43:06.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:06.506" level="INFO">${RESULT} = [{'time': 0.02205875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.39169999999983e-05, 'source_diff': 2.39169999999983e-05}, {'time': 0.022096681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:43:06.502" endtime="20201112 09:43:06.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:06.519" level="INFO">${ACCURACY} = {'diff': [2.39169999999983e-05, 2.39169999999983e-05, 2.4527999999999356e-05, 2.50970000000017e-05, 2.511100000000127e-05, 2.512500000000084e-05, 2.331900000000081e-05, 2.391700000000177e-05, 2.391700...</msg>
<status status="PASS" starttime="20201112 09:43:06.507" endtime="20201112 09:43:06.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.524" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 09:43:06.523" endtime="20201112 09:43:06.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.526" level="INFO">VALUE: [2.39169999999983e-05, 2.39169999999983e-05, 2.4527999999999356e-05, 2.50970000000017e-05, 2.511100000000127e-05, 2.512500000000084e-05, 2.331900000000081e-05, 2.391700000000177e-05, 2.391700000000177e-05, 2.3320000000000285e-05, 2.39169999999983e-05, 2.512500000000084e-05, 2.4513999999999786e-05, 2.3263999999998536e-05, 2.4541999999998926e-05, 2.393099999999787e-05, 2.3916000000002297e-05, 2.5110999999997802e-05, 2.4527999999999356e-05, 2.4513999999999786e-05, 2.513900000000041e-05, 2.333300000000038e-05, 2.3320000000000285e-05, 2.393100000000134e-05, 2.4514000000003255e-05, 2.512500000000084e-05, 2.3306000000000715e-05, 2.3930000000001866e-05, 2.4513999999999786e-05, 2.388899999999916e-05, 2.512500000000084e-05, 2.512499999999737e-05, 2.4541999999998926e-05, 2.512500000000084e-05, 2.330500000000124e-05, 2.512500000000084e-05, 2.512499999999737e-05, 2.4526999999999882e-05, 2.3901999999999257e-05, 2.333300000000038e-05, 2.513900000000041e-05, 2.4527999999999356e-05, 2.393100000000134e-05, 2.4527999999999356e-05, 2.4513999999999786e-05, 2.39169999999983e-05, 2.513900000000041e-05, 2.4527999999999356e-05, 2.5110999999997802e-05, 2.3916000000002297e-05]</msg>
<status status="PASS" starttime="20201112 09:43:06.525" endtime="20201112 09:43:06.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.520" endtime="20201112 09:43:06.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.530" endtime="20201112 09:43:06.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.533" endtime="20201112 09:43:06.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.531" endtime="20201112 09:43:06.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.528" endtime="20201112 09:43:06.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.163" endtime="20201112 09:43:06.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.163" endtime="20201112 09:43:06.554"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.562" endtime="20201112 09:43:06.578"></status>
</kw>
<msg timestamp="20201112 09:43:06.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.561" endtime="20201112 09:43:06.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.579" endtime="20201112 09:43:06.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.582" endtime="20201112 09:43:06.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.558" endtime="20201112 09:43:06.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.556" endtime="20201112 09:43:06.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.592" endtime="20201112 09:43:06.877"></status>
</kw>
<msg timestamp="20201112 09:43:06.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02190075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:06.590" endtime="20201112 09:43:06.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02190075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:06.881" endtime="20201112 09:43:06.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.890" endtime="20201112 09:43:06.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.587" endtime="20201112 09:43:06.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.586" endtime="20201112 09:43:06.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:06.896" level="INFO">${RESULT} = [{'time': 0.021927681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.693100000000087e-05, 'source_diff': 2.693100000000087e-05}, {'time': 0.021965417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:06.893" endtime="20201112 09:43:06.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:06.911" level="INFO">${ACCURACY} = {'diff': [2.693100000000087e-05, 2.57230000000018e-05, 2.6348000000002425e-05, 2.6929999999997928e-05, 2.5749999999997997e-05, 2.5736000000001896e-05, 2.6333999999999386e-05, 2.6332999999999912e-05, 2...</msg>
<status status="PASS" starttime="20201112 09:43:06.897" endtime="20201112 09:43:06.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.915" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 09:43:06.914" endtime="20201112 09:43:06.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.918" level="INFO">VALUE: [2.693100000000087e-05, 2.57230000000018e-05, 2.6348000000002425e-05, 2.6929999999997928e-05, 2.5749999999997997e-05, 2.5736000000001896e-05, 2.6333999999999386e-05, 2.6332999999999912e-05, 2.5722000000002326e-05, 2.693100000000087e-05, 2.5721999999998857e-05, 2.513900000000041e-05, 2.6346999999999482e-05, 2.6930000000001397e-05, 2.6929999999997928e-05, 2.6346999999999482e-05, 2.570900000000223e-05, 2.6360999999999052e-05, 2.6332999999999912e-05, 2.5721999999998857e-05, 2.6958000000000537e-05, 2.690300000000173e-05, 2.5736000000001896e-05, 2.5764000000001036e-05, 2.5721999999998857e-05, 2.6319999999999816e-05, 2.697300000000305e-05, 2.633300000000338e-05, 2.6332999999999912e-05, 2.6347999999998956e-05, 2.5722000000002326e-05, 2.511100000000127e-05, 2.6319000000000342e-05, 2.5791000000000702e-05, 2.5749999999997997e-05, 2.5735999999998427e-05, 2.5708000000002756e-05, 2.5721999999998857e-05, 2.6958000000000537e-05, 2.5721999999998857e-05, 2.5736000000001896e-05, 2.5179999999999647e-05, 2.5707999999999287e-05, 2.6332999999999912e-05, 2.6958000000000537e-05, 2.7000000000002716e-05, 2.515299999999998e-05, 2.573700000000137e-05, 2.691699999999783e-05, 2.5749999999997997e-05]</msg>
<status status="PASS" starttime="20201112 09:43:06.916" endtime="20201112 09:43:06.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.912" endtime="20201112 09:43:06.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.921" endtime="20201112 09:43:06.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.925" endtime="20201112 09:43:06.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.923" endtime="20201112 09:43:06.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.920" endtime="20201112 09:43:06.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.555" endtime="20201112 09:43:06.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.554" endtime="20201112 09:43:06.945"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.954" endtime="20201112 09:43:06.969"></status>
</kw>
<msg timestamp="20201112 09:43:06.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.953" endtime="20201112 09:43:06.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.971" endtime="20201112 09:43:06.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.973" endtime="20201112 09:43:06.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.950" endtime="20201112 09:43:06.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.948" endtime="20201112 09:43:06.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.983" endtime="20201112 09:43:07.270"></status>
</kw>
<msg timestamp="20201112 09:43:07.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.982" endtime="20201112 09:43:07.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.274" endtime="20201112 09:43:07.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.282" endtime="20201112 09:43:07.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.979" endtime="20201112 09:43:07.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.977" endtime="20201112 09:43:07.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:07.289" level="INFO">${RESULT} = [{'time': 0.022085361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9417000000000332e-05, 'source_diff': 2.9417000000000332e-05}, {'time': 0.022119083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:07.286" endtime="20201112 09:43:07.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:07.302" level="INFO">${ACCURACY} = {'diff': [2.9417000000000332e-05, 2.7611000000000302e-05, 2.7528000000002356e-05, 2.7540999999998983e-05, 2.7514000000002786e-05, 2.9332999999999443e-05, 2.9417000000000332e-05, 2.7555999999998027e-05...</msg>
<status status="PASS" starttime="20201112 09:43:07.290" endtime="20201112 09:43:07.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.307" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 09:43:07.306" endtime="20201112 09:43:07.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.309" level="INFO">VALUE: [2.9417000000000332e-05, 2.7611000000000302e-05, 2.7528000000002356e-05, 2.7540999999998983e-05, 2.7514000000002786e-05, 2.9332999999999443e-05, 2.9417000000000332e-05, 2.7555999999998027e-05, 2.7555000000002022e-05, 2.8707999999998818e-05, 2.9346999999999013e-05, 2.8749999999997528e-05, 2.9332999999999443e-05, 2.7542000000001926e-05, 2.815300000000298e-05, 2.9360999999998583e-05, 2.7541000000002452e-05, 2.7555999999998027e-05, 2.7486000000000177e-05, 2.8750000000000997e-05, 2.8111000000000802e-05, 2.7556000000001496e-05, 2.7611000000000302e-05, 2.9305999999999777e-05, 2.8152999999999512e-05, 2.8138999999999942e-05, 2.7527999999998887e-05, 2.9348000000001956e-05, 2.8763999999997097e-05, 2.8750000000000997e-05, 2.8750000000000997e-05, 2.8750000000000997e-05, 2.8138999999999942e-05, 2.8138999999999942e-05, 2.7554999999998553e-05, 2.8110999999997333e-05, 2.8138999999999942e-05, 2.7555000000002022e-05, 2.7542000000001926e-05, 2.8750000000000997e-05, 2.7583000000001162e-05, 2.6944000000000967e-05, 2.7499999999999747e-05, 2.7570000000001066e-05, 2.8138999999999942e-05, 2.8763000000001093e-05, 2.7513999999999317e-05, 2.7569999999997596e-05, 2.7527999999998887e-05, 2.8764000000000567e-05]</msg>
<status status="PASS" starttime="20201112 09:43:07.308" endtime="20201112 09:43:07.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.303" endtime="20201112 09:43:07.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.313" endtime="20201112 09:43:07.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:07.316" endtime="20201112 09:43:07.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.315" endtime="20201112 09:43:07.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.311" endtime="20201112 09:43:07.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.946" endtime="20201112 09:43:07.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.946" endtime="20201112 09:43:07.337"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.346" endtime="20201112 09:43:07.362"></status>
</kw>
<msg timestamp="20201112 09:43:07.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.344" endtime="20201112 09:43:07.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.363" endtime="20201112 09:43:07.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.366" endtime="20201112 09:43:07.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.342" endtime="20201112 09:43:07.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.339" endtime="20201112 09:43:07.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.375" endtime="20201112 09:43:07.660"></status>
</kw>
<msg timestamp="20201112 09:43:07.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021882736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.374" endtime="20201112 09:43:07.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021882736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.664" endtime="20201112 09:43:07.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.672" endtime="20201112 09:43:07.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.371" endtime="20201112 09:43:07.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.370" endtime="20201112 09:43:07.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:07.683" level="INFO">${RESULT} = [{'time': 0.021882736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.056900000000112e-05, 'source_diff': 3.056900000000112e-05}, {'time': 0.021926889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:07.679" endtime="20201112 09:43:07.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:07.699" level="INFO">${ACCURACY} = {'diff': [3.056900000000112e-05, 3.11249999999999e-05, 3.116600000000261e-05, 3.056900000000112e-05, 3.0568999999997654e-05, 3.059700000000026e-05, 2.9875000000002122e-05, 2.9348000000001956e-05, 2.93...</msg>
<status status="PASS" starttime="20201112 09:43:07.683" endtime="20201112 09:43:07.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.704" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 09:43:07.703" endtime="20201112 09:43:07.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.706" level="INFO">VALUE: [3.056900000000112e-05, 3.11249999999999e-05, 3.116600000000261e-05, 3.056900000000112e-05, 3.0568999999997654e-05, 3.059700000000026e-05, 2.9875000000002122e-05, 2.9348000000001956e-05, 2.9320000000002816e-05, 2.9958000000000068e-05, 3.117999999999871e-05, 2.9902999999997792e-05, 3.054199999999799e-05, 2.9374999999998153e-05, 3.0568999999997654e-05, 3.061099999999983e-05, 3.056900000000112e-05, 2.995899999999954e-05, 2.994499999999997e-05, 3.0554999999998084e-05, 2.9958000000000068e-05, 2.9361000000002052e-05, 3.113899999999947e-05, 2.9917000000000832e-05, 2.9346999999999013e-05, 3.119499999999775e-05, 3.055600000000103e-05, 3.055600000000103e-05, 3.0568999999997654e-05, 2.9985999999999208e-05, 2.9360999999998583e-05, 2.9944000000000498e-05, 2.9958000000000068e-05, 3.052799999999842e-05, 2.9374999999998153e-05, 2.9360999999998583e-05, 2.9346999999999013e-05, 3.116699999999861e-05, 3.05700000000006e-05, 3.055599999999756e-05, 3.0014000000001817e-05, 3.05700000000006e-05, 3.0540999999998514e-05, 3.115300000000251e-05, 3.052799999999842e-05, 3.116700000000208e-05, 3.0582999999997224e-05, 2.995900000000301e-05, 2.9971999999999638e-05, 2.9958000000000068e-05]</msg>
<status status="PASS" starttime="20201112 09:43:07.705" endtime="20201112 09:43:07.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.700" endtime="20201112 09:43:07.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.711" endtime="20201112 09:43:07.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:07.716" endtime="20201112 09:43:07.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.714" endtime="20201112 09:43:07.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.709" endtime="20201112 09:43:07.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.338" endtime="20201112 09:43:07.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.337" endtime="20201112 09:43:07.737"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.746" endtime="20201112 09:43:07.762"></status>
</kw>
<msg timestamp="20201112 09:43:07.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.744" endtime="20201112 09:43:07.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.764" endtime="20201112 09:43:07.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.766" endtime="20201112 09:43:07.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.742" endtime="20201112 09:43:07.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.739" endtime="20201112 09:43:07.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.777" endtime="20201112 09:43:08.064"></status>
</kw>
<msg timestamp="20201112 09:43:08.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022787014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.775" endtime="20201112 09:43:08.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022787014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.068" endtime="20201112 09:43:08.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.077" endtime="20201112 09:43:08.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.773" endtime="20201112 09:43:08.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.771" endtime="20201112 09:43:08.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:08.084" level="INFO">${RESULT} = [{'time': 0.022787014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.29579999999996e-05, 'source_diff': 3.29579999999996e-05}, {'time': 0.022827278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:08.080" endtime="20201112 09:43:08.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:08.098" level="INFO">${ACCURACY} = {'diff': [3.29579999999996e-05, 3.2444999999999e-05, 3.241699999999986e-05, 3.299999999999831e-05, 3.1777000000000194e-05, 3.299999999999831e-05, 3.177799999999967e-05, 3.291700000000036e-05, 3.297199...</msg>
<status status="PASS" starttime="20201112 09:43:08.085" endtime="20201112 09:43:08.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.103" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 09:43:08.102" endtime="20201112 09:43:08.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.106" level="INFO">VALUE: [3.29579999999996e-05, 3.2444999999999e-05, 3.241699999999986e-05, 3.299999999999831e-05, 3.1777000000000194e-05, 3.299999999999831e-05, 3.177799999999967e-05, 3.291700000000036e-05, 3.297199999999917e-05, 3.298600000000221e-05, 3.302799999999745e-05, 3.236100000000158e-05, 3.298600000000221e-05, 3.116699999999861e-05, 3.298599999999874e-05, 3.236100000000158e-05, 3.115299999999904e-05, 3.238900000000072e-05, 3.29579999999996e-05, 3.297200000000264e-05, 3.115299999999904e-05, 3.298600000000221e-05, 3.17640000000001e-05, 3.2346999999998544e-05, 3.236100000000158e-05, 3.177800000000314e-05, 3.1790999999999764e-05, 3.17640000000001e-05, 3.177799999999967e-05, 3.237500000000115e-05, 3.177799999999967e-05, 3.1777000000000194e-05, 3.170900000000129e-05, 3.297199999999917e-05, 3.177800000000314e-05, 3.241600000000039e-05, 3.177799999999967e-05, 3.238900000000072e-05, 3.300000000000178e-05, 3.118000000000218e-05, 3.2360999999998113e-05, 3.177800000000314e-05, 3.298600000000221e-05, 3.238900000000072e-05, 3.293099999999993e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.17640000000001e-05, 3.297199999999917e-05]</msg>
<status status="PASS" starttime="20201112 09:43:08.104" endtime="20201112 09:43:08.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.099" endtime="20201112 09:43:08.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.110" endtime="20201112 09:43:08.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.114" endtime="20201112 09:43:08.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.112" endtime="20201112 09:43:08.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.108" endtime="20201112 09:43:08.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.738" endtime="20201112 09:43:08.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.737" endtime="20201112 09:43:08.135"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.144" endtime="20201112 09:43:08.160"></status>
</kw>
<msg timestamp="20201112 09:43:08.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.143" endtime="20201112 09:43:08.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.162" endtime="20201112 09:43:08.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.164" endtime="20201112 09:43:08.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.140" endtime="20201112 09:43:08.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.138" endtime="20201112 09:43:08.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.175" endtime="20201112 09:43:08.482"></status>
</kw>
<msg timestamp="20201112 09:43:08.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022879431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022913625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.173" endtime="20201112 09:43:08.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022879431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022913625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.487" endtime="20201112 09:43:08.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.495" endtime="20201112 09:43:08.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.170" endtime="20201112 09:43:08.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.168" endtime="20201112 09:43:08.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:08.502" level="INFO">${RESULT} = [{'time': 0.022913625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.419400000000128e-05, 'source_diff': 3.419400000000128e-05}, {'time': 0.022954056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:08.499" endtime="20201112 09:43:08.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:08.517" level="INFO">${ACCURACY} = {'diff': [3.419400000000128e-05, 3.479199999999877e-05, 3.355600000000056e-05, 3.424999999999956e-05, 3.4790999999999295e-05, 3.418100000000118e-05, 3.418000000000171e-05, 3.3596999999999794e-05, 3.41...</msg>
<status status="PASS" starttime="20201112 09:43:08.503" endtime="20201112 09:43:08.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.522" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 09:43:08.521" endtime="20201112 09:43:08.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.524" level="INFO">VALUE: [3.419400000000128e-05, 3.479199999999877e-05, 3.355600000000056e-05, 3.424999999999956e-05, 3.4790999999999295e-05, 3.418100000000118e-05, 3.418000000000171e-05, 3.3596999999999794e-05, 3.419500000000075e-05, 3.4791000000002764e-05, 3.479199999999877e-05, 3.541700000000286e-05, 3.357000000000013e-05, 3.419500000000075e-05, 3.419400000000128e-05, 3.3596999999999794e-05, 3.47779999999992e-05, 3.420900000000032e-05, 3.3540999999998045e-05, 3.354200000000099e-05, 3.479200000000224e-05, 3.420800000000085e-05, 3.419399999999781e-05, 3.476399999999963e-05, 3.479200000000224e-05, 3.3569000000000654e-05, 3.5402999999999823e-05, 3.4262999999999655e-05, 3.476399999999963e-05, 3.419500000000075e-05, 3.420899999999685e-05, 3.3583000000000224e-05, 3.3610999999999364e-05, 3.419500000000075e-05, 3.415300000000204e-05, 3.5402999999999823e-05, 3.3596999999999794e-05, 3.480599999999834e-05, 3.3610999999999364e-05, 3.3583000000000224e-05, 3.5402999999999823e-05, 3.5388999999996784e-05, 3.4097000000000294e-05, 3.4819000000001904e-05, 3.3583000000000224e-05, 3.358400000000317e-05, 3.418100000000118e-05, 3.479199999999877e-05, 3.3583000000000224e-05, 3.35839999999997e-05]</msg>
<status status="PASS" starttime="20201112 09:43:08.523" endtime="20201112 09:43:08.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.518" endtime="20201112 09:43:08.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.528" endtime="20201112 09:43:08.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.532" endtime="20201112 09:43:08.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.530" endtime="20201112 09:43:08.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.527" endtime="20201112 09:43:08.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.136" endtime="20201112 09:43:08.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.135" endtime="20201112 09:43:08.553"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.562" endtime="20201112 09:43:08.578"></status>
</kw>
<msg timestamp="20201112 09:43:08.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.560" endtime="20201112 09:43:08.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.579" endtime="20201112 09:43:08.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.582" endtime="20201112 09:43:08.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.558" endtime="20201112 09:43:08.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.555" endtime="20201112 09:43:08.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.592" endtime="20201112 09:43:08.878"></status>
</kw>
<msg timestamp="20201112 09:43:08.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022739542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022776181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.591" endtime="20201112 09:43:08.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022739542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022776181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.882" endtime="20201112 09:43:08.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.891" endtime="20201112 09:43:08.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.588" endtime="20201112 09:43:08.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.586" endtime="20201112 09:43:08.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:08.897" level="INFO">${RESULT} = [{'time': 0.022776181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6638999999998034e-05, 'source_diff': 3.6638999999998034e-05}, {'time': 0.022822417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:08.894" endtime="20201112 09:43:08.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:08.911" level="INFO">${ACCURACY} = {'diff': [3.6638999999998034e-05, 3.659800000000227e-05, 3.6596999999999325e-05, 3.605599999999959e-05, 3.605599999999959e-05, 3.722299999999942e-05, 3.722199999999995e-05, 3.5416999999999393e-05, 3.5...</msg>
<status status="PASS" starttime="20201112 09:43:08.898" endtime="20201112 09:43:08.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.916" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 09:43:08.915" endtime="20201112 09:43:08.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.919" level="INFO">VALUE: [3.6638999999998034e-05, 3.659800000000227e-05, 3.6596999999999325e-05, 3.605599999999959e-05, 3.605599999999959e-05, 3.722299999999942e-05, 3.722199999999995e-05, 3.5416999999999393e-05, 3.5375000000000684e-05, 3.600000000000131e-05, 3.658399999999923e-05, 3.666600000000117e-05, 3.599999999999784e-05, 3.6610999999998894e-05, 3.722199999999995e-05, 3.6611000000002364e-05, 3.5402999999999823e-05, 3.6625000000001934e-05, 3.6610999999998894e-05, 3.7194999999996814e-05, 3.601400000000088e-05, 3.600000000000131e-05, 3.5402999999999823e-05, 3.5416999999999393e-05, 3.5402999999999823e-05, 3.605599999999959e-05, 3.720899999999985e-05, 3.598599999999827e-05, 3.602800000000045e-05, 3.602800000000045e-05, 3.6582999999999755e-05, 3.538800000000078e-05, 3.5375000000000684e-05, 3.600000000000131e-05, 3.6596999999999325e-05, 3.595900000000207e-05, 3.5416999999999393e-05, 3.59719999999987e-05, 3.6611000000002364e-05, 3.719400000000081e-05, 3.720899999999985e-05, 3.6611000000002364e-05, 3.6596999999999325e-05, 3.6569000000000185e-05, 3.6610999999998894e-05, 3.540200000000035e-05, 3.5402999999999823e-05, 3.543100000000243e-05, 3.5402999999999823e-05, 3.5416999999999393e-05]</msg>
<status status="PASS" starttime="20201112 09:43:08.917" endtime="20201112 09:43:08.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.912" endtime="20201112 09:43:08.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.923" endtime="20201112 09:43:08.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.926" endtime="20201112 09:43:08.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.925" endtime="20201112 09:43:08.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.921" endtime="20201112 09:43:08.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.554" endtime="20201112 09:43:08.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.553" endtime="20201112 09:43:08.947"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.956" endtime="20201112 09:43:08.973"></status>
</kw>
<msg timestamp="20201112 09:43:08.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.955" endtime="20201112 09:43:08.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.974" endtime="20201112 09:43:08.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.977" endtime="20201112 09:43:08.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.952" endtime="20201112 09:43:08.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.950" endtime="20201112 09:43:08.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.987" endtime="20201112 09:43:09.273"></status>
</kw>
<msg timestamp="20201112 09:43:09.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022647944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.986" endtime="20201112 09:43:09.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022647944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022686986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.278" endtime="20201112 09:43:09.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.286" endtime="20201112 09:43:09.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.983" endtime="20201112 09:43:09.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.981" endtime="20201112 09:43:09.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:09.293" level="INFO">${RESULT} = [{'time': 0.022686986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.904199999999955e-05, 'source_diff': 3.904199999999955e-05}, {'time': 0.022734819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:09.290" endtime="20201112 09:43:09.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:09.307" level="INFO">${ACCURACY} = {'diff': [3.904199999999955e-05, 3.900000000000084e-05, 3.720799999999691e-05, 3.844400000000206e-05, 3.844399999999859e-05, 3.904199999999955e-05, 3.7819000000001435e-05, 3.779200000000177e-05, 3.909...</msg>
<status status="PASS" starttime="20201112 09:43:09.294" endtime="20201112 09:43:09.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.312" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 09:43:09.311" endtime="20201112 09:43:09.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.314" level="INFO">VALUE: [3.904199999999955e-05, 3.900000000000084e-05, 3.720799999999691e-05, 3.844400000000206e-05, 3.844399999999859e-05, 3.904199999999955e-05, 3.7819000000001435e-05, 3.779200000000177e-05, 3.90980000000013e-05, 3.842999999999902e-05, 3.8402999999999354e-05, 3.8416999999998924e-05, 3.780599999999787e-05, 3.7833000000001005e-05, 3.8430999999998494e-05, 3.900000000000084e-05, 3.7819000000001435e-05, 3.8402999999999354e-05, 3.8402999999999354e-05, 3.843000000000249e-05, 3.773600000000002e-05, 3.7847000000000575e-05, 3.776399999999916e-05, 3.8417000000002394e-05, 3.8416999999998924e-05, 3.901400000000041e-05, 3.8431000000001964e-05, 3.7805000000001865e-05, 3.900000000000084e-05, 3.9041000000000076e-05, 3.902799999999998e-05, 3.7180999999997244e-05, 3.7833000000001005e-05, 3.8444999999998064e-05, 3.904199999999955e-05, 3.776399999999916e-05, 3.8403000000002824e-05, 3.901400000000041e-05, 3.8431000000001964e-05, 3.8416999999998924e-05, 3.845800000000163e-05, 3.902799999999998e-05, 3.838800000000031e-05, 3.780599999999787e-05, 3.902799999999998e-05, 3.902799999999998e-05, 3.8402999999999354e-05, 3.8388999999999784e-05, 3.720899999999985e-05, 3.902799999999998e-05]</msg>
<status status="PASS" starttime="20201112 09:43:09.313" endtime="20201112 09:43:09.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.308" endtime="20201112 09:43:09.316"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.318" endtime="20201112 09:43:09.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:09.322" endtime="20201112 09:43:09.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.320" endtime="20201112 09:43:09.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.316" endtime="20201112 09:43:09.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.948" endtime="20201112 09:43:09.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.948" endtime="20201112 09:43:09.343"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.352" endtime="20201112 09:43:09.368"></status>
</kw>
<msg timestamp="20201112 09:43:09.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.350" endtime="20201112 09:43:09.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.370" endtime="20201112 09:43:09.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.372" endtime="20201112 09:43:09.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.347" endtime="20201112 09:43:09.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.345" endtime="20201112 09:43:09.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.383" endtime="20201112 09:43:09.669"></status>
</kw>
<msg timestamp="20201112 09:43:09.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022766847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022805875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.381" endtime="20201112 09:43:09.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022766847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022805875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.673" endtime="20201112 09:43:09.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.682" endtime="20201112 09:43:09.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.378" endtime="20201112 09:43:09.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.377" endtime="20201112 09:43:09.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:09.689" level="INFO">${RESULT} = [{'time': 0.022805875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902799999999998e-05, 'source_diff': 3.902799999999998e-05}, {'time': 0.022861917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:09.685" endtime="20201112 09:43:09.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:09.703" level="INFO">${ACCURACY} = {'diff': [3.902799999999998e-05, 4.083400000000001e-05, 3.9625000000001465e-05, 4.0847000000000105e-05, 3.901399999999694e-05, 4.023599999999905e-05, 4.083400000000001e-05, 4.0832999999997066e-05, 4.0...</msg>
<status status="PASS" starttime="20201112 09:43:09.690" endtime="20201112 09:43:09.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.707" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 09:43:09.706" endtime="20201112 09:43:09.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.710" level="INFO">VALUE: [3.902799999999998e-05, 4.083400000000001e-05, 3.9625000000001465e-05, 4.0847000000000105e-05, 3.901399999999694e-05, 4.023599999999905e-05, 4.083400000000001e-05, 4.0832999999997066e-05, 4.0847000000000105e-05, 4.0874999999999245e-05, 3.9653000000000604e-05, 3.9624999999997995e-05, 3.902799999999998e-05, 4.025000000000209e-05, 4.0860999999999675e-05, 3.9653000000000604e-05, 4.019400000000034e-05, 4.0847000000000105e-05, 3.9624999999997995e-05, 4.0860999999999675e-05, 4.018000000000077e-05, 4.0818999999997496e-05, 4.024999999999862e-05, 4.0236999999998524e-05, 4.0847000000000105e-05, 3.9625000000001465e-05, 4.0833000000000536e-05, 3.9652999999997135e-05, 4.023599999999905e-05, 3.9610999999998425e-05, 4.084799999999958e-05, 4.019400000000034e-05, 3.9624999999997995e-05, 3.9639000000001035e-05, 3.9653000000000604e-05, 4.144399999999812e-05, 4.0167000000000674e-05, 4.0209000000002854e-05, 3.9611000000001895e-05, 4.144399999999812e-05, 4.0847000000000105e-05, 4.0833000000000536e-05, 4.024999999999862e-05, 4.0847000000000105e-05, 4.0847000000000105e-05, 4.1431000000001494e-05, 3.904199999999955e-05, 4.023600000000252e-05, 4.023599999999905e-05, 4.0833000000000536e-05]</msg>
<status status="PASS" starttime="20201112 09:43:09.709" endtime="20201112 09:43:09.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.704" endtime="20201112 09:43:09.711"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.714" endtime="20201112 09:43:09.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:09.717" endtime="20201112 09:43:09.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.716" endtime="20201112 09:43:09.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.712" endtime="20201112 09:43:09.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.344" endtime="20201112 09:43:09.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.343" endtime="20201112 09:43:09.738"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.747" endtime="20201112 09:43:09.764"></status>
</kw>
<msg timestamp="20201112 09:43:09.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.746" endtime="20201112 09:43:09.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.765" endtime="20201112 09:43:09.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.768" endtime="20201112 09:43:09.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.743" endtime="20201112 09:43:09.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.741" endtime="20201112 09:43:09.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.779" endtime="20201112 09:43:10.066"></status>
</kw>
<msg timestamp="20201112 09:43:10.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022939569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022982278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.777" endtime="20201112 09:43:10.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022939569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022982278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.070" endtime="20201112 09:43:10.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.079" endtime="20201112 09:43:10.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.774" endtime="20201112 09:43:10.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.772" endtime="20201112 09:43:10.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:10.086" level="INFO">${RESULT} = [{'time': 0.022982278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2708999999998415e-05, 'source_diff': 4.2708999999998415e-05}, {'time': 0.023036542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:10.082" endtime="20201112 09:43:10.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:10.101" level="INFO">${ACCURACY} = {'diff': [4.2708999999998415e-05, 4.2653000000000135e-05, 4.14860000000003e-05, 4.1431000000001494e-05, 4.2054999999999176e-05, 4.2653000000000135e-05, 4.324999999999815e-05, 4.2653000000000135e-05, 4...</msg>
<status status="PASS" starttime="20201112 09:43:10.087" endtime="20201112 09:43:10.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.105" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 09:43:10.104" endtime="20201112 09:43:10.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.108" level="INFO">VALUE: [4.2708999999998415e-05, 4.2653000000000135e-05, 4.14860000000003e-05, 4.1431000000001494e-05, 4.2054999999999176e-05, 4.2653000000000135e-05, 4.324999999999815e-05, 4.2653000000000135e-05, 4.26799999999998e-05, 4.26799999999998e-05, 4.142999999999855e-05, 4.1430999999998025e-05, 4.202799999999951e-05, 4.204200000000255e-05, 4.272199999999851e-05, 4.26799999999998e-05, 4.3291000000000857e-05, 4.2653000000000135e-05, 4.269399999999937e-05, 4.2040999999999606e-05, 4.204199999999908e-05, 4.2639000000000565e-05, 4.2666999999999705e-05, 4.2652999999996666e-05, 4.2653000000000135e-05, 4.204199999999908e-05, 4.207000000000169e-05, 4.326400000000119e-05, 4.2680999999999275e-05, 4.2722999999997985e-05, 4.324999999999815e-05, 4.202799999999951e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.2040999999999606e-05, 4.258400000000176e-05, 4.204199999999908e-05, 4.2653000000000135e-05, 4.266600000000023e-05, 4.1430999999998025e-05, 4.204199999999908e-05, 4.1431000000001494e-05, 4.204199999999908e-05, 4.142999999999855e-05, 4.143000000000202e-05, 4.2027000000000037e-05, 4.325000000000162e-05, 4.2653000000000135e-05, 4.323599999999858e-05, 4.204199999999908e-05]</msg>
<status status="PASS" starttime="20201112 09:43:10.106" endtime="20201112 09:43:10.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.101" endtime="20201112 09:43:10.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.112" endtime="20201112 09:43:10.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:10.115" endtime="20201112 09:43:10.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.114" endtime="20201112 09:43:10.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.110" endtime="20201112 09:43:10.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.739" endtime="20201112 09:43:10.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.739" endtime="20201112 09:43:10.136"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.146" endtime="20201112 09:43:10.163"></status>
</kw>
<msg timestamp="20201112 09:43:10.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.144" endtime="20201112 09:43:10.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.164" endtime="20201112 09:43:10.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.167" endtime="20201112 09:43:10.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.141" endtime="20201112 09:43:10.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.139" endtime="20201112 09:43:10.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.177" endtime="20201112 09:43:10.463"></status>
</kw>
<msg timestamp="20201112 09:43:10.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023363819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023408264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.176" endtime="20201112 09:43:10.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023363819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023408264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.468" endtime="20201112 09:43:10.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.476" endtime="20201112 09:43:10.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.173" endtime="20201112 09:43:10.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.171" endtime="20201112 09:43:10.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:10.483" level="INFO">${RESULT} = [{'time': 0.023408264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4445000000000595e-05, 'source_diff': 4.4445000000000595e-05}, {'time': 0.023458389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:10.480" endtime="20201112 09:43:10.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:10.497" level="INFO">${ACCURACY} = {'diff': [4.4445000000000595e-05, 4.445800000000069e-05, 4.327800000000076e-05, 4.498600000000033e-05, 4.324999999999815e-05, 4.3860999999999206e-05, 4.3846999999999636e-05, 4.3846999999999636e-05, 4....</msg>
<status status="PASS" starttime="20201112 09:43:10.484" endtime="20201112 09:43:10.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.502" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 09:43:10.501" endtime="20201112 09:43:10.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.505" level="INFO">VALUE: [4.4445000000000595e-05, 4.445800000000069e-05, 4.327800000000076e-05, 4.498600000000033e-05, 4.324999999999815e-05, 4.3860999999999206e-05, 4.3846999999999636e-05, 4.3846999999999636e-05, 4.3874999999998776e-05, 4.448599999999983e-05, 4.447200000000026e-05, 4.324999999999815e-05, 4.445800000000069e-05, 4.3846999999999636e-05, 4.4445000000000595e-05, 4.4459000000000165e-05, 4.502800000000251e-05, 4.505499999999871e-05, 4.505599999999818e-05, 4.326399999999772e-05, 4.4459000000000165e-05, 4.326400000000119e-05, 4.3846999999999636e-05, 4.3833000000000066e-05, 4.445800000000069e-05, 4.448599999999983e-05, 4.325000000000162e-05, 4.3860999999999206e-05, 4.325000000000162e-05, 4.507000000000122e-05, 4.447200000000026e-05, 4.3861000000002676e-05, 4.506999999999775e-05, 4.3846999999999636e-05, 4.502799999999904e-05, 4.445800000000069e-05, 4.325000000000162e-05, 4.507000000000122e-05, 4.3860999999999206e-05, 4.447200000000026e-05, 4.4403000000001885e-05, 4.445800000000069e-05, 4.4445000000000595e-05, 4.324999999999815e-05, 4.505499999999871e-05, 4.325000000000162e-05, 4.3860999999999206e-05, 4.451399999999897e-05, 4.326400000000119e-05, 4.507000000000122e-05]</msg>
<status status="PASS" starttime="20201112 09:43:10.503" endtime="20201112 09:43:10.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.498" endtime="20201112 09:43:10.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.508" endtime="20201112 09:43:10.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:10.512" endtime="20201112 09:43:10.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.510" endtime="20201112 09:43:10.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.507" endtime="20201112 09:43:10.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.137" endtime="20201112 09:43:10.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.137" endtime="20201112 09:43:10.533"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.542" endtime="20201112 09:43:10.559"></status>
</kw>
<msg timestamp="20201112 09:43:10.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.540" endtime="20201112 09:43:10.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.560" endtime="20201112 09:43:10.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.563" endtime="20201112 09:43:10.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.538" endtime="20201112 09:43:10.566"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.535" endtime="20201112 09:43:10.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.573" endtime="20201112 09:43:10.860"></status>
</kw>
<msg timestamp="20201112 09:43:10.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022787972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022833028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.572" endtime="20201112 09:43:10.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022787972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022833028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.864" endtime="20201112 09:43:10.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.872" endtime="20201112 09:43:10.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.569" endtime="20201112 09:43:10.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.567" endtime="20201112 09:43:10.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:10.879" level="INFO">${RESULT} = [{'time': 0.022833028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.505599999999818e-05, 'source_diff': 4.505599999999818e-05}, {'time': 0.022893514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:10.876" endtime="20201112 09:43:10.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:10.893" level="INFO">${ACCURACY} = {'diff': [4.505599999999818e-05, 4.748599999999936e-05, 4.5652999999999666e-05, 4.6889000000001346e-05, 4.749999999999893e-05, 4.5666999999999236e-05, 4.6875000000001776e-05, 4.508400000000079e-05, 4....</msg>
<status status="PASS" starttime="20201112 09:43:10.880" endtime="20201112 09:43:10.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.898" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 09:43:10.897" endtime="20201112 09:43:10.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.901" level="INFO">VALUE: [4.505599999999818e-05, 4.748599999999936e-05, 4.5652999999999666e-05, 4.6889000000001346e-05, 4.749999999999893e-05, 4.5666999999999236e-05, 4.6875000000001776e-05, 4.508400000000079e-05, 4.6861000000002206e-05, 4.691599999999754e-05, 4.684699999999917e-05, 4.626399999999725e-05, 4.630599999999943e-05, 4.6903000000000916e-05, 4.684699999999917e-05, 4.5666999999999236e-05, 4.687499999999831e-05, 4.686099999999874e-05, 4.566599999999976e-05, 4.56939999999989e-05, 4.629199999999986e-05, 4.6889000000001346e-05, 4.5653000000003136e-05, 4.6889000000001346e-05, 4.561200000000043e-05, 4.505499999999871e-05, 4.630599999999943e-05, 4.6889000000001346e-05, 4.6889000000001346e-05, 4.626399999999725e-05, 4.627800000000029e-05, 4.687499999999831e-05, 4.626299999999778e-05, 4.688899999999788e-05, 4.566599999999976e-05, 4.567999999999933e-05, 4.6861000000002206e-05, 4.506999999999775e-05, 4.5666999999999236e-05, 4.627800000000029e-05, 4.5695000000001845e-05, 4.5681000000002275e-05, 4.561099999999749e-05, 4.5666999999999236e-05, 4.627700000000082e-05, 4.688899999999788e-05, 4.686200000000168e-05, 4.566599999999976e-05, 4.626399999999725e-05, 4.5680999999998806e-05]</msg>
<status status="PASS" starttime="20201112 09:43:10.899" endtime="20201112 09:43:10.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.894" endtime="20201112 09:43:10.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.905" endtime="20201112 09:43:10.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:10.908" endtime="20201112 09:43:10.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.907" endtime="20201112 09:43:10.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.903" endtime="20201112 09:43:10.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.534" endtime="20201112 09:43:10.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.533" endtime="20201112 09:43:10.929"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.938" endtime="20201112 09:43:10.955"></status>
</kw>
<msg timestamp="20201112 09:43:10.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.937" endtime="20201112 09:43:10.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.957" endtime="20201112 09:43:10.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.959" endtime="20201112 09:43:10.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.934" endtime="20201112 09:43:10.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.932" endtime="20201112 09:43:10.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.970" endtime="20201112 09:43:11.256"></status>
</kw>
<msg timestamp="20201112 09:43:11.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022766681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022815389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.968" endtime="20201112 09:43:11.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022766681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022815389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.260" endtime="20201112 09:43:11.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.269" endtime="20201112 09:43:11.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.966" endtime="20201112 09:43:11.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.964" endtime="20201112 09:43:11.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:11.276" level="INFO">${RESULT} = [{'time': 0.022815389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8707999999998e-05, 'source_diff': 4.8707999999998e-05}, {'time': 0.022879861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4...</msg>
<status status="PASS" starttime="20201112 09:43:11.272" endtime="20201112 09:43:11.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:11.290" level="INFO">${ACCURACY} = {'diff': [4.8707999999998e-05, 4.931900000000253e-05, 4.873600000000061e-05, 4.869399999999843e-05, 4.808399999999685e-05, 4.748599999999936e-05, 4.931999999999853e-05, 4.748599999999936e-05, 4.748599...</msg>
<status status="PASS" starttime="20201112 09:43:11.277" endtime="20201112 09:43:11.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.294" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 09:43:11.293" endtime="20201112 09:43:11.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.297" level="INFO">VALUE: [4.8707999999998e-05, 4.931900000000253e-05, 4.873600000000061e-05, 4.869399999999843e-05, 4.808399999999685e-05, 4.748599999999936e-05, 4.931999999999853e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.8722999999997046e-05, 4.748599999999936e-05, 4.927799999999982e-05, 4.927799999999982e-05, 4.812499999999956e-05, 4.808300000000085e-05, 4.747199999999979e-05, 4.808300000000085e-05, 4.812499999999956e-05, 4.808300000000085e-05, 4.808300000000085e-05, 4.927799999999982e-05, 4.930499999999949e-05, 4.86940000000019e-05, 4.808300000000085e-05, 4.929199999999939e-05, 4.86940000000019e-05, 4.8681000000001806e-05, 4.812499999999956e-05, 4.8695000000001376e-05, 4.808400000000032e-05, 4.925000000000068e-05, 4.808299999999738e-05, 4.926400000000025e-05, 4.806899999999781e-05, 4.86940000000019e-05, 4.863899999999963e-05, 4.747199999999979e-05, 4.929099999999992e-05, 4.930600000000243e-05, 4.929099999999992e-05, 4.929200000000286e-05, 4.749999999999893e-05, 4.8681000000001806e-05, 4.809799999999989e-05, 4.869399999999843e-05, 4.869499999999791e-05, 4.811099999999999e-05, 4.8709000000000946e-05, 4.748599999999936e-05, 4.930500000000296e-05]</msg>
<status status="PASS" starttime="20201112 09:43:11.295" endtime="20201112 09:43:11.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.291" endtime="20201112 09:43:11.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.305" endtime="20201112 09:43:11.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:11.309" endtime="20201112 09:43:11.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.307" endtime="20201112 09:43:11.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.303" endtime="20201112 09:43:11.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.930" endtime="20201112 09:43:11.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.930" endtime="20201112 09:43:11.330"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.339" endtime="20201112 09:43:11.357"></status>
</kw>
<msg timestamp="20201112 09:43:11.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.338" endtime="20201112 09:43:11.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.358" endtime="20201112 09:43:11.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.361" endtime="20201112 09:43:11.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.335" endtime="20201112 09:43:11.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.333" endtime="20201112 09:43:11.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.372" endtime="20201112 09:43:11.658"></status>
</kw>
<msg timestamp="20201112 09:43:11.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023109806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023159097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.370" endtime="20201112 09:43:11.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023109806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023159097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.662" endtime="20201112 09:43:11.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.671" endtime="20201112 09:43:11.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.367" endtime="20201112 09:43:11.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.365" endtime="20201112 09:43:11.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:11.677" level="INFO">${RESULT} = [{'time': 0.023159097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.929099999999992e-05, 'source_diff': 4.929099999999992e-05}, {'time': 0.023215375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:11.674" endtime="20201112 09:43:11.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:11.693" level="INFO">${ACCURACY} = {'diff': [4.929099999999992e-05, 5.111099999999952e-05, 5.051399999999803e-05, 5.051399999999803e-05, 5.049999999999846e-05, 4.9901999999997504e-05, 4.929099999999992e-05, 5.05270000000016e-05, 4.9889...</msg>
<status status="PASS" starttime="20201112 09:43:11.678" endtime="20201112 09:43:11.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.697" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 09:43:11.696" endtime="20201112 09:43:11.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.700" level="INFO">VALUE: [4.929099999999992e-05, 5.111099999999952e-05, 5.051399999999803e-05, 5.051399999999803e-05, 5.049999999999846e-05, 4.9901999999997504e-05, 4.929099999999992e-05, 5.05270000000016e-05, 4.988900000000088e-05, 5.044499999999966e-05, 5.054200000000064e-05, 4.9901999999997504e-05, 5.048600000000236e-05, 5.054200000000064e-05, 5.052800000000107e-05, 5.051399999999803e-05, 5.050000000000193e-05, 5.05279999999976e-05, 5.112499999999909e-05, 5.048599999999889e-05, 5.044400000000018e-05, 4.929099999999992e-05, 4.990300000000045e-05, 4.930599999999896e-05, 5.111100000000299e-05, 4.990300000000045e-05, 5.112500000000256e-05, 5.113899999999866e-05, 5.045799999999975e-05, 4.930599999999896e-05, 5.049999999999846e-05, 4.986099999999827e-05, 4.991700000000002e-05, 5.051399999999803e-05, 4.983299999999913e-05, 5.048599999999889e-05, 5.05140000000015e-05, 4.990300000000045e-05, 5.052800000000107e-05, 4.986100000000174e-05, 5.052800000000107e-05, 5.118100000000084e-05, 5.111099999999952e-05, 5.049999999999846e-05, 4.988900000000088e-05, 5.109699999999995e-05, 4.929200000000286e-05, 4.991700000000002e-05, 4.9901999999997504e-05, 4.991700000000002e-05]</msg>
<status status="PASS" starttime="20201112 09:43:11.698" endtime="20201112 09:43:11.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.694" endtime="20201112 09:43:11.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.704" endtime="20201112 09:43:11.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:11.707" endtime="20201112 09:43:11.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.706" endtime="20201112 09:43:11.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.702" endtime="20201112 09:43:11.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.331" endtime="20201112 09:43:11.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.331" endtime="20201112 09:43:11.728"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.737" endtime="20201112 09:43:11.755"></status>
</kw>
<msg timestamp="20201112 09:43:11.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.736" endtime="20201112 09:43:11.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.756" endtime="20201112 09:43:11.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.759" endtime="20201112 09:43:11.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.733" endtime="20201112 09:43:11.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.731" endtime="20201112 09:43:11.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.769" endtime="20201112 09:43:12.055"></status>
</kw>
<msg timestamp="20201112 09:43:12.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022907944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022960875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.768" endtime="20201112 09:43:12.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022907944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022960875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.059" endtime="20201112 09:43:12.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.068" endtime="20201112 09:43:12.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.765" endtime="20201112 09:43:12.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.763" endtime="20201112 09:43:12.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:12.075" level="INFO">${RESULT} = [{'time': 0.022960875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.293099999999912e-05, 'source_diff': 5.293099999999912e-05}, {'time': 0.023021236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:12.071" endtime="20201112 09:43:12.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:12.088" level="INFO">${ACCURACY} = {'diff': [5.293099999999912e-05, 5.1708000000001e-05, 5.291699999999955e-05, 5.2943999999999214e-05, 5.2916000000000074e-05, 5.2916000000000074e-05, 5.170900000000048e-05, 5.23340000000011e-05, 5.2276...</msg>
<status status="PASS" starttime="20201112 09:43:12.076" endtime="20201112 09:43:12.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.093" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 09:43:12.092" endtime="20201112 09:43:12.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.096" level="INFO">VALUE: [5.293099999999912e-05, 5.1708000000001e-05, 5.291699999999955e-05, 5.2943999999999214e-05, 5.2916000000000074e-05, 5.2916000000000074e-05, 5.170900000000048e-05, 5.23340000000011e-05, 5.227699999999988e-05, 5.23609999999973e-05, 5.1721999999997104e-05, 5.29730000000013e-05, 5.1721999999997104e-05, 5.236100000000077e-05, 5.2971999999998354e-05, 5.104200000000114e-05, 5.111199999999899e-05, 5.2929999999999644e-05, 5.23470000000012e-05, 5.293099999999912e-05, 5.1708000000001e-05, 5.300000000000096e-05, 5.2916000000000074e-05, 5.229199999999892e-05, 5.230499999999902e-05, 5.172200000000057e-05, 5.1708000000001e-05, 5.179200000000189e-05, 5.291699999999955e-05, 5.109699999999995e-05, 5.1708000000001e-05, 5.231999999999806e-05, 5.231999999999806e-05, 5.28609999999978e-05, 5.230600000000196e-05, 5.283300000000213e-05, 5.23340000000011e-05, 5.1708000000001e-05, 5.170900000000048e-05, 5.230499999999902e-05, 5.293100000000259e-05, 5.294499999999869e-05, 5.231899999999859e-05, 5.233300000000163e-05, 5.172200000000057e-05, 5.2916000000000074e-05, 5.293099999999912e-05, 5.170900000000048e-05, 5.232000000000153e-05, 5.293100000000259e-05]</msg>
<status status="PASS" starttime="20201112 09:43:12.094" endtime="20201112 09:43:12.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.089" endtime="20201112 09:43:12.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.100" endtime="20201112 09:43:12.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:12.103" endtime="20201112 09:43:12.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.101" endtime="20201112 09:43:12.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.098" endtime="20201112 09:43:12.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.729" endtime="20201112 09:43:12.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.728" endtime="20201112 09:43:12.124"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.133" endtime="20201112 09:43:12.150"></status>
</kw>
<msg timestamp="20201112 09:43:12.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.131" endtime="20201112 09:43:12.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.152" endtime="20201112 09:43:12.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.154" endtime="20201112 09:43:12.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.129" endtime="20201112 09:43:12.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.126" endtime="20201112 09:43:12.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.165" endtime="20201112 09:43:12.452"></status>
</kw>
<msg timestamp="20201112 09:43:12.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02250125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:12.163" endtime="20201112 09:43:12.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02250125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:12.456" endtime="20201112 09:43:12.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.465" endtime="20201112 09:43:12.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.161" endtime="20201112 09:43:12.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.159" endtime="20201112 09:43:12.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:12.472" level="INFO">${RESULT} = [{'time': 0.022555347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409699999999948e-05, 'source_diff': 5.409699999999948e-05}, {'time': 0.022623597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:12.468" endtime="20201112 09:43:12.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:12.486" level="INFO">${ACCURACY} = {'diff': [5.409699999999948e-05, 5.4749999999999244e-05, 5.35419999999967e-05, 5.35280000000006e-05, 5.533300000000116e-05, 5.3513999999997564e-05, 5.351400000000103e-05, 5.4735999999999674e-05, 5.352...</msg>
<status status="PASS" starttime="20201112 09:43:12.473" endtime="20201112 09:43:12.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.491" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 09:43:12.489" endtime="20201112 09:43:12.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.493" level="INFO">VALUE: [5.409699999999948e-05, 5.4749999999999244e-05, 5.35419999999967e-05, 5.35280000000006e-05, 5.533300000000116e-05, 5.3513999999997564e-05, 5.351400000000103e-05, 5.4735999999999674e-05, 5.352699999999766e-05, 5.4694000000000964e-05, 5.53610000000003e-05, 5.35410000000007e-05, 5.413899999999819e-05, 5.413900000000166e-05, 5.4749999999999244e-05, 5.416699999999733e-05, 5.413900000000166e-05, 5.35280000000006e-05, 5.35280000000006e-05, 5.4777999999998384e-05, 5.412499999999862e-05, 5.412500000000209e-05, 5.41670000000008e-05, 5.355599999999974e-05, 5.356899999999984e-05, 5.35280000000006e-05, 5.35280000000006e-05, 5.531899999999812e-05, 5.534700000000073e-05, 5.480600000000099e-05, 5.350000000000146e-05, 5.4735999999999674e-05, 5.411100000000252e-05, 5.415300000000123e-05, 5.4735999999999674e-05, 5.411099999999905e-05, 5.4708000000000534e-05, 5.41670000000008e-05, 5.415299999999776e-05, 5.4194000000000464e-05, 5.354200000000017e-05, 5.4735999999999674e-05, 5.465299999999826e-05, 5.466699999999783e-05, 5.4722000000000104e-05, 5.351400000000103e-05, 5.415299999999776e-05, 5.412499999999862e-05, 5.411199999999852e-05, 5.354200000000017e-05]</msg>
<status status="PASS" starttime="20201112 09:43:12.492" endtime="20201112 09:43:12.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.487" endtime="20201112 09:43:12.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.497" endtime="20201112 09:43:12.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:12.500" endtime="20201112 09:43:12.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.499" endtime="20201112 09:43:12.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.495" endtime="20201112 09:43:12.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.125" endtime="20201112 09:43:12.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.124" endtime="20201112 09:43:12.521"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.530" endtime="20201112 09:43:12.548"></status>
</kw>
<msg timestamp="20201112 09:43:12.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.529" endtime="20201112 09:43:12.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.549" endtime="20201112 09:43:12.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.552" endtime="20201112 09:43:12.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.526" endtime="20201112 09:43:12.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.524" endtime="20201112 09:43:12.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.562" endtime="20201112 09:43:12.848"></status>
</kw>
<msg timestamp="20201112 09:43:12.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022667458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022723417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.561" endtime="20201112 09:43:12.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022667458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022723417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.853" endtime="20201112 09:43:12.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.861" endtime="20201112 09:43:12.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.558" endtime="20201112 09:43:12.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.556" endtime="20201112 09:43:12.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:12.868" level="INFO">${RESULT} = [{'time': 0.022723417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.595899999999779e-05, 'source_diff': 5.595899999999779e-05}, {'time': 0.022785278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:12.864" endtime="20201112 09:43:12.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:12.882" level="INFO">${ACCURACY} = {'diff': [5.595899999999779e-05, 5.6541999999999704e-05, 5.713899999999772e-05, 5.659699999999851e-05, 5.595899999999779e-05, 5.533300000000116e-05, 5.594500000000169e-05, 5.715300000000076e-05, 5.534...</msg>
<status status="PASS" starttime="20201112 09:43:12.869" endtime="20201112 09:43:12.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.887" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 09:43:12.886" endtime="20201112 09:43:12.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.889" level="INFO">VALUE: [5.595899999999779e-05, 5.6541999999999704e-05, 5.713899999999772e-05, 5.659699999999851e-05, 5.595899999999779e-05, 5.533300000000116e-05, 5.594500000000169e-05, 5.715300000000076e-05, 5.534700000000073e-05, 5.53610000000003e-05, 5.7166000000000855e-05, 5.716700000000033e-05, 5.6555999999999274e-05, 5.6528000000000134e-05, 5.7180000000000425e-05, 5.6541999999999704e-05, 5.593099999999865e-05, 5.5972000000001354e-05, 5.715300000000076e-05, 5.5929999999999175e-05, 5.594500000000169e-05, 5.594500000000169e-05, 5.647299999999786e-05, 5.6499999999997524e-05, 5.706899999999987e-05, 5.6513999999997094e-05, 5.5929999999999175e-05, 5.6528000000000134e-05, 5.6541999999999704e-05, 5.533399999999716e-05, 5.713900000000119e-05, 5.534699999999726e-05, 5.533300000000116e-05, 5.533300000000116e-05, 5.6541999999999704e-05, 5.715300000000076e-05, 5.715300000000076e-05, 5.65549999999998e-05, 5.713900000000119e-05, 5.595900000000126e-05, 5.6569999999998843e-05, 5.540299999999901e-05, 5.654200000000317e-05, 5.5944000000002214e-05, 5.5943999999998745e-05, 5.5944000000002214e-05, 5.534700000000073e-05, 5.6541999999999704e-05, 5.534699999999726e-05, 5.713900000000119e-05]</msg>
<status status="PASS" starttime="20201112 09:43:12.888" endtime="20201112 09:43:12.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.883" endtime="20201112 09:43:12.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.893" endtime="20201112 09:43:12.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:12.897" endtime="20201112 09:43:12.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.895" endtime="20201112 09:43:12.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.891" endtime="20201112 09:43:12.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.522" endtime="20201112 09:43:12.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.522" endtime="20201112 09:43:12.918"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.927" endtime="20201112 09:43:12.945"></status>
</kw>
<msg timestamp="20201112 09:43:12.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.925" endtime="20201112 09:43:12.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.946" endtime="20201112 09:43:12.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.949" endtime="20201112 09:43:12.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.923" endtime="20201112 09:43:12.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.920" endtime="20201112 09:43:12.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.959" endtime="20201112 09:43:13.246"></status>
</kw>
<msg timestamp="20201112 09:43:13.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023146472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023203611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.958" endtime="20201112 09:43:13.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023146472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023203611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.250" endtime="20201112 09:43:13.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.259" endtime="20201112 09:43:13.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.955" endtime="20201112 09:43:13.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.953" endtime="20201112 09:43:13.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:13.266" level="INFO">${RESULT} = [{'time': 0.023203611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.713899999999772e-05, 'source_diff': 5.713899999999772e-05}, {'time': 0.023267806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:13.262" endtime="20201112 09:43:13.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:13.281" level="INFO">${ACCURACY} = {'diff': [5.713899999999772e-05, 5.83749999999994e-05, 5.7750000000002244e-05, 5.895900000000079e-05, 5.8958000000001315e-05, 5.888899999999947e-05, 5.8986000000000455e-05, 5.8958000000001315e-05, 5.8...</msg>
<status status="PASS" starttime="20201112 09:43:13.267" endtime="20201112 09:43:13.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.286" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 09:43:13.284" endtime="20201112 09:43:13.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.288" level="INFO">VALUE: [5.713899999999772e-05, 5.83749999999994e-05, 5.7750000000002244e-05, 5.895900000000079e-05, 5.8958000000001315e-05, 5.888899999999947e-05, 5.8986000000000455e-05, 5.8958000000001315e-05, 5.83749999999994e-05, 5.8930000000002175e-05, 5.7750000000002244e-05, 5.83749999999994e-05, 5.7778000000001384e-05, 5.838900000000244e-05, 5.83619999999993e-05, 5.7764000000001814e-05, 5.7735999999999205e-05, 5.7763999999998344e-05, 5.8971999999997415e-05, 5.836099999999983e-05, 5.7763999999998344e-05, 5.7763999999998344e-05, 5.8958000000001315e-05, 5.8958000000001315e-05, 5.836099999999983e-05, 5.8944000000001745e-05, 5.7777999999997914e-05, 5.7750000000002244e-05, 5.8333999999996694e-05, 5.7735999999999205e-05, 5.83619999999993e-05, 5.8943999999998276e-05, 5.837500000000287e-05, 5.776299999999887e-05, 5.8972000000000885e-05, 5.7735999999999205e-05, 5.7735999999999205e-05, 5.7151999999997816e-05, 5.7777999999997914e-05, 5.8971999999997415e-05, 5.8972000000000885e-05, 5.8958000000001315e-05, 5.8347999999999733e-05, 5.8958000000001315e-05, 5.902699999999969e-05, 5.7749999999998775e-05, 5.8306000000001024e-05, 5.7777999999997914e-05, 5.7193999999999995e-05, 5.8971999999997415e-05]</msg>
<status status="PASS" starttime="20201112 09:43:13.287" endtime="20201112 09:43:13.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.282" endtime="20201112 09:43:13.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.292" endtime="20201112 09:43:13.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:13.295" endtime="20201112 09:43:13.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.294" endtime="20201112 09:43:13.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.290" endtime="20201112 09:43:13.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.919" endtime="20201112 09:43:13.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.918" endtime="20201112 09:43:13.316"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.325" endtime="20201112 09:43:13.342"></status>
</kw>
<msg timestamp="20201112 09:43:13.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.324" endtime="20201112 09:43:13.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.344" endtime="20201112 09:43:13.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.346" endtime="20201112 09:43:13.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.321" endtime="20201112 09:43:13.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.319" endtime="20201112 09:43:13.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.357" endtime="20201112 09:43:13.642"></status>
</kw>
<msg timestamp="20201112 09:43:13.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022547833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.355" endtime="20201112 09:43:13.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022547833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.646" endtime="20201112 09:43:13.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.655" endtime="20201112 09:43:13.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.352" endtime="20201112 09:43:13.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.351" endtime="20201112 09:43:13.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:13.662" level="INFO">${RESULT} = [{'time': 0.022547833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0152000000000816e-05, 'source_diff': 6.0152000000000816e-05}, {'time': 0.022615417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:13.658" endtime="20201112 09:43:13.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:13.676" level="INFO">${ACCURACY} = {'diff': [6.0152000000000816e-05, 5.9555999999998804e-05, 6.13889999999985e-05, 6.079100000000101e-05, 5.958299999999847e-05, 5.95689999999989e-05, 5.95689999999989e-05, 5.958300000000194e-05, 5.95139...</msg>
<status status="PASS" starttime="20201112 09:43:13.663" endtime="20201112 09:43:13.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.681" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 09:43:13.680" endtime="20201112 09:43:13.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.683" level="INFO">VALUE: [6.0152000000000816e-05, 5.9555999999998804e-05, 6.13889999999985e-05, 6.079100000000101e-05, 5.958299999999847e-05, 5.95689999999989e-05, 5.95689999999989e-05, 5.958300000000194e-05, 5.9513999999996625e-05, 6.0166000000000386e-05, 6.0833999999999194e-05, 5.95689999999989e-05, 6.077699999999797e-05, 5.947300000000086e-05, 6.077700000000144e-05, 6.015299999999682e-05, 5.958300000000194e-05, 6.013899999999725e-05, 6.077699999999797e-05, 6.016699999999986e-05, 5.9541999999999234e-05, 6.018099999999943e-05, 6.070899999999907e-05, 6.0193999999999526e-05, 6.0166000000000386e-05, 5.9570000000001844e-05, 6.136099999999936e-05, 6.079100000000101e-05, 5.9569999999998374e-05, 5.95689999999989e-05, 6.018099999999943e-05, 5.958300000000194e-05, 6.016699999999986e-05, 6.016699999999986e-05, 5.956900000000237e-05, 5.958299999999847e-05, 6.0792000000000485e-05, 6.070899999999907e-05, 6.015300000000029e-05, 6.0750000000001775e-05, 6.0764000000001345e-05, 6.0792000000000485e-05, 6.0179999999999956e-05, 5.9583999999997944e-05, 6.0194999999999e-05, 6.13889999999985e-05, 6.0750000000001775e-05, 6.0222000000002135e-05, 6.0764000000001345e-05, 6.0694000000000026e-05]</msg>
<status status="PASS" starttime="20201112 09:43:13.682" endtime="20201112 09:43:13.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.677" endtime="20201112 09:43:13.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.687" endtime="20201112 09:43:13.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:13.691" endtime="20201112 09:43:13.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.689" endtime="20201112 09:43:13.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.685" endtime="20201112 09:43:13.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.317" endtime="20201112 09:43:13.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.317" endtime="20201112 09:43:13.712"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.720" endtime="20201112 09:43:13.739"></status>
</kw>
<msg timestamp="20201112 09:43:13.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.719" endtime="20201112 09:43:13.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.740" endtime="20201112 09:43:13.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.743" endtime="20201112 09:43:13.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.716" endtime="20201112 09:43:13.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.714" endtime="20201112 09:43:13.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.753" endtime="20201112 09:43:14.040"></status>
</kw>
<msg timestamp="20201112 09:43:14.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02254225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:13.752" endtime="20201112 09:43:14.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02254225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:14.044" endtime="20201112 09:43:14.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.052" endtime="20201112 09:43:14.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.749" endtime="20201112 09:43:14.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.747" endtime="20201112 09:43:14.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:14.059" level="INFO">${RESULT} = [{'time': 0.02254225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.727800000000048e-05, 'source_diff': 6.727800000000048e-05}, {'time': 0.02262225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:14.056" endtime="20201112 09:43:14.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:14.073" level="INFO">${ACCURACY} = {'diff': [6.727800000000048e-05, 6.899999999999962e-05, 6.786099999999892e-05, 6.736100000000189e-05, 6.876399999999894e-05, 6.741700000000017e-05, 6.840299999999813e-05, 6.824999999999887e-05, 6.7415...</msg>
<status status="PASS" starttime="20201112 09:43:14.061" endtime="20201112 09:43:14.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.078" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 09:43:14.077" endtime="20201112 09:43:14.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.081" level="INFO">VALUE: [6.727800000000048e-05, 6.899999999999962e-05, 6.786099999999892e-05, 6.736100000000189e-05, 6.876399999999894e-05, 6.741700000000017e-05, 6.840299999999813e-05, 6.824999999999887e-05, 6.741599999999723e-05, 6.816599999999798e-05, 6.713900000000078e-05, 6.765299999999738e-05, 6.847199999999998e-05, 6.874999999999937e-05, 6.756899999999996e-05, 6.89030000000021e-05, 6.868100000000099e-05, 6.78480000000023e-05, 6.87359999999998e-05, 6.755500000000039e-05, 6.826299999999896e-05, 6.879199999999808e-05, 6.85970000000001e-05, 6.843000000000127e-05, 6.89299999999983e-05, 6.884700000000035e-05, 6.845899999999988e-05, 6.884700000000035e-05, 6.708299999999903e-05, 6.72640000000009e-05, 6.874999999999937e-05, 6.811200000000212e-05, 6.809799999999908e-05, 6.791599999999773e-05, 6.751299999999821e-05, 6.893000000000177e-05, 6.899999999999962e-05, 6.824999999999887e-05, 6.879199999999808e-05, 6.808300000000003e-05, 6.80969999999996e-05, 6.857000000000044e-05, 6.809799999999908e-05, 6.724999999999787e-05, 6.861199999999915e-05, 6.743000000000027e-05, 6.777799999999751e-05, 6.776300000000193e-05, 6.89160000000022e-05, 6.751400000000116e-05]</msg>
<status status="PASS" starttime="20201112 09:43:14.079" endtime="20201112 09:43:14.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.074" endtime="20201112 09:43:14.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.084" endtime="20201112 09:43:14.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:14.088" endtime="20201112 09:43:14.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.086" endtime="20201112 09:43:14.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.083" endtime="20201112 09:43:14.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.712" endtime="20201112 09:43:14.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.712" endtime="20201112 09:43:14.109"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.118" endtime="20201112 09:43:14.136"></status>
</kw>
<msg timestamp="20201112 09:43:14.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.116" endtime="20201112 09:43:14.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.137" endtime="20201112 09:43:14.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.140" endtime="20201112 09:43:14.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.114" endtime="20201112 09:43:14.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.111" endtime="20201112 09:43:14.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.151" endtime="20201112 09:43:14.437"></status>
</kw>
<msg timestamp="20201112 09:43:14.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022323139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.149" endtime="20201112 09:43:14.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022323139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.441" endtime="20201112 09:43:14.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.450" endtime="20201112 09:43:14.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.146" endtime="20201112 09:43:14.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.144" endtime="20201112 09:43:14.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:14.457" level="INFO">${RESULT} = [{'time': 0.022393264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.012500000000074e-05, 'source_diff': 7.012500000000074e-05}, {'time': 0.022477264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:14.453" endtime="20201112 09:43:14.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:14.470" level="INFO">${ACCURACY} = {'diff': [7.012500000000074e-05, 7.076400000000094e-05, 7.093099999999977e-05, 6.932000000000119e-05, 7.09170000000002e-05, 7.016699999999945e-05, 6.966699999999895e-05, 6.930499999999867e-05, 6.90969...</msg>
<status status="PASS" starttime="20201112 09:43:14.458" endtime="20201112 09:43:14.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.475" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 09:43:14.474" endtime="20201112 09:43:14.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.478" level="INFO">VALUE: [7.012500000000074e-05, 7.076400000000094e-05, 7.093099999999977e-05, 6.932000000000119e-05, 7.09170000000002e-05, 7.016699999999945e-05, 6.966699999999895e-05, 6.930499999999867e-05, 6.909699999999713e-05, 6.99299999999993e-05, 6.919399999999812e-05, 7.050000000000112e-05, 7.075000000000137e-05, 7.04169999999997e-05, 6.912499999999974e-05, 7.070799999999919e-05, 6.933400000000076e-05, 6.99169999999992e-05, 6.918100000000149e-05, 6.920800000000116e-05, 6.915199999999941e-05, 7.016599999999998e-05, 6.969400000000209e-05, 7.066699999999995e-05, 7.015299999999988e-05, 7.084699999999888e-05, 6.94169999999987e-05, 7.050000000000112e-05, 6.977799999999951e-05, 7.00840000000015e-05, 7.04299999999998e-05, 7.034799999999786e-05, 7.006900000000246e-05, 6.990200000000016e-05, 7.101400000000119e-05, 6.95970000000011e-05, 7.05559999999994e-05, 6.90970000000006e-05, 6.958299999999806e-05, 6.993100000000224e-05, 7.083299999999931e-05, 6.941700000000217e-05, 6.969500000000156e-05, 6.983400000000126e-05, 6.975000000000037e-05, 7.097199999999901e-05, 7.098600000000205e-05, 6.975000000000037e-05, 7.054100000000035e-05, 7.044399999999937e-05]</msg>
<status status="PASS" starttime="20201112 09:43:14.476" endtime="20201112 09:43:14.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.471" endtime="20201112 09:43:14.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.482" endtime="20201112 09:43:14.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:14.485" endtime="20201112 09:43:14.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.484" endtime="20201112 09:43:14.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.480" endtime="20201112 09:43:14.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.110" endtime="20201112 09:43:14.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.109" endtime="20201112 09:43:14.506"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.515" endtime="20201112 09:43:14.534"></status>
</kw>
<msg timestamp="20201112 09:43:14.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.513" endtime="20201112 09:43:14.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.535" endtime="20201112 09:43:14.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.538" endtime="20201112 09:43:14.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.511" endtime="20201112 09:43:14.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.509" endtime="20201112 09:43:14.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.548" endtime="20201112 09:43:14.834"></status>
</kw>
<msg timestamp="20201112 09:43:14.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022831278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022903111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.547" endtime="20201112 09:43:14.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022831278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022903111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.838" endtime="20201112 09:43:14.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.847" endtime="20201112 09:43:14.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.544" endtime="20201112 09:43:14.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.542" endtime="20201112 09:43:14.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:14.854" level="INFO">${RESULT} = [{'time': 0.022903111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.183300000000031e-05, 'source_diff': 7.183300000000031e-05}, {'time': 0.022993125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:14.850" endtime="20201112 09:43:14.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:14.869" level="INFO">${ACCURACY} = {'diff': [7.183300000000031e-05, 7.277799999999904e-05, 7.143100000000027e-05, 7.205599999999743e-05, 7.208300000000056e-05, 7.286100000000045e-05, 7.125000000000187e-05, 7.165299999999791e-05, 7.2181...</msg>
<status status="PASS" starttime="20201112 09:43:14.855" endtime="20201112 09:43:14.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.874" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 09:43:14.873" endtime="20201112 09:43:14.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.876" level="INFO">VALUE: [7.183300000000031e-05, 7.277799999999904e-05, 7.143100000000027e-05, 7.205599999999743e-05, 7.208300000000056e-05, 7.286100000000045e-05, 7.125000000000187e-05, 7.165299999999791e-05, 7.218100000000102e-05, 7.222200000000026e-05, 7.118000000000055e-05, 7.234699999999691e-05, 7.226400000000244e-05, 7.259700000000063e-05, 7.175000000000237e-05, 7.113899999999784e-05, 7.276400000000294e-05, 7.108299999999956e-05, 7.10840000000025e-05, 7.143100000000027e-05, 7.131999999999972e-05, 7.184799999999936e-05, 7.118000000000055e-05, 7.219400000000112e-05, 7.238899999999909e-05, 7.163900000000181e-05, 7.19300000000013e-05, 7.184699999999988e-05, 7.190299999999816e-05, 7.169500000000009e-05, 7.118100000000002e-05, 7.233399999999682e-05, 7.190299999999816e-05, 7.284800000000036e-05, 7.109699999999913e-05, 7.226399999999897e-05, 7.20829999999971e-05, 7.159699999999963e-05, 7.259700000000063e-05, 7.27499999999999e-05, 7.118000000000055e-05, 7.175000000000237e-05, 7.108299999999956e-05, 7.245900000000041e-05, 7.22499999999994e-05, 7.126400000000144e-05, 7.17499999999989e-05, 7.118100000000002e-05, 7.108299999999956e-05, 7.12499999999984e-05]</msg>
<status status="PASS" starttime="20201112 09:43:14.875" endtime="20201112 09:43:14.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.870" endtime="20201112 09:43:14.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.880" endtime="20201112 09:43:14.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:14.884" endtime="20201112 09:43:14.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.882" endtime="20201112 09:43:14.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.878" endtime="20201112 09:43:14.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.507" endtime="20201112 09:43:14.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.506" endtime="20201112 09:43:14.905"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.914" endtime="20201112 09:43:14.932"></status>
</kw>
<msg timestamp="20201112 09:43:14.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.912" endtime="20201112 09:43:14.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.934" endtime="20201112 09:43:14.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.936" endtime="20201112 09:43:14.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.909" endtime="20201112 09:43:14.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.907" endtime="20201112 09:43:14.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.946" endtime="20201112 09:43:15.233"></status>
</kw>
<msg timestamp="20201112 09:43:15.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022460444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.945" endtime="20201112 09:43:15.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022460444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.237" endtime="20201112 09:43:15.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.246" endtime="20201112 09:43:15.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.942" endtime="20201112 09:43:15.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.940" endtime="20201112 09:43:15.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:15.253" level="INFO">${RESULT} = [{'time': 0.022460444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.455500000000045e-05, 'source_diff': 7.455500000000045e-05}, {'time': 0.022546444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:15.249" endtime="20201112 09:43:15.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:15.266" level="INFO">${ACCURACY} = {'diff': [7.455500000000045e-05, 7.465199999999797e-05, 7.398599999999811e-05, 7.492999999999736e-05, 7.333299999999834e-05, 7.409699999999866e-05, 7.436099999999848e-05, 7.451399999999775e-05, 7.4749...</msg>
<status status="PASS" starttime="20201112 09:43:15.254" endtime="20201112 09:43:15.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.271" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 09:43:15.270" endtime="20201112 09:43:15.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.274" level="INFO">VALUE: [7.455500000000045e-05, 7.465199999999797e-05, 7.398599999999811e-05, 7.492999999999736e-05, 7.333299999999834e-05, 7.409699999999866e-05, 7.436099999999848e-05, 7.451399999999775e-05, 7.474999999999843e-05, 7.311200000000018e-05, 7.391699999999973e-05, 7.368100000000252e-05, 7.316699999999898e-05, 7.400000000000115e-05, 7.309700000000113e-05, 7.39300000000033e-05, 7.416600000000051e-05, 7.331900000000224e-05, 7.4763999999998e-05, 7.42500000000014e-05, 7.32500000000004e-05, 7.4069999999999e-05, 7.474999999999843e-05, 7.391699999999973e-05, 7.36110000000012e-05, 7.463900000000134e-05, 7.367999999999958e-05, 7.336099999999748e-05, 7.420800000000269e-05, 7.426400000000097e-05, 7.352799999999979e-05, 7.469499999999962e-05, 7.426400000000097e-05, 7.327799999999954e-05, 7.49310000000003e-05, 7.416699999999998e-05, 7.333399999999782e-05, 7.484699999999941e-05, 7.344400000000237e-05, 7.499999999999868e-05, 7.448600000000208e-05, 7.384699999999841e-05, 7.32500000000004e-05, 7.37500000000009e-05, 7.427800000000054e-05, 7.49310000000003e-05, 7.430599999999968e-05, 7.391699999999973e-05, 7.386100000000145e-05, 7.459699999999916e-05]</msg>
<status status="PASS" starttime="20201112 09:43:15.272" endtime="20201112 09:43:15.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.267" endtime="20201112 09:43:15.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.277" endtime="20201112 09:43:15.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:15.281" endtime="20201112 09:43:15.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.279" endtime="20201112 09:43:15.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.276" endtime="20201112 09:43:15.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.906" endtime="20201112 09:43:15.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.905" endtime="20201112 09:43:15.302"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.311" endtime="20201112 09:43:15.330"></status>
</kw>
<msg timestamp="20201112 09:43:15.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.309" endtime="20201112 09:43:15.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.332" endtime="20201112 09:43:15.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.334" endtime="20201112 09:43:15.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.307" endtime="20201112 09:43:15.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.305" endtime="20201112 09:43:15.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.345" endtime="20201112 09:43:15.631"></status>
</kw>
<msg timestamp="20201112 09:43:15.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022460542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022536986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.343" endtime="20201112 09:43:15.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022460542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022536986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.635" endtime="20201112 09:43:15.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.644" endtime="20201112 09:43:15.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.340" endtime="20201112 09:43:15.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.339" endtime="20201112 09:43:15.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:15.651" level="INFO">${RESULT} = [{'time': 0.022536986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.644399999999843e-05, 'source_diff': 7.644399999999843e-05}, {'time': 0.022623069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:15.647" endtime="20201112 09:43:15.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:15.664" level="INFO">${ACCURACY} = {'diff': [7.644399999999843e-05, 7.633299999999787e-05, 7.595900000000044e-05, 7.534699999999991e-05, 7.508400000000304e-05, 7.54310000000008e-05, 7.548699999999908e-05, 7.591699999999826e-05, 7.61659...</msg>
<status status="PASS" starttime="20201112 09:43:15.652" endtime="20201112 09:43:15.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.669" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 09:43:15.668" endtime="20201112 09:43:15.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.672" level="INFO">VALUE: [7.644399999999843e-05, 7.633299999999787e-05, 7.595900000000044e-05, 7.534699999999991e-05, 7.508400000000304e-05, 7.54310000000008e-05, 7.548699999999908e-05, 7.591699999999826e-05, 7.616599999999904e-05, 7.650000000000018e-05, 7.677799999999957e-05, 7.519400000000065e-05, 7.609700000000066e-05, 7.606999999999753e-05, 7.593099999999783e-05, 7.565300000000191e-05, 7.581999999999728e-05, 7.675000000000043e-05, 7.54029999999982e-05, 7.598699999999958e-05, 7.640199999999972e-05, 7.561099999999973e-05, 7.62639999999995e-05, 7.673600000000086e-05, 7.674999999999696e-05, 7.62639999999995e-05, 7.544500000000037e-05, 7.518100000000055e-05, 7.681999999999828e-05, 7.508399999999957e-05, 7.66250000000003e-05, 7.591700000000173e-05, 7.683300000000184e-05, 7.692999999999936e-05, 7.647200000000104e-05, 7.60830000000011e-05, 7.675000000000043e-05, 7.59310000000013e-05, 7.601400000000272e-05, 7.69029999999997e-05, 7.668099999999858e-05, 7.684800000000089e-05, 7.559799999999964e-05, 7.593000000000183e-05, 7.566599999999854e-05, 7.684700000000141e-05, 7.656899999999855e-05, 7.541599999999829e-05, 7.566700000000148e-05, 7.698600000000111e-05]</msg>
<status status="PASS" starttime="20201112 09:43:15.670" endtime="20201112 09:43:15.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.665" endtime="20201112 09:43:15.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.675" endtime="20201112 09:43:15.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:15.679" endtime="20201112 09:43:15.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.677" endtime="20201112 09:43:15.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.674" endtime="20201112 09:43:15.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.303" endtime="20201112 09:43:15.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.302" endtime="20201112 09:43:15.700"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.709" endtime="20201112 09:43:15.728"></status>
</kw>
<msg timestamp="20201112 09:43:15.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.707" endtime="20201112 09:43:15.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.729" endtime="20201112 09:43:15.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.732" endtime="20201112 09:43:15.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.705" endtime="20201112 09:43:15.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.703" endtime="20201112 09:43:15.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.742" endtime="20201112 09:43:16.029"></status>
</kw>
<msg timestamp="20201112 09:43:16.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022541861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022619222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.741" endtime="20201112 09:43:16.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022541861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022619222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.033" endtime="20201112 09:43:16.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.042" endtime="20201112 09:43:16.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.738" endtime="20201112 09:43:16.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.736" endtime="20201112 09:43:16.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:16.049" level="INFO">${RESULT} = [{'time': 0.022619222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.736100000000148e-05, 'source_diff': 7.736100000000148e-05}, {'time': 0.022715222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:16.045" endtime="20201112 09:43:16.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:16.062" level="INFO">${ACCURACY} = {'diff': [7.736100000000148e-05, 7.848599999999914e-05, 7.794399999999993e-05, 7.883300000000037e-05, 7.754199999999989e-05, 7.745899999999847e-05, 7.865299999999797e-05, 7.786200000000146e-05, 7.8264...</msg>
<status status="PASS" starttime="20201112 09:43:16.050" endtime="20201112 09:43:16.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.067" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 09:43:16.066" endtime="20201112 09:43:16.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.070" level="INFO">VALUE: [7.736100000000148e-05, 7.848599999999914e-05, 7.794399999999993e-05, 7.883300000000037e-05, 7.754199999999989e-05, 7.745899999999847e-05, 7.865299999999797e-05, 7.786200000000146e-05, 7.82640000000015e-05, 7.751400000000075e-05, 7.873599999999939e-05, 7.80969999999992e-05, 7.843000000000086e-05, 7.823600000000236e-05, 7.800000000000168e-05, 7.900000000000268e-05, 7.852800000000132e-05, 7.841700000000076e-05, 7.716699999999951e-05, 7.736200000000096e-05, 7.826399999999803e-05, 7.79030000000007e-05, 7.783299999999937e-05, 7.8764000000002e-05, 7.893000000000136e-05, 7.844400000000043e-05, 7.841700000000076e-05, 7.844400000000043e-05, 7.843100000000033e-05, 7.868100000000058e-05, 7.763900000000087e-05, 7.895899999999997e-05, 7.793099999999983e-05, 7.716600000000004e-05, 7.818000000000061e-05, 7.899999999999921e-05, 7.844400000000043e-05, 7.825000000000193e-05, 7.851399999999828e-05, 7.847300000000251e-05, 7.876399999999853e-05, 7.825000000000193e-05, 7.811199999999824e-05, 7.74030000000002e-05, 7.868100000000058e-05, 7.736099999999801e-05, 7.740200000000072e-05, 7.850000000000218e-05, 7.774999999999796e-05, 7.744399999999943e-05]</msg>
<status status="PASS" starttime="20201112 09:43:16.068" endtime="20201112 09:43:16.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.063" endtime="20201112 09:43:16.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.073" endtime="20201112 09:43:16.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:16.077" endtime="20201112 09:43:16.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.075" endtime="20201112 09:43:16.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.072" endtime="20201112 09:43:16.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.701" endtime="20201112 09:43:16.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.700" endtime="20201112 09:43:16.098"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.107" endtime="20201112 09:43:16.126"></status>
</kw>
<msg timestamp="20201112 09:43:16.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.105" endtime="20201112 09:43:16.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.127" endtime="20201112 09:43:16.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.130" endtime="20201112 09:43:16.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.103" endtime="20201112 09:43:16.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.100" endtime="20201112 09:43:16.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.140" endtime="20201112 09:43:16.427"></status>
</kw>
<msg timestamp="20201112 09:43:16.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0227085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022789069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:16.139" endtime="20201112 09:43:16.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0227085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022789069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:16.431" endtime="20201112 09:43:16.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.440" endtime="20201112 09:43:16.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.136" endtime="20201112 09:43:16.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.134" endtime="20201112 09:43:16.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:16.447" level="INFO">${RESULT} = [{'time': 0.022789069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.056899999999909e-05, 'source_diff': 8.056899999999909e-05}, {'time': 0.022883097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:16.443" endtime="20201112 09:43:16.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:16.462" level="INFO">${ACCURACY} = {'diff': [8.056899999999909e-05, 8.00970000000012e-05, 7.994399999999846e-05, 7.94030000000022e-05, 8.008299999999816e-05, 7.958300000000113e-05, 8.09450000000024e-05, 7.951400000000275e-05, 8.0930999...</msg>
<status status="PASS" starttime="20201112 09:43:16.448" endtime="20201112 09:43:16.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.467" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 09:43:16.466" endtime="20201112 09:43:16.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.469" level="INFO">VALUE: [8.056899999999909e-05, 8.00970000000012e-05, 7.994399999999846e-05, 7.94030000000022e-05, 8.008299999999816e-05, 7.958300000000113e-05, 8.09450000000024e-05, 7.951400000000275e-05, 8.093099999999936e-05, 8.000000000000021e-05, 7.99169999999988e-05, 8.00130000000003e-05, 8.040299999999972e-05, 8.000000000000021e-05, 7.941599999999882e-05, 8.066699999999954e-05, 8.073600000000139e-05, 8.101400000000078e-05, 7.908300000000063e-05, 8.056999999999856e-05, 8.059800000000117e-05, 8.04169999999993e-05, 7.918000000000161e-05, 8.040299999999972e-05, 8.058299999999866e-05, 8.088900000000065e-05, 8.101399999999731e-05, 8.09169999999998e-05, 8.036100000000101e-05, 8.073600000000139e-05, 8.05970000000017e-05, 8.076400000000053e-05, 8.043099999999886e-05, 7.974999999999996e-05, 8.034699999999798e-05, 7.976399999999953e-05, 7.95970000000007e-05, 8.065299999999997e-05, 8.073599999999792e-05, 7.988900000000312e-05, 8.100000000000121e-05, 7.955600000000146e-05, 8.024999999999699e-05, 7.958399999999713e-05, 8.043099999999886e-05, 8.001399999999978e-05, 7.908300000000063e-05, 7.990199999999975e-05, 8.016599999999957e-05, 7.969400000000168e-05]</msg>
<status status="PASS" starttime="20201112 09:43:16.468" endtime="20201112 09:43:16.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.463" endtime="20201112 09:43:16.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.477" endtime="20201112 09:43:16.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:16.480" endtime="20201112 09:43:16.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.479" endtime="20201112 09:43:16.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.475" endtime="20201112 09:43:16.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.099" endtime="20201112 09:43:16.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.098" endtime="20201112 09:43:16.501"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.510" endtime="20201112 09:43:16.529"></status>
</kw>
<msg timestamp="20201112 09:43:16.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.509" endtime="20201112 09:43:16.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.531" endtime="20201112 09:43:16.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.533" endtime="20201112 09:43:16.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.506" endtime="20201112 09:43:16.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.504" endtime="20201112 09:43:16.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.544" endtime="20201112 09:43:16.829"></status>
</kw>
<msg timestamp="20201112 09:43:16.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022599681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.542" endtime="20201112 09:43:16.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022599681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.833" endtime="20201112 09:43:16.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.842" endtime="20201112 09:43:16.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.539" endtime="20201112 09:43:16.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.538" endtime="20201112 09:43:16.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:16.849" level="INFO">${RESULT} = [{'time': 0.022599681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.294500000000093e-05, 'source_diff': 8.294500000000093e-05}, {'time': 0.022693694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:16.845" endtime="20201112 09:43:16.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:16.863" level="INFO">${ACCURACY} = {'diff': [8.294500000000093e-05, 8.276299999999959e-05, 8.234699999999998e-05, 8.13329999999994e-05, 8.241600000000182e-05, 8.201399999999831e-05, 8.176400000000153e-05, 8.259700000000023e-05, 8.19030...</msg>
<status status="PASS" starttime="20201112 09:43:16.850" endtime="20201112 09:43:16.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.867" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 09:43:16.866" endtime="20201112 09:43:16.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.870" level="INFO">VALUE: [8.294500000000093e-05, 8.276299999999959e-05, 8.234699999999998e-05, 8.13329999999994e-05, 8.241600000000182e-05, 8.201399999999831e-05, 8.176400000000153e-05, 8.259700000000023e-05, 8.190300000000122e-05, 8.249999999999924e-05, 8.220899999999975e-05, 8.231900000000084e-05, 8.259700000000023e-05, 8.111100000000177e-05, 8.191599999999785e-05, 8.198599999999917e-05, 8.227799999999813e-05, 8.194499999999993e-05, 8.116700000000004e-05, 8.134699999999898e-05, 8.161100000000227e-05, 8.222299999999932e-05, 8.126400000000103e-05, 8.295800000000103e-05, 8.113799999999796e-05, 8.201400000000178e-05, 8.209699999999973e-05, 8.126399999999756e-05, 8.224999999999899e-05, 8.176400000000153e-05, 8.193100000000036e-05, 8.119499999999918e-05, 8.266700000000154e-05, 8.133399999999888e-05, 8.10840000000021e-05, 8.177700000000163e-05, 8.26109999999998e-05, 8.176400000000153e-05, 8.126400000000103e-05, 8.19170000000008e-05, 8.220899999999975e-05, 8.198600000000264e-05, 8.243100000000086e-05, 8.299999999999974e-05, 8.108399999999863e-05, 8.14170000000003e-05, 8.299999999999974e-05, 8.242999999999792e-05, 8.267999999999817e-05, 8.190299999999776e-05]</msg>
<status status="PASS" starttime="20201112 09:43:16.868" endtime="20201112 09:43:16.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.864" endtime="20201112 09:43:16.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.874" endtime="20201112 09:43:16.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:16.877" endtime="20201112 09:43:16.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.876" endtime="20201112 09:43:16.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.872" endtime="20201112 09:43:16.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.502" endtime="20201112 09:43:16.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.502" endtime="20201112 09:43:16.898"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.907" endtime="20201112 09:43:16.926"></status>
</kw>
<msg timestamp="20201112 09:43:16.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.906" endtime="20201112 09:43:16.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.928" endtime="20201112 09:43:16.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.931" endtime="20201112 09:43:16.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.903" endtime="20201112 09:43:16.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.901" endtime="20201112 09:43:16.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.941" endtime="20201112 09:43:17.227"></status>
</kw>
<msg timestamp="20201112 09:43:17.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022567417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022650542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.940" endtime="20201112 09:43:17.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022567417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022650542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.231" endtime="20201112 09:43:17.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.240" endtime="20201112 09:43:17.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.937" endtime="20201112 09:43:17.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.935" endtime="20201112 09:43:17.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:17.247" level="INFO">${RESULT} = [{'time': 0.022650542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.312499999999987e-05, 'source_diff': 8.312499999999987e-05}, {'time': 0.022748569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:17.243" endtime="20201112 09:43:17.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:17.261" level="INFO">${ACCURACY} = {'diff': [8.312499999999987e-05, 8.429100000000023e-05, 8.39309999999989e-05, 8.331900000000184e-05, 8.324999999999999e-05, 8.458299999999919e-05, 8.373600000000092e-05, 8.376400000000006e-05, 8.49309...</msg>
<status status="PASS" starttime="20201112 09:43:17.248" endtime="20201112 09:43:17.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.266" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 09:43:17.265" endtime="20201112 09:43:17.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.269" level="INFO">VALUE: [8.312499999999987e-05, 8.429100000000023e-05, 8.39309999999989e-05, 8.331900000000184e-05, 8.324999999999999e-05, 8.458299999999919e-05, 8.373600000000092e-05, 8.376400000000006e-05, 8.49309999999999e-05, 8.384700000000148e-05, 8.491700000000033e-05, 8.434799999999798e-05, 8.458400000000213e-05, 8.458399999999866e-05, 8.338800000000021e-05, 8.501399999999784e-05, 8.394400000000246e-05, 8.466599999999713e-05, 8.504200000000045e-05, 8.344500000000143e-05, 8.369499999999822e-05, 8.38330000000019e-05, 8.490300000000076e-05, 8.404099999999998e-05, 8.343100000000186e-05, 8.351299999999687e-05, 8.427800000000013e-05, 8.391599999999985e-05, 8.386100000000105e-05, 8.408300000000216e-05, 8.4846999999999e-05, 8.450000000000124e-05, 8.455599999999952e-05, 8.441699999999983e-05, 8.369499999999822e-05, 8.369399999999874e-05, 8.434700000000198e-05, 8.32919999999987e-05, 8.440300000000026e-05, 8.429099999999676e-05, 8.359700000000123e-05, 8.49309999999999e-05, 8.468099999999965e-05, 8.473600000000192e-05, 8.459699999999876e-05, 8.505500000000055e-05, 8.343000000000239e-05, 8.36659999999996e-05, 8.354200000000242e-05, 8.390199999999681e-05]</msg>
<status status="PASS" starttime="20201112 09:43:17.267" endtime="20201112 09:43:17.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.262" endtime="20201112 09:43:17.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.272" endtime="20201112 09:43:17.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:17.276" endtime="20201112 09:43:17.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.274" endtime="20201112 09:43:17.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.271" endtime="20201112 09:43:17.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.899" endtime="20201112 09:43:17.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.898" endtime="20201112 09:43:17.297"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.306" endtime="20201112 09:43:17.325"></status>
</kw>
<msg timestamp="20201112 09:43:17.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.304" endtime="20201112 09:43:17.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.327" endtime="20201112 09:43:17.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.330" endtime="20201112 09:43:17.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.302" endtime="20201112 09:43:17.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.300" endtime="20201112 09:43:17.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.340" endtime="20201112 09:43:17.626"></status>
</kw>
<msg timestamp="20201112 09:43:17.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.338" endtime="20201112 09:43:17.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022546472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.630" endtime="20201112 09:43:17.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.639" endtime="20201112 09:43:17.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.336" endtime="20201112 09:43:17.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.334" endtime="20201112 09:43:17.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:17.646" level="INFO">${RESULT} = [{'time': 0.022632208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.573599999999945e-05, 'source_diff': 8.573599999999945e-05}, {'time': 0.022732222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:17.642" endtime="20201112 09:43:17.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:17.660" level="INFO">${ACCURACY} = {'diff': [8.573599999999945e-05, 8.561099999999933e-05, 8.677799999999916e-05, 8.577799999999816e-05, 8.559699999999976e-05, 8.644500000000097e-05, 8.5847e-05, 8.675000000000002e-05, 8.623599999999995...</msg>
<status status="PASS" starttime="20201112 09:43:17.647" endtime="20201112 09:43:17.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.664" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 09:43:17.663" endtime="20201112 09:43:17.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.667" level="INFO">VALUE: [8.573599999999945e-05, 8.561099999999933e-05, 8.677799999999916e-05, 8.577799999999816e-05, 8.559699999999976e-05, 8.644500000000097e-05, 8.5847e-05, 8.675000000000002e-05, 8.623599999999995e-05, 8.686200000000005e-05, 8.573599999999945e-05, 8.568000000000117e-05, 8.536099999999908e-05, 8.526399999999809e-05, 8.626399999999909e-05, 8.533299999999994e-05, 8.676399999999959e-05, 8.69310000000019e-05, 8.649999999999977e-05, 8.625000000000299e-05, 8.526399999999809e-05, 8.573699999999893e-05, 8.652700000000291e-05, 8.574999999999902e-05, 8.624999999999952e-05, 8.606900000000112e-05, 8.637500000000312e-05, 8.5847e-05, 8.609700000000026e-05, 8.54310000000004e-05, 8.536199999999855e-05, 8.558399999999966e-05, 8.541699999999736e-05, 8.519499999999972e-05, 8.586100000000305e-05, 8.59310000000009e-05, 8.549999999999877e-05, 8.541700000000083e-05, 8.636100000000008e-05, 8.675000000000002e-05, 8.594500000000047e-05, 8.633400000000041e-05, 8.654199999999848e-05, 8.541700000000083e-05, 8.61660000000021e-05, 8.549999999999877e-05, 8.642999999999845e-05, 8.59859999999997e-05, 8.591700000000133e-05, 8.563900000000194e-05]</msg>
<status status="PASS" starttime="20201112 09:43:17.665" endtime="20201112 09:43:17.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.661" endtime="20201112 09:43:17.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.671" endtime="20201112 09:43:17.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:17.674" endtime="20201112 09:43:17.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.673" endtime="20201112 09:43:17.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.669" endtime="20201112 09:43:17.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.298" endtime="20201112 09:43:17.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.297" endtime="20201112 09:43:17.695"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.704" endtime="20201112 09:43:17.722"></status>
</kw>
<msg timestamp="20201112 09:43:17.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.703" endtime="20201112 09:43:17.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.724" endtime="20201112 09:43:17.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.727" endtime="20201112 09:43:17.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.700" endtime="20201112 09:43:17.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.698" endtime="20201112 09:43:17.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.737" endtime="20201112 09:43:18.023"></status>
</kw>
<msg timestamp="20201112 09:43:18.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022406847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.735" endtime="20201112 09:43:18.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022406847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.027" endtime="20201112 09:43:18.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.035" endtime="20201112 09:43:18.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.733" endtime="20201112 09:43:18.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.731" endtime="20201112 09:43:18.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:18.042" level="INFO">${RESULT} = [{'time': 0.022494792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.7944999999999e-05, 'source_diff': 8.7944999999999e-05}, {'time': 0.022598819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201112 09:43:18.039" endtime="20201112 09:43:18.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:18.057" level="INFO">${ACCURACY} = {'diff': [8.7944999999999e-05, 8.826299999999815e-05, 8.761100000000133e-05, 8.791600000000038e-05, 8.815300000000054e-05, 8.716599999999963e-05, 8.883299999999997e-05, 8.876399999999812e-05, 8.879200...</msg>
<status status="PASS" starttime="20201112 09:43:18.043" endtime="20201112 09:43:18.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.062" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 09:43:18.061" endtime="20201112 09:43:18.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.065" level="INFO">VALUE: [8.7944999999999e-05, 8.826299999999815e-05, 8.761100000000133e-05, 8.791600000000038e-05, 8.815300000000054e-05, 8.716599999999963e-05, 8.883299999999997e-05, 8.876399999999812e-05, 8.879200000000073e-05, 8.874999999999855e-05, 8.758399999999819e-05, 8.737500000000065e-05, 8.79999999999978e-05, 8.720800000000181e-05, 8.792999999999995e-05, 8.834700000000251e-05, 8.826399999999762e-05, 8.869400000000027e-05, 8.777800000000016e-05, 8.787500000000115e-05, 8.747200000000163e-05, 8.726400000000009e-05, 8.777700000000069e-05, 8.774999999999755e-05, 8.890199999999834e-05, 8.783299999999897e-05, 8.715299999999954e-05, 8.772199999999841e-05, 8.891699999999739e-05, 8.754199999999948e-05, 8.723599999999748e-05, 8.843099999999993e-05, 8.836200000000155e-05, 8.726300000000062e-05, 8.709700000000126e-05, 8.843000000000045e-05, 8.880500000000083e-05, 8.759700000000176e-05, 8.843000000000045e-05, 8.818099999999968e-05, 8.736100000000108e-05, 8.809699999999879e-05, 8.858399999999919e-05, 8.859699999999929e-05, 8.790300000000029e-05, 8.902699999999847e-05, 8.752700000000044e-05, 8.791600000000038e-05, 8.823600000000195e-05, 8.86670000000006e-05]</msg>
<status status="PASS" starttime="20201112 09:43:18.063" endtime="20201112 09:43:18.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.058" endtime="20201112 09:43:18.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.068" endtime="20201112 09:43:18.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:18.072" endtime="20201112 09:43:18.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.070" endtime="20201112 09:43:18.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.067" endtime="20201112 09:43:18.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.696" endtime="20201112 09:43:18.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.695" endtime="20201112 09:43:18.093"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.102" endtime="20201112 09:43:18.121"></status>
</kw>
<msg timestamp="20201112 09:43:18.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.100" endtime="20201112 09:43:18.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.123" endtime="20201112 09:43:18.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.125" endtime="20201112 09:43:18.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.098" endtime="20201112 09:43:18.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.095" endtime="20201112 09:43:18.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.136" endtime="20201112 09:43:18.422"></status>
</kw>
<msg timestamp="20201112 09:43:18.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022491403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022581014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.134" endtime="20201112 09:43:18.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022491403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022581014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.426" endtime="20201112 09:43:18.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.435" endtime="20201112 09:43:18.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.131" endtime="20201112 09:43:18.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.130" endtime="20201112 09:43:18.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:18.442" level="INFO">${RESULT} = [{'time': 0.022581014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.961099999999986e-05, 'source_diff': 8.961099999999986e-05}, {'time': 0.022689028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:18.438" endtime="20201112 09:43:18.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:18.456" level="INFO">${ACCURACY} = {'diff': [8.961099999999986e-05, 8.941700000000136e-05, 8.933399999999994e-05, 8.958399999999672e-05, 9.058399999999772e-05, 9.069400000000227e-05, 8.941599999999841e-05, 8.91800000000012e-05, 9.03470...</msg>
<status status="PASS" starttime="20201112 09:43:18.443" endtime="20201112 09:43:18.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.461" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 09:43:18.459" endtime="20201112 09:43:18.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.463" level="INFO">VALUE: [8.961099999999986e-05, 8.941700000000136e-05, 8.933399999999994e-05, 8.958399999999672e-05, 9.058399999999772e-05, 9.069400000000227e-05, 8.941599999999841e-05, 8.91800000000012e-05, 9.034700000000104e-05, 9.011100000000036e-05, 8.94450000000005e-05, 9.052799999999944e-05, 9.041700000000236e-05, 8.973599999999998e-05, 9.042999999999898e-05, 9.019400000000177e-05, 9.059800000000076e-05, 9.076400000000012e-05, 9.072200000000141e-05, 9.026400000000309e-05, 8.969400000000127e-05, 8.957000000000062e-05, 8.976399999999912e-05, 9.025000000000005e-05, 9.091700000000286e-05, 9.00129999999999e-05, 8.940199999999884e-05, 9.048599999999726e-05, 9.029199999999876e-05, 8.958300000000072e-05, 8.975000000000302e-05, 8.993100000000143e-05, 8.915299999999807e-05, 8.94999999999993e-05, 9.041700000000236e-05, 9.036200000000008e-05, 8.947200000000016e-05, 9.086100000000111e-05, 8.909699999999979e-05, 9.073600000000098e-05, 8.926399999999862e-05, 9.041699999999889e-05, 8.983300000000097e-05, 8.976399999999912e-05, 9.043100000000193e-05, 9.068099999999871e-05, 9.081899999999893e-05, 9.076400000000012e-05, 9.01800000000022e-05, 8.958299999999725e-05]</msg>
<status status="PASS" starttime="20201112 09:43:18.462" endtime="20201112 09:43:18.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.457" endtime="20201112 09:43:18.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.467" endtime="20201112 09:43:18.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:18.471" endtime="20201112 09:43:18.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.469" endtime="20201112 09:43:18.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.465" endtime="20201112 09:43:18.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.094" endtime="20201112 09:43:18.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.093" endtime="20201112 09:43:18.492"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.500" endtime="20201112 09:43:18.520"></status>
</kw>
<msg timestamp="20201112 09:43:18.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.499" endtime="20201112 09:43:18.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.522" endtime="20201112 09:43:18.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.524" endtime="20201112 09:43:18.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.496" endtime="20201112 09:43:18.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.494" endtime="20201112 09:43:18.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.535" endtime="20201112 09:43:18.821"></status>
</kw>
<msg timestamp="20201112 09:43:18.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022562917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.533" endtime="20201112 09:43:18.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022562917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.826" endtime="20201112 09:43:18.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.834" endtime="20201112 09:43:18.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.531" endtime="20201112 09:43:18.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.529" endtime="20201112 09:43:18.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:18.841" level="INFO">${RESULT} = [{'time': 0.022562917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.170899999999885e-05, 'source_diff': 9.170899999999885e-05}, {'time': 0.022672931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:18.838" endtime="20201112 09:43:18.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:18.855" level="INFO">${ACCURACY} = {'diff': [9.170899999999885e-05, 9.158399999999872e-05, 9.140300000000032e-05, 9.195799999999962e-05, 9.109699999999832e-05, 9.156899999999968e-05, 9.291700000000139e-05, 9.201400000000137e-05, 9.2096...</msg>
<status status="PASS" starttime="20201112 09:43:18.842" endtime="20201112 09:43:18.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.860" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 09:43:18.859" endtime="20201112 09:43:18.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.863" level="INFO">VALUE: [9.170899999999885e-05, 9.158399999999872e-05, 9.140300000000032e-05, 9.195799999999962e-05, 9.109699999999832e-05, 9.156899999999968e-05, 9.291700000000139e-05, 9.201400000000137e-05, 9.209699999999932e-05, 9.126399999999715e-05, 9.162500000000143e-05, 9.227700000000172e-05, 9.176400000000112e-05, 9.262499999999896e-05, 9.293000000000148e-05, 9.234699999999957e-05, 9.156899999999968e-05, 9.193099999999996e-05, 9.199999999999833e-05, 9.258399999999972e-05, 9.158400000000219e-05, 9.261200000000233e-05, 9.211099999999889e-05, 9.19719999999992e-05, 9.186099999999864e-05, 9.176399999999765e-05, 9.141699999999989e-05, 9.216700000000064e-05, 9.209699999999932e-05, 9.237500000000218e-05, 9.109700000000179e-05, 9.237499999999871e-05, 9.284799999999954e-05, 9.19719999999992e-05, 9.286099999999964e-05, 9.176399999999765e-05, 9.225000000000205e-05, 9.238899999999828e-05, 9.234699999999957e-05, 9.2333e-05, 9.111100000000136e-05, 9.244500000000003e-05, 9.219399999999683e-05, 9.15000000000013e-05, 9.208299999999975e-05, 9.244400000000055e-05, 9.151400000000087e-05, 9.209699999999932e-05, 9.274999999999908e-05, 9.227800000000119e-05]</msg>
<status status="PASS" starttime="20201112 09:43:18.861" endtime="20201112 09:43:18.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.856" endtime="20201112 09:43:18.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.866" endtime="20201112 09:43:18.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:18.870" endtime="20201112 09:43:18.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.868" endtime="20201112 09:43:18.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.865" endtime="20201112 09:43:18.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.492" endtime="20201112 09:43:18.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.492" endtime="20201112 09:43:18.891"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.900" endtime="20201112 09:43:18.920"></status>
</kw>
<msg timestamp="20201112 09:43:18.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.898" endtime="20201112 09:43:18.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.922" endtime="20201112 09:43:18.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.924" endtime="20201112 09:43:18.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.896" endtime="20201112 09:43:18.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.894" endtime="20201112 09:43:18.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.935" endtime="20201112 09:43:19.221"></status>
</kw>
<msg timestamp="20201112 09:43:19.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023163306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023258, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:18.933" endtime="20201112 09:43:19.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023163306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023258, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:19.226" endtime="20201112 09:43:19.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.234" endtime="20201112 09:43:19.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.931" endtime="20201112 09:43:19.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.929" endtime="20201112 09:43:19.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:19.241" level="INFO">${RESULT} = [{'time': 0.023258, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.469399999999933e-05, 'source_diff': 9.469399999999933e-05}, {'time': 0.023362014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:43:19.238" endtime="20201112 09:43:19.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:19.255" level="INFO">${ACCURACY} = {'diff': [9.469399999999933e-05, 9.3333000000001e-05, 9.377800000000269e-05, 9.408400000000122e-05, 9.424999999999711e-05, 9.391599999999944e-05, 9.420800000000187e-05, 9.419399999999883e-05, 9.319399...</msg>
<status status="PASS" starttime="20201112 09:43:19.242" endtime="20201112 09:43:19.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.260" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 09:43:19.259" endtime="20201112 09:43:19.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.262" level="INFO">VALUE: [9.469399999999933e-05, 9.3333000000001e-05, 9.377800000000269e-05, 9.408400000000122e-05, 9.424999999999711e-05, 9.391599999999944e-05, 9.420800000000187e-05, 9.419399999999883e-05, 9.319399999999783e-05, 9.331900000000143e-05, 9.426400000000015e-05, 9.474999999999761e-05, 9.326399999999915e-05, 9.476400000000065e-05, 9.381899999999846e-05, 9.343000000000198e-05, 9.500000000000133e-05, 9.358300000000125e-05, 9.373599999999704e-05, 9.490300000000035e-05, 9.418099999999874e-05, 9.33469999999971e-05, 9.312499999999946e-05, 9.41529999999996e-05, 9.442999999999951e-05, 9.4027e-05, 9.308300000000075e-05, 9.426400000000015e-05, 9.308300000000075e-05, 9.429199999999929e-05, 9.443099999999899e-05, 9.341600000000241e-05, 9.493099999999949e-05, 9.349999999999983e-05, 9.443099999999899e-05, 9.333400000000047e-05, 9.458300000000225e-05, 9.476399999999718e-05, 9.375000000000008e-05, 9.449999999999736e-05, 9.400000000000033e-05, 9.390299999999935e-05, 9.468099999999924e-05, 9.333400000000047e-05, 9.324999999999958e-05, 9.441699999999942e-05, 9.377699999999975e-05, 9.444399999999908e-05, 9.326400000000262e-05, 9.426400000000015e-05]</msg>
<status status="PASS" starttime="20201112 09:43:19.261" endtime="20201112 09:43:19.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.256" endtime="20201112 09:43:19.264"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.266" endtime="20201112 09:43:19.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:19.270" endtime="20201112 09:43:19.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.268" endtime="20201112 09:43:19.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.264" endtime="20201112 09:43:19.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.892" endtime="20201112 09:43:19.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.891" endtime="20201112 09:43:19.291"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.300" endtime="20201112 09:43:19.320"></status>
</kw>
<msg timestamp="20201112 09:43:19.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.298" endtime="20201112 09:43:19.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.321" endtime="20201112 09:43:19.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.324" endtime="20201112 09:43:19.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.296" endtime="20201112 09:43:19.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.293" endtime="20201112 09:43:19.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.334" endtime="20201112 09:43:19.621"></status>
</kw>
<msg timestamp="20201112 09:43:19.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022985889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023082125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.333" endtime="20201112 09:43:19.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022985889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023082125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.625" endtime="20201112 09:43:19.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.634" endtime="20201112 09:43:19.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.330" endtime="20201112 09:43:19.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.328" endtime="20201112 09:43:19.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:19.641" level="INFO">${RESULT} = [{'time': 0.023082125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.623599999999954e-05, 'source_diff': 9.623599999999954e-05}, {'time': 0.023190125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:19.637" endtime="20201112 09:43:19.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:19.656" level="INFO">${ACCURACY} = {'diff': [9.623599999999954e-05, 9.566700000000067e-05, 9.536100000000214e-05, 9.509799999999832e-05, 9.624999999999911e-05, 9.556999999999968e-05, 9.644400000000108e-05, 9.699999999999986e-05, 9.6278...</msg>
<status status="PASS" starttime="20201112 09:43:19.642" endtime="20201112 09:43:19.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.660" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 09:43:19.659" endtime="20201112 09:43:19.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.663" level="INFO">VALUE: [9.623599999999954e-05, 9.566700000000067e-05, 9.536100000000214e-05, 9.509799999999832e-05, 9.624999999999911e-05, 9.556999999999968e-05, 9.644400000000108e-05, 9.699999999999986e-05, 9.627800000000172e-05, 9.541600000000094e-05, 9.701399999999943e-05, 9.659700000000035e-05, 9.626400000000215e-05, 9.691700000000192e-05, 9.61669999999977e-05, 9.618100000000074e-05, 9.601299999999896e-05, 9.687499999999974e-05, 9.683299999999756e-05, 9.59859999999993e-05, 9.649999999999936e-05, 9.641700000000142e-05, 9.674999999999961e-05, 9.58339999999995e-05, 9.670900000000038e-05, 9.544400000000008e-05, 9.61799999999978e-05, 9.61799999999978e-05, 9.699999999999986e-05, 9.509700000000232e-05, 9.593100000000049e-05, 9.683300000000103e-05, 9.608300000000028e-05, 9.509800000000179e-05, 9.579099999999785e-05, 9.624999999999911e-05, 9.679099999999885e-05, 9.629199999999782e-05, 9.643000000000151e-05, 9.609699999999985e-05, 9.643100000000099e-05, 9.583300000000003e-05, 9.523600000000201e-05, 9.525000000000158e-05, 9.561200000000186e-05, 9.591700000000092e-05, 9.53469999999991e-05, 9.658300000000078e-05, 9.525000000000158e-05, 9.676400000000265e-05]</msg>
<status status="PASS" starttime="20201112 09:43:19.662" endtime="20201112 09:43:19.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.657" endtime="20201112 09:43:19.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.667" endtime="20201112 09:43:19.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:19.670" endtime="20201112 09:43:19.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.669" endtime="20201112 09:43:19.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.665" endtime="20201112 09:43:19.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.292" endtime="20201112 09:43:19.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.291" endtime="20201112 09:43:19.691"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.700" endtime="20201112 09:43:19.720"></status>
</kw>
<msg timestamp="20201112 09:43:19.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.699" endtime="20201112 09:43:19.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.721" endtime="20201112 09:43:19.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.724" endtime="20201112 09:43:19.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.696" endtime="20201112 09:43:19.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.694" endtime="20201112 09:43:19.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.735" endtime="20201112 09:43:20.020"></status>
</kw>
<msg timestamp="20201112 09:43:20.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022535778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:19.733" endtime="20201112 09:43:20.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022535778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:20.025" endtime="20201112 09:43:20.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.033" endtime="20201112 09:43:20.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.730" endtime="20201112 09:43:20.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.728" endtime="20201112 09:43:20.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:20.040" level="INFO">${RESULT} = [{'time': 0.022535778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.877800000000075e-05, 'source_diff': 9.877800000000075e-05}, {'time': 0.022645806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:20.037" endtime="20201112 09:43:20.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:20.054" level="INFO">${ACCURACY} = {'diff': [9.877800000000075e-05, 9.869499999999934e-05, 9.801400000000043e-05, 9.727699999999978e-05, 9.809699999999838e-05, 9.794399999999912e-05, 9.836100000000167e-05, 9.793100000000249e-05, 9.8361...</msg>
<status status="PASS" starttime="20201112 09:43:20.041" endtime="20201112 09:43:20.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.059" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 09:43:20.058" endtime="20201112 09:43:20.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.061" level="INFO">VALUE: [9.877800000000075e-05, 9.869499999999934e-05, 9.801400000000043e-05, 9.727699999999978e-05, 9.809699999999838e-05, 9.794399999999912e-05, 9.836100000000167e-05, 9.793100000000249e-05, 9.836100000000167e-05, 9.812500000000099e-05, 9.876399999999771e-05, 9.791699999999945e-05, 9.881899999999999e-05, 9.8415999999997e-05, 9.786100000000117e-05, 9.895799999999969e-05, 9.759700000000135e-05, 9.876400000000118e-05, 9.775000000000061e-05, 9.838900000000081e-05, 9.850000000000136e-05, 9.776300000000071e-05, 9.761100000000092e-05, 9.743000000000251e-05, 9.898599999999882e-05, 9.72080000000014e-05, 9.827800000000025e-05, 9.726399999999968e-05, 9.776400000000018e-05, 9.843099999999952e-05, 9.750000000000036e-05, 9.792999999999955e-05, 9.8028e-05, 9.726399999999968e-05, 9.893000000000055e-05, 9.81669999999997e-05, 9.743099999999852e-05, 9.891700000000045e-05, 9.786100000000117e-05, 9.720900000000088e-05, 9.811100000000142e-05, 9.893000000000055e-05, 9.8028e-05, 9.788900000000031e-05, 9.81799999999998e-05, 9.733299999999806e-05, 9.777799999999975e-05, 9.859800000000182e-05, 9.844499999999909e-05, 9.819399999999937e-05]</msg>
<status status="PASS" starttime="20201112 09:43:20.060" endtime="20201112 09:43:20.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.055" endtime="20201112 09:43:20.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.065" endtime="20201112 09:43:20.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:20.069" endtime="20201112 09:43:20.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.067" endtime="20201112 09:43:20.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.063" endtime="20201112 09:43:20.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.692" endtime="20201112 09:43:20.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.692" endtime="20201112 09:43:20.090"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.099" endtime="20201112 09:43:20.119"></status>
</kw>
<msg timestamp="20201112 09:43:20.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.097" endtime="20201112 09:43:20.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.120" endtime="20201112 09:43:20.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.123" endtime="20201112 09:43:20.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.094" endtime="20201112 09:43:20.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.092" endtime="20201112 09:43:20.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.133" endtime="20201112 09:43:20.420"></status>
</kw>
<msg timestamp="20201112 09:43:20.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022967181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023067472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.132" endtime="20201112 09:43:20.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022967181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023067472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.424" endtime="20201112 09:43:20.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.432" endtime="20201112 09:43:20.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.129" endtime="20201112 09:43:20.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.127" endtime="20201112 09:43:20.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:20.439" level="INFO">${RESULT} = [{'time': 0.023067472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010029099999999888, 'source_diff': 0.00010029099999999888}, {'time': 0.023179472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:20.436" endtime="20201112 09:43:20.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:20.453" level="INFO">${ACCURACY} = {'diff': [0.00010029099999999888, 9.91800000000008e-05, 9.919499999999984e-05, 9.968100000000077e-05, 9.94999999999989e-05, 9.911099999999895e-05, 9.959799999999935e-05, 0.00010008400000000028, 0.0001...</msg>
<status status="PASS" starttime="20201112 09:43:20.440" endtime="20201112 09:43:20.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.458" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 09:43:20.457" endtime="20201112 09:43:20.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.460" level="INFO">VALUE: [0.00010029099999999888, 9.91800000000008e-05, 9.919499999999984e-05, 9.968100000000077e-05, 9.94999999999989e-05, 9.911099999999895e-05, 9.959799999999935e-05, 0.00010008400000000028, 0.00010009700000000038, 9.956900000000074e-05, 0.00010098600000000083, 0.0001001800000000018, 9.933300000000006e-05, 9.923599999999907e-05, 0.00010041700000000195, 0.00010102799999999953, 9.926399999999821e-05, 9.977699999999881e-05, 9.909699999999938e-05, 0.00010044400000000162, 9.966599999999826e-05, 0.00010023600000000008, 9.919499999999984e-05, 9.96809999999973e-05, 9.918100000000027e-05, 9.936200000000214e-05, 9.943100000000052e-05, 0.00010034700000000063, 9.956900000000074e-05, 0.00010008299999999734, 0.00010026399999999921, 0.00010077799999999928, 9.948599999999932e-05, 0.00010079199999999885, 9.911099999999895e-05, 0.00010040299999999891, 0.000100819999999998, 0.00010011099999999995, 0.0001001809999999978, 0.00010040299999999891, 9.924999999999864e-05, 0.00010069500000000134, 0.0001004999999999999, 9.909800000000232e-05, 0.00010093100000000202, 0.00010020799999999747, 0.00010081900000000199, 0.00010094399999999865, 0.00010002799999999853, 0.00010056900000000174]</msg>
<status status="PASS" starttime="20201112 09:43:20.459" endtime="20201112 09:43:20.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.454" endtime="20201112 09:43:20.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.464" endtime="20201112 09:43:20.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:20.468" endtime="20201112 09:43:20.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.466" endtime="20201112 09:43:20.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.462" endtime="20201112 09:43:20.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.090" endtime="20201112 09:43:20.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.090" endtime="20201112 09:43:20.489"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.498" endtime="20201112 09:43:20.517"></status>
</kw>
<msg timestamp="20201112 09:43:20.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.496" endtime="20201112 09:43:20.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.519" endtime="20201112 09:43:20.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.522" endtime="20201112 09:43:20.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.493" endtime="20201112 09:43:20.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.491" endtime="20201112 09:43:20.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.532" endtime="20201112 09:43:20.819"></status>
</kw>
<msg timestamp="20201112 09:43:20.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.530" endtime="20201112 09:43:20.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022679347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.824" endtime="20201112 09:43:20.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.832" endtime="20201112 09:43:20.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.528" endtime="20201112 09:43:20.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.526" endtime="20201112 09:43:20.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:20.839" level="INFO">${RESULT} = [{'time': 0.022679347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010261099999999898, 'source_diff': 0.00010261099999999898}, {'time': 0.022795375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:20.835" endtime="20201112 09:43:20.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:20.852" level="INFO">${ACCURACY} = {'diff': [0.00010261099999999898, 0.00010111100000000095, 0.00010245799999999972, 0.00010161099999999798, 0.00010191699999999998, 0.00010169499999999887, 0.00010158299999999884, 0.00010226300000000174...</msg>
<status status="PASS" starttime="20201112 09:43:20.840" endtime="20201112 09:43:20.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.857" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 09:43:20.856" endtime="20201112 09:43:20.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.860" level="INFO">VALUE: [0.00010261099999999898, 0.00010111100000000095, 0.00010245799999999972, 0.00010161099999999798, 0.00010191699999999998, 0.00010169499999999887, 0.00010158299999999884, 0.00010226300000000174, 0.00010276400000000172, 0.00010176400000000071, 0.00010159699999999841, 0.00010243100000000005, 0.00010170900000000191, 0.0001011809999999988, 0.00010254099999999766, 0.00010209800000000185, 0.00010209700000000238, 0.00010259699999999941, 0.00010126400000000021, 0.00010226399999999775, 0.00010244400000000015, 0.00010258299999999984, 0.00010225000000000165, 0.00010291700000000098, 0.0001022359999999986, 0.0001025000000000019, 0.00010158300000000231, 0.00010230599999999992, 0.00010158299999999884, 0.00010159699999999841, 0.00010108300000000181, 0.00010109700000000138, 0.00010244499999999962, 0.00010268099999999683, 0.00010286099999999923, 0.00010243000000000058, 0.00010170800000000244, 0.00010133299999999859, 0.00010243000000000058, 0.00010108299999999834, 0.00010290300000000141, 0.00010202800000000053, 0.00010108399999999781, 0.00010126400000000021, 0.00010243000000000058, 0.00010284699999999966, 0.00010206899999999977, 0.00010129199999999935, 0.00010294500000000012, 0.0001018610000000017]</msg>
<status status="PASS" starttime="20201112 09:43:20.858" endtime="20201112 09:43:20.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.853" endtime="20201112 09:43:20.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.863" endtime="20201112 09:43:20.865"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:20.867" endtime="20201112 09:43:20.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.865" endtime="20201112 09:43:20.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.862" endtime="20201112 09:43:20.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.490" endtime="20201112 09:43:20.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.489" endtime="20201112 09:43:20.888"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.897" endtime="20201112 09:43:20.917"></status>
</kw>
<msg timestamp="20201112 09:43:20.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.895" endtime="20201112 09:43:20.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.918" endtime="20201112 09:43:20.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.921" endtime="20201112 09:43:20.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.893" endtime="20201112 09:43:20.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.890" endtime="20201112 09:43:20.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.932" endtime="20201112 09:43:21.218"></status>
</kw>
<msg timestamp="20201112 09:43:21.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022811361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.930" endtime="20201112 09:43:21.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022811361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.222" endtime="20201112 09:43:21.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.230" endtime="20201112 09:43:21.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.927" endtime="20201112 09:43:21.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.926" endtime="20201112 09:43:21.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:21.237" level="INFO">${RESULT} = [{'time': 0.022915458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010409700000000091, 'source_diff': 0.00010409700000000091}, {'time': 0.023037486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:21.234" endtime="20201112 09:43:21.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:21.252" level="INFO">${ACCURACY} = {'diff': [0.00010409700000000091, 0.00010395799999999775, 0.00010383300000000109, 0.00010492999999999961, 0.00010334700000000016, 0.00010388899999999937, 0.00010468099999999883, 0.00010488900000000037...</msg>
<status status="PASS" starttime="20201112 09:43:21.238" endtime="20201112 09:43:21.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.257" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 09:43:21.256" endtime="20201112 09:43:21.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.259" level="INFO">VALUE: [0.00010409700000000091, 0.00010395799999999775, 0.00010383300000000109, 0.00010492999999999961, 0.00010334700000000016, 0.00010388899999999937, 0.00010468099999999883, 0.00010488900000000037, 0.00010374999999999968, 0.00010376299999999977, 0.0001047499999999972, 0.00010359700000000041, 0.00010409700000000091, 0.00010333300000000059, 0.00010444499999999815, 0.00010402799999999907, 0.00010426399999999975, 0.00010376399999999925, 0.00010309699999999991, 0.0001047360000000011, 0.00010379200000000185, 0.00010476400000000025, 0.00010406900000000177, 0.00010443099999999858, 0.00010351400000000247, 0.00010374999999999968, 0.00010338900000000234, 0.00010366699999999826, 0.00010450000000000043, 0.00010376399999999925, 0.00010391599999999904, 0.00010465299999999969, 0.00010366699999999826, 0.00010318099999999733, 0.0001041810000000018, 0.0001050140000000005, 0.00010458399999999785, 0.00010376299999999977, 0.00010408299999999787, 0.00010459700000000141, 0.00010461100000000098, 0.00010308300000000034, 0.00010442999999999911, 0.00010434700000000116, 0.00010326399999999875, 0.00010411100000000048, 0.00010429099999999941, 0.00010359700000000041, 0.00010463900000000012, 0.00010326399999999875]</msg>
<status status="PASS" starttime="20201112 09:43:21.258" endtime="20201112 09:43:21.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.253" endtime="20201112 09:43:21.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.263" endtime="20201112 09:43:21.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:21.267" endtime="20201112 09:43:21.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.265" endtime="20201112 09:43:21.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.261" endtime="20201112 09:43:21.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.889" endtime="20201112 09:43:21.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.888" endtime="20201112 09:43:21.287"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.296" endtime="20201112 09:43:21.317"></status>
</kw>
<msg timestamp="20201112 09:43:21.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.295" endtime="20201112 09:43:21.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.318" endtime="20201112 09:43:21.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.321" endtime="20201112 09:43:21.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.292" endtime="20201112 09:43:21.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.290" endtime="20201112 09:43:21.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.332" endtime="20201112 09:43:21.617"></status>
</kw>
<msg timestamp="20201112 09:43:21.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02252325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022628514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:21.330" endtime="20201112 09:43:21.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02252325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022628514, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:21.622" endtime="20201112 09:43:21.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.630" endtime="20201112 09:43:21.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.327" endtime="20201112 09:43:21.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.326" endtime="20201112 09:43:21.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:21.637" level="INFO">${RESULT} = [{'time': 0.022628514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010526399999999728, 'source_diff': 0.00010526399999999728}, {'time': 0.022750514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:21.634" endtime="20201112 09:43:21.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:21.651" level="INFO">${ACCURACY} = {'diff': [0.00010526399999999728, 0.00010576399999999778, 0.00010588900000000137, 0.00010529199999999989, 0.00010543099999999958, 0.00010702699999999912, 0.00010627799999999785, 0.00010541600000000054...</msg>
<status status="PASS" starttime="20201112 09:43:21.638" endtime="20201112 09:43:21.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.655" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 09:43:21.654" endtime="20201112 09:43:21.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.658" level="INFO">VALUE: [0.00010526399999999728, 0.00010576399999999778, 0.00010588900000000137, 0.00010529199999999989, 0.00010543099999999958, 0.00010702699999999912, 0.00010627799999999785, 0.00010541600000000054, 0.00010616700000000076, 0.00010634699999999969, 0.00010561100000000198, 0.00010594499999999965, 0.00010618099999999686, 0.000105207999999999, 0.00010649999999999896, 0.00010665299999999822, 0.00010591600000000104, 0.00010518000000000333, 0.00010690299999999847, 0.00010558299999999937, 0.00010593100000000008, 0.00010666700000000126, 0.00010699999999999946, 0.00010502700000000059, 0.00010676399999999878, 0.00010626399999999828, 0.00010608299999999987, 0.00010558299999999937, 0.0001058750000000018, 0.00010600000000000193, 0.0001058339999999991, 0.00010516600000000029, 0.00010573599999999864, 0.00010598599999999889, 0.00010508300000000234, 0.00010509699999999844, 0.00010593100000000008, 0.00010616699999999729, 0.00010694499999999718, 0.00010620899999999947, 0.00010558400000000231, 0.00010644400000000068, 0.00010580499999999701, 0.00010675000000000268, 0.00010508300000000234, 0.00010675000000000268, 0.00010511099999999801, 0.00010590300000000094, 0.0001065829999999969, 0.00010691599999999857]</msg>
<status status="PASS" starttime="20201112 09:43:21.656" endtime="20201112 09:43:21.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.651" endtime="20201112 09:43:21.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.666" endtime="20201112 09:43:21.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:21.669" endtime="20201112 09:43:21.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.668" endtime="20201112 09:43:21.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.664" endtime="20201112 09:43:21.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.288" endtime="20201112 09:43:21.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.288" endtime="20201112 09:43:21.690"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.699" endtime="20201112 09:43:21.719"></status>
</kw>
<msg timestamp="20201112 09:43:21.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.698" endtime="20201112 09:43:21.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.721" endtime="20201112 09:43:21.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.724" endtime="20201112 09:43:21.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.695" endtime="20201112 09:43:21.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.693" endtime="20201112 09:43:21.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.734" endtime="20201112 09:43:22.020"></status>
</kw>
<msg timestamp="20201112 09:43:22.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.732" endtime="20201112 09:43:22.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.024" endtime="20201112 09:43:22.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.033" endtime="20201112 09:43:22.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.730" endtime="20201112 09:43:22.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.728" endtime="20201112 09:43:22.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:22.040" level="INFO">${RESULT} = [{'time': 0.022694458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010893000000000014, 'source_diff': 0.00010893000000000014}, {'time': 0.022822472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:22.036" endtime="20201112 09:43:22.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:22.053" level="INFO">${ACCURACY} = {'diff': [0.00010893000000000014, 0.00010893000000000014, 0.0001085280000000001, 0.00010709700000000044, 0.00010761100000000051, 0.00010795800000000175, 0.00010866699999999979, 0.00010884800000000167,...</msg>
<status status="PASS" starttime="20201112 09:43:22.041" endtime="20201112 09:43:22.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.058" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 09:43:22.057" endtime="20201112 09:43:22.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.061" level="INFO">VALUE: [0.00010893000000000014, 0.00010893000000000014, 0.0001085280000000001, 0.00010709700000000044, 0.00010761100000000051, 0.00010795800000000175, 0.00010866699999999979, 0.00010884800000000167, 0.00010844400000000268, 0.00010734700000000069, 0.00010826400000000028, 0.00010859700000000194, 0.00010743100000000158, 0.00010741599999999907, 0.00010894499999999918, 0.00010851400000000053, 0.0001075829999999979, 0.00010826299999999733, 0.00010777799999999935, 0.0001085690000000028, 0.00010859699999999847, 0.00010758300000000137, 0.00010791699999999904, 0.0001071950000000009, 0.00010749999999999996, 0.00010723699999999961, 0.00010861100000000151, 0.0001077500000000002, 0.0001082500000000007, 0.00010809699999999797, 0.00010741700000000201, 0.0001076950000000014, 0.00010819399999999896, 0.00010848700000000086, 0.00010840299999999997, 0.00010798599999999742, 0.00010777799999999935, 0.00010741699999999854, 0.00010790299999999947, 0.00010877800000000035, 0.00010845800000000225, 0.00010901400000000103, 0.00010843099999999911, 0.00010801300000000055, 0.00010893000000000014, 0.00010868000000000336, 0.00010851400000000053, 0.00010711100000000001, 0.00010859699999999847, 0.00010715199999999925]</msg>
<status status="PASS" starttime="20201112 09:43:22.059" endtime="20201112 09:43:22.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.054" endtime="20201112 09:43:22.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.064" endtime="20201112 09:43:22.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:22.068" endtime="20201112 09:43:22.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.066" endtime="20201112 09:43:22.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.063" endtime="20201112 09:43:22.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.691" endtime="20201112 09:43:22.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.690" endtime="20201112 09:43:22.089"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.098" endtime="20201112 09:43:22.118"></status>
</kw>
<msg timestamp="20201112 09:43:22.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.096" endtime="20201112 09:43:22.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.120" endtime="20201112 09:43:22.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.122" endtime="20201112 09:43:22.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.094" endtime="20201112 09:43:22.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.091" endtime="20201112 09:43:22.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.133" endtime="20201112 09:43:22.419"></status>
</kw>
<msg timestamp="20201112 09:43:22.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022507542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022617667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.131" endtime="20201112 09:43:22.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022507542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022617667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.424" endtime="20201112 09:43:22.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.432" endtime="20201112 09:43:22.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.128" endtime="20201112 09:43:22.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.127" endtime="20201112 09:43:22.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:22.439" level="INFO">${RESULT} = [{'time': 0.022617667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011012500000000258, 'source_diff': 0.00011012500000000258}, {'time': 0.022747681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:22.435" endtime="20201112 09:43:22.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:22.452" level="INFO">${ACCURACY} = {'diff': [0.00011012500000000258, 0.00011059799999999995, 0.00011023599999999967, 0.00010975000000000221, 0.00010943000000000064, 0.00011065299999999875, 0.00011068100000000136, 0.00010918099999999986...</msg>
<status status="PASS" starttime="20201112 09:43:22.440" endtime="20201112 09:43:22.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.457" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 09:43:22.456" endtime="20201112 09:43:22.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.460" level="INFO">VALUE: [0.00011012500000000258, 0.00011059799999999995, 0.00011023599999999967, 0.00010975000000000221, 0.00010943000000000064, 0.00011065299999999875, 0.00011068100000000136, 0.00010918099999999986, 0.00010984699999999972, 0.00011076399999999931, 0.00011076399999999931, 0.00010909699999999897, 0.00011059700000000047, 0.00011090300000000247, 0.00011034700000000022, 0.00010976400000000178, 0.00011074999999999974, 0.00011023599999999967, 0.00011043100000000111, 0.00011065299999999875, 0.00010949999999999849, 0.0001095829999999999, 0.00011036099999999979, 0.00011002799999999813, 0.00010961100000000251, 0.000109902999999998, 0.00011097300000000032, 0.00010926299999999833, 0.00011009699999999997, 0.00010926400000000128, 0.00010918000000000039, 0.00011076399999999931, 0.00011045900000000025, 0.00010984699999999972, 0.00010993100000000061, 0.00010986200000000224, 0.00011011099999999954, 0.00010977700000000187, 0.00011094400000000171, 0.00011019400000000096, 0.00011001399999999856, 0.00010926399999999781, 0.00010924999999999824, 0.00010991699999999757, 0.00011018100000000086, 0.00011098699999999989, 0.00010920799999999953, 0.0001090829999999994, 0.00010944400000000021, 0.00010951400000000153]</msg>
<status status="PASS" starttime="20201112 09:43:22.458" endtime="20201112 09:43:22.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.453" endtime="20201112 09:43:22.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.464" endtime="20201112 09:43:22.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:22.467" endtime="20201112 09:43:22.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.466" endtime="20201112 09:43:22.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.462" endtime="20201112 09:43:22.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.090" endtime="20201112 09:43:22.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.089" endtime="20201112 09:43:22.488"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.497" endtime="20201112 09:43:22.517"></status>
</kw>
<msg timestamp="20201112 09:43:22.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.495" endtime="20201112 09:43:22.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.519" endtime="20201112 09:43:22.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.522" endtime="20201112 09:43:22.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.493" endtime="20201112 09:43:22.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.491" endtime="20201112 09:43:22.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.532" endtime="20201112 09:43:22.818"></status>
</kw>
<msg timestamp="20201112 09:43:22.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022560292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.530" endtime="20201112 09:43:22.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022560292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.822" endtime="20201112 09:43:22.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.830" endtime="20201112 09:43:22.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.528" endtime="20201112 09:43:22.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.526" endtime="20201112 09:43:22.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:22.837" level="INFO">${RESULT} = [{'time': 0.022672583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011229100000000047, 'source_diff': 0.00011229100000000047}, {'time': 0.022804611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:22.834" endtime="20201112 09:43:22.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:22.852" level="INFO">${ACCURACY} = {'diff': [0.00011229100000000047, 0.00011219399999999949, 0.00011151400000000006, 0.00011293100000000014, 0.00011134700000000122, 0.00011293100000000014, 0.00011183399999999816, 0.00011143100000000211...</msg>
<status status="PASS" starttime="20201112 09:43:22.838" endtime="20201112 09:43:22.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.857" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 09:43:22.855" endtime="20201112 09:43:22.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.859" level="INFO">VALUE: [0.00011229100000000047, 0.00011219399999999949, 0.00011151400000000006, 0.00011293100000000014, 0.00011134700000000122, 0.00011293100000000014, 0.00011183399999999816, 0.00011143100000000211, 0.00011119400000000196, 0.00011184699999999825, 0.0001110969999999975, 0.00011144400000000221, 0.00011202800000000013, 0.00011193099999999914, 0.00011283400000000263, 0.0001110700000000013, 0.00011258299999999943, 0.00011219399999999949, 0.00011127799999999938, 0.00011288899999999796, 0.00011199999999999752, 0.000112596999999999, 0.00011258399999999891, 0.00011176400000000031, 0.00011125000000000024, 0.00011188800000000096, 0.00011213900000000068, 0.00011173600000000117, 0.00011217999999999992, 0.00011187500000000086, 0.00011115199999999978, 0.00011275000000000174, 0.0001120700000000023, 0.00011226299999999786, 0.000112596999999999, 0.00011208299999999893, 0.0001120969999999985, 0.00011127799999999938, 0.00011143099999999864, 0.00011218099999999939, 0.00011118100000000186, 0.00011251299999999811, 0.00011273600000000217, 0.00011226399999999734, 0.00011111100000000054, 0.00011209700000000197, 0.00011212500000000111, 0.0001120969999999985, 0.00011276399999999784, 0.00011108399999999741]</msg>
<status status="PASS" starttime="20201112 09:43:22.858" endtime="20201112 09:43:22.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.853" endtime="20201112 09:43:22.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.863" endtime="20201112 09:43:22.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:22.866" endtime="20201112 09:43:22.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.865" endtime="20201112 09:43:22.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.861" endtime="20201112 09:43:22.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.489" endtime="20201112 09:43:22.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.488" endtime="20201112 09:43:22.887"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.896" endtime="20201112 09:43:22.916"></status>
</kw>
<msg timestamp="20201112 09:43:22.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.895" endtime="20201112 09:43:22.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.918" endtime="20201112 09:43:22.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.921" endtime="20201112 09:43:22.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.892" endtime="20201112 09:43:22.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.890" endtime="20201112 09:43:22.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.931" endtime="20201112 09:43:23.217"></status>
</kw>
<msg timestamp="20201112 09:43:23.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022545542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:22.930" endtime="20201112 09:43:23.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022545542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226605, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:23.221" endtime="20201112 09:43:23.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.229" endtime="20201112 09:43:23.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.927" endtime="20201112 09:43:23.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.925" endtime="20201112 09:43:23.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:23.236" level="INFO">${RESULT} = [{'time': 0.0226605, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011495800000000181, 'source_diff': 0.00011495800000000181}, {'time': 0.022784514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:23.233" endtime="20201112 09:43:23.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:23.250" level="INFO">${ACCURACY} = {'diff': [0.00011495800000000181, 0.00011308299999999993, 0.00011326399999999834, 0.00011375000000000274, 0.00011359799999999948, 0.00011491599999999963, 0.00011502799999999966, 0.00011361099999999957...</msg>
<status status="PASS" starttime="20201112 09:43:23.237" endtime="20201112 09:43:23.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.254" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 09:43:23.253" endtime="20201112 09:43:23.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.257" level="INFO">VALUE: [0.00011495800000000181, 0.00011308299999999993, 0.00011326399999999834, 0.00011375000000000274, 0.00011359799999999948, 0.00011491599999999963, 0.00011502799999999966, 0.00011361099999999957, 0.00011445800000000131, 0.00011327800000000138, 0.00011394500000000071, 0.00011366699999999785, 0.00011368100000000089, 0.00011340299999999803, 0.00011308299999999993, 0.00011448600000000045, 0.00011343100000000064, 0.00011452799999999916, 0.00011326400000000181, 0.0001140970000000005, 0.00011426399999999934, 0.00011359799999999948, 0.00011420800000000106, 0.00011376400000000231, 0.0001140970000000005, 0.00011356900000000086, 0.00011341700000000107, 0.00011384699999999678, 0.00011458400000000091, 0.00011326399999999834, 0.00011494400000000224, 0.000114290999999999, 0.00011480599999999855, 0.0001134299999999977, 0.00011501400000000009, 0.00011476399999999984, 0.00011377800000000188, 0.00011447200000000088, 0.0001132359999999992, 0.00011351299999999911, 0.0001130969999999995, 0.0001139299999999982, 0.00011384699999999678, 0.0001140970000000005, 0.00011424999999999977, 0.00011458399999999744, 0.00011359799999999948, 0.00011458300000000143, 0.0001130969999999995, 0.0001130969999999995]</msg>
<status status="PASS" starttime="20201112 09:43:23.256" endtime="20201112 09:43:23.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.251" endtime="20201112 09:43:23.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.261" endtime="20201112 09:43:23.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:23.264" endtime="20201112 09:43:23.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.263" endtime="20201112 09:43:23.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.259" endtime="20201112 09:43:23.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.888" endtime="20201112 09:43:23.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.888" endtime="20201112 09:43:23.285"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.294" endtime="20201112 09:43:23.315"></status>
</kw>
<msg timestamp="20201112 09:43:23.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.293" endtime="20201112 09:43:23.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.316" endtime="20201112 09:43:23.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.319" endtime="20201112 09:43:23.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.290" endtime="20201112 09:43:23.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.288" endtime="20201112 09:43:23.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.329" endtime="20201112 09:43:23.616"></status>
</kw>
<msg timestamp="20201112 09:43:23.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022716444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022832569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.328" endtime="20201112 09:43:23.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022716444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022832569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.620" endtime="20201112 09:43:23.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.628" endtime="20201112 09:43:23.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.325" endtime="20201112 09:43:23.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.323" endtime="20201112 09:43:23.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:23.635" level="INFO">${RESULT} = [{'time': 0.022832569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011612500000000164, 'source_diff': 0.00011612500000000164}, {'time': 0.022964569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:23.632" endtime="20201112 09:43:23.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:23.649" level="INFO">${ACCURACY} = {'diff': [0.00011612500000000164, 0.00011576300000000136, 0.00011609699999999903, 0.0001168750000000024, 0.00011588900000000096, 0.0001169170000000011, 0.00011651400000000159, 0.00011609799999999851, ...</msg>
<status status="PASS" starttime="20201112 09:43:23.636" endtime="20201112 09:43:23.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.654" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 09:43:23.653" endtime="20201112 09:43:23.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.656" level="INFO">VALUE: [0.00011612500000000164, 0.00011576300000000136, 0.00011609699999999903, 0.0001168750000000024, 0.00011588900000000096, 0.0001169170000000011, 0.00011651400000000159, 0.00011609799999999851, 0.00011676399999999837, 0.00011558299999999896, 0.00011547199999999841, 0.00011536099999999785, 0.00011676400000000184, 0.00011679200000000098, 0.00011695899999999981, 0.00011534699999999828, 0.0001154169999999996, 0.00011683300000000021, 0.00011508299999999846, 0.00011651400000000159, 0.00011559699999999853, 0.00011643100000000017, 0.00011518100000000239, 0.00011518099999999892, 0.00011615200000000131, 0.00011651400000000159, 0.00011576300000000136, 0.00011676399999999837, 0.00011641600000000113, 0.00011534700000000175, 0.00011594499999999924, 0.00011668100000000042, 0.00011668100000000042, 0.0001155689999999994, 0.00011591600000000063, 0.00011601400000000109, 0.00011525000000000077, 0.00011627800000000091, 0.0001165560000000003, 0.0001161109999999986, 0.00011511100000000107, 0.00011611100000000207, 0.0001150970000000015, 0.00011655499999999736, 0.00011558299999999896, 0.0001154169999999996, 0.00011616700000000035, 0.00011533400000000166, 0.00011613899999999774, 0.00011659799999999901]</msg>
<status status="PASS" starttime="20201112 09:43:23.655" endtime="20201112 09:43:23.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.650" endtime="20201112 09:43:23.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.660" endtime="20201112 09:43:23.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:23.664" endtime="20201112 09:43:23.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.662" endtime="20201112 09:43:23.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.658" endtime="20201112 09:43:23.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.286" endtime="20201112 09:43:23.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.286" endtime="20201112 09:43:23.684"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.693" endtime="20201112 09:43:23.715"></status>
</kw>
<msg timestamp="20201112 09:43:23.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.692" endtime="20201112 09:43:23.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.716" endtime="20201112 09:43:23.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.719" endtime="20201112 09:43:23.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.689" endtime="20201112 09:43:23.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.687" endtime="20201112 09:43:23.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.729" endtime="20201112 09:43:24.016"></status>
</kw>
<msg timestamp="20201112 09:43:24.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022883042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023001528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.728" endtime="20201112 09:43:24.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022883042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023001528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.020" endtime="20201112 09:43:24.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.028" endtime="20201112 09:43:24.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.725" endtime="20201112 09:43:24.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.723" endtime="20201112 09:43:24.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:24.035" level="INFO">${RESULT} = [{'time': 0.023001528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011848600000000098, 'source_diff': 0.00011848600000000098}, {'time': 0.023137514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:24.032" endtime="20201112 09:43:24.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:24.049" level="INFO">${ACCURACY} = {'diff': [0.00011848600000000098, 0.00011890300000000006, 0.00011836100000000085, 0.0001179309999999982, 0.00011884800000000126, 0.0001184439999999988, 0.00011852799999999969, 0.00011876400000000037, ...</msg>
<status status="PASS" starttime="20201112 09:43:24.036" endtime="20201112 09:43:24.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.054" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 09:43:24.053" endtime="20201112 09:43:24.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.056" level="INFO">VALUE: [0.00011848600000000098, 0.00011890300000000006, 0.00011836100000000085, 0.0001179309999999982, 0.00011884800000000126, 0.0001184439999999988, 0.00011852799999999969, 0.00011876400000000037, 0.00011794400000000177, 0.00011898599999999801, 0.00011858399999999797, 0.00011713900000000221, 0.00011775000000000327, 0.00011847200000000141, 0.00011892999999999973, 0.00011850000000000055, 0.00011876400000000037, 0.00011827799999999944, 0.00011794500000000124, 0.00011850000000000055, 0.00011840299999999956, 0.00011798600000000048, 0.00011776399999999937, 0.0001174300000000017, 0.00011901400000000062, 0.00011766600000000238, 0.00011709700000000003, 0.00011726399999999887, 0.00011876400000000037, 0.00011809700000000103, 0.000117388999999999, 0.00011852799999999969, 0.00011759700000000053, 0.00011826399999999987, 0.0001187500000000008, 0.0001174170000000016, 0.00011900000000000105, 0.00011893100000000267, 0.00011765199999999934, 0.00011834699999999782, 0.00011715300000000178, 0.00011776399999999937, 0.00011793100000000167, 0.00011902800000000019, 0.00011872300000000113, 0.00011859800000000101, 0.0001172629999999994, 0.0001174300000000017, 0.0001181950000000015, 0.00011884699999999832]</msg>
<status status="PASS" starttime="20201112 09:43:24.055" endtime="20201112 09:43:24.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.050" endtime="20201112 09:43:24.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.060" endtime="20201112 09:43:24.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:24.064" endtime="20201112 09:43:24.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.062" endtime="20201112 09:43:24.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.058" endtime="20201112 09:43:24.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.685" endtime="20201112 09:43:24.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.685" endtime="20201112 09:43:24.084"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.093" endtime="20201112 09:43:24.114"></status>
</kw>
<msg timestamp="20201112 09:43:24.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.092" endtime="20201112 09:43:24.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.116" endtime="20201112 09:43:24.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.119" endtime="20201112 09:43:24.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.089" endtime="20201112 09:43:24.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.087" endtime="20201112 09:43:24.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.129" endtime="20201112 09:43:24.416"></status>
</kw>
<msg timestamp="20201112 09:43:24.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022456181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022575972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.127" endtime="20201112 09:43:24.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022456181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022575972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.420" endtime="20201112 09:43:24.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.428" endtime="20201112 09:43:24.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.125" endtime="20201112 09:43:24.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.123" endtime="20201112 09:43:24.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:24.435" level="INFO">${RESULT} = [{'time': 0.022575972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011979100000000104, 'source_diff': 0.00011979100000000104}, {'time': 0.022711972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:24.432" endtime="20201112 09:43:24.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:24.450" level="INFO">${ACCURACY} = {'diff': [0.00011979100000000104, 0.00012034699999999982, 0.00011902800000000019, 0.0001207639999999989, 0.00011976400000000137, 0.00012044500000000027, 0.00012084799999999979, 0.000120083, 0.00011909...</msg>
<status status="PASS" starttime="20201112 09:43:24.436" endtime="20201112 09:43:24.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.454" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 09:43:24.453" endtime="20201112 09:43:24.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.457" level="INFO">VALUE: [0.00011979100000000104, 0.00012034699999999982, 0.00011902800000000019, 0.0001207639999999989, 0.00011976400000000137, 0.00012044500000000027, 0.00012084799999999979, 0.000120083, 0.00011909700000000203, 0.00012091600000000216, 0.00011915300000000031, 0.00012015300000000131, 0.00012000000000000205, 0.00011926400000000087, 0.00012026400000000187, 0.0001205830000000005, 0.00012027800000000144, 0.00011983399999999922, 0.0001209440000000013, 0.00012101399999999915, 0.00011961099999999864, 0.00012099999999999958, 0.00012023600000000273, 0.00012086099999999989, 0.00012077799999999847, 0.00011933400000000219, 0.00011915300000000031, 0.00011909699999999857, 0.0001202500000000023, 0.00011926400000000087, 0.00012044399999999733, 0.00011936099999999839, 0.00012061099999999964, 0.00012088899999999903, 0.00011949999999999808, 0.00012024999999999883, 0.00012004200000000076, 0.00012059799999999954, 0.00012024999999999883, 0.00012011099999999914, 0.00012076400000000237, 0.00011976400000000137, 0.00012045800000000037, 0.00011995899999999934, 0.00011952800000000069, 0.00011991700000000063, 0.00012011199999999861, 0.00011951400000000112, 0.0001197639999999979, 0.00011959699999999907]</msg>
<status status="PASS" starttime="20201112 09:43:24.456" endtime="20201112 09:43:24.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.451" endtime="20201112 09:43:24.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.461" endtime="20201112 09:43:24.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:24.464" endtime="20201112 09:43:24.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.463" endtime="20201112 09:43:24.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.459" endtime="20201112 09:43:24.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.085" endtime="20201112 09:43:24.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.085" endtime="20201112 09:43:24.485"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.494" endtime="20201112 09:43:24.515"></status>
</kw>
<msg timestamp="20201112 09:43:24.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.493" endtime="20201112 09:43:24.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.517" endtime="20201112 09:43:24.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.520" endtime="20201112 09:43:24.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.490" endtime="20201112 09:43:24.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.488" endtime="20201112 09:43:24.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.530" endtime="20201112 09:43:24.816"></status>
</kw>
<msg timestamp="20201112 09:43:24.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022856069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022979042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.528" endtime="20201112 09:43:24.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022856069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022979042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.820" endtime="20201112 09:43:24.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.829" endtime="20201112 09:43:24.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.526" endtime="20201112 09:43:24.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.524" endtime="20201112 09:43:24.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:24.835" level="INFO">${RESULT} = [{'time': 0.022979042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012297300000000191, 'source_diff': 0.00012297300000000191}, {'time': 0.023121125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:24.832" endtime="20201112 09:43:24.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:24.849" level="INFO">${ACCURACY} = {'diff': [0.00012297300000000191, 0.00012218099999999898, 0.00012143099999999823, 0.00012183299999999828, 0.00012211099999999767, 0.0001229030000000006, 0.00012202799999999972, 0.0001219310000000022, ...</msg>
<status status="PASS" starttime="20201112 09:43:24.837" endtime="20201112 09:43:24.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.854" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 09:43:24.853" endtime="20201112 09:43:24.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.856" level="INFO">VALUE: [0.00012297300000000191, 0.00012218099999999898, 0.00012143099999999823, 0.00012183299999999828, 0.00012211099999999767, 0.0001229030000000006, 0.00012202799999999972, 0.0001219310000000022, 0.00012201400000000015, 0.00012158400000000097, 0.00012208400000000147, 0.00012293000000000026, 0.00012145800000000137, 0.00012156899999999846, 0.00012227799999999997, 0.0001220969999999981, 0.0001222640000000004, 0.00012197199999999797, 0.00012226399999999693, 0.00012149999999999661, 0.000122083000000002, 0.00012276399999999743, 0.00012104199999999829, 0.0001212639999999994, 0.00012209700000000157, 0.00012111199999999961, 0.0001215969999999976, 0.0001212639999999994, 0.00012161099999999717, 0.00012225000000000083, 0.0001220969999999981, 0.00012145900000000084, 0.00012170799999999815, 0.00012145900000000084, 0.00012209700000000157, 0.00012129200000000201, 0.0001224160000000002, 0.00012238900000000053, 0.00012226399999999693, 0.00012161100000000064, 0.0001225969999999986, 0.00012140300000000256, 0.00012167999999999901, 0.00012233299999999878, 0.00012213900000000028, 0.00012225000000000083, 0.00012187500000000046, 0.00012118099999999798, 0.00012233399999999825, 0.00012280500000000014]</msg>
<status status="PASS" starttime="20201112 09:43:24.855" endtime="20201112 09:43:24.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.850" endtime="20201112 09:43:24.858"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.860" endtime="20201112 09:43:24.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:24.864" endtime="20201112 09:43:24.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.862" endtime="20201112 09:43:24.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.858" endtime="20201112 09:43:24.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.486" endtime="20201112 09:43:24.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.486" endtime="20201112 09:43:24.885"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.894" endtime="20201112 09:43:24.915"></status>
</kw>
<msg timestamp="20201112 09:43:24.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.892" endtime="20201112 09:43:24.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.916" endtime="20201112 09:43:24.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.919" endtime="20201112 09:43:24.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.890" endtime="20201112 09:43:24.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.887" endtime="20201112 09:43:24.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.929" endtime="20201112 09:43:25.216"></status>
</kw>
<msg timestamp="20201112 09:43:25.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022567417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022692028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.928" endtime="20201112 09:43:25.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022567417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022692028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.220" endtime="20201112 09:43:25.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.228" endtime="20201112 09:43:25.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.925" endtime="20201112 09:43:25.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.923" endtime="20201112 09:43:25.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:25.235" level="INFO">${RESULT} = [{'time': 0.022692028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012461100000000017, 'source_diff': 0.00012461100000000017}, {'time': 0.022834056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:25.232" endtime="20201112 09:43:25.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:25.249" level="INFO">${ACCURACY} = {'diff': [0.00012461100000000017, 0.00012443099999999777, 0.00012352700000000175, 0.00012444400000000133, 0.00012352800000000122, 0.0001240420000000013, 0.0001233060000000001, 0.0001242359999999998, 0...</msg>
<status status="PASS" starttime="20201112 09:43:25.236" endtime="20201112 09:43:25.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.254" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 09:43:25.253" endtime="20201112 09:43:25.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.256" level="INFO">VALUE: [0.00012461100000000017, 0.00012443099999999777, 0.00012352700000000175, 0.00012444400000000133, 0.00012352800000000122, 0.0001240420000000013, 0.0001233060000000001, 0.0001242359999999998, 0.0001234449999999998, 0.00012483300000000128, 0.0001244299999999983, 0.0001246939999999981, 0.00012436099999999992, 0.00012393000000000126, 0.00012484700000000085, 0.00012377800000000147, 0.0001242779999999985, 0.00012329100000000107, 0.00012381899999999724, 0.00012341599999999772, 0.00012499999999999664, 0.00012311099999999867, 0.00012311099999999867, 0.00012409699999999663, 0.00012375000000000233, 0.00012443099999999777, 0.00012376299999999896, 0.00012444400000000133, 0.00012434699999999688, 0.00012427800000000197, 0.0001235969999999996, 0.0001245840000000005, 0.00012493100000000174, 0.00012479100000000257, 0.00012311099999999867, 0.00012326399999999793, 0.0001232779999999975, 0.00012393099999999727, 0.00012337499999999849, 0.00012411099999999967, 0.00012476399999999943, 0.00012326399999999793, 0.00012461100000000017, 0.00012412499999999924, 0.00012306899999999996, 0.00012426399999999893, 0.00012311099999999867, 0.0001242640000000024, 0.0001240970000000001, 0.0001249299999999988]</msg>
<status status="PASS" starttime="20201112 09:43:25.255" endtime="20201112 09:43:25.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.250" endtime="20201112 09:43:25.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.260" endtime="20201112 09:43:25.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:25.264" endtime="20201112 09:43:25.283"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.262" endtime="20201112 09:43:25.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.258" endtime="20201112 09:43:25.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.886" endtime="20201112 09:43:25.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.885" endtime="20201112 09:43:25.284"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.294" endtime="20201112 09:43:25.315"></status>
</kw>
<msg timestamp="20201112 09:43:25.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.292" endtime="20201112 09:43:25.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.316" endtime="20201112 09:43:25.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.319" endtime="20201112 09:43:25.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.289" endtime="20201112 09:43:25.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.287" endtime="20201112 09:43:25.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.329" endtime="20201112 09:43:25.615"></status>
</kw>
<msg timestamp="20201112 09:43:25.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.328" endtime="20201112 09:43:25.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022698292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.619" endtime="20201112 09:43:25.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.628" endtime="20201112 09:43:25.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.325" endtime="20201112 09:43:25.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.323" endtime="20201112 09:43:25.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:25.635" level="INFO">${RESULT} = [{'time': 0.022823764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012547200000000147, 'source_diff': 0.00012547200000000147}, {'time': 0.02296175, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:43:25.631" endtime="20201112 09:43:25.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:25.648" level="INFO">${ACCURACY} = {'diff': [0.00012547200000000147, 0.0001250970000000011, 0.00012593099999999927, 0.00012570899999999816, 0.00012536100000000092, 0.0001269300000000008, 0.00012634700000000235, 0.00012575000000000086, ...</msg>
<status status="PASS" starttime="20201112 09:43:25.636" endtime="20201112 09:43:25.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.653" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 09:43:25.652" endtime="20201112 09:43:25.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.656" level="INFO">VALUE: [0.00012547200000000147, 0.0001250970000000011, 0.00012593099999999927, 0.00012570899999999816, 0.00012536100000000092, 0.0001269300000000008, 0.00012634700000000235, 0.00012575000000000086, 0.00012508299999999806, 0.0001255000000000006, 0.00012683399999999928, 0.00012611199999999767, 0.00012593099999999927, 0.0001259719999999985, 0.00012541599999999972, 0.00012516599999999947, 0.00012684699999999938, 0.00012576400000000043, 0.00012626400000000093, 0.0001260979999999981, 0.00012622299999999823, 0.00012644399999999986, 0.00012618000000000004, 0.0001255139999999967, 0.00012511100000000067, 0.0001264170000000002, 0.00012651400000000118, 0.0001255979999999976, 0.00012576400000000043, 0.00012520800000000165, 0.0001259299999999998, 0.00012534700000000135, 0.00012526399999999993, 0.00012576400000000043, 0.00012526399999999993, 0.0001261109999999982, 0.00012526399999999993, 0.00012576400000000043, 0.0001269300000000008, 0.00012583300000000228, 0.00012675000000000186, 0.00012593099999999927, 0.00012634799999999835, 0.00012526399999999993, 0.00012508300000000153, 0.0001267499999999984, 0.0001264170000000002, 0.00012668100000000002, 0.00012608299999999906, 0.000125778]</msg>
<status status="PASS" starttime="20201112 09:43:25.654" endtime="20201112 09:43:25.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.649" endtime="20201112 09:43:25.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.659" endtime="20201112 09:43:25.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:25.663" endtime="20201112 09:43:25.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.661" endtime="20201112 09:43:25.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.658" endtime="20201112 09:43:25.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.285" endtime="20201112 09:43:25.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.285" endtime="20201112 09:43:25.684"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.693" endtime="20201112 09:43:25.714"></status>
</kw>
<msg timestamp="20201112 09:43:25.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.691" endtime="20201112 09:43:25.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.715" endtime="20201112 09:43:25.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.718" endtime="20201112 09:43:25.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.688" endtime="20201112 09:43:25.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.686" endtime="20201112 09:43:25.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.728" endtime="20201112 09:43:26.014"></status>
</kw>
<msg timestamp="20201112 09:43:26.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.727" endtime="20201112 09:43:26.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.018" endtime="20201112 09:43:26.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.027" endtime="20201112 09:43:26.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.724" endtime="20201112 09:43:26.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.722" endtime="20201112 09:43:26.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:26.034" level="INFO">${RESULT} = [{'time': 0.022616569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012744400000000086, 'source_diff': 0.00012744400000000086}, {'time': 0.022756569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:26.030" endtime="20201112 09:43:26.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:26.048" level="INFO">${ACCURACY} = {'diff': [0.00012744400000000086, 0.0001282499999999999, 0.00012859699999999766, 0.00012792999999999832, 0.0001275139999999987, 0.00012859700000000113, 0.00012722199999999975, 0.00012805599999999792, ...</msg>
<status status="PASS" starttime="20201112 09:43:26.035" endtime="20201112 09:43:26.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.053" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 09:43:26.052" endtime="20201112 09:43:26.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.056" level="INFO">VALUE: [0.00012744400000000086, 0.0001282499999999999, 0.00012859699999999766, 0.00012792999999999832, 0.0001275139999999987, 0.00012859700000000113, 0.00012722199999999975, 0.00012805599999999792, 0.0001284859999999971, 0.00012727700000000203, 0.00012823600000000032, 0.00012850000000000014, 0.0001282499999999999, 0.00012826399999999946, 0.00012859700000000113, 0.00012802799999999878, 0.0001280980000000001, 0.00012894400000000236, 0.00012884700000000138, 0.00012859700000000113, 0.00012726400000000193, 0.00012740299999999816, 0.00012852800000000275, 0.00012841699999999873, 0.0001280269999999993, 0.000128472000000001, 0.00012892999999999932, 0.000128778000000003, 0.00012809700000000063, 0.00012827799999999903, 0.00012708399999999953, 0.00012891699999999923, 0.0001283889999999996, 0.00012892999999999932, 0.0001281940000000016, 0.0001290140000000002, 0.00012759700000000013, 0.00012894499999999837, 0.00012866699999999898, 0.00012884700000000138, 0.0001274300000000013, 0.00012731900000000074, 0.00012844400000000186, 0.00012819499999999762, 0.00012869500000000159, 0.00012879200000000257, 0.00012891699999999923, 0.00012845800000000143, 0.0001279439999999979, 0.00012736099999999945]</msg>
<status status="PASS" starttime="20201112 09:43:26.054" endtime="20201112 09:43:26.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.049" endtime="20201112 09:43:26.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.060" endtime="20201112 09:43:26.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:26.063" endtime="20201112 09:43:26.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.062" endtime="20201112 09:43:26.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.058" endtime="20201112 09:43:26.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.685" endtime="20201112 09:43:26.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.684" endtime="20201112 09:43:26.084"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.093" endtime="20201112 09:43:26.114"></status>
</kw>
<msg timestamp="20201112 09:43:26.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.091" endtime="20201112 09:43:26.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.115" endtime="20201112 09:43:26.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.118" endtime="20201112 09:43:26.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.089" endtime="20201112 09:43:26.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.086" endtime="20201112 09:43:26.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.128" endtime="20201112 09:43:26.415"></status>
</kw>
<msg timestamp="20201112 09:43:26.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.127" endtime="20201112 09:43:26.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022439722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.419" endtime="20201112 09:43:26.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.427" endtime="20201112 09:43:26.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.124" endtime="20201112 09:43:26.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.122" endtime="20201112 09:43:26.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:26.434" level="INFO">${RESULT} = [{'time': 0.022568833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001291110000000012, 'source_diff': 0.0001291110000000012}, {'time': 0.022708861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:26.431" endtime="20201112 09:43:26.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:26.448" level="INFO">${ACCURACY} = {'diff': [0.0001291110000000012, 0.00012926400000000046, 0.00012994499999999937, 0.00013102800000000178, 0.0001307639999999985, 0.00012959799999999813, 0.00012993000000000032, 0.0001301799999999971, 0...</msg>
<status status="PASS" starttime="20201112 09:43:26.435" endtime="20201112 09:43:26.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.453" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 09:43:26.452" endtime="20201112 09:43:26.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.455" level="INFO">VALUE: [0.0001291110000000012, 0.00012926400000000046, 0.00012994499999999937, 0.00013102800000000178, 0.0001307639999999985, 0.00012959799999999813, 0.00012993000000000032, 0.0001301799999999971, 0.00012986099999999848, 0.00013009700000000263, 0.00013009699999999916, 0.00012959700000000213, 0.00012974999999999792, 0.00012922300000000123, 0.00012991599999999728, 0.00013087499999999905, 0.00012959699999999866, 0.00013011099999999873, 0.0001304310000000003, 0.00013099999999999917, 0.0001302769999999981, 0.00012997199999999903, 0.00012984700000000238, 0.00013092999999999785, 0.00013000000000000164, 0.00013074999999999892, 0.0001304310000000003, 0.00013034799999999888, 0.00013009799999999863, 0.0001305830000000001, 0.0001292500000000009, 0.00013076400000000196, 0.00013059700000000313, 0.0001301110000000022, 0.0001307500000000024, 0.00013026299999999852, 0.00012961099999999823, 0.0001309440000000009, 0.00012913899999999687, 0.00012987499999999805, 0.00013011099999999873, 0.0001302500000000019, 0.00012977800000000053, 0.00013077700000000206, 0.00012911099999999773, 0.00012961099999999823, 0.0001300829999999996, 0.00012941699999999973, 0.0001294859999999981, 0.00013044500000000334]</msg>
<status status="PASS" starttime="20201112 09:43:26.454" endtime="20201112 09:43:26.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.449" endtime="20201112 09:43:26.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.459" endtime="20201112 09:43:26.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:26.463" endtime="20201112 09:43:26.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.461" endtime="20201112 09:43:26.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.457" endtime="20201112 09:43:26.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.085" endtime="20201112 09:43:26.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.084" endtime="20201112 09:43:26.484"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.493" endtime="20201112 09:43:26.514"></status>
</kw>
<msg timestamp="20201112 09:43:26.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.491" endtime="20201112 09:43:26.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.516" endtime="20201112 09:43:26.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.518" endtime="20201112 09:43:26.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.488" endtime="20201112 09:43:26.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.486" endtime="20201112 09:43:26.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.529" endtime="20201112 09:43:26.815"></status>
</kw>
<msg timestamp="20201112 09:43:26.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022705903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.527" endtime="20201112 09:43:26.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022705903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.819" endtime="20201112 09:43:26.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.828" endtime="20201112 09:43:26.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.525" endtime="20201112 09:43:26.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.523" endtime="20201112 09:43:26.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:26.835" level="INFO">${RESULT} = [{'time': 0.022837014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013111099999999973, 'source_diff': 0.00013111099999999973}, {'time': 0.022981042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:26.831" endtime="20201112 09:43:26.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:26.848" level="INFO">${ACCURACY} = {'diff': [0.00013111099999999973, 0.00013293099999999933, 0.0001326669999999995, 0.00013150000000000314, 0.00013141599999999878, 0.0001327219999999983, 0.00013234699999999794, 0.000132264, 0.000132778...</msg>
<status status="PASS" starttime="20201112 09:43:26.836" endtime="20201112 09:43:26.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.853" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 09:43:26.852" endtime="20201112 09:43:26.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.855" level="INFO">VALUE: [0.00013111099999999973, 0.00013293099999999933, 0.0001326669999999995, 0.00013150000000000314, 0.00013141599999999878, 0.0001327219999999983, 0.00013234699999999794, 0.000132264, 0.00013277800000000006, 0.000132264, 0.00013126299999999952, 0.00013247200000000153, 0.00013159700000000066, 0.00013298599999999813, 0.00013251400000000024, 0.00013206999999999802, 0.00013208400000000106, 0.00013294399999999942, 0.00013218000000000257, 0.0001318470000000009, 0.00013142999999999835, 0.00013168100000000155, 0.0001320279999999993, 0.0001326120000000007, 0.00013193099999999833, 0.00013234699999999794, 0.0001325969999999982, 0.00013192999999999885, 0.00013151399999999924, 0.00013109700000000016, 0.0001314310000000013, 0.00013234800000000088, 0.00013291600000000028, 0.00013244399999999892, 0.00013223600000000085, 0.00013259700000000166, 0.0001329449999999989, 0.00013169500000000112, 0.00013218099999999858, 0.00013140300000000216, 0.00013211099999999726, 0.00013191599999999928, 0.00013273700000000083, 0.00013218100000000205, 0.0001326669999999995, 0.00013151399999999924, 0.00013295800000000246, 0.0001328470000000019, 0.0001320969999999977, 0.00013292999999999985]</msg>
<status status="PASS" starttime="20201112 09:43:26.854" endtime="20201112 09:43:26.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.849" endtime="20201112 09:43:26.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.863" endtime="20201112 09:43:26.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:26.867" endtime="20201112 09:43:26.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.865" endtime="20201112 09:43:26.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.861" endtime="20201112 09:43:26.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.485" endtime="20201112 09:43:26.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.484" endtime="20201112 09:43:26.888"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.896" endtime="20201112 09:43:26.918"></status>
</kw>
<msg timestamp="20201112 09:43:26.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.895" endtime="20201112 09:43:26.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.920" endtime="20201112 09:43:26.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.922" endtime="20201112 09:43:26.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.892" endtime="20201112 09:43:26.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.890" endtime="20201112 09:43:26.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.933" endtime="20201112 09:43:27.219"></status>
</kw>
<msg timestamp="20201112 09:43:27.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022566028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022700139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.931" endtime="20201112 09:43:27.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022566028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022700139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.223" endtime="20201112 09:43:27.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.231" endtime="20201112 09:43:27.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.928" endtime="20201112 09:43:27.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.926" endtime="20201112 09:43:27.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:27.238" level="INFO">${RESULT} = [{'time': 0.022700139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013411100000000273, 'source_diff': 0.00013411100000000273}, {'time': 0.022844153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:27.235" endtime="20201112 09:43:27.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:27.252" level="INFO">${ACCURACY} = {'diff': [0.00013411100000000273, 0.00013376399999999802, 0.00013409799999999916, 0.0001340280000000013, 0.0001335830000000031, 0.00013319399999999967, 0.0001335969999999992, 0.0001345419999999979, 0....</msg>
<status status="PASS" starttime="20201112 09:43:27.239" endtime="20201112 09:43:27.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.256" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 09:43:27.255" endtime="20201112 09:43:27.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.259" level="INFO">VALUE: [0.00013411100000000273, 0.00013376399999999802, 0.00013409799999999916, 0.0001340280000000013, 0.0001335830000000031, 0.00013319399999999967, 0.0001335969999999992, 0.0001345419999999979, 0.0001345840000000001, 0.00013493099999999786, 0.00013501400000000274, 0.00013427699999999862, 0.00013394400000000042, 0.00013383299999999987, 0.00013426399999999852, 0.00013358299999999962, 0.00013409700000000316, 0.0001333189999999998, 0.0001335969999999992, 0.0001337640000000015, 0.0001345970000000002, 0.00013325000000000142, 0.00013423599999999938, 0.00013493100000000133, 0.00013386200000000195, 0.0001330839999999986, 0.00013422199999999981, 0.00013359700000000266, 0.00013324999999999795, 0.00013441700000000126, 0.000133860999999999, 0.00013443100000000083, 0.0001343609999999995, 0.00013343000000000035, 0.00013452799999999834, 0.00013461099999999976, 0.0001337640000000015, 0.0001340969999999997, 0.0001344450000000004, 0.00013369400000000017, 0.00013456900000000105, 0.0001345970000000002, 0.00013494399999999795, 0.00013468100000000108, 0.00013384699999999944, 0.00013391700000000076, 0.00013356900000000005, 0.00013434699999999994, 0.00013476399999999902, 0.00013391600000000128]</msg>
<status status="PASS" starttime="20201112 09:43:27.257" endtime="20201112 09:43:27.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.253" endtime="20201112 09:43:27.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.263" endtime="20201112 09:43:27.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:27.266" endtime="20201112 09:43:27.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.265" endtime="20201112 09:43:27.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.261" endtime="20201112 09:43:27.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.888" endtime="20201112 09:43:27.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.888" endtime="20201112 09:43:27.287"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.296" endtime="20201112 09:43:27.318"></status>
</kw>
<msg timestamp="20201112 09:43:27.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.295" endtime="20201112 09:43:27.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.319" endtime="20201112 09:43:27.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.322" endtime="20201112 09:43:27.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.292" endtime="20201112 09:43:27.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.290" endtime="20201112 09:43:27.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.332" endtime="20201112 09:43:27.620"></status>
</kw>
<msg timestamp="20201112 09:43:27.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02246275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:27.331" endtime="20201112 09:43:27.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02246275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:27.624" endtime="20201112 09:43:27.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.632" endtime="20201112 09:43:27.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.328" endtime="20201112 09:43:27.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.326" endtime="20201112 09:43:27.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:27.639" level="INFO">${RESULT} = [{'time': 0.022598194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013544399999999845, 'source_diff': 0.00013544399999999845}, {'time': 0.022746236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:27.636" endtime="20201112 09:43:27.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:27.654" level="INFO">${ACCURACY} = {'diff': [0.00013544399999999845, 0.00013662499999999786, 0.00013523599999999691, 0.00013561100000000076, 0.0001357779999999996, 0.00013611100000000126, 0.00013594400000000242, 0.0001359719999999981, ...</msg>
<status status="PASS" starttime="20201112 09:43:27.640" endtime="20201112 09:43:27.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.658" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 09:43:27.657" endtime="20201112 09:43:27.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.661" level="INFO">VALUE: [0.00013544399999999845, 0.00013662499999999786, 0.00013523599999999691, 0.00013561100000000076, 0.0001357779999999996, 0.00013611100000000126, 0.00013594400000000242, 0.0001359719999999981, 0.0001357779999999996, 0.00013508300000000112, 0.00013643100000000283, 0.0001360549999999995, 0.00013676400000000102, 0.00013558399999999762, 0.00013693000000000038, 0.00013616600000000006, 0.00013517999999999863, 0.000135861000000001, 0.0001354169999999988, 0.00013586200000000048, 0.00013631899999999933, 0.0001353329999999979, 0.00013622200000000181, 0.00013647200000000206, 0.00013626399999999705, 0.00013643099999999936, 0.00013636099999999804, 0.00013626399999999705, 0.00013576400000000002, 0.0001367910000000007, 0.0001367780000000006, 0.00013625000000000095, 0.0001350970000000007, 0.00013626400000000052, 0.0001367369999999979, 0.0001350970000000007, 0.00013533300000000137, 0.00013649999999999773, 0.00013633300000000237, 0.00013511100000000026, 0.0001352779999999991, 0.0001360979999999977, 0.00013561100000000076, 0.0001356109999999973, 0.00013573600000000088, 0.00013608299999999865, 0.00013561100000000076, 0.00013556999999999805, 0.00013526399999999952, 0.0001369170000000003]</msg>
<status status="PASS" starttime="20201112 09:43:27.660" endtime="20201112 09:43:27.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.655" endtime="20201112 09:43:27.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.665" endtime="20201112 09:43:27.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:27.668" endtime="20201112 09:43:27.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.667" endtime="20201112 09:43:27.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.663" endtime="20201112 09:43:27.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.288" endtime="20201112 09:43:27.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.287" endtime="20201112 09:43:27.689"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.698" endtime="20201112 09:43:27.720"></status>
</kw>
<msg timestamp="20201112 09:43:27.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.696" endtime="20201112 09:43:27.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.721" endtime="20201112 09:43:27.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.724" endtime="20201112 09:43:27.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.694" endtime="20201112 09:43:27.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.692" endtime="20201112 09:43:27.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.734" endtime="20201112 09:43:28.021"></status>
</kw>
<msg timestamp="20201112 09:43:28.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022892486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023030611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.733" endtime="20201112 09:43:28.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022892486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023030611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.025" endtime="20201112 09:43:28.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.033" endtime="20201112 09:43:28.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.730" endtime="20201112 09:43:28.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.728" endtime="20201112 09:43:28.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:28.040" level="INFO">${RESULT} = [{'time': 0.023030611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013812499999999936, 'source_diff': 0.00013812499999999936}, {'time': 0.023184625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:28.037" endtime="20201112 09:43:28.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:28.054" level="INFO">${ACCURACY} = {'diff': [0.00013812499999999936, 0.00013876399999999955, 0.00013743100000000036, 0.0001381810000000011, 0.0001386810000000016, 0.0001390269999999999, 0.00013824999999999948, 0.0001387780000000026, 0....</msg>
<status status="PASS" starttime="20201112 09:43:28.041" endtime="20201112 09:43:28.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.059" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 09:43:28.058" endtime="20201112 09:43:28.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.062" level="INFO">VALUE: [0.00013812499999999936, 0.00013876399999999955, 0.00013743100000000036, 0.0001381810000000011, 0.0001386810000000016, 0.0001390269999999999, 0.00013824999999999948, 0.0001387780000000026, 0.0001372780000000011, 0.00013726400000000152, 0.00013793100000000086, 0.00013862499999999986, 0.00013904099999999947, 0.00013842999999999842, 0.00013718000000000063, 0.0001385139999999993, 0.00013793100000000086, 0.00013888899999999968, 0.00013776399999999855, 0.0001377910000000017, 0.00013776400000000202, 0.00013872200000000084, 0.00013708299999999965, 0.00013812500000000283, 0.00013793100000000086, 0.00013769500000000018, 0.0001378200000000003, 0.00013781899999999736, 0.00013775000000000245, 0.00013776399999999855, 0.00013702800000000084, 0.00013890300000000272, 0.00013719499999999968, 0.00013904100000000294, 0.0001378879999999992, 0.0001390139999999998, 0.00013792999999999792, 0.0001371810000000001, 0.00013884700000000097, 0.0001370840000000026, 0.00013742999999999742, 0.0001380139999999988, 0.0001381109999999998, 0.00013756900000000058, 0.00013874999999999998, 0.0001379309999999974, 0.00013818099999999764, 0.0001386810000000016, 0.00013869399999999824, 0.00013734699999999947]</msg>
<status status="PASS" starttime="20201112 09:43:28.060" endtime="20201112 09:43:28.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.055" endtime="20201112 09:43:28.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.065" endtime="20201112 09:43:28.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:28.069" endtime="20201112 09:43:28.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.068" endtime="20201112 09:43:28.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.064" endtime="20201112 09:43:28.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.690" endtime="20201112 09:43:28.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.690" endtime="20201112 09:43:28.091"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.100" endtime="20201112 09:43:28.122"></status>
</kw>
<msg timestamp="20201112 09:43:28.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.098" endtime="20201112 09:43:28.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.123" endtime="20201112 09:43:28.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.126" endtime="20201112 09:43:28.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.095" endtime="20201112 09:43:28.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.093" endtime="20201112 09:43:28.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.136" endtime="20201112 09:43:28.424"></status>
</kw>
<msg timestamp="20201112 09:43:28.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023053292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02319325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:28.135" endtime="20201112 09:43:28.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023053292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02319325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:28.428" endtime="20201112 09:43:28.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.436" endtime="20201112 09:43:28.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.132" endtime="20201112 09:43:28.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.130" endtime="20201112 09:43:28.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:28.444" level="INFO">${RESULT} = [{'time': 0.02319325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013995799999999906, 'source_diff': 0.00013995799999999906}, {'time': 0.02334525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:28.440" endtime="20201112 09:43:28.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:28.457" level="INFO">${ACCURACY} = {'diff': [0.00013995799999999906, 0.0001404309999999999, 0.00014031999999999933, 0.0001404309999999999, 0.00014016700000000007, 0.00013917999999999917, 0.00014000000000000123, 0.00014094400000000049, ...</msg>
<status status="PASS" starttime="20201112 09:43:28.445" endtime="20201112 09:43:28.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.462" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 09:43:28.461" endtime="20201112 09:43:28.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.465" level="INFO">VALUE: [0.00013995799999999906, 0.0001404309999999999, 0.00014031999999999933, 0.0001404309999999999, 0.00014016700000000007, 0.00013917999999999917, 0.00014000000000000123, 0.00014094400000000049, 0.00014001399999999734, 0.00014022299999999835, 0.00013925000000000048, 0.00014016700000000007, 0.0001399019999999973, 0.00014084700000000297, 0.00014068000000000067, 0.0001394309999999989, 0.00014026399999999759, 0.00013940299999999975, 0.00014002699999999743, 0.00014044399999999999, 0.00014083299999999993, 0.00014038900000000118, 0.00013994399999999949, 0.00013973600000000141, 0.0001399720000000021, 0.00014001300000000133, 0.00014044399999999999, 0.00014076400000000155, 0.00013912500000000036, 0.00013930599999999876, 0.00013926400000000005, 0.0001409310000000004, 0.00013934800000000094, 0.00014025000000000148, 0.00013991699999999982, 0.00014033299999999943, 0.00014059699999999925, 0.00014006999999999908, 0.00013993100000000286, 0.00014031899999999986, 0.00013925000000000048, 0.00014043000000000042, 0.00014068000000000067, 0.0001398469999999985, 0.00014076400000000155, 0.00013970900000000175, 0.00013976400000000055, 0.00013943000000000288, 0.00014033299999999943, 0.00014077799999999766]</msg>
<status status="PASS" starttime="20201112 09:43:28.463" endtime="20201112 09:43:28.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.458" endtime="20201112 09:43:28.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.468" endtime="20201112 09:43:28.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:28.472" endtime="20201112 09:43:28.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.470" endtime="20201112 09:43:28.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.467" endtime="20201112 09:43:28.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.092" endtime="20201112 09:43:28.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.091" endtime="20201112 09:43:28.493"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.502" endtime="20201112 09:43:28.524"></status>
</kw>
<msg timestamp="20201112 09:43:28.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.501" endtime="20201112 09:43:28.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.526" endtime="20201112 09:43:28.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.528" endtime="20201112 09:43:28.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.498" endtime="20201112 09:43:28.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.496" endtime="20201112 09:43:28.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.539" endtime="20201112 09:43:28.825"></status>
</kw>
<msg timestamp="20201112 09:43:28.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022440056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022582, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:28.537" endtime="20201112 09:43:28.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022440056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022582, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:28.830" endtime="20201112 09:43:28.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.838" endtime="20201112 09:43:28.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.535" endtime="20201112 09:43:28.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.533" endtime="20201112 09:43:28.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:28.845" level="INFO">${RESULT} = [{'time': 0.022582, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014194400000000149, 'source_diff': 0.00014194400000000149}, {'time': 0.022744028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:28.841" endtime="20201112 09:43:28.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:28.858" level="INFO">${ACCURACY} = {'diff': [0.00014194400000000149, 0.00014259699999999778, 0.0001416119999999993, 0.00014176399999999909, 0.00014276400000000009, 0.0001420829999999977, 0.00014211100000000032, 0.00014261099999999735, ...</msg>
<status status="PASS" starttime="20201112 09:43:28.846" endtime="20201112 09:43:28.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.863" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 09:43:28.862" endtime="20201112 09:43:28.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.866" level="INFO">VALUE: [0.00014194400000000149, 0.00014259699999999778, 0.0001416119999999993, 0.00014176399999999909, 0.00014276400000000009, 0.0001420829999999977, 0.00014211100000000032, 0.00014261099999999735, 0.00014194399999999802, 0.00014234800000000047, 0.00014227699999999968, 0.00014172200000000038, 0.00014163899999999896, 0.00014240299999999928, 0.0001415279999999984, 0.00014259800000000072, 0.00014245900000000103, 0.0001421249999999999, 0.00014176400000000255, 0.00014142999999999795, 0.00014251399999999984, 0.00014276400000000009, 0.0001424860000000007, 0.00014168099999999767, 0.00014133300000000043, 0.00014192999999999845, 0.00014301400000000034, 0.0001425690000000021, 0.00014247200000000113, 0.000142444999999998, 0.00014291699999999935, 0.0001412629999999991, 0.00014158300000000068, 0.00014206899999999814, 0.00014275000000000052, 0.00014175000000000298, 0.000142444999999998, 0.0001428609999999976, 0.00014176399999999909, 0.00014109699999999975, 0.00014186100000000007, 0.00014300000000000077, 0.00014291699999999935, 0.00014197200000000063, 0.00014177699999999918, 0.00014194399999999802, 0.00014216599999999913, 0.00014123600000000291, 0.00014201399999999934, 0.0001425829999999982]</msg>
<status status="PASS" starttime="20201112 09:43:28.864" endtime="20201112 09:43:28.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.859" endtime="20201112 09:43:28.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.869" endtime="20201112 09:43:28.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:28.873" endtime="20201112 09:43:28.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.871" endtime="20201112 09:43:28.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.868" endtime="20201112 09:43:28.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.494" endtime="20201112 09:43:28.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.493" endtime="20201112 09:43:28.894"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.903" endtime="20201112 09:43:28.926"></status>
</kw>
<msg timestamp="20201112 09:43:28.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.901" endtime="20201112 09:43:28.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.927" endtime="20201112 09:43:28.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.930" endtime="20201112 09:43:28.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.899" endtime="20201112 09:43:28.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.897" endtime="20201112 09:43:28.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.940" endtime="20201112 09:43:29.226"></status>
</kw>
<msg timestamp="20201112 09:43:29.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022926, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023070417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:28.939" endtime="20201112 09:43:29.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022926, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023070417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:29.230" endtime="20201112 09:43:29.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.238" endtime="20201112 09:43:29.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.936" endtime="20201112 09:43:29.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.934" endtime="20201112 09:43:29.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:29.245" level="INFO">${RESULT} = [{'time': 0.023070417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014441700000000085, 'source_diff': 0.00014441700000000085}, {'time': 0.023232431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:29.242" endtime="20201112 09:43:29.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:29.260" level="INFO">${ACCURACY} = {'diff': [0.00014441700000000085, 0.0001431250000000009, 0.0001436519999999976, 0.00014406999999999962, 0.00014477800000000166, 0.00014462499999999892, 0.00014376399999999762, 0.00014340300000000028, ...</msg>
<status status="PASS" starttime="20201112 09:43:29.246" endtime="20201112 09:43:29.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.265" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 09:43:29.264" endtime="20201112 09:43:29.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.267" level="INFO">VALUE: [0.00014441700000000085, 0.0001431250000000009, 0.0001436519999999976, 0.00014406999999999962, 0.00014477800000000166, 0.00014462499999999892, 0.00014376399999999762, 0.00014340300000000028, 0.00014418100000000017, 0.0001440280000000009, 0.00014325000000000102, 0.00014476400000000209, 0.00014409700000000275, 0.00014427800000000116, 0.00014376399999999762, 0.00014325000000000102, 0.00014493000000000145, 0.00014434699999999953, 0.00014376400000000109, 0.00014391700000000035, 0.00014418100000000017, 0.00014419400000000027, 0.0001436800000000002, 0.00014401400000000134, 0.00014444400000000052, 0.000144832999999997, 0.00014413799999999852, 0.00014411100000000232, 0.00014476399999999862, 0.0001432630000000011, 0.00014342999999999995, 0.00014486100000000307, 0.00014376400000000109, 0.00014409699999999928, 0.00014326400000000059, 0.00014343099999999942, 0.00014434699999999953, 0.00014409699999999928, 0.00014393000000000045, 0.00014468100000000067, 0.00014451400000000184, 0.00014426399999999812, 0.00014426400000000159, 0.00014325000000000102, 0.00014361100000000182, 0.00014388899999999774, 0.00014487499999999917, 0.00014375000000000152, 0.00014490199999999884, 0.00014497200000000016]</msg>
<status status="PASS" starttime="20201112 09:43:29.266" endtime="20201112 09:43:29.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.261" endtime="20201112 09:43:29.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.271" endtime="20201112 09:43:29.272"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:29.275" endtime="20201112 09:43:29.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.273" endtime="20201112 09:43:29.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.269" endtime="20201112 09:43:29.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.895" endtime="20201112 09:43:29.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.894" endtime="20201112 09:43:29.295"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.305" endtime="20201112 09:43:29.327"></status>
</kw>
<msg timestamp="20201112 09:43:29.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.303" endtime="20201112 09:43:29.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.329" endtime="20201112 09:43:29.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.332" endtime="20201112 09:43:29.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.301" endtime="20201112 09:43:29.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.298" endtime="20201112 09:43:29.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.342" endtime="20201112 09:43:29.629"></status>
</kw>
<msg timestamp="20201112 09:43:29.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023266236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023411528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.340" endtime="20201112 09:43:29.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023266236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023411528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.633" endtime="20201112 09:43:29.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.641" endtime="20201112 09:43:29.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.338" endtime="20201112 09:43:29.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.336" endtime="20201112 09:43:29.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:29.648" level="INFO">${RESULT} = [{'time': 0.023411528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014529200000000173, 'source_diff': 0.00014529200000000173}, {'time': 0.023573542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:29.645" endtime="20201112 09:43:29.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:29.662" level="INFO">${ACCURACY} = {'diff': [0.00014529200000000173, 0.0001451809999999977, 0.00014516699999999813, 0.00014702700000000096, 0.00014630599999999883, 0.0001465419999999995, 0.00014656899999999917, 0.0001466390000000005, 0...</msg>
<status status="PASS" starttime="20201112 09:43:29.649" endtime="20201112 09:43:29.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.666" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 09:43:29.665" endtime="20201112 09:43:29.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.669" level="INFO">VALUE: [0.00014529200000000173, 0.0001451809999999977, 0.00014516699999999813, 0.00014702700000000096, 0.00014630599999999883, 0.0001465419999999995, 0.00014656899999999917, 0.0001466390000000005, 0.00014627799999999969, 0.00014576399999999962, 0.00014592999999999898, 0.00014674999999999758, 0.0001451800000000017, 0.0001456670000000021, 0.00014518100000000117, 0.00014634799999999754, 0.00014544400000000152, 0.00014587500000000017, 0.0001453060000000013, 0.00014541700000000185, 0.00014583300000000146, 0.00014511099999999985, 0.00014643100000000242, 0.00014611100000000085, 0.00014684700000000203, 0.00014593000000000245, 0.00014684699999999856, 0.00014559700000000078, 0.00014609800000000076, 0.00014540300000000228, 0.00014529099999999878, 0.00014677800000000019, 0.00014691699999999988, 0.00014666699999999963, 0.0001460000000000003, 0.00014593099999999845, 0.00014619400000000227, 0.00014584700000000103, 0.00014587500000000017, 0.00014551399999999937, 0.00014644499999999852, 0.0001461809999999987, 0.00014668100000000267, 0.0001455410000000025, 0.00014690200000000084, 0.00014687500000000117, 0.00014511099999999985, 0.00014644499999999852, 0.00014669499999999877, 0.00014651400000000037]</msg>
<status status="PASS" starttime="20201112 09:43:29.668" endtime="20201112 09:43:29.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.663" endtime="20201112 09:43:29.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.673" endtime="20201112 09:43:29.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:29.676" endtime="20201112 09:43:29.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.675" endtime="20201112 09:43:29.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.671" endtime="20201112 09:43:29.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.296" endtime="20201112 09:43:29.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.296" endtime="20201112 09:43:29.697"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.706" endtime="20201112 09:43:29.729"></status>
</kw>
<msg timestamp="20201112 09:43:29.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.705" endtime="20201112 09:43:29.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.731" endtime="20201112 09:43:29.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.733" endtime="20201112 09:43:29.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.702" endtime="20201112 09:43:29.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.700" endtime="20201112 09:43:29.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.743" endtime="20201112 09:43:30.030"></status>
</kw>
<msg timestamp="20201112 09:43:30.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022669431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.742" endtime="20201112 09:43:30.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022520958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022669431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.034" endtime="20201112 09:43:30.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.043" endtime="20201112 09:43:30.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.739" endtime="20201112 09:43:30.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.737" endtime="20201112 09:43:30.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:30.050" level="INFO">${RESULT} = [{'time': 0.022669431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014847299999999966, 'source_diff': 0.00014847299999999966}, {'time': 0.022831444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:30.046" endtime="20201112 09:43:30.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:30.063" level="INFO">${ACCURACY} = {'diff': [0.00014847299999999966, 0.00014729100000000078, 0.0001470969999999988, 0.00014801400000000187, 0.00014895899999999712, 0.00014801400000000187, 0.0001475969999999993, 0.00014731899999999992, ...</msg>
<status status="PASS" starttime="20201112 09:43:30.051" endtime="20201112 09:43:30.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.068" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 09:43:30.067" endtime="20201112 09:43:30.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.071" level="INFO">VALUE: [0.00014847299999999966, 0.00014729100000000078, 0.0001470969999999988, 0.00014801400000000187, 0.00014895899999999712, 0.00014801400000000187, 0.0001475969999999993, 0.00014731899999999992, 0.00014826399999999865, 0.0001489299999999985, 0.0001473329999999995, 0.00014845800000000062, 0.00014884700000000056, 0.00014809799999999929, 0.00014859799999999979, 0.00014726400000000112, 0.00014726399999999765, 0.00014776400000000162, 0.00014862499999999945, 0.00014848599999999976, 0.00014761099999999888, 0.00014877799999999872, 0.0001487770000000027, 0.0001480969999999998, 0.00014744400000000005, 0.0001475000000000018, 0.00014826399999999865, 0.00014794500000000002, 0.0001471809999999997, 0.00014768000000000073, 0.00014738899999999777, 0.0001475689999999967, 0.00014876399999999915, 0.00014726399999999765, 0.00014843100000000095, 0.0001476810000000002, 0.00014799999999999883, 0.00014808300000000024, 0.00014826399999999865, 0.00014790299999999784, 0.0001481810000000007, 0.0001488619999999996, 0.00014844399999999758, 0.00014818000000000123, 0.00014734700000000253, 0.00014774999999999858, 0.00014876399999999915, 0.00014844500000000052, 0.00014784799999999904, 0.000148429999999998]</msg>
<status status="PASS" starttime="20201112 09:43:30.069" endtime="20201112 09:43:30.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.064" endtime="20201112 09:43:30.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.074" endtime="20201112 09:43:30.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:30.078" endtime="20201112 09:43:30.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.076" endtime="20201112 09:43:30.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.073" endtime="20201112 09:43:30.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.698" endtime="20201112 09:43:30.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.697" endtime="20201112 09:43:30.099"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.108" endtime="20201112 09:43:30.130"></status>
</kw>
<msg timestamp="20201112 09:43:30.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.106" endtime="20201112 09:43:30.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.131" endtime="20201112 09:43:30.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.134" endtime="20201112 09:43:30.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.103" endtime="20201112 09:43:30.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.101" endtime="20201112 09:43:30.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.144" endtime="20201112 09:43:30.430"></status>
</kw>
<msg timestamp="20201112 09:43:30.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022473347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226225, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:30.143" endtime="20201112 09:43:30.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022473347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226225, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:30.434" endtime="20201112 09:43:30.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.443" endtime="20201112 09:43:30.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.140" endtime="20201112 09:43:30.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.138" endtime="20201112 09:43:30.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:30.451" level="INFO">${RESULT} = [{'time': 0.0226225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001491529999999991, 'source_diff': 0.0001491529999999991}, {'time': 0.022786528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:30.447" endtime="20201112 09:43:30.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:30.464" level="INFO">${ACCURACY} = {'diff': [0.0001491529999999991, 0.00015080599999999986, 0.00014943100000000195, 0.00015038900000000077, 0.00014963900000000002, 0.00015009699999999834, 0.0001491109999999969, 0.0001501109999999979, 0...</msg>
<status status="PASS" starttime="20201112 09:43:30.452" endtime="20201112 09:43:30.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.469" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 09:43:30.468" endtime="20201112 09:43:30.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.472" level="INFO">VALUE: [0.0001491529999999991, 0.00015080599999999986, 0.00014943100000000195, 0.00015038900000000077, 0.00014963900000000002, 0.00015009699999999834, 0.0001491109999999969, 0.0001501109999999979, 0.00015026400000000065, 0.00015026399999999718, 0.00014944399999999858, 0.0001508469999999991, 0.00015093099999999998, 0.0001495139999999999, 0.00015076399999999768, 0.00014993100000000245, 0.0001510140000000014, 0.00015041600000000044, 0.0001493330000000015, 0.00014943099999999848, 0.0001498750000000007, 0.00015044500000000252, 0.00014952799999999947, 0.00014966699999999916, 0.00014980599999999886, 0.00015026400000000065, 0.00014908300000000124, 0.00014961100000000088, 0.00014994499999999855, 0.00015083400000000247, 0.000149429999999999, 0.00014986100000000113, 0.00015026400000000065, 0.00015059699999999884, 0.00015027799999999675, 0.00014976400000000015, 0.00015059699999999884, 0.00014958299999999827, 0.00014944400000000205, 0.0001494859999999973, 0.00015090300000000084, 0.00014948600000000076, 0.00015044399999999958, 0.0001493330000000015, 0.00014925000000000008, 0.0001490970000000008, 0.00014926399999999965, 0.0001507920000000003, 0.00015093099999999998, 0.00014951400000000337]</msg>
<status status="PASS" starttime="20201112 09:43:30.470" endtime="20201112 09:43:30.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.465" endtime="20201112 09:43:30.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.475" endtime="20201112 09:43:30.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:30.479" endtime="20201112 09:43:30.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.477" endtime="20201112 09:43:30.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.474" endtime="20201112 09:43:30.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.100" endtime="20201112 09:43:30.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.099" endtime="20201112 09:43:30.500"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.509" endtime="20201112 09:43:30.532"></status>
</kw>
<msg timestamp="20201112 09:43:30.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.507" endtime="20201112 09:43:30.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.533" endtime="20201112 09:43:30.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.536" endtime="20201112 09:43:30.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.505" endtime="20201112 09:43:30.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.503" endtime="20201112 09:43:30.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.546" endtime="20201112 09:43:30.833"></status>
</kw>
<msg timestamp="20201112 09:43:30.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022533472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.545" endtime="20201112 09:43:30.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022533472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.837" endtime="20201112 09:43:30.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.845" endtime="20201112 09:43:30.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.542" endtime="20201112 09:43:30.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.540" endtime="20201112 09:43:30.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:30.852" level="INFO">${RESULT} = [{'time': 0.022685597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015212499999999948, 'source_diff': 0.00015212499999999948}, {'time': 0.022855611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:30.849" endtime="20201112 09:43:30.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:30.867" level="INFO">${ACCURACY} = {'diff': [0.00015212499999999948, 0.0001519170000000014, 0.00015234699999999712, 0.00015244500000000105, 0.00015251399999999943, 0.00015209700000000034, 0.00015208300000000077, 0.00015276399999999968,...</msg>
<status status="PASS" starttime="20201112 09:43:30.853" endtime="20201112 09:43:30.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.872" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 09:43:30.871" endtime="20201112 09:43:30.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.874" level="INFO">VALUE: [0.00015212499999999948, 0.0001519170000000014, 0.00015234699999999712, 0.00015244500000000105, 0.00015251399999999943, 0.00015209700000000034, 0.00015208300000000077, 0.00015276399999999968, 0.00015176400000000215, 0.00015126399999999818, 0.00015108399999999925, 0.0001522499999999996, 0.00015242999999999854, 0.00015300000000000036, 0.0001519170000000014, 0.00015136100000000263, 0.00015143100000000048, 0.00015234800000000007, 0.00015159699999999984, 0.0001514439999999971, 0.0001530279999999995, 0.000151430999999997, 0.00015286100000000066, 0.00015158399999999975, 0.00015143100000000048, 0.00015152699999999852, 0.00015192999999999804, 0.00015236100000000016, 0.0001522499999999996, 0.0001529170000000024, 0.00015219499999999733, 0.00015216599999999872, 0.0001515140000000019, 0.00015276399999999968, 0.00015294499999999808, 0.00015150000000000233, 0.000152430999999998, 0.00015205500000000163, 0.00015106899999999673, 0.0001525829999999978, 0.0001522920000000018, 0.00015144500000000005, 0.00015251399999999943, 0.00015162499999999898, 0.00015177700000000224, 0.00015109699999999934, 0.00015187499999999923, 0.00015309699999999787, 0.0001529309999999985, 0.00015194500000000055]</msg>
<status status="PASS" starttime="20201112 09:43:30.873" endtime="20201112 09:43:30.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.868" endtime="20201112 09:43:30.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.878" endtime="20201112 09:43:30.880"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:30.882" endtime="20201112 09:43:30.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.880" endtime="20201112 09:43:30.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.877" endtime="20201112 09:43:30.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.501" endtime="20201112 09:43:30.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.500" endtime="20201112 09:43:30.903"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.912" endtime="20201112 09:43:30.934"></status>
</kw>
<msg timestamp="20201112 09:43:30.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.910" endtime="20201112 09:43:30.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.936" endtime="20201112 09:43:30.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.938" endtime="20201112 09:43:30.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.907" endtime="20201112 09:43:30.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.905" endtime="20201112 09:43:30.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.949" endtime="20201112 09:43:31.234"></status>
</kw>
<msg timestamp="20201112 09:43:31.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.947" endtime="20201112 09:43:31.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.239" endtime="20201112 09:43:31.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.247" endtime="20201112 09:43:31.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.945" endtime="20201112 09:43:31.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.943" endtime="20201112 09:43:31.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:31.254" level="INFO">${RESULT} = [{'time': 0.022670014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015363899999999708, 'source_diff': 0.00015363899999999708}, {'time': 0.022836014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:31.250" endtime="20201112 09:43:31.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:31.267" level="INFO">${ACCURACY} = {'diff': [0.00015363899999999708, 0.00015308300000000177, 0.0001532500000000006, 0.00015441700000000044, 0.00015366600000000022, 0.00015470799999999993, 0.00015401400000000093, 0.0001549310000000005, ...</msg>
<status status="PASS" starttime="20201112 09:43:31.255" endtime="20201112 09:43:31.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.272" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 09:43:31.271" endtime="20201112 09:43:31.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.275" level="INFO">VALUE: [0.00015363899999999708, 0.00015308300000000177, 0.0001532500000000006, 0.00015441700000000044, 0.00015366600000000022, 0.00015470799999999993, 0.00015401400000000093, 0.0001549310000000005, 0.00015318100000000223, 0.00015336200000000064, 0.00015451399999999796, 0.00015501399999999846, 0.00015443000000000054, 0.00015334699999999812, 0.00015498599999999932, 0.00015401400000000093, 0.00015461099999999894, 0.00015476299999999873, 0.00015308300000000177, 0.00015409699999999887, 0.0001544869999999983, 0.0001544999999999984, 0.00015424999999999814, 0.00015445799999999968, 0.00015311099999999744, 0.00015493000000000104, 0.00015468100000000026, 0.00015315299999999962, 0.00015419499999999933, 0.00015450000000000186, 0.0001549020000000019, 0.00015501399999999846, 0.00015326400000000018, 0.0001539309999999995, 0.00015318099999999876, 0.00015368099999999926, 0.00015502699999999855, 0.0001547639999999982, 0.0001541110000000019, 0.00015365300000000012, 0.0001539309999999995, 0.0001539999999999979, 0.0001537500000000011, 0.00015447199999999925, 0.00015337500000000073, 0.0001531799999999993, 0.0001533340000000015, 0.00015308399999999778, 0.00015409799999999835, 0.00015455500000000066]</msg>
<status status="PASS" starttime="20201112 09:43:31.273" endtime="20201112 09:43:31.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.268" endtime="20201112 09:43:31.276"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.278" endtime="20201112 09:43:31.280"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:31.282" endtime="20201112 09:43:31.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.281" endtime="20201112 09:43:31.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.277" endtime="20201112 09:43:31.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.904" endtime="20201112 09:43:31.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.903" endtime="20201112 09:43:31.303"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.312" endtime="20201112 09:43:31.334"></status>
</kw>
<msg timestamp="20201112 09:43:31.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.310" endtime="20201112 09:43:31.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.335" endtime="20201112 09:43:31.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.338" endtime="20201112 09:43:31.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.308" endtime="20201112 09:43:31.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.306" endtime="20201112 09:43:31.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.348" endtime="20201112 09:43:31.635"></status>
</kw>
<msg timestamp="20201112 09:43:31.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02249125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:31.347" endtime="20201112 09:43:31.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02249125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:31.639" endtime="20201112 09:43:31.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.648" endtime="20201112 09:43:31.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.344" endtime="20201112 09:43:31.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.342" endtime="20201112 09:43:31.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:31.655" level="INFO">${RESULT} = [{'time': 0.022646736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015548599999999982, 'source_diff': 0.00015548599999999982}, {'time': 0.022822708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:31.651" endtime="20201112 09:43:31.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:31.668" level="INFO">${ACCURACY} = {'diff': [0.00015548599999999982, 0.00015605500000000216, 0.00015677799999999978, 0.00015677799999999978, 0.00015608299999999783, 0.00015609800000000035, 0.0001562639999999997, 0.00015613899999999958,...</msg>
<status status="PASS" starttime="20201112 09:43:31.656" endtime="20201112 09:43:31.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.673" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 09:43:31.672" endtime="20201112 09:43:31.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.676" level="INFO">VALUE: [0.00015548599999999982, 0.00015605500000000216, 0.00015677799999999978, 0.00015677799999999978, 0.00015608299999999783, 0.00015609800000000035, 0.0001562639999999997, 0.00015613899999999958, 0.00015509699999999987, 0.00015645800000000168, 0.00015523599999999957, 0.00015577800000000225, 0.00015594500000000108, 0.00015515200000000215, 0.00015547200000000025, 0.0001564029999999994, 0.00015584700000000062, 0.00015611100000000044, 0.00015658400000000128, 0.0001564440000000021, 0.00015684699999999815, 0.00015592999999999857, 0.00015637500000000026, 0.00015643099999999854, 0.00015551399999999896, 0.00015659800000000085, 0.00015509699999999987, 0.00015543000000000154, 0.0001555830000000008, 0.00015574999999999964, 0.000155431000000001, 0.0001558480000000001, 0.00015593000000000204, 0.00015563899999999908, 0.00015519400000000086, 0.00015551399999999896, 0.0001557500000000031, 0.00015659799999999738, 0.00015642999999999907, 0.00015652700000000005, 0.00015559700000000037, 0.0001565969999999979, 0.00015566600000000222, 0.0001565839999999978, 0.00015595800000000118, 0.00015516600000000172, 0.00015581899999999801, 0.00015694399999999914, 0.00015601400000000293, 0.00015661100000000094]</msg>
<status status="PASS" starttime="20201112 09:43:31.674" endtime="20201112 09:43:31.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.669" endtime="20201112 09:43:31.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.679" endtime="20201112 09:43:31.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:31.683" endtime="20201112 09:43:31.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.681" endtime="20201112 09:43:31.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.678" endtime="20201112 09:43:31.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.304" endtime="20201112 09:43:31.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.303" endtime="20201112 09:43:31.704"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.713" endtime="20201112 09:43:31.735"></status>
</kw>
<msg timestamp="20201112 09:43:31.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.711" endtime="20201112 09:43:31.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.737" endtime="20201112 09:43:31.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.739" endtime="20201112 09:43:31.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.709" endtime="20201112 09:43:31.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.706" endtime="20201112 09:43:31.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.750" endtime="20201112 09:43:32.036"></status>
</kw>
<msg timestamp="20201112 09:43:32.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:31.748" endtime="20201112 09:43:32.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:32.041" endtime="20201112 09:43:32.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.049" endtime="20201112 09:43:32.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.745" endtime="20201112 09:43:32.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.743" endtime="20201112 09:43:32.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:32.056" level="INFO">${RESULT} = [{'time': 0.022771, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015897200000000028, 'source_diff': 0.00015897200000000028}, {'time': 0.022941014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:32.052" endtime="20201112 09:43:32.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:32.069" level="INFO">${ACCURACY} = {'diff': [0.00015897200000000028, 0.00015761099999999847, 0.00015711100000000144, 0.0001577640000000012, 0.00015809799999999888, 0.00015761099999999847, 0.00015744399999999964, 0.00015786099999999872,...</msg>
<status status="PASS" starttime="20201112 09:43:32.057" endtime="20201112 09:43:32.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.074" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 09:43:32.073" endtime="20201112 09:43:32.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.077" level="INFO">VALUE: [0.00015897200000000028, 0.00015761099999999847, 0.00015711100000000144, 0.0001577640000000012, 0.00015809799999999888, 0.00015761099999999847, 0.00015744399999999964, 0.00015786099999999872, 0.0001580969999999994, 0.00015829100000000138, 0.00015759799999999838, 0.0001577359999999986, 0.0001587779999999983, 0.00015898599999999985, 0.00015734699999999865, 0.00015857000000000024, 0.00015794500000000308, 0.00015852699999999859, 0.00015863899999999861, 0.00015765300000000065, 0.00015827800000000128, 0.00015879200000000135, 0.00015749999999999792, 0.00015711200000000092, 0.00015716600000000025, 0.00015836099999999922, 0.00015761099999999847, 0.0001577640000000012, 0.00015724999999999767, 0.00015793100000000004, 0.00015883300000000058, 0.0001585969999999999, 0.0001577640000000012, 0.00015705599999999917, 0.00015791700000000047, 0.00015833399999999956, 0.00015876299999999927, 0.0001589299999999981, 0.00015801400000000146, 0.00015901400000000246, 0.00015752800000000053, 0.0001572770000000008, 0.00015811099999999897, 0.0001588200000000005, 0.00015793000000000057, 0.0001584030000000014, 0.00015826399999999824, 0.00015763799999999814, 0.0001577640000000012, 0.00015794400000000014]</msg>
<status status="PASS" starttime="20201112 09:43:32.075" endtime="20201112 09:43:32.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.070" endtime="20201112 09:43:32.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.080" endtime="20201112 09:43:32.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:32.084" endtime="20201112 09:43:32.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.082" endtime="20201112 09:43:32.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.079" endtime="20201112 09:43:32.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.705" endtime="20201112 09:43:32.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.704" endtime="20201112 09:43:32.105"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.114" endtime="20201112 09:43:32.137"></status>
</kw>
<msg timestamp="20201112 09:43:32.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.112" endtime="20201112 09:43:32.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.138" endtime="20201112 09:43:32.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.141" endtime="20201112 09:43:32.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.109" endtime="20201112 09:43:32.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.107" endtime="20201112 09:43:32.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.151" endtime="20201112 09:43:32.436"></status>
</kw>
<msg timestamp="20201112 09:43:32.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022542625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022702417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.150" endtime="20201112 09:43:32.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022542625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022702417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.440" endtime="20201112 09:43:32.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.449" endtime="20201112 09:43:32.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.147" endtime="20201112 09:43:32.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.145" endtime="20201112 09:43:32.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:32.456" level="INFO">${RESULT} = [{'time': 0.022702417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015979199999999888, 'source_diff': 0.00015979199999999888}, {'time': 0.022874417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:32.452" endtime="20201112 09:43:32.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:32.471" level="INFO">${ACCURACY} = {'diff': [0.00015979199999999888, 0.0001596810000000018, 0.0001603620000000007, 0.00015927699999999934, 0.00015927800000000228, 0.00016012500000000054, 0.00016043099999999907, 0.00016031999999999852, ...</msg>
<status status="PASS" starttime="20201112 09:43:32.457" endtime="20201112 09:43:32.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.476" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 09:43:32.474" endtime="20201112 09:43:32.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.478" level="INFO">VALUE: [0.00015979199999999888, 0.0001596810000000018, 0.0001603620000000007, 0.00015927699999999934, 0.00015927800000000228, 0.00016012500000000054, 0.00016043099999999907, 0.00016031999999999852, 0.00015923699999999957, 0.000160610999999998, 0.0001599299999999991, 0.00016020800000000196, 0.00016034699999999819, 0.00016044499999999864, 0.000160707999999999, 0.00016016699999999925, 0.00016102800000000056, 0.0001604719999999983, 0.00015908300000000083, 0.0001600970000000014, 0.00015979199999999888, 0.00016009699999999794, 0.00016027700000000034, 0.00016026400000000024, 0.0001595970000000009, 0.00015976399999999974, 0.00016034700000000165, 0.00016067999999999985, 0.00015967999999999885, 0.00016067999999999985, 0.00016002799999999956, 0.00016038900000000036, 0.00016048600000000135, 0.00015930499999999848, 0.00015975000000000017, 0.0001602779999999998, 0.00015906900000000126, 0.00015975000000000017, 0.00015926399999999924, 0.0001600840000000013, 0.0001597360000000006, 0.0001602779999999998, 0.0001607780000000003, 0.00016080599999999945, 0.00015949999999999992, 0.0001608750000000013, 0.00015927699999999934, 0.00015941599999999903, 0.00016069399999999942, 0.00016051399999999702]</msg>
<status status="PASS" starttime="20201112 09:43:32.477" endtime="20201112 09:43:32.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.472" endtime="20201112 09:43:32.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.483" endtime="20201112 09:43:32.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:32.486" endtime="20201112 09:43:32.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.485" endtime="20201112 09:43:32.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.481" endtime="20201112 09:43:32.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.106" endtime="20201112 09:43:32.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.105" endtime="20201112 09:43:32.507"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.516" endtime="20201112 09:43:32.538"></status>
</kw>
<msg timestamp="20201112 09:43:32.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.514" endtime="20201112 09:43:32.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.540" endtime="20201112 09:43:32.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.542" endtime="20201112 09:43:32.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.512" endtime="20201112 09:43:32.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.510" endtime="20201112 09:43:32.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.553" endtime="20201112 09:43:32.840"></status>
</kw>
<msg timestamp="20201112 09:43:32.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022732014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.551" endtime="20201112 09:43:32.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022732014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.844" endtime="20201112 09:43:32.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.852" endtime="20201112 09:43:32.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.548" endtime="20201112 09:43:32.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.547" endtime="20201112 09:43:32.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:32.859" level="INFO">${RESULT} = [{'time': 0.022732014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001612919999999969, 'source_diff': 0.0001612919999999969}, {'time': 0.022908028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:32.856" endtime="20201112 09:43:32.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:32.873" level="INFO">${ACCURACY} = {'diff': [0.0001612919999999969, 0.00016145899999999921, 0.00016168100000000032, 0.000161708, 0.00016299999999999995, 0.00016115300000000068, 0.00016208300000000037, 0.00016212499999999908, 0.00016294...</msg>
<status status="PASS" starttime="20201112 09:43:32.860" endtime="20201112 09:43:32.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.877" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 09:43:32.876" endtime="20201112 09:43:32.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.880" level="INFO">VALUE: [0.0001612919999999969, 0.00016145899999999921, 0.00016168100000000032, 0.000161708, 0.00016299999999999995, 0.00016115300000000068, 0.00016208300000000037, 0.00016212499999999908, 0.00016294500000000114, 0.00016249999999999945, 0.00016191599999999806, 0.00016199999999999895, 0.00016242999999999813, 0.00016251399999999902, 0.00016225000000000267, 0.0001617499999999987, 0.0001610970000000024, 0.00016229200000000138, 0.00016173599999999913, 0.00016236099999999976, 0.00016218100000000082, 0.0001617919999999974, 0.0001622629999999993, 0.00016145799999999974, 0.00016301399999999952, 0.00016230599999999748, 0.00016177799999999784, 0.00016209800000000288, 0.000161917000000001, 0.00016204100000000166, 0.00016109699999999894, 0.00016243100000000107, 0.00016232000000000052, 0.0001624720000000003, 0.00016184799999999916, 0.0001627499999999997, 0.00016292999999999863, 0.0001615140000000015, 0.00016258300000000087, 0.00016293100000000157, 0.0001615140000000015, 0.00016191600000000153, 0.00016152800000000106, 0.00016192999999999763, 0.00016286100000000026, 0.00016212499999999908, 0.00016207000000000027, 0.00016242999999999813, 0.00016208399999999984, 0.0001627639999999958]</msg>
<status status="PASS" starttime="20201112 09:43:32.878" endtime="20201112 09:43:32.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.874" endtime="20201112 09:43:32.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.884" endtime="20201112 09:43:32.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:32.887" endtime="20201112 09:43:32.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.886" endtime="20201112 09:43:32.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.882" endtime="20201112 09:43:32.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.508" endtime="20201112 09:43:32.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.507" endtime="20201112 09:43:32.908"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.917" endtime="20201112 09:43:32.940"></status>
</kw>
<msg timestamp="20201112 09:43:32.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.916" endtime="20201112 09:43:32.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.942" endtime="20201112 09:43:32.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.944" endtime="20201112 09:43:32.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.913" endtime="20201112 09:43:32.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.911" endtime="20201112 09:43:32.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.955" endtime="20201112 09:43:33.241"></status>
</kw>
<msg timestamp="20201112 09:43:33.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022574222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022738181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.953" endtime="20201112 09:43:33.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022574222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022738181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.245" endtime="20201112 09:43:33.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.253" endtime="20201112 09:43:33.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.951" endtime="20201112 09:43:33.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.949" endtime="20201112 09:43:33.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:33.260" level="INFO">${RESULT} = [{'time': 0.022738181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016395899999999825, 'source_diff': 0.00016395899999999825}, {'time': 0.022918194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:33.257" endtime="20201112 09:43:33.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:33.274" level="INFO">${ACCURACY} = {'diff': [0.00016395899999999825, 0.00016341599999999956, 0.00016436100000000176, 0.00016476400000000127, 0.00016473599999999866, 0.0001634309999999986, 0.00016440300000000047, 0.00016394400000000267,...</msg>
<status status="PASS" starttime="20201112 09:43:33.261" endtime="20201112 09:43:33.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.278" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 09:43:33.277" endtime="20201112 09:43:33.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.281" level="INFO">VALUE: [0.00016395899999999825, 0.00016341599999999956, 0.00016436100000000176, 0.00016476400000000127, 0.00016473599999999866, 0.0001634309999999986, 0.00016440300000000047, 0.00016394400000000267, 0.00016318000000000235, 0.00016436100000000176, 0.00016441700000000004, 0.00016501399999999805, 0.00016459799999999844, 0.00016477700000000137, 0.0001632500000000002, 0.00016450000000000145, 0.00016388899999999693, 0.00016334700000000119, 0.00016358400000000134, 0.00016459699999999897, 0.00016309700000000094, 0.00016501299999999858, 0.00016384700000000169, 0.00016377799999999984, 0.00016459799999999844, 0.00016443000000000013, 0.000163917000000003, 0.000163611000000001, 0.0001644309999999996, 0.00016418099999999936, 0.00016383399999999812, 0.000163611000000001, 0.00016441600000000056, 0.00016470799999999952, 0.00016401400000000052, 0.00016490300000000097, 0.0001640280000000001, 0.00016445799999999927, 0.00016451400000000102, 0.00016399999999999748, 0.0001642089999999985, 0.0001635279999999996, 0.00016463899999999768, 0.00016443000000000013, 0.0001648050000000005, 0.00016359700000000144, 0.00016390299999999997, 0.00016508300000000337, 0.00016394500000000214, 0.0001636940000000059]</msg>
<status status="PASS" starttime="20201112 09:43:33.280" endtime="20201112 09:43:33.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.275" endtime="20201112 09:43:33.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.285" endtime="20201112 09:43:33.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:33.288" endtime="20201112 09:43:33.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.287" endtime="20201112 09:43:33.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.283" endtime="20201112 09:43:33.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.909" endtime="20201112 09:43:33.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.909" endtime="20201112 09:43:33.309"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.318" endtime="20201112 09:43:33.342"></status>
</kw>
<msg timestamp="20201112 09:43:33.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.317" endtime="20201112 09:43:33.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.343" endtime="20201112 09:43:33.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.346" endtime="20201112 09:43:33.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.314" endtime="20201112 09:43:33.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.312" endtime="20201112 09:43:33.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.356" endtime="20201112 09:43:33.642"></status>
</kw>
<msg timestamp="20201112 09:43:33.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022790806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022956097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.355" endtime="20201112 09:43:33.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022790806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022956097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.647" endtime="20201112 09:43:33.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.655" endtime="20201112 09:43:33.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.352" endtime="20201112 09:43:33.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.350" endtime="20201112 09:43:33.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:33.662" level="INFO">${RESULT} = [{'time': 0.022956097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016529100000000144, 'source_diff': 0.00016529100000000144}, {'time': 0.023134139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:33.659" endtime="20201112 09:43:33.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:33.676" level="INFO">${ACCURACY} = {'diff': [0.00016529100000000144, 0.00016537500000000233, 0.0001669310000000021, 0.00016638899999999943, 0.00016677799999999937, 0.00016526299999999883, 0.0001669159999999996, 0.00016584700000000022, ...</msg>
<status status="PASS" starttime="20201112 09:43:33.663" endtime="20201112 09:43:33.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.680" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 09:43:33.679" endtime="20201112 09:43:33.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.683" level="INFO">VALUE: [0.00016529100000000144, 0.00016537500000000233, 0.0001669310000000021, 0.00016638899999999943, 0.00016677799999999937, 0.00016526299999999883, 0.0001669159999999996, 0.00016584700000000022, 0.00016568000000000138, 0.00016641699999999857, 0.00016520800000000002, 0.00016584700000000022, 0.00016543000000000113, 0.00016601399999999905, 0.00016509700000000294, 0.00016541700000000104, 0.00016669500000000143, 0.00016551299999999908, 0.00016549999999999898, 0.00016576299999999933, 0.00016622300000000007, 0.00016636099999999682, 0.00016629099999999897, 0.00016661100000000054, 0.00016641600000000256, 0.00016602799999999862, 0.00016541700000000104, 0.00016652799999999912, 0.00016609799999999994, 0.00016694399999999873, 0.0001656249999999991, 0.00016566699999999782, 0.00016665299999999925, 0.00016649999999999998, 0.0001654310000000006, 0.00016566700000000129, 0.0001656799999999979, 0.0001659859999999999, 0.0001650829999999999, 0.0001661119999999995, 0.00016577800000000184, 0.0001652500000000022, 0.00016659700000000097, 0.00016658299999999793, 0.00016609700000000047, 0.0001654310000000006, 0.00016601399999999905, 0.0001659440000000012, 0.00016612500000000308, 0.00016684699999999775]</msg>
<status status="PASS" starttime="20201112 09:43:33.681" endtime="20201112 09:43:33.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.677" endtime="20201112 09:43:33.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.687" endtime="20201112 09:43:33.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:33.690" endtime="20201112 09:43:33.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.688" endtime="20201112 09:43:33.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.685" endtime="20201112 09:43:33.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.310" endtime="20201112 09:43:33.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.309" endtime="20201112 09:43:33.711"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.720" endtime="20201112 09:43:33.743"></status>
</kw>
<msg timestamp="20201112 09:43:33.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.718" endtime="20201112 09:43:33.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.745" endtime="20201112 09:43:33.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.747" endtime="20201112 09:43:33.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.716" endtime="20201112 09:43:33.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.714" endtime="20201112 09:43:33.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.758" endtime="20201112 09:43:34.045"></status>
</kw>
<msg timestamp="20201112 09:43:34.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022566028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022733653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.756" endtime="20201112 09:43:34.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022566028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022733653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.050" endtime="20201112 09:43:34.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.058" endtime="20201112 09:43:34.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.753" endtime="20201112 09:43:34.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.752" endtime="20201112 09:43:34.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:34.065" level="INFO">${RESULT} = [{'time': 0.022733653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001676250000000011, 'source_diff': 0.0001676250000000011}, {'time': 0.022917694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:34.061" endtime="20201112 09:43:34.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:34.079" level="INFO">${ACCURACY} = {'diff': [0.0001676250000000011, 0.0001671250000000006, 0.00016866700000000082, 0.00016827800000000087, 0.0001670830000000019, 0.0001677640000000008, 0.00016777800000000037, 0.0001681250000000016, 0.0...</msg>
<status status="PASS" starttime="20201112 09:43:34.066" endtime="20201112 09:43:34.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.084" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 09:43:34.083" endtime="20201112 09:43:34.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.087" level="INFO">VALUE: [0.0001676250000000011, 0.0001671250000000006, 0.00016866700000000082, 0.00016827800000000087, 0.0001670830000000019, 0.0001677640000000008, 0.00016777800000000037, 0.0001681250000000016, 0.00016811100000000204, 0.00016794399999999973, 0.000167403, 0.0001682640000000013, 0.00016715299999999975, 0.0001671120000000005, 0.00016711100000000104, 0.00016711099999999757, 0.00016708299999999843, 0.0001689450000000002, 0.00016752800000000012, 0.0001689450000000002, 0.0001683190000000001, 0.00016877800000000137, 0.00016804199999999672, 0.0001684449999999997, 0.00016751400000000055, 0.00016747199999999837, 0.00016718000000000288, 0.00016720800000000202, 0.00016893000000000116, 0.00016761099999999807, 0.000168096999999999, 0.00016794399999999973, 0.00016884699999999975, 0.00016811099999999857, 0.00016741699999999957, 0.00016834699999999925, 0.00016794500000000268, 0.0001673480000000012, 0.00016829200000000044, 0.00016888900000000193, 0.00016900000000000248, 0.00016809700000000247, 0.00016794500000000268, 0.0001673610000000013, 0.00016843000000000066, 0.00016801399999999758, 0.00016793000000000016, 0.00016901399999999858, 0.00016779199999999994, 0.00016825000000000173]</msg>
<status status="PASS" starttime="20201112 09:43:34.085" endtime="20201112 09:43:34.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.080" endtime="20201112 09:43:34.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.090" endtime="20201112 09:43:34.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:34.094" endtime="20201112 09:43:34.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.092" endtime="20201112 09:43:34.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.089" endtime="20201112 09:43:34.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.712" endtime="20201112 09:43:34.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.711" endtime="20201112 09:43:34.115"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.124" endtime="20201112 09:43:34.147"></status>
</kw>
<msg timestamp="20201112 09:43:34.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.122" endtime="20201112 09:43:34.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.149" endtime="20201112 09:43:34.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.151" endtime="20201112 09:43:34.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.120" endtime="20201112 09:43:34.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.117" endtime="20201112 09:43:34.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.162" endtime="20201112 09:43:34.449"></status>
</kw>
<msg timestamp="20201112 09:43:34.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022877028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023046486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.160" endtime="20201112 09:43:34.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022877028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023046486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.453" endtime="20201112 09:43:34.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.461" endtime="20201112 09:43:34.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.158" endtime="20201112 09:43:34.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.156" endtime="20201112 09:43:34.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:34.468" level="INFO">${RESULT} = [{'time': 0.023046486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001694580000000008, 'source_diff': 0.0001694580000000008}, {'time': 0.023230528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:34.465" endtime="20201112 09:43:34.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:34.482" level="INFO">${ACCURACY} = {'diff': [0.0001694580000000008, 0.00016945900000000028, 0.00017066699999999935, 0.00017088900000000046, 0.00017011100000000057, 0.0001705000000000005, 0.00016919400000000098, 0.00017018099999999842, ...</msg>
<status status="PASS" starttime="20201112 09:43:34.469" endtime="20201112 09:43:34.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.486" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 09:43:34.485" endtime="20201112 09:43:34.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.489" level="INFO">VALUE: [0.0001694580000000008, 0.00016945900000000028, 0.00017066699999999935, 0.00017088900000000046, 0.00017011100000000057, 0.0001705000000000005, 0.00016919400000000098, 0.00017018099999999842, 0.00016951400000000255, 0.00017043100000000214, 0.00016920800000000055, 0.00017002799999999915, 0.00016979200000000194, 0.000170097000000001, 0.00017011200000000004, 0.00016944400000000123, 0.00017067999999999944, 0.00017001399999999958, 0.0001701389999999997, 0.0001692779999999984, 0.00016912499999999914, 0.00017006900000000186, 0.00016943000000000166, 0.00017052799999999965, 0.00016979199999999847, 0.0001707779999999999, 0.00017009800000000047, 0.00017027699999999993, 0.00016958300000000093, 0.0001702779999999994, 0.0001695970000000005, 0.0001697779999999989, 0.00016943099999999767, 0.00017052700000000018, 0.0001692640000000023, 0.00017076400000000033, 0.00016974999999999976, 0.0001695970000000005, 0.0001700840000000009, 0.000170097000000001, 0.00017094399999999926, 0.00017002799999999915, 0.00017079199999999947, 0.00017059699999999803, 0.0001710139999999971, 0.0001695139999999956, 0.00017079200000000294, 0.00017045799999999833, 0.00016955600000000126, 0.000169097]</msg>
<status status="PASS" starttime="20201112 09:43:34.488" endtime="20201112 09:43:34.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.483" endtime="20201112 09:43:34.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.493" endtime="20201112 09:43:34.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:34.496" endtime="20201112 09:43:34.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.495" endtime="20201112 09:43:34.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.491" endtime="20201112 09:43:34.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.116" endtime="20201112 09:43:34.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.115" endtime="20201112 09:43:34.518"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.527" endtime="20201112 09:43:34.550"></status>
</kw>
<msg timestamp="20201112 09:43:34.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.525" endtime="20201112 09:43:34.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.552" endtime="20201112 09:43:34.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.554" endtime="20201112 09:43:34.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.523" endtime="20201112 09:43:34.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.520" endtime="20201112 09:43:34.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.565" endtime="20201112 09:43:34.850"></status>
</kw>
<msg timestamp="20201112 09:43:34.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022735361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.563" endtime="20201112 09:43:34.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022735361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022906861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.855" endtime="20201112 09:43:34.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.863" endtime="20201112 09:43:34.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.560" endtime="20201112 09:43:34.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.559" endtime="20201112 09:43:34.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:34.870" level="INFO">${RESULT} = [{'time': 0.022906861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001715000000000015, 'source_diff': 0.0001715000000000015}, {'time': 0.023096903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:34.867" endtime="20201112 09:43:34.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:34.884" level="INFO">${ACCURACY} = {'diff': [0.0001715000000000015, 0.0001724719999999999, 0.00017166700000000035, 0.0001720139999999981, 0.00017243100000000067, 0.00017298599999999997, 0.0001727780000000019, 0.00017234699999999978, 0....</msg>
<status status="PASS" starttime="20201112 09:43:34.871" endtime="20201112 09:43:34.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.888" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 09:43:34.887" endtime="20201112 09:43:34.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.891" level="INFO">VALUE: [0.0001715000000000015, 0.0001724719999999999, 0.00017166700000000035, 0.0001720139999999981, 0.00017243100000000067, 0.00017298599999999997, 0.0001727780000000019, 0.00017234699999999978, 0.00017176399999999786, 0.00017277799999999843, 0.00017291699999999813, 0.00017281900000000114, 0.0001729439999999978, 0.0001720690000000004, 0.0001715559999999998, 0.00017159800000000197, 0.00017238799999999901, 0.00017302799999999868, 0.00017194400000000026, 0.0001725139999999986, 0.00017262500000000264, 0.00017198600000000244, 0.00017305500000000182, 0.00017125000000000126, 0.00017190300000000103, 0.00017268100000000092, 0.00017133400000000215, 0.00017162500000000164, 0.00017242999999999772, 0.00017117999999999994, 0.0001715000000000015, 0.00017244500000000024, 0.00017258399999999993, 0.00017206999999999986, 0.00017159699999999903, 0.00017259700000000003, 0.00017161100000000207, 0.00017194499999999974, 0.0001720139999999981, 0.00017295800000000083, 0.00017168000000000044, 0.0001717360000000022, 0.0001726950000000005, 0.0001715000000000015, 0.00017266700000000135, 0.00017294400000000126, 0.00017183300000000318, 0.00017244400000000076, 0.00017116699999999985, 0.00017236100000000282]</msg>
<status status="PASS" starttime="20201112 09:43:34.890" endtime="20201112 09:43:34.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.885" endtime="20201112 09:43:34.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.895" endtime="20201112 09:43:34.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:34.898" endtime="20201112 09:43:34.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.897" endtime="20201112 09:43:34.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.893" endtime="20201112 09:43:34.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.519" endtime="20201112 09:43:34.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.518" endtime="20201112 09:43:34.919"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.928" endtime="20201112 09:43:34.951"></status>
</kw>
<msg timestamp="20201112 09:43:34.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.927" endtime="20201112 09:43:34.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.953" endtime="20201112 09:43:34.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.955" endtime="20201112 09:43:34.958"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.924" endtime="20201112 09:43:34.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.922" endtime="20201112 09:43:34.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.966" endtime="20201112 09:43:35.253"></status>
</kw>
<msg timestamp="20201112 09:43:35.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022982167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023156625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.964" endtime="20201112 09:43:35.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022982167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023156625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.257" endtime="20201112 09:43:35.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.265" endtime="20201112 09:43:35.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.962" endtime="20201112 09:43:35.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.960" endtime="20201112 09:43:35.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:35.272" level="INFO">${RESULT} = [{'time': 0.023156625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017445799999999886, 'source_diff': 0.00017445799999999886}, {'time': 0.023346653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:35.269" endtime="20201112 09:43:35.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:35.286" level="INFO">${ACCURACY} = {'diff': [0.00017445799999999886, 0.0001747089999999986, 0.00017445799999999886, 0.00017451300000000114, 0.000174792, 0.00017411099999999763, 0.00017477800000000043, 0.0001732499999999998, 0.000174221...</msg>
<status status="PASS" starttime="20201112 09:43:35.273" endtime="20201112 09:43:35.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.291" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 09:43:35.290" endtime="20201112 09:43:35.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.293" level="INFO">VALUE: [0.00017445799999999886, 0.0001747089999999986, 0.00017445799999999886, 0.00017451300000000114, 0.000174792, 0.00017411099999999763, 0.00017477800000000043, 0.0001732499999999998, 0.00017422199999999818, 0.00017459700000000203, 0.00017493000000000022, 0.00017436100000000135, 0.0001739170000000026, 0.000174195000000002, 0.00017333400000000068, 0.00017359700000000103, 0.00017394400000000226, 0.00017499999999999807, 0.00017426400000000036, 0.00017491700000000013, 0.00017419399999999904, 0.0001748469999999988, 0.0001741110000000011, 0.00017394499999999827, 0.00017402799999999968, 0.00017429100000000003, 0.000174582999999999, 0.0001749439999999998, 0.00017454199999999975, 0.00017308300000000096, 0.0001739309999999987, 0.00017336199999999982, 0.000174485999999998, 0.00017422200000000165, 0.00017366699999999888, 0.0001731529999999988, 0.00017369499999999802, 0.00017420800000000208, 0.0001740270000000002, 0.00017326399999999936, 0.00017393100000000217, 0.00017468100000000292, 0.0001746950000000025, 0.00017334800000000025, 0.00017442999999999625, 0.0001741940000000025, 0.00017366700000000235, 0.00017327799999999893, 0.0001742500000000008, 0.00017392999999999575]</msg>
<status status="PASS" starttime="20201112 09:43:35.292" endtime="20201112 09:43:35.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.287" endtime="20201112 09:43:35.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.297" endtime="20201112 09:43:35.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:35.301" endtime="20201112 09:43:35.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.299" endtime="20201112 09:43:35.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.295" endtime="20201112 09:43:35.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.920" endtime="20201112 09:43:35.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.920" endtime="20201112 09:43:35.322"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.331" endtime="20201112 09:43:35.355"></status>
</kw>
<msg timestamp="20201112 09:43:35.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.330" endtime="20201112 09:43:35.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.357" endtime="20201112 09:43:35.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.359" endtime="20201112 09:43:35.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.327" endtime="20201112 09:43:35.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.324" endtime="20201112 09:43:35.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.370" endtime="20201112 09:43:35.656"></status>
</kw>
<msg timestamp="20201112 09:43:35.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023208042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023383181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.368" endtime="20201112 09:43:35.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023208042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023383181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.660" endtime="20201112 09:43:35.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.669" endtime="20201112 09:43:35.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.366" endtime="20201112 09:43:35.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.364" endtime="20201112 09:43:35.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:35.675" level="INFO">${RESULT} = [{'time': 0.023383181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017513899999999777, 'source_diff': 0.00017513899999999777}, {'time': 0.023579181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:35.672" endtime="20201112 09:43:35.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:35.690" level="INFO">${ACCURACY} = {'diff': [0.00017513899999999777, 0.0001769310000000017, 0.00017622200000000018, 0.00017519400000000004, 0.00017652800000000218, 0.000175792000000001, 0.00017640300000000206, 0.0001763470000000003, 0....</msg>
<status status="PASS" starttime="20201112 09:43:35.676" endtime="20201112 09:43:35.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.695" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 09:43:35.694" endtime="20201112 09:43:35.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.698" level="INFO">VALUE: [0.00017513899999999777, 0.0001769310000000017, 0.00017622200000000018, 0.00017519400000000004, 0.00017652800000000218, 0.000175792000000001, 0.00017640300000000206, 0.0001763470000000003, 0.00017642999999999825, 0.00017618000000000147, 0.00017687499999999995, 0.0001762639999999989, 0.0001761119999999991, 0.00017655499999999838, 0.00017592999999999775, 0.00017651399999999914, 0.00017659700000000056, 0.0001752920000000005, 0.00017609700000000006, 0.00017511099999999863, 0.00017590300000000156, 0.00017533299999999974, 0.0001754310000000002, 0.00017684800000000028, 0.00017644399999999782, 0.0001758469999999998, 0.00017659700000000056, 0.00017559699999999956, 0.00017512500000000167, 0.0001761119999999991, 0.0001762630000000029, 0.00017593000000000122, 0.00017516700000000038, 0.0001767090000000006, 0.00017587500000000242, 0.00017542999999999725, 0.0001769860000000005, 0.00017542999999999725, 0.0001758469999999998, 0.00017643099999999773, 0.0001757089999999996, 0.0001755270000000017, 0.0001766110000000036, 0.00017611099999999963, 0.00017611099999999963, 0.00017626400000000236, 0.00017641699999999816, 0.00017519399999999657, 0.0001758469999999998, 0.0001759720000000034]</msg>
<status status="PASS" starttime="20201112 09:43:35.696" endtime="20201112 09:43:35.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.691" endtime="20201112 09:43:35.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.701" endtime="20201112 09:43:35.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:35.705" endtime="20201112 09:43:35.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.703" endtime="20201112 09:43:35.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.700" endtime="20201112 09:43:35.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.323" endtime="20201112 09:43:35.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.322" endtime="20201112 09:43:35.726"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.735" endtime="20201112 09:43:35.759"></status>
</kw>
<msg timestamp="20201112 09:43:35.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.733" endtime="20201112 09:43:35.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.761" endtime="20201112 09:43:35.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.763" endtime="20201112 09:43:35.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.731" endtime="20201112 09:43:35.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.728" endtime="20201112 09:43:35.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.774" endtime="20201112 09:43:36.059"></status>
</kw>
<msg timestamp="20201112 09:43:36.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022496667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:35.772" endtime="20201112 09:43:36.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022496667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:36.064" endtime="20201112 09:43:36.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.072" endtime="20201112 09:43:36.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.769" endtime="20201112 09:43:36.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.768" endtime="20201112 09:43:36.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:36.079" level="INFO">${RESULT} = [{'time': 0.022675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017833299999999927, 'source_diff': 0.00017833299999999927}, {'time': 0.022870986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:36.075" endtime="20201112 09:43:36.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:36.093" level="INFO">${ACCURACY} = {'diff': [0.00017833299999999927, 0.00017736100000000088, 0.0001774449999999983, 0.00017818099999999948, 0.00017802800000000021, 0.00017861100000000213, 0.00017858299999999952, 0.00017725000000000032,...</msg>
<status status="PASS" starttime="20201112 09:43:36.080" endtime="20201112 09:43:36.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.097" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 09:43:36.096" endtime="20201112 09:43:36.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.100" level="INFO">VALUE: [0.00017833299999999927, 0.00017736100000000088, 0.0001774449999999983, 0.00017818099999999948, 0.00017802800000000021, 0.00017861100000000213, 0.00017858299999999952, 0.00017725000000000032, 0.00017895900000000284, 0.00017802800000000021, 0.00017783300000000224, 0.00017843000000000026, 0.00017801400000000064, 0.00017893100000000023, 0.00017904200000000078, 0.0001787229999999987, 0.00017891600000000119, 0.0001778470000000018, 0.00017894400000000033, 0.00017888900000000152, 0.00017726400000000336, 0.00017779100000000006, 0.0001777770000000005, 0.0001786250000000017, 0.00017841700000000016, 0.00017734699999999784, 0.00017775000000000082, 0.00017838900000000102, 0.00017819399999999957, 0.00017798599999999803, 0.00017706900000000192, 0.00017793099999999923, 0.00017834800000000178, 0.0001779579999999989, 0.00017751400000000014, 0.0001772920000000025, 0.00017825000000000132, 0.0001772639999999999, 0.00017793099999999923, 0.00017784699999999834, 0.00017727799999999946, 0.00017792999999999976, 0.0001788060000000001, 0.00017893100000000023, 0.00017751400000000014, 0.00017727699999999652, 0.00017858299999999605, 0.00017880599999999663, 0.00017866600000000094, 0.0001780979999999946]</msg>
<status status="PASS" starttime="20201112 09:43:36.098" endtime="20201112 09:43:36.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.094" endtime="20201112 09:43:36.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.104" endtime="20201112 09:43:36.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:36.107" endtime="20201112 09:43:36.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.106" endtime="20201112 09:43:36.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.102" endtime="20201112 09:43:36.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.727" endtime="20201112 09:43:36.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.726" endtime="20201112 09:43:36.128"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.137" endtime="20201112 09:43:36.160"></status>
</kw>
<msg timestamp="20201112 09:43:36.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.136" endtime="20201112 09:43:36.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.162" endtime="20201112 09:43:36.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.165" endtime="20201112 09:43:36.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.133" endtime="20201112 09:43:36.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.131" endtime="20201112 09:43:36.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.175" endtime="20201112 09:43:36.461"></status>
</kw>
<msg timestamp="20201112 09:43:36.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022960903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023141528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.173" endtime="20201112 09:43:36.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022960903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023141528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.466" endtime="20201112 09:43:36.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.474" endtime="20201112 09:43:36.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.171" endtime="20201112 09:43:36.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.169" endtime="20201112 09:43:36.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:36.481" level="INFO">${RESULT} = [{'time': 0.023141528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018062500000000023, 'source_diff': 0.00018062500000000023}, {'time': 0.023337611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:36.477" endtime="20201112 09:43:36.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:36.495" level="INFO">${ACCURACY} = {'diff': [0.00018062500000000023, 0.0001801670000000019, 0.00018094399999999886, 0.00018052799999999924, 0.00017973599999999978, 0.00017926399999999842, 0.0001800840000000005, 0.00017961099999999966, ...</msg>
<status status="PASS" starttime="20201112 09:43:36.482" endtime="20201112 09:43:36.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.499" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 09:43:36.498" endtime="20201112 09:43:36.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.502" level="INFO">VALUE: [0.00018062500000000023, 0.0001801670000000019, 0.00018094399999999886, 0.00018052799999999924, 0.00017973599999999978, 0.00017926399999999842, 0.0001800840000000005, 0.00017961099999999966, 0.00018047200000000096, 0.00017908300000000002, 0.00018092999999999929, 0.0001796670000000014, 0.00017983400000000024, 0.00018026399999999942, 0.00018094399999999886, 0.00017998600000000003, 0.0001800970000000006, 0.00018093099999999876, 0.00018001400000000264, 0.00018092999999999929, 0.00018034700000000084, 0.000180277999999999, 0.00017976399999999892, 0.00017954199999999781, 0.00017970900000000012, 0.0001797770000000025, 0.0001790969999999996, 0.0001794580000000004, 0.0001793609999999994, 0.00018065299999999937, 0.00017975000000000282, 0.00018044400000000183, 0.000179180000000001, 0.0001803610000000004, 0.00017911099999999916, 0.0001794580000000004, 0.00017983300000000077, 0.00018061100000000066, 0.0001790969999999996, 0.00018076399999999992, 0.00017977800000000196, 0.0001794580000000004, 0.00017966600000000194, 0.00018051399999999967, 0.00017956899999999748, 0.0001801109999999967, 0.00017959800000000303, 0.00018011100000000363, 0.00018044399999999489, 0.00018043100000000173]</msg>
<status status="PASS" starttime="20201112 09:43:36.501" endtime="20201112 09:43:36.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.496" endtime="20201112 09:43:36.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.506" endtime="20201112 09:43:36.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:36.509" endtime="20201112 09:43:36.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.508" endtime="20201112 09:43:36.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.504" endtime="20201112 09:43:36.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.129" endtime="20201112 09:43:36.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.128" endtime="20201112 09:43:36.531"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.541" endtime="20201112 09:43:36.564"></status>
</kw>
<msg timestamp="20201112 09:43:36.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.539" endtime="20201112 09:43:36.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.566" endtime="20201112 09:43:36.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.568" endtime="20201112 09:43:36.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.536" endtime="20201112 09:43:36.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.534" endtime="20201112 09:43:36.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.579" endtime="20201112 09:43:36.865"></status>
</kw>
<msg timestamp="20201112 09:43:36.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02402025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024201681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:36.577" endtime="20201112 09:43:36.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02402025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024201681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:36.869" endtime="20201112 09:43:36.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.878" endtime="20201112 09:43:36.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.574" endtime="20201112 09:43:36.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.573" endtime="20201112 09:43:36.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:36.885" level="INFO">${RESULT} = [{'time': 0.024201681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018143099999999926, 'source_diff': 0.00018143099999999926}, {'time': 0.024395708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:36.881" endtime="20201112 09:43:36.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:36.898" level="INFO">${ACCURACY} = {'diff': [0.00018143099999999926, 0.00018204099999999737, 0.00018111100000000116, 0.0001825139999999982, 0.00018262499999999876, 0.00018293100000000076, 0.00018166699999999994, 0.00018204099999999737,...</msg>
<status status="PASS" starttime="20201112 09:43:36.886" endtime="20201112 09:43:36.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.903" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 09:43:36.902" endtime="20201112 09:43:36.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.905" level="INFO">VALUE: [0.00018143099999999926, 0.00018204099999999737, 0.00018111100000000116, 0.0001825139999999982, 0.00018262499999999876, 0.00018293100000000076, 0.00018166699999999994, 0.00018204099999999737, 0.0001826390000000018, 0.00018211100000000216, 0.00018212499999999826, 0.00018158399999999852, 0.00018299999999999914, 0.00018147200000000197, 0.00018277799999999803, 0.0001829170000000012, 0.00018284699999999987, 0.00018193099999999976, 0.0001816939999999996, 0.00018217999999999707, 0.00018251400000000167, 0.00018209699999999912, 0.00018180500000000016, 0.00018144399999999936, 0.00018267999999999757, 0.00018165300000000037, 0.00018187500000000148, 0.00018252800000000124, 0.00018104199999999931, 0.0001816109999999982, 0.00018276400000000192, 0.00018156899999999948, 0.00018208399999999902, 0.00018126400000000042, 0.00018295800000000043, 0.0001830000000000026, 0.0001829439999999974, 0.00018201400000000117, 0.0001821109999999987, 0.00018125000000000085, 0.0001823879999999986, 0.00018267999999999757, 0.00018170800000000265, 0.0001826949999999966, 0.00018286100000000638, 0.0001815979999999981, 0.00018209700000000606, 0.00018261100000000613, 0.00018209699999999912, 0.00018234699999999937]</msg>
<status status="PASS" starttime="20201112 09:43:36.904" endtime="20201112 09:43:36.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.899" endtime="20201112 09:43:36.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.909" endtime="20201112 09:43:36.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:36.913" endtime="20201112 09:43:36.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.911" endtime="20201112 09:43:36.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.908" endtime="20201112 09:43:36.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.532" endtime="20201112 09:43:36.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.531" endtime="20201112 09:43:36.934"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.943" endtime="20201112 09:43:36.967"></status>
</kw>
<msg timestamp="20201112 09:43:36.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.941" endtime="20201112 09:43:36.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.969" endtime="20201112 09:43:36.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.971" endtime="20201112 09:43:36.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.938" endtime="20201112 09:43:36.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.936" endtime="20201112 09:43:36.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.982" endtime="20201112 09:43:37.268"></status>
</kw>
<msg timestamp="20201112 09:43:37.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022993361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023176819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.980" endtime="20201112 09:43:37.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022993361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023176819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.272" endtime="20201112 09:43:37.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.281" endtime="20201112 09:43:37.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.978" endtime="20201112 09:43:37.283"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.976" endtime="20201112 09:43:37.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:37.287" level="INFO">${RESULT} = [{'time': 0.023176819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018345800000000093, 'source_diff': 0.00018345800000000093}, {'time': 0.023370847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:37.284" endtime="20201112 09:43:37.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:37.348" level="INFO">${ACCURACY} = {'diff': [0.00018345800000000093, 0.00018359700000000062, 0.000183278000000002, 0.0001831109999999997, 0.000184972000000002, 0.00018384800000000034, 0.00018492999999999982, 0.0001833749999999995, 0.00...</msg>
<status status="PASS" starttime="20201112 09:43:37.288" endtime="20201112 09:43:37.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.353" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 09:43:37.352" endtime="20201112 09:43:37.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.356" level="INFO">VALUE: [0.00018345800000000093, 0.00018359700000000062, 0.000183278000000002, 0.0001831109999999997, 0.000184972000000002, 0.00018384800000000034, 0.00018492999999999982, 0.0001833749999999995, 0.00018377799999999903, 0.00018362499999999976, 0.00018326399999999896, 0.00018500000000000114, 0.00018369399999999814, 0.00018367999999999857, 0.000183875, 0.00018476400000000046, 0.00018445800000000193, 0.00018454099999999987, 0.00018459700000000162, 0.00018425000000000039, 0.0001841110000000007, 0.0001845980000000011, 0.00018442999999999932, 0.00018402799999999928, 0.0001844309999999988, 0.00018333400000000027, 0.000183278000000002, 0.00018374999999999989, 0.00018426399999999996, 0.00018393000000000229, 0.00018437499999999704, 0.00018447300000000097, 0.00018411200000000016, 0.00018376399999999946, 0.00018343000000000179, 0.000184181000000002, 0.00018402799999999928, 0.00018426399999999996, 0.0001844439999999989, 0.00018417999999999907, 0.00018502800000000028, 0.00018454199999999935, 0.00018376399999999599, 0.00018463900000000033, 0.00018463900000000033, 0.00018409700000000112, 0.00018317999999999807, 0.0001837780000000025, 0.00018429200000000256, 0.00018412500000000026]</msg>
<status status="PASS" starttime="20201112 09:43:37.354" endtime="20201112 09:43:37.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.349" endtime="20201112 09:43:37.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.363" endtime="20201112 09:43:37.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:37.367" endtime="20201112 09:43:37.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.365" endtime="20201112 09:43:37.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.362" endtime="20201112 09:43:37.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.935" endtime="20201112 09:43:37.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.934" endtime="20201112 09:43:37.388"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.397" endtime="20201112 09:43:37.421"></status>
</kw>
<msg timestamp="20201112 09:43:37.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.396" endtime="20201112 09:43:37.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.423" endtime="20201112 09:43:37.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.425" endtime="20201112 09:43:37.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.393" endtime="20201112 09:43:37.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.391" endtime="20201112 09:43:37.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.434" endtime="20201112 09:43:37.721"></status>
</kw>
<msg timestamp="20201112 09:43:37.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022801736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022987681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.433" endtime="20201112 09:43:37.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022801736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022987681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.725" endtime="20201112 09:43:37.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.734" endtime="20201112 09:43:37.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.430" endtime="20201112 09:43:37.736"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.428" endtime="20201112 09:43:37.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:37.741" level="INFO">${RESULT} = [{'time': 0.022987681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018594499999999986, 'source_diff': 0.00018594499999999986}, {'time': 0.023187708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:37.737" endtime="20201112 09:43:37.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:37.755" level="INFO">${ACCURACY} = {'diff': [0.00018594499999999986, 0.00018659700000000015, 0.00018695800000000096, 0.00018583299999999983, 0.00018677800000000203, 0.00018561099999999872, 0.00018513899999999736, 0.00018568000000000057...</msg>
<status status="PASS" starttime="20201112 09:43:37.742" endtime="20201112 09:43:37.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.759" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 09:43:37.758" endtime="20201112 09:43:37.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.762" level="INFO">VALUE: [0.00018594499999999986, 0.00018659700000000015, 0.00018695800000000096, 0.00018583299999999983, 0.00018677800000000203, 0.00018561099999999872, 0.00018513899999999736, 0.00018568000000000057, 0.00018512500000000126, 0.00018576400000000146, 0.0001856110000000022, 0.00018661099999999972, 0.00018574999999999842, 0.0001851110000000017, 0.00018509699999999865, 0.00018626399999999849, 0.00018627699999999858, 0.00018694399999999792, 0.0001863469999999999, 0.0001864440000000009, 0.0001852920000000001, 0.00018626400000000196, 0.00018611099999999922, 0.0001857920000000006, 0.0001864440000000009, 0.0001855140000000012, 0.00018677799999999856, 0.00018633300000000033, 0.0001864440000000009, 0.0001867080000000007, 0.0001853469999999989, 0.0001867920000000016, 0.00018579100000000112, 0.00018559699999999915, 0.0001851110000000017, 0.00018577799999999756, 0.00018608300000000008, 0.00018622300000000272, 0.0001851110000000017, 0.0001854439999999999, 0.00018618099999999707, 0.00018558299999999958, 0.00018577799999999756, 0.00018673699999999932, 0.00018661099999999625, 0.0001861110000000027, 0.0001866110000000032, 0.0001869310000000013, 0.00018551400000000468, 0.00018627699999999858]</msg>
<status status="PASS" starttime="20201112 09:43:37.761" endtime="20201112 09:43:37.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.755" endtime="20201112 09:43:37.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.766" endtime="20201112 09:43:37.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:37.769" endtime="20201112 09:43:37.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.768" endtime="20201112 09:43:37.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.764" endtime="20201112 09:43:37.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.389" endtime="20201112 09:43:37.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.389" endtime="20201112 09:43:37.790"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.799" endtime="20201112 09:43:37.823"></status>
</kw>
<msg timestamp="20201112 09:43:37.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.797" endtime="20201112 09:43:37.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.825" endtime="20201112 09:43:37.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.828" endtime="20201112 09:43:37.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.795" endtime="20201112 09:43:37.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.793" endtime="20201112 09:43:37.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.837" endtime="20201112 09:43:38.124"></status>
</kw>
<msg timestamp="20201112 09:43:38.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02253375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:37.835" endtime="20201112 09:43:38.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02253375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022721042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:38.129" endtime="20201112 09:43:38.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.137" endtime="20201112 09:43:38.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.833" endtime="20201112 09:43:38.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.831" endtime="20201112 09:43:38.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:38.144" level="INFO">${RESULT} = [{'time': 0.022721042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018729199999999863, 'source_diff': 0.00018729199999999863}, {'time': 0.022923069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:38.140" endtime="20201112 09:43:38.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:38.158" level="INFO">${ACCURACY} = {'diff': [0.00018729199999999863, 0.00018736100000000047, 0.00018711100000000022, 0.00018723599999999688, 0.0001886250000000013, 0.00018758400000000106, 0.00018859800000000163, 0.00018888899999999764,...</msg>
<status status="PASS" starttime="20201112 09:43:38.145" endtime="20201112 09:43:38.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.163" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 09:43:38.162" endtime="20201112 09:43:38.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.165" level="INFO">VALUE: [0.00018729199999999863, 0.00018736100000000047, 0.00018711100000000022, 0.00018723599999999688, 0.0001886250000000013, 0.00018758400000000106, 0.00018859800000000163, 0.00018888899999999764, 0.0001883470000000019, 0.000187764, 0.00018861099999999825, 0.0001871119999999997, 0.0001878890000000001, 0.0001878470000000014, 0.00018727799999999906, 0.00018793099999999882, 0.00018718099999999807, 0.00018902700000000133, 0.00018808300000000208, 0.00018861099999999825, 0.00018861099999999825, 0.000187764, 0.00018776299999999704, 0.00018709700000000065, 0.00018763899999999986, 0.00018726400000000296, 0.0001871249999999998, 0.0001883890000000006, 0.00018901300000000176, 0.00018727799999999906, 0.00018777799999999956, 0.00018741699999999875, 0.00018836100000000147, 0.00018844399999999942, 0.00018754199999999888, 0.00018777799999999956, 0.00018895899999999896, 0.00018800000000000067, 0.0001889579999999995, 0.00018769400000000214, 0.0001872080000000012, 0.00018869399999999967, 0.0001876950000000016, 0.00018801400000000024, 0.00018809699999999818, 0.0001878479999999974, 0.0001885829999999991, 0.0001889310000000033, 0.00018837499999999757, 0.00018775000000000042]</msg>
<status status="PASS" starttime="20201112 09:43:38.164" endtime="20201112 09:43:38.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.159" endtime="20201112 09:43:38.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.169" endtime="20201112 09:43:38.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:38.173" endtime="20201112 09:43:38.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.171" endtime="20201112 09:43:38.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.167" endtime="20201112 09:43:38.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.791" endtime="20201112 09:43:38.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.791" endtime="20201112 09:43:38.194"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.203" endtime="20201112 09:43:38.227"></status>
</kw>
<msg timestamp="20201112 09:43:38.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.201" endtime="20201112 09:43:38.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.228" endtime="20201112 09:43:38.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.231" endtime="20201112 09:43:38.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.198" endtime="20201112 09:43:38.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.196" endtime="20201112 09:43:38.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.240" endtime="20201112 09:43:38.528"></status>
</kw>
<msg timestamp="20201112 09:43:38.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022455833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022645194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.239" endtime="20201112 09:43:38.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022455833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022645194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.532" endtime="20201112 09:43:38.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.541" endtime="20201112 09:43:38.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.236" endtime="20201112 09:43:38.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.234" endtime="20201112 09:43:38.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:38.548" level="INFO">${RESULT} = [{'time': 0.022645194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000189360999999999, 'source_diff': 0.000189360999999999}, {'time': 0.022849208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:38.544" endtime="20201112 09:43:38.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:38.562" level="INFO">${ACCURACY} = {'diff': [0.000189360999999999, 0.0001900830000000006, 0.0001901389999999989, 0.0001899580000000005, 0.0001893470000000029, 0.00019094499999999792, 0.000189667000000001, 0.00019101399999999977, 0.0001...</msg>
<status status="PASS" starttime="20201112 09:43:38.549" endtime="20201112 09:43:38.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.567" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 09:43:38.566" endtime="20201112 09:43:38.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.570" level="INFO">VALUE: [0.000189360999999999, 0.0001900830000000006, 0.0001901389999999989, 0.0001899580000000005, 0.0001893470000000029, 0.00019094499999999792, 0.000189667000000001, 0.00019101399999999977, 0.00019012499999999932, 0.00018961099999999925, 0.00019093100000000182, 0.00019095900000000096, 0.0001901250000000028, 0.00019059700000000068, 0.00018927800000000106, 0.00018943100000000032, 0.00019069500000000114, 0.00018967999999999763, 0.0001899029999999982, 0.00019091699999999878, 0.00018984699999999993, 0.00018929200000000063, 0.0001898479999999994, 0.00019101399999999977, 0.00018994399999999745, 0.000189360999999999, 0.00018943100000000032, 0.00018936199999999848, 0.00018977700000000208, 0.00018929200000000063, 0.00019062499999999982, 0.00018977800000000156, 0.00019009799999999966, 0.00018926299999999854, 0.00018961099999999925, 0.00018923600000000235, 0.00019009700000000018, 0.0001902779999999986, 0.00019076300000000004, 0.00019092999999999888, 0.000190458000000001, 0.00019011099999999975, 0.00018926399999999802, 0.00018993099999999735, 0.00019034700000000043, 0.00019042999999999838, 0.00019019499999999717, 0.0001905139999999958, 0.00018957000000000002, 0.00019067999999999863]</msg>
<status status="PASS" starttime="20201112 09:43:38.568" endtime="20201112 09:43:38.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.563" endtime="20201112 09:43:38.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.574" endtime="20201112 09:43:38.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:38.577" endtime="20201112 09:43:38.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.576" endtime="20201112 09:43:38.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.572" endtime="20201112 09:43:38.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.195" endtime="20201112 09:43:38.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.194" endtime="20201112 09:43:38.598"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.607" endtime="20201112 09:43:38.632"></status>
</kw>
<msg timestamp="20201112 09:43:38.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.605" endtime="20201112 09:43:38.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.633" endtime="20201112 09:43:38.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.636" endtime="20201112 09:43:38.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.603" endtime="20201112 09:43:38.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.601" endtime="20201112 09:43:38.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.645" endtime="20201112 09:43:38.932"></status>
</kw>
<msg timestamp="20201112 09:43:38.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022482472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.644" endtime="20201112 09:43:38.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022482472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.937" endtime="20201112 09:43:38.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.945" endtime="20201112 09:43:38.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.641" endtime="20201112 09:43:38.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.639" endtime="20201112 09:43:38.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:38.952" level="INFO">${RESULT} = [{'time': 0.022675083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00019261099999999878, 'source_diff': 0.00019261099999999878}, {'time': 0.022883111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:38.949" endtime="20201112 09:43:38.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:38.967" level="INFO">${ACCURACY} = {'diff': [0.00019261099999999878, 0.00019226400000000102, 0.00019252799999999737, 0.00019294499999999992, 0.00019136200000000048, 0.00019294400000000045, 0.000192361000000002, 0.00019243099999999985, ...</msg>
<status status="PASS" starttime="20201112 09:43:38.953" endtime="20201112 09:43:38.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.971" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 09:43:38.970" endtime="20201112 09:43:38.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.974" level="INFO">VALUE: [0.00019261099999999878, 0.00019226400000000102, 0.00019252799999999737, 0.00019294499999999992, 0.00019136200000000048, 0.00019294400000000045, 0.000192361000000002, 0.00019243099999999985, 0.00019193099999999935, 0.00019115300000000293, 0.00019187500000000107, 0.0001912779999999996, 0.00019262500000000182, 0.0001920969999999987, 0.00019129199999999916, 0.00019112500000000032, 0.00019126400000000002, 0.0001917780000000001, 0.00019144499999999842, 0.0001918199999999988, 0.00019294400000000045, 0.0001915549999999995, 0.00019194399999999945, 0.0001926810000000001, 0.00019151400000000027, 0.00019209700000000218, 0.00019124999999999698, 0.00019244399999999995, 0.00019184700000000193, 0.00019141699999999928, 0.0001920139999999973, 0.00019179099999999671, 0.00019293000000000088, 0.0001926940000000002, 0.00019116699999999903, 0.0001928749999999986, 0.00019209800000000166, 0.00019294400000000045, 0.00019198600000000163, 0.0001922780000000006, 0.00019249999999999823, 0.00019119499999999817, 0.0001928610000000025, 0.00019144399999999895, 0.000191361000000001, 0.00019162500000000082, 0.0001929309999999934, 0.0001928190000000038, 0.00019115299999999946, 0.00019243099999999985]</msg>
<status status="PASS" starttime="20201112 09:43:38.973" endtime="20201112 09:43:38.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.968" endtime="20201112 09:43:38.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.978" endtime="20201112 09:43:38.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:38.981" endtime="20201112 09:43:39.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.980" endtime="20201112 09:43:39.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.976" endtime="20201112 09:43:39.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.599" endtime="20201112 09:43:39.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.598" endtime="20201112 09:43:39.002"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.011" endtime="20201112 09:43:39.035"></status>
</kw>
<msg timestamp="20201112 09:43:39.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.010" endtime="20201112 09:43:39.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.037" endtime="20201112 09:43:39.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.040" endtime="20201112 09:43:39.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.007" endtime="20201112 09:43:39.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.005" endtime="20201112 09:43:39.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.049" endtime="20201112 09:43:39.336"></status>
</kw>
<msg timestamp="20201112 09:43:39.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022700417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.047" endtime="20201112 09:43:39.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022700417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.340" endtime="20201112 09:43:39.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.349" endtime="20201112 09:43:39.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.045" endtime="20201112 09:43:39.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.043" endtime="20201112 09:43:39.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:39.356" level="INFO">${RESULT} = [{'time': 0.022700417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00019402799999999887, 'source_diff': 0.00019402799999999887}, {'time': 0.022912444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:39.352" endtime="20201112 09:43:39.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:39.369" level="INFO">${ACCURACY} = {'diff': [0.00019402799999999887, 0.00019344400000000095, 0.0001936940000000012, 0.00019469399999999873, 0.00019486100000000103, 0.00019324999999999898, 0.00019444400000000195, 0.00019318000000000113,...</msg>
<status status="PASS" starttime="20201112 09:43:39.357" endtime="20201112 09:43:39.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.374" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 09:43:39.373" endtime="20201112 09:43:39.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.376" level="INFO">VALUE: [0.00019402799999999887, 0.00019344400000000095, 0.0001936940000000012, 0.00019469399999999873, 0.00019486100000000103, 0.00019324999999999898, 0.00019444400000000195, 0.00019318000000000113, 0.00019402800000000234, 0.00019424999999999998, 0.0001930969999999997, 0.00019373699999999938, 0.00019329099999999821, 0.00019324999999999898, 0.00019361099999999978, 0.0001940420000000019, 0.00019466699999999906, 0.00019461100000000078, 0.00019494399999999898, 0.00019318000000000113, 0.00019483299999999842, 0.00019493099999999888, 0.00019336099999999953, 0.00019343000000000138, 0.0001940139999999993, 0.000194459000000001, 0.00019319500000000017, 0.00019430599999999826, 0.00019440199999999977, 0.00019402800000000234, 0.00019477799999999962, 0.00019324999999999898, 0.00019377799999999862, 0.00019444400000000195, 0.00019419399999999823, 0.000193846999999997, 0.00019344500000000042, 0.00019452799999999937, 0.00019476300000000057, 0.00019344400000000095, 0.0001947919999999992, 0.00019427799999999912, 0.00019443100000000185, 0.0001946940000000022, 0.00019399999999999973, 0.00019472200000000134, 0.0001944309999999949, 0.00019415300000000246, 0.00019349999999999923, 0.00019476400000000005]</msg>
<status status="PASS" starttime="20201112 09:43:39.375" endtime="20201112 09:43:39.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.370" endtime="20201112 09:43:39.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.380" endtime="20201112 09:43:39.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:39.384" endtime="20201112 09:43:39.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.382" endtime="20201112 09:43:39.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.378" endtime="20201112 09:43:39.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.003" endtime="20201112 09:43:39.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.003" endtime="20201112 09:43:39.405"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.414" endtime="20201112 09:43:39.438"></status>
</kw>
<msg timestamp="20201112 09:43:39.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.412" endtime="20201112 09:43:39.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.440" endtime="20201112 09:43:39.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.442" endtime="20201112 09:43:39.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.409" endtime="20201112 09:43:39.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.407" endtime="20201112 09:43:39.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.452" endtime="20201112 09:43:39.740"></status>
</kw>
<msg timestamp="20201112 09:43:39.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022436681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.450" endtime="20201112 09:43:39.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022436681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.744" endtime="20201112 09:43:39.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.752" endtime="20201112 09:43:39.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.448" endtime="20201112 09:43:39.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.446" endtime="20201112 09:43:39.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:39.759" level="INFO">${RESULT} = [{'time': 0.022632292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00019561099999999831, 'source_diff': 0.00019561099999999831}, {'time': 0.022842306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:39.756" endtime="20201112 09:43:39.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:39.773" level="INFO">${ACCURACY} = {'diff': [0.00019561099999999831, 0.00019626399999999808, 0.00019608299999999967, 0.00019562500000000135, 0.00019576400000000105, 0.00019659799999999922, 0.00019627699999999818, 0.00019544399999999948...</msg>
<status status="PASS" starttime="20201112 09:43:39.760" endtime="20201112 09:43:39.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.778" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 09:43:39.777" endtime="20201112 09:43:39.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.780" level="INFO">VALUE: [0.00019561099999999831, 0.00019626399999999808, 0.00019608299999999967, 0.00019562500000000135, 0.00019576400000000105, 0.00019659799999999922, 0.00019627699999999818, 0.00019544399999999948, 0.00019566700000000006, 0.00019597199999999912, 0.0001952360000000014, 0.00019544499999999895, 0.00019538900000000067, 0.00019525000000000098, 0.00019643100000000038, 0.00019633400000000287, 0.00019630499999999731, 0.00019522199999999837, 0.00019672199999999987, 0.00019627799999999765, 0.00019590299999999727, 0.00019516699999999956, 0.0001960409999999975, 0.00019558299999999917, 0.0001954299999999999, 0.000195846999999999, 0.00019556999999999908, 0.00019579100000000071, 0.00019662499999999888, 0.00019626400000000155, 0.00019694499999999698, 0.00019694500000000045, 0.00019659700000000321, 0.00019608299999999967, 0.00019609700000000271, 0.00019695900000000002, 0.00019568099999999963, 0.00019518099999999913, 0.000196847, 0.00019609699999999924, 0.00019576400000000105, 0.0001958059999999963, 0.0001951119999999973, 0.00019511099999999781, 0.00019558299999999917, 0.00019594400000000345, 0.0001967230000000028, 0.0001965140000000018, 0.00019591599999999737, 0.00019527799999999318]</msg>
<status status="PASS" starttime="20201112 09:43:39.779" endtime="20201112 09:43:39.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.774" endtime="20201112 09:43:39.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.784" endtime="20201112 09:43:39.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:39.787" endtime="20201112 09:43:39.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.786" endtime="20201112 09:43:39.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.782" endtime="20201112 09:43:39.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.406" endtime="20201112 09:43:39.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.405" endtime="20201112 09:43:39.808"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.817" endtime="20201112 09:43:39.842"></status>
</kw>
<msg timestamp="20201112 09:43:39.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.816" endtime="20201112 09:43:39.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.843" endtime="20201112 09:43:39.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.846" endtime="20201112 09:43:39.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.813" endtime="20201112 09:43:39.848"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.811" endtime="20201112 09:43:39.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.855" endtime="20201112 09:43:40.142"></status>
</kw>
<msg timestamp="20201112 09:43:40.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022626653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.854" endtime="20201112 09:43:40.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022626653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.146" endtime="20201112 09:43:40.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.155" endtime="20201112 09:43:40.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.851" endtime="20201112 09:43:40.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.849" endtime="20201112 09:43:40.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:40.162" level="INFO">${RESULT} = [{'time': 0.022825181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001985279999999999, 'source_diff': 0.0001985279999999999}, {'time': 0.023041167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:40.158" endtime="20201112 09:43:40.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:40.175" level="INFO">${ACCURACY} = {'diff': [0.0001985279999999999, 0.00019893100000000288, 0.00019751399999999933, 0.00019845799999999858, 0.00019745799999999758, 0.0001988609999999981, 0.00019845900000000152, 0.00019769399999999826, ...</msg>
<status status="PASS" starttime="20201112 09:43:40.163" endtime="20201112 09:43:40.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.180" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 09:43:40.179" endtime="20201112 09:43:40.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.182" level="INFO">VALUE: [0.0001985279999999999, 0.00019893100000000288, 0.00019751399999999933, 0.00019845799999999858, 0.00019745799999999758, 0.0001988609999999981, 0.00019845900000000152, 0.00019769399999999826, 0.00019886100000000156, 0.00019711099999999981, 0.0001982639999999966, 0.00019744500000000095, 0.0001981950000000017, 0.0001989999999999978, 0.00019727800000000212, 0.00019811099999999734, 0.00019744500000000095, 0.00019852700000000043, 0.00019792999999999894, 0.0001972080000000008, 0.0001984860000000012, 0.0001972499999999995, 0.00019758400000000065, 0.00019762499999999988, 0.00019898599999999822, 0.00019851400000000033, 0.00019858400000000165, 0.00019709799999999972, 0.00019842999999999944, 0.00019869399999999926, 0.0001976799999999987, 0.0001976950000000012, 0.0001980279999999994, 0.00019893099999999941, 0.00019888899999999723, 0.00019812500000000038, 0.00019895900000000202, 0.00019886100000000156, 0.00019776399999999958, 0.00019811100000000081, 0.00019812500000000038, 0.00019743099999999791, 0.0001983340000000014, 0.00019827800000000312, 0.00019792999999999894, 0.0001972360000000034, 0.0001981669999999991, 0.00019886100000000156, 0.00019809800000000072, 0.00019720799999999733]</msg>
<status status="PASS" starttime="20201112 09:43:40.181" endtime="20201112 09:43:40.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.176" endtime="20201112 09:43:40.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.186" endtime="20201112 09:43:40.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:40.190" endtime="20201112 09:43:40.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.188" endtime="20201112 09:43:40.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.184" endtime="20201112 09:43:40.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.809" endtime="20201112 09:43:40.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.809" endtime="20201112 09:43:40.211"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.220" endtime="20201112 09:43:40.245"></status>
</kw>
<msg timestamp="20201112 09:43:40.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.218" endtime="20201112 09:43:40.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.246" endtime="20201112 09:43:40.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.249" endtime="20201112 09:43:40.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.215" endtime="20201112 09:43:40.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.213" endtime="20201112 09:43:40.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.258" endtime="20201112 09:43:40.544"></status>
</kw>
<msg timestamp="20201112 09:43:40.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022713125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022913611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.257" endtime="20201112 09:43:40.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022713125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022913611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.549" endtime="20201112 09:43:40.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.557" endtime="20201112 09:43:40.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.254" endtime="20201112 09:43:40.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.252" endtime="20201112 09:43:40.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:40.564" level="INFO">${RESULT} = [{'time': 0.022913611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020048599999999972, 'source_diff': 0.00020048599999999972}, {'time': 0.023123597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:40.561" endtime="20201112 09:43:40.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:40.579" level="INFO">${ACCURACY} = {'diff': [0.00020048599999999972, 0.00020042999999999797, 0.00020059700000000028, 0.00020093099999999794, 0.00019969499999999973, 0.00020002699999999846, 0.0001995829999999997, 0.0002002639999999986, ...</msg>
<status status="PASS" starttime="20201112 09:43:40.565" endtime="20201112 09:43:40.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.584" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 09:43:40.583" endtime="20201112 09:43:40.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.586" level="INFO">VALUE: [0.00020048599999999972, 0.00020042999999999797, 0.00020059700000000028, 0.00020093099999999794, 0.00019969499999999973, 0.00020002699999999846, 0.0001995829999999997, 0.0002002639999999986, 0.00020045900000000005, 0.00020069500000000073, 0.00020019400000000076, 0.0002001800000000012, 0.00020033300000000046, 0.00019913899999999748, 0.00020080499999999835, 0.00019959800000000222, 0.00020052699999999896, 0.00019959700000000274, 0.00019961099999999884, 0.00019955600000000004, 0.00020018100000000066, 0.0002005830000000007, 0.00019961099999999884, 0.0002000830000000002, 0.00019911100000000181, 0.00020059799999999975, 0.00020011099999999934, 0.00019977800000000115, 0.00019962499999999841, 0.00019993100000000041, 0.00019919399999999976, 0.00020002699999999846, 0.000199444, 0.00020037499999999916, 0.00020093099999999794, 0.00019934800000000197, 0.000200444000000001, 0.00019936100000000206, 0.00020024999999999904, 0.00020059700000000374, 0.0002006120000000028, 0.00019947199999999915, 0.00019952799999999743, 0.0002005969999999968, 0.0001992639999999976, 0.00019948599999999872, 0.00019986099999999563, 0.00020009700000000324, 0.00020056899999999767, 0.00020093100000000141]</msg>
<status status="PASS" starttime="20201112 09:43:40.585" endtime="20201112 09:43:40.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.580" endtime="20201112 09:43:40.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.591" endtime="20201112 09:43:40.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:40.595" endtime="20201112 09:43:40.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.593" endtime="20201112 09:43:40.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.589" endtime="20201112 09:43:40.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.212" endtime="20201112 09:43:40.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.211" endtime="20201112 09:43:40.616"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.625" endtime="20201112 09:43:40.650"></status>
</kw>
<msg timestamp="20201112 09:43:40.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.623" endtime="20201112 09:43:40.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.651" endtime="20201112 09:43:40.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.654" endtime="20201112 09:43:40.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.621" endtime="20201112 09:43:40.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.618" endtime="20201112 09:43:40.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.663" endtime="20201112 09:43:40.951"></status>
</kw>
<msg timestamp="20201112 09:43:40.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225315, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022732958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:40.662" endtime="20201112 09:43:40.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225315, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022732958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:40.955" endtime="20201112 09:43:40.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.963" endtime="20201112 09:43:40.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.659" endtime="20201112 09:43:40.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.657" endtime="20201112 09:43:40.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:40.970" level="INFO">${RESULT} = [{'time': 0.022732958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020145800000000158, 'source_diff': 0.00020145800000000158}, {'time': 0.022953, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:40.967" endtime="20201112 09:43:40.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:40.984" level="INFO">${ACCURACY} = {'diff': [0.00020145800000000158, 0.00020244399999999954, 0.00020188900000000023, 0.00020112499999999991, 0.00020161099999999738, 0.00020209700000000178, 0.00020244399999999954, 0.00020251400000000086...</msg>
<status status="PASS" starttime="20201112 09:43:40.971" endtime="20201112 09:43:40.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.988" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 09:43:40.987" endtime="20201112 09:43:40.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.991" level="INFO">VALUE: [0.00020145800000000158, 0.00020244399999999954, 0.00020188900000000023, 0.00020112499999999991, 0.00020161099999999738, 0.00020209700000000178, 0.00020244399999999954, 0.00020251400000000086, 0.00020180499999999935, 0.0002022640000000006, 0.00020274999999999807, 0.00020227800000000018, 0.00020144499999999801, 0.00020251400000000086, 0.00020265300000000055, 0.00020229100000000028, 0.00020247200000000215, 0.00020247199999999868, 0.00020226399999999714, 0.00020297199999999918, 0.00020151399999999986, 0.00020294400000000004, 0.00020302800000000093, 0.00020141699999999887, 0.00020116599999999915, 0.00020169400000000226, 0.00020155599999999857, 0.00020294499999999951, 0.00020111100000000035, 0.00020202700000000046, 0.00020161100000000085, 0.00020142999999999897, 0.00020252800000000043, 0.00020281899999999992, 0.00020277800000000068, 0.00020293000000000047, 0.0002027220000000024, 0.00020201400000000036, 0.0002014029999999993, 0.00020204100000000003, 0.00020129100000000275, 0.00020125000000000004, 0.00020293100000000341, 0.00020119500000000123, 0.00020119500000000123, 0.00020201400000000036, 0.00020283399999999896, 0.0002020969999999983, 0.00020112499999999645, 0.00020262500000000488]</msg>
<status status="PASS" starttime="20201112 09:43:40.990" endtime="20201112 09:43:40.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.985" endtime="20201112 09:43:40.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.995" endtime="20201112 09:43:40.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:40.998" endtime="20201112 09:43:41.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.997" endtime="20201112 09:43:41.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.993" endtime="20201112 09:43:41.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.617" endtime="20201112 09:43:41.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.616" endtime="20201112 09:43:41.019"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.028" endtime="20201112 09:43:41.053"></status>
</kw>
<msg timestamp="20201112 09:43:41.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.027" endtime="20201112 09:43:41.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.055" endtime="20201112 09:43:41.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.057" endtime="20201112 09:43:41.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.024" endtime="20201112 09:43:41.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.022" endtime="20201112 09:43:41.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.067" endtime="20201112 09:43:41.355"></status>
</kw>
<msg timestamp="20201112 09:43:41.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022793597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.065" endtime="20201112 09:43:41.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022793597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.359" endtime="20201112 09:43:41.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.367" endtime="20201112 09:43:41.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.063" endtime="20201112 09:43:41.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.061" endtime="20201112 09:43:41.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:41.374" level="INFO">${RESULT} = [{'time': 0.022793597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020312499999999845, 'source_diff': 0.00020312499999999845}, {'time': 0.023015625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:41.371" endtime="20201112 09:43:41.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:41.388" level="INFO">${ACCURACY} = {'diff': [0.00020312499999999845, 0.00020327800000000118, 0.00020340299999999784, 0.0002045550000000021, 0.00020394400000000104, 0.00020436100000000013, 0.00020443000000000197, 0.00020506900000000217,...</msg>
<status status="PASS" starttime="20201112 09:43:41.375" endtime="20201112 09:43:41.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.393" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 09:43:41.392" endtime="20201112 09:43:41.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.395" level="INFO">VALUE: [0.00020312499999999845, 0.00020327800000000118, 0.00020340299999999784, 0.0002045550000000021, 0.00020394400000000104, 0.00020436100000000013, 0.00020443000000000197, 0.00020506900000000217, 0.00020395900000000008, 0.0002033610000000026, 0.00020461100000000038, 0.00020416699999999816, 0.0002035969999999998, 0.00020374999999999907, 0.00020411099999999988, 0.0002050139999999999, 0.00020334699999999956, 0.00020394500000000051, 0.0002031940000000003, 0.000203138000000002, 0.00020352800000000143, 0.00020348599999999925, 0.00020422200000000043, 0.00020334799999999903, 0.00020341599999999793, 0.00020352799999999796, 0.00020412499999999945, 0.00020429200000000175, 0.0002037640000000021, 0.000203929999999998, 0.0002048750000000002, 0.0002044580000000011, 0.00020462499999999995, 0.00020476399999999964, 0.00020351299999999892, 0.00020429199999999828, 0.00020312499999999845, 0.00020311100000000235, 0.0002043749999999997, 0.00020499999999999685, 0.00020361099999999938, 0.00020461100000000038, 0.0002047640000000031, 0.00020459800000000028, 0.0002047499999999966, 0.00020444399999999807, 0.0002039719999999967, 0.00020327799999999424, 0.00020431900000000142, 0.00020327699999999477]</msg>
<status status="PASS" starttime="20201112 09:43:41.394" endtime="20201112 09:43:41.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.389" endtime="20201112 09:43:41.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.399" endtime="20201112 09:43:41.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:41.402" endtime="20201112 09:43:41.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.401" endtime="20201112 09:43:41.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.397" endtime="20201112 09:43:41.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.020" endtime="20201112 09:43:41.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.020" endtime="20201112 09:43:41.423"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.432" endtime="20201112 09:43:41.457"></status>
</kw>
<msg timestamp="20201112 09:43:41.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.431" endtime="20201112 09:43:41.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.459" endtime="20201112 09:43:41.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.462" endtime="20201112 09:43:41.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.428" endtime="20201112 09:43:41.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.426" endtime="20201112 09:43:41.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.471" endtime="20201112 09:43:41.759"></status>
</kw>
<msg timestamp="20201112 09:43:41.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02246825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:41.469" endtime="20201112 09:43:41.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02246825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022675056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:41.763" endtime="20201112 09:43:41.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.772" endtime="20201112 09:43:41.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.467" endtime="20201112 09:43:41.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.465" endtime="20201112 09:43:41.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:41.778" level="INFO">${RESULT} = [{'time': 0.022675056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020680600000000035, 'source_diff': 0.00020680600000000035}, {'time': 0.022899083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:41.775" endtime="20201112 09:43:41.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:41.792" level="INFO">${ACCURACY} = {'diff': [0.00020680600000000035, 0.00020618000000000025, 0.0002067079999999999, 0.00020699999999999885, 0.00020544499999999855, 0.00020595900000000208, 0.00020509699999999784, 0.00020644400000000007,...</msg>
<status status="PASS" starttime="20201112 09:43:41.779" endtime="20201112 09:43:41.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.797" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 09:43:41.796" endtime="20201112 09:43:41.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.799" level="INFO">VALUE: [0.00020680600000000035, 0.00020618000000000025, 0.0002067079999999999, 0.00020699999999999885, 0.00020544499999999855, 0.00020595900000000208, 0.00020509699999999784, 0.00020644400000000007, 0.00020651399999999792, 0.00020643099999999998, 0.00020584800000000153, 0.0002063049999999969, 0.00020645799999999964, 0.00020549999999999735, 0.00020505600000000207, 0.00020611199999999788, 0.0002062910000000008, 0.00020626400000000114, 0.00020612500000000145, 0.00020625000000000157, 0.0002065979999999988, 0.00020513900000000002, 0.0002065690000000002, 0.00020645899999999912, 0.00020668100000000023, 0.00020519500000000176, 0.00020636099999999866, 0.000206930000000001, 0.00020586100000000163, 0.0002050559999999986, 0.0002069170000000009, 0.0002055140000000004, 0.0002054299999999995, 0.0002070140000000019, 0.0002055979999999978, 0.0002060979999999983, 0.00020592999999999653, 0.00020622200000000243, 0.00020702800000000146, 0.00020644499999999955, 0.00020518100000000566, 0.00020566600000000018, 0.00020659800000000228, 0.00020661100000000238, 0.00020527799999999624, 0.0002069170000000009, 0.00020633300000000299, 0.00020544399999999907, 0.0002058609999999947, 0.00020611200000000135]</msg>
<status status="PASS" starttime="20201112 09:43:41.798" endtime="20201112 09:43:41.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.793" endtime="20201112 09:43:41.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.803" endtime="20201112 09:43:41.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:41.807" endtime="20201112 09:43:41.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.805" endtime="20201112 09:43:41.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.801" endtime="20201112 09:43:41.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.424" endtime="20201112 09:43:41.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.424" endtime="20201112 09:43:41.827"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.837" endtime="20201112 09:43:41.862"></status>
</kw>
<msg timestamp="20201112 09:43:41.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.835" endtime="20201112 09:43:41.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.863" endtime="20201112 09:43:41.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.866" endtime="20201112 09:43:41.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.832" endtime="20201112 09:43:41.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.830" endtime="20201112 09:43:41.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.875" endtime="20201112 09:43:42.163"></status>
</kw>
<msg timestamp="20201112 09:43:42.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022873014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023081083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.874" endtime="20201112 09:43:42.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022873014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023081083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.167" endtime="20201112 09:43:42.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.175" endtime="20201112 09:43:42.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.871" endtime="20201112 09:43:42.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.869" endtime="20201112 09:43:42.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:42.182" level="INFO">${RESULT} = [{'time': 0.023081083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020806899999999823, 'source_diff': 0.00020806899999999823}, {'time': 0.023309111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:42.179" endtime="20201112 09:43:42.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:42.197" level="INFO">${ACCURACY} = {'diff': [0.00020806899999999823, 0.000208027999999999, 0.00020894500000000205, 0.00020790200000000286, 0.00020861200000000038, 0.00020745800000000064, 0.00020854199999999906, 0.00020709699999999984, ...</msg>
<status status="PASS" starttime="20201112 09:43:42.183" endtime="20201112 09:43:42.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.202" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 09:43:42.201" endtime="20201112 09:43:42.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.205" level="INFO">VALUE: [0.00020806899999999823, 0.000208027999999999, 0.00020894500000000205, 0.00020790200000000286, 0.00020861200000000038, 0.00020745800000000064, 0.00020854199999999906, 0.00020709699999999984, 0.00020708399999999974, 0.0002079170000000019, 0.00020901400000000042, 0.0002085279999999995, 0.0002076109999999999, 0.0002086110000000009, 0.00020827699999999977, 0.00020708300000000027, 0.00020819400000000182, 0.0002081110000000004, 0.00020727799999999824, 0.0002089439999999991, 0.0002073470000000001, 0.00020826399999999967, 0.000207027999999998, 0.0002080980000000003, 0.0002077499999999996, 0.00020830599999999838, 0.00020776399999999917, 0.00020862500000000048, 0.0002089170000000029, 0.0002085409999999996, 0.00020742999999999803, 0.00020786100000000016, 0.00020798600000000028, 0.00020801399999999942, 0.0002086110000000009, 0.00020844400000000207, 0.0002078470000000006, 0.00020877799999999974, 0.00020726399999999867, 0.00020845800000000164, 0.00020734699999999662, 0.00020843100000000198, 0.0002086950000000018, 0.0002082080000000014, 0.00020769400000000132, 0.00020837499999999676, 0.00020827799999999924, 0.00020809699999999737, 0.00020843100000000198, 0.00020758300000000424]</msg>
<status status="PASS" starttime="20201112 09:43:42.203" endtime="20201112 09:43:42.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.198" endtime="20201112 09:43:42.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.208" endtime="20201112 09:43:42.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:42.212" endtime="20201112 09:43:42.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.210" endtime="20201112 09:43:42.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.207" endtime="20201112 09:43:42.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.828" endtime="20201112 09:43:42.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.828" endtime="20201112 09:43:42.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.253" endtime="20201112 09:43:42.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:42.239" endtime="20201112 09:43:42.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.238" endtime="20201112 09:43:42.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.235" endtime="20201112 09:43:42.260"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:02.178" endtime="20201112 09:43:42.261" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:42.269" endtime="20201112 09:43:42.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.268" endtime="20201112 09:43:42.289"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.304" endtime="20201112 09:43:42.323"></status>
</kw>
<msg timestamp="20201112 09:43:42.323" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.302" endtime="20201112 09:43:42.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.326" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.324" endtime="20201112 09:43:42.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.329" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:42.327" endtime="20201112 09:43:42.330"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:42.299" endtime="20201112 09:43:42.330"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:42.296" endtime="20201112 09:43:42.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.295" endtime="20201112 09:43:42.331"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:42.335" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:42.334" endtime="20201112 09:43:42.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.332" endtime="20201112 09:43:42.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.294" endtime="20201112 09:43:42.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.293" endtime="20201112 09:43:42.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.337" endtime="20201112 09:43:42.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.292" endtime="20201112 09:43:42.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.290" endtime="20201112 09:43:42.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.266" endtime="20201112 09:43:42.340"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.351" endtime="20201112 09:43:42.366"></status>
</kw>
<msg timestamp="20201112 09:43:42.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.349" endtime="20201112 09:43:42.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.367" endtime="20201112 09:43:42.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.370" endtime="20201112 09:43:42.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.346" endtime="20201112 09:43:42.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.344" endtime="20201112 09:43:42.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.380" endtime="20201112 09:43:42.666"></status>
</kw>
<msg timestamp="20201112 09:43:42.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074075292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074084208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.378" endtime="20201112 09:43:42.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074075292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074084208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.671" endtime="20201112 09:43:42.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.679" endtime="20201112 09:43:42.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.375" endtime="20201112 09:43:42.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.373" endtime="20201112 09:43:42.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:42.686" level="INFO">${RESULT} = [{'time': 0.074084208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.915999999997704e-06, 'source_diff': 8.915999999997704e-06}, {'time': 0.074104208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:42.683" endtime="20201112 09:43:42.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:42.701" level="INFO">${ACCURACY} = {'diff': [8.915999999997704e-06, 9.514000000002132e-06, 8.277000000000978e-06, 9.499999999995623e-06, 9.55600000000778e-06, 9.486000000002992e-06, 8.903000000004546e-06, 8.29200000000696e-06, 8.305999...</msg>
<status status="PASS" starttime="20201112 09:43:42.687" endtime="20201112 09:43:42.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.706" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 09:43:42.704" endtime="20201112 09:43:42.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.708" level="INFO">VALUE: [8.915999999997704e-06, 9.514000000002132e-06, 8.277000000000978e-06, 9.499999999995623e-06, 9.55600000000778e-06, 9.486000000002992e-06, 8.903000000004546e-06, 8.29200000000696e-06, 8.305999999999591e-06, 8.903000000004546e-06, 8.290999999993609e-06, 9.52800000000864e-06, 8.346999999991889e-06, 9.5000000000095e-06, 9.514000000002132e-06, 8.888999999998037e-06, 8.361999999997871e-06, 8.916999999997177e-06, 1.0124999999999718e-05, 8.874999999991529e-06, 8.305999999999591e-06, 9.513999999988254e-06, 9.5000000000095e-06, 1.0110999999993209e-05, 8.305000000000118e-06, 1.0111000000007087e-05, 9.542000000001272e-06, 9.486000000002992e-06, 1.0138999999992349e-05, 9.499999999995623e-06, 1.0111999999992682e-05, 9.499999999995623e-06, 9.443999999997343e-06, 1.0027999999995263e-05, 8.278000000000452e-06, 8.305999999999591e-06, 8.902999999990668e-06, 8.902000000005073e-06, 8.834000000013109e-06, 8.875000000005406e-06, 8.291999999993083e-06, 9.485999999989114e-06, 8.305000000000118e-06, 9.570000000000412e-06, 1.0110999999993209e-05, 9.499999999995623e-06, 1.0097000000000578e-05, 9.499999999995623e-06, 9.499999999995623e-06, 1.0083000000007947e-05]</msg>
<status status="PASS" starttime="20201112 09:43:42.707" endtime="20201112 09:43:42.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.702" endtime="20201112 09:43:42.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.711" endtime="20201112 09:43:42.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:42.715" endtime="20201112 09:43:42.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.713" endtime="20201112 09:43:42.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.710" endtime="20201112 09:43:42.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.342" endtime="20201112 09:43:42.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.341" endtime="20201112 09:43:42.740"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.749" endtime="20201112 09:43:42.765"></status>
</kw>
<msg timestamp="20201112 09:43:42.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.748" endtime="20201112 09:43:42.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.766" endtime="20201112 09:43:42.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.769" endtime="20201112 09:43:42.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.745" endtime="20201112 09:43:42.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.743" endtime="20201112 09:43:42.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.778" endtime="20201112 09:43:43.064"></status>
</kw>
<msg timestamp="20201112 09:43:43.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027417528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027428861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.777" endtime="20201112 09:43:43.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027417528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027428861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.068" endtime="20201112 09:43:43.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.077" endtime="20201112 09:43:43.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.774" endtime="20201112 09:43:43.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.772" endtime="20201112 09:43:43.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:43.084" level="INFO">${RESULT} = [{'time': 0.027428861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1332999999998788e-05, 'source_diff': 1.1332999999998788e-05}, {'time': 0.027448639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:43.080" endtime="20201112 09:43:43.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:43.099" level="INFO">${ACCURACY} = {'diff': [1.1332999999998788e-05, 1.0097000000000578e-05, 1.0722000000001203e-05, 1.1318999999999219e-05, 1.0708000000001633e-05, 1.1318999999999219e-05, 1.0680999999998497e-05, 1.1264000000000413e-05...</msg>
<status status="PASS" starttime="20201112 09:43:43.085" endtime="20201112 09:43:43.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.104" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 09:43:43.102" endtime="20201112 09:43:43.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.106" level="INFO">VALUE: [1.1332999999998788e-05, 1.0097000000000578e-05, 1.0722000000001203e-05, 1.1318999999999219e-05, 1.0708000000001633e-05, 1.1318999999999219e-05, 1.0680999999998497e-05, 1.1264000000000413e-05, 1.1320000000002162e-05, 1.0722000000001203e-05, 1.1304999999999649e-05, 1.1319000000002688e-05, 1.1319999999998692e-05, 1.1917000000000177e-05, 1.0666999999998927e-05, 1.1917000000000177e-05, 1.1971999999998983e-05, 1.0693999999998594e-05, 1.0097000000000578e-05, 1.1305999999999122e-05, 1.1305999999999122e-05, 1.1318999999999219e-05, 1.1917000000000177e-05, 1.1318999999999219e-05, 1.1917000000000177e-05, 1.0722000000001203e-05, 1.0722000000001203e-05, 1.0111000000000148e-05, 1.1332999999998788e-05, 1.1917000000000177e-05, 1.1375000000000968e-05, 1.1916000000000704e-05, 1.0069999999997442e-05, 1.1305999999999122e-05, 1.1318999999999219e-05, 1.1917000000000177e-05, 1.0110999999996678e-05, 1.1306000000002592e-05, 1.0709000000001107e-05, 1.1930999999999747e-05, 1.1917000000000177e-05, 1.1971999999998983e-05, 1.0111000000000148e-05, 1.1903000000000608e-05, 1.1916000000000704e-05, 1.1902000000001134e-05, 1.0681000000001967e-05, 1.1930000000000274e-05, 1.1320000000002162e-05, 1.1333000000002258e-05]</msg>
<status status="PASS" starttime="20201112 09:43:43.105" endtime="20201112 09:43:43.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.100" endtime="20201112 09:43:43.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.110" endtime="20201112 09:43:43.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:43.113" endtime="20201112 09:43:43.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.112" endtime="20201112 09:43:43.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.108" endtime="20201112 09:43:43.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.741" endtime="20201112 09:43:43.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.741" endtime="20201112 09:43:43.134"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.143" endtime="20201112 09:43:43.159"></status>
</kw>
<msg timestamp="20201112 09:43:43.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.142" endtime="20201112 09:43:43.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.160" endtime="20201112 09:43:43.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.163" endtime="20201112 09:43:43.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.139" endtime="20201112 09:43:43.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.137" endtime="20201112 09:43:43.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.172" endtime="20201112 09:43:43.458"></status>
</kw>
<msg timestamp="20201112 09:43:43.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022941042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022952958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.171" endtime="20201112 09:43:43.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022941042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022952958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.463" endtime="20201112 09:43:43.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.472" endtime="20201112 09:43:43.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.168" endtime="20201112 09:43:43.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.166" endtime="20201112 09:43:43.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:43.480" level="INFO">${RESULT} = [{'time': 0.022952958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1916000000000704e-05, 'source_diff': 1.1916000000000704e-05}, {'time': 0.022973347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:43.476" endtime="20201112 09:43:43.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:43.493" level="INFO">${ACCURACY} = {'diff': [1.1916000000000704e-05, 1.2528000000001233e-05, 1.3110999999999678e-05, 1.251299999999872e-05, 1.3139000000002288e-05, 1.2527999999997763e-05, 1.380499999999868e-05, 1.3736000000000304e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:43.481" endtime="20201112 09:43:43.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.498" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 09:43:43.497" endtime="20201112 09:43:43.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.501" level="INFO">VALUE: [1.1916000000000704e-05, 1.2528000000001233e-05, 1.3110999999999678e-05, 1.251299999999872e-05, 1.3139000000002288e-05, 1.2527999999997763e-05, 1.380499999999868e-05, 1.3736000000000304e-05, 1.1917000000000177e-05, 1.3749999999999873e-05, 1.3124999999999248e-05, 1.2513999999998193e-05, 1.3777999999999013e-05, 1.3722000000000734e-05, 1.3124999999999248e-05, 1.3138999999998818e-05, 1.2513999999998193e-05, 1.3137999999999345e-05, 1.3124999999999248e-05, 1.3736000000000304e-05, 1.3125000000002718e-05, 1.3681000000001498e-05, 1.2527000000001759e-05, 1.3124999999999248e-05, 1.3736000000000304e-05, 1.2528000000001233e-05, 1.2513999999998193e-05, 1.3124999999999248e-05, 1.3124999999999248e-05, 1.2528000000001233e-05, 1.3139000000002288e-05, 1.3124999999999248e-05, 1.2513999999998193e-05, 1.3124999999999248e-05, 1.3736000000000304e-05, 1.251299999999872e-05, 1.2583000000000039e-05, 1.3749999999999873e-05, 1.251299999999872e-05, 1.3722000000000734e-05, 1.3707999999997694e-05, 1.3139000000002288e-05, 1.2471999999999483e-05, 1.2583999999999512e-05, 1.1930000000000274e-05, 1.3125000000002718e-05, 1.2569000000000469e-05, 1.2541000000001329e-05, 1.3679999999998554e-05, 1.2541999999997333e-05]</msg>
<status status="PASS" starttime="20201112 09:43:43.499" endtime="20201112 09:43:43.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.494" endtime="20201112 09:43:43.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.504" endtime="20201112 09:43:43.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:43.508" endtime="20201112 09:43:43.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.506" endtime="20201112 09:43:43.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.503" endtime="20201112 09:43:43.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.135" endtime="20201112 09:43:43.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.135" endtime="20201112 09:43:43.529"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.538" endtime="20201112 09:43:43.553"></status>
</kw>
<msg timestamp="20201112 09:43:43.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.536" endtime="20201112 09:43:43.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.554" endtime="20201112 09:43:43.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.557" endtime="20201112 09:43:43.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.534" endtime="20201112 09:43:43.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.532" endtime="20201112 09:43:43.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.566" endtime="20201112 09:43:43.855"></status>
</kw>
<msg timestamp="20201112 09:43:43.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.565" endtime="20201112 09:43:43.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022555042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.860" endtime="20201112 09:43:43.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.868" endtime="20201112 09:43:43.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.562" endtime="20201112 09:43:43.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.560" endtime="20201112 09:43:43.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:43.875" level="INFO">${RESULT} = [{'time': 0.022555042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4945000000002318e-05, 'source_diff': 1.4945000000002318e-05}, {'time': 0.022576764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:43.872" endtime="20201112 09:43:43.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:43.889" level="INFO">${ACCURACY} = {'diff': [1.4945000000002318e-05, 1.5528000000000763e-05, 1.5513999999997724e-05, 1.5528000000000763e-05, 1.5542000000000333e-05, 1.612499999999878e-05, 1.4931000000002748e-05, 1.4916000000000235e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:43.876" endtime="20201112 09:43:43.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.894" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 09:43:43.893" endtime="20201112 09:43:43.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.897" level="INFO">VALUE: [1.4945000000002318e-05, 1.5528000000000763e-05, 1.5513999999997724e-05, 1.5528000000000763e-05, 1.5542000000000333e-05, 1.612499999999878e-05, 1.4931000000002748e-05, 1.4916000000000235e-05, 1.554100000000086e-05, 1.4929999999999805e-05, 1.4929999999999805e-05, 1.4348000000000832e-05, 1.4945000000002318e-05, 1.554100000000086e-05, 1.6181000000000528e-05, 1.5555999999999903e-05, 1.5013999999997224e-05, 1.5542000000000333e-05, 1.4375000000000498e-05, 1.4320000000001692e-05, 1.4957999999998944e-05, 1.433299999999832e-05, 1.4361000000000929e-05, 1.5555999999999903e-05, 1.5541999999996864e-05, 1.4361000000000929e-05, 1.4915999999996765e-05, 1.5514000000001194e-05, 1.5569e-05, 1.4957999999998944e-05, 1.4958000000002414e-05, 1.433299999999832e-05, 1.5528000000000763e-05, 1.4930999999999278e-05, 1.4320000000001692e-05, 1.4929999999999805e-05, 1.4943999999999374e-05, 1.4333000000001789e-05, 1.5542000000000333e-05, 1.4958999999998418e-05, 1.554099999999739e-05, 1.4916000000000235e-05, 1.613899999999835e-05, 1.554099999999739e-05, 1.4347000000001359e-05, 1.433299999999832e-05, 1.4957999999998944e-05, 1.4277999999999513e-05, 1.5542000000000333e-05, 1.4916000000000235e-05]</msg>
<status status="PASS" starttime="20201112 09:43:43.895" endtime="20201112 09:43:43.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.890" endtime="20201112 09:43:43.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.900" endtime="20201112 09:43:43.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:43.904" endtime="20201112 09:43:43.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.902" endtime="20201112 09:43:43.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.899" endtime="20201112 09:43:43.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.530" endtime="20201112 09:43:43.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.529" endtime="20201112 09:43:43.925"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.934" endtime="20201112 09:43:43.949"></status>
</kw>
<msg timestamp="20201112 09:43:43.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.932" endtime="20201112 09:43:43.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.951" endtime="20201112 09:43:43.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.953" endtime="20201112 09:43:43.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.930" endtime="20201112 09:43:43.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.927" endtime="20201112 09:43:43.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.963" endtime="20201112 09:43:44.250"></status>
</kw>
<msg timestamp="20201112 09:43:44.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022947208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022964, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:43.961" endtime="20201112 09:43:44.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022947208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022964, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:44.255" endtime="20201112 09:43:44.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.263" endtime="20201112 09:43:44.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.958" endtime="20201112 09:43:44.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.956" endtime="20201112 09:43:44.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:44.270" level="INFO">${RESULT} = [{'time': 0.022964, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6791999999998114e-05, 'source_diff': 1.6791999999998114e-05}, {'time': 0.022988333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:44.267" endtime="20201112 09:43:44.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:44.284" level="INFO">${ACCURACY} = {'diff': [1.6791999999998114e-05, 1.8014000000000224e-05, 1.7957999999998475e-05, 1.797299999999752e-05, 1.734700000000089e-05, 1.7957999999998475e-05, 1.736100000000046e-05, 1.6749999999999404e-05, 1...</msg>
<status status="PASS" starttime="20201112 09:43:44.271" endtime="20201112 09:43:44.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.289" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 09:43:44.288" endtime="20201112 09:43:44.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.291" level="INFO">VALUE: [1.6791999999998114e-05, 1.8014000000000224e-05, 1.7957999999998475e-05, 1.797299999999752e-05, 1.734700000000089e-05, 1.7957999999998475e-05, 1.736100000000046e-05, 1.6749999999999404e-05, 1.7973000000000988e-05, 1.6735999999999834e-05, 1.7985999999997615e-05, 1.736100000000046e-05, 1.6750000000002874e-05, 1.736100000000046e-05, 1.6735999999999834e-05, 1.734700000000089e-05, 1.615300000000139e-05, 1.737500000000003e-05, 1.6708000000000695e-05, 1.802700000000032e-05, 1.6764000000002444e-05, 1.612499999999878e-05, 1.7361999999999933e-05, 1.734700000000089e-05, 1.804099999999989e-05, 1.616699999999749e-05, 1.67629999999995e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.736100000000046e-05, 1.737500000000003e-05, 1.6749999999999404e-05, 1.795899999999795e-05, 1.736100000000046e-05, 1.7959000000001418e-05, 1.6749999999999404e-05, 1.7334000000000793e-05, 1.736100000000046e-05, 1.737500000000003e-05, 1.73889999999996e-05, 1.736100000000046e-05, 1.734700000000089e-05, 1.736100000000046e-05, 1.7971999999998045e-05, 1.736100000000046e-05, 1.736100000000046e-05, 1.737500000000003e-05, 1.793100000000228e-05]</msg>
<status status="PASS" starttime="20201112 09:43:44.290" endtime="20201112 09:43:44.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.285" endtime="20201112 09:43:44.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.295" endtime="20201112 09:43:44.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:44.299" endtime="20201112 09:43:44.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.297" endtime="20201112 09:43:44.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.293" endtime="20201112 09:43:44.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.926" endtime="20201112 09:43:44.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.925" endtime="20201112 09:43:44.320"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.329" endtime="20201112 09:43:44.344"></status>
</kw>
<msg timestamp="20201112 09:43:44.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.327" endtime="20201112 09:43:44.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.346" endtime="20201112 09:43:44.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.348" endtime="20201112 09:43:44.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.324" endtime="20201112 09:43:44.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.322" endtime="20201112 09:43:44.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.358" endtime="20201112 09:43:44.644"></status>
</kw>
<msg timestamp="20201112 09:43:44.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.356" endtime="20201112 09:43:44.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.648" endtime="20201112 09:43:44.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.657" endtime="20201112 09:43:44.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.354" endtime="20201112 09:43:44.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.352" endtime="20201112 09:43:44.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:44.665" level="INFO">${RESULT} = [{'time': 0.022598097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.855499999999996e-05, 'source_diff': 1.855499999999996e-05}, {'time': 0.022624014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:44.661" endtime="20201112 09:43:44.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:44.678" level="INFO">${ACCURACY} = {'diff': [1.855499999999996e-05, 1.8556000000002904e-05, 1.862499999999781e-05, 1.8486000000001584e-05, 1.9223000000002238e-05, 1.916700000000049e-05, 1.9763999999998505e-05, 1.9764000000001974e-05, 1...</msg>
<status status="PASS" starttime="20201112 09:43:44.666" endtime="20201112 09:43:44.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.683" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 09:43:44.682" endtime="20201112 09:43:44.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.686" level="INFO">VALUE: [1.855499999999996e-05, 1.8556000000002904e-05, 1.862499999999781e-05, 1.8486000000001584e-05, 1.9223000000002238e-05, 1.916700000000049e-05, 1.9763999999998505e-05, 1.9764000000001974e-05, 1.9764000000001974e-05, 1.8569999999999004e-05, 1.9763999999998505e-05, 1.8570000000002473e-05, 1.9194000000000155e-05, 1.8528000000000294e-05, 1.9763999999998505e-05, 1.9165999999997546e-05, 1.7972000000001515e-05, 1.918100000000006e-05, 1.916699999999702e-05, 1.918100000000006e-05, 1.856899999999953e-05, 1.9166000000001016e-05, 1.9166000000001016e-05, 1.916700000000049e-05, 1.9778000000001544e-05, 1.976299999999903e-05, 1.915300000000092e-05, 1.7958000000001945e-05, 1.916700000000049e-05, 1.9777999999998075e-05, 1.915300000000092e-05, 1.9792000000001114e-05, 1.9778000000001544e-05, 1.8598000000001613e-05, 1.9166000000001016e-05, 1.855499999999996e-05, 1.9777999999998075e-05, 1.8570000000002473e-05, 1.976299999999903e-05, 1.855499999999996e-05, 1.918100000000006e-05, 1.8569999999999004e-05, 1.918100000000006e-05, 1.9763999999998505e-05, 1.8570000000002473e-05, 1.9820000000000254e-05, 1.7943999999998905e-05, 1.9820000000000254e-05, 1.855499999999996e-05, 1.8541999999999864e-05]</msg>
<status status="PASS" starttime="20201112 09:43:44.684" endtime="20201112 09:43:44.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.679" endtime="20201112 09:43:44.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.690" endtime="20201112 09:43:44.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:44.693" endtime="20201112 09:43:44.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.692" endtime="20201112 09:43:44.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.688" endtime="20201112 09:43:44.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.321" endtime="20201112 09:43:44.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.320" endtime="20201112 09:43:44.714"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.723" endtime="20201112 09:43:44.740"></status>
</kw>
<msg timestamp="20201112 09:43:44.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.722" endtime="20201112 09:43:44.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.742" endtime="20201112 09:43:44.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.744" endtime="20201112 09:43:44.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.719" endtime="20201112 09:43:44.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.717" endtime="20201112 09:43:44.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.754" endtime="20201112 09:43:45.042"></status>
</kw>
<msg timestamp="20201112 09:43:45.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023037125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023058111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.752" endtime="20201112 09:43:45.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023037125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023058111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.046" endtime="20201112 09:43:45.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.055" endtime="20201112 09:43:45.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.749" endtime="20201112 09:43:45.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.747" endtime="20201112 09:43:45.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:45.062" level="INFO">${RESULT} = [{'time': 0.023058111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0986000000000615e-05, 'source_diff': 2.0986000000000615e-05}, {'time': 0.023089958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:45.058" endtime="20201112 09:43:45.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:45.076" level="INFO">${ACCURACY} = {'diff': [2.0986000000000615e-05, 2.1000000000000185e-05, 2.04029999999987e-05, 2.0334000000000324e-05, 2.159700000000167e-05, 2.095899999999748e-05, 2.0986000000000615e-05, 2.037499999999956e-05, 2.1...</msg>
<status status="PASS" starttime="20201112 09:43:45.063" endtime="20201112 09:43:45.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.080" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 09:43:45.079" endtime="20201112 09:43:45.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.083" level="INFO">VALUE: [2.0986000000000615e-05, 2.1000000000000185e-05, 2.04029999999987e-05, 2.0334000000000324e-05, 2.159700000000167e-05, 2.095899999999748e-05, 2.0986000000000615e-05, 2.037499999999956e-05, 2.1584000000001574e-05, 2.1000000000000185e-05, 2.0387999999999656e-05, 2.1584000000001574e-05, 2.036099999999999e-05, 2.0972000000001045e-05, 2.095900000000095e-05, 2.04029999999987e-05, 2.0957999999998006e-05, 2.15969999999982e-05, 2.038899999999913e-05, 2.033300000000085e-05, 2.2208000000002726e-05, 2.037499999999956e-05, 2.158299999999863e-05, 2.15830000000021e-05, 2.15830000000021e-05, 2.161100000000124e-05, 2.158299999999863e-05, 2.158299999999863e-05, 2.0958000000001475e-05, 2.0972000000001045e-05, 2.1000000000000185e-05, 2.159700000000167e-05, 2.037499999999956e-05, 2.159700000000167e-05, 2.156899999999906e-05, 2.158299999999863e-05, 2.0999999999996716e-05, 2.0986000000000615e-05, 2.037499999999956e-05, 2.03890000000026e-05, 2.15830000000021e-05, 2.03890000000026e-05, 2.044500000000088e-05, 2.15969999999982e-05, 2.0985999999997146e-05, 2.095900000000095e-05, 2.0972000000001045e-05, 2.216700000000002e-05, 2.036099999999999e-05, 2.158299999999863e-05]</msg>
<status status="PASS" starttime="20201112 09:43:45.081" endtime="20201112 09:43:45.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.076" endtime="20201112 09:43:45.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.087" endtime="20201112 09:43:45.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.090" endtime="20201112 09:43:45.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.089" endtime="20201112 09:43:45.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.085" endtime="20201112 09:43:45.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.715" endtime="20201112 09:43:45.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.714" endtime="20201112 09:43:45.111"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.120" endtime="20201112 09:43:45.136"></status>
</kw>
<msg timestamp="20201112 09:43:45.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.119" endtime="20201112 09:43:45.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.137" endtime="20201112 09:43:45.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.140" endtime="20201112 09:43:45.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.116" endtime="20201112 09:43:45.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.114" endtime="20201112 09:43:45.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.150" endtime="20201112 09:43:45.438"></status>
</kw>
<msg timestamp="20201112 09:43:45.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022850208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022873, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:45.148" endtime="20201112 09:43:45.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022850208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022873, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:45.442" endtime="20201112 09:43:45.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.451" endtime="20201112 09:43:45.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.145" endtime="20201112 09:43:45.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.143" endtime="20201112 09:43:45.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:45.458" level="INFO">${RESULT} = [{'time': 0.022873, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2792000000000645e-05, 'source_diff': 2.2792000000000645e-05}, {'time': 0.022908847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:45.454" endtime="20201112 09:43:45.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:45.472" level="INFO">${ACCURACY} = {'diff': [2.2792000000000645e-05, 2.3999999999999716e-05, 2.2792000000000645e-05, 2.34030000000017e-05, 2.2806000000000215e-05, 2.34030000000017e-05, 2.398700000000309e-05, 2.2804999999997272e-05, 2.2...</msg>
<status status="PASS" starttime="20201112 09:43:45.459" endtime="20201112 09:43:45.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.476" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 09:43:45.475" endtime="20201112 09:43:45.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.479" level="INFO">VALUE: [2.2792000000000645e-05, 2.3999999999999716e-05, 2.2792000000000645e-05, 2.34030000000017e-05, 2.2806000000000215e-05, 2.34030000000017e-05, 2.398700000000309e-05, 2.2804999999997272e-05, 2.2778000000001075e-05, 2.3401999999998757e-05, 2.338899999999866e-05, 2.344500000000041e-05, 2.280500000000074e-05, 2.219499999999916e-05, 2.337499999999909e-05, 2.279100000000117e-05, 2.2180000000000116e-05, 2.3387999999999187e-05, 2.2806000000000215e-05, 2.2778000000001075e-05, 2.3999999999999716e-05, 2.3986000000000146e-05, 2.219499999999916e-05, 2.338900000000213e-05, 2.2249999999997966e-05, 2.2193999999999686e-05, 2.3986000000000146e-05, 2.2207999999999256e-05, 2.2166000000000546e-05, 2.2750000000001935e-05, 2.338899999999866e-05, 2.279100000000117e-05, 2.341700000000127e-05, 2.341700000000127e-05, 2.4027999999998856e-05, 2.213900000000088e-05, 2.2778000000001075e-05, 2.3999999999999716e-05, 2.337500000000256e-05, 2.402700000000285e-05, 2.2792000000000645e-05, 2.338900000000213e-05, 2.4000000000003185e-05, 2.338899999999866e-05, 2.4055999999997996e-05, 2.2790999999997702e-05, 2.283299999999988e-05, 2.4012999999999812e-05, 2.340299999999823e-05, 2.2792000000000645e-05]</msg>
<status status="PASS" starttime="20201112 09:43:45.478" endtime="20201112 09:43:45.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.473" endtime="20201112 09:43:45.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.483" endtime="20201112 09:43:45.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.486" endtime="20201112 09:43:45.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.485" endtime="20201112 09:43:45.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.481" endtime="20201112 09:43:45.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.112" endtime="20201112 09:43:45.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.112" endtime="20201112 09:43:45.507"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.516" endtime="20201112 09:43:45.532"></status>
</kw>
<msg timestamp="20201112 09:43:45.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.515" endtime="20201112 09:43:45.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.533" endtime="20201112 09:43:45.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.536" endtime="20201112 09:43:45.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.512" endtime="20201112 09:43:45.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.510" endtime="20201112 09:43:45.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.545" endtime="20201112 09:43:45.832"></status>
</kw>
<msg timestamp="20201112 09:43:45.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.544" endtime="20201112 09:43:45.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.837" endtime="20201112 09:43:45.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.845" endtime="20201112 09:43:45.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.541" endtime="20201112 09:43:45.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.539" endtime="20201112 09:43:45.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:45.852" level="INFO">${RESULT} = [{'time': 0.022478639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4542000000002395e-05, 'source_diff': 2.4542000000002395e-05}, {'time': 0.022509042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:45.849" endtime="20201112 09:43:45.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:45.866" level="INFO">${ACCURACY} = {'diff': [2.4542000000002395e-05, 2.52230000000013e-05, 2.519499999999869e-05, 2.5818999999999842e-05, 2.461100000000077e-05, 2.5805999999999746e-05, 2.45970000000012e-05, 2.4513999999999786e-05, 2.52...</msg>
<status status="PASS" starttime="20201112 09:43:45.853" endtime="20201112 09:43:45.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.871" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 09:43:45.870" endtime="20201112 09:43:45.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.873" level="INFO">VALUE: [2.4542000000002395e-05, 2.52230000000013e-05, 2.519499999999869e-05, 2.5818999999999842e-05, 2.461100000000077e-05, 2.5805999999999746e-05, 2.45970000000012e-05, 2.4513999999999786e-05, 2.5276999999997163e-05, 2.520900000000173e-05, 2.522299999999783e-05, 2.52230000000013e-05, 2.5193999999999217e-05, 2.5819999999999316e-05, 2.3999999999999716e-05, 2.5805000000000272e-05, 2.465299999999948e-05, 2.462500000000034e-05, 2.4014000000002755e-05, 2.45970000000012e-05, 2.5818999999999842e-05, 2.5221999999998357e-05, 2.5819999999999316e-05, 2.3999999999999716e-05, 2.5207999999998787e-05, 2.45970000000012e-05, 2.5221999999998357e-05, 2.5208000000002256e-05, 2.52230000000013e-05, 2.5222000000001826e-05, 2.5250000000000966e-05, 2.5222000000001826e-05, 2.5193999999999217e-05, 2.5207999999998787e-05, 2.461100000000077e-05, 2.5805999999999746e-05, 2.5818999999999842e-05, 2.461100000000077e-05, 2.463899999999991e-05, 2.5792000000000176e-05, 2.520899999999826e-05, 2.4028000000002325e-05, 2.45970000000012e-05, 2.461100000000077e-05, 2.519499999999869e-05, 2.520900000000173e-05, 2.3999999999999716e-05, 2.5818999999999842e-05, 2.4598000000000675e-05, 2.462500000000034e-05]</msg>
<status status="PASS" starttime="20201112 09:43:45.872" endtime="20201112 09:43:45.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.867" endtime="20201112 09:43:45.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.877" endtime="20201112 09:43:45.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.881" endtime="20201112 09:43:45.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.879" endtime="20201112 09:43:45.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.875" endtime="20201112 09:43:45.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.508" endtime="20201112 09:43:45.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.508" endtime="20201112 09:43:45.902"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.911" endtime="20201112 09:43:45.927"></status>
</kw>
<msg timestamp="20201112 09:43:45.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.909" endtime="20201112 09:43:45.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.929" endtime="20201112 09:43:45.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.931" endtime="20201112 09:43:45.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.906" endtime="20201112 09:43:45.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.904" endtime="20201112 09:43:45.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.941" endtime="20201112 09:43:46.227"></status>
</kw>
<msg timestamp="20201112 09:43:46.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023154458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023180792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.939" endtime="20201112 09:43:46.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023154458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023180792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.232" endtime="20201112 09:43:46.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.240" endtime="20201112 09:43:46.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.937" endtime="20201112 09:43:46.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.935" endtime="20201112 09:43:46.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:46.247" level="INFO">${RESULT} = [{'time': 0.023180792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6333999999999386e-05, 'source_diff': 2.6333999999999386e-05}, {'time': 0.023218458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:46.244" endtime="20201112 09:43:46.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:46.261" level="INFO">${ACCURACY} = {'diff': [2.6333999999999386e-05, 2.7638999999999442e-05, 2.7013999999998817e-05, 2.7554999999998553e-05, 2.7027999999998387e-05, 2.7624999999999872e-05, 2.7013999999998817e-05, 2.64170000000008e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:46.248" endtime="20201112 09:43:46.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.266" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 09:43:46.265" endtime="20201112 09:43:46.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.269" level="INFO">VALUE: [2.6333999999999386e-05, 2.7638999999999442e-05, 2.7013999999998817e-05, 2.7554999999998553e-05, 2.7027999999998387e-05, 2.7624999999999872e-05, 2.7013999999998817e-05, 2.64170000000008e-05, 2.7012999999999343e-05, 2.7624999999999872e-05, 2.6458000000000037e-05, 2.6999999999999247e-05, 2.7013999999998817e-05, 2.8235999999997458e-05, 2.7027999999998387e-05, 2.8250000000000497e-05, 2.8236000000000927e-05, 2.823699999999693e-05, 2.6402000000001757e-05, 2.647300000000255e-05, 2.6416000000001327e-05, 2.7624999999999872e-05, 2.8236000000000927e-05, 2.7014000000002286e-05, 2.7013999999998817e-05, 2.643100000000037e-05, 2.7040999999998483e-05, 2.636100000000252e-05, 2.643100000000037e-05, 2.6415999999997858e-05, 2.8236000000000927e-05, 2.763900000000291e-05, 2.7014000000002286e-05, 2.640300000000123e-05, 2.7028000000001856e-05, 2.644499999999994e-05, 2.763900000000291e-05, 2.7014000000002286e-05, 2.64170000000008e-05, 2.7070000000000566e-05, 2.7013999999998817e-05, 2.6346999999999482e-05, 2.82370000000004e-05, 2.8249999999997027e-05, 2.7638999999999442e-05, 2.7624999999999872e-05, 2.644499999999994e-05, 2.7624999999999872e-05, 2.6416000000001327e-05, 2.7611000000000302e-05]</msg>
<status status="PASS" starttime="20201112 09:43:46.267" endtime="20201112 09:43:46.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.262" endtime="20201112 09:43:46.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.272" endtime="20201112 09:43:46.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:46.276" endtime="20201112 09:43:46.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.274" endtime="20201112 09:43:46.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.271" endtime="20201112 09:43:46.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.903" endtime="20201112 09:43:46.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.902" endtime="20201112 09:43:46.297"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.306" endtime="20201112 09:43:46.321"></status>
</kw>
<msg timestamp="20201112 09:43:46.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.304" endtime="20201112 09:43:46.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.323" endtime="20201112 09:43:46.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.325" endtime="20201112 09:43:46.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.302" endtime="20201112 09:43:46.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.299" endtime="20201112 09:43:46.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.335" endtime="20201112 09:43:46.622"></status>
</kw>
<msg timestamp="20201112 09:43:46.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022630361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.333" endtime="20201112 09:43:46.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022630361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.626" endtime="20201112 09:43:46.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.635" endtime="20201112 09:43:46.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.330" endtime="20201112 09:43:46.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.328" endtime="20201112 09:43:46.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:46.642" level="INFO">${RESULT} = [{'time': 0.022659778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9416999999996862e-05, 'source_diff': 2.9416999999996862e-05}, {'time': 0.022694167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:46.638" endtime="20201112 09:43:46.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:46.656" level="INFO">${ACCURACY} = {'diff': [2.9416999999996862e-05, 2.8861000000001552e-05, 2.8848000000001456e-05, 2.8236000000000927e-05, 2.8834000000001886e-05, 3.0028000000001387e-05, 2.94309999999999e-05, 2.8832999999998943e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:46.643" endtime="20201112 09:43:46.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.661" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 09:43:46.660" endtime="20201112 09:43:46.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.663" level="INFO">VALUE: [2.9416999999996862e-05, 2.8861000000001552e-05, 2.8848000000001456e-05, 2.8236000000000927e-05, 2.8834000000001886e-05, 3.0028000000001387e-05, 2.94309999999999e-05, 2.8832999999998943e-05, 2.944499999999947e-05, 2.8818999999999373e-05, 2.8221999999997888e-05, 2.8236000000000927e-05, 2.8860999999998083e-05, 2.8832999999998943e-05, 2.8290999999999733e-05, 2.94309999999999e-05, 2.8832999999998943e-05, 2.8846999999998513e-05, 2.8832999999998943e-05, 2.8818999999999373e-05, 2.8832999999998943e-05, 2.8832999999998943e-05, 2.8791000000000233e-05, 2.8250000000000497e-05, 3.0042000000000957e-05, 2.8236000000000927e-05, 2.9485999999998708e-05, 2.942999999999696e-05, 2.9457999999999568e-05, 2.9430000000000428e-05, 2.9443999999999998e-05, 2.9443999999999998e-05, 2.9417000000000332e-05, 3.0055999999997057e-05, 2.9443999999999998e-05, 2.9471999999999138e-05, 2.94309999999999e-05, 3.0042000000000957e-05, 3.0055000000001053e-05, 2.8875000000001122e-05, 3.0054999999997584e-05, 3.0097000000003232e-05, 2.8791000000000233e-05, 3.0096999999999763e-05, 3.0070000000000097e-05, 2.9486000000002177e-05, 2.8834000000001886e-05, 2.8236000000000927e-05, 2.8847000000001982e-05, 2.8236000000000927e-05]</msg>
<status status="PASS" starttime="20201112 09:43:46.662" endtime="20201112 09:43:46.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.657" endtime="20201112 09:43:46.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.667" endtime="20201112 09:43:46.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:46.671" endtime="20201112 09:43:46.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.669" endtime="20201112 09:43:46.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.665" endtime="20201112 09:43:46.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.298" endtime="20201112 09:43:46.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.297" endtime="20201112 09:43:46.692"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.701" endtime="20201112 09:43:46.716"></status>
</kw>
<msg timestamp="20201112 09:43:46.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.699" endtime="20201112 09:43:46.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.718" endtime="20201112 09:43:46.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.720" endtime="20201112 09:43:46.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.696" endtime="20201112 09:43:46.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.694" endtime="20201112 09:43:46.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.730" endtime="20201112 09:43:47.018"></status>
</kw>
<msg timestamp="20201112 09:43:47.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022817028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022848875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.728" endtime="20201112 09:43:47.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022817028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022848875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.022" endtime="20201112 09:43:47.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.031" endtime="20201112 09:43:47.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.725" endtime="20201112 09:43:47.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.724" endtime="20201112 09:43:47.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:47.038" level="INFO">${RESULT} = [{'time': 0.022848875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.184700000000151e-05, 'source_diff': 3.184700000000151e-05}, {'time': 0.022890931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:47.035" endtime="20201112 09:43:47.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:47.052" level="INFO">${ACCURACY} = {'diff': [3.184700000000151e-05, 3.187500000000065e-05, 3.058300000000069e-05, 3.063900000000244e-05, 3.066699999999811e-05, 3.183399999999795e-05, 3.065299999999854e-05, 3.186100000000108e-05, 3.1847...</msg>
<status status="PASS" starttime="20201112 09:43:47.039" endtime="20201112 09:43:47.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.057" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 09:43:47.056" endtime="20201112 09:43:47.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.059" level="INFO">VALUE: [3.184700000000151e-05, 3.187500000000065e-05, 3.058300000000069e-05, 3.063900000000244e-05, 3.066699999999811e-05, 3.183399999999795e-05, 3.065299999999854e-05, 3.186100000000108e-05, 3.184700000000151e-05, 3.065199999999907e-05, 3.1818999999998904e-05, 3.063900000000244e-05, 3.125000000000003e-05, 3.123699999999993e-05, 2.9958000000000068e-05, 3.1846999999998044e-05, 3.125000000000003e-05, 3.1846999999998044e-05, 3.119500000000122e-05, 3.063899999999897e-05, 3.123600000000046e-05, 3.066600000000211e-05, 3.183400000000142e-05, 3.063899999999897e-05, 3.183300000000194e-05, 3.193099999999893e-05, 3.06379999999995e-05, 3.123600000000046e-05, 3.188899999999675e-05, 3.0040999999998014e-05, 3.06249999999994e-05, 3.187499999999718e-05, 3.125000000000003e-05, 3.1263000000000124e-05, 3.1860999999997613e-05, 3.125000000000003e-05, 3.177799999999967e-05, 3.0042000000000957e-05, 3.063899999999897e-05, 3.12639999999996e-05, 3.123699999999993e-05, 3.063900000000244e-05, 3.0070000000000097e-05, 3.183400000000142e-05, 3.125000000000003e-05, 3.063900000000244e-05, 3.125000000000003e-05, 3.193099999999893e-05, 3.063899999999897e-05, 3.183400000000142e-05]</msg>
<status status="PASS" starttime="20201112 09:43:47.058" endtime="20201112 09:43:47.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.053" endtime="20201112 09:43:47.061"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.063" endtime="20201112 09:43:47.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:47.067" endtime="20201112 09:43:47.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.065" endtime="20201112 09:43:47.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.061" endtime="20201112 09:43:47.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.693" endtime="20201112 09:43:47.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.692" endtime="20201112 09:43:47.087"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.096" endtime="20201112 09:43:47.113"></status>
</kw>
<msg timestamp="20201112 09:43:47.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.095" endtime="20201112 09:43:47.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.114" endtime="20201112 09:43:47.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.117" endtime="20201112 09:43:47.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.092" endtime="20201112 09:43:47.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.090" endtime="20201112 09:43:47.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.126" endtime="20201112 09:43:47.413"></status>
</kw>
<msg timestamp="20201112 09:43:47.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023009181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023042861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.125" endtime="20201112 09:43:47.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023009181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023042861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.417" endtime="20201112 09:43:47.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.426" endtime="20201112 09:43:47.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.122" endtime="20201112 09:43:47.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.120" endtime="20201112 09:43:47.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:47.433" level="INFO">${RESULT} = [{'time': 0.023042861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.368000000000121e-05, 'source_diff': 3.368000000000121e-05}, {'time': 0.023090639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:47.430" endtime="20201112 09:43:47.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:47.447" level="INFO">${ACCURACY} = {'diff': [3.368000000000121e-05, 3.3082999999999724e-05, 3.363900000000197e-05, 3.366699999999764e-05, 3.372199999999992e-05, 3.3069000000000154e-05, 3.365300000000154e-05, 3.241699999999986e-05, 3.36...</msg>
<status status="PASS" starttime="20201112 09:43:47.434" endtime="20201112 09:43:47.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.452" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 09:43:47.451" endtime="20201112 09:43:47.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.454" level="INFO">VALUE: [3.368000000000121e-05, 3.3082999999999724e-05, 3.363900000000197e-05, 3.366699999999764e-05, 3.372199999999992e-05, 3.3069000000000154e-05, 3.365300000000154e-05, 3.241699999999986e-05, 3.368100000000068e-05, 3.243099999999943e-05, 3.366599999999817e-05, 3.24579999999991e-05, 3.245899999999857e-05, 3.3069000000000154e-05, 3.369400000000078e-05, 3.247199999999867e-05, 3.306999999999963e-05, 3.368100000000068e-05, 3.369399999999731e-05, 3.241699999999986e-05, 3.3082999999999724e-05, 3.248700000000118e-05, 3.305600000000006e-05, 3.365200000000207e-05, 3.365300000000154e-05, 3.3096999999999294e-05, 3.247199999999867e-05, 3.245900000000204e-05, 3.305600000000006e-05, 3.243099999999943e-05, 3.3068999999996684e-05, 3.368000000000121e-05, 3.366700000000111e-05, 3.2526999999997475e-05, 3.24579999999991e-05, 3.367999999999774e-05, 3.2513000000001374e-05, 3.3082999999999724e-05, 3.24579999999991e-05, 3.247199999999867e-05, 3.3638999999998503e-05, 3.366600000000164e-05, 3.306999999999963e-05, 3.2444000000003e-05, 3.366700000000111e-05, 3.365300000000154e-05, 3.301399999999788e-05, 3.366700000000111e-05, 3.306999999999963e-05, 3.367999999999774e-05]</msg>
<status status="PASS" starttime="20201112 09:43:47.453" endtime="20201112 09:43:47.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.448" endtime="20201112 09:43:47.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.458" endtime="20201112 09:43:47.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:47.462" endtime="20201112 09:43:47.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.460" endtime="20201112 09:43:47.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.456" endtime="20201112 09:43:47.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.088" endtime="20201112 09:43:47.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.088" endtime="20201112 09:43:47.482"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.492" endtime="20201112 09:43:47.508"></status>
</kw>
<msg timestamp="20201112 09:43:47.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.490" endtime="20201112 09:43:47.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.510" endtime="20201112 09:43:47.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.512" endtime="20201112 09:43:47.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.487" endtime="20201112 09:43:47.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.485" endtime="20201112 09:43:47.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.522" endtime="20201112 09:43:47.810"></status>
</kw>
<msg timestamp="20201112 09:43:47.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0228005, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:47.520" endtime="20201112 09:43:47.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0228005, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:47.814" endtime="20201112 09:43:47.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.822" endtime="20201112 09:43:47.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.517" endtime="20201112 09:43:47.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.516" endtime="20201112 09:43:47.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:47.829" level="INFO">${RESULT} = [{'time': 0.022835375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4875000000000184e-05, 'source_diff': 3.4875000000000184e-05}, {'time': 0.022881319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:47.825" endtime="20201112 09:43:47.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:47.842" level="INFO">${ACCURACY} = {'diff': [3.4875000000000184e-05, 3.6027000000000975e-05, 3.547200000000167e-05, 3.490199999999985e-05, 3.494400000000203e-05, 3.42779999999987e-05, 3.547200000000167e-05, 3.4888999999999754e-05, 3.42...</msg>
<status status="PASS" starttime="20201112 09:43:47.830" endtime="20201112 09:43:47.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.847" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 09:43:47.846" endtime="20201112 09:43:47.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.849" level="INFO">VALUE: [3.4875000000000184e-05, 3.6027000000000975e-05, 3.547200000000167e-05, 3.490199999999985e-05, 3.494400000000203e-05, 3.42779999999987e-05, 3.547200000000167e-05, 3.4888999999999754e-05, 3.42779999999987e-05, 3.479199999999877e-05, 3.431999999999741e-05, 3.550000000000081e-05, 3.606999999999916e-05, 3.547200000000167e-05, 3.547299999999767e-05, 3.551400000000038e-05, 3.491699999999889e-05, 3.4875000000000184e-05, 3.6097000000002294e-05, 3.611199999999787e-05, 3.42779999999987e-05, 3.4902999999999323e-05, 3.4888999999999754e-05, 3.4291000000002264e-05, 3.606999999999916e-05, 3.6083000000002724e-05, 3.4276999999999225e-05, 3.4875000000000184e-05, 3.54589999999981e-05, 3.6082999999999255e-05, 3.548700000000071e-05, 3.549999999999734e-05, 3.547200000000167e-05, 3.550000000000081e-05, 3.6082999999999255e-05, 3.4875000000000184e-05, 3.547200000000167e-05, 3.54719999999982e-05, 3.427800000000217e-05, 3.6082999999999255e-05, 3.426399999999913e-05, 3.547300000000114e-05, 3.60840000000022e-05, 3.548699999999724e-05, 3.426399999999913e-05, 3.4846999999997574e-05, 3.4875000000000184e-05, 3.548600000000124e-05, 3.423599999999999e-05, 3.609800000000177e-05]</msg>
<status status="PASS" starttime="20201112 09:43:47.848" endtime="20201112 09:43:47.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.843" endtime="20201112 09:43:47.854"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.857" endtime="20201112 09:43:47.858"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:47.860" endtime="20201112 09:43:47.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.859" endtime="20201112 09:43:47.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.855" endtime="20201112 09:43:47.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.483" endtime="20201112 09:43:47.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.483" endtime="20201112 09:43:47.881"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.890" endtime="20201112 09:43:47.909"></status>
</kw>
<msg timestamp="20201112 09:43:47.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.888" endtime="20201112 09:43:47.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.912" endtime="20201112 09:43:47.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.917" endtime="20201112 09:43:47.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.886" endtime="20201112 09:43:47.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.884" endtime="20201112 09:43:47.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.938" endtime="20201112 09:43:48.232"></status>
</kw>
<msg timestamp="20201112 09:43:48.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022650458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022687139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.933" endtime="20201112 09:43:48.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022650458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022687139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.237" endtime="20201112 09:43:48.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.245" endtime="20201112 09:43:48.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.927" endtime="20201112 09:43:48.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.923" endtime="20201112 09:43:48.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:48.252" level="INFO">${RESULT} = [{'time': 0.022687139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6681000000000213e-05, 'source_diff': 3.6681000000000213e-05}, {'time': 0.022729028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:48.248" endtime="20201112 09:43:48.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:48.265" level="INFO">${ACCURACY} = {'diff': [3.6681000000000213e-05, 3.6624999999998464e-05, 3.7832999999997535e-05, 3.6082999999999255e-05, 3.6667000000000644e-05, 3.72780000000017e-05, 3.6082999999999255e-05, 3.791599999999895e-05, 3...</msg>
<status status="PASS" starttime="20201112 09:43:48.253" endtime="20201112 09:43:48.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.270" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 09:43:48.269" endtime="20201112 09:43:48.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.272" level="INFO">VALUE: [3.6681000000000213e-05, 3.6624999999998464e-05, 3.7832999999997535e-05, 3.6082999999999255e-05, 3.6667000000000644e-05, 3.72780000000017e-05, 3.6082999999999255e-05, 3.791599999999895e-05, 3.668000000000074e-05, 3.791600000000242e-05, 3.6681000000000213e-05, 3.669400000000031e-05, 3.729200000000127e-05, 3.667999999999727e-05, 3.669400000000031e-05, 3.727799999999823e-05, 3.7291000000001795e-05, 3.6096999999998824e-05, 3.60979999999983e-05, 3.6082999999999255e-05, 3.6096999999998824e-05, 3.727799999999823e-05, 3.7291000000001795e-05, 3.606999999999916e-05, 3.726399999999866e-05, 3.6681000000000213e-05, 3.730600000000084e-05, 3.669400000000031e-05, 3.6111000000001864e-05, 3.72919999999978e-05, 3.7291000000001795e-05, 3.669400000000031e-05, 3.7319000000000935e-05, 3.669499999999978e-05, 3.788799999999981e-05, 3.72919999999978e-05, 3.7305000000001365e-05, 3.674999999999859e-05, 3.7874999999999714e-05, 3.670899999999935e-05, 3.7916999999998424e-05, 3.66520000000016e-05, 3.7902999999998854e-05, 3.7888999999999284e-05, 3.7291000000001795e-05, 3.7903000000002324e-05, 3.668000000000074e-05, 3.733399999999998e-05, 3.670799999999988e-05, 3.7290999999998325e-05]</msg>
<status status="PASS" starttime="20201112 09:43:48.271" endtime="20201112 09:43:48.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.266" endtime="20201112 09:43:48.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.276" endtime="20201112 09:43:48.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:48.279" endtime="20201112 09:43:48.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.278" endtime="20201112 09:43:48.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.274" endtime="20201112 09:43:48.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.882" endtime="20201112 09:43:48.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.881" endtime="20201112 09:43:48.300"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.309" endtime="20201112 09:43:48.325"></status>
</kw>
<msg timestamp="20201112 09:43:48.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.307" endtime="20201112 09:43:48.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.327" endtime="20201112 09:43:48.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.329" endtime="20201112 09:43:48.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.305" endtime="20201112 09:43:48.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.303" endtime="20201112 09:43:48.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.338" endtime="20201112 09:43:48.627"></status>
</kw>
<msg timestamp="20201112 09:43:48.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022142847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022181972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.337" endtime="20201112 09:43:48.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022142847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022181972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.632" endtime="20201112 09:43:48.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.640" endtime="20201112 09:43:48.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.334" endtime="20201112 09:43:48.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.332" endtime="20201112 09:43:48.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:48.647" level="INFO">${RESULT} = [{'time': 0.022181972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9125000000000965e-05, 'source_diff': 3.9125000000000965e-05}, {'time': 0.02223375, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:43:48.643" endtime="20201112 09:43:48.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:48.660" level="INFO">${ACCURACY} = {'diff': [3.9125000000000965e-05, 3.9096999999998355e-05, 3.970799999999941e-05, 3.9096999999998355e-05, 3.972200000000245e-05, 3.849999999999687e-05, 3.7902999999998854e-05, 3.969399999999984e-05, 3....</msg>
<status status="PASS" starttime="20201112 09:43:48.648" endtime="20201112 09:43:48.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.664" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 09:43:48.663" endtime="20201112 09:43:48.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.667" level="INFO">VALUE: [3.9125000000000965e-05, 3.9096999999998355e-05, 3.970799999999941e-05, 3.9096999999998355e-05, 3.972200000000245e-05, 3.849999999999687e-05, 3.7902999999998854e-05, 3.969399999999984e-05, 3.850000000000034e-05, 3.9097000000001825e-05, 3.909799999999783e-05, 3.973599999999855e-05, 3.851399999999991e-05, 3.9124999999997495e-05, 3.970799999999941e-05, 3.909799999999783e-05, 3.848600000000077e-05, 3.851399999999991e-05, 3.8445000000001534e-05, 3.8583000000001755e-05, 3.852800000000295e-05, 3.9111000000001395e-05, 3.851399999999991e-05, 3.9111000000001395e-05, 3.7917000000001894e-05, 3.9653000000000604e-05, 3.84859999999973e-05, 3.9166999999999674e-05, 3.854199999999905e-05, 3.9096999999998355e-05, 3.84859999999973e-05, 3.9096999999998355e-05, 3.850000000000034e-05, 3.970799999999941e-05, 3.9124999999997495e-05, 3.973600000000202e-05, 3.972199999999898e-05, 3.9138999999997065e-05, 3.969399999999984e-05, 3.850000000000034e-05, 3.852799999999948e-05, 3.9083000000002255e-05, 3.970800000000288e-05, 3.850000000000034e-05, 3.8513000000000436e-05, 3.9139000000000534e-05, 3.909799999999783e-05, 4.0319000000000466e-05, 3.851399999999991e-05, 3.974999999999812e-05]</msg>
<status status="PASS" starttime="20201112 09:43:48.665" endtime="20201112 09:43:48.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.661" endtime="20201112 09:43:48.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.670" endtime="20201112 09:43:48.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:48.674" endtime="20201112 09:43:48.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.672" endtime="20201112 09:43:48.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.669" endtime="20201112 09:43:48.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.301" endtime="20201112 09:43:48.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.301" endtime="20201112 09:43:48.695"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.704" endtime="20201112 09:43:48.720"></status>
</kw>
<msg timestamp="20201112 09:43:48.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.702" endtime="20201112 09:43:48.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.722" endtime="20201112 09:43:48.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.724" endtime="20201112 09:43:48.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.699" endtime="20201112 09:43:48.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.697" endtime="20201112 09:43:48.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.733" endtime="20201112 09:43:49.019"></status>
</kw>
<msg timestamp="20201112 09:43:49.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022592653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.732" endtime="20201112 09:43:49.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022551097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022592653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.024" endtime="20201112 09:43:49.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.032" endtime="20201112 09:43:49.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.729" endtime="20201112 09:43:49.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.727" endtime="20201112 09:43:49.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:49.039" level="INFO">${RESULT} = [{'time': 0.022592653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.155600000000162e-05, 'source_diff': 4.155600000000162e-05}, {'time': 0.022642556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:49.035" endtime="20201112 09:43:49.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:49.052" level="INFO">${ACCURACY} = {'diff': [4.155600000000162e-05, 4.0945000000000564e-05, 4.090199999999891e-05, 4.1568999999998246e-05, 4.0917000000001424e-05, 4.0930999999997525e-05, 4.095800000000066e-05, 4.0917000000001424e-05, 4...</msg>
<status status="PASS" starttime="20201112 09:43:49.040" endtime="20201112 09:43:49.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.057" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 09:43:49.056" endtime="20201112 09:43:49.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.059" level="INFO">VALUE: [4.155600000000162e-05, 4.0945000000000564e-05, 4.090199999999891e-05, 4.1568999999998246e-05, 4.0917000000001424e-05, 4.0930999999997525e-05, 4.095800000000066e-05, 4.0917000000001424e-05, 4.091599999999848e-05, 4.0374999999998745e-05, 4.091600000000195e-05, 4.1569000000001716e-05, 4.0917000000001424e-05, 4.2096999999997886e-05, 4.155599999999815e-05, 4.0902999999998385e-05, 4.2125000000000495e-05, 4.0917000000001424e-05, 4.093000000000152e-05, 4.0931000000000994e-05, 4.0319000000000466e-05, 4.151399999999944e-05, 4.1526999999999537e-05, 4.1526999999999537e-05, 4.152799999999901e-05, 4.093000000000152e-05, 4.0333000000000035e-05, 4.149999999999987e-05, 4.14860000000003e-05, 4.158400000000076e-05, 4.0917000000001424e-05, 4.031999999999994e-05, 4.030600000000037e-05, 4.0319000000000466e-05, 4.0917000000001424e-05, 4.213800000000059e-05, 4.151399999999944e-05, 4.151399999999944e-05, 4.091599999999848e-05, 4.154199999999858e-05, 4.2082999999998316e-05, 4.2125000000000495e-05, 4.2110999999997456e-05, 4.0945000000000564e-05, 4.091600000000195e-05, 4.151399999999944e-05, 4.091600000000195e-05, 4.0903000000001855e-05, 4.2125000000000495e-05, 4.0917000000001424e-05]</msg>
<status status="PASS" starttime="20201112 09:43:49.058" endtime="20201112 09:43:49.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.053" endtime="20201112 09:43:49.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.063" endtime="20201112 09:43:49.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:49.066" endtime="20201112 09:43:49.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.064" endtime="20201112 09:43:49.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.061" endtime="20201112 09:43:49.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.696" endtime="20201112 09:43:49.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.695" endtime="20201112 09:43:49.087"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.095" endtime="20201112 09:43:49.112"></status>
</kw>
<msg timestamp="20201112 09:43:49.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.094" endtime="20201112 09:43:49.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.113" endtime="20201112 09:43:49.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.116" endtime="20201112 09:43:49.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.091" endtime="20201112 09:43:49.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.089" endtime="20201112 09:43:49.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.125" endtime="20201112 09:43:49.412"></status>
</kw>
<msg timestamp="20201112 09:43:49.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022044111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:49.123" endtime="20201112 09:43:49.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022044111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:49.416" endtime="20201112 09:43:49.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.425" endtime="20201112 09:43:49.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.121" endtime="20201112 09:43:49.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.119" endtime="20201112 09:43:49.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:49.431" level="INFO">${RESULT} = [{'time': 0.0220875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3388999999997846e-05, 'source_diff': 4.3388999999997846e-05}, {'time': 0.022139653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:49.428" endtime="20201112 09:43:49.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:49.445" level="INFO">${ACCURACY} = {'diff': [4.3388999999997846e-05, 4.3346999999999136e-05, 4.3318999999999996e-05, 4.273599999999808e-05, 4.334800000000208e-05, 4.3346999999999136e-05, 4.272200000000198e-05, 4.2804999999999926e-05, 4...</msg>
<status status="PASS" starttime="20201112 09:43:49.432" endtime="20201112 09:43:49.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.449" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 09:43:49.448" endtime="20201112 09:43:49.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.452" level="INFO">VALUE: [4.3388999999997846e-05, 4.3346999999999136e-05, 4.3318999999999996e-05, 4.273599999999808e-05, 4.334800000000208e-05, 4.3346999999999136e-05, 4.272200000000198e-05, 4.2804999999999926e-05, 4.327800000000076e-05, 4.276399999999722e-05, 4.3931000000000525e-05, 4.394399999999715e-05, 4.395800000000019e-05, 4.2125000000000495e-05, 4.3888999999998346e-05, 4.333399999999904e-05, 4.272200000000198e-05, 4.3945000000000095e-05, 4.329200000000033e-05, 4.3389000000001315e-05, 4.397199999999976e-05, 4.272199999999851e-05, 4.332000000000294e-05, 4.3346999999999136e-05, 4.3332999999999566e-05, 4.331999999999947e-05, 4.3874999999998776e-05, 4.3332999999999566e-05, 4.395800000000019e-05, 4.269399999999937e-05, 4.3945000000000095e-05, 4.272200000000198e-05, 4.3332999999999566e-05, 4.2125000000000495e-05, 4.273599999999808e-05, 4.3903000000001385e-05, 4.394400000000062e-05, 4.3332999999999566e-05, 4.273600000000155e-05, 4.3931000000000525e-05, 4.2111000000000925e-05, 4.3332999999999566e-05, 4.3346999999999136e-05, 4.334799999999861e-05, 4.393000000000105e-05, 4.3361000000002176e-05, 4.3347000000002606e-05, 4.272199999999851e-05, 4.3931000000000525e-05, 4.394400000000062e-05]</msg>
<status status="PASS" starttime="20201112 09:43:49.450" endtime="20201112 09:43:49.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.446" endtime="20201112 09:43:49.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.455" endtime="20201112 09:43:49.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:49.459" endtime="20201112 09:43:49.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.457" endtime="20201112 09:43:49.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.454" endtime="20201112 09:43:49.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.087" endtime="20201112 09:43:49.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.087" endtime="20201112 09:43:49.480"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.488" endtime="20201112 09:43:49.505"></status>
</kw>
<msg timestamp="20201112 09:43:49.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.486" endtime="20201112 09:43:49.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.506" endtime="20201112 09:43:49.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.509" endtime="20201112 09:43:49.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.484" endtime="20201112 09:43:49.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.482" endtime="20201112 09:43:49.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.518" endtime="20201112 09:43:49.803"></status>
</kw>
<msg timestamp="20201112 09:43:49.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.516" endtime="20201112 09:43:49.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022075819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022119736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.807" endtime="20201112 09:43:49.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.815" endtime="20201112 09:43:49.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.514" endtime="20201112 09:43:49.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.512" endtime="20201112 09:43:49.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:49.822" level="INFO">${RESULT} = [{'time': 0.022119736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3917000000000955e-05, 'source_diff': 4.3917000000000955e-05}, {'time': 0.022178153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:49.819" endtime="20201112 09:43:49.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:49.835" level="INFO">${ACCURACY} = {'diff': [4.3917000000000955e-05, 4.454199999999811e-05, 4.5125000000000026e-05, 4.576400000000022e-05, 4.577799999999979e-05, 4.575000000000065e-05, 4.5166999999998736e-05, 4.570799999999847e-05, 4.6...</msg>
<status status="PASS" starttime="20201112 09:43:49.823" endtime="20201112 09:43:49.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.840" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 09:43:49.839" endtime="20201112 09:43:49.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.842" level="INFO">VALUE: [4.3917000000000955e-05, 4.454199999999811e-05, 4.5125000000000026e-05, 4.576400000000022e-05, 4.577799999999979e-05, 4.575000000000065e-05, 4.5166999999998736e-05, 4.570799999999847e-05, 4.6361000000001706e-05, 4.455499999999821e-05, 4.397200000000323e-05, 4.393000000000105e-05, 4.6361000000001706e-05, 4.569400000000237e-05, 4.579099999999989e-05, 4.511099999999699e-05, 4.5138999999999596e-05, 4.575000000000065e-05, 4.575000000000065e-05, 4.454199999999811e-05, 4.573600000000108e-05, 4.5166999999998736e-05, 4.56939999999989e-05, 4.573600000000108e-05, 4.5138999999999596e-05, 4.5166999999998736e-05, 4.455599999999768e-05, 4.511199999999993e-05, 4.394399999999715e-05, 4.575000000000065e-05, 4.573600000000108e-05, 4.5138999999999596e-05, 4.454199999999811e-05, 4.508299999999785e-05, 4.5709000000001415e-05, 4.576400000000022e-05, 4.5097000000000886e-05, 4.576400000000022e-05, 4.5166999999998736e-05, 4.636099999999824e-05, 4.634699999999867e-05, 4.5152999999999166e-05, 4.5138999999999596e-05, 4.5722999999997516e-05, 4.5138999999999596e-05, 4.451399999999897e-05, 4.455600000000115e-05, 4.576400000000022e-05, 4.456899999999778e-05, 4.454199999999811e-05]</msg>
<status status="PASS" starttime="20201112 09:43:49.841" endtime="20201112 09:43:49.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.836" endtime="20201112 09:43:49.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.846" endtime="20201112 09:43:49.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:49.849" endtime="20201112 09:43:49.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.848" endtime="20201112 09:43:49.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.844" endtime="20201112 09:43:49.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.480" endtime="20201112 09:43:49.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.480" endtime="20201112 09:43:49.870"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.879" endtime="20201112 09:43:49.896"></status>
</kw>
<msg timestamp="20201112 09:43:49.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.877" endtime="20201112 09:43:49.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.897" endtime="20201112 09:43:49.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.900" endtime="20201112 09:43:49.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.875" endtime="20201112 09:43:49.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.873" endtime="20201112 09:43:49.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.908" endtime="20201112 09:43:50.197"></status>
</kw>
<msg timestamp="20201112 09:43:50.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022073375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022120347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.907" endtime="20201112 09:43:50.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022073375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022120347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.201" endtime="20201112 09:43:50.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.209" endtime="20201112 09:43:50.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.904" endtime="20201112 09:43:50.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.903" endtime="20201112 09:43:50.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:50.216" level="INFO">${RESULT} = [{'time': 0.022120347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.697199999999929e-05, 'source_diff': 4.697199999999929e-05}, {'time': 0.022171986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:50.213" endtime="20201112 09:43:50.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:50.229" level="INFO">${ACCURACY} = {'diff': [4.697199999999929e-05, 4.694400000000015e-05, 4.636099999999824e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.818099999999784e-05, 4.697200000000276e-05, 4.757000000000025e-05, 4.69...</msg>
<status status="PASS" starttime="20201112 09:43:50.217" endtime="20201112 09:43:50.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.234" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 09:43:50.233" endtime="20201112 09:43:50.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.236" level="INFO">VALUE: [4.697199999999929e-05, 4.694400000000015e-05, 4.636099999999824e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.818099999999784e-05, 4.697200000000276e-05, 4.757000000000025e-05, 4.697199999999929e-05, 4.636099999999824e-05, 4.6944999999999626e-05, 4.695799999999972e-05, 4.695799999999972e-05, 4.6361000000001706e-05, 4.6972999999998766e-05, 4.695800000000319e-05, 4.6347000000002136e-05, 4.6958999999999196e-05, 4.816600000000226e-05, 4.695799999999972e-05, 4.8139000000002596e-05, 4.636099999999824e-05, 4.757000000000025e-05, 4.697199999999929e-05, 4.634699999999867e-05, 4.695800000000319e-05, 4.637499999999781e-05, 4.755600000000068e-05, 4.756900000000078e-05, 4.695799999999972e-05, 4.818099999999784e-05, 4.756900000000078e-05, 4.6347000000002136e-05, 4.755499999999774e-05, 4.636099999999824e-05, 4.70000000000019e-05, 4.6389000000000846e-05, 4.6361000000001706e-05, 4.6375000000001276e-05, 4.695799999999972e-05, 4.755500000000121e-05, 4.756900000000078e-05, 4.6361000000001706e-05, 4.634799999999814e-05, 4.754200000000111e-05, 4.698599999999886e-05, 4.633400000000204e-05, 4.756900000000078e-05, 4.698600000000233e-05, 4.6347000000002136e-05]</msg>
<status status="PASS" starttime="20201112 09:43:50.235" endtime="20201112 09:43:50.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.230" endtime="20201112 09:43:50.237"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.240" endtime="20201112 09:43:50.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:50.243" endtime="20201112 09:43:50.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.242" endtime="20201112 09:43:50.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.238" endtime="20201112 09:43:50.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.871" endtime="20201112 09:43:50.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.871" endtime="20201112 09:43:50.264"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.272" endtime="20201112 09:43:50.290"></status>
</kw>
<msg timestamp="20201112 09:43:50.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.271" endtime="20201112 09:43:50.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.291" endtime="20201112 09:43:50.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.294" endtime="20201112 09:43:50.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.268" endtime="20201112 09:43:50.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.266" endtime="20201112 09:43:50.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.302" endtime="20201112 09:43:50.590"></status>
</kw>
<msg timestamp="20201112 09:43:50.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022180708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022228875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.301" endtime="20201112 09:43:50.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022180708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022228875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.594" endtime="20201112 09:43:50.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.603" endtime="20201112 09:43:50.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.298" endtime="20201112 09:43:50.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.297" endtime="20201112 09:43:50.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:50.609" level="INFO">${RESULT} = [{'time': 0.022228875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.816699999999827e-05, 'source_diff': 4.816699999999827e-05}, {'time': 0.022288889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:50.606" endtime="20201112 09:43:50.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:50.623" level="INFO">${ACCURACY} = {'diff': [4.816699999999827e-05, 4.81529999999987e-05, 4.8181000000001306e-05, 4.938900000000038e-05, 4.877699999999985e-05, 4.937500000000081e-05, 4.998599999999839e-05, 4.937500000000081e-05, 4.8124...</msg>
<status status="PASS" starttime="20201112 09:43:50.610" endtime="20201112 09:43:50.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.627" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 09:43:50.626" endtime="20201112 09:43:50.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.630" level="INFO">VALUE: [4.816699999999827e-05, 4.81529999999987e-05, 4.8181000000001306e-05, 4.938900000000038e-05, 4.877699999999985e-05, 4.937500000000081e-05, 4.998599999999839e-05, 4.937500000000081e-05, 4.812499999999956e-05, 4.876399999999975e-05, 4.940299999999995e-05, 4.998600000000186e-05, 4.816699999999827e-05, 5.004200000000014e-05, 4.9401999999997004e-05, 4.881899999999856e-05, 4.879200000000236e-05, 4.940299999999995e-05, 4.938900000000038e-05, 4.812499999999956e-05, 4.998600000000186e-05, 4.998600000000186e-05, 4.938900000000038e-05, 4.817999999999836e-05, 4.877699999999985e-05, 4.81529999999987e-05, 4.876300000000028e-05, 4.816699999999827e-05, 4.877799999999932e-05, 5.000000000000143e-05, 4.8167000000001736e-05, 4.879199999999889e-05, 4.880499999999899e-05, 4.876399999999975e-05, 4.881899999999856e-05, 4.9388000000000903e-05, 4.8139000000002596e-05, 4.938900000000038e-05, 4.81529999999987e-05, 4.879100000000289e-05, 4.938900000000038e-05, 5.000000000000143e-05, 4.936100000000124e-05, 4.9987000000001336e-05, 4.818000000000183e-05, 5.001399999999753e-05, 4.877699999999985e-05, 4.88339999999976e-05, 4.875000000000018e-05, 4.877799999999932e-05]</msg>
<status status="PASS" starttime="20201112 09:43:50.628" endtime="20201112 09:43:50.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.623" endtime="20201112 09:43:50.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.633" endtime="20201112 09:43:50.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:50.636" endtime="20201112 09:43:50.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.635" endtime="20201112 09:43:50.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.631" endtime="20201112 09:43:50.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.265" endtime="20201112 09:43:50.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.264" endtime="20201112 09:43:50.657"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.666" endtime="20201112 09:43:50.683"></status>
</kw>
<msg timestamp="20201112 09:43:50.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.664" endtime="20201112 09:43:50.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.684" endtime="20201112 09:43:50.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.687" endtime="20201112 09:43:50.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.662" endtime="20201112 09:43:50.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.660" endtime="20201112 09:43:50.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.696" endtime="20201112 09:43:50.982"></status>
</kw>
<msg timestamp="20201112 09:43:50.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.694" endtime="20201112 09:43:50.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022084056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022135236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.987" endtime="20201112 09:43:50.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.995" endtime="20201112 09:43:50.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.692" endtime="20201112 09:43:50.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.690" endtime="20201112 09:43:50.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:51.002" level="INFO">${RESULT} = [{'time': 0.022135236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1179999999997894e-05, 'source_diff': 5.1179999999997894e-05}, {'time': 0.022193181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:50.998" endtime="20201112 09:43:51.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:51.015" level="INFO">${ACCURACY} = {'diff': [5.1179999999997894e-05, 5.058399999999935e-05, 5.119500000000041e-05, 5.12080000000005e-05, 5.180500000000199e-05, 4.998600000000186e-05, 5.054100000000117e-05, 5.124999999999921e-05, 4.9985...</msg>
<status status="PASS" starttime="20201112 09:43:51.003" endtime="20201112 09:43:51.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.019" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 09:43:51.018" endtime="20201112 09:43:51.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.022" level="INFO">VALUE: [5.1179999999997894e-05, 5.058399999999935e-05, 5.119500000000041e-05, 5.12080000000005e-05, 5.180500000000199e-05, 4.998600000000186e-05, 5.054100000000117e-05, 5.124999999999921e-05, 4.998599999999839e-05, 4.998600000000186e-05, 5.118000000000136e-05, 5.059700000000292e-05, 5.061099999999902e-05, 4.9987000000001336e-05, 5.179199999999842e-05, 5.12080000000005e-05, 5.061199999999849e-05, 5.118000000000136e-05, 5.120899999999998e-05, 5.1193999999997464e-05, 5.186100000000027e-05, 5.122200000000007e-05, 5.118100000000084e-05, 5.119400000000093e-05, 5.186100000000027e-05, 5.172200000000057e-05, 4.997199999999882e-05, 5.240300000000295e-05, 5.180499999999852e-05, 5.056999999999978e-05, 5.058299999999988e-05, 5.0014000000001e-05, 5.116700000000127e-05, 5.118100000000084e-05, 5.119400000000093e-05, 5.058299999999988e-05, 5.126399999999878e-05, 5.118099999999737e-05, 5.180599999999799e-05, 5.12080000000005e-05, 5.058399999999935e-05, 5.180500000000199e-05, 5.122200000000007e-05, 5.119400000000093e-05, 5.179099999999895e-05, 5.11669999999978e-05, 5.179099999999895e-05, 5.177799999999885e-05, 5.177699999999938e-05, 5.119400000000093e-05]</msg>
<status status="PASS" starttime="20201112 09:43:51.021" endtime="20201112 09:43:51.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.016" endtime="20201112 09:43:51.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.026" endtime="20201112 09:43:51.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:51.029" endtime="20201112 09:43:51.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.027" endtime="20201112 09:43:51.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.024" endtime="20201112 09:43:51.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.658" endtime="20201112 09:43:51.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.658" endtime="20201112 09:43:51.050"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.058" endtime="20201112 09:43:51.076"></status>
</kw>
<msg timestamp="20201112 09:43:51.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.057" endtime="20201112 09:43:51.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.077" endtime="20201112 09:43:51.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.080" endtime="20201112 09:43:51.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.054" endtime="20201112 09:43:51.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.052" endtime="20201112 09:43:51.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.089" endtime="20201112 09:43:51.375"></status>
</kw>
<msg timestamp="20201112 09:43:51.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022090653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.087" endtime="20201112 09:43:51.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022090653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.379" endtime="20201112 09:43:51.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.388" endtime="20201112 09:43:51.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.085" endtime="20201112 09:43:51.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.083" endtime="20201112 09:43:51.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:51.394" level="INFO">${RESULT} = [{'time': 0.022090653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.244499999999819e-05, 'source_diff': 5.244499999999819e-05}, {'time': 0.022149139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:51.391" endtime="20201112 09:43:51.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:51.408" level="INFO">${ACCURACY} = {'diff': [5.244499999999819e-05, 5.301400000000053e-05, 5.359699999999898e-05, 5.41670000000008e-05, 5.245900000000123e-05, 5.358299999999941e-05, 5.2443999999998714e-05, 5.298600000000139e-05, 5.3000...</msg>
<status status="PASS" starttime="20201112 09:43:51.395" endtime="20201112 09:43:51.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.412" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 09:43:51.411" endtime="20201112 09:43:51.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.415" level="INFO">VALUE: [5.244499999999819e-05, 5.301400000000053e-05, 5.359699999999898e-05, 5.41670000000008e-05, 5.245900000000123e-05, 5.358299999999941e-05, 5.2443999999998714e-05, 5.298600000000139e-05, 5.300000000000096e-05, 5.300000000000096e-05, 5.361099999999855e-05, 5.4221999999999604e-05, 5.237500000000034e-05, 5.362499999999812e-05, 5.4208000000000034e-05, 5.301400000000053e-05, 5.361100000000202e-05, 5.300000000000096e-05, 5.244400000000218e-05, 5.361099999999855e-05, 5.362499999999812e-05, 5.423700000000212e-05, 5.4208000000000034e-05, 5.247200000000132e-05, 5.300000000000096e-05, 5.301400000000053e-05, 5.3013999999997063e-05, 5.4208000000000034e-05, 5.4208000000000034e-05, 5.361099999999855e-05, 5.238899999999991e-05, 5.245900000000123e-05, 5.361099999999855e-05, 5.300000000000096e-05, 5.2402000000000004e-05, 5.361099999999855e-05, 5.2999999999997494e-05, 5.359700000000245e-05, 5.365299999999726e-05, 5.240299999999948e-05, 5.362500000000159e-05, 5.2999999999997494e-05, 5.2999999999997494e-05, 5.4194000000000464e-05, 5.301400000000053e-05, 5.243099999999862e-05, 5.359700000000245e-05, 5.300000000000096e-05, 5.361099999999855e-05, 5.420899999999951e-05]</msg>
<status status="PASS" starttime="20201112 09:43:51.413" endtime="20201112 09:43:51.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.409" endtime="20201112 09:43:51.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.418" endtime="20201112 09:43:51.420"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:51.422" endtime="20201112 09:43:51.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.420" endtime="20201112 09:43:51.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.417" endtime="20201112 09:43:51.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.051" endtime="20201112 09:43:51.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.050" endtime="20201112 09:43:51.443"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.451" endtime="20201112 09:43:51.468"></status>
</kw>
<msg timestamp="20201112 09:43:51.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.450" endtime="20201112 09:43:51.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.470" endtime="20201112 09:43:51.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.472" endtime="20201112 09:43:51.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.447" endtime="20201112 09:43:51.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.445" endtime="20201112 09:43:51.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.481" endtime="20201112 09:43:51.770"></status>
</kw>
<msg timestamp="20201112 09:43:51.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02217625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022231125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:51.480" endtime="20201112 09:43:51.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02217625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022231125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:51.775" endtime="20201112 09:43:51.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.783" endtime="20201112 09:43:51.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.477" endtime="20201112 09:43:51.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.476" endtime="20201112 09:43:51.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:51.790" level="INFO">${RESULT} = [{'time': 0.022231125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.487499999999937e-05, 'source_diff': 5.487499999999937e-05}, {'time': 0.022291472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:51.787" endtime="20201112 09:43:51.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:51.804" level="INFO">${ACCURACY} = {'diff': [5.487499999999937e-05, 5.487499999999937e-05, 5.6041999999999204e-05, 5.6041999999999204e-05, 5.482000000000056e-05, 5.480500000000152e-05, 5.484700000000023e-05, 5.4221999999999604e-05, 5.4...</msg>
<status status="PASS" starttime="20201112 09:43:51.791" endtime="20201112 09:43:51.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.809" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 09:43:51.808" endtime="20201112 09:43:51.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.811" level="INFO">VALUE: [5.487499999999937e-05, 5.487499999999937e-05, 5.6041999999999204e-05, 5.6041999999999204e-05, 5.482000000000056e-05, 5.480500000000152e-05, 5.484700000000023e-05, 5.4221999999999604e-05, 5.481900000000109e-05, 5.479200000000142e-05, 5.483300000000066e-05, 5.483400000000013e-05, 5.6055999999998773e-05, 5.544500000000119e-05, 5.538899999999944e-05, 5.602700000000016e-05, 5.415300000000123e-05, 5.4221999999999604e-05, 5.6027999999999634e-05, 5.540299999999901e-05, 5.482000000000056e-05, 5.483300000000066e-05, 5.6014000000000064e-05, 5.481900000000109e-05, 5.6014000000000064e-05, 5.544500000000119e-05, 5.6027999999999634e-05, 5.481900000000109e-05, 5.5444000000001714e-05, 5.5430000000002144e-05, 5.422200000000307e-05, 5.604099999999973e-05, 5.6027999999999634e-05, 5.6014000000000064e-05, 5.5429999999998675e-05, 5.6027999999999634e-05, 5.6027999999999634e-05, 5.5429999999998675e-05, 5.541700000000205e-05, 5.543099999999815e-05, 5.540299999999901e-05, 5.426400000000178e-05, 5.4208000000000034e-05, 5.608299999999844e-05, 5.483300000000066e-05, 5.480600000000099e-05, 5.541700000000205e-05, 5.4749999999999244e-05, 5.420899999999951e-05, 5.481899999999762e-05]</msg>
<status status="PASS" starttime="20201112 09:43:51.810" endtime="20201112 09:43:51.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.805" endtime="20201112 09:43:51.813"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.815" endtime="20201112 09:43:51.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:51.819" endtime="20201112 09:43:51.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.817" endtime="20201112 09:43:51.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.813" endtime="20201112 09:43:51.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.443" endtime="20201112 09:43:51.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.443" endtime="20201112 09:43:51.840"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.849" endtime="20201112 09:43:51.866"></status>
</kw>
<msg timestamp="20201112 09:43:51.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.847" endtime="20201112 09:43:51.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.868" endtime="20201112 09:43:51.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.870" endtime="20201112 09:43:51.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.844" endtime="20201112 09:43:51.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.842" endtime="20201112 09:43:51.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.880" endtime="20201112 09:43:52.167"></status>
</kw>
<msg timestamp="20201112 09:43:52.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022832292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022890139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.878" endtime="20201112 09:43:52.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022832292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022890139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.172" endtime="20201112 09:43:52.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.180" endtime="20201112 09:43:52.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.875" endtime="20201112 09:43:52.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.874" endtime="20201112 09:43:52.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:52.187" level="INFO">${RESULT} = [{'time': 0.022890139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.784699999999976e-05, 'source_diff': 5.784699999999976e-05}, {'time': 0.022962069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:52.184" endtime="20201112 09:43:52.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:52.201" level="INFO">${ACCURACY} = {'diff': [5.784699999999976e-05, 5.7250000000001744e-05, 5.655600000000274e-05, 5.7221999999999135e-05, 5.662500000000112e-05, 5.786099999999933e-05, 5.7193999999999995e-05, 5.7833999999999663e-05, 5....</msg>
<status status="PASS" starttime="20201112 09:43:52.188" endtime="20201112 09:43:52.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.206" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 09:43:52.205" endtime="20201112 09:43:52.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.208" level="INFO">VALUE: [5.784699999999976e-05, 5.7250000000001744e-05, 5.655600000000274e-05, 5.7221999999999135e-05, 5.662500000000112e-05, 5.786099999999933e-05, 5.7193999999999995e-05, 5.7833999999999663e-05, 5.786099999999933e-05, 5.7207999999999565e-05, 5.784699999999976e-05, 5.6027999999999634e-05, 5.784699999999976e-05, 5.665300000000026e-05, 5.784799999999923e-05, 5.7236000000002174e-05, 5.662500000000112e-05, 5.7263999999997844e-05, 5.783300000000019e-05, 5.7264000000001314e-05, 5.7249999999998274e-05, 5.661199999999755e-05, 5.7236000000002174e-05, 5.7249999999998274e-05, 5.663900000000069e-05, 5.662500000000112e-05, 5.7235999999998705e-05, 5.784799999999923e-05, 5.662500000000112e-05, 5.7820000000000094e-05, 5.661200000000102e-05, 5.7833999999999663e-05, 5.662499999999765e-05, 5.662500000000112e-05, 5.7833999999999663e-05, 5.7236000000002174e-05, 5.665300000000026e-05, 5.662500000000112e-05, 5.662500000000112e-05, 5.783300000000019e-05, 5.6638000000001215e-05, 5.7791999999997484e-05, 5.723700000000165e-05, 5.7235999999998705e-05, 5.784699999999976e-05, 5.722300000000208e-05, 5.663900000000069e-05, 5.662500000000112e-05, 5.6014000000000064e-05, 5.784699999999976e-05]</msg>
<status status="PASS" starttime="20201112 09:43:52.207" endtime="20201112 09:43:52.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.202" endtime="20201112 09:43:52.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.212" endtime="20201112 09:43:52.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:52.216" endtime="20201112 09:43:52.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.214" endtime="20201112 09:43:52.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.210" endtime="20201112 09:43:52.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.841" endtime="20201112 09:43:52.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.840" endtime="20201112 09:43:52.240"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.260" endtime="20201112 09:43:52.281"></status>
</kw>
<msg timestamp="20201112 09:43:52.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.256" endtime="20201112 09:43:52.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.285" endtime="20201112 09:43:52.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.290" endtime="20201112 09:43:52.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.250" endtime="20201112 09:43:52.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.246" endtime="20201112 09:43:52.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.310" endtime="20201112 09:43:52.603"></status>
</kw>
<msg timestamp="20201112 09:43:52.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038144597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038203069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.307" endtime="20201112 09:43:52.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038144597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038203069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.608" endtime="20201112 09:43:52.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.616" endtime="20201112 09:43:52.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.301" endtime="20201112 09:43:52.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.297" endtime="20201112 09:43:52.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:52.623" level="INFO">${RESULT} = [{'time': 0.038203069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8471999999996915e-05, 'source_diff': 5.8471999999996915e-05}, {'time': 0.038276778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:52.620" endtime="20201112 09:43:52.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:52.637" level="INFO">${ACCURACY} = {'diff': [5.8471999999996915e-05, 5.96949999999985e-05, 5.8444000000004714e-05, 5.9665999999999886e-05, 5.9042000000002204e-05, 5.966699999999936e-05, 5.8499999999996055e-05, 5.8958000000004784e-05, 5...</msg>
<status status="PASS" starttime="20201112 09:43:52.624" endtime="20201112 09:43:52.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.642" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 09:43:52.641" endtime="20201112 09:43:52.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.644" level="INFO">VALUE: [5.8471999999996915e-05, 5.96949999999985e-05, 5.8444000000004714e-05, 5.9665999999999886e-05, 5.9042000000002204e-05, 5.966699999999936e-05, 5.8499999999996055e-05, 5.8958000000004784e-05, 5.9652000000000316e-05, 5.965299999999979e-05, 5.96949999999985e-05, 5.90550000000023e-05, 6.0263999999997375e-05, 5.90550000000023e-05, 5.965299999999979e-05, 5.844500000000419e-05, 5.965299999999979e-05, 5.9070000000001344e-05, 5.845900000000376e-05, 5.8443999999997776e-05, 5.8429999999998206e-05, 6.0236000000005174e-05, 5.8500000000002994e-05, 5.8430000000005144e-05, 5.8443999999997776e-05, 5.9013999999996125e-05, 5.9013999999996125e-05, 5.9042000000002204e-05, 5.961100000000108e-05, 5.904100000000273e-05, 5.9014000000003064e-05, 5.843099999999768e-05, 6.0249999999997805e-05, 5.8401999999999066e-05, 5.965299999999979e-05, 5.843100000000462e-05, 5.965299999999979e-05, 5.9028000000002634e-05, 5.904100000000273e-05, 5.963900000000022e-05, 5.965299999999979e-05, 5.844500000000419e-05, 6.0249999999997805e-05, 5.8457999999997345e-05, 5.9056000000001774e-05, 5.8485999999996485e-05, 5.844499999999725e-05, 5.963900000000022e-05, 5.965299999999979e-05, 5.9042000000002204e-05]</msg>
<status status="PASS" starttime="20201112 09:43:52.643" endtime="20201112 09:43:52.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.638" endtime="20201112 09:43:52.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.648" endtime="20201112 09:43:52.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:52.652" endtime="20201112 09:43:52.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.650" endtime="20201112 09:43:52.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.646" endtime="20201112 09:43:52.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.242" endtime="20201112 09:43:52.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.241" endtime="20201112 09:43:52.673"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.682" endtime="20201112 09:43:52.699"></status>
</kw>
<msg timestamp="20201112 09:43:52.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.680" endtime="20201112 09:43:52.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.701" endtime="20201112 09:43:52.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.704" endtime="20201112 09:43:52.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.677" endtime="20201112 09:43:52.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.675" endtime="20201112 09:43:52.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.713" endtime="20201112 09:43:53.000"></status>
</kw>
<msg timestamp="20201112 09:43:53.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022695431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022755694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.711" endtime="20201112 09:43:53.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022695431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022755694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.004" endtime="20201112 09:43:53.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.013" endtime="20201112 09:43:53.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.709" endtime="20201112 09:43:53.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.707" endtime="20201112 09:43:53.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:53.020" level="INFO">${RESULT} = [{'time': 0.022755694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.026300000000137e-05, 'source_diff': 6.026300000000137e-05}, {'time': 0.022827917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:53.016" endtime="20201112 09:43:53.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:53.033" level="INFO">${ACCURACY} = {'diff': [6.026300000000137e-05, 6.087499999999843e-05, 6.145899999999982e-05, 6.087499999999843e-05, 6.0236000000001705e-05, 6.0888999999998e-05, 6.0249999999997805e-05, 6.0263999999997375e-05, 6.145...</msg>
<status status="PASS" starttime="20201112 09:43:53.021" endtime="20201112 09:43:53.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.038" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 09:43:53.037" endtime="20201112 09:43:53.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.041" level="INFO">VALUE: [6.026300000000137e-05, 6.087499999999843e-05, 6.145899999999982e-05, 6.087499999999843e-05, 6.0236000000001705e-05, 6.0888999999998e-05, 6.0249999999997805e-05, 6.0263999999997375e-05, 6.145899999999982e-05, 6.145800000000035e-05, 6.086099999999886e-05, 6.212499999999968e-05, 6.0207999999999096e-05, 6.087499999999843e-05, 6.147199999999992e-05, 6.201399999999913e-05, 6.147199999999992e-05, 6.147299999999939e-05, 6.147299999999939e-05, 6.0250000000001275e-05, 6.14439999999973e-05, 6.20829999999975e-05, 6.145800000000035e-05, 6.084699999999929e-05, 6.147199999999992e-05, 6.148599999999949e-05, 6.0264000000000845e-05, 6.145899999999982e-05, 6.20690000000014e-05, 6.149999999999906e-05, 6.087499999999843e-05, 6.084699999999929e-05, 6.148599999999949e-05, 6.205499999999836e-05, 6.086100000000233e-05, 6.147199999999992e-05, 6.206899999999793e-05, 6.084699999999929e-05, 6.145899999999982e-05, 6.144500000000025e-05, 6.0249999999997805e-05, 6.0249999999997805e-05, 6.0249999999997805e-05, 6.206899999999793e-05, 6.090300000000104e-05, 6.207000000000087e-05, 6.147300000000286e-05, 6.086100000000233e-05, 6.145899999999982e-05, 6.086100000000233e-05]</msg>
<status status="PASS" starttime="20201112 09:43:53.039" endtime="20201112 09:43:53.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.034" endtime="20201112 09:43:53.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.049" endtime="20201112 09:43:53.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:53.053" endtime="20201112 09:43:53.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.051" endtime="20201112 09:43:53.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.048" endtime="20201112 09:43:53.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.674" endtime="20201112 09:43:53.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.673" endtime="20201112 09:43:53.074"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.083" endtime="20201112 09:43:53.100"></status>
</kw>
<msg timestamp="20201112 09:43:53.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.081" endtime="20201112 09:43:53.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.102" endtime="20201112 09:43:53.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.104" endtime="20201112 09:43:53.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.078" endtime="20201112 09:43:53.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.076" endtime="20201112 09:43:53.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.114" endtime="20201112 09:43:53.403"></status>
</kw>
<msg timestamp="20201112 09:43:53.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022733792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.112" endtime="20201112 09:43:53.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022733792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.407" endtime="20201112 09:43:53.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.415" endtime="20201112 09:43:53.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.109" endtime="20201112 09:43:53.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.107" endtime="20201112 09:43:53.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:53.422" level="INFO">${RESULT} = [{'time': 0.022733792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.388899999999753e-05, 'source_diff': 6.388899999999753e-05}, {'time': 0.022807861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:53.419" endtime="20201112 09:43:53.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:53.436" level="INFO">${ACCURACY} = {'diff': [6.388899999999753e-05, 6.388899999999753e-05, 6.327799999999995e-05, 6.390300000000057e-05, 6.32639999999969e-05, 6.265299999999932e-05, 6.265199999999985e-05, 6.333299999999875e-05, 6.38749...</msg>
<status status="PASS" starttime="20201112 09:43:53.423" endtime="20201112 09:43:53.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.441" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 09:43:53.440" endtime="20201112 09:43:53.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.444" level="INFO">VALUE: [6.388899999999753e-05, 6.388899999999753e-05, 6.327799999999995e-05, 6.390300000000057e-05, 6.32639999999969e-05, 6.265299999999932e-05, 6.265199999999985e-05, 6.333299999999875e-05, 6.387499999999796e-05, 6.329100000000004e-05, 6.26950000000015e-05, 6.388799999999806e-05, 6.3889000000001e-05, 6.265299999999932e-05, 6.327799999999995e-05, 6.273699999999674e-05, 6.266699999999889e-05, 6.26950000000015e-05, 6.387500000000143e-05, 6.327799999999995e-05, 6.390300000000057e-05, 6.392999999999677e-05, 6.323600000000124e-05, 6.327799999999995e-05, 6.386099999999839e-05, 6.386099999999839e-05, 6.326299999999743e-05, 6.387500000000143e-05, 6.20690000000014e-05, 6.327700000000047e-05, 6.262500000000018e-05, 6.3276999999997e-05, 6.268100000000193e-05, 6.208400000000044e-05, 6.390300000000057e-05, 6.266599999999942e-05, 6.269399999999856e-05, 6.265299999999932e-05, 6.329200000000298e-05, 6.3889000000001e-05, 6.393000000000024e-05, 6.274999999999684e-05, 6.205500000000183e-05, 6.3889000000001e-05, 6.3276999999997e-05, 6.269399999999856e-05, 6.3889000000001e-05, 6.327799999999995e-05, 6.207000000000087e-05, 6.266699999999889e-05]</msg>
<status status="PASS" starttime="20201112 09:43:53.442" endtime="20201112 09:43:53.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.437" endtime="20201112 09:43:53.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.447" endtime="20201112 09:43:53.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:53.451" endtime="20201112 09:43:53.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.449" endtime="20201112 09:43:53.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.446" endtime="20201112 09:43:53.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.075" endtime="20201112 09:43:53.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.074" endtime="20201112 09:43:53.472"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.481" endtime="20201112 09:43:53.498"></status>
</kw>
<msg timestamp="20201112 09:43:53.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.479" endtime="20201112 09:43:53.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.500" endtime="20201112 09:43:53.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.503" endtime="20201112 09:43:53.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.477" endtime="20201112 09:43:53.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.474" endtime="20201112 09:43:53.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.512" endtime="20201112 09:43:53.800"></status>
</kw>
<msg timestamp="20201112 09:43:53.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022687931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022753014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.510" endtime="20201112 09:43:53.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022687931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022753014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.804" endtime="20201112 09:43:53.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.812" endtime="20201112 09:43:53.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.508" endtime="20201112 09:43:53.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.506" endtime="20201112 09:43:53.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:53.820" level="INFO">${RESULT} = [{'time': 0.022753014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.508299999999703e-05, 'source_diff': 6.508299999999703e-05}, {'time': 0.022825333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:53.816" endtime="20201112 09:43:53.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:53.833" level="INFO">${ACCURACY} = {'diff': [6.508299999999703e-05, 6.629099999999957e-05, 6.57090000000006e-05, 6.631999999999819e-05, 6.448599999999902e-05, 6.630599999999862e-05, 6.449999999999859e-05, 6.566600000000242e-05, 6.51120...</msg>
<status status="PASS" starttime="20201112 09:43:53.821" endtime="20201112 09:43:53.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.838" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 09:43:53.837" endtime="20201112 09:43:53.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.841" level="INFO">VALUE: [6.508299999999703e-05, 6.629099999999957e-05, 6.57090000000006e-05, 6.631999999999819e-05, 6.448599999999902e-05, 6.630599999999862e-05, 6.449999999999859e-05, 6.566600000000242e-05, 6.511200000000258e-05, 6.50700000000004e-05, 6.509700000000007e-05, 6.568000000000199e-05, 6.569400000000156e-05, 6.448599999999902e-05, 6.569499999999756e-05, 6.448599999999902e-05, 6.448600000000249e-05, 6.62639999999999e-05, 6.50830000000005e-05, 6.44440000000003e-05, 6.565200000000285e-05, 6.451400000000163e-05, 6.50830000000005e-05, 6.637500000000046e-05, 6.569499999999756e-05, 6.509700000000007e-05, 6.450000000000206e-05, 6.50700000000004e-05, 6.629199999999905e-05, 6.570800000000113e-05, 6.566699999999842e-05, 6.569400000000156e-05, 6.50700000000004e-05, 6.451399999999816e-05, 6.50280000000017e-05, 6.448599999999902e-05, 6.511099999999964e-05, 6.449999999999859e-05, 6.630600000000209e-05, 6.508399999999998e-05, 6.569499999999756e-05, 6.450000000000206e-05, 6.567999999999852e-05, 6.509700000000007e-05, 6.508299999999703e-05, 6.509700000000007e-05, 6.570800000000113e-05, 6.449999999999859e-05, 6.57090000000006e-05, 6.569500000000103e-05]</msg>
<status status="PASS" starttime="20201112 09:43:53.839" endtime="20201112 09:43:53.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.834" endtime="20201112 09:43:53.842"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.845" endtime="20201112 09:43:53.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:53.848" endtime="20201112 09:43:53.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.846" endtime="20201112 09:43:53.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.843" endtime="20201112 09:43:53.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.473" endtime="20201112 09:43:53.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.472" endtime="20201112 09:43:53.869"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.878" endtime="20201112 09:43:53.897"></status>
</kw>
<msg timestamp="20201112 09:43:53.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.876" endtime="20201112 09:43:53.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.898" endtime="20201112 09:43:53.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.901" endtime="20201112 09:43:53.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.874" endtime="20201112 09:43:53.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.872" endtime="20201112 09:43:53.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.910" endtime="20201112 09:43:54.198"></status>
</kw>
<msg timestamp="20201112 09:43:54.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022653278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022734458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.909" endtime="20201112 09:43:54.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022653278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022734458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.203" endtime="20201112 09:43:54.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.211" endtime="20201112 09:43:54.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.906" endtime="20201112 09:43:54.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.904" endtime="20201112 09:43:54.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:54.218" level="INFO">${RESULT} = [{'time': 0.022734458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.118000000000014e-05, 'source_diff': 8.118000000000014e-05}, {'time': 0.022828472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:54.215" endtime="20201112 09:43:54.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:54.232" level="INFO">${ACCURACY} = {'diff': [8.118000000000014e-05, 8.23330000000004e-05, 8.136100000000202e-05, 8.218100000000061e-05, 8.248599999999967e-05, 8.148599999999867e-05, 8.163899999999794e-05, 8.166700000000054e-05, 8.14730...</msg>
<status status="PASS" starttime="20201112 09:43:54.219" endtime="20201112 09:43:54.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.237" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 09:43:54.236" endtime="20201112 09:43:54.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.240" level="INFO">VALUE: [8.118000000000014e-05, 8.23330000000004e-05, 8.136100000000202e-05, 8.218100000000061e-05, 8.248599999999967e-05, 8.148599999999867e-05, 8.163899999999794e-05, 8.166700000000054e-05, 8.147300000000204e-05, 8.272200000000035e-05, 8.07780000000001e-05, 8.231899999999737e-05, 8.134699999999898e-05, 8.195800000000003e-05, 8.216699999999758e-05, 8.098600000000164e-05, 8.212499999999887e-05, 8.23330000000004e-05, 8.115300000000047e-05, 8.098599999999817e-05, 8.244399999999749e-05, 8.165300000000097e-05, 8.234699999999998e-05, 8.115199999999753e-05, 8.130500000000027e-05, 8.17780000000011e-05, 8.198599999999917e-05, 8.190199999999828e-05, 8.098600000000164e-05, 8.180600000000024e-05, 8.098599999999817e-05, 8.248599999999967e-05, 8.130599999999974e-05, 8.181999999999981e-05, 8.215199999999853e-05, 8.200000000000221e-05, 8.127700000000113e-05, 8.115300000000047e-05, 8.216700000000104e-05, 8.130500000000027e-05, 8.130600000000321e-05, 8.250000000000271e-05, 8.118099999999961e-05, 8.186099999999905e-05, 8.248599999999967e-05, 8.199999999999874e-05, 8.086100000000151e-05, 8.165199999999803e-05, 8.175000000000196e-05, 8.150000000000171e-05]</msg>
<status status="PASS" starttime="20201112 09:43:54.238" endtime="20201112 09:43:54.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.233" endtime="20201112 09:43:54.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.243" endtime="20201112 09:43:54.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:54.247" endtime="20201112 09:43:54.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.245" endtime="20201112 09:43:54.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.242" endtime="20201112 09:43:54.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.870" endtime="20201112 09:43:54.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.869" endtime="20201112 09:43:54.268"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.277" endtime="20201112 09:43:54.295"></status>
</kw>
<msg timestamp="20201112 09:43:54.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.275" endtime="20201112 09:43:54.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.297" endtime="20201112 09:43:54.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.300" endtime="20201112 09:43:54.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.272" endtime="20201112 09:43:54.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.270" endtime="20201112 09:43:54.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.309" endtime="20201112 09:43:54.596"></status>
</kw>
<msg timestamp="20201112 09:43:54.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022934569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023017597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.307" endtime="20201112 09:43:54.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022934569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023017597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.600" endtime="20201112 09:43:54.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.609" endtime="20201112 09:43:54.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.305" endtime="20201112 09:43:54.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.303" endtime="20201112 09:43:54.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:54.616" level="INFO">${RESULT} = [{'time': 0.023017597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.302800000000235e-05, 'source_diff': 8.302800000000235e-05}, {'time': 0.023111625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:54.612" endtime="20201112 09:43:54.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:54.629" level="INFO">${ACCURACY} = {'diff': [8.302800000000235e-05, 8.284700000000048e-05, 8.376400000000006e-05, 8.390299999999976e-05, 8.449999999999777e-05, 8.363899999999994e-05, 8.448600000000167e-05, 8.348600000000067e-05, 8.4153...</msg>
<status status="PASS" starttime="20201112 09:43:54.617" endtime="20201112 09:43:54.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.634" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 09:43:54.633" endtime="20201112 09:43:54.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.637" level="INFO">VALUE: [8.302800000000235e-05, 8.284700000000048e-05, 8.376400000000006e-05, 8.390299999999976e-05, 8.449999999999777e-05, 8.363899999999994e-05, 8.448600000000167e-05, 8.348600000000067e-05, 8.4153e-05, 8.302799999999888e-05, 8.31659999999991e-05, 8.298600000000017e-05, 8.44720000000021e-05, 8.298600000000017e-05, 8.351399999999981e-05, 8.46530000000005e-05, 8.445800000000253e-05, 8.44859999999982e-05, 8.330599999999827e-05, 8.377799999999963e-05, 8.415200000000053e-05, 8.36659999999996e-05, 8.413900000000044e-05, 8.331900000000184e-05, 8.281899999999787e-05, 8.373600000000092e-05, 8.36529999999995e-05, 8.3152999999999e-05, 8.283400000000038e-05, 8.434799999999798e-05, 8.281999999999734e-05, 8.297300000000007e-05, 8.383299999999844e-05, 8.359700000000123e-05, 8.379099999999973e-05, 8.33330000000014e-05, 8.375000000000049e-05, 8.398600000000117e-05, 8.431999999999884e-05, 8.329200000000217e-05, 8.299999999999974e-05, 8.366700000000254e-05, 8.413900000000044e-05, 8.381999999999834e-05, 8.365200000000003e-05, 8.447199999999863e-05, 8.465200000000103e-05, 8.384700000000148e-05, 8.3152999999999e-05, 8.4153e-05]</msg>
<status status="PASS" starttime="20201112 09:43:54.635" endtime="20201112 09:43:54.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.630" endtime="20201112 09:43:54.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.640" endtime="20201112 09:43:54.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:54.644" endtime="20201112 09:43:54.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.642" endtime="20201112 09:43:54.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.639" endtime="20201112 09:43:54.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.269" endtime="20201112 09:43:54.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.268" endtime="20201112 09:43:54.665"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.674" endtime="20201112 09:43:54.693"></status>
</kw>
<msg timestamp="20201112 09:43:54.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.672" endtime="20201112 09:43:54.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.695" endtime="20201112 09:43:54.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.697" endtime="20201112 09:43:54.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.670" endtime="20201112 09:43:54.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.667" endtime="20201112 09:43:54.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.707" endtime="20201112 09:43:54.994"></status>
</kw>
<msg timestamp="20201112 09:43:54.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022820611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022905639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.705" endtime="20201112 09:43:54.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022820611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022905639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.998" endtime="20201112 09:43:55.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.007" endtime="20201112 09:43:55.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.702" endtime="20201112 09:43:55.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.701" endtime="20201112 09:43:55.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:55.014" level="INFO">${RESULT} = [{'time': 0.022905639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.502799999999741e-05, 'source_diff': 8.502799999999741e-05}, {'time': 0.022999653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:55.011" endtime="20201112 09:43:55.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:55.028" level="INFO">${ACCURACY} = {'diff': [8.502799999999741e-05, 8.631999999999737e-05, 8.663900000000294e-05, 8.648699999999968e-05, 8.531999999999984e-05, 8.555600000000052e-05, 8.533299999999994e-05, 8.523599999999895e-05, 8.5153...</msg>
<status status="PASS" starttime="20201112 09:43:55.015" endtime="20201112 09:43:55.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.033" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 09:43:55.032" endtime="20201112 09:43:55.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.035" level="INFO">VALUE: [8.502799999999741e-05, 8.631999999999737e-05, 8.663900000000294e-05, 8.648699999999968e-05, 8.531999999999984e-05, 8.555600000000052e-05, 8.533299999999994e-05, 8.523599999999895e-05, 8.5153000000001e-05, 8.531900000000037e-05, 8.520899999999929e-05, 8.5153000000001e-05, 8.497199999999913e-05, 8.66669999999986e-05, 8.498700000000164e-05, 8.613899999999897e-05, 8.513900000000144e-05, 8.66660000000026e-05, 8.54859999999992e-05, 8.518000000000067e-05, 8.49859999999987e-05, 8.604199999999798e-05, 8.59859999999997e-05, 8.608299999999722e-05, 8.481999999999934e-05, 8.549999999999877e-05, 8.609799999999973e-05, 8.582000000000034e-05, 8.665199999999956e-05, 8.590300000000176e-05, 8.515199999999806e-05, 8.64860000000002e-05, 8.633300000000094e-05, 8.665299999999904e-05, 8.51249999999984e-05, 8.481999999999934e-05, 8.54859999999992e-05, 8.531999999999984e-05, 8.582000000000034e-05, 8.51799999999972e-05, 8.481899999999987e-05, 8.515200000000153e-05, 8.484700000000248e-05, 8.669500000000122e-05, 8.56530000000015e-05, 8.633300000000094e-05, 8.645900000000054e-05, 8.597200000000013e-05, 8.531999999999984e-05, 8.56530000000015e-05]</msg>
<status status="PASS" starttime="20201112 09:43:55.034" endtime="20201112 09:43:55.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.029" endtime="20201112 09:43:55.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.039" endtime="20201112 09:43:55.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:55.043" endtime="20201112 09:43:55.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.041" endtime="20201112 09:43:55.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.037" endtime="20201112 09:43:55.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.666" endtime="20201112 09:43:55.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.665" endtime="20201112 09:43:55.064"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.073" endtime="20201112 09:43:55.092"></status>
</kw>
<msg timestamp="20201112 09:43:55.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.071" endtime="20201112 09:43:55.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.094" endtime="20201112 09:43:55.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.096" endtime="20201112 09:43:55.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.068" endtime="20201112 09:43:55.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.066" endtime="20201112 09:43:55.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.106" endtime="20201112 09:43:55.393"></status>
</kw>
<msg timestamp="20201112 09:43:55.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02273175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022818694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:55.104" endtime="20201112 09:43:55.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02273175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022818694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:55.397" endtime="20201112 09:43:55.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.406" endtime="20201112 09:43:55.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.101" endtime="20201112 09:43:55.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.099" endtime="20201112 09:43:55.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:55.413" level="INFO">${RESULT} = [{'time': 0.022818694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694400000000199e-05, 'source_diff': 8.694400000000199e-05}, {'time': 0.022910694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:55.410" endtime="20201112 09:43:55.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:55.427" level="INFO">${ACCURACY} = {'diff': [8.694400000000199e-05, 8.763799999999752e-05, 8.783299999999897e-05, 8.716700000000258e-05, 8.76669999999996e-05, 8.69999999999968e-05, 8.68189999999984e-05, 8.713899999999997e-05, 8.7291999...</msg>
<status status="PASS" starttime="20201112 09:43:55.414" endtime="20201112 09:43:55.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.432" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 09:43:55.431" endtime="20201112 09:43:55.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.434" level="INFO">VALUE: [8.694400000000199e-05, 8.763799999999752e-05, 8.783299999999897e-05, 8.716700000000258e-05, 8.76669999999996e-05, 8.69999999999968e-05, 8.68189999999984e-05, 8.713899999999997e-05, 8.729199999999923e-05, 8.865300000000104e-05, 8.766700000000308e-05, 8.79869999999977e-05, 8.748599999999773e-05, 8.76799999999997e-05, 8.845799999999959e-05, 8.777800000000016e-05, 8.748599999999773e-05, 8.765300000000004e-05, 8.747199999999816e-05, 8.797199999999866e-05, 8.815300000000054e-05, 8.737499999999718e-05, 8.713899999999997e-05, 8.865200000000156e-05, 8.78189999999994e-05, 8.823700000000143e-05, 8.813900000000097e-05, 8.865300000000104e-05, 8.826400000000109e-05, 8.782000000000234e-05, 8.865300000000104e-05, 8.704099999999951e-05, 8.834699999999904e-05, 8.74999999999973e-05, 8.71799999999992e-05, 8.813900000000097e-05, 8.787499999999768e-05, 8.78189999999994e-05, 8.790300000000029e-05, 8.734800000000098e-05, 8.86670000000006e-05, 8.732000000000184e-05, 8.733400000000141e-05, 8.780600000000277e-05, 8.713899999999997e-05, 8.848599999999873e-05, 8.76519999999971e-05, 8.806999999999912e-05, 8.750000000000077e-05, 8.765300000000004e-05]</msg>
<status status="PASS" starttime="20201112 09:43:55.433" endtime="20201112 09:43:55.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.428" endtime="20201112 09:43:55.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.438" endtime="20201112 09:43:55.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:55.442" endtime="20201112 09:43:55.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.440" endtime="20201112 09:43:55.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.436" endtime="20201112 09:43:55.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.064" endtime="20201112 09:43:55.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.064" endtime="20201112 09:43:55.463"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.472" endtime="20201112 09:43:55.491"></status>
</kw>
<msg timestamp="20201112 09:43:55.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.470" endtime="20201112 09:43:55.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.493" endtime="20201112 09:43:55.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.495" endtime="20201112 09:43:55.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.467" endtime="20201112 09:43:55.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.465" endtime="20201112 09:43:55.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.505" endtime="20201112 09:43:55.791"></status>
</kw>
<msg timestamp="20201112 09:43:55.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022706986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022796653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.503" endtime="20201112 09:43:55.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022706986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022796653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.795" endtime="20201112 09:43:55.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.804" endtime="20201112 09:43:55.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.500" endtime="20201112 09:43:55.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.499" endtime="20201112 09:43:55.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:55.812" level="INFO">${RESULT} = [{'time': 0.022796653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.96670000000016e-05, 'source_diff': 8.96670000000016e-05}, {'time': 0.022892667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:55.808" endtime="20201112 09:43:55.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:55.826" level="INFO">${ACCURACY} = {'diff': [8.96670000000016e-05, 8.930599999999733e-05, 8.980599999999783e-05, 8.916599999999816e-05, 8.980500000000183e-05, 9.0332999999998e-05, 8.93190000000009e-05, 8.94999999999993e-05, 8.949999999...</msg>
<status status="PASS" starttime="20201112 09:43:55.813" endtime="20201112 09:43:55.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.831" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 09:43:55.830" endtime="20201112 09:43:55.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.833" level="INFO">VALUE: [8.96670000000016e-05, 8.930599999999733e-05, 8.980599999999783e-05, 8.916599999999816e-05, 8.980500000000183e-05, 9.0332999999998e-05, 8.93190000000009e-05, 8.94999999999993e-05, 8.94999999999993e-05, 8.995799999999762e-05, 8.898599999999923e-05, 8.948599999999973e-05, 8.948599999999973e-05, 8.984800000000001e-05, 8.883299999999997e-05, 8.880500000000083e-05, 8.98190000000014e-05, 8.879200000000073e-05, 8.98329999999975e-05, 8.945800000000059e-05, 8.88190000000004e-05, 8.881999999999987e-05, 9.020800000000134e-05, 8.984800000000001e-05, 8.89869999999987e-05, 9.065299999999957e-05, 8.947200000000016e-05, 9.03190000000019e-05, 8.88190000000004e-05, 8.93190000000009e-05, 8.94999999999993e-05, 9.0639e-05, 8.932000000000037e-05, 8.915299999999807e-05, 9.048600000000073e-05, 8.94869999999992e-05, 8.898700000000218e-05, 9.016600000000263e-05, 8.992999999999848e-05, 8.88190000000004e-05, 9.015299999999907e-05, 8.937499999999918e-05, 8.998600000000023e-05, 9.030599999999833e-05, 8.881999999999987e-05, 8.881999999999987e-05, 8.898700000000218e-05, 8.909699999999979e-05, 8.998599999999676e-05, 8.948599999999973e-05]</msg>
<status status="PASS" starttime="20201112 09:43:55.832" endtime="20201112 09:43:55.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.827" endtime="20201112 09:43:55.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.837" endtime="20201112 09:43:55.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:55.841" endtime="20201112 09:43:55.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.839" endtime="20201112 09:43:55.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.835" endtime="20201112 09:43:55.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.463" endtime="20201112 09:43:55.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.463" endtime="20201112 09:43:55.862"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.871" endtime="20201112 09:43:55.890"></status>
</kw>
<msg timestamp="20201112 09:43:55.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.869" endtime="20201112 09:43:55.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.892" endtime="20201112 09:43:55.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.894" endtime="20201112 09:43:55.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.866" endtime="20201112 09:43:55.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.864" endtime="20201112 09:43:55.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.904" endtime="20201112 09:43:56.191"></status>
</kw>
<msg timestamp="20201112 09:43:56.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022804, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022894708, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:55.902" endtime="20201112 09:43:56.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022804, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022894708, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:56.195" endtime="20201112 09:43:56.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.204" endtime="20201112 09:43:56.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.899" endtime="20201112 09:43:56.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.898" endtime="20201112 09:43:56.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:56.211" level="INFO">${RESULT} = [{'time': 0.022894708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.070799999999837e-05, 'source_diff': 9.070799999999837e-05}, {'time': 0.022992708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:56.207" endtime="20201112 09:43:56.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:56.224" level="INFO">${ACCURACY} = {'diff': [9.070799999999837e-05, 9.21520000000016e-05, 9.155599999999958e-05, 9.111100000000136e-05, 9.263899999999853e-05, 9.236099999999914e-05, 9.115300000000007e-05, 9.215300000000107e-05, 9.10270...</msg>
<status status="PASS" starttime="20201112 09:43:56.212" endtime="20201112 09:43:56.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.229" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 09:43:56.228" endtime="20201112 09:43:56.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.232" level="INFO">VALUE: [9.070799999999837e-05, 9.21520000000016e-05, 9.155599999999958e-05, 9.111100000000136e-05, 9.263899999999853e-05, 9.236099999999914e-05, 9.115300000000007e-05, 9.215300000000107e-05, 9.102700000000047e-05, 9.197300000000214e-05, 9.2333e-05, 9.166600000000066e-05, 9.265199999999862e-05, 9.181899999999993e-05, 9.1332999999999e-05, 9.083300000000197e-05, 9.093099999999896e-05, 9.133399999999847e-05, 9.183399999999897e-05, 9.132000000000237e-05, 9.117999999999973e-05, 9.147299999999817e-05, 9.21520000000016e-05, 9.097200000000166e-05, 9.148600000000173e-05, 9.181899999999993e-05, 9.166700000000014e-05, 9.08199999999984e-05, 9.098599999999776e-05, 9.25000000000023e-05, 9.13199999999989e-05, 9.11390000000005e-05, 9.199999999999833e-05, 9.18329999999995e-05, 9.131899999999943e-05, 9.2333e-05, 9.18190000000034e-05, 9.2639000000002e-05, 9.266699999999767e-05, 9.115300000000007e-05, 9.082000000000187e-05, 9.13199999999989e-05, 9.13199999999989e-05, 9.086099999999764e-05, 9.229099999999782e-05, 9.124999999999758e-05, 9.26529999999981e-05, 9.18329999999995e-05, 9.21390000000015e-05, 9.198600000000223e-05]</msg>
<status status="PASS" starttime="20201112 09:43:56.230" endtime="20201112 09:43:56.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.225" endtime="20201112 09:43:56.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.235" endtime="20201112 09:43:56.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:56.239" endtime="20201112 09:43:56.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.237" endtime="20201112 09:43:56.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.234" endtime="20201112 09:43:56.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.862" endtime="20201112 09:43:56.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.862" endtime="20201112 09:43:56.260"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.269" endtime="20201112 09:43:56.289"></status>
</kw>
<msg timestamp="20201112 09:43:56.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.267" endtime="20201112 09:43:56.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.291" endtime="20201112 09:43:56.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.293" endtime="20201112 09:43:56.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.265" endtime="20201112 09:43:56.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.263" endtime="20201112 09:43:56.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.303" endtime="20201112 09:43:56.592"></status>
</kw>
<msg timestamp="20201112 09:43:56.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023068694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023161389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.301" endtime="20201112 09:43:56.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023068694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023161389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.596" endtime="20201112 09:43:56.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.605" endtime="20201112 09:43:56.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.298" endtime="20201112 09:43:56.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.297" endtime="20201112 09:43:56.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:56.612" level="INFO">${RESULT} = [{'time': 0.023161389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.269500000000028e-05, 'source_diff': 9.269500000000028e-05}, {'time': 0.023269403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:56.608" endtime="20201112 09:43:56.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:56.625" level="INFO">${ACCURACY} = {'diff': [9.269500000000028e-05, 9.43200000000019e-05, 9.297300000000314e-05, 9.36529999999991e-05, 9.41659999999997e-05, 9.4333000000002e-05, 9.348600000000026e-05, 9.381900000000193e-05, 9.431899999...</msg>
<status status="PASS" starttime="20201112 09:43:56.613" endtime="20201112 09:43:56.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.630" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 09:43:56.629" endtime="20201112 09:43:56.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.633" level="INFO">VALUE: [9.269500000000028e-05, 9.43200000000019e-05, 9.297300000000314e-05, 9.36529999999991e-05, 9.41659999999997e-05, 9.4333000000002e-05, 9.348600000000026e-05, 9.381900000000193e-05, 9.431899999999896e-05, 9.41529999999996e-05, 9.363899999999953e-05, 9.28200000000004e-05, 9.416699999999917e-05, 9.333400000000047e-05, 9.33200000000009e-05, 9.348600000000026e-05, 9.280500000000136e-05, 9.455599999999911e-05, 9.36529999999991e-05, 9.445799999999865e-05, 9.302800000000194e-05, 9.337499999999971e-05, 9.31529999999986e-05, 9.280600000000083e-05, 9.286099999999964e-05, 9.326399999999915e-05, 9.349999999999983e-05, 9.400000000000033e-05, 9.29720000000002e-05, 9.36529999999991e-05, 9.46530000000001e-05, 9.348600000000026e-05, 9.398600000000076e-05, 9.400000000000033e-05, 9.38339999999975e-05, 9.315199999999912e-05, 9.462500000000096e-05, 9.383299999999803e-05, 9.46530000000001e-05, 9.466699999999967e-05, 9.3333000000001e-05, 9.299999999999933e-05, 9.398600000000076e-05, 9.431999999999843e-05, 9.347300000000017e-05, 9.4333000000002e-05, 9.315199999999912e-05, 9.447199999999822e-05, 9.399999999999686e-05, 9.294400000000105e-05]</msg>
<status status="PASS" starttime="20201112 09:43:56.631" endtime="20201112 09:43:56.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.626" endtime="20201112 09:43:56.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.636" endtime="20201112 09:43:56.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:56.640" endtime="20201112 09:43:56.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.638" endtime="20201112 09:43:56.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.635" endtime="20201112 09:43:56.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.261" endtime="20201112 09:43:56.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.260" endtime="20201112 09:43:56.661"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.670" endtime="20201112 09:43:56.691"></status>
</kw>
<msg timestamp="20201112 09:43:56.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.668" endtime="20201112 09:43:56.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.693" endtime="20201112 09:43:56.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.695" endtime="20201112 09:43:56.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.666" endtime="20201112 09:43:56.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.664" endtime="20201112 09:43:56.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.705" endtime="20201112 09:43:56.992"></status>
</kw>
<msg timestamp="20201112 09:43:56.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022848722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.703" endtime="20201112 09:43:56.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022848722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.997" endtime="20201112 09:43:57.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.006" endtime="20201112 09:43:57.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.700" endtime="20201112 09:43:57.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.698" endtime="20201112 09:43:57.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:57.013" level="INFO">${RESULT} = [{'time': 0.022848722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.466599999999672e-05, 'source_diff': 9.466599999999672e-05}, {'time': 0.022950722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:57.009" endtime="20201112 09:43:57.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:57.026" level="INFO">${ACCURACY} = {'diff': [9.466599999999672e-05, 9.494399999999958e-05, 9.516700000000017e-05, 9.552800000000097e-05, 9.537500000000171e-05, 9.581999999999993e-05, 9.626400000000215e-05, 9.600000000000233e-05, 9.6139...</msg>
<status status="PASS" starttime="20201112 09:43:57.014" endtime="20201112 09:43:57.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.031" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 09:43:57.030" endtime="20201112 09:43:57.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.034" level="INFO">VALUE: [9.466599999999672e-05, 9.494399999999958e-05, 9.516700000000017e-05, 9.552800000000097e-05, 9.537500000000171e-05, 9.581999999999993e-05, 9.626400000000215e-05, 9.600000000000233e-05, 9.613900000000203e-05, 9.666599999999873e-05, 9.599999999999886e-05, 9.518000000000026e-05, 9.648600000000326e-05, 9.580500000000089e-05, 9.581900000000046e-05, 9.663899999999906e-05, 9.64859999999998e-05, 9.613899999999856e-05, 9.581999999999993e-05, 9.481900000000293e-05, 9.613800000000255e-05, 9.612499999999899e-05, 9.583300000000003e-05, 9.530500000000039e-05, 9.61530000000016e-05, 9.64859999999998e-05, 9.530599999999986e-05, 9.61660000000017e-05, 9.516700000000017e-05, 9.518000000000026e-05, 9.600000000000233e-05, 9.600000000000233e-05, 9.56530000000011e-05, 9.64859999999998e-05, 9.531899999999996e-05, 9.645800000000065e-05, 9.483400000000197e-05, 9.500000000000133e-05, 9.622199999999997e-05, 9.66530000000021e-05, 9.651399999999893e-05, 9.615200000000212e-05, 9.547199999999922e-05, 9.559699999999935e-05, 9.669500000000081e-05, 9.540300000000085e-05, 9.6334e-05, 9.549999999999836e-05, 9.663899999999906e-05, 9.581999999999993e-05]</msg>
<status status="PASS" starttime="20201112 09:43:57.032" endtime="20201112 09:43:57.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.027" endtime="20201112 09:43:57.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.037" endtime="20201112 09:43:57.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:57.041" endtime="20201112 09:43:57.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.039" endtime="20201112 09:43:57.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.036" endtime="20201112 09:43:57.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.662" endtime="20201112 09:43:57.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.661" endtime="20201112 09:43:57.062"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.071" endtime="20201112 09:43:57.091"></status>
</kw>
<msg timestamp="20201112 09:43:57.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.069" endtime="20201112 09:43:57.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.093" endtime="20201112 09:43:57.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.095" endtime="20201112 09:43:57.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.067" endtime="20201112 09:43:57.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.064" endtime="20201112 09:43:57.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.105" endtime="20201112 09:43:57.392"></status>
</kw>
<msg timestamp="20201112 09:43:57.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023086097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023184639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.103" endtime="20201112 09:43:57.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023086097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023184639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.396" endtime="20201112 09:43:57.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.405" endtime="20201112 09:43:57.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.100" endtime="20201112 09:43:57.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.099" endtime="20201112 09:43:57.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:57.412" level="INFO">${RESULT} = [{'time': 0.023184639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.854200000000007e-05, 'source_diff': 9.854200000000007e-05}, {'time': 0.023286694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:57.408" endtime="20201112 09:43:57.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:57.426" level="INFO">${ACCURACY} = {'diff': [9.854200000000007e-05, 9.769399999999887e-05, 9.807000000000218e-05, 9.782000000000193e-05, 9.865300000000063e-05, 9.865199999999769e-05, 9.713899999999956e-05, 9.76669999999992e-05, 9.78470...</msg>
<status status="PASS" starttime="20201112 09:43:57.413" endtime="20201112 09:43:57.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.431" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 09:43:57.430" endtime="20201112 09:43:57.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.433" level="INFO">VALUE: [9.854200000000007e-05, 9.769399999999887e-05, 9.807000000000218e-05, 9.782000000000193e-05, 9.865300000000063e-05, 9.865199999999769e-05, 9.713899999999956e-05, 9.76669999999992e-05, 9.78470000000016e-05, 9.718100000000174e-05, 9.79860000000013e-05, 9.84860000000018e-05, 9.765299999999963e-05, 9.748700000000027e-05, 9.748700000000027e-05, 9.84999999999979e-05, 9.726399999999968e-05, 9.680499999999842e-05, 9.865300000000063e-05, 9.815300000000013e-05, 9.78059999999989e-05, 9.680600000000136e-05, 9.702699999999953e-05, 9.865300000000063e-05, 9.7334000000001e-05, 9.851399999999746e-05, 9.812499999999752e-05, 9.763900000000006e-05, 9.865300000000063e-05, 9.831899999999949e-05, 9.732000000000143e-05, 9.78470000000016e-05, 9.76669999999992e-05, 9.765299999999963e-05, 9.711100000000042e-05, 9.727699999999978e-05, 9.798599999999782e-05, 9.79860000000013e-05, 9.713899999999956e-05, 9.731899999999849e-05, 9.76669999999992e-05, 9.827800000000025e-05, 9.68340000000005e-05, 9.69860000000003e-05, 9.782000000000193e-05, 9.79730000000012e-05, 9.729099999999935e-05, 9.765200000000016e-05, 9.781899999999899e-05, 9.715299999999913e-05]</msg>
<status status="PASS" starttime="20201112 09:43:57.432" endtime="20201112 09:43:57.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.427" endtime="20201112 09:43:57.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.437" endtime="20201112 09:43:57.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:57.441" endtime="20201112 09:43:57.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.439" endtime="20201112 09:43:57.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.435" endtime="20201112 09:43:57.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.063" endtime="20201112 09:43:57.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.062" endtime="20201112 09:43:57.462"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.471" endtime="20201112 09:43:57.490"></status>
</kw>
<msg timestamp="20201112 09:43:57.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.469" endtime="20201112 09:43:57.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.492" endtime="20201112 09:43:57.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.495" endtime="20201112 09:43:57.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.466" endtime="20201112 09:43:57.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.464" endtime="20201112 09:43:57.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.504" endtime="20201112 09:43:57.792"></status>
</kw>
<msg timestamp="20201112 09:43:57.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022804625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022903792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.502" endtime="20201112 09:43:57.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022804625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022903792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.796" endtime="20201112 09:43:57.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.804" endtime="20201112 09:43:57.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.500" endtime="20201112 09:43:57.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.498" endtime="20201112 09:43:57.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:57.811" level="INFO">${RESULT} = [{'time': 0.022903792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.91670000000007e-05, 'source_diff': 9.91670000000007e-05}, {'time': 0.023017792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:57.808" endtime="20201112 09:43:57.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:57.825" level="INFO">${ACCURACY} = {'diff': [9.91670000000007e-05, 0.00010061100000000045, 9.99999999999994e-05, 9.981900000000099e-05, 9.913900000000156e-05, 9.95280000000015e-05, 9.94860000000028e-05, 9.969500000000034e-05, 9.9639000...</msg>
<status status="PASS" starttime="20201112 09:43:57.812" endtime="20201112 09:43:57.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.830" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 09:43:57.829" endtime="20201112 09:43:57.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.832" level="INFO">VALUE: [9.91670000000007e-05, 0.00010061100000000045, 9.99999999999994e-05, 9.981900000000099e-05, 9.913900000000156e-05, 9.95280000000015e-05, 9.94860000000028e-05, 9.969500000000034e-05, 9.963900000000206e-05, 9.99999999999994e-05, 9.91670000000007e-05, 0.00010065299999999916, 0.00010015299999999866, 9.897199999999926e-05, 9.909699999999938e-05, 9.880500000000042e-05, 9.948599999999932e-05, 9.915300000000113e-05, 9.901400000000143e-05, 9.983400000000003e-05, 0.00010015299999999866, 9.883399999999903e-05, 0.00010011199999999942, 0.00010065199999999969, 9.970800000000044e-05, 9.931900000000049e-05, 0.00010031900000000149, 9.915299999999766e-05, 9.963899999999859e-05, 0.00010013899999999909, 9.983400000000003e-05, 9.977700000000228e-05, 9.915300000000113e-05, 9.981900000000099e-05, 0.00010030499999999845, 0.00010065299999999916, 0.00010042999999999858, 9.977800000000175e-05, 9.931999999999996e-05, 0.0001001670000000017, 0.0001006670000000022, 0.00010015300000000213, 0.00010033300000000106, 0.00010016599999999876, 0.00010033299999999759, 0.00010065299999999916, 9.927799999999778e-05, 9.881899999999999e-05, 0.0001001670000000017, 9.976399999999871e-05]</msg>
<status status="PASS" starttime="20201112 09:43:57.831" endtime="20201112 09:43:57.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.826" endtime="20201112 09:43:57.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.837" endtime="20201112 09:43:57.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:57.841" endtime="20201112 09:43:57.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.839" endtime="20201112 09:43:57.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.835" endtime="20201112 09:43:57.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.463" endtime="20201112 09:43:57.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.462" endtime="20201112 09:43:57.862"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.871" endtime="20201112 09:43:57.891"></status>
</kw>
<msg timestamp="20201112 09:43:57.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.869" endtime="20201112 09:43:57.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.892" endtime="20201112 09:43:57.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.895" endtime="20201112 09:43:57.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.867" endtime="20201112 09:43:57.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.864" endtime="20201112 09:43:57.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.904" endtime="20201112 09:43:58.193"></status>
</kw>
<msg timestamp="20201112 09:43:58.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02294125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023043111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:57.903" endtime="20201112 09:43:58.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02294125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023043111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:58.197" endtime="20201112 09:43:58.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.205" endtime="20201112 09:43:58.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.900" endtime="20201112 09:43:58.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.898" endtime="20201112 09:43:58.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:58.212" level="INFO">${RESULT} = [{'time': 0.023043111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001018610000000017, 'source_diff': 0.0001018610000000017}, {'time': 0.023159125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:58.209" endtime="20201112 09:43:58.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:58.226" level="INFO">${ACCURACY} = {'diff': [0.0001018610000000017, 0.00010213899999999762, 0.00010234699999999916, 0.00010149999999999743, 0.00010148600000000133, 0.00010236099999999873, 0.00010115300000000313, 0.00010115200000000019,...</msg>
<status status="PASS" starttime="20201112 09:43:58.213" endtime="20201112 09:43:58.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.231" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 09:43:58.230" endtime="20201112 09:43:58.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.233" level="INFO">VALUE: [0.0001018610000000017, 0.00010213899999999762, 0.00010234699999999916, 0.00010149999999999743, 0.00010148600000000133, 0.00010236099999999873, 0.00010115300000000313, 0.00010115200000000019, 0.00010163900000000059, 0.000101416, 0.0001008610000000007, 0.00010108300000000181, 0.00010198600000000183, 0.00010084799999999713, 0.00010165300000000016, 0.00010230599999999992, 0.000101819999999999, 0.00010247199999999929, 0.00010083299999999809, 0.00010230500000000045, 0.00010081899999999852, 0.00010226400000000122, 0.00010098600000000083, 0.0001023480000000021, 0.00010133399999999806, 0.00010266700000000073, 0.00010115299999999966, 0.00010115200000000019, 0.00010134700000000163, 0.00010119499999999837, 0.00010266699999999726, 0.00010131899999999902, 0.0001010000000000004, 0.00010113900000000009, 0.00010116599999999976, 0.0001010000000000004, 0.00010183299999999909, 0.00010083300000000156, 0.00010081899999999852, 0.00010129100000000335, 0.00010131899999999902, 0.00010163900000000059, 0.00010215299999999719, 0.00010115299999999966, 0.0001013060000000024, 0.00010213899999999762, 0.00010131900000000249, 0.0001018610000000017, 0.00010166600000000026, 0.00010098600000000083]</msg>
<status status="PASS" starttime="20201112 09:43:58.232" endtime="20201112 09:43:58.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.227" endtime="20201112 09:43:58.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.241" endtime="20201112 09:43:58.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:58.244" endtime="20201112 09:43:58.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.243" endtime="20201112 09:43:58.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.239" endtime="20201112 09:43:58.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.863" endtime="20201112 09:43:58.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.862" endtime="20201112 09:43:58.265"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.274" endtime="20201112 09:43:58.294"></status>
</kw>
<msg timestamp="20201112 09:43:58.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.273" endtime="20201112 09:43:58.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.296" endtime="20201112 09:43:58.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.298" endtime="20201112 09:43:58.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.270" endtime="20201112 09:43:58.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.268" endtime="20201112 09:43:58.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.308" endtime="20201112 09:43:58.595"></status>
</kw>
<msg timestamp="20201112 09:43:58.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022716333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.306" endtime="20201112 09:43:58.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022716333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.600" endtime="20201112 09:43:58.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.608" endtime="20201112 09:43:58.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.304" endtime="20201112 09:43:58.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.302" endtime="20201112 09:43:58.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:58.615" level="INFO">${RESULT} = [{'time': 0.022819528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010319500000000037, 'source_diff': 0.00010319500000000037}, {'time': 0.022937542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:58.612" endtime="20201112 09:43:58.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:58.629" level="INFO">${ACCURACY} = {'diff': [0.00010319500000000037, 0.0001042499999999967, 0.00010316600000000176, 0.00010280499999999748, 0.00010399999999999993, 0.00010313899999999862, 0.000103513999999999, 0.00010276399999999825, 0...</msg>
<status status="PASS" starttime="20201112 09:43:58.616" endtime="20201112 09:43:58.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.633" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 09:43:58.632" endtime="20201112 09:43:58.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.636" level="INFO">VALUE: [0.00010319500000000037, 0.0001042499999999967, 0.00010316600000000176, 0.00010280499999999748, 0.00010399999999999993, 0.00010313899999999862, 0.000103513999999999, 0.00010276399999999825, 0.00010466699999999926, 0.000103820000000001, 0.00010365299999999869, 0.0001043339999999976, 0.00010448699999999686, 0.00010465200000000022, 0.00010298600000000283, 0.00010386100000000023, 0.00010422300000000051, 0.00010447200000000129, 0.00010434699999999769, 0.00010399999999999993, 0.00010297299999999926, 0.00010466699999999926, 0.00010366599999999879, 0.00010277699999999834, 0.00010284699999999966, 0.00010411100000000048, 0.00010316700000000123, 0.00010315300000000166, 0.0001028619999999987, 0.00010399999999999993, 0.00010299999999999893, 0.00010431999999999803, 0.00010465199999999675, 0.00010379100000000238, 0.00010366699999999826, 0.0001036810000000013, 0.00010362499999999955, 0.00010294500000000012, 0.00010466699999999926, 0.00010368099999999783, 0.0001030000000000024, 0.00010331900000000102, 0.00010466699999999926, 0.00010349999999999943, 0.00010381900000000152, 0.00010434700000000116, 0.00010380599999999796, 0.00010433400000000106, 0.00010367999999999836, 0.00010349999999999943]</msg>
<status status="PASS" starttime="20201112 09:43:58.635" endtime="20201112 09:43:58.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.630" endtime="20201112 09:43:58.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.640" endtime="20201112 09:43:58.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:58.643" endtime="20201112 09:43:58.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.642" endtime="20201112 09:43:58.663"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.638" endtime="20201112 09:43:58.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.266" endtime="20201112 09:43:58.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.266" endtime="20201112 09:43:58.664"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.673" endtime="20201112 09:43:58.693"></status>
</kw>
<msg timestamp="20201112 09:43:58.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.672" endtime="20201112 09:43:58.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.694" endtime="20201112 09:43:58.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.697" endtime="20201112 09:43:58.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.669" endtime="20201112 09:43:58.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.667" endtime="20201112 09:43:58.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.706" endtime="20201112 09:43:58.994"></status>
</kw>
<msg timestamp="20201112 09:43:58.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022699028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022805486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.705" endtime="20201112 09:43:58.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022699028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022805486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.998" endtime="20201112 09:43:59.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.007" endtime="20201112 09:43:59.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.702" endtime="20201112 09:43:59.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.700" endtime="20201112 09:43:59.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:59.013" level="INFO">${RESULT} = [{'time': 0.022805486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010645800000000025, 'source_diff': 0.00010645800000000025}, {'time': 0.022917528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:59.010" endtime="20201112 09:43:59.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:59.027" level="INFO">${ACCURACY} = {'diff': [0.00010645800000000025, 0.00010502800000000007, 0.00010547200000000229, 0.0001063339999999996, 0.00010550000000000143, 0.00010512500000000105, 0.00010599999999999846, 0.00010665199999999875,...</msg>
<status status="PASS" starttime="20201112 09:43:59.015" endtime="20201112 09:43:59.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.032" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 09:43:59.031" endtime="20201112 09:43:59.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.034" level="INFO">VALUE: [0.00010645800000000025, 0.00010502800000000007, 0.00010547200000000229, 0.0001063339999999996, 0.00010550000000000143, 0.00010512500000000105, 0.00010599999999999846, 0.00010665199999999875, 0.00010598599999999889, 0.00010581900000000005, 0.0001052360000000016, 0.00010581900000000005, 0.00010563899999999765, 0.00010597199999999932, 0.00010648599999999939, 0.00010649999999999896, 0.00010661099999999951, 0.00010647199999999982, 0.00010650000000000243, 0.00010544399999999968, 0.00010505600000000268, 0.00010550000000000143, 0.0001050550000000032, 0.00010534800000000163, 0.00010663900000000212, 0.00010516600000000029, 0.00010631900000000055, 0.000106514000000002, 0.00010572299999999854, 0.00010615300000000119, 0.00010598600000000236, 0.0001050140000000005, 0.00010611099999999901, 0.0001053200000000025, 0.00010630500000000098, 0.00010505600000000268, 0.00010481900000000252, 0.00010583299999999962, 0.00010631900000000055, 0.000105514000000001, 0.00010549999999999796, 0.00010566700000000026, 0.0001063339999999996, 0.00010662499999999908, 0.00010568000000000036, 0.00010598599999999889, 0.00010645800000000025, 0.00010515300000000019, 0.00010531899999999955, 0.00010581900000000005]</msg>
<status status="PASS" starttime="20201112 09:43:59.033" endtime="20201112 09:43:59.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.028" endtime="20201112 09:43:59.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.038" endtime="20201112 09:43:59.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:59.042" endtime="20201112 09:43:59.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.040" endtime="20201112 09:43:59.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.036" endtime="20201112 09:43:59.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.665" endtime="20201112 09:43:59.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.665" endtime="20201112 09:43:59.063"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.072" endtime="20201112 09:43:59.092"></status>
</kw>
<msg timestamp="20201112 09:43:59.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.070" endtime="20201112 09:43:59.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.093" endtime="20201112 09:43:59.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.096" endtime="20201112 09:43:59.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.067" endtime="20201112 09:43:59.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.065" endtime="20201112 09:43:59.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.105" endtime="20201112 09:43:59.392"></status>
</kw>
<msg timestamp="20201112 09:43:59.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022753528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.104" endtime="20201112 09:43:59.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022753528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.396" endtime="20201112 09:43:59.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.405" endtime="20201112 09:43:59.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.101" endtime="20201112 09:43:59.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.099" endtime="20201112 09:43:59.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:59.412" level="INFO">${RESULT} = [{'time': 0.022861236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001077080000000015, 'source_diff': 0.0001077080000000015}, {'time': 0.02297325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:59.408" endtime="20201112 09:43:59.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:59.425" level="INFO">${ACCURACY} = {'diff': [0.0001077080000000015, 0.00010768100000000183, 0.00010731900000000155, 0.0001073340000000006, 0.00010682000000000053, 0.00010773600000000064, 0.00010813900000000015, 0.00010865300000000022, ...</msg>
<status status="PASS" starttime="20201112 09:43:59.413" endtime="20201112 09:43:59.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.430" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 09:43:59.429" endtime="20201112 09:43:59.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.433" level="INFO">VALUE: [0.0001077080000000015, 0.00010768100000000183, 0.00010731900000000155, 0.0001073340000000006, 0.00010682000000000053, 0.00010773600000000064, 0.00010813900000000015, 0.00010865300000000022, 0.00010698599999999989, 0.00010748600000000039, 0.00010816699999999929, 0.00010848600000000139, 0.00010816699999999929, 0.00010851400000000053, 0.00010765300000000269, 0.00010773600000000064, 0.00010681900000000105, 0.00010798600000000089, 0.00010866600000000032, 0.00010795799999999828, 0.00010830499999999951, 0.00010781900000000205, 0.00010737499999999983, 0.00010682000000000053, 0.00010866699999999979, 0.00010854199999999967, 0.00010865199999999728, 0.00010683300000000062, 0.00010765300000000269, 0.00010800000000000046, 0.00010731899999999808, 0.00010848600000000139, 0.00010848600000000139, 0.00010749999999999996, 0.00010837500000000083, 0.00010748600000000039, 0.00010834700000000169, 0.00010727799999999885, 0.00010698599999999989, 0.00010733300000000112, 0.00010765299999999922, 0.00010716700000000176, 0.00010765299999999922, 0.00010850000000000096, 0.0001085280000000001, 0.00010731899999999808, 0.00010733300000000112, 0.00010680500000000148, 0.00010683300000000062, 0.00010863900000000065]</msg>
<status status="PASS" starttime="20201112 09:43:59.431" endtime="20201112 09:43:59.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.426" endtime="20201112 09:43:59.434"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.436" endtime="20201112 09:43:59.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:59.440" endtime="20201112 09:43:59.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.438" endtime="20201112 09:43:59.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.435" endtime="20201112 09:43:59.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.064" endtime="20201112 09:43:59.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.063" endtime="20201112 09:43:59.461"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.470" endtime="20201112 09:43:59.490"></status>
</kw>
<msg timestamp="20201112 09:43:59.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.468" endtime="20201112 09:43:59.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.492" endtime="20201112 09:43:59.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.494" endtime="20201112 09:43:59.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.466" endtime="20201112 09:43:59.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.464" endtime="20201112 09:43:59.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.504" endtime="20201112 09:43:59.793"></status>
</kw>
<msg timestamp="20201112 09:43:59.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023281347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023390583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.502" endtime="20201112 09:43:59.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023281347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023390583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.797" endtime="20201112 09:43:59.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.805" endtime="20201112 09:43:59.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.500" endtime="20201112 09:43:59.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.498" endtime="20201112 09:43:59.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:59.812" level="INFO">${RESULT} = [{'time': 0.023390583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010923599999999867, 'source_diff': 0.00010923599999999867}, {'time': 0.023508556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:59.809" endtime="20201112 09:43:59.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:59.826" level="INFO">${ACCURACY} = {'diff': [0.00010923599999999867, 0.00011048699999999939, 0.00011065199999999928, 0.00010897199999999885, 0.00011048599999999992, 0.00010912500000000158, 0.00011047200000000035, 0.00010879199999999992...</msg>
<status status="PASS" starttime="20201112 09:43:59.813" endtime="20201112 09:43:59.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.831" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 09:43:59.830" endtime="20201112 09:43:59.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.833" level="INFO">VALUE: [0.00010923599999999867, 0.00011048699999999939, 0.00011065199999999928, 0.00010897199999999885, 0.00011048599999999992, 0.00010912500000000158, 0.00011047200000000035, 0.00010879199999999992, 0.00010948599999999892, 0.00011006899999999736, 0.00010916600000000082, 0.00010974999999999874, 0.00010930500000000051, 0.00010981900000000058, 0.00010915299999999725, 0.00010948599999999892, 0.00011066699999999832, 0.00010931999999999956, 0.00011049999999999949, 0.00011047299999999982, 0.00010997199999999985, 0.00011015199999999878, 0.00010915300000000072, 0.00011061100000000004, 0.00011065300000000222, 0.00010898600000000189, 0.00010936099999999879, 0.00010931999999999956, 0.00010931999999999956, 0.00010980500000000101, 0.00010930500000000051, 0.00011016700000000129, 0.00010881899999999958, 0.00010982000000000006, 0.00010999999999999899, 0.00010995899999999975, 0.00010998599999999942, 0.00011048599999999992, 0.00010915200000000125, 0.00010916700000000029, 0.00010927800000000085, 0.00011054200000000167, 0.00011047200000000035, 0.00010880599999999949, 0.00010950000000000196, 0.00011062499999999961, 0.0001095280000000011, 0.00010931900000000008, 0.00011048599999999992, 0.00010995800000000028]</msg>
<status status="PASS" starttime="20201112 09:43:59.832" endtime="20201112 09:43:59.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.827" endtime="20201112 09:43:59.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.837" endtime="20201112 09:43:59.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:59.841" endtime="20201112 09:43:59.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.839" endtime="20201112 09:43:59.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.835" endtime="20201112 09:43:59.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.462" endtime="20201112 09:43:59.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.461" endtime="20201112 09:43:59.861"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.872" endtime="20201112 09:43:59.891"></status>
</kw>
<msg timestamp="20201112 09:43:59.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.870" endtime="20201112 09:43:59.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.893" endtime="20201112 09:43:59.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.895" endtime="20201112 09:43:59.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.867" endtime="20201112 09:43:59.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.864" endtime="20201112 09:43:59.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.904" endtime="20201112 09:44:00.211"></status>
</kw>
<msg timestamp="20201112 09:44:00.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023926125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024037819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.903" endtime="20201112 09:44:00.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023926125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024037819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.215" endtime="20201112 09:44:00.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.223" endtime="20201112 09:44:00.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.900" endtime="20201112 09:44:00.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.898" endtime="20201112 09:44:00.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:00.230" level="INFO">${RESULT} = [{'time': 0.024037819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011169399999999899, 'source_diff': 0.00011169399999999899}, {'time': 0.024161819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:00.227" endtime="20201112 09:44:00.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:00.243" level="INFO">${ACCURACY} = {'diff': [0.00011169399999999899, 0.00011130500000000251, 0.00011231899999999961, 0.00011234700000000222, 0.00011081899999999811, 0.00011151400000000006, 0.00011150000000000049, 0.00011248600000000192...</msg>
<status status="PASS" starttime="20201112 09:44:00.231" endtime="20201112 09:44:00.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.248" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 09:44:00.247" endtime="20201112 09:44:00.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.250" level="INFO">VALUE: [0.00011169399999999899, 0.00011130500000000251, 0.00011231899999999961, 0.00011234700000000222, 0.00011081899999999811, 0.00011151400000000006, 0.00011150000000000049, 0.00011248600000000192, 0.00011082000000000106, 0.00011112500000000011, 0.00011231899999999961, 0.00011165200000000028, 0.00011080500000000201, 0.00011230500000000004, 0.00011081900000000158, 0.00011148600000000092, 0.00011248599999999845, 0.00011098599999999695, 0.00011112500000000011, 0.00011080499999999854, 0.00011131900000000208, 0.00011183299999999868, 0.00011269500000000293, 0.00011151400000000006, 0.0001127220000000026, 0.00011247199999999888, 0.00011200000000000099, 0.00011148700000000039, 0.00011195799999999881, 0.00011148600000000092, 0.00011265300000000075, 0.00011129199999999895, 0.00011147200000000135, 0.00011197200000000185, 0.00011165299999999975, 0.00011230599999999952, 0.00011181999999999859, 0.00011133300000000165, 0.00011165200000000028, 0.00011079100000000244, 0.00011098600000000042, 0.00011247199999999888, 0.00011197199999999838, 0.00011244499999999921, 0.00011165299999999975, 0.00011163900000000018, 0.00011176400000000031, 0.00011265199999999781, 0.00011162500000000061, 0.00011248599999999845]</msg>
<status status="PASS" starttime="20201112 09:44:00.249" endtime="20201112 09:44:00.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.244" endtime="20201112 09:44:00.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.254" endtime="20201112 09:44:00.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:00.257" endtime="20201112 09:44:00.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.256" endtime="20201112 09:44:00.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.252" endtime="20201112 09:44:00.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.863" endtime="20201112 09:44:00.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.862" endtime="20201112 09:44:00.278"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.287" endtime="20201112 09:44:00.307"></status>
</kw>
<msg timestamp="20201112 09:44:00.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.285" endtime="20201112 09:44:00.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.309" endtime="20201112 09:44:00.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.311" endtime="20201112 09:44:00.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.283" endtime="20201112 09:44:00.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.281" endtime="20201112 09:44:00.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.320" endtime="20201112 09:44:00.608"></status>
</kw>
<msg timestamp="20201112 09:44:00.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022474208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.319" endtime="20201112 09:44:00.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022474208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.612" endtime="20201112 09:44:00.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.620" endtime="20201112 09:44:00.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.316" endtime="20201112 09:44:00.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.314" endtime="20201112 09:44:00.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:00.626" level="INFO">${RESULT} = [{'time': 0.022474208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011354099999999825, 'source_diff': 0.00011354099999999825}, {'time': 0.022598222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:00.623" endtime="20201112 09:44:00.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:00.640" level="INFO">${ACCURACY} = {'diff': [0.00011354099999999825, 0.00011280500000000054, 0.00011431900000000161, 0.00011334699999999975, 0.00011365300000000175, 0.0001143619999999998, 0.00011366699999999785, 0.00011365299999999828,...</msg>
<status status="PASS" starttime="20201112 09:44:00.627" endtime="20201112 09:44:00.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.644" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 09:44:00.643" endtime="20201112 09:44:00.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.647" level="INFO">VALUE: [0.00011354099999999825, 0.00011280500000000054, 0.00011431900000000161, 0.00011334699999999975, 0.00011365300000000175, 0.0001143619999999998, 0.00011366699999999785, 0.00011365299999999828, 0.00011316599999999788, 0.00011281900000000011, 0.00011398599999999995, 0.00011283299999999968, 0.00011431900000000161, 0.00011415300000000225, 0.00011430599999999805, 0.00011397299999999985, 0.00011363900000000218, 0.00011331900000000061, 0.000114290999999999, 0.00011447200000000088, 0.00011365300000000175, 0.00011313899999999821, 0.00011352799999999816, 0.00011382000000000059, 0.00011466699999999885, 0.00011313899999999821, 0.00011298600000000242, 0.00011300000000000199, 0.00011447200000000088, 0.00011301399999999809, 0.00011448600000000045, 0.00011433400000000066, 0.00011445900000000078, 0.0001138749999999994, 0.00011351399999999859, 0.00011466600000000285, 0.00011466600000000285, 0.00011283299999999968, 0.00011301399999999809, 0.00011433299999999771, 0.00011315300000000125, 0.00011380600000000102, 0.00011383400000000016, 0.00011388899999999896, 0.00011451400000000306, 0.00011305600000000027, 0.00011365300000000175, 0.00011466699999999885, 0.00011361099999999957, 0.00011397200000000038]</msg>
<status status="PASS" starttime="20201112 09:44:00.645" endtime="20201112 09:44:00.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.641" endtime="20201112 09:44:00.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.650" endtime="20201112 09:44:00.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:00.654" endtime="20201112 09:44:00.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.652" endtime="20201112 09:44:00.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.649" endtime="20201112 09:44:00.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.279" endtime="20201112 09:44:00.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.278" endtime="20201112 09:44:00.675"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.683" endtime="20201112 09:44:00.703"></status>
</kw>
<msg timestamp="20201112 09:44:00.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.682" endtime="20201112 09:44:00.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.705" endtime="20201112 09:44:00.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.707" endtime="20201112 09:44:00.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.679" endtime="20201112 09:44:00.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.677" endtime="20201112 09:44:00.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.716" endtime="20201112 09:44:01.004"></status>
</kw>
<msg timestamp="20201112 09:44:01.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022340361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.715" endtime="20201112 09:44:01.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022340361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.008" endtime="20201112 09:44:01.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.016" endtime="20201112 09:44:01.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.712" endtime="20201112 09:44:01.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.710" endtime="20201112 09:44:01.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:01.023" level="INFO">${RESULT} = [{'time': 0.022340361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011519399999999902, 'source_diff': 0.00011519399999999902}, {'time': 0.022470403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:01.019" endtime="20201112 09:44:01.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:01.036" level="INFO">${ACCURACY} = {'diff': [0.00011519399999999902, 0.00011548600000000145, 0.00011583400000000216, 0.00011604100000000075, 0.00011622199999999916, 0.00011581899999999964, 0.00011598600000000195, 0.00011517999999999945...</msg>
<status status="PASS" starttime="20201112 09:44:01.024" endtime="20201112 09:44:01.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.040" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 09:44:01.039" endtime="20201112 09:44:01.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.043" level="INFO">VALUE: [0.00011519399999999902, 0.00011548600000000145, 0.00011583400000000216, 0.00011604100000000075, 0.00011622199999999916, 0.00011581899999999964, 0.00011598600000000195, 0.00011517999999999945, 0.00011665300000000128, 0.00011550000000000102, 0.00011582000000000259, 0.00011632000000000309, 0.0001155689999999994, 0.00011622200000000263, 0.00011479100000000297, 0.00011562499999999767, 0.00011631900000000014, 0.00011633299999999971, 0.00011547199999999841, 0.00011499999999999705, 0.00011532000000000209, 0.00011615300000000078, 0.00011482000000000159, 0.00011631900000000014, 0.00011559699999999853, 0.00011633299999999971, 0.00011565300000000028, 0.00011515299999999978, 0.00011579199999999998, 0.00011515299999999978, 0.00011631999999999962, 0.00011631999999999962, 0.00011584700000000225, 0.00011540300000000003, 0.00011569500000000246, 0.00011488899999999996, 0.00011599999999999805, 0.00011668100000000042, 0.00011531999999999862, 0.00011483400000000116, 0.00011590300000000053, 0.00011481900000000211, 0.00011616600000000088, 0.00011481900000000211, 0.00011647200000000288, 0.00011563900000000071, 0.00011580600000000302, 0.00011647299999999888, 0.00011581999999999912, 0.00011615200000000131]</msg>
<status status="PASS" starttime="20201112 09:44:01.042" endtime="20201112 09:44:01.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.037" endtime="20201112 09:44:01.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.046" endtime="20201112 09:44:01.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.050" endtime="20201112 09:44:01.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.048" endtime="20201112 09:44:01.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.045" endtime="20201112 09:44:01.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.675" endtime="20201112 09:44:01.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.675" endtime="20201112 09:44:01.071"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.079" endtime="20201112 09:44:01.100"></status>
</kw>
<msg timestamp="20201112 09:44:01.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.078" endtime="20201112 09:44:01.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.101" endtime="20201112 09:44:01.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.104" endtime="20201112 09:44:01.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.075" endtime="20201112 09:44:01.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.073" endtime="20201112 09:44:01.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.113" endtime="20201112 09:44:01.402"></status>
</kw>
<msg timestamp="20201112 09:44:01.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022265542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022383931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.111" endtime="20201112 09:44:01.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022265542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022383931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.406" endtime="20201112 09:44:01.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.414" endtime="20201112 09:44:01.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.109" endtime="20201112 09:44:01.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.107" endtime="20201112 09:44:01.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:01.421" level="INFO">${RESULT} = [{'time': 0.022383931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000118389, 'source_diff': 0.000118389}, {'time': 0.022515917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000117666999999...</msg>
<status status="PASS" starttime="20201112 09:44:01.418" endtime="20201112 09:44:01.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:01.434" level="INFO">${ACCURACY} = {'diff': [0.000118389, 0.00011766699999999838, 0.00011859800000000101, 0.00011748699999999945, 0.00011748599999999998, 0.00011698599999999948, 0.00011841599999999966, 0.00011830599999999858, 0.0001180...</msg>
<status status="PASS" starttime="20201112 09:44:01.422" endtime="20201112 09:44:01.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.439" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 09:44:01.438" endtime="20201112 09:44:01.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.441" level="INFO">VALUE: [0.000118389, 0.00011766699999999838, 0.00011859800000000101, 0.00011748699999999945, 0.00011748599999999998, 0.00011698599999999948, 0.00011841599999999966, 0.00011830599999999858, 0.00011800000000000005, 0.00011766699999999838, 0.00011866699999999938, 0.00011844499999999827, 0.00011698599999999948, 0.00011730500000000157, 0.00011798600000000048, 0.00011698599999999948, 0.00011848599999999751, 0.00011833400000000119, 0.00011793100000000167, 0.00011765299999999881, 0.00011715299999999831, 0.00011683300000000021, 0.00011781899999999818, 0.00011754200000000173, 0.00011718100000000092, 0.00011866699999999938, 0.00011801399999999962, 0.00011865299999999981, 0.00011798699999999995, 0.00011848600000000098, 0.0001178049999999986, 0.00011781900000000164, 0.00011731900000000114, 0.0001174439999999978, 0.00011733400000000019, 0.00011783400000000069, 0.00011697299999999938, 0.00011797300000000038, 0.00011680500000000107, 0.00011798600000000048, 0.00011816699999999888, 0.00011716699999999788, 0.00011748599999999998, 0.00011699999999999905, 0.00011818100000000192, 0.00011832000000000162, 0.00011815199999999984, 0.00011813899999999974, 0.00011716699999999788, 0.00011762499999999967]</msg>
<status status="PASS" starttime="20201112 09:44:01.440" endtime="20201112 09:44:01.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.435" endtime="20201112 09:44:01.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.445" endtime="20201112 09:44:01.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.448" endtime="20201112 09:44:01.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.447" endtime="20201112 09:44:01.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.443" endtime="20201112 09:44:01.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.072" endtime="20201112 09:44:01.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.071" endtime="20201112 09:44:01.469"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.478" endtime="20201112 09:44:01.497"></status>
</kw>
<msg timestamp="20201112 09:44:01.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.476" endtime="20201112 09:44:01.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.499" endtime="20201112 09:44:01.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.502" endtime="20201112 09:44:01.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.473" endtime="20201112 09:44:01.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.471" endtime="20201112 09:44:01.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.511" endtime="20201112 09:44:01.798"></status>
</kw>
<msg timestamp="20201112 09:44:01.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.509" endtime="20201112 09:44:01.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.802" endtime="20201112 09:44:01.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.810" endtime="20201112 09:44:01.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.506" endtime="20201112 09:44:01.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.505" endtime="20201112 09:44:01.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:01.817" level="INFO">${RESULT} = [{'time': 0.022244764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011887500000000092, 'source_diff': 0.00011887500000000092}, {'time': 0.022376778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:01.814" endtime="20201112 09:44:01.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:01.830" level="INFO">${ACCURACY} = {'diff': [0.00011887500000000092, 0.00012066700000000138, 0.00011894500000000224, 0.00011998700000000195, 0.00012034699999999982, 0.00011898599999999801, 0.00011884700000000178, 0.00012049999999999908...</msg>
<status status="PASS" starttime="20201112 09:44:01.818" endtime="20201112 09:44:01.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.835" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 09:44:01.834" endtime="20201112 09:44:01.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.837" level="INFO">VALUE: [0.00011887500000000092, 0.00012066700000000138, 0.00011894500000000224, 0.00011998700000000195, 0.00012034699999999982, 0.00011898599999999801, 0.00011884700000000178, 0.00012049999999999908, 0.00012066699999999791, 0.00011997199999999944, 0.00011965300000000081, 0.00011936100000000185, 0.00011881999999999865, 0.00011898600000000148, 0.00011981900000000018, 0.00011981900000000018, 0.00011888800000000102, 0.00011933299999999925, 0.00012033399999999972, 0.00012036100000000285, 0.00011933299999999925, 0.00011916600000000041, 0.00012045800000000037, 0.00011900000000000105, 0.00011963900000000124, 0.00012063900000000224, 0.00011931999999999915, 0.00011915300000000031, 0.00012066700000000138, 0.00012024999999999883, 0.00011883299999999875, 0.00011983299999999975, 0.00011915300000000031, 0.00011966700000000038, 0.00011884699999999832, 0.00012066700000000138, 0.00011998600000000248, 0.00011917999999999998, 0.00011968000000000048, 0.00012051399999999865, 0.00012063899999999877, 0.00011966700000000038, 0.00012016700000000088, 0.00012063899999999877, 0.00011915300000000031, 0.00012013900000000174, 0.00011948700000000145, 0.00012065199999999887, 0.00011948600000000198, 0.00011897200000000191]</msg>
<status status="PASS" starttime="20201112 09:44:01.836" endtime="20201112 09:44:01.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.831" endtime="20201112 09:44:01.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.841" endtime="20201112 09:44:01.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.844" endtime="20201112 09:44:01.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.843" endtime="20201112 09:44:01.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.839" endtime="20201112 09:44:01.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.470" endtime="20201112 09:44:01.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.469" endtime="20201112 09:44:01.865"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.874" endtime="20201112 09:44:01.894"></status>
</kw>
<msg timestamp="20201112 09:44:01.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.872" endtime="20201112 09:44:01.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.895" endtime="20201112 09:44:01.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.898" endtime="20201112 09:44:01.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.869" endtime="20201112 09:44:01.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.867" endtime="20201112 09:44:01.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.908" endtime="20201112 09:44:02.193"></status>
</kw>
<msg timestamp="20201112 09:44:02.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022248181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022369903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.907" endtime="20201112 09:44:02.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022248181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022369903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.197" endtime="20201112 09:44:02.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.206" endtime="20201112 09:44:02.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.904" endtime="20201112 09:44:02.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.902" endtime="20201112 09:44:02.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:02.212" level="INFO">${RESULT} = [{'time': 0.022369903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012172200000000119, 'source_diff': 0.00012172200000000119}, {'time': 0.022503917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:02.209" endtime="20201112 09:44:02.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:02.226" level="INFO">${ACCURACY} = {'diff': [0.00012172200000000119, 0.00012166699999999891, 0.0001216250000000002, 0.00012099999999999958, 0.00012198599999999754, 0.0001213189999999982, 0.00012184700000000132, 0.00012081900000000118, ...</msg>
<status status="PASS" starttime="20201112 09:44:02.213" endtime="20201112 09:44:02.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.230" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 09:44:02.229" endtime="20201112 09:44:02.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.233" level="INFO">VALUE: [0.00012172200000000119, 0.00012166699999999891, 0.0001216250000000002, 0.00012099999999999958, 0.00012198599999999754, 0.0001213189999999982, 0.00012184700000000132, 0.00012081900000000118, 0.0001224860000000015, 0.00012220800000000212, 0.00012151399999999965, 0.0001225129999999977, 0.00012198600000000101, 0.00012101399999999915, 0.00012233299999999878, 0.0001224860000000015, 0.00012233299999999878, 0.00012098600000000001, 0.00012213900000000028, 0.00012200000000000058, 0.00012268, 0.00012167999999999901, 0.00012255599999999936, 0.00012168100000000195, 0.00012115299999999884, 0.00012083400000000022, 0.00012198600000000101, 0.00012154199999999879, 0.0001218189999999987, 0.00012181900000000218, 0.00012122200000000069, 0.00012181900000000218, 0.00012268099999999948, 0.00012183300000000175, 0.00012083400000000022, 0.00012130599999999811, 0.00012183299999999828, 0.00012161100000000064, 0.00012131900000000168, 0.00012216699999999941, 0.00012081900000000118, 0.00012165299999999934, 0.00012118100000000145, 0.00012105499999999839, 0.00012116699999999841, 0.00012194399999999883, 0.0001207639999999989, 0.00012183300000000175, 0.0001216250000000002, 0.00012234700000000182]</msg>
<status status="PASS" starttime="20201112 09:44:02.231" endtime="20201112 09:44:02.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.226" endtime="20201112 09:44:02.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.236" endtime="20201112 09:44:02.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:02.240" endtime="20201112 09:44:02.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.238" endtime="20201112 09:44:02.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.235" endtime="20201112 09:44:02.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.866" endtime="20201112 09:44:02.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.865" endtime="20201112 09:44:02.261"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.269" endtime="20201112 09:44:02.290"></status>
</kw>
<msg timestamp="20201112 09:44:02.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.268" endtime="20201112 09:44:02.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.292" endtime="20201112 09:44:02.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.294" endtime="20201112 09:44:02.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.265" endtime="20201112 09:44:02.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.263" endtime="20201112 09:44:02.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.303" endtime="20201112 09:44:02.590"></status>
</kw>
<msg timestamp="20201112 09:44:02.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022649611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.302" endtime="20201112 09:44:02.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022649611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.594" endtime="20201112 09:44:02.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.602" endtime="20201112 09:44:02.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.299" endtime="20201112 09:44:02.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.297" endtime="20201112 09:44:02.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:02.609" level="INFO">${RESULT} = [{'time': 0.022649611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001240420000000013, 'source_diff': 0.0001240420000000013}, {'time': 0.022781611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:02.605" endtime="20201112 09:44:02.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:02.622" level="INFO">${ACCURACY} = {'diff': [0.0001240420000000013, 0.00012313900000000128, 0.00012398599999999954, 0.00012365300000000135, 0.00012418099999999752, 0.00012316700000000042, 0.0001229999999999981, 0.00012305599999999986, ...</msg>
<status status="PASS" starttime="20201112 09:44:02.610" endtime="20201112 09:44:02.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.626" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 09:44:02.625" endtime="20201112 09:44:02.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.629" level="INFO">VALUE: [0.0001240420000000013, 0.00012313900000000128, 0.00012398599999999954, 0.00012365300000000135, 0.00012418099999999752, 0.00012316700000000042, 0.0001229999999999981, 0.00012305599999999986, 0.0001246389999999993, 0.0001228189999999997, 0.00012447200000000047, 0.00012281999999999918, 0.00012440299999999863, 0.00012366700000000092, 0.00012280500000000014, 0.00012366600000000144, 0.00012365300000000135, 0.00012470900000000062, 0.00012347199999999947, 0.00012413900000000228, 0.00012432000000000068, 0.00012432000000000068, 0.00012447299999999994, 0.00012384699999999985, 0.0001239999999999991, 0.00012365300000000135, 0.00012418099999999752, 0.0001244580000000009, 0.0001244999999999996, 0.00012397299999999944, 0.00012433300000000078, 0.0001233190000000002, 0.00012430500000000164, 0.0001239999999999991, 0.0001239999999999991, 0.00012465299999999888, 0.0001243060000000011, 0.0001238060000000006, 0.000123986000000003, 0.0001234860000000025, 0.00012431899999999774, 0.00012433300000000078, 0.00012352799999999775, 0.0001239999999999991, 0.00012311100000000214, 0.00012345899999999937, 0.00012313900000000128, 0.00012448600000000004, 0.00012347199999999947, 0.00012330500000000064]</msg>
<status status="PASS" starttime="20201112 09:44:02.628" endtime="20201112 09:44:02.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.623" endtime="20201112 09:44:02.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.633" endtime="20201112 09:44:02.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:02.636" endtime="20201112 09:44:02.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.634" endtime="20201112 09:44:02.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.631" endtime="20201112 09:44:02.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.261" endtime="20201112 09:44:02.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.261" endtime="20201112 09:44:02.657"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.665" endtime="20201112 09:44:02.687"></status>
</kw>
<msg timestamp="20201112 09:44:02.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.664" endtime="20201112 09:44:02.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.688" endtime="20201112 09:44:02.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.691" endtime="20201112 09:44:02.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.661" endtime="20201112 09:44:02.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.659" endtime="20201112 09:44:02.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.700" endtime="20201112 09:44:02.988"></status>
</kw>
<msg timestamp="20201112 09:44:02.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022291833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.698" endtime="20201112 09:44:02.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022291833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022416458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.992" endtime="20201112 09:44:03.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.000" endtime="20201112 09:44:03.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.696" endtime="20201112 09:44:03.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.694" endtime="20201112 09:44:03.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.007" level="INFO">${RESULT} = [{'time': 0.022416458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012462499999999974, 'source_diff': 0.00012462499999999974}, {'time': 0.022552472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:03.004" endtime="20201112 09:44:03.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.020" level="INFO">${ACCURACY} = {'diff': [0.00012462499999999974, 0.00012533300000000178, 0.00012515299999999938, 0.00012619499999999909, 0.0001255000000000006, 0.0001253199999999982, 0.00012665300000000088, 0.00012665300000000088, ...</msg>
<status status="PASS" starttime="20201112 09:44:03.008" endtime="20201112 09:44:03.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.025" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.024" endtime="20201112 09:44:03.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.027" level="INFO">VALUE: [0.00012462499999999974, 0.00012533300000000178, 0.00012515299999999938, 0.00012619499999999909, 0.0001255000000000006, 0.0001253199999999982, 0.00012665300000000088, 0.00012665300000000088, 0.00012566599999999997, 0.0001255000000000006, 0.0001263329999999993, 0.00012648600000000204, 0.00012658399999999903, 0.00012548600000000104, 0.00012612499999999777, 0.00012598600000000154, 0.0001263190000000032, 0.00012549999999999714, 0.0001258329999999988, 0.00012633300000000278, 0.00012584699999999838, 0.0001265000000000016, 0.00012616699999999995, 0.0001249589999999974, 0.00012547200000000147, 0.00012598599999999807, 0.0001258329999999988, 0.00012580599999999914, 0.00012532000000000168, 0.0001255000000000006, 0.00012532000000000168, 0.00012516599999999947, 0.0001248190000000017, 0.0001255000000000006, 0.0001253329999999983, 0.00012616699999999995, 0.00012583300000000228, 0.0001248060000000016, 0.00012648600000000204, 0.00012567999999999954, 0.0001255000000000006, 0.00012583300000000228, 0.00012515299999999938, 0.00012634699999999888, 0.00012512500000000024, 0.0001255000000000006, 0.00012647300000000194, 0.00012615300000000038, 0.0001248190000000017, 0.0001265000000000016]</msg>
<status status="PASS" starttime="20201112 09:44:03.026" endtime="20201112 09:44:03.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.021" endtime="20201112 09:44:03.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.031" endtime="20201112 09:44:03.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.034" endtime="20201112 09:44:03.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.033" endtime="20201112 09:44:03.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.029" endtime="20201112 09:44:03.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.658" endtime="20201112 09:44:03.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.657" endtime="20201112 09:44:03.055"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.064" endtime="20201112 09:44:03.085"></status>
</kw>
<msg timestamp="20201112 09:44:03.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.062" endtime="20201112 09:44:03.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.087" endtime="20201112 09:44:03.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.089" endtime="20201112 09:44:03.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.060" endtime="20201112 09:44:03.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.058" endtime="20201112 09:44:03.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.098" endtime="20201112 09:44:03.385"></status>
</kw>
<msg timestamp="20201112 09:44:03.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022443111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.097" endtime="20201112 09:44:03.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022443111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.390" endtime="20201112 09:44:03.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.398" endtime="20201112 09:44:03.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.094" endtime="20201112 09:44:03.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.092" endtime="20201112 09:44:03.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.404" level="INFO">${RESULT} = [{'time': 0.022571639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012852799999999928, 'source_diff': 0.00012852799999999928}, {'time': 0.022707694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:03.401" endtime="20201112 09:44:03.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.418" level="INFO">${ACCURACY} = {'diff': [0.00012852799999999928, 0.0001285269999999998, 0.00012766700000000145, 0.00012833299999999784, 0.00012767999999999807, 0.00012863899999999984, 0.00012798600000000007, 0.0001281529999999989, ...</msg>
<status status="PASS" starttime="20201112 09:44:03.405" endtime="20201112 09:44:03.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.422" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.421" endtime="20201112 09:44:03.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.425" level="INFO">VALUE: [0.00012852799999999928, 0.0001285269999999998, 0.00012766700000000145, 0.00012833299999999784, 0.00012767999999999807, 0.00012863899999999984, 0.00012798600000000007, 0.0001281529999999989, 0.00012765300000000188, 0.0001283200000000012, 0.000126778000000001, 0.00012867999999999907, 0.000128165999999999, 0.00012762499999999927, 0.00012836100000000045, 0.0001268889999999981, 0.00012730600000000064, 0.00012748599999999957, 0.0001268199999999997, 0.0001270139999999982, 0.0001278330000000008, 0.0001286659999999995, 0.0001273330000000003, 0.0001276529999999984, 0.00012765300000000188, 0.00012680600000000014, 0.0001278200000000007, 0.0001285139999999997, 0.00012736099999999945, 0.00012845799999999796, 0.00012698599999999907, 0.00012722199999999975, 0.00012763899999999884, 0.00012848600000000057, 0.00012833400000000078, 0.00012765199999999893, 0.0001269719999999995, 0.00012731900000000074, 0.0001276390000000023, 0.0001279720000000005, 0.00012813899999999934, 0.0001283339999999973, 0.00012748699999999905, 0.0001270000000000021, 0.00012831900000000174, 0.00012731900000000074, 0.00012748599999999957, 0.000127472, 0.0001270000000000021, 0.0001283330000000013]</msg>
<status status="PASS" starttime="20201112 09:44:03.423" endtime="20201112 09:44:03.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.419" endtime="20201112 09:44:03.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.435" endtime="20201112 09:44:03.436"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.439" endtime="20201112 09:44:03.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.437" endtime="20201112 09:44:03.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.433" endtime="20201112 09:44:03.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.056" endtime="20201112 09:44:03.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.055" endtime="20201112 09:44:03.460"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.468" endtime="20201112 09:44:03.490"></status>
</kw>
<msg timestamp="20201112 09:44:03.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.467" endtime="20201112 09:44:03.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.491" endtime="20201112 09:44:03.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.494" endtime="20201112 09:44:03.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.464" endtime="20201112 09:44:03.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.462" endtime="20201112 09:44:03.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.503" endtime="20201112 09:44:03.790"></status>
</kw>
<msg timestamp="20201112 09:44:03.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022396278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022525972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.501" endtime="20201112 09:44:03.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022396278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022525972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.794" endtime="20201112 09:44:03.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.802" endtime="20201112 09:44:03.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.499" endtime="20201112 09:44:03.804"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.497" endtime="20201112 09:44:03.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.808" level="INFO">${RESULT} = [{'time': 0.022525972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012969399999999964, 'source_diff': 0.00012969399999999964}, {'time': 0.022667986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:03.805" endtime="20201112 09:44:03.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.822" level="INFO">${ACCURACY} = {'diff': [0.00012969399999999964, 0.00013031900000000027, 0.00012950000000000114, 0.00012883400000000128, 0.00012948600000000157, 0.000129166, 0.000129166, 0.00012965200000000093, 0.000129194999999998...</msg>
<status status="PASS" starttime="20201112 09:44:03.810" endtime="20201112 09:44:03.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.826" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.825" endtime="20201112 09:44:03.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.829" level="INFO">VALUE: [0.00012969399999999964, 0.00013031900000000027, 0.00012950000000000114, 0.00012883400000000128, 0.00012948600000000157, 0.000129166, 0.000129166, 0.00012965200000000093, 0.00012919499999999862, 0.0001301530000000009, 0.00012956899999999952, 0.00012933400000000178, 0.0001303200000000032, 0.00013049999999999867, 0.00012891599999999975, 0.00012881900000000224, 0.0001301530000000009, 0.00013033299999999984, 0.00012973600000000182, 0.00013072199999999978, 0.0001303469999999994, 0.0001293469999999984, 0.00012884700000000138, 0.0001300140000000012, 0.00012898600000000107, 0.0001296530000000004, 0.00012997199999999903, 0.0001291529999999999, 0.00012950000000000114, 0.0001297769999999976, 0.00012983299999999934, 0.00012981899999999977, 0.0001293049999999997, 0.00012984700000000238, 0.00012930599999999917, 0.00012968099999999955, 0.00012884700000000138, 0.000129166, 0.0001294859999999981, 0.00013013899999999787, 0.0001287500000000004, 0.00013027799999999756, 0.00013016700000000048, 0.00012966699999999998, 0.00012945799999999896, 0.0001288890000000001, 0.0001294859999999981, 0.0001304859999999991, 0.00013033299999999984, 0.00013033299999999984]</msg>
<status status="PASS" starttime="20201112 09:44:03.827" endtime="20201112 09:44:03.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.823" endtime="20201112 09:44:03.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.832" endtime="20201112 09:44:03.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.836" endtime="20201112 09:44:03.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.834" endtime="20201112 09:44:03.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.831" endtime="20201112 09:44:03.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.460" endtime="20201112 09:44:03.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.460" endtime="20201112 09:44:03.857"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.865" endtime="20201112 09:44:03.887"></status>
</kw>
<msg timestamp="20201112 09:44:03.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.864" endtime="20201112 09:44:03.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.889" endtime="20201112 09:44:03.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.891" endtime="20201112 09:44:03.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.861" endtime="20201112 09:44:03.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.859" endtime="20201112 09:44:03.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.900" endtime="20201112 09:44:04.187"></status>
</kw>
<msg timestamp="20201112 09:44:04.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022770097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022901972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.899" endtime="20201112 09:44:04.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022770097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022901972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.191" endtime="20201112 09:44:04.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.199" endtime="20201112 09:44:04.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.896" endtime="20201112 09:44:04.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.894" endtime="20201112 09:44:04.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:04.206" level="INFO">${RESULT} = [{'time': 0.022901972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013187500000000005, 'source_diff': 0.00013187500000000005}, {'time': 0.023047972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:04.202" endtime="20201112 09:44:04.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:04.219" level="INFO">${ACCURACY} = {'diff': [0.00013187500000000005, 0.0001319860000000006, 0.00013133300000000084, 0.0001318340000000008, 0.000131166999999998, 0.00013181999999999777, 0.00013205599999999845, 0.00013183299999999787, 0....</msg>
<status status="PASS" starttime="20201112 09:44:04.207" endtime="20201112 09:44:04.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.223" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 09:44:04.222" endtime="20201112 09:44:04.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.226" level="INFO">VALUE: [0.00013187500000000005, 0.0001319860000000006, 0.00013133300000000084, 0.0001318340000000008, 0.000131166999999998, 0.00013181999999999777, 0.00013205599999999845, 0.00013183299999999787, 0.00013149999999999967, 0.00013233299999999837, 0.00013131900000000127, 0.0001316249999999998, 0.0001326530000000034, 0.00013251300000000077, 0.000132651999999997, 0.00013081900000000077, 0.0001324860000000011, 0.0001316669999999985, 0.00013215299999999944, 0.00013115299999999844, 0.00013250000000000067, 0.0001316799999999986, 0.00013115200000000243, 0.00013081900000000077, 0.0001324999999999972, 0.00013150000000000314, 0.00013118099999999758, 0.0001326669999999995, 0.00013163899999999937, 0.00013181999999999777, 0.00013233299999999837, 0.00013102800000000178, 0.00013261100000000123, 0.00013251400000000024, 0.00013231999999999827, 0.00013132000000000074, 0.00013113899999999887, 0.0001324860000000011, 0.00013097200000000003, 0.00013237500000000055, 0.00013131900000000127, 0.00013149999999999967, 0.00013165299999999894, 0.00013248599999999763, 0.00013255499999999948, 0.00013152800000000228, 0.00013147199999999706, 0.00013265299999999994, 0.0001323189999999988, 0.0001324999999999972]</msg>
<status status="PASS" starttime="20201112 09:44:04.225" endtime="20201112 09:44:04.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.220" endtime="20201112 09:44:04.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.230" endtime="20201112 09:44:04.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:04.233" endtime="20201112 09:44:04.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.231" endtime="20201112 09:44:04.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.228" endtime="20201112 09:44:04.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.858" endtime="20201112 09:44:04.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.857" endtime="20201112 09:44:04.254"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.262" endtime="20201112 09:44:04.283"></status>
</kw>
<msg timestamp="20201112 09:44:04.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.261" endtime="20201112 09:44:04.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.285" endtime="20201112 09:44:04.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.287" endtime="20201112 09:44:04.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.258" endtime="20201112 09:44:04.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.256" endtime="20201112 09:44:04.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.296" endtime="20201112 09:44:04.584"></status>
</kw>
<msg timestamp="20201112 09:44:04.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022394958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.295" endtime="20201112 09:44:04.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022394958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.588" endtime="20201112 09:44:04.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.596" endtime="20201112 09:44:04.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.292" endtime="20201112 09:44:04.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.291" endtime="20201112 09:44:04.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:04.603" level="INFO">${RESULT} = [{'time': 0.022527792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001328340000000018, 'source_diff': 0.0001328340000000018}, {'time': 0.022675806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:04.599" endtime="20201112 09:44:04.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:04.616" level="INFO">${ACCURACY} = {'diff': [0.0001328340000000018, 0.00013331999999999927, 0.0001338190000000003, 0.000133958, 0.000133264000000001, 0.0001338190000000003, 0.00013433300000000037, 0.00013370799999999974, 0.000132805999...</msg>
<status status="PASS" starttime="20201112 09:44:04.604" endtime="20201112 09:44:04.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.620" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 09:44:04.619" endtime="20201112 09:44:04.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.623" level="INFO">VALUE: [0.0001328340000000018, 0.00013331999999999927, 0.0001338190000000003, 0.000133958, 0.000133264000000001, 0.0001338190000000003, 0.00013433300000000037, 0.00013370799999999974, 0.0001328059999999992, 0.00013316599999999706, 0.00013366599999999756, 0.0001328189999999993, 0.00013350000000000167, 0.00013329200000000013, 0.00013283399999999834, 0.00013432000000000027, 0.00013350000000000167, 0.00013305599999999945, 0.00013393000000000085, 0.0001328189999999993, 0.00013348599999999863, 0.0001329860000000016, 0.0001336250000000018, 0.0001343479999999994, 0.0001346670000000015, 0.0001329999999999977, 0.0001336670000000005, 0.00013298599999999813, 0.00013448599999999963, 0.00013351400000000124, 0.0001338479999999989, 0.00013466699999999804, 0.00013400000000000217, 0.00013462499999999933, 0.00013319399999999967, 0.00013400000000000217, 0.0001346389999999989, 0.00013448599999999963, 0.00013465299999999847, 0.00013283399999999834, 0.00013323600000000185, 0.00013333300000000284, 0.00013337500000000155, 0.0001339860000000026, 0.0001336670000000005, 0.0001336670000000005, 0.00013400000000000217, 0.00013347299999999854, 0.00013380499999999726, 0.0001341519999999985]</msg>
<status status="PASS" starttime="20201112 09:44:04.621" endtime="20201112 09:44:04.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.617" endtime="20201112 09:44:04.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.626" endtime="20201112 09:44:04.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:04.630" endtime="20201112 09:44:04.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.628" endtime="20201112 09:44:04.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.625" endtime="20201112 09:44:04.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.255" endtime="20201112 09:44:04.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.254" endtime="20201112 09:44:04.651"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.659" endtime="20201112 09:44:04.681"></status>
</kw>
<msg timestamp="20201112 09:44:04.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.658" endtime="20201112 09:44:04.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.682" endtime="20201112 09:44:04.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.685" endtime="20201112 09:44:04.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.655" endtime="20201112 09:44:04.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.653" endtime="20201112 09:44:04.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.694" endtime="20201112 09:44:04.981"></status>
</kw>
<msg timestamp="20201112 09:44:04.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.693" endtime="20201112 09:44:04.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022281736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.985" endtime="20201112 09:44:04.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.993" endtime="20201112 09:44:04.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.690" endtime="20201112 09:44:04.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.688" endtime="20201112 09:44:04.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:05.000" level="INFO">${RESULT} = [{'time': 0.022418278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001365419999999999, 'source_diff': 0.0001365419999999999}, {'time': 0.022566306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:04.996" endtime="20201112 09:44:05.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:05.013" level="INFO">${ACCURACY} = {'diff': [0.0001365419999999999, 0.00013633400000000184, 0.0001365419999999999, 0.00013651400000000077, 0.00013557000000000152, 0.0001360000000000007, 0.0001361390000000004, 0.0001358199999999983, 0.0...</msg>
<status status="PASS" starttime="20201112 09:44:05.001" endtime="20201112 09:44:05.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.017" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 09:44:05.016" endtime="20201112 09:44:05.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.020" level="INFO">VALUE: [0.0001365419999999999, 0.00013633400000000184, 0.0001365419999999999, 0.00013651400000000077, 0.00013557000000000152, 0.0001360000000000007, 0.0001361390000000004, 0.0001358199999999983, 0.00013520800000000124, 0.000135167000000002, 0.00013567999999999913, 0.00013598600000000113, 0.00013631899999999933, 0.00013551399999999977, 0.0001351389999999994, 0.0001349999999999997, 0.00013497300000000004, 0.0001361390000000004, 0.0001355000000000002, 0.00013666700000000004, 0.00013566699999999904, 0.00013565299999999947, 0.00013582000000000177, 0.0001355840000000011, 0.0001355000000000002, 0.00013617999999999963, 0.00013548600000000063, 0.00013672299999999832, 0.00013480500000000173, 0.0001353199999999978, 0.00013663899999999743, 0.000136167000000003, 0.0001366659999999971, 0.00013517999999999863, 0.0001366939999999997, 0.00013515300000000244, 0.0001348190000000013, 0.00013529199999999866, 0.00013612500000000083, 0.00013520800000000124, 0.00013484700000000044, 0.00013597200000000156, 0.0001356670000000025, 0.0001363329999999989, 0.000135861000000001, 0.0001363610000000015, 0.00013584799999999744, 0.00013538899999999965, 0.00013617999999999963, 0.00013516600000000253]</msg>
<status status="PASS" starttime="20201112 09:44:05.019" endtime="20201112 09:44:05.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.014" endtime="20201112 09:44:05.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.024" endtime="20201112 09:44:05.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.027" endtime="20201112 09:44:05.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.026" endtime="20201112 09:44:05.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.022" endtime="20201112 09:44:05.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.652" endtime="20201112 09:44:05.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.651" endtime="20201112 09:44:05.048"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.057" endtime="20201112 09:44:05.077"></status>
</kw>
<msg timestamp="20201112 09:44:05.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.055" endtime="20201112 09:44:05.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.079" endtime="20201112 09:44:05.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.082" endtime="20201112 09:44:05.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.052" endtime="20201112 09:44:05.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.050" endtime="20201112 09:44:05.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.091" endtime="20201112 09:44:05.378"></status>
</kw>
<msg timestamp="20201112 09:44:05.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022291333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022428222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.089" endtime="20201112 09:44:05.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022291333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022428222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.382" endtime="20201112 09:44:05.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.390" endtime="20201112 09:44:05.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.086" endtime="20201112 09:44:05.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.085" endtime="20201112 09:44:05.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:05.397" level="INFO">${RESULT} = [{'time': 0.022428222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013688900000000115, 'source_diff': 0.00013688900000000115}, {'time': 0.022570236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:05.394" endtime="20201112 09:44:05.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:05.410" level="INFO">${ACCURACY} = {'diff': [0.00013688900000000115, 0.00013716700000000054, 0.0001380139999999988, 0.00013681899999999983, 0.0001378200000000003, 0.00013833400000000037, 0.00013784699999999997, 0.00013702800000000084, ...</msg>
<status status="PASS" starttime="20201112 09:44:05.398" endtime="20201112 09:44:05.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.415" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 09:44:05.414" endtime="20201112 09:44:05.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.417" level="INFO">VALUE: [0.00013688900000000115, 0.00013716700000000054, 0.0001380139999999988, 0.00013681899999999983, 0.0001378200000000003, 0.00013833400000000037, 0.00013784699999999997, 0.00013702800000000084, 0.00013815199999999903, 0.00013765300000000147, 0.00013731900000000033, 0.00013749999999999873, 0.0001375000000000022, 0.0001370000000000017, 0.0001373049999999973, 0.00013776399999999855, 0.00013733300000000337, 0.00013715300000000097, 0.00013786099999999954, 0.0001368199999999993, 0.00013833400000000037, 0.0001377780000000016, 0.0001378330000000004, 0.00013748599999999916, 0.00013815300000000197, 0.00013766700000000104, 0.00013849999999999973, 0.000137652999999998, 0.00013748600000000263, 0.0001368199999999993, 0.000138652000000003, 0.0001383330000000009, 0.0001371529999999975, 0.00013784699999999997, 0.0001376940000000007, 0.0001373199999999998, 0.00013834700000000047, 0.00013748599999999916, 0.00013848600000000016, 0.00013734699999999947, 0.00013799999999999923, 0.0001384859999999967, 0.00013849999999999973, 0.0001369170000000003, 0.00013819399999999774, 0.00013730500000000076, 0.00013815300000000197, 0.00013698599999999866, 0.00013716700000000054, 0.00013849999999999973]</msg>
<status status="PASS" starttime="20201112 09:44:05.416" endtime="20201112 09:44:05.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.411" endtime="20201112 09:44:05.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.421" endtime="20201112 09:44:05.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.424" endtime="20201112 09:44:05.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.423" endtime="20201112 09:44:05.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.419" endtime="20201112 09:44:05.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.049" endtime="20201112 09:44:05.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.048" endtime="20201112 09:44:05.445"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.454" endtime="20201112 09:44:05.475"></status>
</kw>
<msg timestamp="20201112 09:44:05.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.452" endtime="20201112 09:44:05.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.477" endtime="20201112 09:44:05.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.479" endtime="20201112 09:44:05.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.450" endtime="20201112 09:44:05.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.448" endtime="20201112 09:44:05.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.488" endtime="20201112 09:44:05.775"></status>
</kw>
<msg timestamp="20201112 09:44:05.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022366847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.487" endtime="20201112 09:44:05.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022366847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.779" endtime="20201112 09:44:05.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.787" endtime="20201112 09:44:05.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.484" endtime="20201112 09:44:05.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.483" endtime="20201112 09:44:05.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:05.794" level="INFO">${RESULT} = [{'time': 0.022366847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013999999999999777, 'source_diff': 0.00013999999999999777}, {'time': 0.022512875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:05.790" endtime="20201112 09:44:05.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:05.807" level="INFO">${ACCURACY} = {'diff': [0.00013999999999999777, 0.0001388330000000014, 0.00013933299999999843, 0.0001393200000000018, 0.00013880599999999826, 0.0001390139999999998, 0.00014050000000000173, 0.00013986099999999807, 0...</msg>
<status status="PASS" starttime="20201112 09:44:05.795" endtime="20201112 09:44:05.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.812" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 09:44:05.811" endtime="20201112 09:44:05.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.814" level="INFO">VALUE: [0.00013999999999999777, 0.0001388330000000014, 0.00013933299999999843, 0.0001393200000000018, 0.00013880599999999826, 0.0001390139999999998, 0.00014050000000000173, 0.00013986099999999807, 0.000139653, 0.00013954200000000291, 0.00013950000000000073, 0.00013916699999999907, 0.00013877699999999965, 0.00014015199999999756, 0.0001402079999999993, 0.00013933299999999843, 0.000139346999999998, 0.00013945799999999856, 0.0001391810000000021, 0.00014066700000000057, 0.00013898600000000066, 0.0001391659999999996, 0.00013963900000000043, 0.0001396949999999987, 0.00014066700000000057, 0.0001388200000000013, 0.0001391529999999995, 0.00014016599999999713, 0.0001396660000000001, 0.00013898600000000066, 0.00013916699999999907, 0.00014018099999999964, 0.0001393339999999979, 0.00013925000000000048, 0.00013880600000000173, 0.0001388750000000001, 0.000139653, 0.00013968099999999914, 0.00013952799999999987, 0.00013963900000000043, 0.00013916700000000254, 0.00013905499999999904, 0.00013948600000000116, 0.0001391940000000022, 0.00013942999999999942, 0.00013984700000000197, 0.00014040200000000128, 0.00013966699999999957, 0.00013954199999999944, 0.00014000000000000123]</msg>
<status status="PASS" starttime="20201112 09:44:05.813" endtime="20201112 09:44:05.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.808" endtime="20201112 09:44:05.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.818" endtime="20201112 09:44:05.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.821" endtime="20201112 09:44:05.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.819" endtime="20201112 09:44:05.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.816" endtime="20201112 09:44:05.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.446" endtime="20201112 09:44:05.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.445" endtime="20201112 09:44:05.842"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.850" endtime="20201112 09:44:05.872"></status>
</kw>
<msg timestamp="20201112 09:44:05.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.849" endtime="20201112 09:44:05.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.873" endtime="20201112 09:44:05.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.876" endtime="20201112 09:44:05.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.846" endtime="20201112 09:44:05.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.844" endtime="20201112 09:44:05.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.885" endtime="20201112 09:44:06.171"></status>
</kw>
<msg timestamp="20201112 09:44:06.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022656542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.884" endtime="20201112 09:44:06.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022656542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.175" endtime="20201112 09:44:06.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.183" endtime="20201112 09:44:06.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.881" endtime="20201112 09:44:06.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.879" endtime="20201112 09:44:06.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:06.190" level="INFO">${RESULT} = [{'time': 0.022798056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001415140000000023, 'source_diff': 0.0001415140000000023}, {'time': 0.022952097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:06.186" endtime="20201112 09:44:06.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:06.203" level="INFO">${ACCURACY} = {'diff': [0.0001415140000000023, 0.00014227800000000262, 0.00014251399999999984, 0.00014168100000000114, 0.0001414859999999997, 0.0001413339999999999, 0.0001414859999999997, 0.00014166700000000157, 0....</msg>
<status status="PASS" starttime="20201112 09:44:06.191" endtime="20201112 09:44:06.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.208" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 09:44:06.207" endtime="20201112 09:44:06.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.210" level="INFO">VALUE: [0.0001415140000000023, 0.00014227800000000262, 0.00014251399999999984, 0.00014168100000000114, 0.0001414859999999997, 0.0001413339999999999, 0.0001414859999999997, 0.00014166700000000157, 0.00014180499999999832, 0.0001421799999999987, 0.00014199999999999977, 0.00014086099999999907, 0.00014211100000000032, 0.00014099999999999877, 0.00014269399999999877, 0.00014215199999999956, 0.00014265200000000006, 0.00014233299999999796, 0.00014133300000000043, 0.00014181999999999736, 0.00014165299999999853, 0.000141653000000002, 0.00014254199999999898, 0.00014229100000000272, 0.00014245800000000156, 0.00014099999999999877, 0.00014138799999999924, 0.00014199999999999977, 0.000141653000000002, 0.000141347, 0.00014233299999999796, 0.0001419860000000002, 0.00014165299999999853, 0.00014115299999999803, 0.0001423340000000009, 0.0001424860000000007, 0.0001409729999999991, 0.00014166599999999863, 0.00014199999999999977, 0.00014083299999999993, 0.00014183300000000093, 0.00014118100000000064, 0.00014250000000000027, 0.00014215299999999903, 0.00014081900000000036, 0.00014265299999999953, 0.00014083299999999993, 0.00014233300000000143, 0.00014265299999999953, 0.00014201399999999934]</msg>
<status status="PASS" starttime="20201112 09:44:06.209" endtime="20201112 09:44:06.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.204" endtime="20201112 09:44:06.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.214" endtime="20201112 09:44:06.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:06.217" endtime="20201112 09:44:06.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.216" endtime="20201112 09:44:06.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.212" endtime="20201112 09:44:06.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.843" endtime="20201112 09:44:06.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.842" endtime="20201112 09:44:06.238"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.246" endtime="20201112 09:44:06.268"></status>
</kw>
<msg timestamp="20201112 09:44:06.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.245" endtime="20201112 09:44:06.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.270" endtime="20201112 09:44:06.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.272" endtime="20201112 09:44:06.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.242" endtime="20201112 09:44:06.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.240" endtime="20201112 09:44:06.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.281" endtime="20201112 09:44:06.567"></status>
</kw>
<msg timestamp="20201112 09:44:06.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022308917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.280" endtime="20201112 09:44:06.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022308917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.572" endtime="20201112 09:44:06.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.580" endtime="20201112 09:44:06.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.277" endtime="20201112 09:44:06.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.275" endtime="20201112 09:44:06.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:06.586" level="INFO">${RESULT} = [{'time': 0.022308917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001426950000000017, 'source_diff': 0.0001426950000000017}, {'time': 0.022458931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:06.583" endtime="20201112 09:44:06.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:06.600" level="INFO">${ACCURACY} = {'diff': [0.0001426950000000017, 0.00014350000000000127, 0.0001441800000000007, 0.00014398599999999873, 0.0001446670000000011, 0.00014333299999999896, 0.00014365299999999706, 0.00014415300000000103, 0...</msg>
<status status="PASS" starttime="20201112 09:44:06.587" endtime="20201112 09:44:06.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.604" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 09:44:06.603" endtime="20201112 09:44:06.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.607" level="INFO">VALUE: [0.0001426950000000017, 0.00014350000000000127, 0.0001441800000000007, 0.00014398599999999873, 0.0001446670000000011, 0.00014333299999999896, 0.00014365299999999706, 0.00014415300000000103, 0.00014329100000000025, 0.00014333299999999896, 0.00014465200000000206, 0.0001438189999999999, 0.00014333300000000243, 0.00014318099999999917, 0.00014365300000000053, 0.00014416599999999766, 0.00014415200000000156, 0.0001441519999999981, 0.0001434999999999978, 0.00014300000000000077, 0.00014433299999999996, 0.00014333399999999843, 0.00014298700000000067, 0.00014365200000000106, 0.00014434699999999953, 0.00014369499999999924, 0.00014284699999999803, 0.00014301400000000034, 0.00014333399999999843, 0.0001444869999999987, 0.0001441670000000006, 0.00014415299999999756, 0.00014366600000000063, 0.00014398599999999873, 0.00014398599999999873, 0.00014416699999999713, 0.00014451399999999837, 0.00014366600000000063, 0.0001431799999999997, 0.00014465299999999806, 0.00014313900000000046, 0.0001443190000000004, 0.00014318099999999917, 0.0001438479999999985, 0.0001446670000000011, 0.00014286100000000107, 0.00014450000000000227, 0.00014368099999999967, 0.00014286100000000107, 0.0001434999999999978]</msg>
<status status="PASS" starttime="20201112 09:44:06.605" endtime="20201112 09:44:06.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.601" endtime="20201112 09:44:06.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.610" endtime="20201112 09:44:06.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:06.614" endtime="20201112 09:44:06.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.612" endtime="20201112 09:44:06.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.609" endtime="20201112 09:44:06.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.239" endtime="20201112 09:44:06.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.238" endtime="20201112 09:44:06.634"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.643" endtime="20201112 09:44:06.665"></status>
</kw>
<msg timestamp="20201112 09:44:06.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.642" endtime="20201112 09:44:06.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.666" endtime="20201112 09:44:06.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.669" endtime="20201112 09:44:06.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.639" endtime="20201112 09:44:06.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.637" endtime="20201112 09:44:06.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.678" endtime="20201112 09:44:06.964"></status>
</kw>
<msg timestamp="20201112 09:44:06.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022267431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.676" endtime="20201112 09:44:06.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022267431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022413153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.969" endtime="20201112 09:44:06.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.977" endtime="20201112 09:44:06.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.674" endtime="20201112 09:44:06.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.672" endtime="20201112 09:44:06.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:06.984" level="INFO">${RESULT} = [{'time': 0.022413153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001457220000000009, 'source_diff': 0.0001457220000000009}, {'time': 0.022563181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:06.981" endtime="20201112 09:44:06.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:06.998" level="INFO">${ACCURACY} = {'diff': [0.0001457220000000009, 0.00014536200000000304, 0.00014582000000000137, 0.0001454999999999998, 0.00014483300000000046, 0.00014665300000000006, 0.00014616699999999913, 0.00014566699999999863, ...</msg>
<status status="PASS" starttime="20201112 09:44:06.985" endtime="20201112 09:44:06.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.002" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.001" endtime="20201112 09:44:07.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.005" level="INFO">VALUE: [0.0001457220000000009, 0.00014536200000000304, 0.00014582000000000137, 0.0001454999999999998, 0.00014483300000000046, 0.00014665300000000006, 0.00014616699999999913, 0.00014566699999999863, 0.0001451939999999978, 0.00014582000000000137, 0.00014583300000000146, 0.00014483300000000046, 0.0001453329999999975, 0.00014500000000000277, 0.0001466390000000005, 0.00014615299999999956, 0.000146139, 0.0001466520000000006, 0.00014601399999999987, 0.00014670899999999834, 0.00014566699999999863, 0.00014548600000000023, 0.00014566699999999863, 0.00014547300000000013, 0.0001448190000000009, 0.00014625000000000055, 0.00014516600000000213, 0.00014615299999999956, 0.0001454999999999998, 0.00014583399999999747, 0.00014498599999999973, 0.00014513799999999952, 0.00014501399999999887, 0.00014565300000000253, 0.00014665300000000006, 0.0001465000000000008, 0.00014633400000000144, 0.00014633399999999797, 0.0001463199999999984, 0.0001460000000000003, 0.00014498599999999973, 0.00014501399999999887, 0.00014565299999999906, 0.00014526400000000259, 0.00014483300000000046, 0.0001448060000000008, 0.00014597200000000116, 0.0001458190000000019, 0.0001450830000000007, 0.00014666699999999963]</msg>
<status status="PASS" starttime="20201112 09:44:07.003" endtime="20201112 09:44:07.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.998" endtime="20201112 09:44:07.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.008" endtime="20201112 09:44:07.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.012" endtime="20201112 09:44:07.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.010" endtime="20201112 09:44:07.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.007" endtime="20201112 09:44:07.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.635" endtime="20201112 09:44:07.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.635" endtime="20201112 09:44:07.033"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.041" endtime="20201112 09:44:07.063"></status>
</kw>
<msg timestamp="20201112 09:44:07.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.040" endtime="20201112 09:44:07.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.064" endtime="20201112 09:44:07.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.067" endtime="20201112 09:44:07.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.037" endtime="20201112 09:44:07.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.035" endtime="20201112 09:44:07.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.076" endtime="20201112 09:44:07.362"></status>
</kw>
<msg timestamp="20201112 09:44:07.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022883486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.075" endtime="20201112 09:44:07.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022883486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.366" endtime="20201112 09:44:07.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.374" endtime="20201112 09:44:07.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.072" endtime="20201112 09:44:07.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.070" endtime="20201112 09:44:07.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:07.381" level="INFO">${RESULT} = [{'time': 0.022883486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001485420000000015, 'source_diff': 0.0001485420000000015}, {'time': 0.0230375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:07.377" endtime="20201112 09:44:07.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:07.394" level="INFO">${ACCURACY} = {'diff': [0.0001485420000000015, 0.00014816699999999766, 0.00014815300000000156, 0.00014715300000000056, 0.0001482359999999995, 0.00014681899999999942, 0.00014784699999999956, 0.0001471809999999997, 0...</msg>
<status status="PASS" starttime="20201112 09:44:07.382" endtime="20201112 09:44:07.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.399" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.398" endtime="20201112 09:44:07.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.401" level="INFO">VALUE: [0.0001485420000000015, 0.00014816699999999766, 0.00014815300000000156, 0.00014715300000000056, 0.0001482359999999995, 0.00014681899999999942, 0.00014784699999999956, 0.0001471809999999997, 0.00014733300000000296, 0.0001475000000000018, 0.00014715300000000056, 0.00014866600000000216, 0.00014701400000000087, 0.0001471520000000011, 0.0001486529999999986, 0.00014848599999999976, 0.00014719499999999927, 0.00014719400000000327, 0.00014770799999999987, 0.00014798600000000273, 0.00014780500000000085, 0.000147833, 0.00014699999999999783, 0.00014866699999999816, 0.00014751400000000137, 0.0001470550000000001, 0.0001483330000000005, 0.00014812500000000242, 0.00014831899999999745, 0.0001486810000000012, 0.00014704100000000053, 0.00014838899999999877, 0.0001468199999999989, 0.00014781900000000042, 0.0001473329999999995, 0.00014701400000000087, 0.00014766700000000063, 0.00014715300000000056, 0.00014733399999999897, 0.00014686099999999813, 0.00014680499999999985, 0.00014767999999999726, 0.00014748599999999876, 0.00014815300000000156, 0.00014815300000000156, 0.0001475139999999979, 0.00014817999999999776, 0.0001470000000000013, 0.0001483330000000005, 0.00014731899999999992]</msg>
<status status="PASS" starttime="20201112 09:44:07.400" endtime="20201112 09:44:07.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.395" endtime="20201112 09:44:07.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.405" endtime="20201112 09:44:07.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.408" endtime="20201112 09:44:07.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.406" endtime="20201112 09:44:07.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.403" endtime="20201112 09:44:07.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.034" endtime="20201112 09:44:07.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.033" endtime="20201112 09:44:07.429"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.438" endtime="20201112 09:44:07.460"></status>
</kw>
<msg timestamp="20201112 09:44:07.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.436" endtime="20201112 09:44:07.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.461" endtime="20201112 09:44:07.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.464" endtime="20201112 09:44:07.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.433" endtime="20201112 09:44:07.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.431" endtime="20201112 09:44:07.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.473" endtime="20201112 09:44:07.761"></status>
</kw>
<msg timestamp="20201112 09:44:07.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022295083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.471" endtime="20201112 09:44:07.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022295083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.765" endtime="20201112 09:44:07.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.773" endtime="20201112 09:44:07.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.468" endtime="20201112 09:44:07.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.467" endtime="20201112 09:44:07.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:07.780" level="INFO">${RESULT} = [{'time': 0.022445222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015013900000000052, 'source_diff': 0.00015013900000000052}, {'time': 0.022603236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:07.777" endtime="20201112 09:44:07.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:07.793" level="INFO">${ACCURACY} = {'diff': [0.00015013900000000052, 0.0001498469999999981, 0.00015050000000000133, 0.0001505689999999997, 0.00015031999999999893, 0.00014899999999999983, 0.00015066700000000016, 0.00015050000000000133, ...</msg>
<status status="PASS" starttime="20201112 09:44:07.781" endtime="20201112 09:44:07.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.798" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.797" endtime="20201112 09:44:07.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.800" level="INFO">VALUE: [0.00015013900000000052, 0.0001498469999999981, 0.00015050000000000133, 0.0001505689999999997, 0.00015031999999999893, 0.00014899999999999983, 0.00015066700000000016, 0.00015050000000000133, 0.00014948600000000076, 0.000149833000000002, 0.00014950000000000033, 0.00014933400000000097, 0.00014930599999999836, 0.00014981899999999895, 0.00015031899999999945, 0.00014886100000000013, 0.00014983299999999852, 0.00015068099999999973, 0.0001501530000000001, 0.00014916699999999866, 0.00014999999999999736, 0.00015017999999999976, 0.0001505140000000009, 0.000148833000000001, 0.00014945899999999762, 0.00014983400000000147, 0.00015066700000000016, 0.00014899999999999983, 0.00014948600000000076, 0.00014931899999999845, 0.0001491810000000017, 0.00015047199999999872, 0.00014963900000000002, 0.0001490269999999995, 0.00014933299999999802, 0.0001495139999999999, 0.00015050000000000133, 0.00014950000000000033, 0.00015066700000000016, 0.0001491109999999969, 0.00014916699999999866, 0.00014997199999999822, 0.0001501660000000002, 0.00015030499999999988, 0.00014881900000000142, 0.00014933400000000097, 0.00015034800000000154, 0.0001491529999999991, 0.00014936100000000063, 0.0001490139999999994]</msg>
<status status="PASS" starttime="20201112 09:44:07.799" endtime="20201112 09:44:07.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.794" endtime="20201112 09:44:07.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.804" endtime="20201112 09:44:07.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.807" endtime="20201112 09:44:07.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.806" endtime="20201112 09:44:07.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.802" endtime="20201112 09:44:07.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.430" endtime="20201112 09:44:07.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.429" endtime="20201112 09:44:07.828"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.837" endtime="20201112 09:44:07.859"></status>
</kw>
<msg timestamp="20201112 09:44:07.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.835" endtime="20201112 09:44:07.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.860" endtime="20201112 09:44:07.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.863" endtime="20201112 09:44:07.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.833" endtime="20201112 09:44:07.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.830" endtime="20201112 09:44:07.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.872" endtime="20201112 09:44:08.166"></status>
</kw>
<msg timestamp="20201112 09:44:08.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022379986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.870" endtime="20201112 09:44:08.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022379986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.170" endtime="20201112 09:44:08.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.179" endtime="20201112 09:44:08.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.868" endtime="20201112 09:44:08.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.866" endtime="20201112 09:44:08.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:08.185" level="INFO">${RESULT} = [{'time': 0.022379986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001518750000000027, 'source_diff': 0.0001518750000000027}, {'time': 0.022540014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:08.182" endtime="20201112 09:44:08.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:08.199" level="INFO">${ACCURACY} = {'diff': [0.0001518750000000027, 0.00015116700000000066, 0.00015168100000000073, 0.00015202699999999902, 0.00015232000000000093, 0.00015168000000000126, 0.00015116700000000066, 0.00015166700000000116,...</msg>
<status status="PASS" starttime="20201112 09:44:08.186" endtime="20201112 09:44:08.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.203" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 09:44:08.202" endtime="20201112 09:44:08.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.206" level="INFO">VALUE: [0.0001518750000000027, 0.00015116700000000066, 0.00015168100000000073, 0.00015202699999999902, 0.00015232000000000093, 0.00015168000000000126, 0.00015116700000000066, 0.00015166700000000116, 0.00015252800000000247, 0.0001523340000000005, 0.0001524860000000003, 0.00015218000000000176, 0.00015133300000000002, 0.00015086100000000213, 0.00015216700000000166, 0.00015232000000000093, 0.00015231999999999746, 0.00015263900000000302, 0.00015266599999999922, 0.00015084700000000256, 0.00015170899999999987, 0.00015238799999999983, 0.0001520279999999985, 0.0001519729999999997, 0.00015184799999999957, 0.00015181899999999748, 0.0001513469999999996, 0.0001521669999999982, 0.00015181900000000095, 0.00015133400000000297, 0.00015134800000000254, 0.00015163899999999855, 0.00015168099999999726, 0.00015149999999999886, 0.0001511669999999972, 0.0001525140000000029, 0.0001523340000000005, 0.00015201299999999945, 0.00015098600000000226, 0.0001514859999999993, 0.00015213900000000252, 0.00015218099999999776, 0.00015118100000000023, 0.00015215299999999862, 0.0001526669999999987, 0.00015115200000000162, 0.00015231900000000145, 0.0001526950000000013, 0.0001511669999999972, 0.00015249999999999986]</msg>
<status status="PASS" starttime="20201112 09:44:08.204" endtime="20201112 09:44:08.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.200" endtime="20201112 09:44:08.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.210" endtime="20201112 09:44:08.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:08.214" endtime="20201112 09:44:08.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.212" endtime="20201112 09:44:08.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.208" endtime="20201112 09:44:08.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.829" endtime="20201112 09:44:08.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.828" endtime="20201112 09:44:08.234"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.243" endtime="20201112 09:44:08.265"></status>
</kw>
<msg timestamp="20201112 09:44:08.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.242" endtime="20201112 09:44:08.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.266" endtime="20201112 09:44:08.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.269" endtime="20201112 09:44:08.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.239" endtime="20201112 09:44:08.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.237" endtime="20201112 09:44:08.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.278" endtime="20201112 09:44:08.565"></status>
</kw>
<msg timestamp="20201112 09:44:08.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022513181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.276" endtime="20201112 09:44:08.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022513181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.569" endtime="20201112 09:44:08.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.577" endtime="20201112 09:44:08.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.274" endtime="20201112 09:44:08.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.272" endtime="20201112 09:44:08.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:08.584" level="INFO">${RESULT} = [{'time': 0.022513181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015287500000000023, 'source_diff': 0.00015287500000000023}, {'time': 0.022681222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:08.580" endtime="20201112 09:44:08.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:08.597" level="INFO">${ACCURACY} = {'diff': [0.00015287500000000023, 0.0001538470000000021, 0.00015416599999999725, 0.00015301399999999993, 0.0001532500000000006, 0.00015433399999999903, 0.00015465300000000112, 0.00015351400000000043, ...</msg>
<status status="PASS" starttime="20201112 09:44:08.585" endtime="20201112 09:44:08.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.601" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 09:44:08.600" endtime="20201112 09:44:08.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.604" level="INFO">VALUE: [0.00015287500000000023, 0.0001538470000000021, 0.00015416599999999725, 0.00015301399999999993, 0.0001532500000000006, 0.00015433399999999903, 0.00015465300000000112, 0.00015351400000000043, 0.00015444399999999664, 0.00015450000000000186, 0.00015433299999999955, 0.00015418099999999976, 0.00015441700000000044, 0.00015433399999999903, 0.00015300000000000036, 0.000154528000000001, 0.0001539999999999979, 0.0001531110000000009, 0.00015368100000000273, 0.00015374999999999764, 0.00015315299999999962, 0.00015431899999999998, 0.0001538470000000021, 0.00015333299999999855, 0.00015365300000000012, 0.00015469499999999983, 0.00015355500000000313, 0.00015333300000000202, 0.0001547219999999995, 0.00015318099999999876, 0.000153528, 0.0001546670000000007, 0.00015465300000000112, 0.000153834000000002, 0.00015383299999999905, 0.00015381899999999948, 0.0001538609999999982, 0.0001536669999999997, 0.00015331999999999846, 0.000153834000000002, 0.00015465300000000112, 0.00015348599999999782, 0.00015383299999999905, 0.00015434699999999912, 0.00015281900000000195, 0.000152834000000001, 0.00015300000000000036, 0.0001538479999999981, 0.00015366600000000022, 0.00015365300000000012]</msg>
<status status="PASS" starttime="20201112 09:44:08.602" endtime="20201112 09:44:08.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.598" endtime="20201112 09:44:08.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.612" endtime="20201112 09:44:08.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:08.615" endtime="20201112 09:44:08.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.614" endtime="20201112 09:44:08.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.610" endtime="20201112 09:44:08.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.235" endtime="20201112 09:44:08.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.235" endtime="20201112 09:44:08.636"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.645" endtime="20201112 09:44:08.668"></status>
</kw>
<msg timestamp="20201112 09:44:08.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.643" endtime="20201112 09:44:08.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.670" endtime="20201112 09:44:08.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.672" endtime="20201112 09:44:08.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.641" endtime="20201112 09:44:08.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.639" endtime="20201112 09:44:08.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.681" endtime="20201112 09:44:08.967"></status>
</kw>
<msg timestamp="20201112 09:44:08.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022688569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022843889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.680" endtime="20201112 09:44:08.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022688569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022843889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.971" endtime="20201112 09:44:08.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.979" endtime="20201112 09:44:08.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.677" endtime="20201112 09:44:08.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.675" endtime="20201112 09:44:08.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:08.986" level="INFO">${RESULT} = [{'time': 0.022843889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015532000000000046, 'source_diff': 0.00015532000000000046}, {'time': 0.023009972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:08.983" endtime="20201112 09:44:08.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:08.999" level="INFO">${ACCURACY} = {'diff': [0.00015532000000000046, 0.00015488899999999833, 0.0001554869999999993, 0.00015587499999999976, 0.00015533300000000055, 0.00015665299999999965, 0.0001559999999999999, 0.00015550000000000286, ...</msg>
<status status="PASS" starttime="20201112 09:44:08.987" endtime="20201112 09:44:09.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.004" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.003" endtime="20201112 09:44:09.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.007" level="INFO">VALUE: [0.00015532000000000046, 0.00015488899999999833, 0.0001554869999999993, 0.00015587499999999976, 0.00015533300000000055, 0.00015665299999999965, 0.0001559999999999999, 0.00015550000000000286, 0.00015500000000000236, 0.00015534700000000012, 0.00015530599999999742, 0.0001551670000000012, 0.0001565000000000004, 0.0001547639999999982, 0.00015616699999999872, 0.00015533300000000055, 0.00015612500000000001, 0.00015567999999999832, 0.0001560280000000025, 0.00015633299999999808, 0.00015533400000000003, 0.00015651399999999996, 0.00015533300000000055, 0.0001565000000000004, 0.00015666699999999922, 0.00015501399999999846, 0.00015583400000000053, 0.00015665299999999965, 0.00015583399999999706, 0.00015498599999999932, 0.0001551670000000012, 0.00015580499999999844, 0.0001559999999999999, 0.00015548599999999982, 0.0001554999999999994, 0.00015547200000000025, 0.0001565000000000004, 0.00015570800000000093, 0.0001554999999999994, 0.00015534700000000012, 0.000156431000000002, 0.00015619400000000186, 0.00015616599999999925, 0.00015630500000000241, 0.00015538899999999883, 0.00015516699999999772, 0.00015563899999999908, 0.00015602699999999955, 0.00015617999999999882, 0.00015566600000000222]</msg>
<status status="PASS" starttime="20201112 09:44:09.006" endtime="20201112 09:44:09.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.000" endtime="20201112 09:44:09.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.011" endtime="20201112 09:44:09.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.015" endtime="20201112 09:44:09.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.013" endtime="20201112 09:44:09.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.009" endtime="20201112 09:44:09.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.637" endtime="20201112 09:44:09.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.637" endtime="20201112 09:44:09.035"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.044" endtime="20201112 09:44:09.067"></status>
</kw>
<msg timestamp="20201112 09:44:09.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.043" endtime="20201112 09:44:09.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.068" endtime="20201112 09:44:09.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.071" endtime="20201112 09:44:09.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.040" endtime="20201112 09:44:09.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.038" endtime="20201112 09:44:09.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.080" endtime="20201112 09:44:09.367"></status>
</kw>
<msg timestamp="20201112 09:44:09.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.078" endtime="20201112 09:44:09.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.371" endtime="20201112 09:44:09.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.379" endtime="20201112 09:44:09.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.076" endtime="20201112 09:44:09.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.074" endtime="20201112 09:44:09.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:09.386" level="INFO">${RESULT} = [{'time': 0.022760583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015687500000000076, 'source_diff': 0.00015687500000000076}, {'time': 0.022930611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:09.383" endtime="20201112 09:44:09.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:09.399" level="INFO">${ACCURACY} = {'diff': [0.00015687500000000076, 0.00015799999999999842, 0.0001571809999999993, 0.00015756899999999976, 0.00015816700000000072, 0.000157319999999999, 0.0001570419999999996, 0.00015751400000000096, 0....</msg>
<status status="PASS" starttime="20201112 09:44:09.387" endtime="20201112 09:44:09.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.404" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.403" endtime="20201112 09:44:09.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.406" level="INFO">VALUE: [0.00015687500000000076, 0.00015799999999999842, 0.0001571809999999993, 0.00015756899999999976, 0.00015816700000000072, 0.000157319999999999, 0.0001570419999999996, 0.00015751400000000096, 0.00015715300000000015, 0.00015734699999999865, 0.00015816700000000072, 0.0001581940000000004, 0.00015752700000000106, 0.00015765200000000118, 0.00015716699999999972, 0.00015748599999999835, 0.00015751400000000096, 0.00015684799999999763, 0.00015813899999999811, 0.00015820799999999996, 0.00015684699999999815, 0.00015826399999999824, 0.00015799999999999842, 0.0001577640000000012, 0.0001576809999999998, 0.00015765200000000118, 0.00015765200000000118, 0.00015730499999999994, 0.00015704200000000307, 0.0001570000000000009, 0.0001580000000000019, 0.0001574449999999991, 0.00015798699999999832, 0.00015731899999999951, 0.00015816599999999778, 0.00015833300000000008, 0.00015749999999999792, 0.00015865299999999818, 0.00015799999999999842, 0.00015768000000000032, 0.00015816600000000125, 0.00015716699999999972, 0.00015688800000000086, 0.00015816699999999725, 0.00015683399999999806, 0.00015734699999999865, 0.00015863899999999861, 0.00015716600000000025, 0.00015765299999999718, 0.00015751400000000096]</msg>
<status status="PASS" starttime="20201112 09:44:09.405" endtime="20201112 09:44:09.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.400" endtime="20201112 09:44:09.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.410" endtime="20201112 09:44:09.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.413" endtime="20201112 09:44:09.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.412" endtime="20201112 09:44:09.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.408" endtime="20201112 09:44:09.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.036" endtime="20201112 09:44:09.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.036" endtime="20201112 09:44:09.434"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.443" endtime="20201112 09:44:09.465"></status>
</kw>
<msg timestamp="20201112 09:44:09.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.441" endtime="20201112 09:44:09.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.467" endtime="20201112 09:44:09.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.469" endtime="20201112 09:44:09.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.439" endtime="20201112 09:44:09.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.437" endtime="20201112 09:44:09.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.478" endtime="20201112 09:44:09.765"></status>
</kw>
<msg timestamp="20201112 09:44:09.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.477" endtime="20201112 09:44:09.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.769" endtime="20201112 09:44:09.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.777" endtime="20201112 09:44:09.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.474" endtime="20201112 09:44:09.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.472" endtime="20201112 09:44:09.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:09.784" level="INFO">${RESULT} = [{'time': 0.022433611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016004199999999913, 'source_diff': 0.00016004199999999913}, {'time': 0.022607611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:09.780" endtime="20201112 09:44:09.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:09.797" level="INFO">${ACCURACY} = {'diff': [0.00016004199999999913, 0.00016030499999999948, 0.00015884699999999669, 0.00015998599999999738, 0.00015984799999999716, 0.00016020800000000196, 0.00015915299999999868, 0.00016050000000000092...</msg>
<status status="PASS" starttime="20201112 09:44:09.785" endtime="20201112 09:44:09.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.801" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.800" endtime="20201112 09:44:09.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.804" level="INFO">VALUE: [0.00016004199999999913, 0.00016030499999999948, 0.00015884699999999669, 0.00015998599999999738, 0.00015984799999999716, 0.00016020800000000196, 0.00015915299999999868, 0.00016050000000000092, 0.00016050000000000092, 0.00016015299999999968, 0.00015913899999999911, 0.00015913899999999911, 0.0001592079999999975, 0.00015883299999999712, 0.00016002799999999956, 0.0001607360000000016, 0.00015981999999999802, 0.00015916699999999825, 0.00016000000000000042, 0.00015949999999999992, 0.00016049999999999745, 0.00015931899999999805, 0.00015968099999999832, 0.0001595550000000022, 0.00016066600000000028, 0.00015998599999999738, 0.00016000000000000042, 0.00015915299999999868, 0.00015966700000000222, 0.0001590550000000017, 0.00016018000000000282, 0.0001601520000000002, 0.00015884700000000015, 0.0001605140000000005, 0.00015966699999999875, 0.00016040299999999993, 0.00015934800000000013, 0.00015918000000000182, 0.00015899999999999942, 0.00015999999999999695, 0.00015948600000000035, 0.00015966700000000222, 0.00015949999999999992, 0.00015966599999999928, 0.0001596519999999997, 0.00016033300000000208, 0.00016002799999999956, 0.00016065300000000018, 0.00015984800000000063, 0.00015951300000000002]</msg>
<status status="PASS" starttime="20201112 09:44:09.802" endtime="20201112 09:44:09.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.798" endtime="20201112 09:44:09.805"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.807" endtime="20201112 09:44:09.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.811" endtime="20201112 09:44:09.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.809" endtime="20201112 09:44:09.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.806" endtime="20201112 09:44:09.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.435" endtime="20201112 09:44:09.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.434" endtime="20201112 09:44:09.832"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.840" endtime="20201112 09:44:09.863"></status>
</kw>
<msg timestamp="20201112 09:44:09.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.839" endtime="20201112 09:44:09.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.865" endtime="20201112 09:44:09.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.867" endtime="20201112 09:44:09.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.836" endtime="20201112 09:44:09.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.834" endtime="20201112 09:44:09.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.876" endtime="20201112 09:44:10.164"></status>
</kw>
<msg timestamp="20201112 09:44:10.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022244167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.875" endtime="20201112 09:44:10.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022244167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.168" endtime="20201112 09:44:10.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.176" endtime="20201112 09:44:10.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.872" endtime="20201112 09:44:10.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.870" endtime="20201112 09:44:10.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:10.183" level="INFO">${RESULT} = [{'time': 0.022406486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016231900000000105, 'source_diff': 0.00016231900000000105}, {'time': 0.0225825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:10.179" endtime="20201112 09:44:10.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:10.196" level="INFO">${ACCURACY} = {'diff': [0.00016231900000000105, 0.0001612919999999969, 0.00016232000000000052, 0.00016119399999999992, 0.00016133299999999962, 0.00016131900000000005, 0.00016183300000000012, 0.00016131900000000005,...</msg>
<status status="PASS" starttime="20201112 09:44:10.184" endtime="20201112 09:44:10.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.200" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 09:44:10.199" endtime="20201112 09:44:10.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.203" level="INFO">VALUE: [0.00016231900000000105, 0.0001612919999999969, 0.00016232000000000052, 0.00016119399999999992, 0.00016133299999999962, 0.00016131900000000005, 0.00016183300000000012, 0.00016131900000000005, 0.00016165300000000118, 0.00016094499999999914, 0.00016083400000000206, 0.00016104200000000013, 0.00016148599999999888, 0.0001608750000000013, 0.00016215300000000168, 0.00016145900000000268, 0.00016183300000000012, 0.00016249999999999945, 0.00016216600000000178, 0.00016234700000000019, 0.00016215299999999822, 0.00016099999999999795, 0.00016166699999999729, 0.0001623889999999989, 0.0001611109999999985, 0.00016081899999999955, 0.00016201399999999852, 0.00016151399999999802, 0.00016266699999999829, 0.0001613339999999991, 0.00016249999999999945, 0.00016209699999999994, 0.00016115300000000068, 0.00016116700000000025, 0.0001616949999999999, 0.00016116700000000025, 0.00016134699999999919, 0.00016230500000000148, 0.00016133299999999962, 0.0001619719999999998, 0.00016166699999999729, 0.00016099999999999795, 0.00016244500000000064, 0.00016149999999999845, 0.00016081899999999955, 0.00016248599999999988, 0.00016165300000000118, 0.00016216700000000125, 0.00016148699999999835, 0.00016099999999999795]</msg>
<status status="PASS" starttime="20201112 09:44:10.202" endtime="20201112 09:44:10.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.197" endtime="20201112 09:44:10.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.206" endtime="20201112 09:44:10.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:10.210" endtime="20201112 09:44:10.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.208" endtime="20201112 09:44:10.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.205" endtime="20201112 09:44:10.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.833" endtime="20201112 09:44:10.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.832" endtime="20201112 09:44:10.231"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.239" endtime="20201112 09:44:10.263"></status>
</kw>
<msg timestamp="20201112 09:44:10.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.238" endtime="20201112 09:44:10.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.264" endtime="20201112 09:44:10.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.267" endtime="20201112 09:44:10.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.235" endtime="20201112 09:44:10.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.233" endtime="20201112 09:44:10.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.276" endtime="20201112 09:44:10.561"></status>
</kw>
<msg timestamp="20201112 09:44:10.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022545153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022709333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.274" endtime="20201112 09:44:10.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022545153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022709333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.565" endtime="20201112 09:44:10.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.573" endtime="20201112 09:44:10.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.272" endtime="20201112 09:44:10.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.270" endtime="20201112 09:44:10.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:10.580" level="INFO">${RESULT} = [{'time': 0.022709333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016418000000000335, 'source_diff': 0.00016418000000000335}, {'time': 0.022881361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:10.577" endtime="20201112 09:44:10.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:10.593" level="INFO">${ACCURACY} = {'diff': [0.00016418000000000335, 0.00016383299999999865, 0.00016365299999999972, 0.00016401399999999705, 0.00016350000000000045, 0.00016334700000000119, 0.00016367999999999938, 0.00016399999999999748...</msg>
<status status="PASS" starttime="20201112 09:44:10.581" endtime="20201112 09:44:10.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.598" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 09:44:10.597" endtime="20201112 09:44:10.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.600" level="INFO">VALUE: [0.00016418000000000335, 0.00016383299999999865, 0.00016365299999999972, 0.00016401399999999705, 0.00016350000000000045, 0.00016334700000000119, 0.00016367999999999938, 0.00016399999999999748, 0.00016283300000000112, 0.0001632919999999989, 0.0001638340000000016, 0.00016331899999999858, 0.0001638890000000004, 0.00016349999999999698, 0.00016416699999999979, 0.00016465300000000072, 0.00016431899999999958, 0.00016318000000000235, 0.00016308400000000084, 0.00016351400000000002, 0.0001640280000000001, 0.00016359699999999797, 0.00016318099999999836, 0.00016413900000000065, 0.00016447199999999884, 0.00016283299999999765, 0.00016316699999999879, 0.000163014000000003, 0.00016416699999999979, 0.00016316699999999879, 0.00016395899999999825, 0.00016445799999999927, 0.00016351400000000002, 0.00016336100000000076, 0.00016365299999999972, 0.00016363900000000015, 0.00016400000000000095, 0.00016347199999999784, 0.00016348600000000088, 0.00016468099999999986, 0.00016283300000000112, 0.00016299999999999995, 0.0001636659999999998, 0.0001644859999999984, 0.00016344400000000217, 0.00016331899999999858, 0.00016327799999999934, 0.00016450000000000145, 0.00016369399999999895, 0.00016351400000000002]</msg>
<status status="PASS" starttime="20201112 09:44:10.599" endtime="20201112 09:44:10.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.594" endtime="20201112 09:44:10.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.604" endtime="20201112 09:44:10.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:10.607" endtime="20201112 09:44:10.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.606" endtime="20201112 09:44:10.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.602" endtime="20201112 09:44:10.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.232" endtime="20201112 09:44:10.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.231" endtime="20201112 09:44:10.628"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.637" endtime="20201112 09:44:10.659"></status>
</kw>
<msg timestamp="20201112 09:44:10.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.635" endtime="20201112 09:44:10.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.660" endtime="20201112 09:44:10.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.663" endtime="20201112 09:44:10.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.633" endtime="20201112 09:44:10.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.631" endtime="20201112 09:44:10.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.672" endtime="20201112 09:44:10.960"></status>
</kw>
<msg timestamp="20201112 09:44:10.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022233361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.670" endtime="20201112 09:44:10.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022233361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.964" endtime="20201112 09:44:10.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.973" endtime="20201112 09:44:10.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.668" endtime="20201112 09:44:10.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.666" endtime="20201112 09:44:10.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:10.979" level="INFO">${RESULT} = [{'time': 0.022398069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016470799999999952, 'source_diff': 0.00016470799999999952}, {'time': 0.022578139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:10.976" endtime="20201112 09:44:10.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:10.992" level="INFO">${ACCURACY} = {'diff': [0.00016470799999999952, 0.00016530600000000048, 0.00016484699999999922, 0.00016483299999999965, 0.00016547199999999984, 0.00016533399999999962, 0.00016641700000000204, 0.00016499999999999848...</msg>
<status status="PASS" starttime="20201112 09:44:10.980" endtime="20201112 09:44:10.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.997" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 09:44:10.996" endtime="20201112 09:44:10.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.999" level="INFO">VALUE: [0.00016470799999999952, 0.00016530600000000048, 0.00016484699999999922, 0.00016483299999999965, 0.00016547199999999984, 0.00016533399999999962, 0.00016641700000000204, 0.00016499999999999848, 0.00016515299999999775, 0.00016633299999999768, 0.00016480599999999998, 0.00016481999999999955, 0.0001648050000000005, 0.00016533300000000015, 0.00016583300000000065, 0.00016649999999999998, 0.00016566700000000129, 0.00016568100000000086, 0.00016533300000000015, 0.0001664860000000004, 0.00016499999999999848, 0.00016534699999999972, 0.0001664860000000004, 0.00016647199999999737, 0.00016548699999999888, 0.0001661799999999984, 0.00016665299999999925, 0.00016649999999999998, 0.00016631999999999758, 0.0001650410000000012, 0.0001664860000000004, 0.00016666599999999934, 0.00016524999999999873, 0.00016633299999999768, 0.00016666700000000229, 0.00016558399999999987, 0.00016481999999999955, 0.000165305999999997, 0.00016501399999999805, 0.00016566700000000129, 0.00016523599999999916, 0.00016566699999999782, 0.0001658479999999997, 0.00016602700000000262, 0.00016599999999999948, 0.00016484699999999922, 0.00016601400000000252, 0.00016616700000000179, 0.00016616699999999832, 0.00016634700000000072]</msg>
<status status="PASS" starttime="20201112 09:44:10.998" endtime="20201112 09:44:11.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.993" endtime="20201112 09:44:11.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.003" endtime="20201112 09:44:11.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.006" endtime="20201112 09:44:11.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.005" endtime="20201112 09:44:11.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.001" endtime="20201112 09:44:11.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.629" endtime="20201112 09:44:11.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.628" endtime="20201112 09:44:11.028"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.037" endtime="20201112 09:44:11.061"></status>
</kw>
<msg timestamp="20201112 09:44:11.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.036" endtime="20201112 09:44:11.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.062" endtime="20201112 09:44:11.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.065" endtime="20201112 09:44:11.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.033" endtime="20201112 09:44:11.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.030" endtime="20201112 09:44:11.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.074" endtime="20201112 09:44:11.361"></status>
</kw>
<msg timestamp="20201112 09:44:11.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023689472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023857333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.072" endtime="20201112 09:44:11.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023689472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023857333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.365" endtime="20201112 09:44:11.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.373" endtime="20201112 09:44:11.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.070" endtime="20201112 09:44:11.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.068" endtime="20201112 09:44:11.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:11.380" level="INFO">${RESULT} = [{'time': 0.023857333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001678610000000018, 'source_diff': 0.0001678610000000018}, {'time': 0.024035347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:11.376" endtime="20201112 09:44:11.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:11.393" level="INFO">${ACCURACY} = {'diff': [0.0001678610000000018, 0.0001683190000000001, 0.00016713900000000018, 0.00016748599999999794, 0.00016769399999999948, 0.00016700000000000048, 0.00016800000000000148, 0.00016801400000000105, ...</msg>
<status status="PASS" starttime="20201112 09:44:11.381" endtime="20201112 09:44:11.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.397" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 09:44:11.396" endtime="20201112 09:44:11.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.400" level="INFO">VALUE: [0.0001678610000000018, 0.0001683190000000001, 0.00016713900000000018, 0.00016748599999999794, 0.00016769399999999948, 0.00016700000000000048, 0.00016800000000000148, 0.00016801400000000105, 0.0001674860000000014, 0.00016868100000000039, 0.00016736099999999782, 0.00016783299999999918, 0.00016834699999999925, 0.0001684999999999985, 0.000166999999999997, 0.00016715299999999975, 0.00016682000000000155, 0.00016783400000000212, 0.00016733299999999868, 0.00016783299999999918, 0.000166999999999997, 0.00016701400000000005, 0.00016850000000000198, 0.00016766699999999982, 0.00016850000000000198, 0.00016701400000000005, 0.00016716699999999932, 0.00016683300000000165, 0.0001683480000000022, 0.000167999999999998, 0.00016866600000000134, 0.00016847199999999937, 0.00016752800000000012, 0.00016768099999999939, 0.00016783399999999865, 0.00016848699999999842, 0.00016748599999999794, 0.00016834699999999925, 0.00016868099999999692, 0.00016866699999999735, 0.00016854100000000122, 0.0001674999999999975, 0.00016717999999999594, 0.00016850000000000198, 0.00016733299999999868, 0.00016765299999999678, 0.00016783299999999918, 0.00016829200000000044, 0.00016767999999999644, 0.00016683299999999818]</msg>
<status status="PASS" starttime="20201112 09:44:11.398" endtime="20201112 09:44:11.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.394" endtime="20201112 09:44:11.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.404" endtime="20201112 09:44:11.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.407" endtime="20201112 09:44:11.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.405" endtime="20201112 09:44:11.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.402" endtime="20201112 09:44:11.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.029" endtime="20201112 09:44:11.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.028" endtime="20201112 09:44:11.428"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.436" endtime="20201112 09:44:11.460"></status>
</kw>
<msg timestamp="20201112 09:44:11.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.435" endtime="20201112 09:44:11.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.461" endtime="20201112 09:44:11.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.464" endtime="20201112 09:44:11.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.432" endtime="20201112 09:44:11.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.430" endtime="20201112 09:44:11.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.473" endtime="20201112 09:44:11.760"></status>
</kw>
<msg timestamp="20201112 09:44:11.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022803208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.471" endtime="20201112 09:44:11.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022803208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.764" endtime="20201112 09:44:11.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.772" endtime="20201112 09:44:11.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.469" endtime="20201112 09:44:11.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.467" endtime="20201112 09:44:11.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:11.779" level="INFO">${RESULT} = [{'time': 0.022803208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017004099999999925, 'source_diff': 0.00017004099999999925}, {'time': 0.022983208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:11.776" endtime="20201112 09:44:11.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:11.792" level="INFO">${ACCURACY} = {'diff': [0.00017004099999999925, 0.00017048600000000094, 0.00016966700000000182, 0.00016966699999999835, 0.00016984700000000075, 0.00016966700000000182, 0.00016883300000000018, 0.00017016600000000284...</msg>
<status status="PASS" starttime="20201112 09:44:11.780" endtime="20201112 09:44:11.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.797" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 09:44:11.796" endtime="20201112 09:44:11.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.799" level="INFO">VALUE: [0.00017004099999999925, 0.00017048600000000094, 0.00016966700000000182, 0.00016966699999999835, 0.00016984700000000075, 0.00016966700000000182, 0.00016883300000000018, 0.00017016600000000284, 0.00016880499999999757, 0.00016933300000000068, 0.0001704589999999978, 0.00017018099999999842, 0.00016948599999999994, 0.00016934700000000025, 0.00017016700000000232, 0.000168999999999999, 0.00016883300000000018, 0.00017065299999999978, 0.0001705000000000005, 0.00017016599999999937, 0.00016934700000000025, 0.00017, 0.00016947200000000037, 0.00016994499999999774, 0.00017066699999999935, 0.00016983300000000118, 0.00017033300000000168, 0.00016916700000000132, 0.00016933300000000068, 0.00017, 0.0001698749999999999, 0.00017066599999999987, 0.000168999999999999, 0.0001689580000000003, 0.00016979200000000194, 0.00017051400000000008, 0.00016933400000000015, 0.00016967999999999844, 0.0001694999999999995, 0.00016983300000000118, 0.00016938799999999948, 0.0001699299999999987, 0.00016917999999999794, 0.00016948599999999994, 0.00016916700000000132, 0.00017016699999999885, 0.00016965299999999878, 0.00017033400000000115, 0.0001705420000000027, 0.00016918000000000488]</msg>
<status status="PASS" starttime="20201112 09:44:11.798" endtime="20201112 09:44:11.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.793" endtime="20201112 09:44:11.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.803" endtime="20201112 09:44:11.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.806" endtime="20201112 09:44:11.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.805" endtime="20201112 09:44:11.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.801" endtime="20201112 09:44:11.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.429" endtime="20201112 09:44:11.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.428" endtime="20201112 09:44:11.827"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.836" endtime="20201112 09:44:11.859"></status>
</kw>
<msg timestamp="20201112 09:44:11.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.834" endtime="20201112 09:44:11.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.861" endtime="20201112 09:44:11.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.863" endtime="20201112 09:44:11.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.832" endtime="20201112 09:44:11.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.830" endtime="20201112 09:44:11.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.873" endtime="20201112 09:44:12.160"></status>
</kw>
<msg timestamp="20201112 09:44:12.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022689361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.871" endtime="20201112 09:44:12.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022689361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.164" endtime="20201112 09:44:12.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.172" endtime="20201112 09:44:12.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.868" endtime="20201112 09:44:12.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.867" endtime="20201112 09:44:12.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:12.179" level="INFO">${RESULT} = [{'time': 0.022861736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017237499999999892, 'source_diff': 0.00017237499999999892}, {'time': 0.023039764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:12.175" endtime="20201112 09:44:12.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:12.192" level="INFO">${ACCURACY} = {'diff': [0.00017237499999999892, 0.0001723330000000002, 0.00017134699999999878, 0.00017165300000000078, 0.00017159800000000197, 0.00017131899999999964, 0.00017098599999999797, 0.0001716390000000012, ...</msg>
<status status="PASS" starttime="20201112 09:44:12.180" endtime="20201112 09:44:12.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.196" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 09:44:12.195" endtime="20201112 09:44:12.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.199" level="INFO">VALUE: [0.00017237499999999892, 0.0001723330000000002, 0.00017134699999999878, 0.00017165300000000078, 0.00017159800000000197, 0.00017131899999999964, 0.00017098599999999797, 0.0001716390000000012, 0.00017148600000000194, 0.00017082000000000208, 0.00017083300000000218, 0.00017186099999999885, 0.0001718329999999997, 0.000171000000000001, 0.00017184699999999928, 0.0001708199999999986, 0.0001708329999999987, 0.0001713329999999992, 0.00017131899999999964, 0.00017265300000000178, 0.0001720690000000004, 0.00017199999999999854, 0.00017266699999999788, 0.0001714580000000028, 0.000171000000000001, 0.000171000000000001, 0.00017208299999999996, 0.0001713620000000013, 0.00017184699999999928, 0.00017248599999999947, 0.00017134700000000225, 0.00017118099999999942, 0.0001715139999999976, 0.00017166700000000035, 0.0001709589999999983, 0.00017244400000000076, 0.0001707779999999999, 0.00017199999999999854, 0.0001723330000000002, 0.00017166700000000035, 0.00017116699999999985, 0.00017133300000000268, 0.0001709299999999997, 0.00017181900000000014, 0.00017081899999999914, 0.00017249999999999904, 0.00017197300000000235, 0.00017245799999999686, 0.00017231899999999717, 0.00017133300000000268]</msg>
<status status="PASS" starttime="20201112 09:44:12.198" endtime="20201112 09:44:12.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.193" endtime="20201112 09:44:12.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.203" endtime="20201112 09:44:12.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:12.206" endtime="20201112 09:44:12.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.204" endtime="20201112 09:44:12.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.201" endtime="20201112 09:44:12.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.828" endtime="20201112 09:44:12.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.827" endtime="20201112 09:44:12.227"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.236" endtime="20201112 09:44:12.258"></status>
</kw>
<msg timestamp="20201112 09:44:12.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.234" endtime="20201112 09:44:12.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.260" endtime="20201112 09:44:12.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.263" endtime="20201112 09:44:12.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.231" endtime="20201112 09:44:12.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.229" endtime="20201112 09:44:12.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.272" endtime="20201112 09:44:12.560"></status>
</kw>
<msg timestamp="20201112 09:44:12.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02238025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:12.270" endtime="20201112 09:44:12.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02238025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:12.564" endtime="20201112 09:44:12.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.573" endtime="20201112 09:44:12.574"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.267" endtime="20201112 09:44:12.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.266" endtime="20201112 09:44:12.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:12.579" level="INFO">${RESULT} = [{'time': 0.022554139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000173889, 'source_diff': 0.000173889}, {'time': 0.022734153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000173166999999...</msg>
<status status="PASS" starttime="20201112 09:44:12.576" endtime="20201112 09:44:12.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:12.592" level="INFO">${ACCURACY} = {'diff': [0.000173889, 0.00017316699999999838, 0.00017305499999999835, 0.0001731659999999989, 0.00017329099999999903, 0.00017350000000000004, 0.0001740140000000001, 0.0001734309999999982, 0.0001731940...</msg>
<status status="PASS" starttime="20201112 09:44:12.580" endtime="20201112 09:44:12.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.597" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 09:44:12.596" endtime="20201112 09:44:12.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.599" level="INFO">VALUE: [0.000173889, 0.00017316699999999838, 0.00017305499999999835, 0.0001731659999999989, 0.00017329099999999903, 0.00017350000000000004, 0.0001740140000000001, 0.0001734309999999982, 0.0001731940000000015, 0.00017452800000000018, 0.0001741249999999972, 0.00017331900000000164, 0.00017434700000000178, 0.00017334799999999678, 0.00017316700000000185, 0.0001735139999999996, 0.00017465200000000083, 0.00017466699999999988, 0.0001741529999999998, 0.00017299999999999954, 0.0001728200000000006, 0.0001736659999999994, 0.0001731659999999989, 0.0001740140000000001, 0.00017299999999999954, 0.00017283400000000018, 0.00017397199999999793, 0.00017327799999999893, 0.00017298599999999997, 0.0001733469999999973, 0.00017366699999999888, 0.00017466699999999988, 0.00017367999999999897, 0.00017284700000000028, 0.0001731659999999989, 0.0001746530000000003, 0.00017463900000000074, 0.0001734720000000009, 0.00017366699999999888, 0.00017434700000000178, 0.00017350000000000004, 0.0001733330000000012, 0.000174485999999998, 0.00017384800000000075, 0.00017333400000000068, 0.00017318000000000194, 0.00017352800000000265, 0.00017301400000000258, 0.00017333299999999774, 0.00017465299999999684]</msg>
<status status="PASS" starttime="20201112 09:44:12.598" endtime="20201112 09:44:12.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.593" endtime="20201112 09:44:12.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.603" endtime="20201112 09:44:12.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:12.606" endtime="20201112 09:44:12.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.605" endtime="20201112 09:44:12.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.601" endtime="20201112 09:44:12.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.228" endtime="20201112 09:44:12.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.227" endtime="20201112 09:44:12.627"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.636" endtime="20201112 09:44:12.659"></status>
</kw>
<msg timestamp="20201112 09:44:12.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.634" endtime="20201112 09:44:12.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.660" endtime="20201112 09:44:12.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.663" endtime="20201112 09:44:12.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.632" endtime="20201112 09:44:12.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.630" endtime="20201112 09:44:12.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.672" endtime="20201112 09:44:12.959"></status>
</kw>
<msg timestamp="20201112 09:44:12.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022233236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022408597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.670" endtime="20201112 09:44:12.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022233236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022408597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.963" endtime="20201112 09:44:12.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.971" endtime="20201112 09:44:12.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.668" endtime="20201112 09:44:12.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.666" endtime="20201112 09:44:12.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:12.978" level="INFO">${RESULT} = [{'time': 0.022408597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017536099999999888, 'source_diff': 0.00017536099999999888}, {'time': 0.022594611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:12.975" endtime="20201112 09:44:12.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:12.991" level="INFO">${ACCURACY} = {'diff': [0.00017536099999999888, 0.0001761530000000018, 0.00017516700000000038, 0.000176486, 0.00017591700000000113, 0.00017597199999999993, 0.00017529100000000103, 0.0001766530000000023, 0.000176527...</msg>
<status status="PASS" starttime="20201112 09:44:12.979" endtime="20201112 09:44:12.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.996" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 09:44:12.995" endtime="20201112 09:44:12.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.998" level="INFO">VALUE: [0.00017536099999999888, 0.0001761530000000018, 0.00017516700000000038, 0.000176486, 0.00017591700000000113, 0.00017597199999999993, 0.00017529100000000103, 0.0001766530000000023, 0.00017652799999999871, 0.00017502699999999774, 0.0001751530000000008, 0.00017550000000000204, 0.00017549999999999857, 0.00017505599999999982, 0.00017549999999999857, 0.00017618100000000095, 0.0001758469999999998, 0.00017559699999999956, 0.00017555600000000032, 0.00017530600000000007, 0.00017550000000000204, 0.00017499999999999807, 0.00017654199999999828, 0.00017649999999999957, 0.00017649999999999957, 0.0001758469999999998, 0.00017634799999999978, 0.00017534799999999878, 0.00017649999999999957, 0.00017586100000000285, 0.0001761669999999979, 0.00017649999999999957, 0.00017616700000000138, 0.00017669399999999807, 0.0001753469999999993, 0.00017583300000000024, 0.00017504200000000025, 0.00017516700000000038, 0.00017605500000000135, 0.0001759729999999994, 0.0001765140000000026, 0.00017666599999999893, 0.00017601399999999864, 0.00017650000000000304, 0.00017566700000000088, 0.00017599999999999907, 0.0001749439999999998, 0.00017651399999999914, 0.00017568099999999698, 0.0001761669999999979]</msg>
<status status="PASS" starttime="20201112 09:44:12.997" endtime="20201112 09:44:12.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.992" endtime="20201112 09:44:13.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.002" endtime="20201112 09:44:13.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:13.005" endtime="20201112 09:44:13.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.004" endtime="20201112 09:44:13.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.000" endtime="20201112 09:44:13.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.628" endtime="20201112 09:44:13.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.627" endtime="20201112 09:44:13.026"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.035" endtime="20201112 09:44:13.058"></status>
</kw>
<msg timestamp="20201112 09:44:13.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.034" endtime="20201112 09:44:13.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.060" endtime="20201112 09:44:13.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.063" endtime="20201112 09:44:13.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.031" endtime="20201112 09:44:13.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.029" endtime="20201112 09:44:13.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.073" endtime="20201112 09:44:13.360"></status>
</kw>
<msg timestamp="20201112 09:44:13.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022595861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022774222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.071" endtime="20201112 09:44:13.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022595861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022774222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.364" endtime="20201112 09:44:13.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.372" endtime="20201112 09:44:13.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.068" endtime="20201112 09:44:13.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.066" endtime="20201112 09:44:13.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:13.378" level="INFO">${RESULT} = [{'time': 0.022774222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017836100000000188, 'source_diff': 0.00017836100000000188}, {'time': 0.022958264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:13.375" endtime="20201112 09:44:13.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:13.392" level="INFO">${ACCURACY} = {'diff': [0.00017836100000000188, 0.00017768099999999898, 0.0001783340000000022, 0.00017700000000000007, 0.0001781250000000012, 0.00017700000000000007, 0.0001786800000000005, 0.00017818099999999948, 0...</msg>
<status status="PASS" starttime="20201112 09:44:13.379" endtime="20201112 09:44:13.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.396" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 09:44:13.395" endtime="20201112 09:44:13.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.399" level="INFO">VALUE: [0.00017836100000000188, 0.00017768099999999898, 0.0001783340000000022, 0.00017700000000000007, 0.0001781250000000012, 0.00017700000000000007, 0.0001786800000000005, 0.00017818099999999948, 0.0001781669999999999, 0.0001779860000000015, 0.00017848700000000148, 0.000177179999999999, 0.0001781669999999999, 0.00017786100000000138, 0.0001768340000000007, 0.00017734800000000078, 0.00017700000000000007, 0.0001785969999999991, 0.00017766700000000288, 0.00017750000000000057, 0.000178486000000002, 0.00017802700000000074, 0.00017818, 0.00017751400000000014, 0.00017811100000000163, 0.00017729199999999903, 0.00017801400000000064, 0.00017754200000000275, 0.00017756999999999842, 0.00017820800000000261, 0.00017750000000000057, 0.0001778059999999991, 0.00017700000000000007, 0.00017833299999999927, 0.00017863900000000127, 0.000177486000000001, 0.0001771669999999989, 0.00017819499999999905, 0.00017800000000000107, 0.00017750000000000057, 0.00017715199999999987, 0.00017851400000000114, 0.00017783300000000224, 0.00017852800000000071, 0.00017756899999999895, 0.00017851300000000167, 0.00017716599999999597, 0.00017715299999999934, 0.00017740200000000012, 0.00017715299999999934]</msg>
<status status="PASS" starttime="20201112 09:44:13.397" endtime="20201112 09:44:13.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.393" endtime="20201112 09:44:13.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.402" endtime="20201112 09:44:13.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:13.406" endtime="20201112 09:44:13.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.404" endtime="20201112 09:44:13.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.401" endtime="20201112 09:44:13.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.027" endtime="20201112 09:44:13.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.027" endtime="20201112 09:44:13.426"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.435" endtime="20201112 09:44:13.458"></status>
</kw>
<msg timestamp="20201112 09:44:13.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.434" endtime="20201112 09:44:13.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.460" endtime="20201112 09:44:13.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.462" endtime="20201112 09:44:13.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.431" endtime="20201112 09:44:13.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.429" endtime="20201112 09:44:13.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.471" endtime="20201112 09:44:13.758"></status>
</kw>
<msg timestamp="20201112 09:44:13.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022256375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.470" endtime="20201112 09:44:13.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022256375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.762" endtime="20201112 09:44:13.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.770" endtime="20201112 09:44:13.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.467" endtime="20201112 09:44:13.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.465" endtime="20201112 09:44:13.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:13.777" level="INFO">${RESULT} = [{'time': 0.022435875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017950000000000257, 'source_diff': 0.00017950000000000257}, {'time': 0.022629903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:13.774" endtime="20201112 09:44:13.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:13.790" level="INFO">${ACCURACY} = {'diff': [0.00017950000000000257, 0.00017965299999999837, 0.0001789030000000011, 0.00018017999999999854, 0.00017904199999999731, 0.00017883299999999977, 0.00017983300000000077, 0.00017987499999999948,...</msg>
<status status="PASS" starttime="20201112 09:44:13.778" endtime="20201112 09:44:13.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.795" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 09:44:13.794" endtime="20201112 09:44:13.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.797" level="INFO">VALUE: [0.00017950000000000257, 0.00017965299999999837, 0.0001789030000000011, 0.00018017999999999854, 0.00017904199999999731, 0.00017883299999999977, 0.00017983300000000077, 0.00017987499999999948, 0.0001799999999999996, 0.0001801519999999994, 0.00017883299999999977, 0.00018011100000000016, 0.00017884699999999934, 0.0001788479999999988, 0.0001805000000000001, 0.00018016600000000244, 0.0001789579999999999, 0.00018001399999999917, 0.0001799450000000008, 0.00018016599999999897, 0.00017900000000000207, 0.00018066599999999947, 0.00017966699999999794, 0.00017966699999999794, 0.00017933399999999974, 0.00017883399999999924, 0.00018033300000000127, 0.0001794999999999991, 0.0001799999999999996, 0.0001801670000000019, 0.0001794999999999991, 0.0001799999999999996, 0.00017997200000000046, 0.00018062500000000023, 0.00017898599999999903, 0.00017883299999999977, 0.00018040299999999912, 0.00017883399999999924, 0.00017987499999999948, 0.00018051399999999967, 0.0001803060000000016, 0.00017968100000000098, 0.00017983400000000024, 0.00017938899999999855, 0.00018034699999999737, 0.00017984700000000034, 0.00018029200000000203, 0.00017932000000000017, 0.00017984800000000328, 0.0001794999999999991]</msg>
<status status="PASS" starttime="20201112 09:44:13.796" endtime="20201112 09:44:13.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.791" endtime="20201112 09:44:13.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.805" endtime="20201112 09:44:13.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:13.809" endtime="20201112 09:44:13.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.807" endtime="20201112 09:44:13.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.804" endtime="20201112 09:44:13.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.427" endtime="20201112 09:44:13.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.427" endtime="20201112 09:44:13.830"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.838" endtime="20201112 09:44:13.861"></status>
</kw>
<msg timestamp="20201112 09:44:13.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.837" endtime="20201112 09:44:13.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.863" endtime="20201112 09:44:13.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.865" endtime="20201112 09:44:13.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.834" endtime="20201112 09:44:13.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.832" endtime="20201112 09:44:13.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.874" endtime="20201112 09:44:14.163"></status>
</kw>
<msg timestamp="20201112 09:44:14.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022482806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.873" endtime="20201112 09:44:14.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022482806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.167" endtime="20201112 09:44:14.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.175" endtime="20201112 09:44:14.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.870" endtime="20201112 09:44:14.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.868" endtime="20201112 09:44:14.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:14.182" level="INFO">${RESULT} = [{'time': 0.022482806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018137500000000098, 'source_diff': 0.00018137500000000098}, {'time': 0.022678833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:14.179" endtime="20201112 09:44:14.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:14.195" level="INFO">${ACCURACY} = {'diff': [0.00018137500000000098, 0.00018149999999999764, 0.0001810000000000006, 0.0001823329999999998, 0.0001818329999999993, 0.00018083400000000124, 0.0001823199999999997, 0.00018104199999999931, 0....</msg>
<status status="PASS" starttime="20201112 09:44:14.183" endtime="20201112 09:44:14.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.200" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 09:44:14.199" endtime="20201112 09:44:14.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.202" level="INFO">VALUE: [0.00018137500000000098, 0.00018149999999999764, 0.0001810000000000006, 0.0001823329999999998, 0.0001818329999999993, 0.00018083400000000124, 0.0001823199999999997, 0.00018104199999999931, 0.00018168000000000004, 0.00018083300000000177, 0.00018133300000000227, 0.00018151400000000067, 0.00018183399999999877, 0.00018188900000000105, 0.00018101400000000017, 0.00018184700000000234, 0.00018168100000000298, 0.00018145900000000187, 0.0001816939999999996, 0.00018251400000000167, 0.0001820000000000016, 0.000181180999999999, 0.0001810000000000006, 0.0001820000000000016, 0.00018224999999999839, 0.00018144400000000283, 0.00018149999999999764, 0.0001818329999999993, 0.00018266699999999747, 0.00018084800000000081, 0.00018266600000000147, 0.00018249999999999864, 0.0001820139999999977, 0.00018116699999999944, 0.00018183399999999877, 0.00018149999999999764, 0.00018113800000000083, 0.000181180999999999, 0.0001821390000000013, 0.00018166699999999994, 0.00018266700000000094, 0.0001826520000000019, 0.0001825000000000021, 0.00018084699999999787, 0.00018256900000000048, 0.0001814450000000023, 0.0001818199999999992, 0.00018133300000000574, 0.00018266600000000494, 0.00018234699999999937]</msg>
<status status="PASS" starttime="20201112 09:44:14.201" endtime="20201112 09:44:14.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.196" endtime="20201112 09:44:14.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.206" endtime="20201112 09:44:14.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:14.209" endtime="20201112 09:44:14.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.208" endtime="20201112 09:44:14.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.204" endtime="20201112 09:44:14.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.830" endtime="20201112 09:44:14.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.830" endtime="20201112 09:44:14.230"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.239" endtime="20201112 09:44:14.263"></status>
</kw>
<msg timestamp="20201112 09:44:14.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.237" endtime="20201112 09:44:14.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.264" endtime="20201112 09:44:14.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.267" endtime="20201112 09:44:14.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.235" endtime="20201112 09:44:14.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.233" endtime="20201112 09:44:14.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.276" endtime="20201112 09:44:14.563"></status>
</kw>
<msg timestamp="20201112 09:44:14.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022740931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.274" endtime="20201112 09:44:14.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022557722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022740931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.567" endtime="20201112 09:44:14.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.575" endtime="20201112 09:44:14.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.272" endtime="20201112 09:44:14.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.270" endtime="20201112 09:44:14.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:14.582" level="INFO">${RESULT} = [{'time': 0.022740931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018320900000000015, 'source_diff': 0.00018320900000000015}, {'time': 0.022932958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:14.578" endtime="20201112 09:44:14.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:14.595" level="INFO">${ACCURACY} = {'diff': [0.00018320900000000015, 0.00018348600000000007, 0.0001838330000000013, 0.00018312499999999926, 0.00018433400000000127, 0.00018472199999999828, 0.0001833330000000008, 0.00018365199999999943, ...</msg>
<status status="PASS" starttime="20201112 09:44:14.583" endtime="20201112 09:44:14.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.599" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 09:44:14.598" endtime="20201112 09:44:14.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.602" level="INFO">VALUE: [0.00018320900000000015, 0.00018348600000000007, 0.0001838330000000013, 0.00018312499999999926, 0.00018433400000000127, 0.00018472199999999828, 0.0001833330000000008, 0.00018365199999999943, 0.00018316699999999797, 0.00018366699999999847, 0.00018384800000000034, 0.00018283400000000324, 0.00018326299999999948, 0.0001831659999999985, 0.0001836529999999989, 0.00018400000000000014, 0.00018280599999999717, 0.0001836529999999989, 0.00018284699999999987, 0.0001830139999999987, 0.00018299999999999914, 0.00018329200000000156, 0.0001835269999999993, 0.000183875, 0.00018452799999999978, 0.00018287500000000248, 0.00018383299999999783, 0.00018312499999999926, 0.0001843200000000017, 0.0001834720000000005, 0.00018386100000000044, 0.00018466700000000294, 0.00018315300000000187, 0.00018366699999999847, 0.0001841529999999994, 0.0001843330000000018, 0.00018348600000000007, 0.00018400000000000014, 0.00018298599999999957, 0.00018279200000000106, 0.0001838330000000013, 0.00018398600000000057, 0.00018298599999999957, 0.00018331999999999724, 0.00018415300000000287, 0.00018366700000000194, 0.00018349999999999617, 0.00018299999999999567, 0.00018431900000000223, 0.00018363899999999933]</msg>
<status status="PASS" starttime="20201112 09:44:14.601" endtime="20201112 09:44:14.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.596" endtime="20201112 09:44:14.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.605" endtime="20201112 09:44:14.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:14.609" endtime="20201112 09:44:14.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.607" endtime="20201112 09:44:14.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.604" endtime="20201112 09:44:14.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.231" endtime="20201112 09:44:14.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.231" endtime="20201112 09:44:14.630"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.638" endtime="20201112 09:44:14.663"></status>
</kw>
<msg timestamp="20201112 09:44:14.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.637" endtime="20201112 09:44:14.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.664" endtime="20201112 09:44:14.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.667" endtime="20201112 09:44:14.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.634" endtime="20201112 09:44:14.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.632" endtime="20201112 09:44:14.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.676" endtime="20201112 09:44:14.963"></status>
</kw>
<msg timestamp="20201112 09:44:14.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022545389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.674" endtime="20201112 09:44:14.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022545389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.967" endtime="20201112 09:44:14.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.975" endtime="20201112 09:44:14.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.672" endtime="20201112 09:44:14.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.670" endtime="20201112 09:44:14.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:14.981" level="INFO">${RESULT} = [{'time': 0.022545389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018502800000000028, 'source_diff': 0.00018502800000000028}, {'time': 0.022741431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:14.978" endtime="20201112 09:44:14.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:14.995" level="INFO">${ACCURACY} = {'diff': [0.00018502800000000028, 0.00018534799999999838, 0.0001851530000000004, 0.00018584700000000287, 0.00018649999999999917, 0.00018601399999999824, 0.00018550000000000164, 0.00018568100000000004,...</msg>
<status status="PASS" starttime="20201112 09:44:14.982" endtime="20201112 09:44:14.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.999" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 09:44:14.998" endtime="20201112 09:44:15.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.002" level="INFO">VALUE: [0.00018502800000000028, 0.00018534799999999838, 0.0001851530000000004, 0.00018584700000000287, 0.00018649999999999917, 0.00018601399999999824, 0.00018550000000000164, 0.00018568100000000004, 0.00018484700000000187, 0.00018541700000000022, 0.00018670900000000018, 0.0001849309999999993, 0.00018550000000000164, 0.00018516699999999997, 0.0001861660000000015, 0.00018619400000000064, 0.00018616700000000097, 0.00018530599999999967, 0.0001860140000000017, 0.00018550000000000164, 0.0001854720000000025, 0.00018583299999999983, 0.00018632000000000024, 0.0001851949999999991, 0.00018600000000000214, 0.00018579100000000112, 0.0001864859999999996, 0.00018550000000000164, 0.00018481999999999874, 0.00018500000000000114, 0.00018599999999999867, 0.00018612500000000226, 0.00018649999999999917, 0.00018518099999999954, 0.00018612500000000226, 0.00018565299999999743, 0.00018499999999999767, 0.00018483299999999883, 0.00018666700000000147, 0.00018516699999999997, 0.0001859859999999991, 0.0001848469999999984, 0.00018654200000000135, 0.0001850140000000007, 0.00018481900000000273, 0.0001858469999999994, 0.00018551399999999774, 0.00018484699999999493, 0.0001861660000000015, 0.0001866530000000019]</msg>
<status status="PASS" starttime="20201112 09:44:15.001" endtime="20201112 09:44:15.003"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.996" endtime="20201112 09:44:15.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.005" endtime="20201112 09:44:15.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:15.009" endtime="20201112 09:44:15.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.007" endtime="20201112 09:44:15.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.004" endtime="20201112 09:44:15.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.631" endtime="20201112 09:44:15.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.630" endtime="20201112 09:44:15.030"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.038" endtime="20201112 09:44:15.062"></status>
</kw>
<msg timestamp="20201112 09:44:15.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.037" endtime="20201112 09:44:15.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.063" endtime="20201112 09:44:15.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.066" endtime="20201112 09:44:15.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.034" endtime="20201112 09:44:15.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.032" endtime="20201112 09:44:15.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.075" endtime="20201112 09:44:15.361"></status>
</kw>
<msg timestamp="20201112 09:44:15.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02248275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:15.073" endtime="20201112 09:44:15.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02248275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022670625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:15.365" endtime="20201112 09:44:15.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.373" endtime="20201112 09:44:15.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.071" endtime="20201112 09:44:15.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.069" endtime="20201112 09:44:15.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:15.379" level="INFO">${RESULT} = [{'time': 0.022670625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018787500000000054, 'source_diff': 0.00018787500000000054}, {'time': 0.022864639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:15.376" endtime="20201112 09:44:15.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:15.393" level="INFO">${ACCURACY} = {'diff': [0.00018787500000000054, 0.00018733299999999786, 0.0001869860000000001, 0.0001884869999999976, 0.00018866600000000053, 0.00018768100000000204, 0.00018820900000000168, 0.00018800000000000067, ...</msg>
<status status="PASS" starttime="20201112 09:44:15.380" endtime="20201112 09:44:15.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.397" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 09:44:15.396" endtime="20201112 09:44:15.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.400" level="INFO">VALUE: [0.00018787500000000054, 0.00018733299999999786, 0.0001869860000000001, 0.0001884869999999976, 0.00018866600000000053, 0.00018768100000000204, 0.00018820900000000168, 0.00018800000000000067, 0.0001878059999999987, 0.00018783299999999836, 0.00018866600000000053, 0.0001871669999999985, 0.00018850000000000117, 0.00018823600000000135, 0.00018784800000000088, 0.00018850000000000117, 0.00018751399999999974, 0.0001873470000000009, 0.00018781999999999827, 0.00018798700000000057, 0.00018711100000000022, 0.0001881799999999996, 0.0001881669999999995, 0.000188667, 0.0001879999999999972, 0.000187666999999999, 0.00018679099999999865, 0.0001878470000000014, 0.0001884999999999977, 0.000188667, 0.00018773600000000085, 0.00018701399999999924, 0.0001868470000000004, 0.0001874019999999997, 0.00018699999999999967, 0.00018787500000000054, 0.00018698699999999957, 0.00018816600000000003, 0.0001884860000000016, 0.00018750000000000017, 0.000188667, 0.0001868470000000004, 0.00018816600000000003, 0.00018866600000000053, 0.00018815299999999993, 0.0001870000000000066, 0.00018783400000000477, 0.0001878059999999987, 0.0001868609999999965, 0.0001873330000000048]</msg>
<status status="PASS" starttime="20201112 09:44:15.398" endtime="20201112 09:44:15.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.393" endtime="20201112 09:44:15.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.403" endtime="20201112 09:44:15.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:15.407" endtime="20201112 09:44:15.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.405" endtime="20201112 09:44:15.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.401" endtime="20201112 09:44:15.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.031" endtime="20201112 09:44:15.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.030" endtime="20201112 09:44:15.427"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.436" endtime="20201112 09:44:15.461"></status>
</kw>
<msg timestamp="20201112 09:44:15.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.434" endtime="20201112 09:44:15.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.462" endtime="20201112 09:44:15.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.465" endtime="20201112 09:44:15.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.432" endtime="20201112 09:44:15.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.430" endtime="20201112 09:44:15.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.474" endtime="20201112 09:44:15.762"></status>
</kw>
<msg timestamp="20201112 09:44:15.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022651486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022840542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.472" endtime="20201112 09:44:15.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022651486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022840542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.766" endtime="20201112 09:44:15.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.774" endtime="20201112 09:44:15.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.470" endtime="20201112 09:44:15.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.468" endtime="20201112 09:44:15.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:15.781" level="INFO">${RESULT} = [{'time': 0.022840542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018905599999999995, 'source_diff': 0.00018905599999999995}, {'time': 0.023038542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:15.777" endtime="20201112 09:44:15.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:15.794" level="INFO">${ACCURACY} = {'diff': [0.00018905599999999995, 0.00018883399999999884, 0.00018933299999999986, 0.0001894999999999987, 0.00018951399999999827, 0.00019066699999999853, 0.0001903479999999999, 0.0001904999999999997, 0...</msg>
<status status="PASS" starttime="20201112 09:44:15.782" endtime="20201112 09:44:15.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.798" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 09:44:15.797" endtime="20201112 09:44:15.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.801" level="INFO">VALUE: [0.00018905599999999995, 0.00018883399999999884, 0.00018933299999999986, 0.0001894999999999987, 0.00018951399999999827, 0.00019066699999999853, 0.0001903479999999999, 0.0001904999999999997, 0.00019030499999999825, 0.0001891670000000005, 0.00018955500000000097, 0.0001901809999999976, 0.00018983399999999984, 0.00019048600000000013, 0.0001903329999999974, 0.00019068100000000157, 0.000190667000000002, 0.00019001399999999877, 0.0001900419999999979, 0.00018966599999999806, 0.0001904999999999997, 0.0001891670000000005, 0.00018947199999999956, 0.00018933399999999934, 0.00018965200000000196, 0.00019066600000000253, 0.0001898609999999995, 0.00018879200000000013, 0.00018883399999999884, 0.00018900000000000167, 0.0001899999999999992, 0.00018950000000000217, 0.00018933299999999986, 0.00019065299999999896, 0.00018883399999999884, 0.0001893190000000003, 0.00019066699999999853, 0.00018984699999999993, 0.00018901400000000124, 0.00019043100000000132, 0.00018933299999999986, 0.0001889999999999982, 0.00018901400000000124, 0.00018949999999999523, 0.0001888200000000062, 0.00019034700000000043, 0.00019048599999999666, 0.00019016599999999856, 0.00018950000000000217, 0.00018883299999999936]</msg>
<status status="PASS" starttime="20201112 09:44:15.800" endtime="20201112 09:44:15.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.795" endtime="20201112 09:44:15.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.805" endtime="20201112 09:44:15.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:15.808" endtime="20201112 09:44:15.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.807" endtime="20201112 09:44:15.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.803" endtime="20201112 09:44:15.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.428" endtime="20201112 09:44:15.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.428" endtime="20201112 09:44:15.829"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.838" endtime="20201112 09:44:15.862"></status>
</kw>
<msg timestamp="20201112 09:44:15.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.836" endtime="20201112 09:44:15.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.864" endtime="20201112 09:44:15.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.866" endtime="20201112 09:44:15.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.834" endtime="20201112 09:44:15.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.832" endtime="20201112 09:44:15.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.875" endtime="20201112 09:44:16.162"></status>
</kw>
<msg timestamp="20201112 09:44:16.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022324625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022516667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.874" endtime="20201112 09:44:16.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022324625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022516667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.167" endtime="20201112 09:44:16.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.175" endtime="20201112 09:44:16.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.871" endtime="20201112 09:44:16.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.869" endtime="20201112 09:44:16.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:16.181" level="INFO">${RESULT} = [{'time': 0.022516667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001920419999999999, 'source_diff': 0.0001920419999999999}, {'time': 0.022716694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:16.178" endtime="20201112 09:44:16.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:16.195" level="INFO">${ACCURACY} = {'diff': [0.0001920419999999999, 0.00019162499999999735, 0.0001908190000000018, 0.00019198599999999816, 0.00019187500000000107, 0.0001915000000000007, 0.00019077699999999961, 0.00019138900000000014, 0...</msg>
<status status="PASS" starttime="20201112 09:44:16.182" endtime="20201112 09:44:16.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.199" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 09:44:16.198" endtime="20201112 09:44:16.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.202" level="INFO">VALUE: [0.0001920419999999999, 0.00019162499999999735, 0.0001908190000000018, 0.00019198599999999816, 0.00019187500000000107, 0.0001915000000000007, 0.00019077699999999961, 0.00019138900000000014, 0.00019116599999999956, 0.00019216700000000003, 0.0001921390000000009, 0.0001923199999999993, 0.0001920419999999999, 0.0001908190000000018, 0.00019199999999999773, 0.00019266699999999706, 0.0001915000000000007, 0.000191667000000003, 0.00019148599999999766, 0.00019266700000000053, 0.00019134700000000143, 0.00019133400000000134, 0.00019263899999999792, 0.00019133300000000186, 0.00019180499999999975, 0.0001910000000000002, 0.00019115299999999946, 0.0001915000000000007, 0.00019116599999999956, 0.00019184700000000193, 0.00019165299999999996, 0.00019083300000000136, 0.0001925269999999979, 0.00019170799999999877, 0.0001925420000000004, 0.0001915000000000007, 0.00019137500000000057, 0.0001908610000000005, 0.0001915000000000007, 0.0001920000000000012, 0.00019218000000000013, 0.00019131899999999882, 0.0001920000000000012, 0.00019252800000000084, 0.00019116699999999903, 0.00019116599999999956, 0.00019176399999999705, 0.00019159699999999474, 0.00019101400000000324, 0.0001920410000000039]</msg>
<status status="PASS" starttime="20201112 09:44:16.200" endtime="20201112 09:44:16.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.196" endtime="20201112 09:44:16.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.205" endtime="20201112 09:44:16.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:16.209" endtime="20201112 09:44:16.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.207" endtime="20201112 09:44:16.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.204" endtime="20201112 09:44:16.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.830" endtime="20201112 09:44:16.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.830" endtime="20201112 09:44:16.230"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.238" endtime="20201112 09:44:16.263"></status>
</kw>
<msg timestamp="20201112 09:44:16.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.237" endtime="20201112 09:44:16.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.264" endtime="20201112 09:44:16.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.267" endtime="20201112 09:44:16.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.234" endtime="20201112 09:44:16.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.232" endtime="20201112 09:44:16.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.276" endtime="20201112 09:44:16.563"></status>
</kw>
<msg timestamp="20201112 09:44:16.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022401472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022594667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.274" endtime="20201112 09:44:16.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022401472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022594667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.567" endtime="20201112 09:44:16.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.575" endtime="20201112 09:44:16.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.272" endtime="20201112 09:44:16.577"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.270" endtime="20201112 09:44:16.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:16.582" level="INFO">${RESULT} = [{'time': 0.022594667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00019319500000000017, 'source_diff': 0.00019319500000000017}, {'time': 0.022800667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:16.579" endtime="20201112 09:44:16.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:16.595" level="INFO">${ACCURACY} = {'diff': [0.00019319500000000017, 0.0001933200000000003, 0.0001936659999999986, 0.00019450000000000023, 0.00019366700000000153, 0.0001938200000000008, 0.00019283399999999937, 0.0001938200000000008, 0....</msg>
<status status="PASS" starttime="20201112 09:44:16.583" endtime="20201112 09:44:16.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.600" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 09:44:16.599" endtime="20201112 09:44:16.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.602" level="INFO">VALUE: [0.00019319500000000017, 0.0001933200000000003, 0.0001936659999999986, 0.00019450000000000023, 0.00019366700000000153, 0.0001938200000000008, 0.00019283399999999937, 0.0001938200000000008, 0.0001930000000000022, 0.00019399999999999973, 0.00019301400000000177, 0.00019298599999999916, 0.00019383400000000037, 0.00019298599999999916, 0.00019374999999999948, 0.00019434700000000096, 0.0001935269999999989, 0.0001930139999999983, 0.0001946659999999996, 0.00019380499999999828, 0.00019299999999999873, 0.0001933330000000004, 0.00019316700000000103, 0.0001945689999999986, 0.0001936390000000024, 0.00019369500000000067, 0.00019399999999999973, 0.00019450000000000023, 0.0001938200000000008, 0.0001943330000000014, 0.00019299999999999873, 0.0001936810000000011, 0.0001935000000000027, 0.00019333399999999987, 0.00019433299999999792, 0.0001945139999999998, 0.00019298599999999916, 0.00019283399999999937, 0.0001930139999999983, 0.00019347299999999956, 0.00019324999999999898, 0.00019349999999999923, 0.00019316699999999756, 0.00019383400000000037, 0.00019406900000000504, 0.00019337499999999563, 0.00019434700000000443, 0.00019287499999999513, 0.0001935139999999988, 0.00019431999999999783]</msg>
<status status="PASS" starttime="20201112 09:44:16.601" endtime="20201112 09:44:16.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.596" endtime="20201112 09:44:16.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.606" endtime="20201112 09:44:16.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:16.609" endtime="20201112 09:44:16.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.608" endtime="20201112 09:44:16.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.604" endtime="20201112 09:44:16.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.231" endtime="20201112 09:44:16.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.230" endtime="20201112 09:44:16.630"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.639" endtime="20201112 09:44:16.664"></status>
</kw>
<msg timestamp="20201112 09:44:16.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.637" endtime="20201112 09:44:16.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.665" endtime="20201112 09:44:16.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.668" endtime="20201112 09:44:16.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.635" endtime="20201112 09:44:16.670"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.633" endtime="20201112 09:44:16.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.677" endtime="20201112 09:44:16.964"></status>
</kw>
<msg timestamp="20201112 09:44:16.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022320319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022515875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.675" endtime="20201112 09:44:16.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022320319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022515875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.968" endtime="20201112 09:44:16.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.976" endtime="20201112 09:44:16.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.673" endtime="20201112 09:44:16.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.671" endtime="20201112 09:44:16.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:16.983" level="INFO">${RESULT} = [{'time': 0.022515875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001955559999999995, 'source_diff': 0.0001955559999999995}, {'time': 0.022719889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:16.979" endtime="20201112 09:44:16.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:16.996" level="INFO">${ACCURACY} = {'diff': [0.0001955559999999995, 0.00019512500000000085, 0.00019566700000000006, 0.00019566700000000006, 0.00019536100000000153, 0.0001962360000000024, 0.00019615299999999752, 0.00019500000000000073, ...</msg>
<status status="PASS" starttime="20201112 09:44:16.984" endtime="20201112 09:44:16.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.001" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 09:44:16.999" endtime="20201112 09:44:17.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.003" level="INFO">VALUE: [0.0001955559999999995, 0.00019512500000000085, 0.00019566700000000006, 0.00019566700000000006, 0.00019536100000000153, 0.0001962360000000024, 0.00019615299999999752, 0.00019500000000000073, 0.00019600000000000173, 0.00019483299999999842, 0.0001966530000000015, 0.00019566700000000006, 0.00019500000000000073, 0.0001956530000000005, 0.00019511200000000076, 0.00019548600000000166, 0.0001954169999999998, 0.00019549999999999776, 0.00019516699999999956, 0.0001963339999999994, 0.00019666599999999812, 0.00019629100000000121, 0.00019480600000000223, 0.00019534800000000144, 0.00019566700000000006, 0.00019666599999999812, 0.00019531900000000282, 0.0001960140000000013, 0.0001960140000000013, 0.00019600000000000173, 0.0001963339999999994, 0.0001953889999999972, 0.0001948330000000019, 0.00019526400000000055, 0.0001963339999999994, 0.00019631999999999983, 0.00019534700000000196, 0.00019618000000000066, 0.00019581899999999985, 0.000195153, 0.00019650000000000223, 0.00019483299999999842, 0.0001956660000000006, 0.00019516699999999956, 0.0001955140000000008, 0.00019630600000000026, 0.00019616700000000403, 0.00019591599999999737, 0.00019559699999999874, 0.00019515299999999652]</msg>
<status status="PASS" starttime="20201112 09:44:17.002" endtime="20201112 09:44:17.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.997" endtime="20201112 09:44:17.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.007" endtime="20201112 09:44:17.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:17.010" endtime="20201112 09:44:17.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.008" endtime="20201112 09:44:17.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.005" endtime="20201112 09:44:17.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.631" endtime="20201112 09:44:17.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.631" endtime="20201112 09:44:17.031"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.040" endtime="20201112 09:44:17.064"></status>
</kw>
<msg timestamp="20201112 09:44:17.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.038" endtime="20201112 09:44:17.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.066" endtime="20201112 09:44:17.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.068" endtime="20201112 09:44:17.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.035" endtime="20201112 09:44:17.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.033" endtime="20201112 09:44:17.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.077" endtime="20201112 09:44:17.366"></status>
</kw>
<msg timestamp="20201112 09:44:17.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022290583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.076" endtime="20201112 09:44:17.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022290583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.370" endtime="20201112 09:44:17.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.378" endtime="20201112 09:44:17.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.073" endtime="20201112 09:44:17.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.072" endtime="20201112 09:44:17.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:17.385" level="INFO">${RESULT} = [{'time': 0.022487458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00019687499999999913, 'source_diff': 0.00019687499999999913}, {'time': 0.022691486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:17.382" endtime="20201112 09:44:17.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:17.398" level="INFO">${ACCURACY} = {'diff': [0.00019687499999999913, 0.0001986799999999997, 0.00019683300000000042, 0.00019782000000000133, 0.00019833399999999793, 0.0001983470000000015, 0.00019786100000000056, 0.00019751399999999933, ...</msg>
<status status="PASS" starttime="20201112 09:44:17.386" endtime="20201112 09:44:17.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.403" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 09:44:17.402" endtime="20201112 09:44:17.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.405" level="INFO">VALUE: [0.00019687499999999913, 0.0001986799999999997, 0.00019683300000000042, 0.00019782000000000133, 0.00019833399999999793, 0.0001983470000000015, 0.00019786100000000056, 0.00019751399999999933, 0.00019850000000000076, 0.00019765299999999902, 0.0001985279999999999, 0.00019794400000000198, 0.00019765299999999902, 0.00019731999999999736, 0.00019684799999999947, 0.00019699999999999926, 0.00019757000000000108, 0.00019797199999999765, 0.00019749999999999976, 0.00019830600000000226, 0.00019687499999999913, 0.0001986799999999997, 0.00019686099999999956, 0.00019868099999999916, 0.00019851400000000033, 0.00019832000000000183, 0.00019700000000000273, 0.00019772300000000034, 0.00019850000000000076, 0.00019718099999999766, 0.0001970140000000023, 0.0001971799999999982, 0.0001979860000000007, 0.00019766700000000206, 0.0001973340000000004, 0.0001986669999999996, 0.00019763899999999945, 0.00019866600000000012, 0.0001979860000000007, 0.00019747200000000062, 0.00019682000000000033, 0.00019818000000000266, 0.00019818000000000266, 0.0001985279999999999, 0.0001986669999999996, 0.00019718099999999766, 0.00019751399999999586, 0.00019700000000000273, 0.00019816599999999962, 0.0001979999999999968]</msg>
<status status="PASS" starttime="20201112 09:44:17.404" endtime="20201112 09:44:17.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.399" endtime="20201112 09:44:17.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.409" endtime="20201112 09:44:17.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:17.412" endtime="20201112 09:44:17.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.411" endtime="20201112 09:44:17.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.407" endtime="20201112 09:44:17.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.032" endtime="20201112 09:44:17.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.031" endtime="20201112 09:44:17.433"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.442" endtime="20201112 09:44:17.466"></status>
</kw>
<msg timestamp="20201112 09:44:17.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.440" endtime="20201112 09:44:17.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.467" endtime="20201112 09:44:17.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.470" endtime="20201112 09:44:17.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.438" endtime="20201112 09:44:17.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.435" endtime="20201112 09:44:17.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.479" endtime="20201112 09:44:17.766"></status>
</kw>
<msg timestamp="20201112 09:44:17.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022278653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.477" endtime="20201112 09:44:17.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022278653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.770" endtime="20201112 09:44:17.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.778" endtime="20201112 09:44:17.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.475" endtime="20201112 09:44:17.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.473" endtime="20201112 09:44:17.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:17.785" level="INFO">${RESULT} = [{'time': 0.022478375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001997219999999994, 'source_diff': 0.0001997219999999994}, {'time': 0.022688403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:17.782" endtime="20201112 09:44:17.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:17.798" level="INFO">${ACCURACY} = {'diff': [0.0001997219999999994, 0.0001999999999999988, 0.00020001399999999836, 0.00020017999999999772, 0.00019900000000000126, 0.0001999999999999988, 0.00019950000000000176, 0.00020018100000000066, 0...</msg>
<status status="PASS" starttime="20201112 09:44:17.786" endtime="20201112 09:44:17.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.803" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 09:44:17.802" endtime="20201112 09:44:17.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.805" level="INFO">VALUE: [0.0001997219999999994, 0.0001999999999999988, 0.00020001399999999836, 0.00020017999999999772, 0.00019900000000000126, 0.0001999999999999988, 0.00019950000000000176, 0.00020018100000000066, 0.0001999869999999987, 0.00019948599999999872, 0.00019915300000000052, 0.00019945799999999958, 0.0001994999999999983, 0.00019884699999999852, 0.00019913900000000095, 0.0001989999999999978, 0.00020034700000000003, 0.00019981999999999986, 0.00019965300000000102, 0.0002007220000000004, 0.0002003609999999996, 0.0001996670000000006, 0.0002001809999999972, 0.0002004999999999993, 0.00019966599999999765, 0.00020051400000000233, 0.00019933299999999946, 0.00019979200000000072, 0.00019883399999999843, 0.00020067999999999822, 0.00019898599999999822, 0.00019966699999999712, 0.00020062499999999941, 0.00019883399999999843, 0.00020020800000000033, 0.00019933299999999946, 0.00019984699999999953, 0.00019915300000000052, 0.0001994999999999983, 0.0002001939999999973, 0.00019966600000000112, 0.00019936100000000206, 0.00019927799999999718, 0.00019986099999999563, 0.0001996670000000006, 0.00020016600000000162, 0.00020011099999999588, 0.00019983299999999649, 0.00019915300000000052, 0.00020065300000000202]</msg>
<status status="PASS" starttime="20201112 09:44:17.804" endtime="20201112 09:44:17.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.799" endtime="20201112 09:44:17.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.809" endtime="20201112 09:44:17.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:17.812" endtime="20201112 09:44:17.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.811" endtime="20201112 09:44:17.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.807" endtime="20201112 09:44:17.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.434" endtime="20201112 09:44:17.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.433" endtime="20201112 09:44:17.833"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.842" endtime="20201112 09:44:17.867"></status>
</kw>
<msg timestamp="20201112 09:44:17.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.840" endtime="20201112 09:44:17.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.868" endtime="20201112 09:44:17.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.871" endtime="20201112 09:44:17.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.838" endtime="20201112 09:44:17.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.835" endtime="20201112 09:44:17.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.880" endtime="20201112 09:44:18.168"></status>
</kw>
<msg timestamp="20201112 09:44:18.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022254875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022457083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.878" endtime="20201112 09:44:18.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022254875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022457083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.172" endtime="20201112 09:44:18.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.180" endtime="20201112 09:44:18.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.876" endtime="20201112 09:44:18.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.874" endtime="20201112 09:44:18.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:18.187" level="INFO">${RESULT} = [{'time': 0.022457083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020220799999999886, 'source_diff': 0.00020220799999999886}, {'time': 0.022667097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:18.183" endtime="20201112 09:44:18.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:18.200" level="INFO">${ACCURACY} = {'diff': [0.00020220799999999886, 0.00020216600000000015, 0.00020147200000000115, 0.00020266700000000012, 0.0002009999999999998, 0.00020151399999999986, 0.00020117999999999872, 0.00020266700000000012,...</msg>
<status status="PASS" starttime="20201112 09:44:18.188" endtime="20201112 09:44:18.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.204" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 09:44:18.203" endtime="20201112 09:44:18.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.207" level="INFO">VALUE: [0.00020220799999999886, 0.00020216600000000015, 0.00020147200000000115, 0.00020266700000000012, 0.0002009999999999998, 0.00020151399999999986, 0.00020117999999999872, 0.00020266700000000012, 0.00020208299999999874, 0.00020083400000000043, 0.00020129099999999928, 0.00020217999999999972, 0.00020084699999999706, 0.00020234699999999856, 0.00020133400000000093, 0.0002025139999999974, 0.00020201400000000036, 0.00020181899999999892, 0.00020219500000000223, 0.0002012639999999996, 0.0002015000000000003, 0.00020251400000000086, 0.00020251400000000086, 0.00020115299999999905, 0.00020266700000000012, 0.00020077800000000215, 0.00020183300000000196, 0.00020133299999999799, 0.0002013060000000018, 0.0002013480000000005, 0.00020151300000000039, 0.00020180499999999935, 0.0002009999999999998, 0.00020166699999999912, 0.0002015000000000003, 0.00020163899999999998, 0.00020120800000000133, 0.00020233299999999899, 0.00020088799999999976, 0.00020082000000000086, 0.0002007639999999991, 0.00020233299999999899, 0.00020234700000000203, 0.00020266699999999666, 0.00020268099999999623, 0.0002015000000000003, 0.00020201399999999342, 0.00020215200000000405, 0.00020248600000000172, 0.0002015000000000003]</msg>
<status status="PASS" starttime="20201112 09:44:18.206" endtime="20201112 09:44:18.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.201" endtime="20201112 09:44:18.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.211" endtime="20201112 09:44:18.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:18.214" endtime="20201112 09:44:18.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.213" endtime="20201112 09:44:18.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.209" endtime="20201112 09:44:18.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.834" endtime="20201112 09:44:18.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.833" endtime="20201112 09:44:18.235"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.244" endtime="20201112 09:44:18.268"></status>
</kw>
<msg timestamp="20201112 09:44:18.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.242" endtime="20201112 09:44:18.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.270" endtime="20201112 09:44:18.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.272" endtime="20201112 09:44:18.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.239" endtime="20201112 09:44:18.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.237" endtime="20201112 09:44:18.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.281" endtime="20201112 09:44:18.568"></status>
</kw>
<msg timestamp="20201112 09:44:18.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022711083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022914306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.279" endtime="20201112 09:44:18.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022711083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022914306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.572" endtime="20201112 09:44:18.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.580" endtime="20201112 09:44:18.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.277" endtime="20201112 09:44:18.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.275" endtime="20201112 09:44:18.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:18.586" level="INFO">${RESULT} = [{'time': 0.022914306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0002032229999999989, 'source_diff': 0.0002032229999999989}, {'time': 0.023124306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:18.583" endtime="20201112 09:44:18.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:18.600" level="INFO">${ACCURACY} = {'diff': [0.0002032229999999989, 0.00020462499999999995, 0.00020416599999999868, 0.00020418099999999773, 0.00020366700000000112, 0.00020333399999999946, 0.00020293099999999994, 0.00020333299999999999,...</msg>
<status status="PASS" starttime="20201112 09:44:18.587" endtime="20201112 09:44:18.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.604" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 09:44:18.603" endtime="20201112 09:44:18.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.607" level="INFO">VALUE: [0.0002032229999999989, 0.00020462499999999995, 0.00020416599999999868, 0.00020418099999999773, 0.00020366700000000112, 0.00020333399999999946, 0.00020293099999999994, 0.00020333299999999999, 0.00020433300000000099, 0.00020383300000000049, 0.00020299999999999832, 0.00020416599999999868, 0.00020399999999999932, 0.00020465299999999909, 0.00020394500000000051, 0.0002045139999999994, 0.0002030000000000018, 0.0002046519999999996, 0.00020398599999999975, 0.00020401400000000236, 0.00020401400000000236, 0.00020468000000000222, 0.00020366600000000165, 0.0002030000000000018, 0.00020399999999999932, 0.00020449999999999982, 0.00020399999999999932, 0.00020349999999999882, 0.00020365300000000156, 0.00020433300000000099, 0.00020383399999999996, 0.00020383300000000049, 0.00020317999999999725, 0.00020280500000000035, 0.00020399999999999932, 0.00020333399999999946, 0.00020349999999999882, 0.00020468000000000222, 0.00020366600000000165, 0.00020433300000000099, 0.0002035000000000023, 0.00020384799999999953, 0.00020399999999999585, 0.00020401400000000236, 0.00020284699999999906, 0.0002028749999999982, 0.00020351399999999492, 0.00020433300000000099, 0.00020415300000000552, 0.00020330600000000032]</msg>
<status status="PASS" starttime="20201112 09:44:18.605" endtime="20201112 09:44:18.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.601" endtime="20201112 09:44:18.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.610" endtime="20201112 09:44:18.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:18.614" endtime="20201112 09:44:18.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.612" endtime="20201112 09:44:18.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.608" endtime="20201112 09:44:18.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.236" endtime="20201112 09:44:18.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.235" endtime="20201112 09:44:18.634"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.643" endtime="20201112 09:44:18.668"></status>
</kw>
<msg timestamp="20201112 09:44:18.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.642" endtime="20201112 09:44:18.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.670" endtime="20201112 09:44:18.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.672" endtime="20201112 09:44:18.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.639" endtime="20201112 09:44:18.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.637" endtime="20201112 09:44:18.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.681" endtime="20201112 09:44:18.969"></status>
</kw>
<msg timestamp="20201112 09:44:18.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022723042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.680" endtime="20201112 09:44:18.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022723042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.973" endtime="20201112 09:44:18.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.981" endtime="20201112 09:44:18.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.677" endtime="20201112 09:44:18.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.676" endtime="20201112 09:44:18.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:18.988" level="INFO">${RESULT} = [{'time': 0.022723042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0002055559999999991, 'source_diff': 0.0002055559999999991}, {'time': 0.022937069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:18.985" endtime="20201112 09:44:18.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:19.001" level="INFO">${ACCURACY} = {'diff': [0.0002055559999999991, 0.0002066520000000016, 0.00020599999999999785, 0.00020500000000000032, 0.0002048880000000003, 0.00020630599999999985, 0.0002056520000000006, 0.00020533299999999852, 0....</msg>
<status status="PASS" starttime="20201112 09:44:18.989" endtime="20201112 09:44:19.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.006" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 09:44:19.005" endtime="20201112 09:44:19.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.008" level="INFO">VALUE: [0.0002055559999999991, 0.0002066520000000016, 0.00020599999999999785, 0.00020500000000000032, 0.0002048880000000003, 0.00020630599999999985, 0.0002056520000000006, 0.00020533299999999852, 0.00020633299999999952, 0.00020500000000000032, 0.00020568099999999923, 0.000206333999999999, 0.00020550000000000082, 0.00020599999999999785, 0.0002055140000000004, 0.00020599999999999785, 0.00020648699999999826, 0.00020566600000000018, 0.00020565300000000009, 0.00020668100000000023, 0.00020629200000000028, 0.00020565300000000009, 0.00020649999999999835, 0.00020536100000000113, 0.00020666700000000066, 0.0002053200000000019, 0.00020516699999999916, 0.00020565300000000009, 0.00020586099999999816, 0.00020515299999999959, 0.00020631999999999942, 0.00020598699999999776, 0.00020502799999999946, 0.00020552799999999996, 0.0002055270000000005, 0.0002048339999999975, 0.0002054580000000021, 0.00020567999999999975, 0.00020595799999999914, 0.00020548600000000125, 0.0002065140000000014, 0.00020551399999999692, 0.00020499999999999685, 0.00020566600000000018, 0.00020488899999999977, 0.00020634800000000203, 0.00020498599999999728, 0.00020631900000000342, 0.00020631900000000342, 0.00020583299999999555]</msg>
<status status="PASS" starttime="20201112 09:44:19.007" endtime="20201112 09:44:19.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.002" endtime="20201112 09:44:19.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.012" endtime="20201112 09:44:19.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:19.015" endtime="20201112 09:44:19.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.014" endtime="20201112 09:44:19.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.010" endtime="20201112 09:44:19.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.635" endtime="20201112 09:44:19.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.635" endtime="20201112 09:44:19.036"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.045" endtime="20201112 09:44:19.070"></status>
</kw>
<msg timestamp="20201112 09:44:19.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.043" endtime="20201112 09:44:19.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.072" endtime="20201112 09:44:19.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.074" endtime="20201112 09:44:19.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.041" endtime="20201112 09:44:19.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.039" endtime="20201112 09:44:19.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.083" endtime="20201112 09:44:19.370"></status>
</kw>
<msg timestamp="20201112 09:44:19.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022802181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.082" endtime="20201112 09:44:19.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022594792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022802181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.374" endtime="20201112 09:44:19.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.382" endtime="20201112 09:44:19.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.079" endtime="20201112 09:44:19.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.077" endtime="20201112 09:44:19.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:19.389" level="INFO">${RESULT} = [{'time': 0.022802181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020738900000000227, 'source_diff': 0.00020738900000000227}, {'time': 0.023018181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:19.386" endtime="20201112 09:44:19.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:19.402" level="INFO">${ACCURACY} = {'diff': [0.00020738900000000227, 0.0002068339999999995, 0.00020818000000000225, 0.0002080140000000029, 0.0002082919999999988, 0.00020816699999999869, 0.0002075270000000025, 0.00020749999999999935, 0....</msg>
<status status="PASS" starttime="20201112 09:44:19.390" endtime="20201112 09:44:19.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.407" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 09:44:19.406" endtime="20201112 09:44:19.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.409" level="INFO">VALUE: [0.00020738900000000227, 0.0002068339999999995, 0.00020818000000000225, 0.0002080140000000029, 0.0002082919999999988, 0.00020816699999999869, 0.0002075270000000025, 0.00020749999999999935, 0.00020766700000000166, 0.0002067780000000012, 0.00020745900000000012, 0.000208334000000001, 0.0002071950000000003, 0.00020813899999999955, 0.00020816699999999869, 0.00020818100000000173, 0.00020854199999999906, 0.00020765299999999862, 0.00020681900000000045, 0.00020870900000000137, 0.00020818100000000173, 0.00020862500000000048, 0.00020769399999999785, 0.00020866700000000266, 0.00020848600000000078, 0.00020816699999999869, 0.0002068339999999995, 0.00020733300000000052, 0.00020816699999999869, 0.00020769499999999733, 0.00020766699999999819, 0.0002078470000000006, 0.00020815199999999964, 0.00020699999999999885, 0.00020777799999999874, 0.00020850000000000035, 0.00020799999999999985, 0.00020801399999999942, 0.0002070140000000019, 0.00020850000000000035, 0.00020683399999999602, 0.00020816700000000216, 0.0002084720000000012, 0.00020715300000000159, 0.000208624999999997, 0.0002081809999999948, 0.00020850000000000035, 0.00020869400000000232, 0.00020766700000000166, 0.00020751399999999892]</msg>
<status status="PASS" starttime="20201112 09:44:19.408" endtime="20201112 09:44:19.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.403" endtime="20201112 09:44:19.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.413" endtime="20201112 09:44:19.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:19.416" endtime="20201112 09:44:19.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.414" endtime="20201112 09:44:19.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.411" endtime="20201112 09:44:19.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.037" endtime="20201112 09:44:19.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.036" endtime="20201112 09:44:19.437"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.446" endtime="20201112 09:44:19.470"></status>
</kw>
<msg timestamp="20201112 09:44:19.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.444" endtime="20201112 09:44:19.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.472" endtime="20201112 09:44:19.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.474" endtime="20201112 09:44:19.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.441" endtime="20201112 09:44:19.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.439" endtime="20201112 09:44:19.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.484" endtime="20201112 09:44:19.770"></status>
</kw>
<msg timestamp="20201112 09:44:19.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022236472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.482" endtime="20201112 09:44:19.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022236472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022445181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.774" endtime="20201112 09:44:19.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.782" endtime="20201112 09:44:19.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.479" endtime="20201112 09:44:19.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.478" endtime="20201112 09:44:19.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:19.789" level="INFO">${RESULT} = [{'time': 0.022445181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020870900000000137, 'source_diff': 0.00020870900000000137}, {'time': 0.022665208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:19.785" endtime="20201112 09:44:19.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:19.802" level="INFO">${ACCURACY} = {'diff': [0.00020870900000000137, 0.00021016599999999774, 0.000209624999999998, 0.0002102920000000008, 0.00020983399999999902, 0.00020983399999999902, 0.0002104859999999993, 0.00021018100000000026, 0....</msg>
<status status="PASS" starttime="20201112 09:44:19.790" endtime="20201112 09:44:19.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.806" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 09:44:19.805" endtime="20201112 09:44:19.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.809" level="INFO">VALUE: [0.00020870900000000137, 0.00021016599999999774, 0.000209624999999998, 0.0002102920000000008, 0.00020983399999999902, 0.00020983399999999902, 0.0002104859999999993, 0.00021018100000000026, 0.00021050000000000235, 0.0002098340000000025, 0.00021019400000000035, 0.00021033300000000005, 0.00021001399999999795, 0.00021033300000000005, 0.00021002700000000152, 0.00020981899999999998, 0.00020895800000000214, 0.00020934699999999862, 0.00020933299999999905, 0.00021034800000000256, 0.00020883299999999855, 0.00020951400000000092, 0.00020937500000000123, 0.00020934800000000156, 0.00020998600000000228, 0.00020915300000000012, 0.00020994399999999663, 0.00020949999999999788, 0.0002088470000000016, 0.0002104859999999993, 0.00020965199999999767, 0.0002088470000000016, 0.0002087919999999993, 0.00021069500000000033, 0.00020884800000000106, 0.00021066599999999824, 0.00020899999999999738, 0.00020900000000000085, 0.0002106670000000012, 0.00021018100000000026, 0.00020915200000000064, 0.00020981899999999998, 0.0002094720000000022, 0.00021000000000000185, 0.00021018000000000425, 0.00021015199999999817, 0.00021031900000000048, 0.00020926400000000067, 0.00021066699999999772, 0.00020983399999999902]</msg>
<status status="PASS" starttime="20201112 09:44:19.808" endtime="20201112 09:44:19.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.803" endtime="20201112 09:44:19.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.813" endtime="20201112 09:44:19.814"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:19.816" endtime="20201112 09:44:19.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.814" endtime="20201112 09:44:19.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.811" endtime="20201112 09:44:19.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.438" endtime="20201112 09:44:19.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.437" endtime="20201112 09:44:19.837"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.845" endtime="20201112 09:44:19.871"></status>
</kw>
<msg timestamp="20201112 09:44:19.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.844" endtime="20201112 09:44:19.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.872" endtime="20201112 09:44:19.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.875" endtime="20201112 09:44:19.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.841" endtime="20201112 09:44:19.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.839" endtime="20201112 09:44:19.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.884" endtime="20201112 09:44:20.170"></status>
</kw>
<msg timestamp="20201112 09:44:20.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.883" endtime="20201112 09:44:20.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.174" endtime="20201112 09:44:20.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.182" endtime="20201112 09:44:20.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.880" endtime="20201112 09:44:20.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.878" endtime="20201112 09:44:20.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:20.189" level="INFO">${RESULT} = [{'time': 0.022798264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00021186099999999722, 'source_diff': 0.00021186099999999722}, {'time': 0.023016292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:20.186" endtime="20201112 09:44:20.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:20.202" level="INFO">${ACCURACY} = {'diff': [0.00021186099999999722, 0.0002114860000000003, 0.00021250000000000088, 0.0002126809999999993, 0.00021215299999999965, 0.0002118610000000007, 0.00021166699999999872, 0.0002126380000000011, 0....</msg>
<status status="PASS" starttime="20201112 09:44:20.190" endtime="20201112 09:44:20.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.207" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 09:44:20.206" endtime="20201112 09:44:20.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.209" level="INFO">VALUE: [0.00021186099999999722, 0.0002114860000000003, 0.00021250000000000088, 0.0002126809999999993, 0.00021215299999999965, 0.0002118610000000007, 0.00021166699999999872, 0.0002126380000000011, 0.00021168000000000228, 0.00021265300000000015, 0.00021266699999999972, 0.00021201399999999995, 0.00021131900000000148, 0.00021168000000000228, 0.00021111099999999994, 0.0002118480000000006, 0.00021182000000000145, 0.00021116599999999874, 0.00021267999999999981, 0.0002118749999999968, 0.00021251400000000045, 0.0002111119999999994, 0.00021233299999999858, 0.00021133299999999758, 0.00021183299999999808, 0.00021080600000000088, 0.00021231999999999848, 0.00021118000000000178, 0.0002124579999999987, 0.0002124999999999974, 0.0002109449999999971, 0.00021197199999999777, 0.00021233299999999858, 0.0002124999999999974, 0.00021266600000000024, 0.00021133399999999705, 0.00021087499999999926, 0.0002125419999999996, 0.00021202799999999952, 0.0002124999999999974, 0.00021201399999999648, 0.00021252799999999655, 0.00021166599999999924, 0.00021182000000000145, 0.0002116950000000048, 0.00021179199999999537, 0.00021266600000000024, 0.00021217999999999931, 0.00021166699999999872, 0.000212028000000003]</msg>
<status status="PASS" starttime="20201112 09:44:20.208" endtime="20201112 09:44:20.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.203" endtime="20201112 09:44:20.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.213" endtime="20201112 09:44:20.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:20.216" endtime="20201112 09:44:20.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.215" endtime="20201112 09:44:20.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.211" endtime="20201112 09:44:20.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.838" endtime="20201112 09:44:20.237"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.837" endtime="20201112 09:44:20.237"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.246" endtime="20201112 09:44:20.271"></status>
</kw>
<msg timestamp="20201112 09:44:20.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.244" endtime="20201112 09:44:20.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.273" endtime="20201112 09:44:20.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.275" endtime="20201112 09:44:20.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.242" endtime="20201112 09:44:20.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.240" endtime="20201112 09:44:20.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.284" endtime="20201112 09:44:20.572"></status>
</kw>
<msg timestamp="20201112 09:44:20.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022600653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022813528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.283" endtime="20201112 09:44:20.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022600653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022813528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.576" endtime="20201112 09:44:20.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.584" endtime="20201112 09:44:20.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.280" endtime="20201112 09:44:20.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.279" endtime="20201112 09:44:20.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:20.590" level="INFO">${RESULT} = [{'time': 0.022813528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00021287500000000126, 'source_diff': 0.00021287500000000126}, {'time': 0.023031556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:20.587" endtime="20201112 09:44:20.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:20.648" level="INFO">${ACCURACY} = {'diff': [0.00021287500000000126, 0.00021316700000000022, 0.00021348599999999884, 0.0002139999999999989, 0.0002139860000000028, 0.00021418099999999732, 0.00021436099999999972, 0.00021466599999999877, ...</msg>
<status status="PASS" starttime="20201112 09:44:20.591" endtime="20201112 09:44:20.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.653" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 09:44:20.652" endtime="20201112 09:44:20.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.655" level="INFO">VALUE: [0.00021287500000000126, 0.00021316700000000022, 0.00021348599999999884, 0.0002139999999999989, 0.0002139860000000028, 0.00021418099999999732, 0.00021436099999999972, 0.00021466599999999877, 0.00021451399999999898, 0.0002129999999999979, 0.0002147360000000001, 0.0002144999999999994, 0.00021301400000000095, 0.00021434700000000015, 0.0002131809999999998, 0.00021466699999999825, 0.00021466600000000224, 0.00021334699999999915, 0.00021316700000000022, 0.00021466700000000172, 0.00021469399999999791, 0.00021420800000000045, 0.0002134860000000023, 0.00021437500000000276, 0.00021379200000000084, 0.0002139999999999989, 0.0002140420000000011, 0.0002136810000000003, 0.00021283300000000255, 0.00021333399999999905, 0.00021319399999999988, 0.00021283300000000255, 0.00021283299999999908, 0.00021401400000000195, 0.00021386099999999922, 0.00021384799999999912, 0.00021465200000000267, 0.0002128189999999995, 0.00021331999999999948, 0.00021355499999999722, 0.00021334699999999568, 0.00021368000000000081, 0.00021365300000000115, 0.00021334699999999568, 0.00021366700000000072, 0.00021468000000000181, 0.0002129999999999979, 0.00021418099999999385, 0.00021284700000000212, 0.00021283400000000202]</msg>
<status status="PASS" starttime="20201112 09:44:20.654" endtime="20201112 09:44:20.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.649" endtime="20201112 09:44:20.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.659" endtime="20201112 09:44:20.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:20.662" endtime="20201112 09:44:20.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.661" endtime="20201112 09:44:20.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.657" endtime="20201112 09:44:20.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.238" endtime="20201112 09:44:20.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.238" endtime="20201112 09:44:20.683"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.693" endtime="20201112 09:44:20.719"></status>
</kw>
<msg timestamp="20201112 09:44:20.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.692" endtime="20201112 09:44:20.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.720" endtime="20201112 09:44:20.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.723" endtime="20201112 09:44:20.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.688" endtime="20201112 09:44:20.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.686" endtime="20201112 09:44:20.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.732" endtime="20201112 09:44:21.016"></status>
</kw>
<msg timestamp="20201112 09:44:21.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023561042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023777264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.730" endtime="20201112 09:44:21.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023561042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023777264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.020" endtime="20201112 09:44:21.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.028" endtime="20201112 09:44:21.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.728" endtime="20201112 09:44:21.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.726" endtime="20201112 09:44:21.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:21.034" level="INFO">${RESULT} = [{'time': 0.023777264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00021622199999999855, 'source_diff': 0.00021622199999999855}, {'time': 0.023999361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:21.031" endtime="20201112 09:44:21.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:21.048" level="INFO">${ACCURACY} = {'diff': [0.00021622199999999855, 0.00021575000000000066, 0.00021615300000000018, 0.0002156520000000002, 0.0002155000000000004, 0.00021672200000000252, 0.00021565299999999968, 0.00021584700000000165, ...</msg>
<status status="PASS" starttime="20201112 09:44:21.035" endtime="20201112 09:44:21.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.052" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 09:44:21.051" endtime="20201112 09:44:21.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.055" level="INFO">VALUE: [0.00021622199999999855, 0.00021575000000000066, 0.00021615300000000018, 0.0002156520000000002, 0.0002155000000000004, 0.00021672200000000252, 0.00021565299999999968, 0.00021584700000000165, 0.00021534700000000115, 0.00021498599999999687, 0.0002158329999999986, 0.00021583399999999808, 0.00021620800000000245, 0.00021533300000000158, 0.0002159580000000022, 0.00021591600000000002, 0.00021516699999999875, 0.00021648599999999837, 0.0002159719999999983, 0.00021581899999999904, 0.00021649999999999794, 0.00021551399999999998, 0.0002156390000000001, 0.00021513900000000308, 0.00021616699999999975, 0.00021601400000000048, 0.00021567999999999934, 0.00021495799999999773, 0.00021548599999999737, 0.0002158329999999986, 0.00021568099999999882, 0.0002155000000000004, 0.00021572199999999805, 0.0002151810000000018, 0.0002156390000000001, 0.00021634799999999815, 0.00021480499999999847, 0.0002160000000000009, 0.00021526399999999973, 0.00021669500000000286, 0.00021566699999999578, 0.00021615199999999724, 0.00021654200000000012, 0.00021651400000000098, 0.00021483399999999708, 0.00021633399999999858, 0.00021518000000000231, 0.00021593100000000254, 0.00021547199999999433, 0.00021666700000000372]</msg>
<status status="PASS" starttime="20201112 09:44:21.053" endtime="20201112 09:44:21.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.049" endtime="20201112 09:44:21.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.058" endtime="20201112 09:44:21.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:21.062" endtime="20201112 09:44:21.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.060" endtime="20201112 09:44:21.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.057" endtime="20201112 09:44:21.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.684" endtime="20201112 09:44:21.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.684" endtime="20201112 09:44:21.083"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.092" endtime="20201112 09:44:21.117"></status>
</kw>
<msg timestamp="20201112 09:44:21.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.091" endtime="20201112 09:44:21.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.119" endtime="20201112 09:44:21.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.122" endtime="20201112 09:44:21.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.087" endtime="20201112 09:44:21.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.085" endtime="20201112 09:44:21.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.131" endtime="20201112 09:44:21.416"></status>
</kw>
<msg timestamp="20201112 09:44:21.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023114556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023332083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.129" endtime="20201112 09:44:21.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023114556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023332083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.420" endtime="20201112 09:44:21.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.428" endtime="20201112 09:44:21.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.126" endtime="20201112 09:44:21.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.125" endtime="20201112 09:44:21.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:21.435" level="INFO">${RESULT} = [{'time': 0.023332083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0002175269999999986, 'source_diff': 0.0002175269999999986}, {'time': 0.023556125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:21.431" endtime="20201112 09:44:21.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:21.448" level="INFO">${ACCURACY} = {'diff': [0.0002175269999999986, 0.00021684699999999918, 0.00021734699999999968, 0.00021750000000000241, 0.00021701299999999854, 0.00021851400000000298, 0.0002174719999999998, 0.00021699999999999844, ...</msg>
<status status="PASS" starttime="20201112 09:44:21.436" endtime="20201112 09:44:21.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.453" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 09:44:21.452" endtime="20201112 09:44:21.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.455" level="INFO">VALUE: [0.0002175269999999986, 0.00021684699999999918, 0.00021734699999999968, 0.00021750000000000241, 0.00021701299999999854, 0.00021851400000000298, 0.0002174719999999998, 0.00021699999999999844, 0.00021784799999999965, 0.0002181659999999988, 0.0002178330000000006, 0.00021701400000000148, 0.00021777799999999833, 0.0002183750000000033, 0.00021768000000000134, 0.00021751399999999851, 0.00021815300000000218, 0.00021734799999999915, 0.00021699999999999844, 0.00021700000000000191, 0.0002181529999999987, 0.00021818100000000132, 0.00021683400000000255, 0.00021717999999999738, 0.00021801399999999901, 0.00021749999999999894, 0.00021833299999999764, 0.00021869400000000191, 0.0002176659999999983, 0.00021706999999999976, 0.00021736099999999925, 0.00021813899999999914, 0.00021786199999999922, 0.0002171659999999978, 0.0002175560000000007, 0.00021801400000000248, 0.00021818099999999785, 0.0002171659999999978, 0.00021751399999999504, 0.00021868099999999835, 0.00021702800000000105, 0.00021836199999999972, 0.00021816699999999828, 0.00021781900000000104, 0.0002183330000000011, 0.00021750000000000241, 0.00021866699999999878, 0.00021867999999999888, 0.0002177639999999953, 0.00021734699999999968]</msg>
<status status="PASS" starttime="20201112 09:44:21.454" endtime="20201112 09:44:21.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.449" endtime="20201112 09:44:21.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.459" endtime="20201112 09:44:21.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:21.462" endtime="20201112 09:44:21.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.461" endtime="20201112 09:44:21.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.457" endtime="20201112 09:44:21.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.084" endtime="20201112 09:44:21.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.083" endtime="20201112 09:44:21.483"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.492" endtime="20201112 09:44:21.519"></status>
</kw>
<msg timestamp="20201112 09:44:21.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.490" endtime="20201112 09:44:21.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.520" endtime="20201112 09:44:21.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.523" endtime="20201112 09:44:21.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.488" endtime="20201112 09:44:21.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.485" endtime="20201112 09:44:21.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.532" endtime="20201112 09:44:21.819"></status>
</kw>
<msg timestamp="20201112 09:44:21.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023086278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023306833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.530" endtime="20201112 09:44:21.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023086278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023306833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.823" endtime="20201112 09:44:21.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.831" endtime="20201112 09:44:21.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.528" endtime="20201112 09:44:21.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.526" endtime="20201112 09:44:21.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:21.838" level="INFO">${RESULT} = [{'time': 0.023306833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00022055500000000075, 'source_diff': 0.00022055500000000075}, {'time': 0.023540847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:21.835" endtime="20201112 09:44:21.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:21.851" level="INFO">${ACCURACY} = {'diff': [0.00022055500000000075, 0.00021931899999999907, 0.00021933299999999864, 0.00021899999999999697, 0.00021883400000000108, 0.00022050000000000194, 0.00022004200000000015, 0.00022009699999999896...</msg>
<status status="PASS" starttime="20201112 09:44:21.839" endtime="20201112 09:44:21.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.856" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 09:44:21.855" endtime="20201112 09:44:21.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.858" level="INFO">VALUE: [0.00022055500000000075, 0.00021931899999999907, 0.00021933299999999864, 0.00021899999999999697, 0.00021883400000000108, 0.00022050000000000194, 0.00022004200000000015, 0.00022009699999999896, 0.00021966699999999978, 0.0002196660000000003, 0.0002191659999999998, 0.00022018099999999985, 0.00021973600000000162, 0.00021966699999999978, 0.0002201660000000008, 0.00022033299999999964, 0.00021963900000000064, 0.000219320000000002, 0.0002204310000000001, 0.00022065200000000174, 0.00021916699999999928, 0.00022051399999999804, 0.00021937500000000082, 0.00021916700000000275, 0.00021901400000000001, 0.0002188330000000016, 0.0002198330000000026, 0.00021931999999999854, 0.0002188330000000016, 0.00022015299999999724, 0.00021950000000000094, 0.00022033400000000258, 0.00021949999999999747, 0.00022000000000000144, 0.00022068000000000088, 0.00021994399999999623, 0.00021901400000000348, 0.00021883299999999467, 0.0002191659999999998, 0.00021951399999999704, 0.00021999999999999797, 0.0002188200000000015, 0.0002191659999999998, 0.00021919399999999895, 0.00021919499999999842, 0.0002188330000000016, 0.00021912500000000057, 0.00021915200000000024, 0.00021983299999999567, 0.00021945799999999877]</msg>
<status status="PASS" starttime="20201112 09:44:21.857" endtime="20201112 09:44:21.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.852" endtime="20201112 09:44:21.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.862" endtime="20201112 09:44:21.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:21.865" endtime="20201112 09:44:21.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.864" endtime="20201112 09:44:21.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.860" endtime="20201112 09:44:21.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.484" endtime="20201112 09:44:21.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.483" endtime="20201112 09:44:21.886"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.895" endtime="20201112 09:44:21.921"></status>
</kw>
<msg timestamp="20201112 09:44:21.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.894" endtime="20201112 09:44:21.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.922" endtime="20201112 09:44:21.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.925" endtime="20201112 09:44:21.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.891" endtime="20201112 09:44:21.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.889" endtime="20201112 09:44:21.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.934" endtime="20201112 09:44:22.220"></status>
</kw>
<msg timestamp="20201112 09:44:22.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022638528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.933" endtime="20201112 09:44:22.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022638528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.225" endtime="20201112 09:44:22.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.233" endtime="20201112 09:44:22.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.930" endtime="20201112 09:44:22.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.928" endtime="20201112 09:44:22.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:22.239" level="INFO">${RESULT} = [{'time': 0.022638528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00022123600000000312, 'source_diff': 0.00022123600000000312}, {'time': 0.022870556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:22.236" endtime="20201112 09:44:22.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:22.254" level="INFO">${ACCURACY} = {'diff': [0.00022123600000000312, 0.00022133400000000011, 0.00022218000000000238, 0.00022133299999999717, 0.00022099999999999898, 0.00022199999999999998, 0.00022205600000000172, 0.00022169400000000145...</msg>
<status status="PASS" starttime="20201112 09:44:22.240" endtime="20201112 09:44:22.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.258" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 09:44:22.257" endtime="20201112 09:44:22.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.261" level="INFO">VALUE: [0.00022123600000000312, 0.00022133400000000011, 0.00022218000000000238, 0.00022133299999999717, 0.00022099999999999898, 0.00022199999999999998, 0.00022205600000000172, 0.00022169400000000145, 0.00022219500000000142, 0.00022250000000000048, 0.0002214729999999998, 0.00022250000000000048, 0.0002216660000000023, 0.0002213470000000002, 0.00022199999999999998, 0.0002221669999999988, 0.0002221250000000001, 0.00022151400000000251, 0.00022083300000000014, 0.00022183400000000061, 0.0002226799999999994, 0.00022151400000000251, 0.00022168100000000135, 0.00022233399999999764, 0.00022083399999999961, 0.00022100000000000244, 0.00022234699999999774, 0.0002212639999999988, 0.00022268100000000235, 0.00022116700000000128, 0.00022083300000000014, 0.00022168100000000135, 0.00022101399999999854, 0.00022118100000000085, 0.0002218470000000007, 0.00022184699999999724, 0.0002216669999999983, 0.00022130600000000097, 0.00022100000000000244, 0.0002208330000000036, 0.00022119400000000095, 0.00022166700000000178, 0.00022134800000000315, 0.00022234699999999774, 0.00022151399999999904, 0.00022101399999999854, 0.00022083299999999667, 0.00022199999999999998, 0.00022233400000000458, 0.0002221530000000027]</msg>
<status status="PASS" starttime="20201112 09:44:22.259" endtime="20201112 09:44:22.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.255" endtime="20201112 09:44:22.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.264" endtime="20201112 09:44:22.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:22.268" endtime="20201112 09:44:22.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.266" endtime="20201112 09:44:22.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.263" endtime="20201112 09:44:22.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.887" endtime="20201112 09:44:22.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.887" endtime="20201112 09:44:22.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.341" endtime="20201112 09:44:22.289"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:22.293" endtime="20201112 09:44:22.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.291" endtime="20201112 09:44:22.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.290" endtime="20201112 09:44:22.313"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:42.263" endtime="20201112 09:44:22.314" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:43:00.696" endtime="20201112 09:44:22.318"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.373" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:44:22.381" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:44:23.539" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:44:22.372" endtime="20201112 09:44:23.540"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.543" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:44:23.541" endtime="20201112 09:44:23.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.371" endtime="20201112 09:44:23.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:23.546" endtime="20201112 09:44:23.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.544" endtime="20201112 09:44:23.793"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.806" endtime="20201112 09:44:23.826"></status>
</kw>
<msg timestamp="20201112 09:44:23.826" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f09...</msg>
<status status="PASS" starttime="20201112 09:44:23.804" endtime="20201112 09:44:23.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.829" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f09...</msg>
<status status="PASS" starttime="20201112 09:44:23.827" endtime="20201112 09:44:23.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.833" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:44:23.830" endtime="20201112 09:44:23.833"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:23.802" endtime="20201112 09:44:23.834"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:23.799" endtime="20201112 09:44:23.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.798" endtime="20201112 09:44:23.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:44:23.839" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:44:23.838" endtime="20201112 09:44:23.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.836" endtime="20201112 09:44:23.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.797" endtime="20201112 09:44:23.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.797" endtime="20201112 09:44:23.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.841" endtime="20201112 09:44:23.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.795" endtime="20201112 09:44:23.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.844" endtime="20201112 09:44:23.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.794" endtime="20201112 09:44:23.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.369" endtime="20201112 09:44:23.846"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:23.852" endtime="20201112 09:44:23.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.851" endtime="20201112 09:44:23.872"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.886" endtime="20201112 09:44:23.905"></status>
</kw>
<msg timestamp="20201112 09:44:23.906" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:23.884" endtime="20201112 09:44:23.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.908" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:23.907" endtime="20201112 09:44:23.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.911" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:44:23.909" endtime="20201112 09:44:23.912"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:23.881" endtime="20201112 09:44:23.912"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:23.879" endtime="20201112 09:44:23.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.878" endtime="20201112 09:44:23.913"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:44:23.917" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:44:23.916" endtime="20201112 09:44:23.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.914" endtime="20201112 09:44:23.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.877" endtime="20201112 09:44:23.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.876" endtime="20201112 09:44:23.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.920" endtime="20201112 09:44:23.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.875" endtime="20201112 09:44:23.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.873" endtime="20201112 09:44:23.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.849" endtime="20201112 09:44:23.923"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:23.926" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.934" endtime="20201112 09:44:28.038"></status>
</kw>
<msg timestamp="20201112 09:44:28.040" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 220747, 'wakeups': [230752, 240753, 250753, 260753, 270753, 280753, 29...</msg>
<status status="PASS" starttime="20201112 09:44:23.933" endtime="20201112 09:44:28.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.046" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 220747, 'wakeups': [230752, 240753, 250753, 260753, 270753, 280753, 29...</msg>
<status status="PASS" starttime="20201112 09:44:28.042" endtime="20201112 09:44:28.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.049" endtime="20201112 09:44:28.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.930" endtime="20201112 09:44:28.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.928" endtime="20201112 09:44:28.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:28.060" level="INFO">${RESULT} = {'wakeups': [230752, 240753, 250753, 260753, 270753, 280753, 290753, 300753, 310753, 320753, 330753, 340753, 350753, 360753, 370753, 380753, 390753, 400753, 410753, 420753, 430753, 440753, 450753, 460...</msg>
<status status="PASS" starttime="20201112 09:44:28.056" endtime="20201112 09:44:28.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.065" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:28.064" endtime="20201112 09:44:28.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.067" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:28.066" endtime="20201112 09:44:28.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.061" endtime="20201112 09:44:28.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.072" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:28.071" endtime="20201112 09:44:28.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.075" level="INFO">VALUE: 220747</msg>
<status status="PASS" starttime="20201112 09:44:28.074" endtime="20201112 09:44:28.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.069" endtime="20201112 09:44:28.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.080" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:28.079" endtime="20201112 09:44:28.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.083" level="INFO">VALUE: [230752, 240753, 250753, 260753, 270753, 280753, 290753, 300753, 310753, 320753, 330753, 340753, 350753, 360753, 370753, 380753, 390753, 400753, 410753, 420753, 430753, 440753, 450753, 460753, 470753, 480753, 490753, 500753, 510753, 520753, 530753, 540753, 550753, 560753, 570753, 580753, 590753, 600753, 610753, 620753, 630753, 640753, 650753, 660753, 670753, 680753, 690753, 700753, 710753, 720753, 730753, 740753, 750753, 760753, 770753, 780753, 790753, 800753, 810753, 820753, 830753, 840753, 850753, 860753, 870753, 880753, 890753, 900753, 910753, 920753, 930753, 940753, 950753, 960753, 970753, 980753, 990753, 1000753, 1010753, 1020753, 1030753, 1040753, 1050753, 1060753, 1070753, 1080753, 1090753, 1100753, 1110753, 1120753, 1130753, 1140753, 1150753, 1160753, 1170753, 1180753, 1190753, 1200753, 1210753, 1220753]</msg>
<status status="PASS" starttime="20201112 09:44:28.081" endtime="20201112 09:44:28.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.076" endtime="20201112 09:44:28.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.091" endtime="20201112 09:44:28.388"></status>
</kw>
<msg timestamp="20201112 09:44:28.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072548403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.092563097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:28.089" endtime="20201112 09:44:28.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072548403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.092563097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:28.392" endtime="20201112 09:44:28.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.400" endtime="20201112 09:44:28.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.086" endtime="20201112 09:44:28.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.084" endtime="20201112 09:44:28.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:28.426" level="INFO">${RESULT} = {'diff': [0, 0.020014694, 0.020004375000000005, 0.020002236000000007, 0.02000237499999999, 0.020002236000000007, 0.02000238900000001, 0.020002222999999986, 0.02000238800000001, 0.020002222999999986, 0...</msg>
<status status="PASS" starttime="20201112 09:44:28.403" endtime="20201112 09:44:28.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.431" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:28.430" endtime="20201112 09:44:28.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.434" level="INFO">VALUE: 0.072548403</msg>
<status status="PASS" starttime="20201112 09:44:28.433" endtime="20201112 09:44:28.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.427" endtime="20201112 09:44:28.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.439" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:28.438" endtime="20201112 09:44:28.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.441" level="INFO">VALUE: [0.092563097, 0.112567472, 0.132569708, 0.152572083, 0.172574319, 0.192576708, 0.212578931, 0.232581319, 0.252583542, 0.272585931, 0.292588167, 0.312590542, 0.332592778, 0.352595167, 0.372597417, 0.392599792, 0.412602014, 0.432604389, 0.452606625, 0.472609, 0.49261125, 0.512613611, 0.532615861, 0.552618264, 0.572620486, 0.592622847, 0.612625097, 0.632627458, 0.65262975, 0.672632083, 0.692634319, 0.712636694, 0.732638972, 0.752641306, 0.772643569, 0.792645931, 0.812648167, 0.832650556, 0.852652819, 0.872655153, 0.892657403, 0.912659792, 0.932662069, 0.952664389, 0.972666653, 0.992669014, 1.01267125, 1.032673625, 1.052675875, 1.072678236, 1.092680486, 1.112682875, 1.132685111, 1.152687472, 1.172689722, 1.192692125, 1.212694333, 1.232696722, 1.252698944, 1.272701319, 1.292703569, 1.312705944, 1.332708194, 1.352710556, 1.372712875, 1.392715167, 1.412717417, 1.432719792, 1.452722028, 1.472724417, 1.492726653, 1.512729028, 1.532731264, 1.552733639, 1.572735903, 1.592738264, 1.6127405, 1.632742875, 1.652745111, 1.6727475, 1.692749736, 1.712752111, 1.732754347, 1.752756736, 1.772758972, 1.792761333, 1.812763583, 1.832765986, 1.852768194, 1.872770583, 1.892772819, 1.912775194, 1.932777431, 1.952779875, 1.972782056, 1.992784417, 2.012786667, 2.032789056, 2.052791278, 2.072793653] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:28.440" endtime="20201112 09:44:28.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.435" endtime="20201112 09:44:28.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.444" endtime="20201112 09:44:28.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:28.448" endtime="20201112 09:44:28.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.446" endtime="20201112 09:44:28.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.443" endtime="20201112 09:44:28.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.927" endtime="20201112 09:44:28.468"></status>
</kw>
<msg timestamp="20201112 09:44:28.469" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.477" endtime="20201112 09:44:32.589"></status>
</kw>
<msg timestamp="20201112 09:44:32.591" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2492189, 'wakeups': [2502194, 2512195, 2522195, 2532195, 2542195, 2552...</msg>
<status status="PASS" starttime="20201112 09:44:28.475" endtime="20201112 09:44:32.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.597" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2492189, 'wakeups': [2502194, 2512195, 2522195, 2532195, 2542195, 2552...</msg>
<status status="PASS" starttime="20201112 09:44:32.593" endtime="20201112 09:44:32.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.599" endtime="20201112 09:44:32.602"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.473" endtime="20201112 09:44:32.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.471" endtime="20201112 09:44:32.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:32.610" level="INFO">${RESULT} = {'wakeups': [2502194, 2512195, 2522195, 2532195, 2542195, 2552195, 2562195, 2572195, 2582195, 2592195, 2602195, 2612195, 2622195, 2632195, 2642195, 2652195, 2662195, 2672195, 2682195, 2692195, 2702195...</msg>
<status status="PASS" starttime="20201112 09:44:32.606" endtime="20201112 09:44:32.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.619" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:32.617" endtime="20201112 09:44:32.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.621" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:32.620" endtime="20201112 09:44:32.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.612" endtime="20201112 09:44:32.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.626" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:32.625" endtime="20201112 09:44:32.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.628" level="INFO">VALUE: 2492189</msg>
<status status="PASS" starttime="20201112 09:44:32.627" endtime="20201112 09:44:32.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.623" endtime="20201112 09:44:32.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.633" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:32.632" endtime="20201112 09:44:32.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.636" level="INFO">VALUE: [2502194, 2512195, 2522195, 2532195, 2542195, 2552195, 2562195, 2572195, 2582195, 2592195, 2602195, 2612195, 2622195, 2632195, 2642195, 2652195, 2662195, 2672195, 2682195, 2692195, 2702195, 2712195, 2722195, 2732195, 2742195, 2752195, 2762195, 2772195, 2782195, 2792195, 2802195, 2812195, 2822195, 2832195, 2842195, 2852195, 2862195, 2872195, 2882195, 2892195, 2902195, 2912195, 2922195, 2932195, 2942195, 2952195, 2962195, 2972195, 2982195, 2992195, 3002195, 3012195, 3022195, 3032195, 3042195, 3052195, 3062195, 3072195, 3082195, 3092195, 3102195, 3112195, 3122195, 3132195, 3142195, 3152195, 3162195, 3172195, 3182195, 3192195, 3202195, 3212195, 3222195, 3232195, 3242195, 3252195, 3262195, 3272195, 3282195, 3292195, 3302195, 3312195, 3322195, 3332195, 3342195, 3352195, 3362195, 3372195, 3382195, 3392195, 3402195, 3412195, 3422195, 3432195, 3442195, 3452195, 3462195, 3472195, 3482195, 3492195]</msg>
<status status="PASS" starttime="20201112 09:44:32.635" endtime="20201112 09:44:32.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.630" endtime="20201112 09:44:32.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.643" endtime="20201112 09:44:32.934"></status>
</kw>
<msg timestamp="20201112 09:44:32.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040333347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:32.641" endtime="20201112 09:44:32.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040333347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:32.938" endtime="20201112 09:44:32.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.945" endtime="20201112 09:44:32.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.639" endtime="20201112 09:44:32.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.637" endtime="20201112 09:44:32.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:32.974" level="INFO">${RESULT} = {'diff': [0, 0.020014028, 0.020004375000000005, 0.020002236, 0.020002348000000003, 0.02000225, 0.020002360999999982, 0.02000225, 0.02000238900000001, 0.020002222000000014, 0.020002347000000004, 0.0200...</msg>
<status status="PASS" starttime="20201112 09:44:32.949" endtime="20201112 09:44:32.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.978" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:32.977" endtime="20201112 09:44:32.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.980" level="INFO">VALUE: 0.020319319</msg>
<status status="PASS" starttime="20201112 09:44:32.979" endtime="20201112 09:44:32.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.975" endtime="20201112 09:44:32.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.986" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:32.985" endtime="20201112 09:44:32.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:32.988" level="INFO">VALUE: [0.040333347, 0.060337722, 0.080339958, 0.100342306, 0.120344556, 0.140346917, 0.160349167, 0.180351556, 0.200353778, 0.220356125, 0.240358375, 0.260360736, 0.280362972, 0.300365347, 0.320367597, 0.340369958, 0.360372194, 0.380374583, 0.400376806, 0.420379194, 0.440381431, 0.460383806, 0.480386056, 0.500388417, 0.520390639, 0.540393014, 0.56039525, 0.580397653, 0.600399931, 0.620402222, 0.640404472, 0.660406833, 0.680409069, 0.700411444, 0.720413722, 0.740416069, 0.760418292, 0.780420667, 0.800422903, 0.820425278, 0.840427514, 0.860429889, 0.880432139, 0.900434514, 0.920436736, 0.940439097, 0.960441361, 0.980443708, 1.000445972, 1.020448319, 1.040450569, 1.060452944, 1.080455181, 1.100457542, 1.120459792, 1.140462153, 1.160464389, 1.180466764, 1.200469, 1.220471389, 1.240473611, 1.260476, 1.280478236, 1.300480611, 1.320482833, 1.340485208, 1.360487444, 1.380489819, 1.400492097, 1.420494444, 1.440496667, 1.460499097, 1.480501292, 1.500503653, 1.520505903, 1.54050825, 1.560510514, 1.580512861, 1.600515125, 1.6205175, 1.640519722, 1.660522083, 1.680524333, 1.700526694, 1.720528944, 1.740531347, 1.760533556, 1.780535958, 1.800538167, 1.820540528, 1.840542778, 1.860545153, 1.880547375, 1.90054975, 1.920551986, 1.940554375, 1.960556611, 1.980558972, 2.000561208, 2.020563583] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:32.987" endtime="20201112 09:44:32.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.982" endtime="20201112 09:44:32.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:32.996" endtime="20201112 09:44:32.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:32.999" endtime="20201112 09:44:33.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.997" endtime="20201112 09:44:33.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:32.994" endtime="20201112 09:44:33.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.469" endtime="20201112 09:44:33.020"></status>
</kw>
<msg timestamp="20201112 09:44:33.020" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.028" endtime="20201112 09:44:37.140"></status>
</kw>
<msg timestamp="20201112 09:44:37.142" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 4767440, 'wakeups': [4777446, 4787446, 4797446, 4807446, 4817446, 4827...</msg>
<status status="PASS" starttime="20201112 09:44:33.027" endtime="20201112 09:44:37.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.147" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 4767440, 'wakeups': [4777446, 4787446, 4797446, 4807446, 4817446, 4827...</msg>
<status status="PASS" starttime="20201112 09:44:37.144" endtime="20201112 09:44:37.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.150" endtime="20201112 09:44:37.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.024" endtime="20201112 09:44:37.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.022" endtime="20201112 09:44:37.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:37.161" level="INFO">${RESULT} = {'wakeups': [4777446, 4787446, 4797446, 4807446, 4817446, 4827446, 4837446, 4847446, 4857446, 4867446, 4877446, 4887446, 4897446, 4907446, 4917446, 4927446, 4937446, 4947446, 4957446, 4967446, 4977446...</msg>
<status status="PASS" starttime="20201112 09:44:37.157" endtime="20201112 09:44:37.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.170" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:37.167" endtime="20201112 09:44:37.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.174" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:37.172" endtime="20201112 09:44:37.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.163" endtime="20201112 09:44:37.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.182" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:37.180" endtime="20201112 09:44:37.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.184" level="INFO">VALUE: 4767440</msg>
<status status="PASS" starttime="20201112 09:44:37.183" endtime="20201112 09:44:37.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.177" endtime="20201112 09:44:37.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.189" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:37.188" endtime="20201112 09:44:37.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.191" level="INFO">VALUE: [4777446, 4787446, 4797446, 4807446, 4817446, 4827446, 4837446, 4847446, 4857446, 4867446, 4877446, 4887446, 4897446, 4907446, 4917446, 4927446, 4937446, 4947446, 4957446, 4967446, 4977446, 4987446, 4997446, 5007446, 5017446, 5027446, 5037446, 5047446, 5057446, 5067446, 5077446, 5087446, 5097446, 5107446, 5117446, 5127446, 5137446, 5147446, 5157446, 5167446, 5177446, 5187446, 5197446, 5207446, 5217446, 5227446, 5237446, 5247446, 5257446, 5267446, 5277446, 5287446, 5297446, 5307446, 5317446, 5327446, 5337446, 5347446, 5357446, 5367446, 5377446, 5387446, 5397446, 5407446, 5417446, 5427446, 5437446, 5447446, 5457446, 5467446, 5477446, 5487446, 5497446, 5507446, 5517446, 5527446, 5537446, 5547446, 5557446, 5567446, 5577446, 5587446, 5597446, 5607446, 5617446, 5627446, 5637446, 5647446, 5657446, 5667446, 5677446, 5687446, 5697446, 5707446, 5717446, 5727446, 5737446, 5747446, 5757446, 5767446]</msg>
<status status="PASS" starttime="20201112 09:44:37.190" endtime="20201112 09:44:37.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.186" endtime="20201112 09:44:37.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.199" endtime="20201112 09:44:37.489"></status>
</kw>
<msg timestamp="20201112 09:44:37.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019413389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039428806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:37.198" endtime="20201112 09:44:37.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019413389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039428806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:37.493" endtime="20201112 09:44:37.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.501" endtime="20201112 09:44:37.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.195" endtime="20201112 09:44:37.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.193" endtime="20201112 09:44:37.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:37.527" level="INFO">${RESULT} = {'diff': [0, 0.020015416999999997, 0.020002319000000005, 0.020002222, 0.020002360999999996, 0.020002278, 0.020002320000000018, 0.02000225, 0.020002346999999976, 0.02000225, 0.020002361000000024, 0.020...</msg>
<status status="PASS" starttime="20201112 09:44:37.504" endtime="20201112 09:44:37.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.532" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:37.531" endtime="20201112 09:44:37.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.534" level="INFO">VALUE: 0.019413389</msg>
<status status="PASS" starttime="20201112 09:44:37.533" endtime="20201112 09:44:37.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.528" endtime="20201112 09:44:37.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.539" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:37.538" endtime="20201112 09:44:37.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.542" level="INFO">VALUE: [0.039428806, 0.059431125, 0.079433347, 0.099435708, 0.119437986, 0.139440306, 0.159442556, 0.179444903, 0.199447153, 0.219449514, 0.23945175, 0.259454111, 0.279456361, 0.299458722, 0.319460944, 0.339463333, 0.359465556, 0.379467917, 0.399470153, 0.419472528, 0.439474764, 0.459477139, 0.479479361, 0.499481722, 0.519483958, 0.539486333, 0.559488583, 0.579490931, 0.599493167, 0.619495556, 0.639497778, 0.659500139, 0.679502375, 0.699504736, 0.719507056, 0.739509361, 0.759511583, 0.779513944, 0.799516181, 0.819518556, 0.839520861, 0.859523153, 0.879525403, 0.899527764, 0.91953, 0.939532361, 0.959534597, 0.979536958, 0.999539222, 1.019541597, 1.039543806, 1.059546181, 1.079548417, 1.099550778, 1.119553028, 1.139555375, 1.159557611, 1.17956, 1.199562222, 1.219564583, 1.239566819, 1.259569181, 1.279571431, 1.299573792, 1.319576028, 1.339578389, 1.359580625, 1.379583, 1.399585236, 1.419587597, 1.439589833, 1.459592236, 1.479594444, 1.499596806, 1.519599042, 1.539601431, 1.559603667, 1.579606056, 1.599608278, 1.619610625, 1.639612875, 1.659615222, 1.679617458, 1.699619819, 1.719622083, 1.739624486, 1.759626667, 1.779629028, 1.799631264, 1.819633639, 1.839635889, 1.85963825, 1.879640514, 1.899642847, 1.919645069, 1.939647444, 1.959649681, 1.979652042, 1.999654375, 2.019656653] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:37.540" endtime="20201112 09:44:37.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.535" endtime="20201112 09:44:37.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.545" endtime="20201112 09:44:37.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:37.549" endtime="20201112 09:44:37.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.547" endtime="20201112 09:44:37.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.544" endtime="20201112 09:44:37.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.021" endtime="20201112 09:44:37.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.925" endtime="20201112 09:44:37.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.924" endtime="20201112 09:44:37.570"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:37.572" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.581" endtime="20201112 09:44:41.690"></status>
</kw>
<msg timestamp="20201112 09:44:41.690" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 7043818, 'wakeups': [7053831, 7063830, 7073830, 7083830, 7093830, 7103...</msg>
<status status="PASS" starttime="20201112 09:44:37.579" endtime="20201112 09:44:41.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.693" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 7043818, 'wakeups': [7053831, 7063830, 7073830, 7083830, 7093830, 7103...</msg>
<status status="PASS" starttime="20201112 09:44:41.691" endtime="20201112 09:44:41.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.694" endtime="20201112 09:44:41.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.576" endtime="20201112 09:44:41.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.574" endtime="20201112 09:44:41.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:41.699" level="INFO">${RESULT} = {'wakeups': [7053831, 7063830, 7073830, 7083830, 7093830, 7103830, 7113830, 7123830, 7133830, 7143830, 7153830, 7163830, 7173830, 7183830, 7193830, 7203830, 7213830, 7223830, 7233830, 7243830, 7253830...</msg>
<status status="PASS" starttime="20201112 09:44:41.697" endtime="20201112 09:44:41.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.704" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:41.703" endtime="20201112 09:44:41.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.706" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:41.705" endtime="20201112 09:44:41.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.700" endtime="20201112 09:44:41.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.711" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:41.710" endtime="20201112 09:44:41.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.713" level="INFO">VALUE: 7043818</msg>
<status status="PASS" starttime="20201112 09:44:41.712" endtime="20201112 09:44:41.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.707" endtime="20201112 09:44:41.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.718" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:41.717" endtime="20201112 09:44:41.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.720" level="INFO">VALUE: [7053831, 7063830, 7073830, 7083830, 7093830, 7103830, 7113830, 7123830, 7133830, 7143830, 7153830, 7163830, 7173830, 7183830, 7193830, 7203830, 7213830, 7223830, 7233830, 7243830, 7253830, 7263830, 7273830, 7283830, 7293830, 7303830, 7313830, 7323830, 7333830, 7343830, 7353830, 7363830, 7373830, 7383830, 7393830, 7403830, 7413830, 7423830, 7433830, 7443830, 7453830, 7463830, 7473830, 7483830, 7493830, 7503830, 7513830, 7523830, 7533830, 7543830, 7553830, 7563830, 7573830, 7583830, 7593830, 7603830, 7613830, 7623830, 7633830, 7643830, 7653830, 7663830, 7673830, 7683830, 7693830, 7703830, 7713830, 7723830, 7733830, 7743830, 7753830, 7763830, 7773830, 7783830, 7793830, 7803830, 7813830, 7823830, 7833830, 7843830, 7853830, 7863830, 7873830, 7883830, 7893830, 7903830, 7913830, 7923830, 7933830, 7943830, 7953830, 7963830, 7973830, 7983830, 7993830, 8003830, 8013830, 8023830, 8033830, 8043830]</msg>
<status status="PASS" starttime="20201112 09:44:41.719" endtime="20201112 09:44:41.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.714" endtime="20201112 09:44:41.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.728" endtime="20201112 09:44:42.022"></status>
</kw>
<msg timestamp="20201112 09:44:42.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022713889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042741542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:41.727" endtime="20201112 09:44:42.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022713889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042741542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:42.026" endtime="20201112 09:44:42.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.033" endtime="20201112 09:44:42.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.724" endtime="20201112 09:44:42.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.722" endtime="20201112 09:44:42.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:42.061" level="INFO">${RESULT} = {'diff': [0, 0.020027653, 0.020000374999999994, 0.020002222, 0.02000236100000001, 0.020002235999999993, 0.020002360999999996, 0.020002222000000014, 0.02000237499999999, 0.020002223000000013, 0.0200023...</msg>
<status status="PASS" starttime="20201112 09:44:42.037" endtime="20201112 09:44:42.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.065" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:42.064" endtime="20201112 09:44:42.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.067" level="INFO">VALUE: 0.022713889</msg>
<status status="PASS" starttime="20201112 09:44:42.067" endtime="20201112 09:44:42.068"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.062" endtime="20201112 09:44:42.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.073" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:42.072" endtime="20201112 09:44:42.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.075" level="INFO">VALUE: [0.042741542, 0.062741917, 0.082744139, 0.1027465, 0.122748736, 0.142751097, 0.162753319, 0.182755694, 0.202757917, 0.222760264, 0.242762514, 0.262764861, 0.282767097, 0.302769458, 0.322771708, 0.342774056, 0.362776292, 0.382778653, 0.402780889, 0.42278325, 0.442785472, 0.462787833, 0.482790111, 0.502792431, 0.522794667, 0.542797028, 0.562799264, 0.582801639, 0.602803861, 0.622806236, 0.642808472, 0.662810819, 0.682813056, 0.702815417, 0.722817667, 0.742820014, 0.762822236, 0.782824639, 0.802826861, 0.822829194, 0.842831444, 0.862833806, 0.882836097, 0.902838389, 0.922840625, 0.942843, 0.962845208, 0.982847569, 1.002849819, 1.022852167, 1.042854431, 1.062856778, 1.082859028, 1.102861375, 1.122863597, 1.142865958, 1.162868194, 1.182870556, 1.202872806, 1.222875153, 1.242877375, 1.262879736, 1.282881986, 1.302884333, 1.322886583, 1.342888944, 1.362891167, 1.382893528, 1.402895778, 1.422898125, 1.442900403, 1.462902722, 1.482904958, 1.502907319, 1.522909556, 1.542911917, 1.562914153, 1.582916528, 1.60291875, 1.622921125, 1.642923333, 1.662925694, 1.682927944, 1.702930292, 1.722932528, 1.742934889, 1.762937125, 1.782939486, 1.802941736, 1.822944083, 1.842946319, 1.862948681, 1.882950917, 1.902953292, 1.9229555, 1.942957889, 1.962960111, 1.982962472, 2.002964708, 2.022967069] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:42.074" endtime="20201112 09:44:42.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.069" endtime="20201112 09:44:42.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.078" endtime="20201112 09:44:42.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:42.082" endtime="20201112 09:44:42.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.080" endtime="20201112 09:44:42.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.077" endtime="20201112 09:44:42.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.573" endtime="20201112 09:44:42.102"></status>
</kw>
<msg timestamp="20201112 09:44:42.102" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.111" endtime="20201112 09:44:46.209"></status>
</kw>
<msg timestamp="20201112 09:44:46.210" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 9308947, 'wakeups': [9318959, 9328959, 9338959, 9348959, 9358959, 9368...</msg>
<status status="PASS" starttime="20201112 09:44:42.109" endtime="20201112 09:44:46.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.213" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 9308947, 'wakeups': [9318959, 9328959, 9338959, 9348959, 9358959, 9368...</msg>
<status status="PASS" starttime="20201112 09:44:46.211" endtime="20201112 09:44:46.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.214" endtime="20201112 09:44:46.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.106" endtime="20201112 09:44:46.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.104" endtime="20201112 09:44:46.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:46.219" level="INFO">${RESULT} = {'wakeups': [9318959, 9328959, 9338959, 9348959, 9358959, 9368959, 9378959, 9388959, 9398959, 9408959, 9418959, 9428959, 9438959, 9448959, 9458959, 9468959, 9478959, 9488959, 9498959, 9508959, 9518959...</msg>
<status status="PASS" starttime="20201112 09:44:46.217" endtime="20201112 09:44:46.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.224" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:46.223" endtime="20201112 09:44:46.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.226" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:46.225" endtime="20201112 09:44:46.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.220" endtime="20201112 09:44:46.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.231" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:46.230" endtime="20201112 09:44:46.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.233" level="INFO">VALUE: 9308947</msg>
<status status="PASS" starttime="20201112 09:44:46.232" endtime="20201112 09:44:46.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.227" endtime="20201112 09:44:46.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.237" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:46.236" endtime="20201112 09:44:46.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.240" level="INFO">VALUE: [9318959, 9328959, 9338959, 9348959, 9358959, 9368959, 9378959, 9388959, 9398959, 9408959, 9418959, 9428959, 9438959, 9448959, 9458959, 9468959, 9478959, 9488959, 9498959, 9508959, 9518959, 9528959, 9538959, 9548959, 9558959, 9568959, 9578959, 9588959, 9598959, 9608959, 9618959, 9628959, 9638959, 9648959, 9658959, 9668959, 9678959, 9688959, 9698959, 9708959, 9718959, 9728959, 9738959, 9748959, 9758959, 9768959, 9778959, 9788959, 9798959, 9808959, 9818959, 9828959, 9838959, 9848959, 9858959, 9868959, 9878959, 9888959, 9898959, 9908959, 9918959, 9928959, 9938959, 9948959, 9958959, 9968959, 9978959, 9988959, 9998959, 10008959, 10018959, 10028959, 10038959, 10048959, 10058959, 10068959, 10078959, 10088959, 10098959, 10108959, 10118959, 10128959, 10138959, 10148959, 10158959, 10168959, 10178959, 10188959, 10198959, 10208959, 10218959, 10228959, 10238959, 10248959, 10258959, 10268959, 10278959, 10288959, 10298959, 10308959]</msg>
<status status="PASS" starttime="20201112 09:44:46.239" endtime="20201112 09:44:46.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.234" endtime="20201112 09:44:46.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.247" endtime="20201112 09:44:46.538"></status>
</kw>
<msg timestamp="20201112 09:44:46.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040233139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:46.246" endtime="20201112 09:44:46.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040233139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:46.542" endtime="20201112 09:44:46.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.549" endtime="20201112 09:44:46.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.243" endtime="20201112 09:44:46.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.241" endtime="20201112 09:44:46.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:46.576" level="INFO">${RESULT} = {'diff': [0, 0.020026375000000003, 0.020002389000000002, 0.020002193999999994, 0.02000238900000001, 0.020002194999999987, 0.020002347000000004, 0.020002236000000007, 0.020002360999999996, 0.0200022360...</msg>
<status status="PASS" starttime="20201112 09:44:46.553" endtime="20201112 09:44:46.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.581" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:46.580" endtime="20201112 09:44:46.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.583" level="INFO">VALUE: 0.020206764</msg>
<status status="PASS" starttime="20201112 09:44:46.582" endtime="20201112 09:44:46.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.577" endtime="20201112 09:44:46.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.588" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:46.587" endtime="20201112 09:44:46.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.591" level="INFO">VALUE: [0.040233139, 0.060235528, 0.080237722, 0.100240111, 0.120242306, 0.140244653, 0.160246889, 0.18024925, 0.200251486, 0.220253847, 0.240256069, 0.260258417, 0.280260653, 0.300263056, 0.32026525, 0.340267639, 0.360269833, 0.380272181, 0.400274458, 0.420276792, 0.440279014, 0.460281375, 0.480283597, 0.500285972, 0.520288236, 0.540290542, 0.560292806, 0.580295139, 0.600297361, 0.620299722, 0.640301958, 0.660304333, 0.680306542, 0.700308958, 0.720311153, 0.740313486, 0.760315722, 0.780318083, 0.800320319, 0.820322681, 0.840324903, 0.860327264, 0.880329486, 0.900331847, 0.920334083, 0.940336444, 0.960338667, 0.980341028, 1.000343278, 1.020345611, 1.040347847, 1.06035025, 1.080352444, 1.100354792, 1.120357042, 1.140359389, 1.160361625, 1.180363986, 1.200366264, 1.220368583, 1.240370847, 1.260373167, 1.280375389, 1.30037775, 1.320379972, 1.340382333, 1.360384569, 1.380386931, 1.400389153, 1.420391514, 1.44039375, 1.460396111, 1.480398403, 1.500400708, 1.520402931, 1.540405278, 1.560407528, 1.580409875, 1.600412125, 1.620414458, 1.640416694, 1.660419069, 1.680421292, 1.700423639, 1.720425875, 1.74042825, 1.760430486, 1.780432833, 1.800435069, 1.820437417, 1.840439639, 1.860442, 1.88044425, 1.900446597, 1.920448819, 1.940451194, 1.960453417, 1.980455792, 2.000458028, 2.020460361] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:46.589" endtime="20201112 09:44:46.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.584" endtime="20201112 09:44:46.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.594" endtime="20201112 09:44:46.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:46.597" endtime="20201112 09:44:46.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.596" endtime="20201112 09:44:46.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.592" endtime="20201112 09:44:46.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.103" endtime="20201112 09:44:46.618"></status>
</kw>
<msg timestamp="20201112 09:44:46.618" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.626" endtime="20201112 09:44:50.749"></status>
</kw>
<msg timestamp="20201112 09:44:50.750" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11566388, 'wakeups': [11576401, 11586400, 11596400, 11606400, 11616400...</msg>
<status status="PASS" starttime="20201112 09:44:46.625" endtime="20201112 09:44:50.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.755" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11566388, 'wakeups': [11576401, 11586400, 11596400, 11606400, 11616400...</msg>
<status status="PASS" starttime="20201112 09:44:50.753" endtime="20201112 09:44:50.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.756" endtime="20201112 09:44:50.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.622" endtime="20201112 09:44:50.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.620" endtime="20201112 09:44:50.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:50.762" level="INFO">${RESULT} = {'wakeups': [11576401, 11586400, 11596400, 11606400, 11616400, 11626400, 11636400, 11646400, 11656400, 11666400, 11676400, 11686400, 11696400, 11706400, 11716400, 11726400, 11736400, 11746400, 1175640...</msg>
<status status="PASS" starttime="20201112 09:44:50.760" endtime="20201112 09:44:50.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.766" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:50.765" endtime="20201112 09:44:50.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.768" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:50.767" endtime="20201112 09:44:50.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.763" endtime="20201112 09:44:50.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.773" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:50.772" endtime="20201112 09:44:50.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.776" level="INFO">VALUE: 11566388</msg>
<status status="PASS" starttime="20201112 09:44:50.774" endtime="20201112 09:44:50.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.769" endtime="20201112 09:44:50.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.781" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:50.780" endtime="20201112 09:44:50.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:50.784" level="INFO">VALUE: [11576401, 11586400, 11596400, 11606400, 11616400, 11626400, 11636400, 11646400, 11656400, 11666400, 11676400, 11686400, 11696400, 11706400, 11716400, 11726400, 11736400, 11746400, 11756400, 11766400, 11776400, 11786400, 11796400, 11806400, 11816400, 11826400, 11836400, 11846400, 11856400, 11866400, 11876400, 11886400, 11896400, 11906400, 11916400, 11926400, 11936400, 11946400, 11956400, 11966400, 11976400, 11986400, 11996400, 12006400, 12016400, 12026400, 12036400, 12046400, 12056400, 12066400, 12076400, 12086400, 12096400, 12106400, 12116400, 12126400, 12136400, 12146400, 12156400, 12166400, 12176400, 12186400, 12196400, 12206400, 12216400, 12226400, 12236400, 12246400, 12256400, 12266400, 12276400, 12286400, 12296400, 12306400, 12316400, 12326400, 12336400, 12346400, 12356400, 12366400, 12376400, 12386400, 12396400, 12406400, 12416400, 12426400, 12436400, 12446400, 12456400, 12466400, 12476400, 12486400, 12496400, 12506400, 12516400, 12526400, 12536400, 12546400, 12556400, 12566400]</msg>
<status status="PASS" starttime="20201112 09:44:50.782" endtime="20201112 09:44:50.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.777" endtime="20201112 09:44:50.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:50.791" endtime="20201112 09:44:51.082"></status>
</kw>
<msg timestamp="20201112 09:44:51.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019322278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039349972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:50.790" endtime="20201112 09:44:51.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019322278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039349972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:51.086" endtime="20201112 09:44:51.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.094" endtime="20201112 09:44:51.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.787" endtime="20201112 09:44:51.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:50.785" endtime="20201112 09:44:51.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:51.121" level="INFO">${RESULT} = {'diff': [0, 0.020027694, 0.020000347, 0.020002237000000006, 0.02000234699999999, 0.020002222, 0.020002347000000018, 0.02000223599999998, 0.020002348000000003, 0.020002222000000014, 0.0200023470000000...</msg>
<status status="PASS" starttime="20201112 09:44:51.097" endtime="20201112 09:44:51.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.125" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:51.124" endtime="20201112 09:44:51.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.127" level="INFO">VALUE: 0.019322278</msg>
<status status="PASS" starttime="20201112 09:44:51.126" endtime="20201112 09:44:51.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.122" endtime="20201112 09:44:51.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.133" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:51.132" endtime="20201112 09:44:51.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.136" level="INFO">VALUE: [0.039349972, 0.059350319, 0.079352556, 0.099354903, 0.119357125, 0.139359472, 0.159361708, 0.179364056, 0.199366278, 0.219368625, 0.239370847, 0.259373208, 0.279375472, 0.299377806, 0.319380014, 0.339382389, 0.359384597, 0.379386972, 0.399389208, 0.419391569, 0.439393833, 0.459396208, 0.479398458, 0.499400833, 0.519403097, 0.539405472, 0.559407792, 0.579410097, 0.599412361, 0.619414736, 0.639416986, 0.659419361, 0.679421611, 0.699423986, 0.719426278, 0.739428625, 0.759430875, 0.779433264, 0.799435514, 0.819437861, 0.839440111, 0.859442486, 0.87944475, 0.899447111, 0.919449361, 0.939451764, 0.959453986, 0.979456361, 0.999458625, 1.019461014, 1.039463319, 1.059465639, 1.079467875, 1.099470264, 1.1194725, 1.139474889, 1.159477125, 1.1794795, 1.19948175, 1.219484125, 1.239486403, 1.25948875, 1.279491, 1.299493389, 1.319495625, 1.339498, 1.35950025, 1.379502625, 1.399504875, 1.41950725, 1.439509514, 1.459511875, 1.479514139, 1.499516514, 1.51951875, 1.539521153, 1.559523375, 1.579525778, 1.599528028, 1.619530403, 1.639532639, 1.659535014, 1.679537264, 1.699539653, 1.719541917, 1.739544278, 1.759546514, 1.779548889, 1.799551153, 1.819553597, 1.839555764, 1.859558139, 1.879560403, 1.899562764, 1.919565097, 1.939567389, 1.959569708, 1.979572028, 1.999574264, 2.019576653] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:51.134" endtime="20201112 09:44:51.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.129" endtime="20201112 09:44:51.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.139" endtime="20201112 09:44:51.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:51.142" endtime="20201112 09:44:51.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.141" endtime="20201112 09:44:51.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.137" endtime="20201112 09:44:51.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.619" endtime="20201112 09:44:51.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.571" endtime="20201112 09:44:51.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.570" endtime="20201112 09:44:51.164"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:51.166" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.174" endtime="20201112 09:44:55.298"></status>
</kw>
<msg timestamp="20201112 09:44:55.299" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 13840396, 'wakeups': [13850415, 13860415, 13870415, 13880415, 13890415...</msg>
<status status="PASS" starttime="20201112 09:44:51.173" endtime="20201112 09:44:55.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.305" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 13840396, 'wakeups': [13850415, 13860415, 13870415, 13880415, 13890415...</msg>
<status status="PASS" starttime="20201112 09:44:55.301" endtime="20201112 09:44:55.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.307" endtime="20201112 09:44:55.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.170" endtime="20201112 09:44:55.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.168" endtime="20201112 09:44:55.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:55.315" level="INFO">${RESULT} = {'wakeups': [13850415, 13860415, 13870415, 13880415, 13890415, 13900415, 13910415, 13920415, 13930415, 13940415, 13950415, 13960415, 13970415, 13980415, 13990415, 14000415, 14010415, 14020415, 1403041...</msg>
<status status="PASS" starttime="20201112 09:44:55.313" endtime="20201112 09:44:55.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.319" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:55.318" endtime="20201112 09:44:55.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.322" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:55.321" endtime="20201112 09:44:55.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.316" endtime="20201112 09:44:55.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.327" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:55.326" endtime="20201112 09:44:55.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.329" level="INFO">VALUE: 13840396</msg>
<status status="PASS" starttime="20201112 09:44:55.328" endtime="20201112 09:44:55.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.323" endtime="20201112 09:44:55.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.334" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:55.333" endtime="20201112 09:44:55.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.336" level="INFO">VALUE: [13850415, 13860415, 13870415, 13880415, 13890415, 13900415, 13910415, 13920415, 13930415, 13940415, 13950415, 13960415, 13970415, 13980415, 13990415, 14000415, 14010415, 14020415, 14030415, 14040415, 14050415, 14060415, 14070415, 14080415, 14090415, 14100415, 14110415, 14120415, 14130415, 14140415, 14150415, 14160415, 14170415, 14180415, 14190415, 14200415, 14210415, 14220415, 14230415, 14240415, 14250415, 14260415, 14270415, 14280415, 14290415, 14300415, 14310415, 14320415, 14330415, 14340415, 14350415, 14360415, 14370415, 14380415, 14390415, 14400415, 14410415, 14420415, 14430415, 14440415, 14450415, 14460415, 14470415, 14480415, 14490415, 14500415, 14510415, 14520415, 14530415, 14540415, 14550415, 14560415, 14570415, 14580415, 14590415, 14600415, 14610415, 14620415, 14630415, 14640415, 14650415, 14660415, 14670415, 14680415, 14690415, 14700415, 14710415, 14720415, 14730415, 14740415, 14750415, 14760415, 14770415, 14780415, 14790415, 14800415, 14810415, 14820415, 14830415, 14840415]</msg>
<status status="PASS" starttime="20201112 09:44:55.335" endtime="20201112 09:44:55.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.330" endtime="20201112 09:44:55.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.344" endtime="20201112 09:44:55.638"></status>
</kw>
<msg timestamp="20201112 09:44:55.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022675292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042715889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:55.342" endtime="20201112 09:44:55.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022675292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042715889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:55.642" endtime="20201112 09:44:55.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.649" endtime="20201112 09:44:55.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.339" endtime="20201112 09:44:55.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.337" endtime="20201112 09:44:55.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:55.676" level="INFO">${RESULT} = {'diff': [0, 0.020040597, 0.020002318999999998, 0.020002236000000007, 0.020002416999999995, 0.020002208000000007, 0.020002361999999982, 0.020002291000000005, 0.020002347000000004, 0.020002292000000005...</msg>
<status status="PASS" starttime="20201112 09:44:55.653" endtime="20201112 09:44:55.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.680" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:55.679" endtime="20201112 09:44:55.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.682" level="INFO">VALUE: 0.022675292</msg>
<status status="PASS" starttime="20201112 09:44:55.681" endtime="20201112 09:44:55.682"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.676" endtime="20201112 09:44:55.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.687" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:55.686" endtime="20201112 09:44:55.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.690" level="INFO">VALUE: [0.042715889, 0.062718208, 0.082720444, 0.102722861, 0.122725069, 0.142727431, 0.162729722, 0.182732069, 0.202734361, 0.222736667, 0.242738917, 0.262741278, 0.282743542, 0.302745903, 0.322748153, 0.342750528, 0.362752778, 0.382755194, 0.402757403, 0.422759764, 0.442762, 0.462764375, 0.482766639, 0.502769, 0.522771306, 0.542773611, 0.562775875, 0.582778306, 0.602780486, 0.622782847, 0.642785111, 0.662787472, 0.682789736, 0.702792097, 0.722794333, 0.742796722, 0.762798958, 0.782801417, 0.802803583, 0.822805958, 0.842808222, 0.862810569, 0.882812819, 0.902815208, 0.922817444, 0.942819819, 0.962822069, 0.982824431, 1.002826694, 1.022829056, 1.042831306, 1.062833708, 1.082835917, 1.102838292, 1.122840542, 1.142842931, 1.162845167, 1.182847528, 1.202849778, 1.222852222, 1.242854403, 1.262856778, 1.282859014, 1.302861389, 1.322863667, 1.342866014, 1.362868278, 1.382870639, 1.402872889, 1.42287525, 1.442877514, 1.462879875, 1.482882125, 1.5028845, 1.522886736, 1.542889111, 1.562891361, 1.58289375, 1.602895972, 1.622898347, 1.642900597, 1.662902972, 1.682905222, 1.702907597, 1.722909861, 1.742912264, 1.762914458, 1.782916861, 1.802919097, 1.822921472, 1.842923694, 1.862926069, 1.882928333, 1.902930708, 1.922932944, 1.942935319, 1.962937611, 1.982939944, 2.002942194, 2.022944556] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:55.689" endtime="20201112 09:44:55.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.684" endtime="20201112 09:44:55.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.693" endtime="20201112 09:44:55.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:55.696" endtime="20201112 09:44:55.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.695" endtime="20201112 09:44:55.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.691" endtime="20201112 09:44:55.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.167" endtime="20201112 09:44:55.717"></status>
</kw>
<msg timestamp="20201112 09:44:55.717" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.726" endtime="20201112 09:44:59.830"></status>
</kw>
<msg timestamp="20201112 09:44:59.830" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16116081, 'wakeups': [16126100, 16136100, 16146100, 16156100, 16166100...</msg>
<status status="PASS" starttime="20201112 09:44:55.724" endtime="20201112 09:44:59.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.834" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16116081, 'wakeups': [16126100, 16136100, 16146100, 16156100, 16166100...</msg>
<status status="PASS" starttime="20201112 09:44:59.831" endtime="20201112 09:44:59.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.835" endtime="20201112 09:44:59.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.721" endtime="20201112 09:44:59.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.719" endtime="20201112 09:44:59.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:59.840" level="INFO">${RESULT} = {'wakeups': [16126100, 16136100, 16146100, 16156100, 16166100, 16176100, 16186100, 16196100, 16206100, 16216100, 16226100, 16236100, 16246100, 16256100, 16266100, 16276100, 16286100, 16296100, 1630610...</msg>
<status status="PASS" starttime="20201112 09:44:59.838" endtime="20201112 09:44:59.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.844" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:59.843" endtime="20201112 09:44:59.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.846" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:59.845" endtime="20201112 09:44:59.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.841" endtime="20201112 09:44:59.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.851" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:59.850" endtime="20201112 09:44:59.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.853" level="INFO">VALUE: 16116081</msg>
<status status="PASS" starttime="20201112 09:44:59.852" endtime="20201112 09:44:59.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.848" endtime="20201112 09:44:59.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.858" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:59.857" endtime="20201112 09:44:59.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.860" level="INFO">VALUE: [16126100, 16136100, 16146100, 16156100, 16166100, 16176100, 16186100, 16196100, 16206100, 16216100, 16226100, 16236100, 16246100, 16256100, 16266100, 16276100, 16286100, 16296100, 16306100, 16316100, 16326100, 16336100, 16346100, 16356100, 16366100, 16376100, 16386100, 16396100, 16406100, 16416100, 16426100, 16436100, 16446100, 16456100, 16466100, 16476100, 16486100, 16496100, 16506100, 16516100, 16526100, 16536100, 16546100, 16556100, 16566100, 16576100, 16586100, 16596100, 16606100, 16616100, 16626100, 16636100, 16646100, 16656100, 16666100, 16676100, 16686100, 16696100, 16706100, 16716100, 16726100, 16736100, 16746100, 16756100, 16766100, 16776100, 16786100, 16796100, 16806100, 16816100, 16826100, 16836100, 16846100, 16856100, 16866100, 16876100, 16886100, 16896100, 16906100, 16916100, 16926100, 16936100, 16946100, 16956100, 16966100, 16976100, 16986100, 16996100, 17006100, 17016100, 17026100, 17036100, 17046100, 17056100, 17066100, 17076100, 17086100, 17096100, 17106100, 17116100]</msg>
<status status="PASS" starttime="20201112 09:44:59.859" endtime="20201112 09:44:59.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.855" endtime="20201112 09:44:59.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.868" endtime="20201112 09:45:00.159"></status>
</kw>
<msg timestamp="20201112 09:45:00.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020256528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040297778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:59.866" endtime="20201112 09:45:00.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020256528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040297778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:00.163" endtime="20201112 09:45:00.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.170" endtime="20201112 09:45:00.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.864" endtime="20201112 09:45:00.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.862" endtime="20201112 09:45:00.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:00.198" level="INFO">${RESULT} = {'diff': [0, 0.02004125, 0.020002318999999998, 0.020002236000000007, 0.020002360999999996, 0.02000225, 0.020002361999999996, 0.02000225, 0.020002360999999996, 0.020002277000000013, 0.02000233400000001...</msg>
<status status="PASS" starttime="20201112 09:45:00.173" endtime="20201112 09:45:00.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.203" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:00.202" endtime="20201112 09:45:00.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.205" level="INFO">VALUE: 0.020256528</msg>
<status status="PASS" starttime="20201112 09:45:00.204" endtime="20201112 09:45:00.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.199" endtime="20201112 09:45:00.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.210" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:00.209" endtime="20201112 09:45:00.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.213" level="INFO">VALUE: [0.040297778, 0.060300097, 0.080302333, 0.100304694, 0.120306944, 0.140309306, 0.160311556, 0.180313917, 0.200316194, 0.220318528, 0.240320778, 0.260323139, 0.280325375, 0.300327764, 0.320330014, 0.340332361, 0.360334611, 0.380336972, 0.400339236, 0.420341583, 0.440343833, 0.460346194, 0.480348444, 0.500350833, 0.520353056, 0.540355431, 0.560357667, 0.580360042, 0.600362292, 0.620364653, 0.640366889, 0.660369278, 0.6803715, 0.700373889, 0.720376167, 0.7403785, 0.760380736, 0.780383111, 0.800385347, 0.820387708, 0.840389986, 0.860392319, 0.880394569, 0.900397, 0.920399181, 0.940401569, 0.960403792, 0.980406181, 1.000408444, 1.020410778, 1.040413042, 1.060415417, 1.080417639, 1.10042, 1.120422306, 1.140424611, 1.160426861, 1.180429222, 1.200431472, 1.220433847, 1.240436083, 1.260438472, 1.280440694, 1.300443083, 1.320445319, 1.340447694, 1.360449931, 1.380452292, 1.400454569, 1.420456917, 1.440459153, 1.460461514, 1.480463764, 1.500466139, 1.520468375, 1.540470736, 1.560472986, 1.580475347, 1.600477611, 1.620479972, 1.640482264, 1.660484583, 1.680486847, 1.700489208, 1.720491431, 1.740493875, 1.760496042, 1.780498417, 1.800500667, 1.820503042, 1.840505347, 1.860507653, 1.880509944, 1.90051225, 1.9205145, 1.940516931, 1.960519125, 1.980521486, 2.000523722, 2.020526097] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:00.212" endtime="20201112 09:45:00.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.206" endtime="20201112 09:45:00.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.216" endtime="20201112 09:45:00.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:00.219" endtime="20201112 09:45:00.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.218" endtime="20201112 09:45:00.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.214" endtime="20201112 09:45:00.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.718" endtime="20201112 09:45:00.240"></status>
</kw>
<msg timestamp="20201112 09:45:00.240" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.248" endtime="20201112 09:45:04.371"></status>
</kw>
<msg timestamp="20201112 09:45:04.373" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18377084, 'wakeups': [18387103, 18397103, 18407103, 18417103, 18427103...</msg>
<status status="PASS" starttime="20201112 09:45:00.247" endtime="20201112 09:45:04.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.379" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18377084, 'wakeups': [18387103, 18397103, 18407103, 18417103, 18427103...</msg>
<status status="PASS" starttime="20201112 09:45:04.375" endtime="20201112 09:45:04.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.381" endtime="20201112 09:45:04.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.244" endtime="20201112 09:45:04.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.242" endtime="20201112 09:45:04.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:04.386" level="INFO">${RESULT} = {'wakeups': [18387103, 18397103, 18407103, 18417103, 18427103, 18437103, 18447103, 18457103, 18467103, 18477103, 18487103, 18497103, 18507103, 18517103, 18527103, 18537103, 18547103, 18557103, 1856710...</msg>
<status status="PASS" starttime="20201112 09:45:04.384" endtime="20201112 09:45:04.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.391" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:04.390" endtime="20201112 09:45:04.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.393" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:04.392" endtime="20201112 09:45:04.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.387" endtime="20201112 09:45:04.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.400" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:04.398" endtime="20201112 09:45:04.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.402" level="INFO">VALUE: 18377084</msg>
<status status="PASS" starttime="20201112 09:45:04.401" endtime="20201112 09:45:04.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.395" endtime="20201112 09:45:04.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.407" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:04.406" endtime="20201112 09:45:04.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.409" level="INFO">VALUE: [18387103, 18397103, 18407103, 18417103, 18427103, 18437103, 18447103, 18457103, 18467103, 18477103, 18487103, 18497103, 18507103, 18517103, 18527103, 18537103, 18547103, 18557103, 18567103, 18577103, 18587103, 18597103, 18607103, 18617103, 18627103, 18637103, 18647103, 18657103, 18667103, 18677103, 18687103, 18697103, 18707103, 18717103, 18727103, 18737103, 18747103, 18757103, 18767103, 18777103, 18787103, 18797103, 18807103, 18817103, 18827103, 18837103, 18847103, 18857103, 18867103, 18877103, 18887103, 18897103, 18907103, 18917103, 18927103, 18937103, 18947103, 18957103, 18967103, 18977103, 18987103, 18997103, 19007103, 19017103, 19027103, 19037103, 19047103, 19057103, 19067103, 19077103, 19087103, 19097103, 19107103, 19117103, 19127103, 19137103, 19147103, 19157103, 19167103, 19177103, 19187103, 19197103, 19207103, 19217103, 19227103, 19237103, 19247103, 19257103, 19267103, 19277103, 19287103, 19297103, 19307103, 19317103, 19327103, 19337103, 19347103, 19357103, 19367103, 19377103]</msg>
<status status="PASS" starttime="20201112 09:45:04.408" endtime="20201112 09:45:04.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.403" endtime="20201112 09:45:04.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.416" endtime="20201112 09:45:04.707"></status>
</kw>
<msg timestamp="20201112 09:45:04.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019296694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039337278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:04.415" endtime="20201112 09:45:04.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019296694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039337278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:04.711" endtime="20201112 09:45:04.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.719" endtime="20201112 09:45:04.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.412" endtime="20201112 09:45:04.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.411" endtime="20201112 09:45:04.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:04.745" level="INFO">${RESULT} = {'diff': [0, 0.020040584000000004, 0.020002318999999998, 0.020002221999999993, 0.02000236200000001, 0.020002235999999993, 0.02000243, 0.020002236000000007, 0.02000231999999999, 0.020002278000000012, 0...</msg>
<status status="PASS" starttime="20201112 09:45:04.722" endtime="20201112 09:45:04.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.750" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:45:04.749" endtime="20201112 09:45:04.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.752" level="INFO">VALUE: 0.019296694</msg>
<status status="PASS" starttime="20201112 09:45:04.751" endtime="20201112 09:45:04.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.746" endtime="20201112 09:45:04.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.757" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:04.756" endtime="20201112 09:45:04.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.760" level="INFO">VALUE: [0.039337278, 0.059339597, 0.079341819, 0.099344181, 0.119346417, 0.139348847, 0.159351083, 0.179353403, 0.199355681, 0.219358, 0.239360264, 0.259362583, 0.279364847, 0.299367208, 0.319369431, 0.339371792, 0.359374042, 0.379376403, 0.399378639, 0.419381042, 0.439383278, 0.459385611, 0.479387903, 0.499390222, 0.519392458, 0.539394903, 0.559397097, 0.579399431, 0.599401667, 0.619404028, 0.639406278, 0.659408653, 0.679410875, 0.69941325, 0.719415486, 0.739417847, 0.759420083, 0.779422486, 0.799424694, 0.819427069, 0.839429306, 0.859431722, 0.879433903, 0.899436292, 0.919438514, 0.939440875, 0.959443111, 0.979445486, 0.999447736, 1.019450083, 1.039452347, 1.059454708, 1.079456931, 1.099459292, 1.119461542, 1.139463917, 1.159466153, 1.179468514, 1.199470764, 1.219473111, 1.239475375, 1.259477736, 1.279479972, 1.299482347, 1.319484569, 1.339486931, 1.359489194, 1.379491542, 1.399493778, 1.419496139, 1.439498403, 1.45950075, 1.479503069, 1.499505375, 1.519507597, 1.539509986, 1.559512222, 1.579514569, 1.599516806, 1.619519181, 1.639521431, 1.659523778, 1.679526042, 1.699528389, 1.719530625, 1.739533014, 1.75953525, 1.779537667, 1.799539833, 1.819542208, 1.839544458, 1.859546806, 1.879549069, 1.899551417, 1.919553722, 1.939556028, 1.959558264, 1.979560625, 1.999562875, 2.019565236] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:04.759" endtime="20201112 09:45:04.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.753" endtime="20201112 09:45:04.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.764" endtime="20201112 09:45:04.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:04.767" endtime="20201112 09:45:04.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.766" endtime="20201112 09:45:04.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.762" endtime="20201112 09:45:04.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.241" endtime="20201112 09:45:04.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.165" endtime="20201112 09:45:04.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.164" endtime="20201112 09:45:04.788"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:04.791" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.799" endtime="20201112 09:45:08.903"></status>
</kw>
<msg timestamp="20201112 09:45:08.904" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 20652587, 'wakeups': [20662614, 20672614, 20682614, 20692614, 20702614...</msg>
<status status="PASS" starttime="20201112 09:45:04.797" endtime="20201112 09:45:08.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.906" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 20652587, 'wakeups': [20662614, 20672614, 20682614, 20692614, 20702614...</msg>
<status status="PASS" starttime="20201112 09:45:08.905" endtime="20201112 09:45:08.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:08.908" endtime="20201112 09:45:08.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.795" endtime="20201112 09:45:08.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.793" endtime="20201112 09:45:08.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:08.913" level="INFO">${RESULT} = {'wakeups': [20662614, 20672614, 20682614, 20692614, 20702614, 20712614, 20722614, 20732614, 20742614, 20752614, 20762614, 20772614, 20782614, 20792614, 20802614, 20812614, 20822614, 20832614, 2084261...</msg>
<status status="PASS" starttime="20201112 09:45:08.911" endtime="20201112 09:45:08.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.917" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:08.916" endtime="20201112 09:45:08.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.919" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:08.918" endtime="20201112 09:45:08.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:08.914" endtime="20201112 09:45:08.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.924" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:08.923" endtime="20201112 09:45:08.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.926" level="INFO">VALUE: 20652587</msg>
<status status="PASS" starttime="20201112 09:45:08.925" endtime="20201112 09:45:08.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:08.921" endtime="20201112 09:45:08.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.931" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:08.930" endtime="20201112 09:45:08.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:08.933" level="INFO">VALUE: [20662614, 20672614, 20682614, 20692614, 20702614, 20712614, 20722614, 20732614, 20742614, 20752614, 20762614, 20772614, 20782614, 20792614, 20802614, 20812614, 20822614, 20832614, 20842614, 20852614, 20862614, 20872614, 20882614, 20892614, 20902614, 20912614, 20922614, 20932614, 20942614, 20952614, 20962614, 20972614, 20982614, 20992614, 21002614, 21012614, 21022614, 21032614, 21042614, 21052614, 21062614, 21072614, 21082614, 21092614, 21102614, 21112614, 21122614, 21132614, 21142614, 21152614, 21162614, 21172614, 21182614, 21192614, 21202614, 21212614, 21222614, 21232614, 21242614, 21252614, 21262614, 21272614, 21282614, 21292614, 21302614, 21312614, 21322614, 21332614, 21342614, 21352614, 21362614, 21372614, 21382614, 21392614, 21402614, 21412614, 21422614, 21432614, 21442614, 21452614, 21462614, 21472614, 21482614, 21492614, 21502614, 21512614, 21522614, 21532614, 21542614, 21552614, 21562614, 21572614, 21582614, 21592614, 21602614, 21612614, 21622614, 21632614, 21642614, 21652614]</msg>
<status status="PASS" starttime="20201112 09:45:08.932" endtime="20201112 09:45:08.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:08.928" endtime="20201112 09:45:08.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:08.942" endtime="20201112 09:45:09.234"></status>
</kw>
<msg timestamp="20201112 09:45:09.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042399069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:08.940" endtime="20201112 09:45:09.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042399069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:09.238" endtime="20201112 09:45:09.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.245" endtime="20201112 09:45:09.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:08.937" endtime="20201112 09:45:09.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:08.935" endtime="20201112 09:45:09.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:09.272" level="INFO">${RESULT} = {'diff': [0, 0.020057236, 0.020002264000000006, 0.020002235999999993, 0.02000236200000001, 0.020002235999999993, 0.020002388999999995, 0.020002194, 0.020002431000000015, 0.020002165999999988, 0.020002...</msg>
<status status="PASS" starttime="20201112 09:45:09.249" endtime="20201112 09:45:09.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.277" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:09.276" endtime="20201112 09:45:09.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.279" level="INFO">VALUE: 0.022341833</msg>
<status status="PASS" starttime="20201112 09:45:09.278" endtime="20201112 09:45:09.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.273" endtime="20201112 09:45:09.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.284" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:09.283" endtime="20201112 09:45:09.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.286" level="INFO">VALUE: [0.042399069, 0.062401333, 0.082403569, 0.102405931, 0.122408167, 0.142410556, 0.16241275, 0.182415181, 0.202417347, 0.222419708, 0.242421958, 0.262424306, 0.282426542, 0.302428958, 0.322431153, 0.342433542, 0.362435736, 0.382438111, 0.402440333, 0.422442694, 0.442444931, 0.462447292, 0.482449542, 0.502451903, 0.522454139, 0.542456486, 0.562458722, 0.582461083, 0.602463319, 0.622465681, 0.642467972, 0.662470278, 0.682472514, 0.702474889, 0.722477125, 0.742479542, 0.762481736, 0.782484083, 0.802486319, 0.822488681, 0.842490917, 0.862493278, 0.882495542, 0.902497875, 0.922500111, 0.942502472, 0.962504708, 0.982507069, 1.002509306, 1.022511736, 1.042513972, 1.062516278, 1.0825185, 1.102520861, 1.122523097, 1.142525486, 1.162527694, 1.182530056, 1.202532292, 1.222534667, 1.242536903, 1.262539292, 1.282541514, 1.302543903, 1.322546097, 1.342548472, 1.362550694, 1.382553083, 1.402555292, 1.422557667, 1.442559889, 1.46256225, 1.4825645, 1.502566889, 1.522569125, 1.542571444, 1.562573694, 1.582576125, 1.602578278, 1.622580639, 1.642582903, 1.66258525, 1.682587542, 1.702589847, 1.722592083, 1.742594444, 1.762596681, 1.782599042, 1.802601292, 1.822603639, 1.842605875, 1.862608236, 1.8826105, 1.902612833, 1.922615083, 1.942617431, 1.962619681, 1.982622028, 2.002624333, 2.022626639] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:09.285" endtime="20201112 09:45:09.287"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.280" endtime="20201112 09:45:09.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.290" endtime="20201112 09:45:09.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:09.293" endtime="20201112 09:45:09.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.292" endtime="20201112 09:45:09.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.288" endtime="20201112 09:45:09.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.792" endtime="20201112 09:45:09.314"></status>
</kw>
<msg timestamp="20201112 09:45:09.314" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.323" endtime="20201112 09:45:13.446"></status>
</kw>
<msg timestamp="20201112 09:45:13.447" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 22914652, 'wakeups': [22924679, 22934679, 22944679, 22954679, 22964679...</msg>
<status status="PASS" starttime="20201112 09:45:09.321" endtime="20201112 09:45:13.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.450" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 22914652, 'wakeups': [22924679, 22934679, 22944679, 22954679, 22964679...</msg>
<status status="PASS" starttime="20201112 09:45:13.448" endtime="20201112 09:45:13.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:13.451" endtime="20201112 09:45:13.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.318" endtime="20201112 09:45:13.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.316" endtime="20201112 09:45:13.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:13.456" level="INFO">${RESULT} = {'wakeups': [22924679, 22934679, 22944679, 22954679, 22964679, 22974679, 22984679, 22994679, 23004679, 23014679, 23024679, 23034679, 23044679, 23054679, 23064679, 23074679, 23084679, 23094679, 2310467...</msg>
<status status="PASS" starttime="20201112 09:45:13.454" endtime="20201112 09:45:13.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.460" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:13.459" endtime="20201112 09:45:13.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.463" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:13.462" endtime="20201112 09:45:13.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.457" endtime="20201112 09:45:13.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.467" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:13.466" endtime="20201112 09:45:13.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.469" level="INFO">VALUE: 22914652</msg>
<status status="PASS" starttime="20201112 09:45:13.468" endtime="20201112 09:45:13.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.464" endtime="20201112 09:45:13.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.474" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:13.473" endtime="20201112 09:45:13.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.477" level="INFO">VALUE: [22924679, 22934679, 22944679, 22954679, 22964679, 22974679, 22984679, 22994679, 23004679, 23014679, 23024679, 23034679, 23044679, 23054679, 23064679, 23074679, 23084679, 23094679, 23104679, 23114679, 23124679, 23134679, 23144679, 23154679, 23164679, 23174679, 23184679, 23194679, 23204679, 23214679, 23224679, 23234679, 23244679, 23254679, 23264679, 23274679, 23284679, 23294679, 23304679, 23314679, 23324679, 23334679, 23344679, 23354679, 23364679, 23374679, 23384679, 23394679, 23404679, 23414679, 23424679, 23434679, 23444679, 23454679, 23464679, 23474679, 23484679, 23494679, 23504679, 23514679, 23524679, 23534679, 23544679, 23554679, 23564679, 23574679, 23584679, 23594679, 23604679, 23614679, 23624679, 23634679, 23644679, 23654679, 23664679, 23674679, 23684679, 23694679, 23704679, 23714679, 23724679, 23734679, 23744679, 23754679, 23764679, 23774679, 23784679, 23794679, 23804679, 23814679, 23824679, 23834679, 23844679, 23854679, 23864679, 23874679, 23884679, 23894679, 23904679, 23914679]</msg>
<status status="PASS" starttime="20201112 09:45:13.475" endtime="20201112 09:45:13.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.471" endtime="20201112 09:45:13.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:13.484" endtime="20201112 09:45:13.776"></status>
</kw>
<msg timestamp="20201112 09:45:13.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020756944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04081425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:45:13.482" endtime="20201112 09:45:13.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020756944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04081425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:45:13.780" endtime="20201112 09:45:13.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:13.787" endtime="20201112 09:45:13.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.480" endtime="20201112 09:45:13.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.478" endtime="20201112 09:45:13.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:13.819" level="INFO">${RESULT} = {'diff': [0, 0.020057306000000004, 0.020002207999999994, 0.020002236, 0.020002348000000003, 0.020002222, 0.02000236100000001, 0.02000225, 0.020002332999999983, 0.020002292000000005, 0.0200023189999999...</msg>
<status status="PASS" starttime="20201112 09:45:13.796" endtime="20201112 09:45:13.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.824" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:13.823" endtime="20201112 09:45:13.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.826" level="INFO">VALUE: 0.020756944</msg>
<status status="PASS" starttime="20201112 09:45:13.825" endtime="20201112 09:45:13.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.820" endtime="20201112 09:45:13.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.831" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:13.830" endtime="20201112 09:45:13.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:13.833" level="INFO">VALUE: [0.04081425, 0.060816458, 0.080818694, 0.100821042, 0.120823264, 0.140825625, 0.160827875, 0.180830208, 0.2008325, 0.220834819, 0.240837042, 0.260839389, 0.280841625, 0.300844, 0.320846222, 0.340848569, 0.360850806, 0.380853167, 0.400855403, 0.420857764, 0.440860028, 0.460862361, 0.480864583, 0.500866944, 0.520869167, 0.540871528, 0.560873764, 0.580876167, 0.600878347, 0.620880722, 0.640882944, 0.660885306, 0.680887542, 0.700889917, 0.720892125, 0.740894486, 0.760896722, 0.780899083, 0.800901319, 0.820903681, 0.840905903, 0.860908264, 0.8809105, 0.900912861, 0.920915083, 0.940917458, 0.960919694, 0.980922056, 1.000924278, 1.020926639, 1.040928861, 1.060931236, 1.080933458, 1.100935819, 1.120938042, 1.140940444, 1.160942653, 1.180945, 1.200947222, 1.220949583, 1.240951819, 1.260954181, 1.280956431, 1.300958778, 1.320961056, 1.340963417, 1.360965611, 1.380967958, 1.400970264, 1.420972556, 1.440974778, 1.460977139, 1.480979375, 1.50098175, 1.520983958, 1.540986319, 1.560988569, 1.580990917, 1.600993153, 1.620995514, 1.640997736, 1.661000111, 1.681002333, 1.701004694, 1.721006931, 1.741009278, 1.761011528, 1.781013903, 1.801016125, 1.821018486, 1.841020694, 1.861023056, 1.881025347, 1.901027653, 1.921029958, 1.941032236, 1.961034542, 1.981036833, 2.001039069, 2.021041444] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:13.832" endtime="20201112 09:45:13.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.827" endtime="20201112 09:45:13.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:13.836" endtime="20201112 09:45:13.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:13.840" endtime="20201112 09:45:13.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.838" endtime="20201112 09:45:13.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.835" endtime="20201112 09:45:13.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.315" endtime="20201112 09:45:13.861"></status>
</kw>
<msg timestamp="20201112 09:45:13.861" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:13.869" endtime="20201112 09:45:17.991"></status>
</kw>
<msg timestamp="20201112 09:45:17.993" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25187342, 'wakeups': [25197369, 25207369, 25217369, 25227369, 25237369...</msg>
<status status="PASS" starttime="20201112 09:45:13.867" endtime="20201112 09:45:17.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.999" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25187342, 'wakeups': [25197369, 25207369, 25217369, 25227369, 25237369...</msg>
<status status="PASS" starttime="20201112 09:45:17.995" endtime="20201112 09:45:17.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:18.001" endtime="20201112 09:45:18.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.865" endtime="20201112 09:45:18.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.863" endtime="20201112 09:45:18.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:18.009" level="INFO">${RESULT} = {'wakeups': [25197369, 25207369, 25217369, 25227369, 25237369, 25247369, 25257369, 25267369, 25277369, 25287369, 25297369, 25307369, 25317369, 25327369, 25337369, 25347369, 25357369, 25367369, 2537736...</msg>
<status status="PASS" starttime="20201112 09:45:18.007" endtime="20201112 09:45:18.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.014" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:18.013" endtime="20201112 09:45:18.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.016" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:18.015" endtime="20201112 09:45:18.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.010" endtime="20201112 09:45:18.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.021" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:18.020" endtime="20201112 09:45:18.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.024" level="INFO">VALUE: 25187342</msg>
<status status="PASS" starttime="20201112 09:45:18.022" endtime="20201112 09:45:18.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.017" endtime="20201112 09:45:18.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.029" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:18.028" endtime="20201112 09:45:18.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.031" level="INFO">VALUE: [25197369, 25207369, 25217369, 25227369, 25237369, 25247369, 25257369, 25267369, 25277369, 25287369, 25297369, 25307369, 25317369, 25327369, 25337369, 25347369, 25357369, 25367369, 25377369, 25387369, 25397369, 25407369, 25417369, 25427369, 25437369, 25447369, 25457369, 25467369, 25477369, 25487369, 25497369, 25507369, 25517369, 25527369, 25537369, 25547369, 25557369, 25567369, 25577369, 25587369, 25597369, 25607369, 25617369, 25627369, 25637369, 25647369, 25657369, 25667369, 25677369, 25687369, 25697369, 25707369, 25717369, 25727369, 25737369, 25747369, 25757369, 25767369, 25777369, 25787369, 25797369, 25807369, 25817369, 25827369, 25837369, 25847369, 25857369, 25867369, 25877369, 25887369, 25897369, 25907369, 25917369, 25927369, 25937369, 25947369, 25957369, 25967369, 25977369, 25987369, 25997369, 26007369, 26017369, 26027369, 26037369, 26047369, 26057369, 26067369, 26077369, 26087369, 26097369, 26107369, 26117369, 26127369, 26137369, 26147369, 26157369, 26167369, 26177369, 26187369]</msg>
<status status="PASS" starttime="20201112 09:45:18.030" endtime="20201112 09:45:18.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.025" endtime="20201112 09:45:18.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:18.038" endtime="20201112 09:45:18.329"></status>
</kw>
<msg timestamp="20201112 09:45:18.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019304139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039360736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:18.037" endtime="20201112 09:45:18.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019304139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039360736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:18.333" endtime="20201112 09:45:18.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:18.340" endtime="20201112 09:45:18.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.034" endtime="20201112 09:45:18.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.033" endtime="20201112 09:45:18.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:18.367" level="INFO">${RESULT} = {'diff': [0, 0.020056597, 0.02000225, 0.020002222000000007, 0.020002360999999996, 0.020002208999999993, 0.020002347000000018, 0.02000225, 0.02000237499999999, 0.020002194, 0.020002348000000003, 0.0200...</msg>
<status status="PASS" starttime="20201112 09:45:18.344" endtime="20201112 09:45:18.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.372" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:45:18.371" endtime="20201112 09:45:18.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.374" level="INFO">VALUE: 0.019304139</msg>
<status status="PASS" starttime="20201112 09:45:18.373" endtime="20201112 09:45:18.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.368" endtime="20201112 09:45:18.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.379" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:18.378" endtime="20201112 09:45:18.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.383" level="INFO">VALUE: [0.039360736, 0.059362986, 0.079365208, 0.099367569, 0.119369778, 0.139372125, 0.159374375, 0.17937675, 0.199378944, 0.219381292, 0.239383528, 0.259385875, 0.279388125, 0.299390472, 0.319392708, 0.339395042, 0.359397292, 0.379399639, 0.399401861, 0.419404236, 0.439406444, 0.459408819, 0.479411028, 0.499413403, 0.519415639, 0.539417986, 0.559420222, 0.579422569, 0.599424778, 0.619427139, 0.639429361, 0.659431736, 0.679433958, 0.699436333, 0.719438611, 0.739440889, 0.759443153, 0.779445472, 0.799447778, 0.819450069, 0.839452292, 0.859454667, 0.879456889, 0.899459264, 0.919461458, 0.939463819, 0.959466083, 0.979468417, 0.999470639, 1.019472986, 1.039475222, 1.059477569, 1.079479806, 1.099482181, 1.119484389, 1.13948675, 1.159488972, 1.179491403, 1.199493597, 1.219495917, 1.239498153, 1.259500514, 1.279502736, 1.299505083, 1.319507319, 1.339509736, 1.359511903, 1.37951425, 1.399516556, 1.419518847, 1.439521083, 1.459523431, 1.479525653, 1.499528028, 1.51953025, 1.539532611, 1.559534833, 1.579537181, 1.599539417, 1.619541764, 1.639544014, 1.659546347, 1.679548583, 1.699550958, 1.719553167, 1.739555583, 1.759557764, 1.779560125, 1.799562333, 1.819564708, 1.839566917, 1.859569278, 1.879571514, 1.899573917, 1.919576111, 1.939578444, 1.959580681, 1.979583056, 1.999585278, 2.019587625] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:18.381" endtime="20201112 09:45:18.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.375" endtime="20201112 09:45:18.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:18.386" endtime="20201112 09:45:18.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:18.389" endtime="20201112 09:45:18.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.388" endtime="20201112 09:45:18.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.384" endtime="20201112 09:45:18.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.862" endtime="20201112 09:45:18.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.789" endtime="20201112 09:45:18.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.789" endtime="20201112 09:45:18.411"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:18.413" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:18.421" endtime="20201112 09:45:22.527"></status>
</kw>
<msg timestamp="20201112 09:45:22.527" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 27463408, 'wakeups': [27473444, 27483443, 27493443, 27503443, 27513443...</msg>
<status status="PASS" starttime="20201112 09:45:18.420" endtime="20201112 09:45:22.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.530" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 27463408, 'wakeups': [27473444, 27483443, 27493443, 27503443, 27513443...</msg>
<status status="PASS" starttime="20201112 09:45:22.528" endtime="20201112 09:45:22.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.531" endtime="20201112 09:45:22.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.417" endtime="20201112 09:45:22.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.415" endtime="20201112 09:45:22.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:22.537" level="INFO">${RESULT} = {'wakeups': [27473444, 27483443, 27493443, 27503443, 27513443, 27523443, 27533443, 27543443, 27553443, 27563443, 27573443, 27583443, 27593443, 27603443, 27613443, 27623443, 27633443, 27643443, 2765344...</msg>
<status status="PASS" starttime="20201112 09:45:22.535" endtime="20201112 09:45:22.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.541" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:22.540" endtime="20201112 09:45:22.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.543" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:22.542" endtime="20201112 09:45:22.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.537" endtime="20201112 09:45:22.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.548" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:22.547" endtime="20201112 09:45:22.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.550" level="INFO">VALUE: 27463408</msg>
<status status="PASS" starttime="20201112 09:45:22.549" endtime="20201112 09:45:22.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.544" endtime="20201112 09:45:22.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.555" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:22.554" endtime="20201112 09:45:22.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.557" level="INFO">VALUE: [27473444, 27483443, 27493443, 27503443, 27513443, 27523443, 27533443, 27543443, 27553443, 27563443, 27573443, 27583443, 27593443, 27603443, 27613443, 27623443, 27633443, 27643443, 27653443, 27663443, 27673443, 27683443, 27693443, 27703443, 27713443, 27723443, 27733443, 27743443, 27753443, 27763443, 27773443, 27783443, 27793443, 27803443, 27813443, 27823443, 27833443, 27843443, 27853443, 27863443, 27873443, 27883443, 27893443, 27903443, 27913443, 27923443, 27933443, 27943443, 27953443, 27963443, 27973443, 27983443, 27993443, 28003443, 28013443, 28023443, 28033443, 28043443, 28053443, 28063443, 28073443, 28083443, 28093443, 28103443, 28113443, 28123443, 28133443, 28143443, 28153443, 28163443, 28173443, 28183443, 28193443, 28203443, 28213443, 28223443, 28233443, 28243443, 28253443, 28263443, 28273443, 28283443, 28293443, 28303443, 28313443, 28323443, 28333443, 28343443, 28353443, 28363443, 28373443, 28383443, 28393443, 28403443, 28413443, 28423443, 28433443, 28443443, 28453443, 28463443]</msg>
<status status="PASS" starttime="20201112 09:45:22.556" endtime="20201112 09:45:22.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.551" endtime="20201112 09:45:22.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.566" endtime="20201112 09:45:22.856"></status>
</kw>
<msg timestamp="20201112 09:45:22.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022102639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042176833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:22.563" endtime="20201112 09:45:22.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022102639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042176833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:22.860" endtime="20201112 09:45:22.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.868" endtime="20201112 09:45:22.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.561" endtime="20201112 09:45:22.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.559" endtime="20201112 09:45:22.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:22.894" level="INFO">${RESULT} = {'diff': [0, 0.020074193999999997, 0.020002098000000003, 0.020002236, 0.020002388999999995, 0.020002319000000005, 0.020002278000000012, 0.02000225, 0.02000238899999998, 0.020002277000000013, 0.0200023...</msg>
<status status="PASS" starttime="20201112 09:45:22.871" endtime="20201112 09:45:22.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.899" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:22.898" endtime="20201112 09:45:22.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.901" level="INFO">VALUE: 0.022102639</msg>
<status status="PASS" starttime="20201112 09:45:22.900" endtime="20201112 09:45:22.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.895" endtime="20201112 09:45:22.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.906" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:22.905" endtime="20201112 09:45:22.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.908" level="INFO">VALUE: [0.042176833, 0.062178931, 0.082181167, 0.102183556, 0.122185875, 0.142188153, 0.162190403, 0.182192792, 0.202195069, 0.222197389, 0.242199639, 0.262202056, 0.282204278, 0.302206653, 0.322208889, 0.342211264, 0.3622135, 0.382215875, 0.402218125, 0.422220514, 0.44222275, 0.462225125, 0.482227361, 0.502229764, 0.522231986, 0.542234375, 0.562236611, 0.582239, 0.602241264, 0.622243611, 0.642245847, 0.662248222, 0.682250472, 0.702252847, 0.722255125, 0.742257472, 0.762259722, 0.782262097, 0.802264333, 0.822266722, 0.842268958, 0.862271333, 0.882273583, 0.902276014, 0.922278208, 0.942280569, 0.962282819, 0.982285194, 1.002287514, 1.022289819, 1.042292069, 1.062294444, 1.082296681, 1.102299069, 1.122301333, 1.142303681, 1.162305931, 1.182308319, 1.202310556, 1.222312917, 1.242315181, 1.262317542, 1.282319792, 1.302322181, 1.322324431, 1.342326806, 1.362329042, 1.382331403, 1.402333667, 1.422336028, 1.442338278, 1.462340653, 1.482342903, 1.502345292, 1.522347569, 1.542349917, 1.562352153, 1.582354514, 1.602356764, 1.622359153, 1.642361403, 1.662363778, 1.682366014, 1.702368375, 1.722370625, 1.742373, 1.762375264, 1.782377639, 1.802379875, 1.822382264, 1.842384514, 1.862386875, 1.882389181, 1.902391486, 1.922393736, 1.942396111, 1.962398361, 1.982400764, 2.002402986, 2.022405361] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:22.907" endtime="20201112 09:45:22.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.902" endtime="20201112 09:45:22.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.911" endtime="20201112 09:45:22.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:22.916" endtime="20201112 09:45:22.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.914" endtime="20201112 09:45:22.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.910" endtime="20201112 09:45:22.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.414" endtime="20201112 09:45:22.936"></status>
</kw>
<msg timestamp="20201112 09:45:22.937" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.946" endtime="20201112 09:45:27.069"></status>
</kw>
<msg timestamp="20201112 09:45:27.070" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 29725599, 'wakeups': [29735635, 29745634, 29755634, 29765634, 29775634...</msg>
<status status="PASS" starttime="20201112 09:45:22.944" endtime="20201112 09:45:27.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.074" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 29725599, 'wakeups': [29735635, 29745634, 29755634, 29765634, 29775634...</msg>
<status status="PASS" starttime="20201112 09:45:27.073" endtime="20201112 09:45:27.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.075" endtime="20201112 09:45:27.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.941" endtime="20201112 09:45:27.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.939" endtime="20201112 09:45:27.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:27.081" level="INFO">${RESULT} = {'wakeups': [29735635, 29745634, 29755634, 29765634, 29775634, 29785634, 29795634, 29805634, 29815634, 29825634, 29835634, 29845634, 29855634, 29865634, 29875634, 29885634, 29895634, 29905634, 2991563...</msg>
<status status="PASS" starttime="20201112 09:45:27.079" endtime="20201112 09:45:27.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.085" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:27.084" endtime="20201112 09:45:27.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.087" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:27.086" endtime="20201112 09:45:27.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.082" endtime="20201112 09:45:27.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.092" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:27.091" endtime="20201112 09:45:27.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.094" level="INFO">VALUE: 29725599</msg>
<status status="PASS" starttime="20201112 09:45:27.093" endtime="20201112 09:45:27.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.088" endtime="20201112 09:45:27.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.099" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:27.098" endtime="20201112 09:45:27.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.101" level="INFO">VALUE: [29735635, 29745634, 29755634, 29765634, 29775634, 29785634, 29795634, 29805634, 29815634, 29825634, 29835634, 29845634, 29855634, 29865634, 29875634, 29885634, 29895634, 29905634, 29915634, 29925634, 29935634, 29945634, 29955634, 29965634, 29975634, 29985634, 29995634, 30005634, 30015634, 30025634, 30035634, 30045634, 30055634, 30065634, 30075634, 30085634, 30095634, 30105634, 30115634, 30125634, 30135634, 30145634, 30155634, 30165634, 30175634, 30185634, 30195634, 30205634, 30215634, 30225634, 30235634, 30245634, 30255634, 30265634, 30275634, 30285634, 30295634, 30305634, 30315634, 30325634, 30335634, 30345634, 30355634, 30365634, 30375634, 30385634, 30395634, 30405634, 30415634, 30425634, 30435634, 30445634, 30455634, 30465634, 30475634, 30485634, 30495634, 30505634, 30515634, 30525634, 30535634, 30545634, 30555634, 30565634, 30575634, 30585634, 30595634, 30605634, 30615634, 30625634, 30635634, 30645634, 30655634, 30665634, 30675634, 30685634, 30695634, 30705634, 30715634, 30725634]</msg>
<status status="PASS" starttime="20201112 09:45:27.100" endtime="20201112 09:45:27.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.095" endtime="20201112 09:45:27.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.113" endtime="20201112 09:45:27.404"></status>
</kw>
<msg timestamp="20201112 09:45:27.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020283528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040358278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:27.107" endtime="20201112 09:45:27.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020283528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040358278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:27.408" endtime="20201112 09:45:27.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.416" endtime="20201112 09:45:27.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.104" endtime="20201112 09:45:27.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.103" endtime="20201112 09:45:27.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:27.444" level="INFO">${RESULT} = {'diff': [0, 0.02007475, 0.020002153, 0.020002222000000007, 0.020002360999999996, 0.02000225, 0.020002360999999996, 0.02000225, 0.020002360999999996, 0.020002278000000012, 0.020002347000000004, 0.0200...</msg>
<status status="PASS" starttime="20201112 09:45:27.419" endtime="20201112 09:45:27.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.448" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:27.447" endtime="20201112 09:45:27.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.450" level="INFO">VALUE: 0.020283528</msg>
<status status="PASS" starttime="20201112 09:45:27.449" endtime="20201112 09:45:27.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.444" endtime="20201112 09:45:27.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.455" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:27.454" endtime="20201112 09:45:27.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.458" level="INFO">VALUE: [0.040358278, 0.060360431, 0.080362653, 0.100365014, 0.120367264, 0.140369625, 0.160371875, 0.180374236, 0.200376514, 0.220378861, 0.240381125, 0.260383458, 0.280385708, 0.300388069, 0.320390319, 0.340392694, 0.360394931, 0.380397375, 0.400399597, 0.420401931, 0.440404181, 0.460406528, 0.480408833, 0.500411153, 0.520413389, 0.540415764, 0.560418, 0.580420444, 0.600422625, 0.620424986, 0.64042725, 0.660429653, 0.680431847, 0.700434208, 0.720436458, 0.740438903, 0.760441097, 0.780443458, 0.800445681, 0.820448125, 0.840450306, 0.860452681, 0.880454917, 0.900457306, 0.920459528, 0.940461889, 0.960464139, 0.980466514, 1.00046875, 1.020471125, 1.040473375, 1.060475764, 1.080477972, 1.100480347, 1.120482597, 1.140484972, 1.160487208, 1.180489583, 1.200491819, 1.220494194, 1.240496431, 1.260498806, 1.280501042, 1.300503417, 1.320505681, 1.340508097, 1.360510306, 1.380512681, 1.400514889, 1.420517264, 1.4405195, 1.460521875, 1.480524125, 1.500526486, 1.520528736, 1.540531111, 1.560533347, 1.580535722, 1.600538014, 1.620540333, 1.640542583, 1.660544944, 1.680547194, 1.700549556, 1.720551806, 1.740554181, 1.760556417, 1.780558792, 1.800561056, 1.820563417, 1.840565653, 1.860568028, 1.880570264, 1.900572653, 1.920574903, 1.940577264, 1.9605795, 1.980581861, 2.000584111, 2.020586486] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:27.457" endtime="20201112 09:45:27.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.452" endtime="20201112 09:45:27.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.461" endtime="20201112 09:45:27.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:27.464" endtime="20201112 09:45:27.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.463" endtime="20201112 09:45:27.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.459" endtime="20201112 09:45:27.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.937" endtime="20201112 09:45:27.485"></status>
</kw>
<msg timestamp="20201112 09:45:27.485" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.493" endtime="20201112 09:45:31.597"></status>
</kw>
<msg timestamp="20201112 09:45:31.597" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31999290, 'wakeups': [32009326, 32019325, 32029325, 32039325, 32049325...</msg>
<status status="PASS" starttime="20201112 09:45:27.492" endtime="20201112 09:45:31.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.600" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31999290, 'wakeups': [32009326, 32019325, 32029325, 32039325, 32049325...</msg>
<status status="PASS" starttime="20201112 09:45:31.598" endtime="20201112 09:45:31.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:31.602" endtime="20201112 09:45:31.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.489" endtime="20201112 09:45:31.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.487" endtime="20201112 09:45:31.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:31.607" level="INFO">${RESULT} = {'wakeups': [32009326, 32019325, 32029325, 32039325, 32049325, 32059325, 32069325, 32079325, 32089325, 32099325, 32109325, 32119325, 32129325, 32139325, 32149325, 32159325, 32169325, 32179325, 3218932...</msg>
<status status="PASS" starttime="20201112 09:45:31.605" endtime="20201112 09:45:31.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.611" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:31.610" endtime="20201112 09:45:31.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.613" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:31.612" endtime="20201112 09:45:31.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.608" endtime="20201112 09:45:31.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.619" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:31.618" endtime="20201112 09:45:31.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.621" level="INFO">VALUE: 31999290</msg>
<status status="PASS" starttime="20201112 09:45:31.620" endtime="20201112 09:45:31.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.615" endtime="20201112 09:45:31.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.626" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:31.625" endtime="20201112 09:45:31.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.628" level="INFO">VALUE: [32009326, 32019325, 32029325, 32039325, 32049325, 32059325, 32069325, 32079325, 32089325, 32099325, 32109325, 32119325, 32129325, 32139325, 32149325, 32159325, 32169325, 32179325, 32189325, 32199325, 32209325, 32219325, 32229325, 32239325, 32249325, 32259325, 32269325, 32279325, 32289325, 32299325, 32309325, 32319325, 32329325, 32339325, 32349325, 32359325, 32369325, 32379325, 32389325, 32399325, 32409325, 32419325, 32429325, 32439325, 32449325, 32459325, 32469325, 32479325, 32489325, 32499325, 32509325, 32519325, 32529325, 32539325, 32549325, 32559325, 32569325, 32579325, 32589325, 32599325, 32609325, 32619325, 32629325, 32639325, 32649325, 32659325, 32669325, 32679325, 32689325, 32699325, 32709325, 32719325, 32729325, 32739325, 32749325, 32759325, 32769325, 32779325, 32789325, 32799325, 32809325, 32819325, 32829325, 32839325, 32849325, 32859325, 32869325, 32879325, 32889325, 32899325, 32909325, 32919325, 32929325, 32939325, 32949325, 32959325, 32969325, 32979325, 32989325, 32999325]</msg>
<status status="PASS" starttime="20201112 09:45:31.627" endtime="20201112 09:45:31.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.623" endtime="20201112 09:45:31.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:31.636" endtime="20201112 09:45:31.926"></status>
</kw>
<msg timestamp="20201112 09:45:31.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019401167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039475292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:31.634" endtime="20201112 09:45:31.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019401167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039475292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:31.930" endtime="20201112 09:45:31.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:31.938" endtime="20201112 09:45:31.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.632" endtime="20201112 09:45:31.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.630" endtime="20201112 09:45:31.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:31.964" level="INFO">${RESULT} = {'diff': [0, 0.020074125, 0.020002151999999995, 0.020002223000000006, 0.020002375000000003, 0.020002222, 0.020002360999999996, 0.02000225, 0.020002360999999996, 0.020002292000000005, 0.020002347000000...</msg>
<status status="PASS" starttime="20201112 09:45:31.941" endtime="20201112 09:45:31.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.969" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:31.968" endtime="20201112 09:45:31.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.971" level="INFO">VALUE: 0.019401167</msg>
<status status="PASS" starttime="20201112 09:45:31.970" endtime="20201112 09:45:31.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.965" endtime="20201112 09:45:31.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.977" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:31.976" endtime="20201112 09:45:31.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:31.979" level="INFO">VALUE: [0.039475292, 0.059477444, 0.079479667, 0.099482042, 0.119484264, 0.139486625, 0.159488875, 0.179491236, 0.199493528, 0.219495875, 0.239498097, 0.259500444, 0.279502736, 0.299505069, 0.319507292, 0.339509681, 0.359511917, 0.379514292, 0.399516528, 0.419518889, 0.439521125, 0.459523514, 0.479525722, 0.499528097, 0.519530319, 0.539532708, 0.559534931, 0.579537306, 0.599539542, 0.619541903, 0.639544167, 0.659546528, 0.679548764, 0.699551125, 0.719553361, 0.739555736, 0.759557972, 0.779560333, 0.799562583, 0.819564958, 0.83956725, 0.859569556, 0.879571792, 0.899574208, 0.919576403, 0.939578764, 0.959581014, 0.979583375, 0.999585611, 1.019587986, 1.039590222, 1.059592597, 1.079594833, 1.099597208, 1.119599472, 1.139601819, 1.159604042, 1.179606417, 1.199608653, 1.219611028, 1.239613278, 1.259615625, 1.279617875, 1.29962025, 1.319622486, 1.339624861, 1.359627083, 1.379629458, 1.399631694, 1.419634069, 1.439636306, 1.459638667, 1.479640917, 1.499643278, 1.519645542, 1.539647931, 1.559650139, 1.579652514, 1.599654736, 1.619657111, 1.639659347, 1.659661722, 1.679663944, 1.699666319, 1.719668583, 1.739670944, 1.759673194, 1.779675542, 1.799677778, 1.819680167, 1.839682403, 1.85968475, 1.879687042, 1.899689375, 1.919691625, 1.939693972, 1.959696222, 1.979698639, 1.999700819, 2.019703194] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:31.978" endtime="20201112 09:45:31.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.973" endtime="20201112 09:45:31.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:31.983" endtime="20201112 09:45:31.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:31.986" endtime="20201112 09:45:32.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.984" endtime="20201112 09:45:32.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.981" endtime="20201112 09:45:32.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.486" endtime="20201112 09:45:32.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.412" endtime="20201112 09:45:32.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.411" endtime="20201112 09:45:32.007"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:32.010" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:32.018" endtime="20201112 09:45:36.140"></status>
</kw>
<msg timestamp="20201112 09:45:36.141" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 34261606, 'wakeups': [34271653, 34281651, 34291651, 34301651, 34311651...</msg>
<status status="PASS" starttime="20201112 09:45:32.016" endtime="20201112 09:45:36.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.144" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 34261606, 'wakeups': [34271653, 34281651, 34291651, 34301651, 34311651...</msg>
<status status="PASS" starttime="20201112 09:45:36.142" endtime="20201112 09:45:36.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:36.145" endtime="20201112 09:45:36.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.014" endtime="20201112 09:45:36.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.012" endtime="20201112 09:45:36.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:36.150" level="INFO">${RESULT} = {'wakeups': [34271653, 34281651, 34291651, 34301651, 34311651, 34321651, 34331651, 34341651, 34351651, 34361651, 34371651, 34381651, 34391651, 34401651, 34411651, 34421651, 34431651, 34441651, 3445165...</msg>
<status status="PASS" starttime="20201112 09:45:36.148" endtime="20201112 09:45:36.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.155" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:36.153" endtime="20201112 09:45:36.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.157" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:36.156" endtime="20201112 09:45:36.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.151" endtime="20201112 09:45:36.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.162" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:36.161" endtime="20201112 09:45:36.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.164" level="INFO">VALUE: 34261606</msg>
<status status="PASS" starttime="20201112 09:45:36.163" endtime="20201112 09:45:36.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.158" endtime="20201112 09:45:36.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.169" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:36.168" endtime="20201112 09:45:36.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.171" level="INFO">VALUE: [34271653, 34281651, 34291651, 34301651, 34311651, 34321651, 34331651, 34341651, 34351651, 34361651, 34371651, 34381651, 34391651, 34401651, 34411651, 34421651, 34431651, 34441651, 34451651, 34461651, 34471651, 34481651, 34491651, 34501651, 34511651, 34521651, 34531651, 34541651, 34551651, 34561651, 34571651, 34581651, 34591651, 34601651, 34611651, 34621651, 34631651, 34641651, 34651651, 34661651, 34671651, 34681651, 34691651, 34701651, 34711651, 34721651, 34731651, 34741651, 34751651, 34761651, 34771651, 34781651, 34791651, 34801651, 34811651, 34821651, 34831651, 34841651, 34851651, 34861651, 34871651, 34881651, 34891651, 34901651, 34911651, 34921651, 34931651, 34941651, 34951651, 34961651, 34971651, 34981651, 34991651, 35001651, 35011651, 35021651, 35031651, 35041651, 35051651, 35061651, 35071651, 35081651, 35091651, 35101651, 35111651, 35121651, 35131651, 35141651, 35151651, 35161651, 35171651, 35181651, 35191651, 35201651, 35211651, 35221651, 35231651, 35241651, 35251651, 35261651]</msg>
<status status="PASS" starttime="20201112 09:45:36.170" endtime="20201112 09:45:36.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.165" endtime="20201112 09:45:36.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:36.180" endtime="20201112 09:45:36.471"></status>
</kw>
<msg timestamp="20201112 09:45:36.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022196139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042291653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:36.178" endtime="20201112 09:45:36.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022196139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042291653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:36.475" endtime="20201112 09:45:36.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:36.483" endtime="20201112 09:45:36.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.174" endtime="20201112 09:45:36.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.173" endtime="20201112 09:45:36.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:36.509" level="INFO">${RESULT} = {'diff': [0, 0.020095514, 0.019999986000000004, 0.020002236, 0.020002347000000004, 0.020002278, 0.020002332999999983, 0.020002223000000013, 0.020002360999999996, 0.020002304999999998, 0.02000229200000...</msg>
<status status="PASS" starttime="20201112 09:45:36.486" endtime="20201112 09:45:36.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.513" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:36.512" endtime="20201112 09:45:36.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.515" level="INFO">VALUE: 0.022196139</msg>
<status status="PASS" starttime="20201112 09:45:36.514" endtime="20201112 09:45:36.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.510" endtime="20201112 09:45:36.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.521" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:36.520" endtime="20201112 09:45:36.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.523" level="INFO">VALUE: [0.042291653, 0.062291639, 0.082293875, 0.102296222, 0.1222985, 0.142300833, 0.162303056, 0.182305417, 0.202307722, 0.222310014, 0.242312278, 0.262314625, 0.282316861, 0.302319222, 0.322321472, 0.342323819, 0.362326083, 0.382328431, 0.402330667, 0.422333042, 0.442335264, 0.462337639, 0.482339875, 0.50234225, 0.522344472, 0.542346833, 0.562349069, 0.582351444, 0.602353681, 0.622356042, 0.642358292, 0.662360639, 0.682362889, 0.70236525, 0.722367486, 0.742369847, 0.762372083, 0.782374444, 0.802376681, 0.822379069, 0.842381292, 0.862383667, 0.882385903, 0.902388264, 0.9223905, 0.942392875, 0.962395125, 0.982397458, 1.002399722, 1.022402083, 1.042404319, 1.062406667, 1.082408903, 1.102411264, 1.122413514, 1.142415875, 1.162418111, 1.182420472, 1.202422764, 1.222425083, 1.242427333, 1.262429694, 1.282431917, 1.302434292, 1.322436528, 1.342438903, 1.362441139, 1.382443486, 1.402445722, 1.422448097, 1.442450347, 1.462452694, 1.482454931, 1.502457292, 1.522459528, 1.542461917, 1.562464153, 1.5824665, 1.602468736, 1.622471139, 1.642473347, 1.662475708, 1.682477944, 1.702480319, 1.722482556, 1.742484958, 1.762487153, 1.782489514, 1.802491778, 1.822494125, 1.842496375, 1.862498736, 1.882500958, 1.902503347, 1.922505583, 1.942507931, 1.962510167, 1.982512542, 2.002514778, 2.022517181] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:36.522" endtime="20201112 09:45:36.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.517" endtime="20201112 09:45:36.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:36.527" endtime="20201112 09:45:36.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:36.530" endtime="20201112 09:45:36.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.528" endtime="20201112 09:45:36.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.525" endtime="20201112 09:45:36.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.010" endtime="20201112 09:45:36.551"></status>
</kw>
<msg timestamp="20201112 09:45:36.551" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:36.561" endtime="20201112 09:45:40.684"></status>
</kw>
<msg timestamp="20201112 09:45:40.685" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 36532919, 'wakeups': [36542965, 36552964, 36562964, 36572964, 36582964...</msg>
<status status="PASS" starttime="20201112 09:45:36.559" endtime="20201112 09:45:40.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.691" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 36532919, 'wakeups': [36542965, 36552964, 36562964, 36572964, 36582964...</msg>
<status status="PASS" starttime="20201112 09:45:40.687" endtime="20201112 09:45:40.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:40.694" endtime="20201112 09:45:40.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.555" endtime="20201112 09:45:40.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.553" endtime="20201112 09:45:40.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:40.701" level="INFO">${RESULT} = {'wakeups': [36542965, 36552964, 36562964, 36572964, 36582964, 36592964, 36602964, 36612964, 36622964, 36632964, 36642964, 36652964, 36662964, 36672964, 36682964, 36692964, 36702964, 36712964, 3672296...</msg>
<status status="PASS" starttime="20201112 09:45:40.699" endtime="20201112 09:45:40.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.706" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:40.705" endtime="20201112 09:45:40.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.708" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:40.707" endtime="20201112 09:45:40.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.702" endtime="20201112 09:45:40.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.713" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:40.712" endtime="20201112 09:45:40.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.715" level="INFO">VALUE: 36532919</msg>
<status status="PASS" starttime="20201112 09:45:40.714" endtime="20201112 09:45:40.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.709" endtime="20201112 09:45:40.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.720" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:40.718" endtime="20201112 09:45:40.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.722" level="INFO">VALUE: [36542965, 36552964, 36562964, 36572964, 36582964, 36592964, 36602964, 36612964, 36622964, 36632964, 36642964, 36652964, 36662964, 36672964, 36682964, 36692964, 36702964, 36712964, 36722964, 36732964, 36742964, 36752964, 36762964, 36772964, 36782964, 36792964, 36802964, 36812964, 36822964, 36832964, 36842964, 36852964, 36862964, 36872964, 36882964, 36892964, 36902964, 36912964, 36922964, 36932964, 36942964, 36952964, 36962964, 36972964, 36982964, 36992964, 37002964, 37012964, 37022964, 37032964, 37042964, 37052964, 37062964, 37072964, 37082964, 37092964, 37102964, 37112964, 37122964, 37132964, 37142964, 37152964, 37162964, 37172964, 37182964, 37192964, 37202964, 37212964, 37222964, 37232964, 37242964, 37252964, 37262964, 37272964, 37282964, 37292964, 37302964, 37312964, 37322964, 37332964, 37342964, 37352964, 37362964, 37372964, 37382964, 37392964, 37402964, 37412964, 37422964, 37432964, 37442964, 37452964, 37462964, 37472964, 37482964, 37492964, 37502964, 37512964, 37522964, 37532964]</msg>
<status status="PASS" starttime="20201112 09:45:40.721" endtime="20201112 09:45:40.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.716" endtime="20201112 09:45:40.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:40.730" endtime="20201112 09:45:41.022"></status>
</kw>
<msg timestamp="20201112 09:45:41.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020856917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040951833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:40.728" endtime="20201112 09:45:41.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020856917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040951833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:41.026" endtime="20201112 09:45:41.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:41.033" endtime="20201112 09:45:41.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.725" endtime="20201112 09:45:41.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.723" endtime="20201112 09:45:41.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:41.060" level="INFO">${RESULT} = {'diff': [0, 0.020094916, 0.020001945, 0.020002222, 0.020002375000000003, 0.020002222, 0.020002347000000004, 0.020002237000000006, 0.02000237499999999, 0.020002221999999986, 0.020002403000000002, 0.02...</msg>
<status status="PASS" starttime="20201112 09:45:41.036" endtime="20201112 09:45:41.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.065" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:41.064" endtime="20201112 09:45:41.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.067" level="INFO">VALUE: 0.020856917</msg>
<status status="PASS" starttime="20201112 09:45:41.066" endtime="20201112 09:45:41.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.061" endtime="20201112 09:45:41.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.072" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:41.071" endtime="20201112 09:45:41.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.074" level="INFO">VALUE: [0.040951833, 0.060953778, 0.080956, 0.100958375, 0.120960597, 0.140962944, 0.160965181, 0.180967556, 0.200969778, 0.220972181, 0.240974361, 0.260976722, 0.280978958, 0.300981361, 0.320983556, 0.340985931, 0.360988167, 0.380990556, 0.400992736, 0.420995153, 0.440997333, 0.460999694, 0.481001931, 0.501004292, 0.521006528, 0.541008889, 0.561011194, 0.5810135, 0.601015722, 0.621018097, 0.641020306, 0.661022667, 0.681024903, 0.701027264, 0.7210295, 0.741031861, 0.761034125, 0.781036458, 0.801038694, 0.821041056, 0.841043306, 0.861045681, 0.881047875, 0.90105025, 0.921052472, 0.941054833, 0.961057069, 0.981059431, 1.001061708, 1.021064083, 1.041066264, 1.061068625, 1.081070861, 1.10107325, 1.121075444, 1.141077806, 1.161080111, 1.181082403, 1.201084639, 1.221087, 1.241089292, 1.261091597, 1.281093833, 1.301096194, 1.321098444, 1.341100819, 1.361103028, 1.381105389, 1.401107611, 1.421109972, 1.441112208, 1.461114569, 1.481116819, 1.501119167, 1.521121403, 1.541123764, 1.561126028, 1.581128361, 1.601130597, 1.621133, 1.641135222, 1.661137556, 1.681139792, 1.701142153, 1.721144375, 1.74114675, 1.761148972, 1.781151333, 1.801153583, 1.821155944, 1.841158181, 1.861160542, 1.881162764, 1.901165125, 1.921167361, 1.941169736, 1.961171986, 1.981174319, 2.001176556, 2.021178972] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:41.073" endtime="20201112 09:45:41.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.068" endtime="20201112 09:45:41.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:41.077" endtime="20201112 09:45:41.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:41.081" endtime="20201112 09:45:41.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.080" endtime="20201112 09:45:41.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.076" endtime="20201112 09:45:41.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.552" endtime="20201112 09:45:41.102"></status>
</kw>
<msg timestamp="20201112 09:45:41.102" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:41.110" endtime="20201112 09:45:45.218"></status>
</kw>
<msg timestamp="20201112 09:45:45.219" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38807802, 'wakeups': [38817848, 38827847, 38837847, 38847847, 38857847...</msg>
<status status="PASS" starttime="20201112 09:45:41.109" endtime="20201112 09:45:45.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:45.222" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38807802, 'wakeups': [38817848, 38827847, 38837847, 38847847, 38857847...</msg>
<status status="PASS" starttime="20201112 09:45:45.220" endtime="20201112 09:45:45.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:45.223" endtime="20201112 09:45:45.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.106" endtime="20201112 09:45:45.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.104" endtime="20201112 09:45:45.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:45.229" level="INFO">${RESULT} = {'wakeups': [38817848, 38827847, 38837847, 38847847, 38857847, 38867847, 38877847, 38887847, 38897847, 38907847, 38917847, 38927847, 38937847, 38947847, 38957847, 38967847, 38977847, 38987847, 3899784...</msg>
<status status="PASS" starttime="20201112 09:45:45.227" endtime="20201112 09:45:45.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:45.233" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:45.232" endtime="20201112 09:45:45.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:45.235" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:45.234" endtime="20201112 09:45:45.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.230" endtime="20201112 09:45:45.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:45.240" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:45.239" endtime="20201112 09:45:45.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:45.243" level="INFO">VALUE: 38807802</msg>
<status status="PASS" starttime="20201112 09:45:45.242" endtime="20201112 09:45:45.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.236" endtime="20201112 09:45:45.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:45.248" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:45.247" endtime="20201112 09:45:45.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:45.251" level="INFO">VALUE: [38817848, 38827847, 38837847, 38847847, 38857847, 38867847, 38877847, 38887847, 38897847, 38907847, 38917847, 38927847, 38937847, 38947847, 38957847, 38967847, 38977847, 38987847, 38997847, 39007847, 39017847, 39027847, 39037847, 39047847, 39057847, 39067847, 39077847, 39087847, 39097847, 39107847, 39117847, 39127847, 39137847, 39147847, 39157847, 39167847, 39177847, 39187847, 39197847, 39207847, 39217847, 39227847, 39237847, 39247847, 39257847, 39267847, 39277847, 39287847, 39297847, 39307847, 39317847, 39327847, 39337847, 39347847, 39357847, 39367847, 39377847, 39387847, 39397847, 39407847, 39417847, 39427847, 39437847, 39447847, 39457847, 39467847, 39477847, 39487847, 39497847, 39507847, 39517847, 39527847, 39537847, 39547847, 39557847, 39567847, 39577847, 39587847, 39597847, 39607847, 39617847, 39627847, 39637847, 39647847, 39657847, 39667847, 39677847, 39687847, 39697847, 39707847, 39717847, 39727847, 39737847, 39747847, 39757847, 39767847, 39777847, 39787847, 39797847, 39807847]</msg>
<status status="PASS" starttime="20201112 09:45:45.250" endtime="20201112 09:45:45.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.245" endtime="20201112 09:45:45.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:45.258" endtime="20201112 09:45:45.548"></status>
</kw>
<msg timestamp="20201112 09:45:45.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019456653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039551528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:45.256" endtime="20201112 09:45:45.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:45.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019456653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039551528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:45.552" endtime="20201112 09:45:45.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:45.560" endtime="20201112 09:45:45.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.254" endtime="20201112 09:45:45.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.252" endtime="20201112 09:45:45.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:45.587" level="INFO">${RESULT} = {'diff': [0, 0.020094875, 0.020002014, 0.020002194, 0.020002360999999996, 0.020002236000000007, 0.020002402999999988, 0.020002167000000015, 0.020002347000000004, 0.02000223599999998, 0.020002403000000...</msg>
<status status="PASS" starttime="20201112 09:45:45.563" endtime="20201112 09:45:45.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:45.592" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:45.590" endtime="20201112 09:45:45.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:45.594" level="INFO">VALUE: 0.019456653</msg>
<status status="PASS" starttime="20201112 09:45:45.593" endtime="20201112 09:45:45.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.588" endtime="20201112 09:45:45.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:45.600" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:45.599" endtime="20201112 09:45:45.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:45.603" level="INFO">VALUE: [0.039551528, 0.059553542, 0.079555736, 0.099558097, 0.119560333, 0.139562736, 0.159564903, 0.17956725, 0.199569486, 0.219571889, 0.239574069, 0.259576431, 0.279578667, 0.299581014, 0.319583236, 0.339585611, 0.359587903, 0.379590181, 0.399592431, 0.419594778, 0.439597, 0.459599361, 0.479601611, 0.499603972, 0.519606194, 0.539608528, 0.559610778, 0.579613125, 0.599615347, 0.619617708, 0.639619931, 0.659622306, 0.679624542, 0.699626889, 0.719629111, 0.739631472, 0.759633694, 0.779636056, 0.799638292, 0.819640653, 0.839642875, 0.859645236, 0.879647472, 0.899649861, 0.919652056, 0.939654431, 0.959656625, 0.979659028, 0.999661236, 1.019663583, 1.039665819, 1.059668236, 1.079670389, 1.09967275, 1.119674986, 1.139677347, 1.159679569, 1.179681931, 1.199684167, 1.219686528, 1.239688736, 1.259691097, 1.279693333, 1.299695681, 1.319697917, 1.339700278, 1.359702514, 1.379704861, 1.399707125, 1.419709444, 1.439711681, 1.459714042, 1.479716319, 1.499718625, 1.519720889, 1.539723208, 1.559725458, 1.579727792, 1.599730042, 1.619732389, 1.639734611, 1.659737056, 1.679739194, 1.699741556, 1.719743792, 1.739746139, 1.759748375, 1.779750736, 1.799752958, 1.819755333, 1.839757556, 1.859759903, 1.879762139, 1.8997645, 1.919766736, 1.939769097, 1.959771361, 1.979773667, 1.999775917, 2.019778264] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:45.602" endtime="20201112 09:45:45.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.595" endtime="20201112 09:45:45.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:45.606" endtime="20201112 09:45:45.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:45.610" endtime="20201112 09:45:45.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.608" endtime="20201112 09:45:45.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.604" endtime="20201112 09:45:45.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.103" endtime="20201112 09:45:45.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.008" endtime="20201112 09:45:45.631"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.007" endtime="20201112 09:45:45.631"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:45.633" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:45.641" endtime="20201112 09:45:49.746"></status>
</kw>
<msg timestamp="20201112 09:45:49.746" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 41073303, 'wakeups': [41083358, 41093359, 41103360, 41113360, 41123360...</msg>
<status status="PASS" starttime="20201112 09:45:45.640" endtime="20201112 09:45:49.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.749" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 41073303, 'wakeups': [41083358, 41093359, 41103360, 41113360, 41123360...</msg>
<status status="PASS" starttime="20201112 09:45:49.747" endtime="20201112 09:45:49.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:49.750" endtime="20201112 09:45:49.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.637" endtime="20201112 09:45:49.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.635" endtime="20201112 09:45:49.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:49.755" level="INFO">${RESULT} = {'wakeups': [41083358, 41093359, 41103360, 41113360, 41123360, 41133360, 41143360, 41153360, 41163360, 41173360, 41183360, 41193360, 41203360, 41213360, 41223360, 41233360, 41243360, 41253360, 4126336...</msg>
<status status="PASS" starttime="20201112 09:45:49.753" endtime="20201112 09:45:49.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.760" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:49.759" endtime="20201112 09:45:49.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.762" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:49.761" endtime="20201112 09:45:49.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.757" endtime="20201112 09:45:49.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.767" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:49.766" endtime="20201112 09:45:49.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.769" level="INFO">VALUE: 41073303</msg>
<status status="PASS" starttime="20201112 09:45:49.768" endtime="20201112 09:45:49.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.764" endtime="20201112 09:45:49.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.774" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:49.773" endtime="20201112 09:45:49.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:49.776" level="INFO">VALUE: [41083358, 41093359, 41103360, 41113360, 41123360, 41133360, 41143360, 41153360, 41163360, 41173360, 41183360, 41193360, 41203360, 41213360, 41223360, 41233360, 41243360, 41253360, 41263360, 41273360, 41283360, 41293360, 41303360, 41313360, 41323360, 41333360, 41343360, 41353360, 41363360, 41373360, 41383360, 41393360, 41403360, 41413360, 41423360, 41433360, 41443360, 41453360, 41463360, 41473360, 41483360, 41493360, 41503360, 41513360, 41523360, 41533360, 41543360, 41553360, 41563360, 41573360, 41583360, 41593360, 41603360, 41613360, 41623360, 41633360, 41643360, 41653360, 41663360, 41673360, 41683360, 41693360, 41703360, 41713360, 41723360, 41733360, 41743360, 41753360, 41763360, 41773360, 41783360, 41793360, 41803360, 41813360, 41823360, 41833360, 41843360, 41853360, 41863360, 41873360, 41883360, 41893360, 41903360, 41913360, 41923360, 41933360, 41943360, 41953360, 41963360, 41973360, 41983360, 41993360, 42003360, 42013360, 42023360, 42033360, 42043360, 42053360, 42063360, 42073360]</msg>
<status status="PASS" starttime="20201112 09:45:49.775" endtime="20201112 09:45:49.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.771" endtime="20201112 09:45:49.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:49.785" endtime="20201112 09:45:50.077"></status>
</kw>
<msg timestamp="20201112 09:45:50.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022241764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042355361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:49.782" endtime="20201112 09:45:50.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:50.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022241764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042355361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:50.081" endtime="20201112 09:45:50.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:50.088" endtime="20201112 09:45:50.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.780" endtime="20201112 09:45:50.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:49.778" endtime="20201112 09:45:50.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:50.114" level="INFO">${RESULT} = {'diff': [0, 0.020113597, 0.020004, 0.02000425, 0.020002375000000003, 0.02000225, 0.020002360999999982, 0.02000226400000002, 0.020002347000000004, 0.02000225, 0.02000237499999999, 0.02000225, 0.020002...</msg>
<status status="PASS" starttime="20201112 09:45:50.092" endtime="20201112 09:45:50.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:50.119" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:50.118" endtime="20201112 09:45:50.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:50.121" level="INFO">VALUE: 0.022241764</msg>
<status status="PASS" starttime="20201112 09:45:50.120" endtime="20201112 09:45:50.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.115" endtime="20201112 09:45:50.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:50.126" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:50.125" endtime="20201112 09:45:50.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:50.129" level="INFO">VALUE: [0.042355361, 0.062359361, 0.082363611, 0.102365986, 0.122368236, 0.142370597, 0.162372861, 0.182375208, 0.202377458, 0.222379833, 0.242382083, 0.262384472, 0.282386708, 0.302389111, 0.322391333, 0.342393708, 0.362395972, 0.382398333, 0.402400569, 0.422402944, 0.442405236, 0.462407569, 0.482409819, 0.502412208, 0.522414458, 0.542416889, 0.562419083, 0.582421458, 0.602423694, 0.622426069, 0.642428333, 0.662430694, 0.682432944, 0.702435333, 0.722437556, 0.742439931, 0.762442181, 0.782444569, 0.802446819, 0.822449181, 0.842451431, 0.862453806, 0.882456097, 0.902458431, 0.922460681, 0.942463069, 0.962465319, 0.982467681, 1.002469931, 1.022472306, 1.042474556, 1.062476931, 1.082479167, 1.102481556, 1.122483792, 1.142486181, 1.162488417, 1.182490792, 1.202493056, 1.222495444, 1.242497667, 1.262500042, 1.282502347, 1.302504667, 1.322506931, 1.342509292, 1.362511542, 1.382513986, 1.402516167, 1.422518542, 1.442520792, 1.462523208, 1.482525403, 1.502527778, 1.522530028, 1.542532444, 1.562534667, 1.582537028, 1.602539292, 1.622541653, 1.642543903, 1.662546278, 1.682548528, 1.702550903, 1.722553153, 1.742555528, 1.762557778, 1.782560153, 1.802562403, 1.822564778, 1.842567042, 1.862569431, 1.882571639, 1.902574056, 1.922576278, 1.942578667, 1.962580917, 1.982583278, 2.002585528, 2.022587889] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:50.128" endtime="20201112 09:45:50.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.122" endtime="20201112 09:45:50.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:50.132" endtime="20201112 09:45:50.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:50.135" endtime="20201112 09:45:50.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.134" endtime="20201112 09:45:50.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.130" endtime="20201112 09:45:50.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.634" endtime="20201112 09:45:50.156"></status>
</kw>
<msg timestamp="20201112 09:45:50.156" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:50.165" endtime="20201112 09:45:54.279"></status>
</kw>
<msg timestamp="20201112 09:45:54.280" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 43335056, 'wakeups': [43345111, 43355112, 43365113, 43375113, 43385113...</msg>
<status status="PASS" starttime="20201112 09:45:50.164" endtime="20201112 09:45:54.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.283" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 43335056, 'wakeups': [43345111, 43355112, 43365113, 43375113, 43385113...</msg>
<status status="PASS" starttime="20201112 09:45:54.281" endtime="20201112 09:45:54.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:54.284" endtime="20201112 09:45:54.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.160" endtime="20201112 09:45:54.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.158" endtime="20201112 09:45:54.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:54.289" level="INFO">${RESULT} = {'wakeups': [43345111, 43355112, 43365113, 43375113, 43385113, 43395113, 43405113, 43415113, 43425113, 43435113, 43445113, 43455113, 43465113, 43475113, 43485113, 43495113, 43505113, 43515113, 4352511...</msg>
<status status="PASS" starttime="20201112 09:45:54.287" endtime="20201112 09:45:54.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.293" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:54.292" endtime="20201112 09:45:54.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.295" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:54.294" endtime="20201112 09:45:54.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.290" endtime="20201112 09:45:54.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.300" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:54.299" endtime="20201112 09:45:54.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.302" level="INFO">VALUE: 43335056</msg>
<status status="PASS" starttime="20201112 09:45:54.301" endtime="20201112 09:45:54.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.297" endtime="20201112 09:45:54.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.307" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:54.306" endtime="20201112 09:45:54.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.310" level="INFO">VALUE: [43345111, 43355112, 43365113, 43375113, 43385113, 43395113, 43405113, 43415113, 43425113, 43435113, 43445113, 43455113, 43465113, 43475113, 43485113, 43495113, 43505113, 43515113, 43525113, 43535113, 43545113, 43555113, 43565113, 43575113, 43585113, 43595113, 43605113, 43615113, 43625113, 43635113, 43645113, 43655113, 43665113, 43675113, 43685113, 43695113, 43705113, 43715113, 43725113, 43735113, 43745113, 43755113, 43765113, 43775113, 43785113, 43795113, 43805113, 43815113, 43825113, 43835113, 43845113, 43855113, 43865113, 43875113, 43885113, 43895113, 43905113, 43915113, 43925113, 43935113, 43945113, 43955113, 43965113, 43975113, 43985113, 43995113, 44005113, 44015113, 44025113, 44035113, 44045113, 44055113, 44065113, 44075113, 44085113, 44095113, 44105113, 44115113, 44125113, 44135113, 44145113, 44155113, 44165113, 44175113, 44185113, 44195113, 44205113, 44215113, 44225113, 44235113, 44245113, 44255113, 44265113, 44275113, 44285113, 44295113, 44305113, 44315113, 44325113, 44335113]</msg>
<status status="PASS" starttime="20201112 09:45:54.308" endtime="20201112 09:45:54.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.304" endtime="20201112 09:45:54.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:54.317" endtime="20201112 09:45:54.608"></status>
</kw>
<msg timestamp="20201112 09:45:54.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020188028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040301653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:54.315" endtime="20201112 09:45:54.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020188028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040301653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:54.612" endtime="20201112 09:45:54.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:54.619" endtime="20201112 09:45:54.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.313" endtime="20201112 09:45:54.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.311" endtime="20201112 09:45:54.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:54.646" level="INFO">${RESULT} = {'diff': [0, 0.020113625, 0.020004, 0.020004235999999995, 0.020002375000000003, 0.02000225, 0.020002403000000016, 0.020002221999999986, 0.020002347000000004, 0.020002263999999992, 0.020002360999999996...</msg>
<status status="PASS" starttime="20201112 09:45:54.622" endtime="20201112 09:45:54.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.650" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:54.649" endtime="20201112 09:45:54.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.652" level="INFO">VALUE: 0.020188028</msg>
<status status="PASS" starttime="20201112 09:45:54.651" endtime="20201112 09:45:54.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.647" endtime="20201112 09:45:54.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.657" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:54.656" endtime="20201112 09:45:54.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:54.660" level="INFO">VALUE: [0.040301653, 0.060305653, 0.080309889, 0.100312264, 0.120314514, 0.140316917, 0.160319139, 0.180321486, 0.20032375, 0.220326111, 0.240328347, 0.260330722, 0.280333014, 0.300335347, 0.320337583, 0.340339958, 0.360342194, 0.380344583, 0.400346819, 0.420349181, 0.440351431, 0.460353819, 0.480356056, 0.500358431, 0.520360667, 0.540363042, 0.560365278, 0.580367653, 0.600369903, 0.620372264, 0.640374528, 0.660376889, 0.680379125, 0.700381542, 0.72038375, 0.740386125, 0.760388361, 0.780390736, 0.800393, 0.820395361, 0.840397597, 0.860399972, 0.880402236, 0.900404625, 0.920406847, 0.940409222, 0.960411458, 0.980413819, 1.000416069, 1.020418444, 1.040420694, 1.060423056, 1.080425306, 1.100427681, 1.120429917, 1.140432292, 1.160434542, 1.180436917, 1.200439153, 1.220441528, 1.240443819, 1.260446153, 1.280448403, 1.300450819, 1.320453, 1.340455375, 1.360457653, 1.380460014, 1.400462264, 1.420464625, 1.440466861, 1.460469222, 1.480471486, 1.500473847, 1.520476083, 1.540478458, 1.560480722, 1.580483083, 1.600485319, 1.620487708, 1.640489944, 1.660492319, 1.680494556, 1.700496931, 1.720499181, 1.740501542, 1.760503792, 1.780506167, 1.800508417, 1.820510778, 1.840513028, 1.860515403, 1.880517653, 1.900520014, 1.920522264, 1.940524653, 1.960526875, 1.98052925, 2.0005315, 2.020533875] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:54.659" endtime="20201112 09:45:54.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.654" endtime="20201112 09:45:54.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:54.663" endtime="20201112 09:45:54.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:54.666" endtime="20201112 09:45:54.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.665" endtime="20201112 09:45:54.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.661" endtime="20201112 09:45:54.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:50.157" endtime="20201112 09:45:54.687"></status>
</kw>
<msg timestamp="20201112 09:45:54.687" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:54.695" endtime="20201112 09:45:58.816"></status>
</kw>
<msg timestamp="20201112 09:45:58.818" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 45600059, 'wakeups': [45610114, 45620115, 45630116, 45640116, 45650116...</msg>
<status status="PASS" starttime="20201112 09:45:54.694" endtime="20201112 09:45:58.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.823" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 45600059, 'wakeups': [45610114, 45620115, 45630116, 45640116, 45650116...</msg>
<status status="PASS" starttime="20201112 09:45:58.820" endtime="20201112 09:45:58.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:58.826" endtime="20201112 09:45:58.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.691" endtime="20201112 09:45:58.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.689" endtime="20201112 09:45:58.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:58.835" level="INFO">${RESULT} = {'wakeups': [45610114, 45620115, 45630116, 45640116, 45650116, 45660116, 45670116, 45680116, 45690116, 45700116, 45710116, 45720116, 45730116, 45740116, 45750116, 45760116, 45770116, 45780116, 4579011...</msg>
<status status="PASS" starttime="20201112 09:45:58.833" endtime="20201112 09:45:58.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.839" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:58.838" endtime="20201112 09:45:58.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.841" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:58.840" endtime="20201112 09:45:58.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.835" endtime="20201112 09:45:58.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.847" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:58.846" endtime="20201112 09:45:58.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.849" level="INFO">VALUE: 45600059</msg>
<status status="PASS" starttime="20201112 09:45:58.848" endtime="20201112 09:45:58.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.843" endtime="20201112 09:45:58.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.854" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:58.853" endtime="20201112 09:45:58.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:58.856" level="INFO">VALUE: [45610114, 45620115, 45630116, 45640116, 45650116, 45660116, 45670116, 45680116, 45690116, 45700116, 45710116, 45720116, 45730116, 45740116, 45750116, 45760116, 45770116, 45780116, 45790116, 45800116, 45810116, 45820116, 45830116, 45840116, 45850116, 45860116, 45870116, 45880116, 45890116, 45900116, 45910116, 45920116, 45930116, 45940116, 45950116, 45960116, 45970116, 45980116, 45990116, 46000116, 46010116, 46020116, 46030116, 46040116, 46050116, 46060116, 46070116, 46080116, 46090116, 46100116, 46110116, 46120116, 46130116, 46140116, 46150116, 46160116, 46170116, 46180116, 46190116, 46200116, 46210116, 46220116, 46230116, 46240116, 46250116, 46260116, 46270116, 46280116, 46290116, 46300116, 46310116, 46320116, 46330116, 46340116, 46350116, 46360116, 46370116, 46380116, 46390116, 46400116, 46410116, 46420116, 46430116, 46440116, 46450116, 46460116, 46470116, 46480116, 46490116, 46500116, 46510116, 46520116, 46530116, 46540116, 46550116, 46560116, 46570116, 46580116, 46590116, 46600116]</msg>
<status status="PASS" starttime="20201112 09:45:58.855" endtime="20201112 09:45:58.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.850" endtime="20201112 09:45:58.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:58.863" endtime="20201112 09:45:59.154"></status>
</kw>
<msg timestamp="20201112 09:45:59.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019568167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039681792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:58.862" endtime="20201112 09:45:59.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019568167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039681792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:59.159" endtime="20201112 09:45:59.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:59.166" endtime="20201112 09:45:59.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.859" endtime="20201112 09:45:59.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:58.857" endtime="20201112 09:45:59.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:59.193" level="INFO">${RESULT} = {'diff': [0, 0.020113625, 0.020003972000000002, 0.020004263999999994, 0.020002332999999997, 0.020002250000000013, 0.020002360999999996, 0.020002236000000007, 0.02000238899999998, 0.020002236000000007,...</msg>
<status status="PASS" starttime="20201112 09:45:59.170" endtime="20201112 09:45:59.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.199" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:59.197" endtime="20201112 09:45:59.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.201" level="INFO">VALUE: 0.019568167</msg>
<status status="PASS" starttime="20201112 09:45:59.200" endtime="20201112 09:45:59.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.194" endtime="20201112 09:45:59.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.206" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:59.205" endtime="20201112 09:45:59.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:59.208" level="INFO">VALUE: [0.039681792, 0.059685764, 0.079690028, 0.099692361, 0.119694611, 0.139696972, 0.159699208, 0.179701597, 0.199703833, 0.219706194, 0.239708444, 0.259710792, 0.279713042, 0.299715403, 0.319717639, 0.339720042, 0.359722264, 0.379724639, 0.399726861, 0.419729278, 0.439731472, 0.459733833, 0.479736083, 0.499738444, 0.51974075, 0.539743056, 0.559745292, 0.579747667, 0.599749917, 0.619752278, 0.639754528, 0.659756903, 0.679759125, 0.699761542, 0.719763736, 0.739766097, 0.759768417, 0.779770722, 0.799772972, 0.819775319, 0.839777569, 0.859779944, 0.879782181, 0.899784556, 0.919786778, 0.939789153, 0.959791403, 0.979793764, 0.999796028, 1.019798389, 1.039800625, 1.059803042, 1.079805236, 1.099807597, 1.119809847, 1.139812194, 1.159814472, 1.179816806, 1.199819056, 1.219821431, 1.239823653, 1.259826042, 1.279828292, 1.299830639, 1.319832889, 1.339835292, 1.3598375, 1.379839861, 1.399842097, 1.419844472, 1.439846722, 1.459849083, 1.479851319, 1.499853694, 1.519855944, 1.539858292, 1.559860542, 1.579862903, 1.599865167, 1.619867514, 1.639869778, 1.659872139, 1.679874375, 1.699876736, 1.719878972, 1.739881347, 1.759883597, 1.779885972, 1.799888208, 1.819890569, 1.839892819, 1.859895181, 1.879897444, 1.899899792, 1.919902028, 1.939904403, 1.959906639, 1.979909014, 1.999911264, 2.019913639] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:59.207" endtime="20201112 09:45:59.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.202" endtime="20201112 09:45:59.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:59.211" endtime="20201112 09:45:59.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:59.215" endtime="20201112 09:45:59.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.213" endtime="20201112 09:45:59.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.210" endtime="20201112 09:45:59.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:54.688" endtime="20201112 09:45:59.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.632" endtime="20201112 09:45:59.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:45.631" endtime="20201112 09:45:59.236"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:59.238" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:59.246" endtime="20201112 09:46:03.354"></status>
</kw>
<msg timestamp="20201112 09:46:03.354" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 47875557, 'wakeups': [47885626, 47895626, 47905626, 47915626, 47925626...</msg>
<status status="PASS" starttime="20201112 09:45:59.245" endtime="20201112 09:46:03.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.357" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 47875557, 'wakeups': [47885626, 47895626, 47905626, 47915626, 47925626...</msg>
<status status="PASS" starttime="20201112 09:46:03.355" endtime="20201112 09:46:03.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:03.359" endtime="20201112 09:46:03.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.242" endtime="20201112 09:46:03.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.240" endtime="20201112 09:46:03.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:03.364" level="INFO">${RESULT} = {'wakeups': [47885626, 47895626, 47905626, 47915626, 47925626, 47935626, 47945626, 47955626, 47965626, 47975626, 47985626, 47995626, 48005626, 48015626, 48025626, 48035626, 48045626, 48055626, 4806562...</msg>
<status status="PASS" starttime="20201112 09:46:03.362" endtime="20201112 09:46:03.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.368" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:03.367" endtime="20201112 09:46:03.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.370" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:03.369" endtime="20201112 09:46:03.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:03.365" endtime="20201112 09:46:03.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.375" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:03.374" endtime="20201112 09:46:03.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.377" level="INFO">VALUE: 47875557</msg>
<status status="PASS" starttime="20201112 09:46:03.376" endtime="20201112 09:46:03.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:03.372" endtime="20201112 09:46:03.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.382" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:03.381" endtime="20201112 09:46:03.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.384" level="INFO">VALUE: [47885626, 47895626, 47905626, 47915626, 47925626, 47935626, 47945626, 47955626, 47965626, 47975626, 47985626, 47995626, 48005626, 48015626, 48025626, 48035626, 48045626, 48055626, 48065626, 48075626, 48085626, 48095626, 48105626, 48115626, 48125626, 48135626, 48145626, 48155626, 48165626, 48175626, 48185626, 48195626, 48205626, 48215626, 48225626, 48235626, 48245626, 48255626, 48265626, 48275626, 48285626, 48295626, 48305626, 48315626, 48325626, 48335626, 48345626, 48355626, 48365626, 48375626, 48385626, 48395626, 48405626, 48415626, 48425626, 48435626, 48445626, 48455626, 48465626, 48475626, 48485626, 48495626, 48505626, 48515626, 48525626, 48535626, 48545626, 48555626, 48565626, 48575626, 48585626, 48595626, 48605626, 48615626, 48625626, 48635626, 48645626, 48655626, 48665626, 48675626, 48685626, 48695626, 48705626, 48715626, 48725626, 48735626, 48745626, 48755626, 48765626, 48775626, 48785626, 48795626, 48805626, 48815626, 48825626, 48835626, 48845626, 48855626, 48865626, 48875626]</msg>
<status status="PASS" starttime="20201112 09:46:03.383" endtime="20201112 09:46:03.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:03.379" endtime="20201112 09:46:03.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:03.393" endtime="20201112 09:46:03.684"></status>
</kw>
<msg timestamp="20201112 09:46:03.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021963889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042104361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:03.391" endtime="20201112 09:46:03.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021963889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042104361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:03.688" endtime="20201112 09:46:03.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:03.695" endtime="20201112 09:46:03.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:03.389" endtime="20201112 09:46:03.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:03.386" endtime="20201112 09:46:03.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:03.722" level="INFO">${RESULT} = {'diff': [0, 0.020140472, 0.020001695, 0.020002236, 0.020002375000000003, 0.020002235999999993, 0.020002360999999996, 0.020002222000000014, 0.020002360999999996, 0.02000225, 0.020002360999999996, 0.02...</msg>
<status status="PASS" starttime="20201112 09:46:03.699" endtime="20201112 09:46:03.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.727" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:03.726" endtime="20201112 09:46:03.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.729" level="INFO">VALUE: 0.021963889</msg>
<status status="PASS" starttime="20201112 09:46:03.728" endtime="20201112 09:46:03.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:03.723" endtime="20201112 09:46:03.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.734" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:03.733" endtime="20201112 09:46:03.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:03.736" level="INFO">VALUE: [0.042104361, 0.062106056, 0.082108292, 0.102110667, 0.122112903, 0.142115264, 0.162117486, 0.182119847, 0.202122097, 0.222124458, 0.242126764, 0.262129042, 0.282131292, 0.302133667, 0.322135889, 0.34213825, 0.3621405, 0.382142861, 0.402145097, 0.422147458, 0.442149694, 0.462152069, 0.482154306, 0.502156708, 0.522158917, 0.542161319, 0.562163542, 0.582165889, 0.602168125, 0.622170486, 0.642172722, 0.662175097, 0.682177319, 0.702179694, 0.722181958, 0.742184292, 0.762186528, 0.782188903, 0.802191125, 0.8221935, 0.84219575, 0.862198097, 0.882200333, 0.902202708, 0.922204944, 0.942207306, 0.962209542, 0.982211917, 1.002214222, 1.022216514, 1.04221875, 1.062221139, 1.082223417, 1.102225736, 1.122227958, 1.142230347, 1.162232569, 1.182234931, 1.202237167, 1.222239556, 1.242241778, 1.262244139, 1.282246375, 1.30224875, 1.322250986, 1.342253375, 1.362255583, 1.382257958, 1.402260208, 1.422262583, 1.442264792, 1.462267181, 1.482269444, 1.502271778, 1.522274, 1.542276375, 1.562278667, 1.582280986, 1.602283208, 1.622285583, 1.642287819, 1.662290181, 1.682292417, 1.702294792, 1.722297028, 1.742299389, 1.762301639, 1.782304, 1.802306236, 1.822308597, 1.842310875, 1.862313222, 1.882315458, 1.902317819, 1.922320083, 1.942322431, 1.962324667, 1.982327028, 2.002329347, 2.022331625] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:03.735" endtime="20201112 09:46:03.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:03.730" endtime="20201112 09:46:03.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:03.740" endtime="20201112 09:46:03.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:03.743" endtime="20201112 09:46:03.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:03.742" endtime="20201112 09:46:03.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:03.738" endtime="20201112 09:46:03.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.239" endtime="20201112 09:46:03.764"></status>
</kw>
<msg timestamp="20201112 09:46:03.765" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:03.773" endtime="20201112 09:46:07.897"></status>
</kw>
<msg timestamp="20201112 09:46:07.898" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 50138749, 'wakeups': [50148817, 50158818, 50168818, 50178818, 50188818...</msg>
<status status="PASS" starttime="20201112 09:46:03.771" endtime="20201112 09:46:07.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.902" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 50138749, 'wakeups': [50148817, 50158818, 50168818, 50178818, 50188818...</msg>
<status status="PASS" starttime="20201112 09:46:07.901" endtime="20201112 09:46:07.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:07.904" endtime="20201112 09:46:07.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:03.769" endtime="20201112 09:46:07.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:03.767" endtime="20201112 09:46:07.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:07.909" level="INFO">${RESULT} = {'wakeups': [50148817, 50158818, 50168818, 50178818, 50188818, 50198818, 50208818, 50218818, 50228818, 50238818, 50248818, 50258818, 50268818, 50278818, 50288818, 50298818, 50308818, 50318818, 5032881...</msg>
<status status="PASS" starttime="20201112 09:46:07.907" endtime="20201112 09:46:07.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.913" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:07.912" endtime="20201112 09:46:07.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.915" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:07.914" endtime="20201112 09:46:07.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.910" endtime="20201112 09:46:07.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.921" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:07.920" endtime="20201112 09:46:07.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.923" level="INFO">VALUE: 50138749</msg>
<status status="PASS" starttime="20201112 09:46:07.922" endtime="20201112 09:46:07.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.917" endtime="20201112 09:46:07.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.928" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:07.926" endtime="20201112 09:46:07.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:07.930" level="INFO">VALUE: [50148817, 50158818, 50168818, 50178818, 50188818, 50198818, 50208818, 50218818, 50228818, 50238818, 50248818, 50258818, 50268818, 50278818, 50288818, 50298818, 50308818, 50318818, 50328818, 50338818, 50348818, 50358818, 50368818, 50378818, 50388818, 50398818, 50408818, 50418818, 50428818, 50438818, 50448818, 50458818, 50468818, 50478818, 50488818, 50498818, 50508818, 50518818, 50528818, 50538818, 50548818, 50558818, 50568818, 50578818, 50588818, 50598818, 50608818, 50618818, 50628818, 50638818, 50648818, 50658818, 50668818, 50678818, 50688818, 50698818, 50708818, 50718818, 50728818, 50738818, 50748818, 50758818, 50768818, 50778818, 50788818, 50798818, 50808818, 50818818, 50828818, 50838818, 50848818, 50858818, 50868818, 50878818, 50888818, 50898818, 50908818, 50918818, 50928818, 50938818, 50948818, 50958818, 50968818, 50978818, 50988818, 50998818, 51008818, 51018818, 51028818, 51038818, 51048818, 51058818, 51068818, 51078818, 51088818, 51098818, 51108818, 51118818, 51128818, 51138818]</msg>
<status status="PASS" starttime="20201112 09:46:07.929" endtime="20201112 09:46:07.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.924" endtime="20201112 09:46:07.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:07.937" endtime="20201112 09:46:08.229"></status>
</kw>
<msg timestamp="20201112 09:46:08.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019459014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039597125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:07.936" endtime="20201112 09:46:08.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:08.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019459014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039597125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:08.233" endtime="20201112 09:46:08.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:08.241" endtime="20201112 09:46:08.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.933" endtime="20201112 09:46:08.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:07.931" endtime="20201112 09:46:08.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:08.269" level="INFO">${RESULT} = {'diff': [0, 0.020138110999999997, 0.020004708000000003, 0.020002236, 0.020002348000000003, 0.020002222, 0.02000236100000001, 0.02000223599999998, 0.020002360999999996, 0.020002236000000007, 0.0200023...</msg>
<status status="PASS" starttime="20201112 09:46:08.244" endtime="20201112 09:46:08.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:08.273" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:08.272" endtime="20201112 09:46:08.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:08.276" level="INFO">VALUE: 0.019459014</msg>
<status status="PASS" starttime="20201112 09:46:08.275" endtime="20201112 09:46:08.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:08.270" endtime="20201112 09:46:08.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:08.281" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:08.280" endtime="20201112 09:46:08.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:08.283" level="INFO">VALUE: [0.039597125, 0.059601833, 0.079604069, 0.099606417, 0.119608639, 0.139611, 0.159613236, 0.179615597, 0.199617833, 0.219620194, 0.239622458, 0.259624875, 0.279627014, 0.299629389, 0.319631611, 0.339634, 0.35963625, 0.379638569, 0.399640833, 0.419643181, 0.439645417, 0.459647778, 0.479650028, 0.499652361, 0.519654597, 0.539657028, 0.559659194, 0.579661569, 0.599663806, 0.619666167, 0.639668389, 0.65967075, 0.679673, 0.699675361, 0.719677597, 0.739679944, 0.759682181, 0.779684556, 0.799686847, 0.819689139, 0.839691375, 0.859693736, 0.879696, 0.899698389, 0.919700569, 0.939702944, 0.959705181, 0.979707556, 0.999709764, 1.019712139, 1.039714417, 1.059716736, 1.079718958, 1.099721319, 1.119723597, 1.139725944, 1.159728167, 1.179730528, 1.199732764, 1.219735125, 1.239737361, 1.25973975, 1.279741958, 1.299744319, 1.319746556, 1.339748972, 1.359751167, 1.379753556, 1.39975575, 1.419758111, 1.439760347, 1.459762708, 1.479764944, 1.499767306, 1.519769542, 1.539771903, 1.559774139, 1.5797765, 1.59977875, 1.619781097, 1.639783333, 1.659785708, 1.679787931, 1.699790306, 1.719792556, 1.739794889, 1.759797125, 1.7797995, 1.799801764, 1.819804097, 1.839806333, 1.859808694, 1.879810944, 1.899813292, 1.919815542, 1.939817889, 1.959820139, 1.979822486, 1.99982475, 2.019827097] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:08.282" endtime="20201112 09:46:08.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:08.277" endtime="20201112 09:46:08.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:08.287" endtime="20201112 09:46:08.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:08.290" endtime="20201112 09:46:08.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:08.289" endtime="20201112 09:46:08.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:08.285" endtime="20201112 09:46:08.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:03.765" endtime="20201112 09:46:08.311"></status>
</kw>
<msg timestamp="20201112 09:46:08.311" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:08.319" endtime="20201112 09:46:12.444"></status>
</kw>
<msg timestamp="20201112 09:46:12.445" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 52411938, 'wakeups': [52422006, 52432007, 52442007, 52452007, 52462007...</msg>
<status status="PASS" starttime="20201112 09:46:08.318" endtime="20201112 09:46:12.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.451" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 52411938, 'wakeups': [52422006, 52432007, 52442007, 52452007, 52462007...</msg>
<status status="PASS" starttime="20201112 09:46:12.447" endtime="20201112 09:46:12.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:12.453" endtime="20201112 09:46:12.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:08.315" endtime="20201112 09:46:12.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:08.313" endtime="20201112 09:46:12.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:12.463" level="INFO">${RESULT} = {'wakeups': [52422006, 52432007, 52442007, 52452007, 52462007, 52472007, 52482007, 52492007, 52502007, 52512007, 52522007, 52532007, 52542007, 52552007, 52562007, 52572007, 52582007, 52592007, 5260200...</msg>
<status status="PASS" starttime="20201112 09:46:12.461" endtime="20201112 09:46:12.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.467" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:12.466" endtime="20201112 09:46:12.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.469" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:12.468" endtime="20201112 09:46:12.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.464" endtime="20201112 09:46:12.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.474" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:12.473" endtime="20201112 09:46:12.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.476" level="INFO">VALUE: 52411938</msg>
<status status="PASS" starttime="20201112 09:46:12.475" endtime="20201112 09:46:12.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.471" endtime="20201112 09:46:12.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.481" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:12.480" endtime="20201112 09:46:12.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.483" level="INFO">VALUE: [52422006, 52432007, 52442007, 52452007, 52462007, 52472007, 52482007, 52492007, 52502007, 52512007, 52522007, 52532007, 52542007, 52552007, 52562007, 52572007, 52582007, 52592007, 52602007, 52612007, 52622007, 52632007, 52642007, 52652007, 52662007, 52672007, 52682007, 52692007, 52702007, 52712007, 52722007, 52732007, 52742007, 52752007, 52762007, 52772007, 52782007, 52792007, 52802007, 52812007, 52822007, 52832007, 52842007, 52852007, 52862007, 52872007, 52882007, 52892007, 52902007, 52912007, 52922007, 52932007, 52942007, 52952007, 52962007, 52972007, 52982007, 52992007, 53002007, 53012007, 53022007, 53032007, 53042007, 53052007, 53062007, 53072007, 53082007, 53092007, 53102007, 53112007, 53122007, 53132007, 53142007, 53152007, 53162007, 53172007, 53182007, 53192007, 53202007, 53212007, 53222007, 53232007, 53242007, 53252007, 53262007, 53272007, 53282007, 53292007, 53302007, 53312007, 53322007, 53332007, 53342007, 53352007, 53362007, 53372007, 53382007, 53392007, 53402007, 53412007]</msg>
<status status="PASS" starttime="20201112 09:46:12.482" endtime="20201112 09:46:12.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.477" endtime="20201112 09:46:12.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:12.491" endtime="20201112 09:46:12.782"></status>
</kw>
<msg timestamp="20201112 09:46:12.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019492319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039632111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:12.490" endtime="20201112 09:46:12.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019492319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039632111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:12.785" endtime="20201112 09:46:12.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:12.793" endtime="20201112 09:46:12.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.487" endtime="20201112 09:46:12.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.485" endtime="20201112 09:46:12.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:12.820" level="INFO">${RESULT} = {'diff': [0, 0.020139791999999997, 0.020003736, 0.020002195000000007, 0.020002332999999997, 0.02000229199999999, 0.020002305000000012, 0.020002221999999986, 0.020002361999999996, 0.020002291000000005,...</msg>
<status status="PASS" starttime="20201112 09:46:12.796" endtime="20201112 09:46:12.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.825" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:46:12.824" endtime="20201112 09:46:12.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.827" level="INFO">VALUE: 0.019492319</msg>
<status status="PASS" starttime="20201112 09:46:12.826" endtime="20201112 09:46:12.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.821" endtime="20201112 09:46:12.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.832" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:12.831" endtime="20201112 09:46:12.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:12.834" level="INFO">VALUE: [0.039632111, 0.059635847, 0.079638042, 0.099640375, 0.119642667, 0.139644972, 0.159647194, 0.179649556, 0.199651847, 0.219654139, 0.239656375, 0.259658736, 0.279660972, 0.299663347, 0.319665556, 0.339667917, 0.359670139, 0.379672514, 0.39967475, 0.419677111, 0.439679319, 0.459681681, 0.479683917, 0.499686278, 0.5196885, 0.539690875, 0.559693097, 0.579695514, 0.599697694, 0.619700042, 0.639702278, 0.659704639, 0.679706889, 0.699709222, 0.719711458, 0.739713819, 0.759716111, 0.779718458, 0.799720639, 0.819723014, 0.839725264, 0.859727597, 0.879729819, 0.899732181, 0.919734417, 0.939736778, 0.959739, 0.979741361, 0.999743667, 1.019745958, 1.039748181, 1.059750542, 1.079752792, 1.099755139, 1.119757361, 1.139759736, 1.159761958, 1.179764361, 1.199766556, 1.219768917, 1.239771153, 1.2597735, 1.279775806, 1.299778083, 1.319780319, 1.339782681, 1.359784931, 1.379787306, 1.399789514, 1.419791861, 1.439794139, 1.459796458, 1.479798681, 1.499801042, 1.519803292, 1.539805639, 1.559807875, 1.579810222, 1.5998125, 1.619814833, 1.639817069, 1.659819417, 1.679821653, 1.699824014, 1.719826236, 1.739828597, 1.759830819, 1.779833181, 1.799835417, 1.819837778, 1.839840042, 1.859842361, 1.879844625, 1.899846972, 1.919849264, 1.939851556, 1.959853778, 1.979856139, 1.999858375, 2.019860736] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:12.833" endtime="20201112 09:46:12.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.828" endtime="20201112 09:46:12.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:12.837" endtime="20201112 09:46:12.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:12.841" endtime="20201112 09:46:12.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.839" endtime="20201112 09:46:12.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.836" endtime="20201112 09:46:12.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:08.312" endtime="20201112 09:46:12.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.237" endtime="20201112 09:46:12.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:59.236" endtime="20201112 09:46:12.862"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:46:12.864" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:12.873" endtime="20201112 09:46:16.996"></status>
</kw>
<msg timestamp="20201112 09:46:16.998" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 54688758, 'wakeups': [54698838, 54708839, 54718839, 54728839, 54738839...</msg>
<status status="PASS" starttime="20201112 09:46:12.871" endtime="20201112 09:46:16.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.004" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 54688758, 'wakeups': [54698838, 54708839, 54718839, 54728839, 54738839...</msg>
<status status="PASS" starttime="20201112 09:46:17.000" endtime="20201112 09:46:17.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:17.006" endtime="20201112 09:46:17.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.868" endtime="20201112 09:46:17.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.866" endtime="20201112 09:46:17.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:17.017" level="INFO">${RESULT} = {'wakeups': [54698838, 54708839, 54718839, 54728839, 54738839, 54748839, 54758839, 54768839, 54778839, 54788839, 54798839, 54808839, 54818839, 54828839, 54838839, 54848839, 54858839, 54868839, 5487883...</msg>
<status status="PASS" starttime="20201112 09:46:17.013" endtime="20201112 09:46:17.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.022" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:17.021" endtime="20201112 09:46:17.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.024" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:17.023" endtime="20201112 09:46:17.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.018" endtime="20201112 09:46:17.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.030" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:17.028" endtime="20201112 09:46:17.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.032" level="INFO">VALUE: 54688758</msg>
<status status="PASS" starttime="20201112 09:46:17.031" endtime="20201112 09:46:17.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.025" endtime="20201112 09:46:17.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.037" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:17.036" endtime="20201112 09:46:17.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.039" level="INFO">VALUE: [54698838, 54708839, 54718839, 54728839, 54738839, 54748839, 54758839, 54768839, 54778839, 54788839, 54798839, 54808839, 54818839, 54828839, 54838839, 54848839, 54858839, 54868839, 54878839, 54888839, 54898839, 54908839, 54918839, 54928839, 54938839, 54948839, 54958839, 54968839, 54978839, 54988839, 54998839, 55008839, 55018839, 55028839, 55038839, 55048839, 55058839, 55068839, 55078839, 55088839, 55098839, 55108839, 55118839, 55128839, 55138839, 55148839, 55158839, 55168839, 55178839, 55188839, 55198839, 55208839, 55218839, 55228839, 55238839, 55248839, 55258839, 55268839, 55278839, 55288839, 55298839, 55308839, 55318839, 55328839, 55338839, 55348839, 55358839, 55368839, 55378839, 55388839, 55398839, 55408839, 55418839, 55428839, 55438839, 55448839, 55458839, 55468839, 55478839, 55488839, 55498839, 55508839, 55518839, 55528839, 55538839, 55548839, 55558839, 55568839, 55578839, 55588839, 55598839, 55608839, 55618839, 55628839, 55638839, 55648839, 55658839, 55668839, 55678839, 55688839]</msg>
<status status="PASS" starttime="20201112 09:46:17.038" endtime="20201112 09:46:17.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.034" endtime="20201112 09:46:17.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:17.046" endtime="20201112 09:46:17.339"></status>
</kw>
<msg timestamp="20201112 09:46:17.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042739403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:17.045" endtime="20201112 09:46:17.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042739403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:17.343" endtime="20201112 09:46:17.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:17.350" endtime="20201112 09:46:17.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.042" endtime="20201112 09:46:17.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.041" endtime="20201112 09:46:17.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:17.378" level="INFO">${RESULT} = {'diff': [0, 0.020162972, 0.020004457999999996, 0.020002264000000006, 0.02000231899999999, 0.020002237000000006, 0.020002347000000004, 0.020002236000000007, 0.020002346999999976, 0.020002222000000014,...</msg>
<status status="PASS" starttime="20201112 09:46:17.354" endtime="20201112 09:46:17.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.382" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:17.381" endtime="20201112 09:46:17.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.384" level="INFO">VALUE: 0.022576431</msg>
<status status="PASS" starttime="20201112 09:46:17.383" endtime="20201112 09:46:17.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.379" endtime="20201112 09:46:17.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.390" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:17.389" endtime="20201112 09:46:17.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:17.393" level="INFO">VALUE: [0.042739403, 0.062743861, 0.082746125, 0.102748444, 0.122750681, 0.142753028, 0.162755264, 0.182757611, 0.202759833, 0.222762194, 0.242764403, 0.262766778, 0.282768986, 0.302771361, 0.322773583, 0.342775931, 0.362778167, 0.382780514, 0.40278275, 0.422785097, 0.442787333, 0.462789681, 0.482791917, 0.502794264, 0.522796528, 0.542798847, 0.562801097, 0.582803431, 0.602805667, 0.622808014, 0.64281025, 0.662812597, 0.682814847, 0.702817194, 0.722819417, 0.742821819, 0.762824014, 0.782826361, 0.802828583, 0.822830944, 0.842833167, 0.862835528, 0.882837764, 0.902840111, 0.922842361, 0.942844722, 0.962846917, 0.982849278, 1.0028515, 1.022853861, 1.042856111, 1.062858444, 1.082860681, 1.102863083, 1.122865264, 1.142867625, 1.162869847, 1.182872194, 1.202874431, 1.222876806, 1.242879014, 1.262881361, 1.282883597, 1.302885958, 1.322888194, 1.342890542, 1.362892764, 1.382895125, 1.402897361, 1.422899708, 1.442901931, 1.462904292, 1.482906528, 1.502908875, 1.522911125, 1.5429135, 1.562915764, 1.582918153, 1.602920389, 1.622922764, 1.642925028, 1.662927403, 1.682929722, 1.702932042, 1.722934292, 1.742936667, 1.762938917, 1.782941292, 1.802943556, 1.822945931, 1.842948194, 1.862950569, 1.882952806, 1.902955181, 1.922957431, 1.942959806, 1.962962056, 1.982964458, 2.002966708, 2.022969139] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:17.391" endtime="20201112 09:46:17.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.386" endtime="20201112 09:46:17.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:17.396" endtime="20201112 09:46:17.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:17.399" endtime="20201112 09:46:17.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.397" endtime="20201112 09:46:17.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.394" endtime="20201112 09:46:17.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.865" endtime="20201112 09:46:17.420"></status>
</kw>
<msg timestamp="20201112 09:46:17.420" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:17.428" endtime="20201112 09:46:21.537"></status>
</kw>
<msg timestamp="20201112 09:46:21.537" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 56966197, 'wakeups': [56976278, 56986278, 56996278, 57006278, 57016278...</msg>
<status status="PASS" starttime="20201112 09:46:17.426" endtime="20201112 09:46:21.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:21.540" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 56966197, 'wakeups': [56976278, 56986278, 56996278, 57006278, 57016278...</msg>
<status status="PASS" starttime="20201112 09:46:21.538" endtime="20201112 09:46:21.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:21.541" endtime="20201112 09:46:21.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.424" endtime="20201112 09:46:21.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.422" endtime="20201112 09:46:21.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:21.547" level="INFO">${RESULT} = {'wakeups': [56976278, 56986278, 56996278, 57006278, 57016278, 57026278, 57036278, 57046278, 57056278, 57066278, 57076278, 57086278, 57096278, 57106278, 57116278, 57126278, 57136278, 57146278, 5715627...</msg>
<status status="PASS" starttime="20201112 09:46:21.545" endtime="20201112 09:46:21.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:21.551" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:21.550" endtime="20201112 09:46:21.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:21.553" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:21.552" endtime="20201112 09:46:21.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.548" endtime="20201112 09:46:21.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:21.558" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:21.557" endtime="20201112 09:46:21.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:21.561" level="INFO">VALUE: 56966197</msg>
<status status="PASS" starttime="20201112 09:46:21.560" endtime="20201112 09:46:21.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.555" endtime="20201112 09:46:21.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:21.565" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:21.564" endtime="20201112 09:46:21.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:21.568" level="INFO">VALUE: [56976278, 56986278, 56996278, 57006278, 57016278, 57026278, 57036278, 57046278, 57056278, 57066278, 57076278, 57086278, 57096278, 57106278, 57116278, 57126278, 57136278, 57146278, 57156278, 57166278, 57176278, 57186278, 57196278, 57206278, 57216278, 57226278, 57236278, 57246278, 57256278, 57266278, 57276278, 57286278, 57296278, 57306278, 57316278, 57326278, 57336278, 57346278, 57356278, 57366278, 57376278, 57386278, 57396278, 57406278, 57416278, 57426278, 57436278, 57446278, 57456278, 57466278, 57476278, 57486278, 57496278, 57506278, 57516278, 57526278, 57536278, 57546278, 57556278, 57566278, 57576278, 57586278, 57596278, 57606278, 57616278, 57626278, 57636278, 57646278, 57656278, 57666278, 57676278, 57686278, 57696278, 57706278, 57716278, 57726278, 57736278, 57746278, 57756278, 57766278, 57776278, 57786278, 57796278, 57806278, 57816278, 57826278, 57836278, 57846278, 57856278, 57866278, 57876278, 57886278, 57896278, 57906278, 57916278, 57926278, 57936278, 57946278, 57956278, 57966278]</msg>
<status status="PASS" starttime="20201112 09:46:21.567" endtime="20201112 09:46:21.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.562" endtime="20201112 09:46:21.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:21.575" endtime="20201112 09:46:21.867"></status>
</kw>
<msg timestamp="20201112 09:46:21.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019333625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039497278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:21.573" endtime="20201112 09:46:21.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:21.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019333625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039497278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:21.871" endtime="20201112 09:46:21.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:21.878" endtime="20201112 09:46:21.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.571" endtime="20201112 09:46:21.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.569" endtime="20201112 09:46:21.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:21.905" level="INFO">${RESULT} = {'diff': [0, 0.020163652999999997, 0.020002486, 0.020002236000000007, 0.020002416999999995, 0.020002194, 0.02000236100000001, 0.020002263999999992, 0.020002360999999996, 0.020002236000000007, 0.020002...</msg>
<status status="PASS" starttime="20201112 09:46:21.881" endtime="20201112 09:46:21.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:21.909" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:21.908" endtime="20201112 09:46:21.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:21.911" level="INFO">VALUE: 0.019333625</msg>
<status status="PASS" starttime="20201112 09:46:21.910" endtime="20201112 09:46:21.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.906" endtime="20201112 09:46:21.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:21.917" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:21.916" endtime="20201112 09:46:21.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:21.919" level="INFO">VALUE: [0.039497278, 0.059499764, 0.079502, 0.099504417, 0.119506611, 0.139508972, 0.159511236, 0.179513597, 0.199515833, 0.219518222, 0.239520486, 0.259522847, 0.279525083, 0.299527514, 0.319529694, 0.339532083, 0.359534319, 0.379536708, 0.399538931, 0.419541306, 0.439543556, 0.459545958, 0.479548181, 0.499550556, 0.519552792, 0.539555167, 0.559557417, 0.579559792, 0.599562042, 0.619564472, 0.639566653, 0.659569028, 0.679571278, 0.699573667, 0.719575903, 0.739578264, 0.759580556, 0.779582889, 0.799585139, 0.819587514, 0.839589778, 0.859592139, 0.879594375, 0.89959675, 0.919599, 0.939601375, 0.959603639, 0.979606, 0.99960825, 1.019610625, 1.039612861, 1.059615222, 1.079617472, 1.099619847, 1.119622097, 1.139624472, 1.15962675, 1.179629097, 1.199631347, 1.219633722, 1.239635958, 1.259638347, 1.279640597, 1.299642958, 1.319645194, 1.339647569, 1.359649819, 1.379652194, 1.399654431, 1.419656806, 1.439659056, 1.459661431, 1.479663681, 1.499666056, 1.519668319, 1.539670681, 1.559672944, 1.579675292, 1.599677583, 1.619679931, 1.639682236, 1.659684528, 1.679686806, 1.699689153, 1.719691403, 1.739693778, 1.759696056, 1.779698403, 1.799700653, 1.819703014, 1.839705264, 1.859707639, 1.879709889, 1.899712264, 1.919714514, 1.939716875, 1.959719167, 1.979721514, 1.99972375, 2.019726153] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:21.918" endtime="20201112 09:46:21.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.913" endtime="20201112 09:46:21.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:21.922" endtime="20201112 09:46:21.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:21.926" endtime="20201112 09:46:21.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.924" endtime="20201112 09:46:21.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.921" endtime="20201112 09:46:21.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:17.421" endtime="20201112 09:46:21.947"></status>
</kw>
<msg timestamp="20201112 09:46:21.947" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:21.956" endtime="20201112 09:46:26.060"></status>
</kw>
<msg timestamp="20201112 09:46:26.061" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 59230009, 'wakeups': [59240089, 59250090, 59260090, 59270090, 59280090...</msg>
<status status="PASS" starttime="20201112 09:46:21.953" endtime="20201112 09:46:26.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:26.063" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 59230009, 'wakeups': [59240089, 59250090, 59260090, 59270090, 59280090...</msg>
<status status="PASS" starttime="20201112 09:46:26.062" endtime="20201112 09:46:26.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:26.065" endtime="20201112 09:46:26.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.951" endtime="20201112 09:46:26.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.949" endtime="20201112 09:46:26.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:26.070" level="INFO">${RESULT} = {'wakeups': [59240089, 59250090, 59260090, 59270090, 59280090, 59290090, 59300090, 59310090, 59320090, 59330090, 59340090, 59350090, 59360090, 59370090, 59380090, 59390090, 59400090, 59410090, 5942009...</msg>
<status status="PASS" starttime="20201112 09:46:26.068" endtime="20201112 09:46:26.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:26.074" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:26.073" endtime="20201112 09:46:26.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:26.076" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:26.075" endtime="20201112 09:46:26.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.071" endtime="20201112 09:46:26.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:26.081" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:26.080" endtime="20201112 09:46:26.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:26.083" level="INFO">VALUE: 59230009</msg>
<status status="PASS" starttime="20201112 09:46:26.082" endtime="20201112 09:46:26.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.077" endtime="20201112 09:46:26.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:26.088" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:26.087" endtime="20201112 09:46:26.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:26.098" level="INFO">VALUE: [59240089, 59250090, 59260090, 59270090, 59280090, 59290090, 59300090, 59310090, 59320090, 59330090, 59340090, 59350090, 59360090, 59370090, 59380090, 59390090, 59400090, 59410090, 59420090, 59430090, 59440090, 59450090, 59460090, 59470090, 59480090, 59490090, 59500090, 59510090, 59520090, 59530090, 59540090, 59550090, 59560090, 59570090, 59580090, 59590090, 59600090, 59610090, 59620090, 59630090, 59640090, 59650090, 59660090, 59670090, 59680090, 59690090, 59700090, 59710090, 59720090, 59730090, 59740090, 59750090, 59760090, 59770090, 59780090, 59790090, 59800090, 59810090, 59820090, 59830090, 59840090, 59850090, 59860090, 59870090, 59880090, 59890090, 59900090, 59910090, 59920090, 59930090, 59940090, 59950090, 59960090, 59970090, 59980090, 59990090, 60000090, 60010090, 60020090, 60030090, 60040090, 60050090, 60060090, 60070090, 60080090, 60090090, 60100090, 60110090, 60120090, 60130090, 60140090, 60150090, 60160090, 60170090, 60180090, 60190090, 60200090, 60210090, 60220090, 60230090]</msg>
<status status="PASS" starttime="20201112 09:46:26.096" endtime="20201112 09:46:26.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.084" endtime="20201112 09:46:26.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:26.105" endtime="20201112 09:46:26.396"></status>
</kw>
<msg timestamp="20201112 09:46:26.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020237472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040400486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:26.104" endtime="20201112 09:46:26.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:26.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020237472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040400486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:26.399" endtime="20201112 09:46:26.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:26.407" endtime="20201112 09:46:26.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.101" endtime="20201112 09:46:26.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.099" endtime="20201112 09:46:26.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:26.435" level="INFO">${RESULT} = {'diff': [0, 0.020163014, 0.020004431000000003, 0.02000225, 0.020002347000000004, 0.02000225, 0.02000237499999999, 0.02000225, 0.020002360999999996, 0.02000225, 0.020002347000000004, 0.020002264000000...</msg>
<status status="PASS" starttime="20201112 09:46:26.410" endtime="20201112 09:46:26.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:26.439" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:46:26.438" endtime="20201112 09:46:26.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:26.441" level="INFO">VALUE: 0.020237472</msg>
<status status="PASS" starttime="20201112 09:46:26.440" endtime="20201112 09:46:26.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.436" endtime="20201112 09:46:26.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:26.447" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:26.446" endtime="20201112 09:46:26.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:26.449" level="INFO">VALUE: [0.040400486, 0.060404917, 0.080407167, 0.100409514, 0.120411764, 0.140414139, 0.160416389, 0.18041875, 0.200421, 0.220423347, 0.240425611, 0.260427986, 0.280430208, 0.300432583, 0.320434833, 0.340437208, 0.360439472, 0.380441861, 0.400444056, 0.420446431, 0.440448708, 0.460451056, 0.480453292, 0.500455653, 0.520457931, 0.540460278, 0.560462528, 0.580464889, 0.600467181, 0.6204695, 0.64047175, 0.660474111, 0.680476361, 0.700478736, 0.720480972, 0.740483347, 0.760485611, 0.780487958, 0.800490222, 0.820492583, 0.840494819, 0.860497222, 0.880499444, 0.900501806, 0.920504056, 0.940506431, 0.960508667, 0.980511042, 1.000513292, 1.020515653, 1.040517903, 1.060520292, 1.080522514, 1.100524889, 1.120527125, 1.1405295, 1.160531806, 1.180534111, 1.200536361, 1.220538736, 1.240540986, 1.260543347, 1.280545611, 1.300547958, 1.320550208, 1.340552583, 1.360554819, 1.380557194, 1.400559458, 1.420561819, 1.440564056, 1.460566431, 1.480568667, 1.500571042, 1.520573292, 1.540575653, 1.560577903, 1.580580292, 1.600582514, 1.620584889, 1.640587153, 1.6605895, 1.68059175, 1.700594125, 1.720596375, 1.74059875, 1.760601, 1.780603361, 1.800605597, 1.820607972, 1.840610222, 1.860612583, 1.880614833, 1.900617194, 1.920619444, 1.940621819, 1.960624097, 1.980626444, 2.000628694, 2.020631056] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:26.448" endtime="20201112 09:46:26.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.443" endtime="20201112 09:46:26.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:26.452" endtime="20201112 09:46:26.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:26.455" endtime="20201112 09:46:26.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.454" endtime="20201112 09:46:26.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.450" endtime="20201112 09:46:26.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:21.947" endtime="20201112 09:46:26.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.863" endtime="20201112 09:46:26.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:12.862" endtime="20201112 09:46:26.477"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:46:26.479" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:26.487" endtime="20201112 09:46:30.612"></status>
</kw>
<msg timestamp="20201112 09:46:30.613" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 61495878, 'wakeups': [61505971, 61515971, 61525971, 61535971, 615459...</msg>
<status status="PASS" starttime="20201112 09:46:26.486" endtime="20201112 09:46:30.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:30.619" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 61495878, 'wakeups': [61505971, 61515971, 61525971, 61535971, 615459...</msg>
<status status="PASS" starttime="20201112 09:46:30.615" endtime="20201112 09:46:30.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:30.621" endtime="20201112 09:46:30.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.483" endtime="20201112 09:46:30.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.481" endtime="20201112 09:46:30.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:30.632" level="INFO">${RESULT} = {'wakeups': [61505971, 61515971, 61525971, 61535971, 61545971, 61555971, 61565971, 61575971, 61585971, 61595971, 61605971, 61615971, 61625971, 61635971, 61645971, 61655971, 61665971, 61675971, 6168597...</msg>
<status status="PASS" starttime="20201112 09:46:30.628" endtime="20201112 09:46:30.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:30.641" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:30.638" endtime="20201112 09:46:30.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:30.643" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:30.642" endtime="20201112 09:46:30.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:30.634" endtime="20201112 09:46:30.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:30.649" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:30.648" endtime="20201112 09:46:30.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:30.651" level="INFO">VALUE: 61495878</msg>
<status status="PASS" starttime="20201112 09:46:30.650" endtime="20201112 09:46:30.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:30.645" endtime="20201112 09:46:30.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:30.656" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:30.655" endtime="20201112 09:46:30.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:30.658" level="INFO">VALUE: [61505971, 61515971, 61525971, 61535971, 61545971, 61555971, 61565971, 61575971, 61585971, 61595971, 61605971, 61615971, 61625971, 61635971, 61645971, 61655971, 61665971, 61675971, 61685971, 61695971, 61705971, 61715971, 61725971, 61735971, 61745971, 61755971, 61765971, 61775971, 61785971, 61795971, 61805971, 61815971, 61825971, 61835971, 61845971, 61855971, 61865971, 61875971, 61885971, 61895971, 61905971, 61915971, 61925971, 61935971, 61945971, 61955971, 61965971, 61975971, 61985971, 61995971, 62005971, 62015971, 62025971, 62035971, 62045971, 62055971, 62065971, 62075971, 62085971, 62095971, 62105971, 62115971, 62125971, 62135971, 62145971, 62155971, 62165971, 62175971, 62185971, 62195971, 62205971, 62215971, 62225971, 62235971, 62245971, 62255971, 62265971, 62275971, 62285971, 62295971, 62305971, 62315971, 62325971, 62335971, 62345971, 62355971, 62365971, 62375971, 62385971, 62395971, 62405971, 62415971, 62425971, 62435971, 62445971, 62455971, 62465971, 62475971, 62485971, 62495971]</msg>
<status status="PASS" starttime="20201112 09:46:30.657" endtime="20201112 09:46:30.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:30.653" endtime="20201112 09:46:30.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:30.666" endtime="20201112 09:46:30.959"></status>
</kw>
<msg timestamp="20201112 09:46:30.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042820542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:46:30.664" endtime="20201112 09:46:30.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:30.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042820542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:46:30.962" endtime="20201112 09:46:30.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:30.970" endtime="20201112 09:46:30.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:30.662" endtime="20201112 09:46:30.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:30.660" endtime="20201112 09:46:30.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:30.997" level="INFO">${RESULT} = {'diff': [0, 0.020187542000000003, 0.020002707999999994, 0.020002236000000007, 0.020002360999999996, 0.02000225, 0.02000237499999999, 0.020002236000000007, 0.020002348000000003, 0.02000225, 0.02000237...</msg>
<status status="PASS" starttime="20201112 09:46:30.973" endtime="20201112 09:46:30.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:31.002" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:31.000" endtime="20201112 09:46:31.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:31.004" level="INFO">VALUE: 0.022633</msg>
<status status="PASS" starttime="20201112 09:46:31.003" endtime="20201112 09:46:31.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:30.998" endtime="20201112 09:46:31.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:31.010" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:31.009" endtime="20201112 09:46:31.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:31.012" level="INFO">VALUE: [0.042820542, 0.06282325, 0.082825486, 0.102827847, 0.122830097, 0.142832472, 0.162834708, 0.182837056, 0.202839306, 0.222841681, 0.242843903, 0.262846292, 0.282848528, 0.302850889, 0.322853125, 0.342855486, 0.362857722, 0.382860097, 0.402862333, 0.422864694, 0.442866944, 0.462869306, 0.482871542, 0.502873917, 0.522876153, 0.542878528, 0.562880778, 0.582883125, 0.602885389, 0.622887736, 0.642889986, 0.662892361, 0.682894583, 0.702896958, 0.722899208, 0.742901556, 0.762903819, 0.782906167, 0.802908431, 0.822910792, 0.842913014, 0.862915431, 0.882917639, 0.90292, 0.922922306, 0.942924597, 0.962926847, 0.982929236, 1.002931458, 1.022933833, 1.042936069, 1.062938486, 1.082940667, 1.102943042, 1.122945278, 1.142947667, 1.162949889, 1.182952264, 1.2029545, 1.222956875, 1.242959097, 1.262961486, 1.282963708, 1.302966069, 1.322968319, 1.342970681, 1.362972931, 1.382975292, 1.402977528, 1.422979917, 1.442982208, 1.462984528, 1.482986764, 1.502989111, 1.522991361, 1.542993792, 1.562995972, 1.582998333, 1.603000569, 1.623002972, 1.643005181, 1.663007556, 1.683009792, 1.703012153, 1.723014403, 1.743016819, 1.763019014, 1.783021389, 1.803023625, 1.823025986, 1.843028236, 1.863030597, 1.883032833, 1.903035194, 1.923037444, 1.943039806, 1.963042056, 1.983044431, 2.003046681, 2.023049028] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:31.011" endtime="20201112 09:46:31.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:31.005" endtime="20201112 09:46:31.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:31.015" endtime="20201112 09:46:31.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:31.018" endtime="20201112 09:46:31.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:31.017" endtime="20201112 09:46:31.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:31.013" endtime="20201112 09:46:31.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.480" endtime="20201112 09:46:31.039"></status>
</kw>
<msg timestamp="20201112 09:46:31.039" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:31.047" endtime="20201112 09:46:35.172"></status>
</kw>
<msg timestamp="20201112 09:46:35.173" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 63775753, 'wakeups': [63785846, 63795846, 63805846, 63815846, 638258...</msg>
<status status="PASS" starttime="20201112 09:46:31.046" endtime="20201112 09:46:35.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:35.179" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 63775753, 'wakeups': [63785846, 63795846, 63805846, 63815846, 638258...</msg>
<status status="PASS" starttime="20201112 09:46:35.175" endtime="20201112 09:46:35.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:35.182" endtime="20201112 09:46:35.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:31.043" endtime="20201112 09:46:35.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:31.041" endtime="20201112 09:46:35.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:35.193" level="INFO">${RESULT} = {'wakeups': [63785846, 63795846, 63805846, 63815846, 63825846, 63835846, 63845846, 63855846, 63865846, 63875846, 63885846, 63895846, 63905846, 63915846, 63925846, 63935846, 63945846, 63955846, 6396584...</msg>
<status status="PASS" starttime="20201112 09:46:35.189" endtime="20201112 09:46:35.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:35.202" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:35.199" endtime="20201112 09:46:35.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:35.204" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:35.203" endtime="20201112 09:46:35.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:35.195" endtime="20201112 09:46:35.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:35.209" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:35.208" endtime="20201112 09:46:35.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:35.211" level="INFO">VALUE: 63775753</msg>
<status status="PASS" starttime="20201112 09:46:35.210" endtime="20201112 09:46:35.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:35.205" endtime="20201112 09:46:35.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:35.216" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:35.215" endtime="20201112 09:46:35.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:35.218" level="INFO">VALUE: [63785846, 63795846, 63805846, 63815846, 63825846, 63835846, 63845846, 63855846, 63865846, 63875846, 63885846, 63895846, 63905846, 63915846, 63925846, 63935846, 63945846, 63955846, 63965846, 63975846, 63985846, 63995846, 64005846, 64015846, 64025846, 64035846, 64045846, 64055846, 64065846, 64075846, 64085846, 64095846, 64105846, 64115846, 64125846, 64135846, 64145846, 64155846, 64165846, 64175846, 64185846, 64195846, 64205846, 64215846, 64225846, 64235846, 64245846, 64255846, 64265846, 64275846, 64285846, 64295846, 64305846, 64315846, 64325846, 64335846, 64345846, 64355846, 64365846, 64375846, 64385846, 64395846, 64405846, 64415846, 64425846, 64435846, 64445846, 64455846, 64465846, 64475846, 64485846, 64495846, 64505846, 64515846, 64525846, 64535846, 64545846, 64555846, 64565846, 64575846, 64585846, 64595846, 64605846, 64615846, 64625846, 64635846, 64645846, 64655846, 64665846, 64675846, 64685846, 64695846, 64705846, 64715846, 64725846, 64735846, 64745846, 64755846, 64765846, 64775846]</msg>
<status status="PASS" starttime="20201112 09:46:35.217" endtime="20201112 09:46:35.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:35.212" endtime="20201112 09:46:35.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:35.227" endtime="20201112 09:46:35.517"></status>
</kw>
<msg timestamp="20201112 09:46:35.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019438944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0396265, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:46:35.224" endtime="20201112 09:46:35.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:35.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019438944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0396265, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:46:35.521" endtime="20201112 09:46:35.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:35.529" endtime="20201112 09:46:35.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:35.221" endtime="20201112 09:46:35.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:35.220" endtime="20201112 09:46:35.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:35.556" level="INFO">${RESULT} = {'diff': [0, 0.020187556000000002, 0.020002681, 0.020002235999999993, 0.02000238900000001, 0.020002207999999994, 0.020002375000000003, 0.020002221999999986, 0.020002361000000024, 0.02000225, 0.0200023...</msg>
<status status="PASS" starttime="20201112 09:46:35.532" endtime="20201112 09:46:35.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:35.561" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:35.560" endtime="20201112 09:46:35.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:35.563" level="INFO">VALUE: 0.019438944</msg>
<status status="PASS" starttime="20201112 09:46:35.562" endtime="20201112 09:46:35.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:35.557" endtime="20201112 09:46:35.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:35.568" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:35.567" endtime="20201112 09:46:35.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:35.570" level="INFO">VALUE: [0.0396265, 0.059629181, 0.079631417, 0.099633806, 0.119636014, 0.139638389, 0.159640611, 0.179642972, 0.199645222, 0.219647569, 0.239649861, 0.259652167, 0.279654403, 0.299656764, 0.319659, 0.339661389, 0.359663625, 0.379665972, 0.399668236, 0.419670569, 0.439672806, 0.459675167, 0.479677417, 0.499679778, 0.519682014, 0.539684417, 0.559686611, 0.579688972, 0.599691222, 0.619693569, 0.639695833, 0.659698181, 0.679700431, 0.699702819, 0.719705014, 0.739707389, 0.759709611, 0.779711986, 0.799714222, 0.819716583, 0.839718819, 0.859721194, 0.879723417, 0.899725778, 0.919728042, 0.939730417, 0.959732625, 0.979735028, 0.999737222, 1.019739583, 1.039741819, 1.059744181, 1.079746444, 1.099748792, 1.119751028, 1.139753389, 1.159755639, 1.179758028, 1.199760306, 1.219762583, 1.239764847, 1.259767236, 1.279769444, 1.299771792, 1.319774028, 1.339776389, 1.359778653, 1.379781, 1.399783236, 1.419785597, 1.439787833, 1.459790194, 1.479792431, 1.499794875, 1.519797056, 1.539799403, 1.559801667, 1.579804, 1.599806236, 1.619808681, 1.639810847, 1.659813208, 1.679815444, 1.699817806, 1.719820042, 1.739822472, 1.759824667, 1.779827014, 1.799829264, 1.819831611, 1.839833847, 1.859836208, 1.879838458, 1.899840833, 1.919843056, 1.939845486, 1.959847653, 1.979850014, 1.99985225, 2.019854639] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:35.569" endtime="20201112 09:46:35.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:35.564" endtime="20201112 09:46:35.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:35.574" endtime="20201112 09:46:35.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:35.577" endtime="20201112 09:46:35.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:35.575" endtime="20201112 09:46:35.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:35.572" endtime="20201112 09:46:35.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:31.040" endtime="20201112 09:46:35.598"></status>
</kw>
<msg timestamp="20201112 09:46:35.598" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:35.607" endtime="20201112 09:46:39.711"></status>
</kw>
<msg timestamp="20201112 09:46:39.712" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 66055568, 'wakeups': [66065660, 66075661, 66085661, 66095661, 661056...</msg>
<status status="PASS" starttime="20201112 09:46:35.604" endtime="20201112 09:46:39.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:39.715" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 66055568, 'wakeups': [66065660, 66075661, 66085661, 66095661, 661056...</msg>
<status status="PASS" starttime="20201112 09:46:39.713" endtime="20201112 09:46:39.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:39.716" endtime="20201112 09:46:39.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:35.602" endtime="20201112 09:46:39.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:35.600" endtime="20201112 09:46:39.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:39.721" level="INFO">${RESULT} = {'wakeups': [66065660, 66075661, 66085661, 66095661, 66105661, 66115661, 66125661, 66135661, 66145661, 66155661, 66165661, 66175661, 66185661, 66195661, 66205661, 66215661, 66225661, 66235661, 6624566...</msg>
<status status="PASS" starttime="20201112 09:46:39.719" endtime="20201112 09:46:39.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:39.726" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:46:39.724" endtime="20201112 09:46:39.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:39.728" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:46:39.727" endtime="20201112 09:46:39.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:39.722" endtime="20201112 09:46:39.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:39.737" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:39.736" endtime="20201112 09:46:39.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:39.739" level="INFO">VALUE: 66055568</msg>
<status status="PASS" starttime="20201112 09:46:39.738" endtime="20201112 09:46:39.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:39.734" endtime="20201112 09:46:39.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:39.744" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:39.743" endtime="20201112 09:46:39.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:39.747" level="INFO">VALUE: [66065660, 66075661, 66085661, 66095661, 66105661, 66115661, 66125661, 66135661, 66145661, 66155661, 66165661, 66175661, 66185661, 66195661, 66205661, 66215661, 66225661, 66235661, 66245661, 66255661, 66265661, 66275661, 66285661, 66295661, 66305661, 66315661, 66325661, 66335661, 66345661, 66355661, 66365661, 66375661, 66385661, 66395661, 66405661, 66415661, 66425661, 66435661, 66445661, 66455661, 66465661, 66475661, 66485661, 66495661, 66505661, 66515661, 66525661, 66535661, 66545661, 66555661, 66565661, 66575661, 66585661, 66595661, 66605661, 66615661, 66625661, 66635661, 66645661, 66655661, 66665661, 66675661, 66685661, 66695661, 66705661, 66715661, 66725661, 66735661, 66745661, 66755661, 66765661, 66775661, 66785661, 66795661, 66805661, 66815661, 66825661, 66835661, 66845661, 66855661, 66865661, 66875661, 66885661, 66895661, 66905661, 66915661, 66925661, 66935661, 66945661, 66955661, 66965661, 66975661, 66985661, 66995661, 67005661, 67015661, 67025661, 67035661, 67045661, 67055661]</msg>
<status status="PASS" starttime="20201112 09:46:39.745" endtime="20201112 09:46:39.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:39.741" endtime="20201112 09:46:39.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:39.754" endtime="20201112 09:46:40.046"></status>
</kw>
<msg timestamp="20201112 09:46:40.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020578417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040765236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:39.752" endtime="20201112 09:46:40.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:46:40.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020578417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040765236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:46:40.050" endtime="20201112 09:46:40.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:40.057" endtime="20201112 09:46:40.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:39.750" endtime="20201112 09:46:40.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:39.748" endtime="20201112 09:46:40.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:46:40.084" level="INFO">${RESULT} = {'diff': [0, 0.020186819, 0.020004707999999996, 0.020002250000000006, 0.02000234799999999, 0.020002222, 0.020002375000000003, 0.020002236000000007, 0.020002347000000004, 0.020002221999999986, 0.020002...</msg>
<status status="PASS" starttime="20201112 09:46:40.060" endtime="20201112 09:46:40.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:40.089" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:46:40.088" endtime="20201112 09:46:40.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:40.091" level="INFO">VALUE: 0.020578417</msg>
<status status="PASS" starttime="20201112 09:46:40.090" endtime="20201112 09:46:40.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:40.085" endtime="20201112 09:46:40.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:46:40.096" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:46:40.095" endtime="20201112 09:46:40.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:46:40.098" level="INFO">VALUE: [0.040765236, 0.060769944, 0.080772194, 0.100774542, 0.120776764, 0.140779139, 0.160781375, 0.180783722, 0.200785944, 0.220788333, 0.240790556, 0.260792944, 0.280795139, 0.300797514, 0.32079975, 0.340802097, 0.360804347, 0.380806694, 0.400808931, 0.420811292, 0.440813556, 0.460815889, 0.480818111, 0.500820472, 0.520822708, 0.540825069, 0.560827306, 0.580829667, 0.600831917, 0.620834264, 0.6408365, 0.660838875, 0.680841097, 0.700843472, 0.720845694, 0.740848097, 0.760850278, 0.780852639, 0.800854903, 0.820857236, 0.840859486, 0.860861875, 0.880864083, 0.900866444, 0.920868667, 0.940871042, 0.960873292, 0.980875653, 1.000877861, 1.020880222, 1.040882472, 1.060884833, 1.080887056, 1.100889417, 1.120891639, 1.140894014, 1.160896236, 1.180898694, 1.200900903, 1.220903194, 1.240905431, 1.260907806, 1.280910042, 1.300912389, 1.320914625, 1.340917, 1.360919222, 1.380921583, 1.400923819, 1.420926181, 1.440928431, 1.460930792, 1.480933014, 1.500935375, 1.520937681, 1.540939986, 1.560942208, 1.580944569, 1.600946806, 1.620949167, 1.640951417, 1.660953764, 1.680956, 1.700958375, 1.720960625, 1.740962958, 1.76096525, 1.780967556, 1.800969792, 1.820972153, 1.840974389, 1.86097675, 1.880978986, 1.900981347, 1.920983583, 1.940985972, 1.960988167, 1.980990528, 2.000992792, 2.020995139] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:46:40.098" endtime="20201112 09:46:40.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:40.092" endtime="20201112 09:46:40.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:46:40.102" endtime="20201112 09:46:40.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:46:40.106" endtime="20201112 09:46:40.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:40.104" endtime="20201112 09:46:40.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:40.100" endtime="20201112 09:46:40.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:35.599" endtime="20201112 09:46:40.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.478" endtime="20201112 09:46:40.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:46:26.477" endtime="20201112 09:46:40.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.923" endtime="20201112 09:46:40.127"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 09:44:23.846" endtime="20201112 09:46:40.128" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:44:22.327" endtime="20201112 09:46:40.131"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201112 09:42:36.679" endtime="20201112 09:46:40.146"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
