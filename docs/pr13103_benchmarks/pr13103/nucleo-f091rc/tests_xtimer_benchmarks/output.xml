<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 10:13:35.627" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.191" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:13:36.200" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:13:38.085" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:13:36.190" endtime="20201112 10:13:38.086"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.088" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:13:38.087" endtime="20201112 10:13:38.088"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.188" endtime="20201112 10:13:38.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:38.091" endtime="20201112 10:13:38.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.090" endtime="20201112 10:13:38.277"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.291" endtime="20201112 10:13:38.310"></status>
</kw>
<msg timestamp="20201112 10:13:38.311" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['in(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f0...</msg>
<status status="PASS" starttime="20201112 10:13:38.289" endtime="20201112 10:13:38.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.313" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['in(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f0...</msg>
<status status="PASS" starttime="20201112 10:13:38.312" endtime="20201112 10:13:38.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.316" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:38.314" endtime="20201112 10:13:38.317"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:38.287" endtime="20201112 10:13:38.317"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:38.284" endtime="20201112 10:13:38.318"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.283" endtime="20201112 10:13:38.318"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:38.322" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:38.321" endtime="20201112 10:13:38.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.319" endtime="20201112 10:13:38.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.282" endtime="20201112 10:13:38.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.281" endtime="20201112 10:13:38.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.324" endtime="20201112 10:13:38.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.280" endtime="20201112 10:13:38.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.327" endtime="20201112 10:13:38.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.278" endtime="20201112 10:13:38.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.186" endtime="20201112 10:13:38.329"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:38.335" endtime="20201112 10:13:38.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.334" endtime="20201112 10:13:38.355"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.370" endtime="20201112 10:13:38.389"></status>
</kw>
<msg timestamp="20201112 10:13:38.389" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:38.368" endtime="20201112 10:13:38.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.392" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:38.390" endtime="20201112 10:13:38.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.395" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:38.393" endtime="20201112 10:13:38.395"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:38.366" endtime="20201112 10:13:38.395"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:38.363" endtime="20201112 10:13:38.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.362" endtime="20201112 10:13:38.396"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:38.400" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:38.399" endtime="20201112 10:13:38.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.397" endtime="20201112 10:13:38.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.361" endtime="20201112 10:13:38.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.360" endtime="20201112 10:13:38.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.402" endtime="20201112 10:13:38.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.358" endtime="20201112 10:13:38.404"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.356" endtime="20201112 10:13:38.404"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.333" endtime="20201112 10:13:38.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.412" endtime="20201112 10:13:38.422"></status>
</kw>
<msg timestamp="20201112 10:13:38.423" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:38.410" endtime="20201112 10:13:38.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.425" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:38.424" endtime="20201112 10:13:38.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.426" endtime="20201112 10:13:38.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.407" endtime="20201112 10:13:38.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.405" endtime="20201112 10:13:38.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.433" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 10:13:38.432" endtime="20201112 10:13:38.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.435" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 10:13:38.434" endtime="20201112 10:13:38.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.430" endtime="20201112 10:13:38.436"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:38.330" endtime="20201112 10:13:38.437" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:13:35.740" endtime="20201112 10:13:38.440"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.492" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:13:38.500" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:13:39.884" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:13:38.491" endtime="20201112 10:13:39.886"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.892" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:13:39.888" endtime="20201112 10:13:39.893"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.490" endtime="20201112 10:13:39.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:39.899" endtime="20201112 10:13:40.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.896" endtime="20201112 10:13:40.123"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.135" endtime="20201112 10:13:40.155"></status>
</kw>
<msg timestamp="20201112 10:13:40.155" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f...</msg>
<status status="PASS" starttime="20201112 10:13:40.134" endtime="20201112 10:13:40.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.158" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f...</msg>
<status status="PASS" starttime="20201112 10:13:40.156" endtime="20201112 10:13:40.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.161" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:40.159" endtime="20201112 10:13:40.161"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:40.131" endtime="20201112 10:13:40.162"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:40.129" endtime="20201112 10:13:40.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.128" endtime="20201112 10:13:40.163"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:40.166" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:40.166" endtime="20201112 10:13:40.167"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.164" endtime="20201112 10:13:40.167"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.127" endtime="20201112 10:13:40.167"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.126" endtime="20201112 10:13:40.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.168" endtime="20201112 10:13:40.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.125" endtime="20201112 10:13:40.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.171" endtime="20201112 10:13:40.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.124" endtime="20201112 10:13:40.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.488" endtime="20201112 10:13:40.173"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:40.179" endtime="20201112 10:13:40.199"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.178" endtime="20201112 10:13:40.199"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.213" endtime="20201112 10:13:40.232"></status>
</kw>
<msg timestamp="20201112 10:13:40.233" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:40.211" endtime="20201112 10:13:40.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.235" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:40.234" endtime="20201112 10:13:40.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.238" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:40.236" endtime="20201112 10:13:40.239"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:40.208" endtime="20201112 10:13:40.239"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:40.206" endtime="20201112 10:13:40.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.204" endtime="20201112 10:13:40.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:40.244" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:40.243" endtime="20201112 10:13:40.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.241" endtime="20201112 10:13:40.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.204" endtime="20201112 10:13:40.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.203" endtime="20201112 10:13:40.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.246" endtime="20201112 10:13:40.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.202" endtime="20201112 10:13:40.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.200" endtime="20201112 10:13:40.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.176" endtime="20201112 10:13:40.248"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 10:13:40.251" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.258" endtime="20201112 10:13:40.269"></status>
</kw>
<msg timestamp="20201112 10:13:40.269" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:40.257" endtime="20201112 10:13:40.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.272" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:40.270" endtime="20201112 10:13:40.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.273" endtime="20201112 10:13:40.274"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.254" endtime="20201112 10:13:40.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.252" endtime="20201112 10:13:40.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.282" endtime="20201112 10:13:40.573"></status>
</kw>
<msg timestamp="20201112 10:13:40.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069340222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069340694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:40.280" endtime="20201112 10:13:40.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069340222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069340694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:40.577" endtime="20201112 10:13:40.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.585" endtime="20201112 10:13:40.587"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.278" endtime="20201112 10:13:40.587"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.276" endtime="20201112 10:13:40.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.592" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:40.591" endtime="20201112 10:13:40.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.597" level="INFO">VALUE: [{'time': 0.069340222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069340694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.069353083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2389000000001538e-05, 'source_diff': 1.2389000000001538e-05}, {'time': 0.069353556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069362056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.5000000000085e-06, 'source_diff': 8.5000000000085e-06}, {'time': 0.069362528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069371222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.693999999989654e-06, 'source_diff': 8.693999999989654e-06}, {'time': 0.069371708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.069379069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.069379542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069385889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.347000000003766e-06, 'source_diff': 6.347000000003766e-06}, {'time': 0.069386375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.069400222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.384699999999739e-05, 'source_diff': 1.384699999999739e-05}, {'time': 0.069400708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.069412569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.186099999998802e-05, 'source_diff': 1.186099999998802e-05}, {'time': 0.069413042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069417431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000007415e-06, 'source_diff': 4.389000000007415e-06}, {'time': 0.069417903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069432403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4500000000000624e-05, 'source_diff': 1.4500000000000624e-05}, {'time': 0.069432875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069443403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999995763e-05, 'source_diff': 1.0527999999995763e-05}, {'time': 0.069443875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069455236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1361000000001398e-05, 'source_diff': 1.1361000000001398e-05}, {'time': 0.069455708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069469417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3709000000000637e-05, 'source_diff': 1.3709000000000637e-05}, {'time': 0.069469889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069476236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3469999999898885e-06, 'source_diff': 6.3469999999898885e-06}, {'time': 0.069476708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069484903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.069485375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069499403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.069499889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.069512903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3014000000005632e-05, 'source_diff': 1.3014000000005632e-05}, {'time': 0.069513389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.06951825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000008775e-06, 'source_diff': 4.861000000008775e-06}, {'time': 0.069518722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069525403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.680999999994497e-06, 'source_diff': 6.680999999994497e-06}, {'time': 0.069525889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.069539736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847000000011267e-05, 'source_diff': 1.3847000000011267e-05}, {'time': 0.069540222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.06954925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.02800000000814e-06, 'source_diff': 9.02800000000814e-06}, {'time': 0.069549722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.069560417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0695000000005006e-05, 'source_diff': 1.0695000000005006e-05}, {'time': 0.069560889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.06956525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999994397e-06, 'source_diff': 4.360999999994397e-06}, {'time': 0.069565722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069577083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1361000000001398e-05, 'source_diff': 1.1361000000001398e-05}, {'time': 0.069577556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069588083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.052699999999629e-05, 'source_diff': 1.052699999999629e-05}, {'time': 0.069588556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069593931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.069594403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.06959875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.069599222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069607917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.695000000003006e-06, 'source_diff': 8.695000000003006e-06}, {'time': 0.069608389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069617583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.193999999990154e-06, 'source_diff': 9.193999999990154e-06}, {'time': 0.069618069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.06963275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.468099999998862e-05, 'source_diff': 1.468099999998862e-05}, {'time': 0.069633236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.069645097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1861000000001898e-05, 'source_diff': 1.1861000000001898e-05}, {'time': 0.069645569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069651083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.069651569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.069665097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.069665569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069670111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.542000000010149e-06, 'source_diff': 4.542000000010149e-06}, {'time': 0.069670583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.069684097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3514000000006132e-05, 'source_diff': 1.3514000000006132e-05}, {'time': 0.069684569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069696778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2208999999999137e-05, 'source_diff': 1.2208999999999137e-05}, {'time': 0.06969725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069711264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4013999999992754e-05, 'source_diff': 1.4013999999992754e-05}, {'time': 0.069711736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069719097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.069719569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069732931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3362000000002872e-05, 'source_diff': 1.3362000000002872e-05}, {'time': 0.069733403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069739431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.02800000000514e-06, 'source_diff': 6.02800000000514e-06}, {'time': 0.069739917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.069752097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2180000000000524e-05, 'source_diff': 1.2180000000000524e-05}, {'time': 0.069752583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.069760944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.069761417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069768597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.179999999995523e-06, 'source_diff': 7.179999999995523e-06}, {'time': 0.069769083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.069780097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1014000000003632e-05, 'source_diff': 1.1014000000003632e-05}, {'time': 0.069780583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.069794778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4195000000008506e-05, 'source_diff': 1.4195000000008506e-05}, {'time': 0.06979525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069808472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3221999999993295e-05, 'source_diff': 1.3221999999993295e-05}, {'time': 0.069808944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069819444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.069819917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.069828139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.222000000002172e-06, 'source_diff': 8.222000000002172e-06}, {'time': 0.069828611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069837278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000003866e-06, 'source_diff': 8.667000000003866e-06}, {'time': 0.06983775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.069847111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.069847583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:40.593" endtime="20201112 10:13:40.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.588" endtime="20201112 10:13:40.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:40.624" level="INFO">${debug-compressed} = {'time': [0.069340222, 0.069340694, 0.069353083, 0.069353556, 0.069362056, 0.069362528, 0.069371222, 0.069371708, 0.069379069, 0.069379542, 0.069385889, 0.069386375, 0.069400222, 0.069400708, 0.069412...</msg>
<status status="PASS" starttime="20201112 10:13:40.601" endtime="20201112 10:13:40.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.628" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:40.627" endtime="20201112 10:13:40.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.632" level="INFO">VALUE: {'time': [0.069340222, 0.069340694, 0.069353083, 0.069353556, 0.069362056, 0.069362528, 0.069371222, 0.069371708, 0.069379069, 0.069379542, 0.069385889, 0.069386375, 0.069400222, 0.069400708, 0.069412569, 0.069413042, 0.069417431, 0.069417903, 0.069432403, 0.069432875, 0.069443403, 0.069443875, 0.069455236, 0.069455708, 0.069469417, 0.069469889, 0.069476236, 0.069476708, 0.069484903, 0.069485375, 0.069499403, 0.069499889, 0.069512903, 0.069513389, 0.06951825, 0.069518722, 0.069525403, 0.069525889, 0.069539736, 0.069540222, 0.06954925, 0.069549722, 0.069560417, 0.069560889, 0.06956525, 0.069565722, 0.069577083, 0.069577556, 0.069588083, 0.069588556, 0.069593931, 0.069594403, 0.06959875, 0.069599222, 0.069607917, 0.069608389, 0.069617583, 0.069618069, 0.06963275, 0.069633236, 0.069645097, 0.069645569, 0.069651083, 0.069651569, 0.069665097, 0.069665569, 0.069670111, 0.069670583, 0.069684097, 0.069684569, 0.069696778, 0.06969725, 0.069711264, 0.069711736, 0.069719097, 0.069719569, 0.069732931, 0.069733403, 0.069739431, 0.069739917, 0.069752097, 0.069752583, 0.069760944, 0.069761417, 0.069768597, 0.069769083, 0.069780097, 0.069780583, 0.069794778, 0.06979525, 0.069808472, 0.069808944, 0.069819444, 0.069819917, 0.069828139, 0.069828611, 0.069837278, 0.06983775, 0.069847111, 0.069847583], 'eventdiff': [0, 4.7199999998748243e-07, 1.2389000000001538e-05, 4.7300000000083386e-07, 8.5000000000085e-06, 4.720000000013602e-07, 8.693999999989654e-06, 4.86000000007869e-07, 7.360999999997397e-06, 4.7300000000083386e-07, 6.347000000003766e-06, 4.859999999939912e-07, 1.384699999999739e-05, 4.86000000007869e-07, 1.186099999998802e-05, 4.7300000000083386e-07, 4.389000000007415e-06, 4.720000000013602e-07, 1.4500000000000624e-05, 4.720000000013602e-07, 1.0527999999995763e-05, 4.720000000013602e-07, 1.1361000000001398e-05, 4.720000000013602e-07, 1.3709000000000637e-05, 4.720000000013602e-07, 6.3469999999898885e-06, 4.720000000013602e-07, 8.195000000002506e-06, 4.720000000013602e-07, 1.4027999999999263e-05, 4.859999999939912e-07, 1.3014000000005632e-05, 4.859999999939912e-07, 4.861000000008775e-06, 4.720000000013602e-07, 6.680999999994497e-06, 4.859999999939912e-07, 1.3847000000011267e-05, 4.859999999939912e-07, 9.02800000000814e-06, 4.7199999998748243e-07, 1.0695000000005006e-05, 4.720000000013602e-07, 4.360999999994397e-06, 4.720000000013602e-07, 1.1361000000001398e-05, 4.7300000000083386e-07, 1.052699999999629e-05, 4.7300000000083386e-07, 5.375000000001906e-06, 4.720000000013602e-07, 4.347000000001766e-06, 4.720000000013602e-07, 8.695000000003006e-06, 4.720000000013602e-07, 9.193999999990154e-06, 4.86000000007869e-07, 1.468099999998862e-05, 4.86000000007869e-07, 1.1861000000001898e-05, 4.720000000013602e-07, 5.5139999999981315e-06, 4.859999999939912e-07, 1.3527999999998763e-05, 4.720000000013602e-07, 4.542000000010149e-06, 4.7199999998748243e-07, 1.3514000000006132e-05, 4.720000000013602e-07, 1.2208999999999137e-05, 4.720000000013602e-07, 1.4013999999992754e-05, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.3362000000002872e-05, 4.720000000013602e-07, 6.02800000000514e-06, 4.859999999939912e-07, 1.2180000000000524e-05, 4.86000000007869e-07, 8.360999999998397e-06, 4.7300000000083386e-07, 7.179999999995523e-06, 4.859999999939912e-07, 1.1014000000003632e-05, 4.859999999939912e-07, 1.4195000000008506e-05, 4.720000000013602e-07, 1.3221999999993295e-05, 4.720000000013602e-07, 1.0499999999996623e-05, 4.7300000000083386e-07, 8.222000000002172e-06, 4.720000000013602e-07, 8.667000000003866e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07], 'source_diff': [0, 4.7199999998748243e-07, 1.2389000000001538e-05, 4.7300000000083386e-07, 8.5000000000085e-06, 4.720000000013602e-07, 8.693999999989654e-06, 4.86000000007869e-07, 7.360999999997397e-06, 4.7300000000083386e-07, 6.347000000003766e-06, 4.859999999939912e-07, 1.384699999999739e-05, 4.86000000007869e-07, 1.186099999998802e-05, 4.7300000000083386e-07, 4.389000000007415e-06, 4.720000000013602e-07, 1.4500000000000624e-05, 4.720000000013602e-07, 1.0527999999995763e-05, 4.720000000013602e-07, 1.1361000000001398e-05, 4.720000000013602e-07, 1.3709000000000637e-05, 4.720000000013602e-07, 6.3469999999898885e-06, 4.720000000013602e-07, 8.195000000002506e-06, 4.720000000013602e-07, 1.4027999999999263e-05, 4.859999999939912e-07, 1.3014000000005632e-05, 4.859999999939912e-07, 4.861000000008775e-06, 4.720000000013602e-07, 6.680999999994497e-06, 4.859999999939912e-07, 1.3847000000011267e-05, 4.859999999939912e-07, 9.02800000000814e-06, 4.7199999998748243e-07, 1.0695000000005006e-05, 4.720000000013602e-07, 4.360999999994397e-06, 4.720000000013602e-07, 1.1361000000001398e-05, 4.7300000000083386e-07, 1.052699999999629e-05, 4.7300000000083386e-07, 5.375000000001906e-06, 4.720000000013602e-07, 4.347000000001766e-06, 4.720000000013602e-07, 8.695000000003006e-06, 4.720000000013602e-07, 9.193999999990154e-06, 4.86000000007869e-07, 1.468099999998862e-05, 4.86000000007869e-07, 1.1861000000001898e-05, 4.720000000013602e-07, 5.5139999999981315e-06, 4.859999999939912e-07, 1.3527999999998763e-05, 4.720000000013602e-07, 4.542000000010149e-06, 4.7199999998748243e-07, 1.3514000000006132e-05, 4.720000000013602e-07, 1.2208999999999137e-05, 4.720000000013602e-07, 1.4013999999992754e-05, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.3362000000002872e-05, 4.720000000013602e-07, 6.02800000000514e-06, 4.859999999939912e-07, 1.2180000000000524e-05, 4.86000000007869e-07, 8.360999999998397e-06, 4.7300000000083386e-07, 7.179999999995523e-06, 4.859999999939912e-07, 1.1014000000003632e-05, 4.859999999939912e-07, 1.4195000000008506e-05, 4.720000000013602e-07, 1.3221999999993295e-05, 4.720000000013602e-07, 1.0499999999996623e-05, 4.7300000000083386e-07, 8.222000000002172e-06, 4.720000000013602e-07, 8.667000000003866e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:40.629" endtime="20201112 10:13:40.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.625" endtime="20201112 10:13:40.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:40.638" level="INFO">${RESULT} = [{'time': 0.069340694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.069353556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:40.635" endtime="20201112 10:13:40.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:40.652" level="INFO">${GPIO_OVERHEAD} = {'time': [0.069340694, 0.069353556, 0.069362528, 0.069371708, 0.069379542, 0.069386375, 0.069400708, 0.069413042, 0.069417903, 0.069432875, 0.069443875, 0.069455708, 0.069469889, 0.069476708, 0.069485...</msg>
<status status="PASS" starttime="20201112 10:13:40.639" endtime="20201112 10:13:40.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.656" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:40.655" endtime="20201112 10:13:40.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.658" level="INFO">VALUE: [4.7199999998748243e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:13:40.657" endtime="20201112 10:13:40.659"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.652" endtime="20201112 10:13:40.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.661" endtime="20201112 10:13:40.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:40.665" endtime="20201112 10:13:40.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.663" endtime="20201112 10:13:40.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.660" endtime="20201112 10:13:40.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.251" endtime="20201112 10:13:40.685"></status>
</kw>
<msg timestamp="20201112 10:13:40.686" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.696" endtime="20201112 10:13:40.706"></status>
</kw>
<msg timestamp="20201112 10:13:40.706" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:40.694" endtime="20201112 10:13:40.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.709" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:40.707" endtime="20201112 10:13:40.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.710" endtime="20201112 10:13:40.712"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.689" endtime="20201112 10:13:40.712"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.688" endtime="20201112 10:13:40.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.719" endtime="20201112 10:13:41.004"></status>
</kw>
<msg timestamp="20201112 10:13:41.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020705792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020706264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:40.717" endtime="20201112 10:13:41.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020705792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020706264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:41.008" endtime="20201112 10:13:41.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.017" endtime="20201112 10:13:41.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.715" endtime="20201112 10:13:41.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.713" endtime="20201112 10:13:41.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.024" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:41.023" endtime="20201112 10:13:41.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.029" level="INFO">VALUE: [{'time': 0.020705792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020706264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020718139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.020718611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020731958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347000000000359e-05, 'source_diff': 1.3347000000000359e-05}, {'time': 0.020732431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020736972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.020737444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020749958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.020750431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020756792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.020757264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020761625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.020762097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020770806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708999999999106e-06, 'source_diff': 8.708999999999106e-06}, {'time': 0.020771278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020776292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.020776778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020784458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.679999999999493e-06, 'source_diff': 7.679999999999493e-06}, {'time': 0.020784944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020799292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4348000000000832e-05, 'source_diff': 1.4348000000000832e-05}, {'time': 0.020799778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020805792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.020806278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020816458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.020816944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020828972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.020829444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020842972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3528000000002233e-05, 'source_diff': 1.3528000000002233e-05}, {'time': 0.020843444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020855972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2528000000001233e-05, 'source_diff': 1.2528000000001233e-05}, {'time': 0.020856444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020862639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.020863111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020874972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1860999999998428e-05, 'source_diff': 1.1860999999998428e-05}, {'time': 0.020875444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020883306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.86200000000084e-06, 'source_diff': 7.86200000000084e-06}, {'time': 0.020883778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020890306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.528000000002171e-06, 'source_diff': 6.528000000002171e-06}, {'time': 0.020890778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020900986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0208000000001133e-05, 'source_diff': 1.0208000000001133e-05}, {'time': 0.020901458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020913806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2347999999998832e-05, 'source_diff': 1.2347999999998832e-05}, {'time': 0.020914292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020919319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.026999999997728e-06, 'source_diff': 5.026999999997728e-06}, {'time': 0.020919792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020932972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3180000000001524e-05, 'source_diff': 1.3180000000001524e-05}, {'time': 0.020933458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020937986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.020938458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020953153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4694999999998598e-05, 'source_diff': 1.4694999999998598e-05}, {'time': 0.020953625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020965653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2028000000000733e-05, 'source_diff': 1.2028000000000733e-05}, {'time': 0.020966125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020970653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.020971125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020976347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.020976819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020991319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4500000000000624e-05, 'source_diff': 1.4500000000000624e-05}, {'time': 0.020991792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020996667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.020997139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0210045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.021004972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021017986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3013999999998693e-05, 'source_diff': 1.3013999999998693e-05}, {'time': 0.021018472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021028486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.021028972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021033153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.021033625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021046139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.021046611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021052139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.021052611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021064153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1541999999999802e-05, 'source_diff': 1.1541999999999802e-05}, {'time': 0.021064625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021079153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.021079625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021093639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.021094125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021105139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1014000000000163e-05, 'source_diff': 1.1014000000000163e-05}, {'time': 0.021105625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.021113972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347000000002297e-06, 'source_diff': 8.347000000002297e-06}, {'time': 0.021114458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.021119486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.021119958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.021131319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1360999999997928e-05, 'source_diff': 1.1360999999997928e-05}, {'time': 0.021131792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021142653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.021143125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.021155208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2083000000003008e-05, 'source_diff': 1.2083000000003008e-05}, {'time': 0.021155681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021160819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.138000000001752e-06, 'source_diff': 5.138000000001752e-06}, {'time': 0.021161292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.021175319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.402699999999979e-05, 'source_diff': 1.402699999999979e-05}, {'time': 0.021175792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.021181153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.021181625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0211955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3874999999999998e-05, 'source_diff': 1.3874999999999998e-05}, {'time': 0.021195972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:41.025" endtime="20201112 10:13:41.030"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.020" endtime="20201112 10:13:41.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:41.056" level="INFO">${debug-compressed} = {'time': [0.020705792, 0.020706264, 0.020718139, 0.020718611, 0.020731958, 0.020732431, 0.020736972, 0.020737444, 0.020749958, 0.020750431, 0.020756792, 0.020757264, 0.020761625, 0.020762097, 0.020770...</msg>
<status status="PASS" starttime="20201112 10:13:41.031" endtime="20201112 10:13:41.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.060" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:41.059" endtime="20201112 10:13:41.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.064" level="INFO">VALUE: {'time': [0.020705792, 0.020706264, 0.020718139, 0.020718611, 0.020731958, 0.020732431, 0.020736972, 0.020737444, 0.020749958, 0.020750431, 0.020756792, 0.020757264, 0.020761625, 0.020762097, 0.020770806, 0.020771278, 0.020776292, 0.020776778, 0.020784458, 0.020784944, 0.020799292, 0.020799778, 0.020805792, 0.020806278, 0.020816458, 0.020816944, 0.020828972, 0.020829444, 0.020842972, 0.020843444, 0.020855972, 0.020856444, 0.020862639, 0.020863111, 0.020874972, 0.020875444, 0.020883306, 0.020883778, 0.020890306, 0.020890778, 0.020900986, 0.020901458, 0.020913806, 0.020914292, 0.020919319, 0.020919792, 0.020932972, 0.020933458, 0.020937986, 0.020938458, 0.020953153, 0.020953625, 0.020965653, 0.020966125, 0.020970653, 0.020971125, 0.020976347, 0.020976819, 0.020991319, 0.020991792, 0.020996667, 0.020997139, 0.0210045, 0.021004972, 0.021017986, 0.021018472, 0.021028486, 0.021028972, 0.021033153, 0.021033625, 0.021046139, 0.021046611, 0.021052139, 0.021052611, 0.021064153, 0.021064625, 0.021079153, 0.021079625, 0.021093639, 0.021094125, 0.021105139, 0.021105625, 0.021113972, 0.021114458, 0.021119486, 0.021119958, 0.021131319, 0.021131792, 0.021142653, 0.021143125, 0.021155208, 0.021155681, 0.021160819, 0.021161292, 0.021175319, 0.021175792, 0.021181153, 0.021181625, 0.0211955, 0.021195972], 'eventdiff': [0, 4.7199999999789077e-07, 1.1875000000001468e-05, 4.720000000013602e-07, 1.3347000000000359e-05, 4.729999999973644e-07, 4.541000000000267e-06, 4.720000000013602e-07, 1.2513999999998193e-05, 4.7300000000083386e-07, 6.360999999999867e-06, 4.720000000013602e-07, 4.360999999997867e-06, 4.720000000013602e-07, 8.708999999999106e-06, 4.720000000013602e-07, 5.0139999999976315e-06, 4.860000000009301e-07, 7.679999999999493e-06, 4.860000000009301e-07, 1.4348000000000832e-05, 4.860000000009301e-07, 6.0139999999986316e-06, 4.860000000009301e-07, 1.0179999999998524e-05, 4.860000000009301e-07, 1.2028000000000733e-05, 4.7199999999789077e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 1.2528000000001233e-05, 4.7199999999789077e-07, 6.195000000000506e-06, 4.720000000013602e-07, 1.1860999999998428e-05, 4.720000000013602e-07, 7.86200000000084e-06, 4.7199999999789077e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 1.0208000000001133e-05, 4.720000000013602e-07, 1.2347999999998832e-05, 4.860000000009301e-07, 5.026999999997728e-06, 4.7300000000083386e-07, 1.3180000000001524e-05, 4.859999999974607e-07, 4.528000000000171e-06, 4.720000000013602e-07, 1.4694999999998598e-05, 4.720000000013602e-07, 1.2028000000000733e-05, 4.7199999999789077e-07, 4.528000000000171e-06, 4.720000000013602e-07, 5.221999999999172e-06, 4.720000000013602e-07, 1.4500000000000624e-05, 4.729999999973644e-07, 4.875000000001406e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.3013999999998693e-05, 4.860000000009301e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 4.1809999999989356e-06, 4.720000000013602e-07, 1.2513999999998193e-05, 4.720000000013602e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.4013999999999693e-05, 4.859999999974607e-07, 1.1014000000000163e-05, 4.860000000009301e-07, 8.347000000002297e-06, 4.859999999974607e-07, 5.028000000000671e-06, 4.720000000013602e-07, 1.1360999999997928e-05, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 1.2083000000003008e-05, 4.729999999973644e-07, 5.138000000001752e-06, 4.7300000000083386e-07, 1.402699999999979e-05, 4.729999999973644e-07, 5.361000000002336e-06, 4.7199999999789077e-07, 1.3874999999999998e-05, 4.720000000013602e-07], 'source_diff': [0, 4.7199999999789077e-07, 1.1875000000001468e-05, 4.720000000013602e-07, 1.3347000000000359e-05, 4.729999999973644e-07, 4.541000000000267e-06, 4.720000000013602e-07, 1.2513999999998193e-05, 4.7300000000083386e-07, 6.360999999999867e-06, 4.720000000013602e-07, 4.360999999997867e-06, 4.720000000013602e-07, 8.708999999999106e-06, 4.720000000013602e-07, 5.0139999999976315e-06, 4.860000000009301e-07, 7.679999999999493e-06, 4.860000000009301e-07, 1.4348000000000832e-05, 4.860000000009301e-07, 6.0139999999986316e-06, 4.860000000009301e-07, 1.0179999999998524e-05, 4.860000000009301e-07, 1.2028000000000733e-05, 4.7199999999789077e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 1.2528000000001233e-05, 4.7199999999789077e-07, 6.195000000000506e-06, 4.720000000013602e-07, 1.1860999999998428e-05, 4.720000000013602e-07, 7.86200000000084e-06, 4.7199999999789077e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 1.0208000000001133e-05, 4.720000000013602e-07, 1.2347999999998832e-05, 4.860000000009301e-07, 5.026999999997728e-06, 4.7300000000083386e-07, 1.3180000000001524e-05, 4.859999999974607e-07, 4.528000000000171e-06, 4.720000000013602e-07, 1.4694999999998598e-05, 4.720000000013602e-07, 1.2028000000000733e-05, 4.7199999999789077e-07, 4.528000000000171e-06, 4.720000000013602e-07, 5.221999999999172e-06, 4.720000000013602e-07, 1.4500000000000624e-05, 4.729999999973644e-07, 4.875000000001406e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.3013999999998693e-05, 4.860000000009301e-07, 1.0013999999999162e-05, 4.860000000009301e-07, 4.1809999999989356e-06, 4.720000000013602e-07, 1.2513999999998193e-05, 4.720000000013602e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.4013999999999693e-05, 4.859999999974607e-07, 1.1014000000000163e-05, 4.860000000009301e-07, 8.347000000002297e-06, 4.859999999974607e-07, 5.028000000000671e-06, 4.720000000013602e-07, 1.1360999999997928e-05, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 1.2083000000003008e-05, 4.729999999973644e-07, 5.138000000001752e-06, 4.7300000000083386e-07, 1.402699999999979e-05, 4.729999999973644e-07, 5.361000000002336e-06, 4.7199999999789077e-07, 1.3874999999999998e-05, 4.720000000013602e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201112 10:13:41.061" endtime="20201112 10:13:41.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.057" endtime="20201112 10:13:41.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:41.070" level="INFO">${RESULT} = [{'time': 0.020706264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020718611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:41.067" endtime="20201112 10:13:41.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:41.084" level="INFO">${GPIO_OVERHEAD} = {'time': [0.020706264, 0.020718611, 0.020732431, 0.020737444, 0.020750431, 0.020757264, 0.020762097, 0.020771278, 0.020776778, 0.020784944, 0.020799778, 0.020806278, 0.020816944, 0.020829444, 0.020843...</msg>
<status status="PASS" starttime="20201112 10:13:41.071" endtime="20201112 10:13:41.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.088" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:41.087" endtime="20201112 10:13:41.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.091" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:13:41.090" endtime="20201112 10:13:41.091"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.085" endtime="20201112 10:13:41.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.094" endtime="20201112 10:13:41.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:41.097" endtime="20201112 10:13:41.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.096" endtime="20201112 10:13:41.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.092" endtime="20201112 10:13:41.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.686" endtime="20201112 10:13:41.118"></status>
</kw>
<msg timestamp="20201112 10:13:41.118" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.126" endtime="20201112 10:13:41.136"></status>
</kw>
<msg timestamp="20201112 10:13:41.137" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:41.125" endtime="20201112 10:13:41.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.139" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:41.138" endtime="20201112 10:13:41.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.140" endtime="20201112 10:13:41.142"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.122" endtime="20201112 10:13:41.143"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.120" endtime="20201112 10:13:41.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.150" endtime="20201112 10:13:41.436"></status>
</kw>
<msg timestamp="20201112 10:13:41.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018729889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018730361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:41.148" endtime="20201112 10:13:41.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018729889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018730361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:41.440" endtime="20201112 10:13:41.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.448" endtime="20201112 10:13:41.450"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.145" endtime="20201112 10:13:41.451"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.144" endtime="20201112 10:13:41.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.455" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:41.454" endtime="20201112 10:13:41.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.460" level="INFO">VALUE: [{'time': 0.018729889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018730361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018741722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1360999999997928e-05, 'source_diff': 1.1360999999997928e-05}, {'time': 0.018742194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018750875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.018751361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018760722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.018761194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018771722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0528000000002702e-05, 'source_diff': 1.0528000000002702e-05}, {'time': 0.018772194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018784722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2528000000001233e-05, 'source_diff': 1.2528000000001233e-05}, {'time': 0.018785194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018792403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208999999997606e-06, 'source_diff': 7.208999999997606e-06}, {'time': 0.018792875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018805236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.018805708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018809861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018810347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018824889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4541999999999333e-05, 'source_diff': 1.4541999999999333e-05}, {'time': 0.018825361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018831542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018832014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018840722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.018841194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018854542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347999999999832e-05, 'source_diff': 1.3347999999999832e-05}, {'time': 0.018855014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018864042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.018864514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018871069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.555000000001837e-06, 'source_diff': 6.555000000001837e-06}, {'time': 0.018871542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018883889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.018884361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018890708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.347000000000297e-06, 'source_diff': 6.347000000000297e-06}, {'time': 0.018891194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018902556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1362000000000871e-05, 'source_diff': 1.1362000000000871e-05}, {'time': 0.018903028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018908389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.018908861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018920375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.018920861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018932736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1874999999997998e-05, 'source_diff': 1.1874999999997998e-05}, {'time': 0.018933208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018944222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1014000000000163e-05, 'source_diff': 1.1014000000000163e-05}, {'time': 0.018944694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018954222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527999999998232e-06, 'source_diff': 9.527999999998232e-06}, {'time': 0.018954694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018966556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1861999999997902e-05, 'source_diff': 1.1861999999997902e-05}, {'time': 0.018967028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018980056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3027999999998263e-05, 'source_diff': 1.3027999999998263e-05}, {'time': 0.018980528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018994569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.404099999999936e-05, 'source_diff': 1.404099999999936e-05}, {'time': 0.018995042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019004889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.019005361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019019236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3874999999999998e-05, 'source_diff': 1.3874999999999998e-05}, {'time': 0.019019708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01902775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.019028222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019038722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0500000000000093e-05, 'source_diff': 1.0500000000000093e-05}, {'time': 0.019039208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019047056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.84800000000127e-06, 'source_diff': 7.84800000000127e-06}, {'time': 0.019047542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019061236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3693999999998124e-05, 'source_diff': 1.3693999999998124e-05}, {'time': 0.019061708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019071903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0195000000001037e-05, 'source_diff': 1.0195000000001037e-05}, {'time': 0.019072375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019077069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.019077542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019081903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.019082375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019089569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.194000000002032e-06, 'source_diff': 7.194000000002032e-06}, {'time': 0.019090042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019100403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0360999999996928e-05, 'source_diff': 1.0360999999996928e-05}, {'time': 0.019100875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019115403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.019115875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019128083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2207999999999664e-05, 'source_diff': 1.2207999999999664e-05}, {'time': 0.019128556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019137403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.019137889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01914825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0360999999996928e-05, 'source_diff': 1.0360999999996928e-05}, {'time': 0.019148722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019159403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0680999999998497e-05, 'source_diff': 1.0680999999998497e-05}, {'time': 0.019159889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019168903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.019169389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019182917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3528000000002233e-05, 'source_diff': 1.3528000000002233e-05}, {'time': 0.019183389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01919275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.361000000002867e-06, 'source_diff': 9.361000000002867e-06}, {'time': 0.019193222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019199583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999999867e-06, 'source_diff': 6.360999999999867e-06}, {'time': 0.019200056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01920725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.019207722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019212764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.019213236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019227597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4360999999997459e-05, 'source_diff': 1.4360999999997459e-05}, {'time': 0.019228069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01923675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999999967e-06, 'source_diff': 8.680999999999967e-06}, {'time': 0.019237222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:41.456" endtime="20201112 10:13:41.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.452" endtime="20201112 10:13:41.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:41.488" level="INFO">${debug-compressed} = {'time': [0.018729889, 0.018730361, 0.018741722, 0.018742194, 0.018750875, 0.018751361, 0.018760722, 0.018761194, 0.018771722, 0.018772194, 0.018784722, 0.018785194, 0.018792403, 0.018792875, 0.018805...</msg>
<status status="PASS" starttime="20201112 10:13:41.463" endtime="20201112 10:13:41.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.492" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:41.491" endtime="20201112 10:13:41.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.496" level="INFO">VALUE: {'time': [0.018729889, 0.018730361, 0.018741722, 0.018742194, 0.018750875, 0.018751361, 0.018760722, 0.018761194, 0.018771722, 0.018772194, 0.018784722, 0.018785194, 0.018792403, 0.018792875, 0.018805236, 0.018805708, 0.018809861, 0.018810347, 0.018824889, 0.018825361, 0.018831542, 0.018832014, 0.018840722, 0.018841194, 0.018854542, 0.018855014, 0.018864042, 0.018864514, 0.018871069, 0.018871542, 0.018883889, 0.018884361, 0.018890708, 0.018891194, 0.018902556, 0.018903028, 0.018908389, 0.018908861, 0.018920375, 0.018920861, 0.018932736, 0.018933208, 0.018944222, 0.018944694, 0.018954222, 0.018954694, 0.018966556, 0.018967028, 0.018980056, 0.018980528, 0.018994569, 0.018995042, 0.019004889, 0.019005361, 0.019019236, 0.019019708, 0.01902775, 0.019028222, 0.019038722, 0.019039208, 0.019047056, 0.019047542, 0.019061236, 0.019061708, 0.019071903, 0.019072375, 0.019077069, 0.019077542, 0.019081903, 0.019082375, 0.019089569, 0.019090042, 0.019100403, 0.019100875, 0.019115403, 0.019115875, 0.019128083, 0.019128556, 0.019137403, 0.019137889, 0.01914825, 0.019148722, 0.019159403, 0.019159889, 0.019168903, 0.019169389, 0.019182917, 0.019183389, 0.01919275, 0.019193222, 0.019199583, 0.019200056, 0.01920725, 0.019207722, 0.019212764, 0.019213236, 0.019227597, 0.019228069, 0.01923675, 0.019237222], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 4.720000000013602e-07, 1.1360999999997928e-05, 4.720000000013602e-07, 8.680999999999967e-06, 4.860000000009301e-07, 9.360999999999398e-06, 4.7199999999789077e-07, 1.0528000000002702e-05, 4.7199999999789077e-07, 1.2528000000001233e-05, 4.720000000013602e-07, 7.208999999997606e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07, 4.152999999999796e-06, 4.860000000009301e-07, 1.4541999999999333e-05, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 8.707999999999633e-06, 4.7199999999789077e-07, 1.3347999999999832e-05, 4.720000000013602e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 6.555000000001837e-06, 4.7300000000083386e-07, 1.2346999999999358e-05, 4.7199999999789077e-07, 6.347000000000297e-06, 4.860000000009301e-07, 1.1362000000000871e-05, 4.7199999999789077e-07, 5.361000000002336e-06, 4.7199999999789077e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 1.1874999999997998e-05, 4.720000000013602e-07, 1.1014000000000163e-05, 4.720000000013602e-07, 9.527999999998232e-06, 4.720000000013602e-07, 1.1861999999997902e-05, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 1.404099999999936e-05, 4.7300000000083386e-07, 9.847000000000328e-06, 4.7199999999789077e-07, 1.3874999999999998e-05, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 1.0500000000000093e-05, 4.859999999974607e-07, 7.84800000000127e-06, 4.860000000009301e-07, 1.3693999999998124e-05, 4.720000000013602e-07, 1.0195000000001037e-05, 4.7199999999789077e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 7.194000000002032e-06, 4.7300000000083386e-07, 1.0360999999996928e-05, 4.720000000013602e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.2207999999999664e-05, 4.7300000000083386e-07, 8.846999999999328e-06, 4.860000000009301e-07, 1.0360999999996928e-05, 4.720000000013602e-07, 1.0680999999998497e-05, 4.860000000009301e-07, 9.014000000001632e-06, 4.859999999974607e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 9.361000000002867e-06, 4.7199999999789077e-07, 6.360999999999867e-06, 4.7300000000083386e-07, 7.193999999998563e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.720000000013602e-07, 1.4360999999997459e-05, 4.720000000013602e-07, 8.680999999999967e-06, 4.7199999999789077e-07], 'source_diff': [0, 4.720000000013602e-07, 1.1360999999997928e-05, 4.720000000013602e-07, 8.680999999999967e-06, 4.860000000009301e-07, 9.360999999999398e-06, 4.7199999999789077e-07, 1.0528000000002702e-05, 4.7199999999789077e-07, 1.2528000000001233e-05, 4.720000000013602e-07, 7.208999999997606e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07, 4.152999999999796e-06, 4.860000000009301e-07, 1.4541999999999333e-05, 4.7199999999789077e-07, 6.181000000000936e-06, 4.720000000013602e-07, 8.707999999999633e-06, 4.7199999999789077e-07, 1.3347999999999832e-05, 4.720000000013602e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 6.555000000001837e-06, 4.7300000000083386e-07, 1.2346999999999358e-05, 4.7199999999789077e-07, 6.347000000000297e-06, 4.860000000009301e-07, 1.1362000000000871e-05, 4.7199999999789077e-07, 5.361000000002336e-06, 4.7199999999789077e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 1.1874999999997998e-05, 4.720000000013602e-07, 1.1014000000000163e-05, 4.720000000013602e-07, 9.527999999998232e-06, 4.720000000013602e-07, 1.1861999999997902e-05, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 1.404099999999936e-05, 4.7300000000083386e-07, 9.847000000000328e-06, 4.7199999999789077e-07, 1.3874999999999998e-05, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 1.0500000000000093e-05, 4.859999999974607e-07, 7.84800000000127e-06, 4.860000000009301e-07, 1.3693999999998124e-05, 4.720000000013602e-07, 1.0195000000001037e-05, 4.7199999999789077e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 7.194000000002032e-06, 4.7300000000083386e-07, 1.0360999999996928e-05, 4.720000000013602e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.2207999999999664e-05, 4.7300000000083386e-07, 8.846999999999328e-06, 4.860000000009301e-07, 1.0360999999996928e-05, 4.720000000013602e-07, 1.0680999999998497e-05, 4.860000000009301e-07, 9.014000000001632e-06, 4.859999999974607e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 9.361000000002867e-06, 4.7199999999789077e-07, 6.360999999999867e-06, 4.7300000000083386e-07, 7.193999999998563e-06, 4.720000000013602e-07, 5.042000000000241e-06, 4.720000000013602e-07, 1.4360999999997459e-05, 4.720000000013602e-07, 8.680999999999967e-06, 4.7199999999789077e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:41.493" endtime="20201112 10:13:41.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.489" endtime="20201112 10:13:41.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:41.501" level="INFO">${RESULT} = [{'time': 0.018730361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018742194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:41.498" endtime="20201112 10:13:41.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:41.515" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018730361, 0.018742194, 0.018751361, 0.018761194, 0.018772194, 0.018785194, 0.018792875, 0.018805708, 0.018810347, 0.018825361, 0.018832014, 0.018841194, 0.018855014, 0.018864514, 0.018871...</msg>
<status status="PASS" starttime="20201112 10:13:41.502" endtime="20201112 10:13:41.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.519" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:41.518" endtime="20201112 10:13:41.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.522" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 10:13:41.521" endtime="20201112 10:13:41.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.516" endtime="20201112 10:13:41.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.525" endtime="20201112 10:13:41.526"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:41.529" endtime="20201112 10:13:41.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.527" endtime="20201112 10:13:41.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.524" endtime="20201112 10:13:41.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.119" endtime="20201112 10:13:41.549"></status>
</kw>
<msg timestamp="20201112 10:13:41.550" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.557" endtime="20201112 10:13:41.568"></status>
</kw>
<msg timestamp="20201112 10:13:41.568" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:41.556" endtime="20201112 10:13:41.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.571" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:41.569" endtime="20201112 10:13:41.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.572" endtime="20201112 10:13:41.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.553" endtime="20201112 10:13:41.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.551" endtime="20201112 10:13:41.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.582" endtime="20201112 10:13:41.869"></status>
</kw>
<msg timestamp="20201112 10:13:41.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018465681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018466153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:41.580" endtime="20201112 10:13:41.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018465681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018466153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:41.874" endtime="20201112 10:13:41.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.883" endtime="20201112 10:13:41.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.577" endtime="20201112 10:13:41.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.575" endtime="20201112 10:13:41.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.889" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:41.888" endtime="20201112 10:13:41.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.894" level="INFO">VALUE: [{'time': 0.018465681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018466153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018475722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.018476194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018482667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.018483153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.0184975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4347000000001359e-05, 'source_diff': 1.4347000000001359e-05}, {'time': 0.018497986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018505181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.194999999998036e-06, 'source_diff': 7.194999999998036e-06}, {'time': 0.018505653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018518361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.018518833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018532694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018533167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018542514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018542986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018557514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.018557986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018564528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.542000000001741e-06, 'source_diff': 6.542000000001741e-06}, {'time': 0.018565, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018574681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.680999999997497e-06, 'source_diff': 9.680999999997497e-06}, {'time': 0.018575167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018580514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018581, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018595694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4693999999999124e-05, 'source_diff': 1.4693999999999124e-05}, {'time': 0.018596167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018606681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999999663e-05, 'source_diff': 1.0513999999999663e-05}, {'time': 0.018607167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018612681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.018613167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018624528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1361000000001398e-05, 'source_diff': 1.1361000000001398e-05}, {'time': 0.018625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018630694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.018631167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018643361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.018643833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018658361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.018658833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018669694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.018670167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018676208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.018676681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018690542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018691014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018702194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1179999999999524e-05, 'source_diff': 1.1179999999999524e-05}, {'time': 0.018702681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018716361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3680000000002024e-05, 'source_diff': 1.3680000000002024e-05}, {'time': 0.018716847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018729028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2180999999999997e-05, 'source_diff': 1.2180999999999997e-05}, {'time': 0.018729514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018738542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.018739014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018744208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.018744681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018749208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.018749681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018758222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.541000000000798e-06, 'source_diff': 8.541000000000798e-06}, {'time': 0.018758694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018766403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.709000000001576e-06, 'source_diff': 7.709000000001576e-06}, {'time': 0.018766875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018774208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.333000000001727e-06, 'source_diff': 7.333000000001727e-06}, {'time': 0.018774681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018788875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4193999999998624e-05, 'source_diff': 1.4193999999998624e-05}, {'time': 0.018789347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018800375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027999999999732e-05, 'source_diff': 1.1027999999999732e-05}, {'time': 0.018800847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018805222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.018805694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018811708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.018812181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018818375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1939999999975626e-06, 'source_diff': 6.1939999999975626e-06}, {'time': 0.018818861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018831889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3028000000001733e-05, 'source_diff': 1.3028000000001733e-05}, {'time': 0.018832361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018846056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3695000000001067e-05, 'source_diff': 1.3695000000001067e-05}, {'time': 0.018846528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018855875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018856361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018861889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.018862361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018873889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.018874361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018884792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0431000000001717e-05, 'source_diff': 1.0431000000001717e-05}, {'time': 0.018885264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018897889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2625000000002218e-05, 'source_diff': 1.2625000000002218e-05}, {'time': 0.018898361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018904222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018904694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018913556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.86200000000184e-06, 'source_diff': 8.86200000000184e-06}, {'time': 0.018914028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018926889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.018927361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018933097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.018933569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018946056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2486999999998527e-05, 'source_diff': 1.2486999999998527e-05}, {'time': 0.018946542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018956722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.018957208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018961889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.018962375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:41.890" endtime="20201112 10:13:41.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.886" endtime="20201112 10:13:41.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:41.921" level="INFO">${debug-compressed} = {'time': [0.018465681, 0.018466153, 0.018475722, 0.018476194, 0.018482667, 0.018483153, 0.0184975, 0.018497986, 0.018505181, 0.018505653, 0.018518361, 0.018518833, 0.018532694, 0.018533167, 0.01854251...</msg>
<status status="PASS" starttime="20201112 10:13:41.897" endtime="20201112 10:13:41.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.925" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:41.924" endtime="20201112 10:13:41.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.929" level="INFO">VALUE: {'time': [0.018465681, 0.018466153, 0.018475722, 0.018476194, 0.018482667, 0.018483153, 0.0184975, 0.018497986, 0.018505181, 0.018505653, 0.018518361, 0.018518833, 0.018532694, 0.018533167, 0.018542514, 0.018542986, 0.018557514, 0.018557986, 0.018564528, 0.018565, 0.018574681, 0.018575167, 0.018580514, 0.018581, 0.018595694, 0.018596167, 0.018606681, 0.018607167, 0.018612681, 0.018613167, 0.018624528, 0.018625, 0.018630694, 0.018631167, 0.018643361, 0.018643833, 0.018658361, 0.018658833, 0.018669694, 0.018670167, 0.018676208, 0.018676681, 0.018690542, 0.018691014, 0.018702194, 0.018702681, 0.018716361, 0.018716847, 0.018729028, 0.018729514, 0.018738542, 0.018739014, 0.018744208, 0.018744681, 0.018749208, 0.018749681, 0.018758222, 0.018758694, 0.018766403, 0.018766875, 0.018774208, 0.018774681, 0.018788875, 0.018789347, 0.018800375, 0.018800847, 0.018805222, 0.018805694, 0.018811708, 0.018812181, 0.018818375, 0.018818861, 0.018831889, 0.018832361, 0.018846056, 0.018846528, 0.018855875, 0.018856361, 0.018861889, 0.018862361, 0.018873889, 0.018874361, 0.018884792, 0.018885264, 0.018897889, 0.018898361, 0.018904222, 0.018904694, 0.018913556, 0.018914028, 0.018926889, 0.018927361, 0.018933097, 0.018933569, 0.018946056, 0.018946542, 0.018956722, 0.018957208, 0.018961889, 0.018962375], 'eventdiff': [0, 4.7199999999789077e-07, 9.569000000000938e-06, 4.720000000013602e-07, 6.4729999999998955e-06, 4.859999999974607e-07, 1.4347000000001359e-05, 4.860000000009301e-07, 7.194999999998036e-06, 4.720000000013602e-07, 1.2708000000000164e-05, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07, 1.4527999999999763e-05, 4.7199999999789077e-07, 6.542000000001741e-06, 4.720000000013602e-07, 9.680999999997497e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.860000000009301e-07, 1.4693999999999124e-05, 4.7300000000083386e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 5.5139999999981315e-06, 4.860000000009301e-07, 1.1361000000001398e-05, 4.7199999999789077e-07, 5.694000000000532e-06, 4.7300000000083386e-07, 1.2194000000000094e-05, 4.7199999999789077e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.0861000000000898e-05, 4.7300000000083386e-07, 6.040999999998298e-06, 4.7300000000083386e-07, 1.3861000000000429e-05, 4.7199999999789077e-07, 1.1179999999999524e-05, 4.870000000004038e-07, 1.3680000000002024e-05, 4.860000000009301e-07, 1.2180999999999997e-05, 4.859999999974607e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 4.527000000000697e-06, 4.7300000000083386e-07, 8.541000000000798e-06, 4.7199999999789077e-07, 7.709000000001576e-06, 4.7199999999789077e-07, 7.333000000001727e-06, 4.7300000000083386e-07, 1.4193999999998624e-05, 4.720000000013602e-07, 1.1027999999999732e-05, 4.7199999999789077e-07, 4.375000000000906e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.7300000000083386e-07, 6.1939999999975626e-06, 4.860000000009301e-07, 1.3028000000001733e-05, 4.7199999999789077e-07, 1.3695000000001067e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.859999999974607e-07, 5.528000000001171e-06, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 1.0431000000001717e-05, 4.7199999999789077e-07, 1.2625000000002218e-05, 4.7199999999789077e-07, 5.860999999999367e-06, 4.720000000013602e-07, 8.86200000000184e-06, 4.7199999999789077e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 5.735999999999242e-06, 4.720000000013602e-07, 1.2486999999998527e-05, 4.860000000009301e-07, 1.0179999999998524e-05, 4.860000000009301e-07, 4.680999999999436e-06, 4.860000000009301e-07], 'source_diff': [0, 4.7199999999789077e-07, 9.569000000000938e-06, 4.720000000013602e-07, 6.4729999999998955e-06, 4.859999999974607e-07, 1.4347000000001359e-05, 4.860000000009301e-07, 7.194999999998036e-06, 4.720000000013602e-07, 1.2708000000000164e-05, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07, 1.4527999999999763e-05, 4.7199999999789077e-07, 6.542000000001741e-06, 4.720000000013602e-07, 9.680999999997497e-06, 4.860000000009301e-07, 5.346999999999297e-06, 4.860000000009301e-07, 1.4693999999999124e-05, 4.7300000000083386e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 5.5139999999981315e-06, 4.860000000009301e-07, 1.1361000000001398e-05, 4.7199999999789077e-07, 5.694000000000532e-06, 4.7300000000083386e-07, 1.2194000000000094e-05, 4.7199999999789077e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.0861000000000898e-05, 4.7300000000083386e-07, 6.040999999998298e-06, 4.7300000000083386e-07, 1.3861000000000429e-05, 4.7199999999789077e-07, 1.1179999999999524e-05, 4.870000000004038e-07, 1.3680000000002024e-05, 4.860000000009301e-07, 1.2180999999999997e-05, 4.859999999974607e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 4.527000000000697e-06, 4.7300000000083386e-07, 8.541000000000798e-06, 4.7199999999789077e-07, 7.709000000001576e-06, 4.7199999999789077e-07, 7.333000000001727e-06, 4.7300000000083386e-07, 1.4193999999998624e-05, 4.720000000013602e-07, 1.1027999999999732e-05, 4.7199999999789077e-07, 4.375000000000906e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.7300000000083386e-07, 6.1939999999975626e-06, 4.860000000009301e-07, 1.3028000000001733e-05, 4.7199999999789077e-07, 1.3695000000001067e-05, 4.720000000013602e-07, 9.346999999999828e-06, 4.859999999974607e-07, 5.528000000001171e-06, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 1.0431000000001717e-05, 4.7199999999789077e-07, 1.2625000000002218e-05, 4.7199999999789077e-07, 5.860999999999367e-06, 4.720000000013602e-07, 8.86200000000184e-06, 4.7199999999789077e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 5.735999999999242e-06, 4.720000000013602e-07, 1.2486999999998527e-05, 4.860000000009301e-07, 1.0179999999998524e-05, 4.860000000009301e-07, 4.680999999999436e-06, 4.860000000009301e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:41.926" endtime="20201112 10:13:41.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.922" endtime="20201112 10:13:41.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:41.935" level="INFO">${RESULT} = [{'time': 0.018466153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018476194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:41.931" endtime="20201112 10:13:41.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:41.948" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018466153, 0.018476194, 0.018483153, 0.018497986, 0.018505653, 0.018518833, 0.018533167, 0.018542986, 0.018557986, 0.018565, 0.018575167, 0.018581, 0.018596167, 0.018607167, 0.018613167, 0...</msg>
<status status="PASS" starttime="20201112 10:13:41.936" endtime="20201112 10:13:41.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.953" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:41.951" endtime="20201112 10:13:41.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.956" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 10:13:41.954" endtime="20201112 10:13:41.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.949" endtime="20201112 10:13:41.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.959" endtime="20201112 10:13:41.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:41.962" endtime="20201112 10:13:41.982"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.961" endtime="20201112 10:13:41.982"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.957" endtime="20201112 10:13:41.983"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.550" endtime="20201112 10:13:41.983"></status>
</kw>
<msg timestamp="20201112 10:13:41.983" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.991" endtime="20201112 10:13:42.001"></status>
</kw>
<msg timestamp="20201112 10:13:42.002" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:41.989" endtime="20201112 10:13:42.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.004" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:42.003" endtime="20201112 10:13:42.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.005" endtime="20201112 10:13:42.007"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.987" endtime="20201112 10:13:42.007"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.985" endtime="20201112 10:13:42.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.015" endtime="20201112 10:13:42.303"></status>
</kw>
<msg timestamp="20201112 10:13:42.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01849475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018495222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:13:42.013" endtime="20201112 10:13:42.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01849475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018495222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:13:42.307" endtime="20201112 10:13:42.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.316" endtime="20201112 10:13:42.317"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.010" endtime="20201112 10:13:42.318"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.009" endtime="20201112 10:13:42.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.322" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:42.321" endtime="20201112 10:13:42.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.328" level="INFO">VALUE: [{'time': 0.01849475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018495222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018502083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.018502556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018511236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.018511708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018522903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1194999999998567e-05, 'source_diff': 1.1194999999998567e-05}, {'time': 0.018523389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018532236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.018532722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018546569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.384699999999739e-05, 'source_diff': 1.384699999999739e-05}, {'time': 0.018547056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018557903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.018558389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018564403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.018564889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018569264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3749999999974365e-06, 'source_diff': 4.3749999999974365e-06}, {'time': 0.018569736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01858225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2514000000001663e-05, 'source_diff': 1.2514000000001663e-05}, {'time': 0.018582722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018587917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.018588389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01860075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.018601222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018612583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1360999999997928e-05, 'source_diff': 1.1360999999997928e-05}, {'time': 0.018613056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018625264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2207999999999664e-05, 'source_diff': 1.2207999999999664e-05}, {'time': 0.018625736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01863375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.018634222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018642083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.018642569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018649972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402999999999577e-06, 'source_diff': 7.402999999999577e-06}, {'time': 0.018650444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018660917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0473000000000426e-05, 'source_diff': 1.0473000000000426e-05}, {'time': 0.018661403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01867125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.018671736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01868475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3013999999998693e-05, 'source_diff': 1.3013999999998693e-05}, {'time': 0.018685236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018691264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.018691736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018703264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.018703736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018710278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.542000000001741e-06, 'source_diff': 6.542000000001741e-06}, {'time': 0.01871075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018718597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.018719069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018726111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.018726583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018731597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.018732069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018744611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2542000000000803e-05, 'source_diff': 1.2542000000000803e-05}, {'time': 0.018745083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018754514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.431000000000717e-06, 'source_diff': 9.431000000000717e-06}, {'time': 0.018754986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018763944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.957999999999883e-06, 'source_diff': 8.957999999999883e-06}, {'time': 0.018764417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018776958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2541000000001329e-05, 'source_diff': 1.2541000000001329e-05}, {'time': 0.018777431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018783931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.018784417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018797597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3179999999998054e-05, 'source_diff': 1.3179999999998054e-05}, {'time': 0.018798083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018807764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.681000000000967e-06, 'source_diff': 9.681000000000967e-06}, {'time': 0.01880825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018815125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999999937e-06, 'source_diff': 6.874999999999937e-06}, {'time': 0.018815597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018826278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0680999999998497e-05, 'source_diff': 1.0680999999998497e-05}, {'time': 0.01882675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018839944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.018840417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018854944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.452699999999682e-05, 'source_diff': 1.452699999999682e-05}, {'time': 0.018855417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018862792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.018863264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018873944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0679999999999024e-05, 'source_diff': 1.0679999999999024e-05}, {'time': 0.018874417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018879458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.040999999997298e-06, 'source_diff': 5.040999999997298e-06}, {'time': 0.018879931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018885778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018886264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018892444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.018892931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018901611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.679999999997023e-06, 'source_diff': 8.679999999997023e-06}, {'time': 0.018902097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018915278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3181000000000997e-05, 'source_diff': 1.3181000000000997e-05}, {'time': 0.018915764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018923444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.679999999999493e-06, 'source_diff': 7.679999999999493e-06}, {'time': 0.018923931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018937278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3346999999996889e-05, 'source_diff': 1.3346999999996889e-05}, {'time': 0.018937764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018948792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027999999999732e-05, 'source_diff': 1.1027999999999732e-05}, {'time': 0.018949264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018954292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018954764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018964458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.694000000001063e-06, 'source_diff': 9.694000000001063e-06}, {'time': 0.018964931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018975292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.018975764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:42.323" endtime="20201112 10:13:42.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.319" endtime="20201112 10:13:42.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:42.355" level="INFO">${debug-compressed} = {'time': [0.01849475, 0.018495222, 0.018502083, 0.018502556, 0.018511236, 0.018511708, 0.018522903, 0.018523389, 0.018532236, 0.018532722, 0.018546569, 0.018547056, 0.018557903, 0.018558389, 0.0185644...</msg>
<status status="PASS" starttime="20201112 10:13:42.330" endtime="20201112 10:13:42.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.359" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:42.358" endtime="20201112 10:13:42.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.363" level="INFO">VALUE: {'time': [0.01849475, 0.018495222, 0.018502083, 0.018502556, 0.018511236, 0.018511708, 0.018522903, 0.018523389, 0.018532236, 0.018532722, 0.018546569, 0.018547056, 0.018557903, 0.018558389, 0.018564403, 0.018564889, 0.018569264, 0.018569736, 0.01858225, 0.018582722, 0.018587917, 0.018588389, 0.01860075, 0.018601222, 0.018612583, 0.018613056, 0.018625264, 0.018625736, 0.01863375, 0.018634222, 0.018642083, 0.018642569, 0.018649972, 0.018650444, 0.018660917, 0.018661403, 0.01867125, 0.018671736, 0.01868475, 0.018685236, 0.018691264, 0.018691736, 0.018703264, 0.018703736, 0.018710278, 0.01871075, 0.018718597, 0.018719069, 0.018726111, 0.018726583, 0.018731597, 0.018732069, 0.018744611, 0.018745083, 0.018754514, 0.018754986, 0.018763944, 0.018764417, 0.018776958, 0.018777431, 0.018783931, 0.018784417, 0.018797597, 0.018798083, 0.018807764, 0.01880825, 0.018815125, 0.018815597, 0.018826278, 0.01882675, 0.018839944, 0.018840417, 0.018854944, 0.018855417, 0.018862792, 0.018863264, 0.018873944, 0.018874417, 0.018879458, 0.018879931, 0.018885778, 0.018886264, 0.018892444, 0.018892931, 0.018901611, 0.018902097, 0.018915278, 0.018915764, 0.018923444, 0.018923931, 0.018937278, 0.018937764, 0.018948792, 0.018949264, 0.018954292, 0.018954764, 0.018964458, 0.018964931, 0.018975292, 0.018975764], 'eventdiff': [0, 4.7199999999789077e-07, 6.861000000000367e-06, 4.7300000000083386e-07, 8.680000000000493e-06, 4.720000000013602e-07, 1.1194999999998567e-05, 4.860000000009301e-07, 8.846999999999328e-06, 4.860000000009301e-07, 1.384699999999739e-05, 4.870000000004038e-07, 1.0847000000001328e-05, 4.860000000009301e-07, 6.0139999999986316e-06, 4.860000000009301e-07, 4.3749999999974365e-06, 4.720000000013602e-07, 1.2514000000001663e-05, 4.7199999999789077e-07, 5.1949999999995056e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07, 1.1360999999997928e-05, 4.7300000000083386e-07, 1.2207999999999664e-05, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999789077e-07, 7.861000000001367e-06, 4.860000000009301e-07, 7.402999999999577e-06, 4.7199999999789077e-07, 1.0473000000000426e-05, 4.860000000009301e-07, 9.847000000000328e-06, 4.860000000009301e-07, 1.3013999999998693e-05, 4.860000000009301e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 6.542000000001741e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 5.0139999999976315e-06, 4.720000000013602e-07, 1.2542000000000803e-05, 4.7199999999789077e-07, 9.431000000000717e-06, 4.720000000013602e-07, 8.957999999999883e-06, 4.729999999973644e-07, 1.2541000000001329e-05, 4.7300000000083386e-07, 6.499999999999562e-06, 4.860000000009301e-07, 1.3179999999998054e-05, 4.860000000009301e-07, 9.681000000000967e-06, 4.859999999974607e-07, 6.874999999999937e-06, 4.720000000013602e-07, 1.0680999999998497e-05, 4.720000000013602e-07, 1.3194000000001094e-05, 4.7300000000083386e-07, 1.452699999999682e-05, 4.7300000000083386e-07, 7.375000000000437e-06, 4.720000000013602e-07, 1.0679999999999024e-05, 4.7300000000083386e-07, 5.040999999997298e-06, 4.7300000000083386e-07, 5.846999999999797e-06, 4.860000000009301e-07, 6.180000000001462e-06, 4.870000000004038e-07, 8.679999999997023e-06, 4.860000000009301e-07, 1.3181000000000997e-05, 4.860000000009301e-07, 7.679999999999493e-06, 4.870000000004038e-07, 1.3346999999996889e-05, 4.860000000009301e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 5.028000000000671e-06, 4.7199999999789077e-07, 9.694000000001063e-06, 4.7300000000083386e-07, 1.0361000000000398e-05, 4.7199999999789077e-07], 'source_diff': [0, 4.7199999999789077e-07, 6.861000000000367e-06, 4.7300000000083386e-07, 8.680000000000493e-06, 4.720000000013602e-07, 1.1194999999998567e-05, 4.860000000009301e-07, 8.846999999999328e-06, 4.860000000009301e-07, 1.384699999999739e-05, 4.870000000004038e-07, 1.0847000000001328e-05, 4.860000000009301e-07, 6.0139999999986316e-06, 4.860000000009301e-07, 4.3749999999974365e-06, 4.720000000013602e-07, 1.2514000000001663e-05, 4.7199999999789077e-07, 5.1949999999995056e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07, 1.1360999999997928e-05, 4.7300000000083386e-07, 1.2207999999999664e-05, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999789077e-07, 7.861000000001367e-06, 4.860000000009301e-07, 7.402999999999577e-06, 4.7199999999789077e-07, 1.0473000000000426e-05, 4.860000000009301e-07, 9.847000000000328e-06, 4.860000000009301e-07, 1.3013999999998693e-05, 4.860000000009301e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 6.542000000001741e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 5.0139999999976315e-06, 4.720000000013602e-07, 1.2542000000000803e-05, 4.7199999999789077e-07, 9.431000000000717e-06, 4.720000000013602e-07, 8.957999999999883e-06, 4.729999999973644e-07, 1.2541000000001329e-05, 4.7300000000083386e-07, 6.499999999999562e-06, 4.860000000009301e-07, 1.3179999999998054e-05, 4.860000000009301e-07, 9.681000000000967e-06, 4.859999999974607e-07, 6.874999999999937e-06, 4.720000000013602e-07, 1.0680999999998497e-05, 4.720000000013602e-07, 1.3194000000001094e-05, 4.7300000000083386e-07, 1.452699999999682e-05, 4.7300000000083386e-07, 7.375000000000437e-06, 4.720000000013602e-07, 1.0679999999999024e-05, 4.7300000000083386e-07, 5.040999999997298e-06, 4.7300000000083386e-07, 5.846999999999797e-06, 4.860000000009301e-07, 6.180000000001462e-06, 4.870000000004038e-07, 8.679999999997023e-06, 4.860000000009301e-07, 1.3181000000000997e-05, 4.860000000009301e-07, 7.679999999999493e-06, 4.870000000004038e-07, 1.3346999999996889e-05, 4.860000000009301e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 5.028000000000671e-06, 4.7199999999789077e-07, 9.694000000001063e-06, 4.7300000000083386e-07, 1.0361000000000398e-05, 4.7199999999789077e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:42.360" endtime="20201112 10:13:42.364"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.356" endtime="20201112 10:13:42.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:42.369" level="INFO">${RESULT} = [{'time': 0.018495222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018502556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:42.365" endtime="20201112 10:13:42.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:42.383" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018495222, 0.018502556, 0.018511708, 0.018523389, 0.018532722, 0.018547056, 0.018558389, 0.018564889, 0.018569736, 0.018582722, 0.018588389, 0.018601222, 0.018613056, 0.018625736, 0.018634...</msg>
<status status="PASS" starttime="20201112 10:13:42.370" endtime="20201112 10:13:42.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.387" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:42.386" endtime="20201112 10:13:42.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.389" level="INFO">VALUE: [4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 10:13:42.388" endtime="20201112 10:13:42.390"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.383" endtime="20201112 10:13:42.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.393" endtime="20201112 10:13:42.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:42.396" endtime="20201112 10:13:42.415"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.394" endtime="20201112 10:13:42.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.391" endtime="20201112 10:13:42.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.984" endtime="20201112 10:13:42.417"></status>
</kw>
<msg timestamp="20201112 10:13:42.417" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.425" endtime="20201112 10:13:42.435"></status>
</kw>
<msg timestamp="20201112 10:13:42.436" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:42.423" endtime="20201112 10:13:42.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.438" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:42.437" endtime="20201112 10:13:42.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.439" endtime="20201112 10:13:42.441"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.421" endtime="20201112 10:13:42.441"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.419" endtime="20201112 10:13:42.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.449" endtime="20201112 10:13:42.733"></status>
</kw>
<msg timestamp="20201112 10:13:42.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018894333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018894806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:42.447" endtime="20201112 10:13:42.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018894333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018894806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:42.737" endtime="20201112 10:13:42.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.746" endtime="20201112 10:13:42.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.444" endtime="20201112 10:13:42.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.443" endtime="20201112 10:13:42.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.753" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:42.752" endtime="20201112 10:13:42.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.758" level="INFO">VALUE: [{'time': 0.018894333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018894806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018900306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.018900792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018907986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.194000000002032e-06, 'source_diff': 7.194000000002032e-06}, {'time': 0.018908458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018918806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0348000000000301e-05, 'source_diff': 1.0348000000000301e-05}, {'time': 0.018919292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018924653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018925125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018935833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.018936306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018942153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018942625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018947319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.018947792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0189535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.018953972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018963319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018963792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018974819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027000000000259e-05, 'source_diff': 1.1027000000000259e-05}, {'time': 0.018975292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018980153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.018980625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018989667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041999999997302e-06, 'source_diff': 9.041999999997302e-06}, {'time': 0.018990139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019001653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.019002125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019013667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1541999999999802e-05, 'source_diff': 1.1541999999999802e-05}, {'time': 0.019014139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019024514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.019024986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019033486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999998092e-06, 'source_diff': 8.499999999998092e-06}, {'time': 0.019033972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019046319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.019046806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019060333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.352699999999929e-05, 'source_diff': 1.352699999999929e-05}, {'time': 0.019060806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019068, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.194000000002032e-06, 'source_diff': 7.194000000002032e-06}, {'time': 0.019068472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019075681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.209000000001076e-06, 'source_diff': 7.209000000001076e-06}, {'time': 0.019076153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019089347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.019089819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019103722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3902999999999138e-05, 'source_diff': 1.3902999999999138e-05}, {'time': 0.019104194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019118014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3819999999997723e-05, 'source_diff': 1.3819999999997723e-05}, {'time': 0.019118486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019133, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.019133472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019142167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.695000000003006e-06, 'source_diff': 8.695000000003006e-06}, {'time': 0.019142653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019148167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.019148653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019157833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.019158319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019170542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2222999999998707e-05, 'source_diff': 1.2222999999998707e-05}, {'time': 0.019171014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0191755, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.019175986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019188, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2014000000001163e-05, 'source_diff': 1.2014000000001163e-05}, {'time': 0.019188486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019197347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.019197819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019209847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2027999999997263e-05, 'source_diff': 1.2027999999997263e-05}, {'time': 0.019210319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019224514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4195000000001567e-05, 'source_diff': 1.4195000000001567e-05}, {'time': 0.019224986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019231847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.019232319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019238847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.019239319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019247681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361999999997871e-06, 'source_diff': 8.361999999997871e-06}, {'time': 0.019248153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019262028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3874999999999998e-05, 'source_diff': 1.3874999999999998e-05}, {'time': 0.0192625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019272542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0042000000001772e-05, 'source_diff': 1.0042000000001772e-05}, {'time': 0.019273014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019280222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2079999999981326e-06, 'source_diff': 7.2079999999981326e-06}, {'time': 0.019280694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019294194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.019294667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019299181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.019299667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019307194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527000000000228e-06, 'source_diff': 7.527000000000228e-06}, {'time': 0.019307667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019317028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.0193175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019322194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.019322667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019328028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.0193285, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019338375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.875000000002937e-06, 'source_diff': 9.875000000002937e-06}, {'time': 0.019338847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019349361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999999663e-05, 'source_diff': 1.0513999999999663e-05}, {'time': 0.019349833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019355028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.0193555, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019362194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.693999999998063e-06, 'source_diff': 6.693999999998063e-06}, {'time': 0.019362667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:42.754" endtime="20201112 10:13:42.759"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.749" endtime="20201112 10:13:42.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:42.784" level="INFO">${debug-compressed} = {'time': [0.018894333, 0.018894806, 0.018900306, 0.018900792, 0.018907986, 0.018908458, 0.018918806, 0.018919292, 0.018924653, 0.018925125, 0.018935833, 0.018936306, 0.018942153, 0.018942625, 0.018947...</msg>
<status status="PASS" starttime="20201112 10:13:42.760" endtime="20201112 10:13:42.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.788" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:42.787" endtime="20201112 10:13:42.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.792" level="INFO">VALUE: {'time': [0.018894333, 0.018894806, 0.018900306, 0.018900792, 0.018907986, 0.018908458, 0.018918806, 0.018919292, 0.018924653, 0.018925125, 0.018935833, 0.018936306, 0.018942153, 0.018942625, 0.018947319, 0.018947792, 0.0189535, 0.018953972, 0.018963319, 0.018963792, 0.018974819, 0.018975292, 0.018980153, 0.018980625, 0.018989667, 0.018990139, 0.019001653, 0.019002125, 0.019013667, 0.019014139, 0.019024514, 0.019024986, 0.019033486, 0.019033972, 0.019046319, 0.019046806, 0.019060333, 0.019060806, 0.019068, 0.019068472, 0.019075681, 0.019076153, 0.019089347, 0.019089819, 0.019103722, 0.019104194, 0.019118014, 0.019118486, 0.019133, 0.019133472, 0.019142167, 0.019142653, 0.019148167, 0.019148653, 0.019157833, 0.019158319, 0.019170542, 0.019171014, 0.0191755, 0.019175986, 0.019188, 0.019188486, 0.019197347, 0.019197819, 0.019209847, 0.019210319, 0.019224514, 0.019224986, 0.019231847, 0.019232319, 0.019238847, 0.019239319, 0.019247681, 0.019248153, 0.019262028, 0.0192625, 0.019272542, 0.019273014, 0.019280222, 0.019280694, 0.019294194, 0.019294667, 0.019299181, 0.019299667, 0.019307194, 0.019307667, 0.019317028, 0.0193175, 0.019322194, 0.019322667, 0.019328028, 0.0193285, 0.019338375, 0.019338847, 0.019349361, 0.019349833, 0.019355028, 0.0193555, 0.019362194, 0.019362667], 'eventdiff': [0, 4.7300000000083386e-07, 5.499999999998562e-06, 4.860000000009301e-07, 7.194000000002032e-06, 4.7199999999789077e-07, 1.0348000000000301e-05, 4.860000000009301e-07, 5.360999999998867e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 5.846999999999797e-06, 4.720000000013602e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 5.708000000000102e-06, 4.7199999999789077e-07, 9.346999999999828e-06, 4.7300000000083386e-07, 1.1027000000000259e-05, 4.7300000000083386e-07, 4.860999999998367e-06, 4.720000000013602e-07, 9.041999999997302e-06, 4.720000000013602e-07, 1.1514000000000663e-05, 4.720000000013602e-07, 1.1541999999999802e-05, 4.7199999999789077e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 8.499999999998092e-06, 4.860000000009301e-07, 1.2346999999999358e-05, 4.870000000004038e-07, 1.352699999999929e-05, 4.7300000000083386e-07, 7.194000000002032e-06, 4.7199999999789077e-07, 7.209000000001076e-06, 4.7199999999789077e-07, 1.3194000000001094e-05, 4.720000000013602e-07, 1.3902999999999138e-05, 4.720000000013602e-07, 1.3819999999997723e-05, 4.720000000013602e-07, 1.4514000000000193e-05, 4.7199999999789077e-07, 8.695000000003006e-06, 4.859999999974607e-07, 5.514000000001601e-06, 4.860000000009301e-07, 9.179999999997523e-06, 4.860000000009301e-07, 1.2222999999998707e-05, 4.720000000013602e-07, 4.486000000001461e-06, 4.859999999974607e-07, 1.2014000000001163e-05, 4.860000000009301e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.2027999999997263e-05, 4.720000000013602e-07, 1.4195000000001567e-05, 4.7199999999789077e-07, 6.861000000000367e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 8.361999999997871e-06, 4.720000000013602e-07, 1.3874999999999998e-05, 4.7199999999789077e-07, 1.0042000000001772e-05, 4.720000000013602e-07, 7.2079999999981326e-06, 4.720000000013602e-07, 1.3499999999999623e-05, 4.7300000000083386e-07, 4.513999999997131e-06, 4.860000000009301e-07, 7.527000000000228e-06, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 5.360999999998867e-06, 4.7199999999789077e-07, 9.875000000002937e-06, 4.7199999999789077e-07, 1.0513999999999663e-05, 4.720000000013602e-07, 5.1949999999995056e-06, 4.720000000013602e-07, 6.693999999998063e-06, 4.7300000000083386e-07], 'source_diff': [0, 4.7300000000083386e-07, 5.499999999998562e-06, 4.860000000009301e-07, 7.194000000002032e-06, 4.7199999999789077e-07, 1.0348000000000301e-05, 4.860000000009301e-07, 5.360999999998867e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 5.846999999999797e-06, 4.720000000013602e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 5.708000000000102e-06, 4.7199999999789077e-07, 9.346999999999828e-06, 4.7300000000083386e-07, 1.1027000000000259e-05, 4.7300000000083386e-07, 4.860999999998367e-06, 4.720000000013602e-07, 9.041999999997302e-06, 4.720000000013602e-07, 1.1514000000000663e-05, 4.720000000013602e-07, 1.1541999999999802e-05, 4.7199999999789077e-07, 1.0374999999999968e-05, 4.720000000013602e-07, 8.499999999998092e-06, 4.860000000009301e-07, 1.2346999999999358e-05, 4.870000000004038e-07, 1.352699999999929e-05, 4.7300000000083386e-07, 7.194000000002032e-06, 4.7199999999789077e-07, 7.209000000001076e-06, 4.7199999999789077e-07, 1.3194000000001094e-05, 4.720000000013602e-07, 1.3902999999999138e-05, 4.720000000013602e-07, 1.3819999999997723e-05, 4.720000000013602e-07, 1.4514000000000193e-05, 4.7199999999789077e-07, 8.695000000003006e-06, 4.859999999974607e-07, 5.514000000001601e-06, 4.860000000009301e-07, 9.179999999997523e-06, 4.860000000009301e-07, 1.2222999999998707e-05, 4.720000000013602e-07, 4.486000000001461e-06, 4.859999999974607e-07, 1.2014000000001163e-05, 4.860000000009301e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.2027999999997263e-05, 4.720000000013602e-07, 1.4195000000001567e-05, 4.7199999999789077e-07, 6.861000000000367e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 8.361999999997871e-06, 4.720000000013602e-07, 1.3874999999999998e-05, 4.7199999999789077e-07, 1.0042000000001772e-05, 4.720000000013602e-07, 7.2079999999981326e-06, 4.720000000013602e-07, 1.3499999999999623e-05, 4.7300000000083386e-07, 4.513999999997131e-06, 4.860000000009301e-07, 7.527000000000228e-06, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 5.360999999998867e-06, 4.7199999999789077e-07, 9.875000000002937e-06, 4.7199999999789077e-07, 1.0513999999999663e-05, 4.720000000013602e-07, 5.1949999999995056e-06, 4.720000000013602e-07, 6.693999999998063e-06, 4.7300000000083386e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:42.789" endtime="20201112 10:13:42.793"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.785" endtime="20201112 10:13:42.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:42.798" level="INFO">${RESULT} = [{'time': 0.018894806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018900792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:42.794" endtime="20201112 10:13:42.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:42.812" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018894806, 0.018900792, 0.018908458, 0.018919292, 0.018925125, 0.018936306, 0.018942625, 0.018947792, 0.018953972, 0.018963792, 0.018975292, 0.018980625, 0.018990139, 0.019002125, 0.019014...</msg>
<status status="PASS" starttime="20201112 10:13:42.799" endtime="20201112 10:13:42.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.816" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:42.815" endtime="20201112 10:13:42.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.818" level="INFO">VALUE: [4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 10:13:42.817" endtime="20201112 10:13:42.819"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.813" endtime="20201112 10:13:42.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.822" endtime="20201112 10:13:42.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:42.825" endtime="20201112 10:13:42.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.824" endtime="20201112 10:13:42.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.820" endtime="20201112 10:13:42.846"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.417" endtime="20201112 10:13:42.847"></status>
</kw>
<msg timestamp="20201112 10:13:42.847" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.855" endtime="20201112 10:13:42.864"></status>
</kw>
<msg timestamp="20201112 10:13:42.865" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:42.853" endtime="20201112 10:13:42.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.867" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:42.866" endtime="20201112 10:13:42.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.868" endtime="20201112 10:13:42.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.850" endtime="20201112 10:13:42.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.849" endtime="20201112 10:13:42.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.877" endtime="20201112 10:13:43.167"></status>
</kw>
<msg timestamp="20201112 10:13:43.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018503444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018503931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:42.876" endtime="20201112 10:13:43.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018503444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018503931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:43.171" endtime="20201112 10:13:43.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.180" endtime="20201112 10:13:43.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.873" endtime="20201112 10:13:43.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.871" endtime="20201112 10:13:43.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.186" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:43.185" endtime="20201112 10:13:43.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.191" level="INFO">VALUE: [{'time': 0.018503444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018503931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018518625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4693999999999124e-05, 'source_diff': 1.4693999999999124e-05}, {'time': 0.018519097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018527792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694999999999536e-06, 'source_diff': 8.694999999999536e-06}, {'time': 0.018528264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018535639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.018536111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018547833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1721999999998733e-05, 'source_diff': 1.1721999999998733e-05}, {'time': 0.018548306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018552792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.018553264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018565139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.018565611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018575625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999999162e-05, 'source_diff': 1.0013999999999162e-05}, {'time': 0.018576097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018587639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1541999999999802e-05, 'source_diff': 1.1541999999999802e-05}, {'time': 0.018588111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018598292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.018598778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018606125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000001297e-06, 'source_diff': 7.347000000001297e-06}, {'time': 0.018606611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018611125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.018611611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018617958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.347000000000297e-06, 'source_diff': 6.347000000000297e-06}, {'time': 0.018618444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018626458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.013999999997162e-06, 'source_diff': 8.013999999997162e-06}, {'time': 0.018626944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018636306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.361999999998871e-06, 'source_diff': 9.361999999998871e-06}, {'time': 0.018636778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018646972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194000000001563e-05, 'source_diff': 1.0194000000001563e-05}, {'time': 0.018647444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018652639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.018653111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018665167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2055999999999872e-05, 'source_diff': 1.2055999999999872e-05}, {'time': 0.018665639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018677806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2167000000000427e-05, 'source_diff': 1.2167000000000427e-05}, {'time': 0.018678278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018685014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.018685486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018699986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4499999999997154e-05, 'source_diff': 1.4499999999997154e-05}, {'time': 0.018700458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018714153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3695000000001067e-05, 'source_diff': 1.3695000000001067e-05}, {'time': 0.018714625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018725153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0528000000002702e-05, 'source_diff': 1.0528000000002702e-05}, {'time': 0.018725625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018738639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3014000000002163e-05, 'source_diff': 1.3014000000002163e-05}, {'time': 0.018739125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018749319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194000000001563e-05, 'source_diff': 1.0194000000001563e-05}, {'time': 0.018749792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018760806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1014000000000163e-05, 'source_diff': 1.1014000000000163e-05}, {'time': 0.018761292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018775153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018775625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018784819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.018785292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018795319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027000000002728e-05, 'source_diff': 1.0027000000002728e-05}, {'time': 0.018795792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.0188015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.018801972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018811153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.018811625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018821319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.694000000001063e-06, 'source_diff': 9.694000000001063e-06}, {'time': 0.018821792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018834, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2207999999999664e-05, 'source_diff': 1.2207999999999664e-05}, {'time': 0.018834472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018838986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.018839472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018843681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.209000000001545e-06, 'source_diff': 4.209000000001545e-06}, {'time': 0.018844153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018854139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000000023e-06, 'source_diff': 9.986000000000023e-06}, {'time': 0.018854611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018862639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.018863111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018871472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.018871944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018880472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527999999997232e-06, 'source_diff': 8.527999999997232e-06}, {'time': 0.018880944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018892667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1722999999998207e-05, 'source_diff': 1.1722999999998207e-05}, {'time': 0.018893139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018902472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.018902958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018914472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.018914958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018924319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.018924792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018934319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527000000002228e-06, 'source_diff': 9.527000000002228e-06}, {'time': 0.018934792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018944986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194000000001563e-05, 'source_diff': 1.0194000000001563e-05}, {'time': 0.018945458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018949986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018950458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018959986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.018960458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018974653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4195000000001567e-05, 'source_diff': 1.4195000000001567e-05}, {'time': 0.018975125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018984986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.018985458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018997847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2389000000001538e-05, 'source_diff': 1.2389000000001538e-05}, {'time': 0.018998319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:43.187" endtime="20201112 10:13:43.193"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.183" endtime="20201112 10:13:43.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:43.218" level="INFO">${debug-compressed} = {'time': [0.018503444, 0.018503931, 0.018518625, 0.018519097, 0.018527792, 0.018528264, 0.018535639, 0.018536111, 0.018547833, 0.018548306, 0.018552792, 0.018553264, 0.018565139, 0.018565611, 0.018575...</msg>
<status status="PASS" starttime="20201112 10:13:43.194" endtime="20201112 10:13:43.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.222" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:43.221" endtime="20201112 10:13:43.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.227" level="INFO">VALUE: {'time': [0.018503444, 0.018503931, 0.018518625, 0.018519097, 0.018527792, 0.018528264, 0.018535639, 0.018536111, 0.018547833, 0.018548306, 0.018552792, 0.018553264, 0.018565139, 0.018565611, 0.018575625, 0.018576097, 0.018587639, 0.018588111, 0.018598292, 0.018598778, 0.018606125, 0.018606611, 0.018611125, 0.018611611, 0.018617958, 0.018618444, 0.018626458, 0.018626944, 0.018636306, 0.018636778, 0.018646972, 0.018647444, 0.018652639, 0.018653111, 0.018665167, 0.018665639, 0.018677806, 0.018678278, 0.018685014, 0.018685486, 0.018699986, 0.018700458, 0.018714153, 0.018714625, 0.018725153, 0.018725625, 0.018738639, 0.018739125, 0.018749319, 0.018749792, 0.018760806, 0.018761292, 0.018775153, 0.018775625, 0.018784819, 0.018785292, 0.018795319, 0.018795792, 0.0188015, 0.018801972, 0.018811153, 0.018811625, 0.018821319, 0.018821792, 0.018834, 0.018834472, 0.018838986, 0.018839472, 0.018843681, 0.018844153, 0.018854139, 0.018854611, 0.018862639, 0.018863111, 0.018871472, 0.018871944, 0.018880472, 0.018880944, 0.018892667, 0.018893139, 0.018902472, 0.018902958, 0.018914472, 0.018914958, 0.018924319, 0.018924792, 0.018934319, 0.018934792, 0.018944986, 0.018945458, 0.018949986, 0.018950458, 0.018959986, 0.018960458, 0.018974653, 0.018975125, 0.018984986, 0.018985458, 0.018997847, 0.018998319], 'eventdiff': [0, 4.870000000004038e-07, 1.4693999999999124e-05, 4.720000000013602e-07, 8.694999999999536e-06, 4.7199999999789077e-07, 7.375000000000437e-06, 4.720000000013602e-07, 1.1721999999998733e-05, 4.7300000000083386e-07, 4.485999999997992e-06, 4.720000000013602e-07, 1.1875000000001468e-05, 4.7199999999789077e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 1.0180999999997997e-05, 4.860000000009301e-07, 7.347000000001297e-06, 4.859999999974607e-07, 4.514000000000601e-06, 4.860000000009301e-07, 6.347000000000297e-06, 4.860000000009301e-07, 8.013999999997162e-06, 4.860000000009301e-07, 9.361999999998871e-06, 4.720000000013602e-07, 1.0194000000001563e-05, 4.7199999999789077e-07, 5.1949999999995056e-06, 4.720000000013602e-07, 1.2055999999999872e-05, 4.720000000013602e-07, 1.2167000000000427e-05, 4.7199999999789077e-07, 6.736000000000242e-06, 4.720000000013602e-07, 1.4499999999997154e-05, 4.720000000013602e-07, 1.3695000000001067e-05, 4.7199999999789077e-07, 1.0528000000002702e-05, 4.7199999999789077e-07, 1.3014000000002163e-05, 4.859999999974607e-07, 1.0194000000001563e-05, 4.7300000000083386e-07, 1.1014000000000163e-05, 4.859999999974607e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 9.194000000000563e-06, 4.729999999973644e-07, 1.0027000000002728e-05, 4.729999999973644e-07, 5.708000000000102e-06, 4.720000000013602e-07, 9.181000000000467e-06, 4.7199999999789077e-07, 9.694000000001063e-06, 4.7300000000083386e-07, 1.2207999999999664e-05, 4.720000000013602e-07, 4.513999999997131e-06, 4.860000000009301e-07, 4.209000000001545e-06, 4.7199999999789077e-07, 9.986000000000023e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 8.361000000001867e-06, 4.720000000013602e-07, 8.527999999997232e-06, 4.720000000013602e-07, 1.1722999999998207e-05, 4.720000000013602e-07, 9.333000000000258e-06, 4.860000000009301e-07, 1.1514000000000663e-05, 4.859999999974607e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 9.527000000002228e-06, 4.729999999973644e-07, 1.0194000000001563e-05, 4.7199999999789077e-07, 4.528000000000171e-06, 4.720000000013602e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 1.4195000000001567e-05, 4.7199999999789077e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.2389000000001538e-05, 4.7199999999789077e-07], 'source_diff': [0, 4.870000000004038e-07, 1.4693999999999124e-05, 4.720000000013602e-07, 8.694999999999536e-06, 4.7199999999789077e-07, 7.375000000000437e-06, 4.720000000013602e-07, 1.1721999999998733e-05, 4.7300000000083386e-07, 4.485999999997992e-06, 4.720000000013602e-07, 1.1875000000001468e-05, 4.7199999999789077e-07, 1.0013999999999162e-05, 4.720000000013602e-07, 1.1541999999999802e-05, 4.720000000013602e-07, 1.0180999999997997e-05, 4.860000000009301e-07, 7.347000000001297e-06, 4.859999999974607e-07, 4.514000000000601e-06, 4.860000000009301e-07, 6.347000000000297e-06, 4.860000000009301e-07, 8.013999999997162e-06, 4.860000000009301e-07, 9.361999999998871e-06, 4.720000000013602e-07, 1.0194000000001563e-05, 4.7199999999789077e-07, 5.1949999999995056e-06, 4.720000000013602e-07, 1.2055999999999872e-05, 4.720000000013602e-07, 1.2167000000000427e-05, 4.7199999999789077e-07, 6.736000000000242e-06, 4.720000000013602e-07, 1.4499999999997154e-05, 4.720000000013602e-07, 1.3695000000001067e-05, 4.7199999999789077e-07, 1.0528000000002702e-05, 4.7199999999789077e-07, 1.3014000000002163e-05, 4.859999999974607e-07, 1.0194000000001563e-05, 4.7300000000083386e-07, 1.1014000000000163e-05, 4.859999999974607e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 9.194000000000563e-06, 4.729999999973644e-07, 1.0027000000002728e-05, 4.729999999973644e-07, 5.708000000000102e-06, 4.720000000013602e-07, 9.181000000000467e-06, 4.7199999999789077e-07, 9.694000000001063e-06, 4.7300000000083386e-07, 1.2207999999999664e-05, 4.720000000013602e-07, 4.513999999997131e-06, 4.860000000009301e-07, 4.209000000001545e-06, 4.7199999999789077e-07, 9.986000000000023e-06, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 8.361000000001867e-06, 4.720000000013602e-07, 8.527999999997232e-06, 4.720000000013602e-07, 1.1722999999998207e-05, 4.720000000013602e-07, 9.333000000000258e-06, 4.860000000009301e-07, 1.1514000000000663e-05, 4.859999999974607e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 9.527000000002228e-06, 4.729999999973644e-07, 1.0194000000001563e-05, 4.7199999999789077e-07, 4.528000000000171e-06, 4.720000000013602e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 1.4195000000001567e-05, 4.7199999999789077e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.2389000000001538e-05, 4.7199999999789077e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:43.223" endtime="20201112 10:13:43.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.219" endtime="20201112 10:13:43.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:43.232" level="INFO">${RESULT} = [{'time': 0.018503931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018519097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:43.229" endtime="20201112 10:13:43.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:43.246" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018503931, 0.018519097, 0.018528264, 0.018536111, 0.018548306, 0.018553264, 0.018565611, 0.018576097, 0.018588111, 0.018598778, 0.018606611, 0.018611611, 0.018618444, 0.018626944, 0.018636...</msg>
<status status="PASS" starttime="20201112 10:13:43.233" endtime="20201112 10:13:43.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.250" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:43.249" endtime="20201112 10:13:43.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.253" level="INFO">VALUE: [4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 10:13:43.251" endtime="20201112 10:13:43.253"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.247" endtime="20201112 10:13:43.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.256" endtime="20201112 10:13:43.257"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:43.259" endtime="20201112 10:13:43.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.258" endtime="20201112 10:13:43.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.254" endtime="20201112 10:13:43.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.847" endtime="20201112 10:13:43.280"></status>
</kw>
<msg timestamp="20201112 10:13:43.280" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.288" endtime="20201112 10:13:43.299"></status>
</kw>
<msg timestamp="20201112 10:13:43.300" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:43.286" endtime="20201112 10:13:43.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.302" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:43.301" endtime="20201112 10:13:43.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.303" endtime="20201112 10:13:43.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.284" endtime="20201112 10:13:43.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.282" endtime="20201112 10:13:43.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.312" endtime="20201112 10:13:43.602"></status>
</kw>
<msg timestamp="20201112 10:13:43.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018550153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018550625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:43.311" endtime="20201112 10:13:43.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018550153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018550625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:43.607" endtime="20201112 10:13:43.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.615" endtime="20201112 10:13:43.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.308" endtime="20201112 10:13:43.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.306" endtime="20201112 10:13:43.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.622" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:43.621" endtime="20201112 10:13:43.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.627" level="INFO">VALUE: [{'time': 0.018550153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018550625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018558819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.018559292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018568472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.018568958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018583653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4694999999998598e-05, 'source_diff': 1.4694999999998598e-05}, {'time': 0.018584125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018592167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.018592639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018600833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.018601306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018605986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.018606458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018617153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0695000000001537e-05, 'source_diff': 1.0695000000001537e-05}, {'time': 0.018617625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018631986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4361000000000929e-05, 'source_diff': 1.4361000000000929e-05}, {'time': 0.018632458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018643986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.018644458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018653667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208999999999606e-06, 'source_diff': 9.208999999999606e-06}, {'time': 0.018654139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018666, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1860999999998428e-05, 'source_diff': 1.1860999999998428e-05}, {'time': 0.018666472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018673986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.018674472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018689, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.018689472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018695653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018696139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018701319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.018701806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018707333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.526999999998228e-06, 'source_diff': 5.526999999998228e-06}, {'time': 0.018707806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018713847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.018714319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018721, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.681000000001436e-06, 'source_diff': 6.681000000001436e-06}, {'time': 0.018721472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018728833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.018729306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018738, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000000063e-06, 'source_diff': 8.694000000000063e-06}, {'time': 0.018738472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018752347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3874999999999998e-05, 'source_diff': 1.3874999999999998e-05}, {'time': 0.018752819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0187575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.018757972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0187665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527999999997232e-06, 'source_diff': 8.527999999997232e-06}, {'time': 0.018766972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0187805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.018780986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0187925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.018792986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018805167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2180999999999997e-05, 'source_diff': 1.2180999999999997e-05}, {'time': 0.018805653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018813167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.018813653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018818361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.018818833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018833028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4195000000001567e-05, 'source_diff': 1.4195000000001567e-05}, {'time': 0.0188335, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018847361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018847833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018858194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.018858667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018865681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.018866153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018872042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8889999999985065e-06, 'source_diff': 5.8889999999985065e-06}, {'time': 0.018872514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018878181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.018878653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018889042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0389000000003007e-05, 'source_diff': 1.0389000000003007e-05}, {'time': 0.018889514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018903014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.0189035, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018909083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.018909556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018921847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.229099999999761e-05, 'source_diff': 1.229099999999761e-05}, {'time': 0.018922333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018936181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3848000000000332e-05, 'source_diff': 1.3848000000000332e-05}, {'time': 0.018936667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018949528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.01895, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018960375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.018960847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018972542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1694999999999067e-05, 'source_diff': 1.1694999999999067e-05}, {'time': 0.018973014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018979528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.01898, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018989556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.556000000000842e-06, 'source_diff': 9.556000000000842e-06}, {'time': 0.018990028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019004208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4180000000002524e-05, 'source_diff': 1.4180000000002524e-05}, {'time': 0.019004681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019013028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347000000002297e-06, 'source_diff': 8.347000000002297e-06}, {'time': 0.019013514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019024528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1014000000000163e-05, 'source_diff': 1.1014000000000163e-05}, {'time': 0.019025014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019029875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.019030347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019044375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.019044847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:43.623" endtime="20201112 10:13:43.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.618" endtime="20201112 10:13:43.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:43.654" level="INFO">${debug-compressed} = {'time': [0.018550153, 0.018550625, 0.018558819, 0.018559292, 0.018568472, 0.018568958, 0.018583653, 0.018584125, 0.018592167, 0.018592639, 0.018600833, 0.018601306, 0.018605986, 0.018606458, 0.018617...</msg>
<status status="PASS" starttime="20201112 10:13:43.630" endtime="20201112 10:13:43.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.658" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:43.657" endtime="20201112 10:13:43.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.662" level="INFO">VALUE: {'time': [0.018550153, 0.018550625, 0.018558819, 0.018559292, 0.018568472, 0.018568958, 0.018583653, 0.018584125, 0.018592167, 0.018592639, 0.018600833, 0.018601306, 0.018605986, 0.018606458, 0.018617153, 0.018617625, 0.018631986, 0.018632458, 0.018643986, 0.018644458, 0.018653667, 0.018654139, 0.018666, 0.018666472, 0.018673986, 0.018674472, 0.018689, 0.018689472, 0.018695653, 0.018696139, 0.018701319, 0.018701806, 0.018707333, 0.018707806, 0.018713847, 0.018714319, 0.018721, 0.018721472, 0.018728833, 0.018729306, 0.018738, 0.018738472, 0.018752347, 0.018752819, 0.0187575, 0.018757972, 0.0187665, 0.018766972, 0.0187805, 0.018780986, 0.0187925, 0.018792986, 0.018805167, 0.018805653, 0.018813167, 0.018813653, 0.018818361, 0.018818833, 0.018833028, 0.0188335, 0.018847361, 0.018847833, 0.018858194, 0.018858667, 0.018865681, 0.018866153, 0.018872042, 0.018872514, 0.018878181, 0.018878653, 0.018889042, 0.018889514, 0.018903014, 0.0189035, 0.018909083, 0.018909556, 0.018921847, 0.018922333, 0.018936181, 0.018936667, 0.018949528, 0.01895, 0.018960375, 0.018960847, 0.018972542, 0.018973014, 0.018979528, 0.01898, 0.018989556, 0.018990028, 0.019004208, 0.019004681, 0.019013028, 0.019013514, 0.019024528, 0.019025014, 0.019029875, 0.019030347, 0.019044375, 0.019044847], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 4.720000000013602e-07, 8.193999999999563e-06, 4.7300000000083386e-07, 9.179999999997523e-06, 4.860000000009301e-07, 1.4694999999998598e-05, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 8.193999999999563e-06, 4.7300000000083386e-07, 4.679999999999962e-06, 4.7199999999789077e-07, 1.0695000000001537e-05, 4.7199999999789077e-07, 1.4361000000000929e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 9.208999999999606e-06, 4.720000000013602e-07, 1.1860999999998428e-05, 4.720000000013602e-07, 7.514000000000132e-06, 4.860000000009301e-07, 1.4527999999999763e-05, 4.7199999999789077e-07, 6.181000000000936e-06, 4.860000000009301e-07, 5.180000000000462e-06, 4.870000000004038e-07, 5.526999999998228e-06, 4.7300000000083386e-07, 6.040999999998298e-06, 4.720000000013602e-07, 6.681000000001436e-06, 4.7199999999789077e-07, 7.361000000000867e-06, 4.7300000000083386e-07, 8.694000000000063e-06, 4.7199999999789077e-07, 1.3874999999999998e-05, 4.720000000013602e-07, 4.680999999999436e-06, 4.720000000013602e-07, 8.527999999997232e-06, 4.720000000013602e-07, 1.3527999999998763e-05, 4.860000000009301e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 1.2180999999999997e-05, 4.859999999974607e-07, 7.514000000000132e-06, 4.860000000009301e-07, 4.707999999999102e-06, 4.720000000013602e-07, 1.4195000000001567e-05, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 1.0361000000000398e-05, 4.729999999973644e-07, 7.013999999999632e-06, 4.720000000013602e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 5.667000000000866e-06, 4.7199999999789077e-07, 1.0389000000003007e-05, 4.7199999999789077e-07, 1.3499999999999623e-05, 4.860000000009301e-07, 5.582999999999977e-06, 4.7300000000083386e-07, 1.229099999999761e-05, 4.860000000009301e-07, 1.3848000000000332e-05, 4.860000000009301e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7199999999789077e-07, 1.1694999999999067e-05, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 9.556000000000842e-06, 4.7199999999789077e-07, 1.4180000000002524e-05, 4.729999999973644e-07, 8.347000000002297e-06, 4.859999999974607e-07, 1.1014000000000163e-05, 4.860000000009301e-07, 4.861000000001836e-06, 4.7199999999789077e-07, 1.4027999999999263e-05, 4.720000000013602e-07], 'source_diff': [0, 4.720000000013602e-07, 8.193999999999563e-06, 4.7300000000083386e-07, 9.179999999997523e-06, 4.860000000009301e-07, 1.4694999999998598e-05, 4.720000000013602e-07, 8.041999999999772e-06, 4.720000000013602e-07, 8.193999999999563e-06, 4.7300000000083386e-07, 4.679999999999962e-06, 4.7199999999789077e-07, 1.0695000000001537e-05, 4.7199999999789077e-07, 1.4361000000000929e-05, 4.720000000013602e-07, 1.1528000000000233e-05, 4.7199999999789077e-07, 9.208999999999606e-06, 4.720000000013602e-07, 1.1860999999998428e-05, 4.720000000013602e-07, 7.514000000000132e-06, 4.860000000009301e-07, 1.4527999999999763e-05, 4.7199999999789077e-07, 6.181000000000936e-06, 4.860000000009301e-07, 5.180000000000462e-06, 4.870000000004038e-07, 5.526999999998228e-06, 4.7300000000083386e-07, 6.040999999998298e-06, 4.720000000013602e-07, 6.681000000001436e-06, 4.7199999999789077e-07, 7.361000000000867e-06, 4.7300000000083386e-07, 8.694000000000063e-06, 4.7199999999789077e-07, 1.3874999999999998e-05, 4.720000000013602e-07, 4.680999999999436e-06, 4.720000000013602e-07, 8.527999999997232e-06, 4.720000000013602e-07, 1.3527999999998763e-05, 4.860000000009301e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 1.2180999999999997e-05, 4.859999999974607e-07, 7.514000000000132e-06, 4.860000000009301e-07, 4.707999999999102e-06, 4.720000000013602e-07, 1.4195000000001567e-05, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 1.0361000000000398e-05, 4.729999999973644e-07, 7.013999999999632e-06, 4.720000000013602e-07, 5.8889999999985065e-06, 4.720000000013602e-07, 5.667000000000866e-06, 4.7199999999789077e-07, 1.0389000000003007e-05, 4.7199999999789077e-07, 1.3499999999999623e-05, 4.860000000009301e-07, 5.582999999999977e-06, 4.7300000000083386e-07, 1.229099999999761e-05, 4.860000000009301e-07, 1.3848000000000332e-05, 4.860000000009301e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7199999999789077e-07, 1.1694999999999067e-05, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 9.556000000000842e-06, 4.7199999999789077e-07, 1.4180000000002524e-05, 4.729999999973644e-07, 8.347000000002297e-06, 4.859999999974607e-07, 1.1014000000000163e-05, 4.860000000009301e-07, 4.861000000001836e-06, 4.7199999999789077e-07, 1.4027999999999263e-05, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:43.659" endtime="20201112 10:13:43.663"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.655" endtime="20201112 10:13:43.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:43.668" level="INFO">${RESULT} = [{'time': 0.018550625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018559292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:43.664" endtime="20201112 10:13:43.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:43.681" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018550625, 0.018559292, 0.018568958, 0.018584125, 0.018592639, 0.018601306, 0.018606458, 0.018617625, 0.018632458, 0.018644458, 0.018654139, 0.018666472, 0.018674472, 0.018689472, 0.018696...</msg>
<status status="PASS" starttime="20201112 10:13:43.669" endtime="20201112 10:13:43.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.686" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:43.685" endtime="20201112 10:13:43.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.688" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:13:43.687" endtime="20201112 10:13:43.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.682" endtime="20201112 10:13:43.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.691" endtime="20201112 10:13:43.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:43.695" endtime="20201112 10:13:43.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.693" endtime="20201112 10:13:43.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.690" endtime="20201112 10:13:43.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.281" endtime="20201112 10:13:43.715"></status>
</kw>
<msg timestamp="20201112 10:13:43.716" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.724" endtime="20201112 10:13:43.734"></status>
</kw>
<msg timestamp="20201112 10:13:43.735" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:43.722" endtime="20201112 10:13:43.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.737" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:43.736" endtime="20201112 10:13:43.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.738" endtime="20201112 10:13:43.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.719" endtime="20201112 10:13:43.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.717" endtime="20201112 10:13:43.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.747" endtime="20201112 10:13:44.033"></status>
</kw>
<msg timestamp="20201112 10:13:44.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019280833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019281306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:43.746" endtime="20201112 10:13:44.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019280833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019281306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:44.038" endtime="20201112 10:13:44.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.046" endtime="20201112 10:13:44.048"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.743" endtime="20201112 10:13:44.048"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.742" endtime="20201112 10:13:44.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.053" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:44.052" endtime="20201112 10:13:44.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.058" level="INFO">VALUE: [{'time': 0.019280833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019281306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019285486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.019285958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019300667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4709000000001637e-05, 'source_diff': 1.4709000000001637e-05}, {'time': 0.019301139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019307986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000000797e-06, 'source_diff': 6.847000000000797e-06}, {'time': 0.019308458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019320319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1860999999998428e-05, 'source_diff': 1.1860999999998428e-05}, {'time': 0.019320792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019330819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.019331292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01934, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.019340472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019353653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3180999999997528e-05, 'source_diff': 1.3180999999997528e-05}, {'time': 0.019354139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019368153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.019368639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019381819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3180000000001524e-05, 'source_diff': 1.3180000000001524e-05}, {'time': 0.019382306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.019387833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527000000001697e-06, 'source_diff': 5.527000000001697e-06}, {'time': 0.019388306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019394486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.179999999997993e-06, 'source_diff': 6.179999999997993e-06}, {'time': 0.019394972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0194045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.019404972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019410833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019411306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019423333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2027000000001259e-05, 'source_diff': 1.2027000000001259e-05}, {'time': 0.019423806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019431167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.019431639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019443833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.019444306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0194565, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.019456972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019461347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.019461819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019472833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1013999999996693e-05, 'source_diff': 1.1013999999996693e-05}, {'time': 0.019473306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019484833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1527000000000759e-05, 'source_diff': 1.1527000000000759e-05}, {'time': 0.019485319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019491, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.019491486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019497014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.019497486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019503194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.019503667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019511681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.019512153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0195205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.019520986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019527847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.019528319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0195325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.181000000002405e-06, 'source_diff': 4.181000000002405e-06}, {'time': 0.019532972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019545653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2681000000000497e-05, 'source_diff': 1.2681000000000497e-05}, {'time': 0.019546139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019551319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.019551806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019565653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.384699999999739e-05, 'source_diff': 1.384699999999739e-05}, {'time': 0.019566139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019578986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.019579472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019594167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4694999999998598e-05, 'source_diff': 1.4694999999998598e-05}, {'time': 0.019594639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019607667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3027999999998263e-05, 'source_diff': 1.3027999999998263e-05}, {'time': 0.019608139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019622347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4207999999998194e-05, 'source_diff': 1.4207999999998194e-05}, {'time': 0.019622819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019628347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.019628819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019634, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.019634472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019644861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.019645333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0196505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.019650972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019656014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.019656486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019662861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.019663333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019672667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.019673153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.0196865, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347000000000359e-05, 'source_diff': 1.3347000000000359e-05}, {'time': 0.019686986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019695194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.019695667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019701167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.019701653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019710833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180000000000993e-06, 'source_diff': 9.180000000000993e-06}, {'time': 0.019711319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019718681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361999999996871e-06, 'source_diff': 7.361999999996871e-06}, {'time': 0.019719153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019730181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027999999999732e-05, 'source_diff': 1.1027999999999732e-05}, {'time': 0.019730653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019740347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.693999999997593e-06, 'source_diff': 9.693999999997593e-06}, {'time': 0.019740819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019748194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.019748667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:44.054" endtime="20201112 10:13:44.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.050" endtime="20201112 10:13:44.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:44.085" level="INFO">${debug-compressed} = {'time': [0.019280833, 0.019281306, 0.019285486, 0.019285958, 0.019300667, 0.019301139, 0.019307986, 0.019308458, 0.019320319, 0.019320792, 0.019330819, 0.019331292, 0.01934, 0.019340472, 0.019353653,...</msg>
<status status="PASS" starttime="20201112 10:13:44.061" endtime="20201112 10:13:44.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.088" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:44.087" endtime="20201112 10:13:44.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.093" level="INFO">VALUE: {'time': [0.019280833, 0.019281306, 0.019285486, 0.019285958, 0.019300667, 0.019301139, 0.019307986, 0.019308458, 0.019320319, 0.019320792, 0.019330819, 0.019331292, 0.01934, 0.019340472, 0.019353653, 0.019354139, 0.019368153, 0.019368639, 0.019381819, 0.019382306, 0.019387833, 0.019388306, 0.019394486, 0.019394972, 0.0194045, 0.019404972, 0.019410833, 0.019411306, 0.019423333, 0.019423806, 0.019431167, 0.019431639, 0.019443833, 0.019444306, 0.0194565, 0.019456972, 0.019461347, 0.019461819, 0.019472833, 0.019473306, 0.019484833, 0.019485319, 0.019491, 0.019491486, 0.019497014, 0.019497486, 0.019503194, 0.019503667, 0.019511681, 0.019512153, 0.0195205, 0.019520986, 0.019527847, 0.019528319, 0.0195325, 0.019532972, 0.019545653, 0.019546139, 0.019551319, 0.019551806, 0.019565653, 0.019566139, 0.019578986, 0.019579472, 0.019594167, 0.019594639, 0.019607667, 0.019608139, 0.019622347, 0.019622819, 0.019628347, 0.019628819, 0.019634, 0.019634472, 0.019644861, 0.019645333, 0.0196505, 0.019650972, 0.019656014, 0.019656486, 0.019662861, 0.019663333, 0.019672667, 0.019673153, 0.0196865, 0.019686986, 0.019695194, 0.019695667, 0.019701167, 0.019701653, 0.019710833, 0.019711319, 0.019718681, 0.019719153, 0.019730181, 0.019730653, 0.019740347, 0.019740819, 0.019748194, 0.019748667], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 4.7300000000083386e-07, 4.179999999999462e-06, 4.7199999999789077e-07, 1.4709000000001637e-05, 4.7199999999789077e-07, 6.847000000000797e-06, 4.720000000013602e-07, 1.1860999999998428e-05, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 8.707999999999633e-06, 4.720000000013602e-07, 1.3180999999997528e-05, 4.860000000009301e-07, 1.4013999999999693e-05, 4.860000000009301e-07, 1.3180000000001524e-05, 4.869999999969343e-07, 5.527000000001697e-06, 4.7300000000083386e-07, 6.179999999997993e-06, 4.860000000009301e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 5.860999999999367e-06, 4.7300000000083386e-07, 1.2027000000001259e-05, 4.729999999973644e-07, 7.361000000000867e-06, 4.720000000013602e-07, 1.2194000000000094e-05, 4.7300000000083386e-07, 1.2194000000000094e-05, 4.7199999999789077e-07, 4.375000000000906e-06, 4.720000000013602e-07, 1.1013999999996693e-05, 4.7300000000083386e-07, 1.1527000000000759e-05, 4.860000000009301e-07, 5.681000000000436e-06, 4.859999999974607e-07, 5.528000000001171e-06, 4.720000000013602e-07, 5.708000000000102e-06, 4.729999999973644e-07, 8.014000000000632e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.860000000009301e-07, 6.861000000000367e-06, 4.7199999999789077e-07, 4.181000000002405e-06, 4.7199999999789077e-07, 1.2681000000000497e-05, 4.860000000009301e-07, 5.180000000000462e-06, 4.870000000004038e-07, 1.384699999999739e-05, 4.860000000009301e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.4694999999998598e-05, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 1.4207999999998194e-05, 4.720000000013602e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 5.180999999999936e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 5.167000000000366e-06, 4.7199999999789077e-07, 5.042000000000241e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.859999999974607e-07, 1.3347000000000359e-05, 4.860000000009301e-07, 8.207999999999133e-06, 4.7300000000083386e-07, 5.499999999998562e-06, 4.860000000009301e-07, 9.180000000000993e-06, 4.860000000009301e-07, 7.361999999996871e-06, 4.720000000013602e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 9.693999999997593e-06, 4.720000000013602e-07, 7.375000000000437e-06, 4.7300000000083386e-07], 'source_diff': [0, 4.7300000000083386e-07, 4.179999999999462e-06, 4.7199999999789077e-07, 1.4709000000001637e-05, 4.7199999999789077e-07, 6.847000000000797e-06, 4.720000000013602e-07, 1.1860999999998428e-05, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 8.707999999999633e-06, 4.720000000013602e-07, 1.3180999999997528e-05, 4.860000000009301e-07, 1.4013999999999693e-05, 4.860000000009301e-07, 1.3180000000001524e-05, 4.869999999969343e-07, 5.527000000001697e-06, 4.7300000000083386e-07, 6.179999999997993e-06, 4.860000000009301e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 5.860999999999367e-06, 4.7300000000083386e-07, 1.2027000000001259e-05, 4.729999999973644e-07, 7.361000000000867e-06, 4.720000000013602e-07, 1.2194000000000094e-05, 4.7300000000083386e-07, 1.2194000000000094e-05, 4.7199999999789077e-07, 4.375000000000906e-06, 4.720000000013602e-07, 1.1013999999996693e-05, 4.7300000000083386e-07, 1.1527000000000759e-05, 4.860000000009301e-07, 5.681000000000436e-06, 4.859999999974607e-07, 5.528000000001171e-06, 4.720000000013602e-07, 5.708000000000102e-06, 4.729999999973644e-07, 8.014000000000632e-06, 4.720000000013602e-07, 8.346999999998828e-06, 4.860000000009301e-07, 6.861000000000367e-06, 4.7199999999789077e-07, 4.181000000002405e-06, 4.7199999999789077e-07, 1.2681000000000497e-05, 4.860000000009301e-07, 5.180000000000462e-06, 4.870000000004038e-07, 1.384699999999739e-05, 4.860000000009301e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.4694999999998598e-05, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 1.4207999999998194e-05, 4.720000000013602e-07, 5.528000000001171e-06, 4.7199999999789077e-07, 5.180999999999936e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 5.167000000000366e-06, 4.7199999999789077e-07, 5.042000000000241e-06, 4.720000000013602e-07, 6.374999999999437e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.859999999974607e-07, 1.3347000000000359e-05, 4.860000000009301e-07, 8.207999999999133e-06, 4.7300000000083386e-07, 5.499999999998562e-06, 4.860000000009301e-07, 9.180000000000993e-06, 4.860000000009301e-07, 7.361999999996871e-06, 4.720000000013602e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 9.693999999997593e-06, 4.720000000013602e-07, 7.375000000000437e-06, 4.7300000000083386e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:44.090" endtime="20201112 10:13:44.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.085" endtime="20201112 10:13:44.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:44.099" level="INFO">${RESULT} = [{'time': 0.019281306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019285958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:44.095" endtime="20201112 10:13:44.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:44.113" level="INFO">${GPIO_OVERHEAD} = {'time': [0.019281306, 0.019285958, 0.019301139, 0.019308458, 0.019320792, 0.019331292, 0.019340472, 0.019354139, 0.019368639, 0.019382306, 0.019388306, 0.019394972, 0.019404972, 0.019411306, 0.019423...</msg>
<status status="PASS" starttime="20201112 10:13:44.100" endtime="20201112 10:13:44.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.117" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:44.116" endtime="20201112 10:13:44.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.120" level="INFO">VALUE: [4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.869999999969343e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 10:13:44.119" endtime="20201112 10:13:44.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.114" endtime="20201112 10:13:44.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.123" endtime="20201112 10:13:44.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:44.127" endtime="20201112 10:13:44.146"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.125" endtime="20201112 10:13:44.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.122" endtime="20201112 10:13:44.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.716" endtime="20201112 10:13:44.147"></status>
</kw>
<msg timestamp="20201112 10:13:44.148" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.155" endtime="20201112 10:13:44.166"></status>
</kw>
<msg timestamp="20201112 10:13:44.166" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:44.154" endtime="20201112 10:13:44.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.168" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:44.167" endtime="20201112 10:13:44.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.170" endtime="20201112 10:13:44.171"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.151" endtime="20201112 10:13:44.172"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.150" endtime="20201112 10:13:44.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.179" endtime="20201112 10:13:44.468"></status>
</kw>
<msg timestamp="20201112 10:13:44.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018651042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018651514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:44.177" endtime="20201112 10:13:44.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018651042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018651514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:44.472" endtime="20201112 10:13:44.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.481" endtime="20201112 10:13:44.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.175" endtime="20201112 10:13:44.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.173" endtime="20201112 10:13:44.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.488" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:44.487" endtime="20201112 10:13:44.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.494" level="INFO">VALUE: [{'time': 0.018651042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018651514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018657167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6529999999978264e-06, 'source_diff': 5.6529999999978264e-06}, {'time': 0.018657639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018666194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555000000000368e-06, 'source_diff': 8.555000000000368e-06}, {'time': 0.018666667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0186745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.018674972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018683833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018684306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018689653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018690125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018701653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.018702125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0187095, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.018709972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018719722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.018720194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018730153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.959000000000356e-06, 'source_diff': 9.959000000000356e-06}, {'time': 0.018730639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018745319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4679999999999555e-05, 'source_diff': 1.4679999999999555e-05}, {'time': 0.018745806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018750986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.018751472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018761667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194999999997567e-05, 'source_diff': 1.0194999999997567e-05}, {'time': 0.018762139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018767514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.018767986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018777667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.681000000000967e-06, 'source_diff': 9.681000000000967e-06}, {'time': 0.018778139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018782306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.018782792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018790153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.018790625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018797139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.514000000002601e-06, 'source_diff': 6.514000000002601e-06}, {'time': 0.018797625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018805972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347000000002297e-06, 'source_diff': 8.347000000002297e-06}, {'time': 0.018806458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018815819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.018816292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018828319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2027000000001259e-05, 'source_diff': 1.2027000000001259e-05}, {'time': 0.018828792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018842319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.352699999999929e-05, 'source_diff': 1.352699999999929e-05}, {'time': 0.018842792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018847653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.018848125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018860986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.018861458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018872153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694999999998067e-05, 'source_diff': 1.0694999999998067e-05}, {'time': 0.018872625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018885153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2527999999997763e-05, 'source_diff': 1.2527999999997763e-05}, {'time': 0.018885625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018891333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.018891806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018898486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.679999999998493e-06, 'source_diff': 6.679999999998493e-06}, {'time': 0.018898972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018905153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018905639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018910333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.694000000003001e-06, 'source_diff': 4.694000000003001e-06}, {'time': 0.018910806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018919361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.555000000000368e-06, 'source_diff': 8.555000000000368e-06}, {'time': 0.018919833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018933847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.018934319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018941333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.018941806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018948181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.375000000002906e-06, 'source_diff': 6.375000000002906e-06}, {'time': 0.018948653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018960167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.018960639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018973, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.018973472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018980667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.194999999998036e-06, 'source_diff': 7.194999999998036e-06}, {'time': 0.018981139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018989, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.018989472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018996875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402999999999577e-06, 'source_diff': 7.402999999999577e-06}, {'time': 0.018997347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019011667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4319999999998223e-05, 'source_diff': 1.4319999999998223e-05}, {'time': 0.019012153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.019025486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019036667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1180999999998997e-05, 'source_diff': 1.1180999999998997e-05}, {'time': 0.019037153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019041333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.019041806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019045958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152000000000322e-06, 'source_diff': 4.152000000000322e-06}, {'time': 0.019046444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019057792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1348000000001301e-05, 'source_diff': 1.1348000000001301e-05}, {'time': 0.019058278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019071639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.019072111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019085139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3028000000001733e-05, 'source_diff': 1.3028000000001733e-05}, {'time': 0.019085611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019096472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.019096944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019103306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.36199999999934e-06, 'source_diff': 6.36199999999934e-06}, {'time': 0.019103778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019113806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.019114278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:44.489" endtime="20201112 10:13:44.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.484" endtime="20201112 10:13:44.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:44.520" level="INFO">${debug-compressed} = {'time': [0.018651042, 0.018651514, 0.018657167, 0.018657639, 0.018666194, 0.018666667, 0.0186745, 0.018674972, 0.018683833, 0.018684306, 0.018689653, 0.018690125, 0.018701653, 0.018702125, 0.0187095,...</msg>
<status status="PASS" starttime="20201112 10:13:44.497" endtime="20201112 10:13:44.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.524" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:44.523" endtime="20201112 10:13:44.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.528" level="INFO">VALUE: {'time': [0.018651042, 0.018651514, 0.018657167, 0.018657639, 0.018666194, 0.018666667, 0.0186745, 0.018674972, 0.018683833, 0.018684306, 0.018689653, 0.018690125, 0.018701653, 0.018702125, 0.0187095, 0.018709972, 0.018719722, 0.018720194, 0.018730153, 0.018730639, 0.018745319, 0.018745806, 0.018750986, 0.018751472, 0.018761667, 0.018762139, 0.018767514, 0.018767986, 0.018777667, 0.018778139, 0.018782306, 0.018782792, 0.018790153, 0.018790625, 0.018797139, 0.018797625, 0.018805972, 0.018806458, 0.018815819, 0.018816292, 0.018828319, 0.018828792, 0.018842319, 0.018842792, 0.018847653, 0.018848125, 0.018860986, 0.018861458, 0.018872153, 0.018872625, 0.018885153, 0.018885625, 0.018891333, 0.018891806, 0.018898486, 0.018898972, 0.018905153, 0.018905639, 0.018910333, 0.018910806, 0.018919361, 0.018919833, 0.018933847, 0.018934319, 0.018941333, 0.018941806, 0.018948181, 0.018948653, 0.018960167, 0.018960639, 0.018973, 0.018973472, 0.018980667, 0.018981139, 0.018989, 0.018989472, 0.018996875, 0.018997347, 0.019011667, 0.019012153, 0.019025, 0.019025486, 0.019036667, 0.019037153, 0.019041333, 0.019041806, 0.019045958, 0.019046444, 0.019057792, 0.019058278, 0.019071639, 0.019072111, 0.019085139, 0.019085611, 0.019096472, 0.019096944, 0.019103306, 0.019103778, 0.019113806, 0.019114278], 'eventdiff': [0, 4.720000000013602e-07, 5.6529999999978264e-06, 4.720000000013602e-07, 8.555000000000368e-06, 4.7300000000083386e-07, 7.832999999998758e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.7300000000083386e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 7.375000000000437e-06, 4.7199999999789077e-07, 9.750000000002812e-06, 4.7199999999789077e-07, 9.959000000000356e-06, 4.860000000009301e-07, 1.4679999999999555e-05, 4.870000000004038e-07, 5.180000000000462e-06, 4.860000000009301e-07, 1.0194999999997567e-05, 4.720000000013602e-07, 5.374999999998437e-06, 4.720000000013602e-07, 9.681000000000967e-06, 4.7199999999789077e-07, 4.166999999999366e-06, 4.860000000009301e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 6.514000000002601e-06, 4.859999999974607e-07, 8.347000000002297e-06, 4.860000000009301e-07, 9.360999999999398e-06, 4.729999999973644e-07, 1.2027000000001259e-05, 4.7300000000083386e-07, 1.352699999999929e-05, 4.7300000000083386e-07, 4.860999999998367e-06, 4.720000000013602e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 1.2527999999997763e-05, 4.720000000013602e-07, 5.708000000000102e-06, 4.7300000000083386e-07, 6.679999999998493e-06, 4.860000000009301e-07, 6.181000000000936e-06, 4.859999999974607e-07, 4.694000000003001e-06, 4.729999999973644e-07, 8.555000000000368e-06, 4.720000000013602e-07, 1.4013999999999693e-05, 4.720000000013602e-07, 7.013999999999632e-06, 4.729999999973644e-07, 6.375000000002906e-06, 4.7199999999789077e-07, 1.1514000000000663e-05, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07, 7.194999999998036e-06, 4.720000000013602e-07, 7.860999999997897e-06, 4.720000000013602e-07, 7.402999999999577e-06, 4.720000000013602e-07, 1.4319999999998223e-05, 4.860000000009301e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.1180999999998997e-05, 4.860000000009301e-07, 4.179999999999462e-06, 4.7300000000083386e-07, 4.152000000000322e-06, 4.859999999974607e-07, 1.1348000000001301e-05, 4.860000000009301e-07, 1.3360999999999928e-05, 4.7199999999789077e-07, 1.3028000000001733e-05, 4.7199999999789077e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 6.36199999999934e-06, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.7199999999789077e-07], 'source_diff': [0, 4.720000000013602e-07, 5.6529999999978264e-06, 4.720000000013602e-07, 8.555000000000368e-06, 4.7300000000083386e-07, 7.832999999998758e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.7300000000083386e-07, 5.346999999999297e-06, 4.7199999999789077e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 7.375000000000437e-06, 4.7199999999789077e-07, 9.750000000002812e-06, 4.7199999999789077e-07, 9.959000000000356e-06, 4.860000000009301e-07, 1.4679999999999555e-05, 4.870000000004038e-07, 5.180000000000462e-06, 4.860000000009301e-07, 1.0194999999997567e-05, 4.720000000013602e-07, 5.374999999998437e-06, 4.720000000013602e-07, 9.681000000000967e-06, 4.7199999999789077e-07, 4.166999999999366e-06, 4.860000000009301e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 6.514000000002601e-06, 4.859999999974607e-07, 8.347000000002297e-06, 4.860000000009301e-07, 9.360999999999398e-06, 4.729999999973644e-07, 1.2027000000001259e-05, 4.7300000000083386e-07, 1.352699999999929e-05, 4.7300000000083386e-07, 4.860999999998367e-06, 4.720000000013602e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 1.2527999999997763e-05, 4.720000000013602e-07, 5.708000000000102e-06, 4.7300000000083386e-07, 6.679999999998493e-06, 4.860000000009301e-07, 6.181000000000936e-06, 4.859999999974607e-07, 4.694000000003001e-06, 4.729999999973644e-07, 8.555000000000368e-06, 4.720000000013602e-07, 1.4013999999999693e-05, 4.720000000013602e-07, 7.013999999999632e-06, 4.729999999973644e-07, 6.375000000002906e-06, 4.7199999999789077e-07, 1.1514000000000663e-05, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07, 7.194999999998036e-06, 4.720000000013602e-07, 7.860999999997897e-06, 4.720000000013602e-07, 7.402999999999577e-06, 4.720000000013602e-07, 1.4319999999998223e-05, 4.860000000009301e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.1180999999998997e-05, 4.860000000009301e-07, 4.179999999999462e-06, 4.7300000000083386e-07, 4.152000000000322e-06, 4.859999999974607e-07, 1.1348000000001301e-05, 4.860000000009301e-07, 1.3360999999999928e-05, 4.7199999999789077e-07, 1.3028000000001733e-05, 4.7199999999789077e-07, 1.0861000000000898e-05, 4.720000000013602e-07, 6.36199999999934e-06, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.7199999999789077e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:44.525" endtime="20201112 10:13:44.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.521" endtime="20201112 10:13:44.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:44.534" level="INFO">${RESULT} = [{'time': 0.018651514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018657639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:44.531" endtime="20201112 10:13:44.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:44.548" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018651514, 0.018657639, 0.018666667, 0.018674972, 0.018684306, 0.018690125, 0.018702125, 0.018709972, 0.018720194, 0.018730639, 0.018745806, 0.018751472, 0.018762139, 0.018767986, 0.018778...</msg>
<status status="PASS" starttime="20201112 10:13:44.535" endtime="20201112 10:13:44.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.552" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:44.551" endtime="20201112 10:13:44.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.554" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 10:13:44.553" endtime="20201112 10:13:44.555"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.548" endtime="20201112 10:13:44.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.557" endtime="20201112 10:13:44.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:44.561" endtime="20201112 10:13:44.580"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.559" endtime="20201112 10:13:44.581"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.556" endtime="20201112 10:13:44.581"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.148" endtime="20201112 10:13:44.582"></status>
</kw>
<msg timestamp="20201112 10:13:44.582" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.590" endtime="20201112 10:13:44.601"></status>
</kw>
<msg timestamp="20201112 10:13:44.601" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:44.588" endtime="20201112 10:13:44.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.604" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:44.602" endtime="20201112 10:13:44.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.605" endtime="20201112 10:13:44.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.585" endtime="20201112 10:13:44.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.584" endtime="20201112 10:13:44.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.614" endtime="20201112 10:13:44.901"></status>
</kw>
<msg timestamp="20201112 10:13:44.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019322431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019322903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:44.612" endtime="20201112 10:13:44.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019322431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019322903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:44.905" endtime="20201112 10:13:44.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.914" endtime="20201112 10:13:44.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.610" endtime="20201112 10:13:44.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.608" endtime="20201112 10:13:44.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.920" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:44.919" endtime="20201112 10:13:44.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.925" level="INFO">VALUE: [{'time': 0.019322431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019322903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019336097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.019336569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019347431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861999999996902e-05, 'source_diff': 1.0861999999996902e-05}, {'time': 0.019347903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019354097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.019354569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019360444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.019360917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019368931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.019369417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019377097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.679999999999493e-06, 'source_diff': 7.679999999999493e-06}, {'time': 0.019377583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019390931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347999999999832e-05, 'source_diff': 1.3347999999999832e-05}, {'time': 0.019391417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019404944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.352699999999929e-05, 'source_diff': 1.352699999999929e-05}, {'time': 0.019405417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019410931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.019411417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019418931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.019419417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019429444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.019429917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019438778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.01943925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019446778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.01944725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019451958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.019452431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019457944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.513000000002127e-06, 'source_diff': 5.513000000002127e-06}, {'time': 0.019458417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019465792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.019466264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019478278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2014000000001163e-05, 'source_diff': 1.2014000000001163e-05}, {'time': 0.01947875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019491458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.019491931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019504667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2735999999999303e-05, 'source_diff': 1.2735999999999303e-05}, {'time': 0.019505139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019511278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1389999999987566e-06, 'source_diff': 6.1389999999987566e-06}, {'time': 0.019511764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019519111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.019519597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019525625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.019526097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019533611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.019534097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019544792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694999999998067e-05, 'source_diff': 1.0694999999998067e-05}, {'time': 0.019545264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019553458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.019553931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019567292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.019567764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019573125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.019573597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019588306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4708999999998168e-05, 'source_diff': 1.4708999999998168e-05}, {'time': 0.019588778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019602139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.019602611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019610625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.019611097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019619292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999999036e-06, 'source_diff': 8.194999999999036e-06}, {'time': 0.019619778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019632292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.019632778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019637125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.019637611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019645181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.570000000001881e-06, 'source_diff': 7.570000000001881e-06}, {'time': 0.019645653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019653806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019654278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019658444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.019658917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019671444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.252699999999829e-05, 'source_diff': 1.252699999999829e-05}, {'time': 0.019671917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019683458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1541000000000329e-05, 'source_diff': 1.1541000000000329e-05}, {'time': 0.019683931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019689444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.512999999998658e-06, 'source_diff': 5.512999999998658e-06}, {'time': 0.019689931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019702139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2207999999999664e-05, 'source_diff': 1.2207999999999664e-05}, {'time': 0.019702611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019715444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2833000000000289e-05, 'source_diff': 1.2833000000000289e-05}, {'time': 0.019715931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019726778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.019727264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019731972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.019732444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019743292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0848000000000801e-05, 'source_diff': 1.0848000000000801e-05}, {'time': 0.019743764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019754958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1193999999999094e-05, 'source_diff': 1.1193999999999094e-05}, {'time': 0.019755431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019769625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4193999999998624e-05, 'source_diff': 1.4193999999998624e-05}, {'time': 0.019770097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019778958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.019779431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019787458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.027000000000728e-06, 'source_diff': 8.027000000000728e-06}, {'time': 0.019787931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019796958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.026999999998259e-06, 'source_diff': 9.026999999998259e-06}, {'time': 0.019797431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:44.922" endtime="20201112 10:13:44.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.917" endtime="20201112 10:13:44.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:44.952" level="INFO">${debug-compressed} = {'time': [0.019322431, 0.019322903, 0.019336097, 0.019336569, 0.019347431, 0.019347903, 0.019354097, 0.019354569, 0.019360444, 0.019360917, 0.019368931, 0.019369417, 0.019377097, 0.019377583, 0.019390...</msg>
<status status="PASS" starttime="20201112 10:13:44.928" endtime="20201112 10:13:44.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.956" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:44.955" endtime="20201112 10:13:44.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.960" level="INFO">VALUE: {'time': [0.019322431, 0.019322903, 0.019336097, 0.019336569, 0.019347431, 0.019347903, 0.019354097, 0.019354569, 0.019360444, 0.019360917, 0.019368931, 0.019369417, 0.019377097, 0.019377583, 0.019390931, 0.019391417, 0.019404944, 0.019405417, 0.019410931, 0.019411417, 0.019418931, 0.019419417, 0.019429444, 0.019429917, 0.019438778, 0.01943925, 0.019446778, 0.01944725, 0.019451958, 0.019452431, 0.019457944, 0.019458417, 0.019465792, 0.019466264, 0.019478278, 0.01947875, 0.019491458, 0.019491931, 0.019504667, 0.019505139, 0.019511278, 0.019511764, 0.019519111, 0.019519597, 0.019525625, 0.019526097, 0.019533611, 0.019534097, 0.019544792, 0.019545264, 0.019553458, 0.019553931, 0.019567292, 0.019567764, 0.019573125, 0.019573597, 0.019588306, 0.019588778, 0.019602139, 0.019602611, 0.019610625, 0.019611097, 0.019619292, 0.019619778, 0.019632292, 0.019632778, 0.019637125, 0.019637611, 0.019645181, 0.019645653, 0.019653806, 0.019654278, 0.019658444, 0.019658917, 0.019671444, 0.019671917, 0.019683458, 0.019683931, 0.019689444, 0.019689931, 0.019702139, 0.019702611, 0.019715444, 0.019715931, 0.019726778, 0.019727264, 0.019731972, 0.019732444, 0.019743292, 0.019743764, 0.019754958, 0.019755431, 0.019769625, 0.019770097, 0.019778958, 0.019779431, 0.019787458, 0.019787931, 0.019796958, 0.019797431], 'eventdiff': [0, 4.7199999999789077e-07, 1.3194000000001094e-05, 4.720000000013602e-07, 1.0861999999996902e-05, 4.720000000013602e-07, 6.194000000001032e-06, 4.7199999999789077e-07, 5.875000000002406e-06, 4.729999999973644e-07, 8.014000000000632e-06, 4.860000000009301e-07, 7.679999999999493e-06, 4.860000000009301e-07, 1.3347999999999832e-05, 4.860000000009301e-07, 1.352699999999929e-05, 4.7300000000083386e-07, 5.5139999999981315e-06, 4.860000000009301e-07, 7.514000000000132e-06, 4.860000000009301e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 8.860999999998898e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 4.707999999999102e-06, 4.7300000000083386e-07, 5.513000000002127e-06, 4.729999999973644e-07, 7.375000000000437e-06, 4.720000000013602e-07, 1.2014000000001163e-05, 4.7199999999789077e-07, 1.2708000000000164e-05, 4.7300000000083386e-07, 1.2735999999999303e-05, 4.720000000013602e-07, 6.1389999999987566e-06, 4.860000000009301e-07, 7.3469999999978275e-06, 4.860000000009301e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 7.514000000000132e-06, 4.860000000009301e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 8.193999999999563e-06, 4.7300000000083386e-07, 1.3360999999999928e-05, 4.720000000013602e-07, 5.360999999998867e-06, 4.720000000013602e-07, 1.4708999999998168e-05, 4.720000000013602e-07, 1.3360999999999928e-05, 4.7199999999789077e-07, 8.014000000000632e-06, 4.720000000013602e-07, 8.194999999999036e-06, 4.860000000009301e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 4.346999999998297e-06, 4.860000000009301e-07, 7.570000000001881e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.720000000013602e-07, 4.165999999999892e-06, 4.7300000000083386e-07, 1.252699999999829e-05, 4.7300000000083386e-07, 1.1541000000000329e-05, 4.7300000000083386e-07, 5.512999999998658e-06, 4.870000000004038e-07, 1.2207999999999664e-05, 4.7199999999789077e-07, 1.2833000000000289e-05, 4.870000000004038e-07, 1.0847000000001328e-05, 4.860000000009301e-07, 4.707999999999102e-06, 4.7199999999789077e-07, 1.0848000000000801e-05, 4.720000000013602e-07, 1.1193999999999094e-05, 4.7300000000083386e-07, 1.4193999999998624e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4.7300000000083386e-07, 8.027000000000728e-06, 4.7300000000083386e-07, 9.026999999998259e-06, 4.7300000000083386e-07], 'source_diff': [0, 4.7199999999789077e-07, 1.3194000000001094e-05, 4.720000000013602e-07, 1.0861999999996902e-05, 4.720000000013602e-07, 6.194000000001032e-06, 4.7199999999789077e-07, 5.875000000002406e-06, 4.729999999973644e-07, 8.014000000000632e-06, 4.860000000009301e-07, 7.679999999999493e-06, 4.860000000009301e-07, 1.3347999999999832e-05, 4.860000000009301e-07, 1.352699999999929e-05, 4.7300000000083386e-07, 5.5139999999981315e-06, 4.860000000009301e-07, 7.514000000000132e-06, 4.860000000009301e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 8.860999999998898e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.7199999999789077e-07, 4.707999999999102e-06, 4.7300000000083386e-07, 5.513000000002127e-06, 4.729999999973644e-07, 7.375000000000437e-06, 4.720000000013602e-07, 1.2014000000001163e-05, 4.7199999999789077e-07, 1.2708000000000164e-05, 4.7300000000083386e-07, 1.2735999999999303e-05, 4.720000000013602e-07, 6.1389999999987566e-06, 4.860000000009301e-07, 7.3469999999978275e-06, 4.860000000009301e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 7.514000000000132e-06, 4.860000000009301e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 8.193999999999563e-06, 4.7300000000083386e-07, 1.3360999999999928e-05, 4.720000000013602e-07, 5.360999999998867e-06, 4.720000000013602e-07, 1.4708999999998168e-05, 4.720000000013602e-07, 1.3360999999999928e-05, 4.7199999999789077e-07, 8.014000000000632e-06, 4.720000000013602e-07, 8.194999999999036e-06, 4.860000000009301e-07, 1.2513999999998193e-05, 4.860000000009301e-07, 4.346999999998297e-06, 4.860000000009301e-07, 7.570000000001881e-06, 4.7199999999789077e-07, 8.153000000000327e-06, 4.720000000013602e-07, 4.165999999999892e-06, 4.7300000000083386e-07, 1.252699999999829e-05, 4.7300000000083386e-07, 1.1541000000000329e-05, 4.7300000000083386e-07, 5.512999999998658e-06, 4.870000000004038e-07, 1.2207999999999664e-05, 4.7199999999789077e-07, 1.2833000000000289e-05, 4.870000000004038e-07, 1.0847000000001328e-05, 4.860000000009301e-07, 4.707999999999102e-06, 4.7199999999789077e-07, 1.0848000000000801e-05, 4.720000000013602e-07, 1.1193999999999094e-05, 4.7300000000083386e-07, 1.4193999999998624e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4.7300000000083386e-07, 8.027000000000728e-06, 4.7300000000083386e-07, 9.026999999998259e-06, 4.7300000000083386e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:44.957" endtime="20201112 10:13:44.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.953" endtime="20201112 10:13:44.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:44.966" level="INFO">${RESULT} = [{'time': 0.019322903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019336569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:44.963" endtime="20201112 10:13:44.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:44.980" level="INFO">${GPIO_OVERHEAD} = {'time': [0.019322903, 0.019336569, 0.019347903, 0.019354569, 0.019360917, 0.019369417, 0.019377583, 0.019391417, 0.019405417, 0.019411417, 0.019419417, 0.019429917, 0.01943925, 0.01944725, 0.01945243...</msg>
<status status="PASS" starttime="20201112 10:13:44.967" endtime="20201112 10:13:44.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.985" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:44.984" endtime="20201112 10:13:44.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.987" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 10:13:44.986" endtime="20201112 10:13:44.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.981" endtime="20201112 10:13:44.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.990" endtime="20201112 10:13:44.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:44.994" endtime="20201112 10:13:45.013"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.992" endtime="20201112 10:13:45.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.989" endtime="20201112 10:13:45.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.582" endtime="20201112 10:13:45.015"></status>
</kw>
<msg timestamp="20201112 10:13:45.015" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.022" endtime="20201112 10:13:45.033"></status>
</kw>
<msg timestamp="20201112 10:13:45.033" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.021" endtime="20201112 10:13:45.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.036" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.034" endtime="20201112 10:13:45.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.037" endtime="20201112 10:13:45.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.018" endtime="20201112 10:13:45.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.017" endtime="20201112 10:13:45.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.046" endtime="20201112 10:13:45.335"></status>
</kw>
<msg timestamp="20201112 10:13:45.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018618792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018619278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:45.044" endtime="20201112 10:13:45.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018618792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018619278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:45.339" endtime="20201112 10:13:45.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.348" endtime="20201112 10:13:45.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.042" endtime="20201112 10:13:45.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.040" endtime="20201112 10:13:45.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.354" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:45.353" endtime="20201112 10:13:45.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.359" level="INFO">VALUE: [{'time': 0.018618792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018619278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018630458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1179999999999524e-05, 'source_diff': 1.1179999999999524e-05}, {'time': 0.018630944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018642333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1389000000000538e-05, 'source_diff': 1.1389000000000538e-05}, {'time': 0.018642806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018654806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1999999999998123e-05, 'source_diff': 1.1999999999998123e-05}, {'time': 0.018655278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018666972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1693999999999594e-05, 'source_diff': 1.1693999999999594e-05}, {'time': 0.018667444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018674806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3620000000003405e-06, 'source_diff': 7.3620000000003405e-06}, {'time': 0.018675278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018689972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4693999999999124e-05, 'source_diff': 1.4693999999999124e-05}, {'time': 0.018690444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018699639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.018700111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018707306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.195000000001506e-06, 'source_diff': 7.195000000001506e-06}, {'time': 0.018707778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018719972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.018720458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018729806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.34800000000277e-06, 'source_diff': 9.34800000000277e-06}, {'time': 0.018730292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018740306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.018740792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018747806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.018748292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018762667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000000498e-05, 'source_diff': 1.4375000000000498e-05}, {'time': 0.018763139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018777153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.018777625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018790486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.018790958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018798319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.018798792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018807667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.018808139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018813319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1799999999969926e-06, 'source_diff': 5.1799999999969926e-06}, {'time': 0.018813792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018819167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.018819639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018828, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.018828472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018842486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.018842972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018848833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018849306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018860333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027000000000259e-05, 'source_diff': 1.1027000000000259e-05}, {'time': 0.018860806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018868222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.415999999999673e-06, 'source_diff': 7.415999999999673e-06}, {'time': 0.018868694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018875653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.018876139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0188865, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.018886972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018898, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1028000000003202e-05, 'source_diff': 1.1028000000003202e-05}, {'time': 0.018898472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.528000000002171e-06, 'source_diff': 6.528000000002171e-06}, {'time': 0.018905472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0189145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.018914972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018924167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.195000000000036e-06, 'source_diff': 9.195000000000036e-06}, {'time': 0.018924639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018932847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.207999999999133e-06, 'source_diff': 8.207999999999133e-06}, {'time': 0.018933319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018940333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.018940806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018946333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.526999999998228e-06, 'source_diff': 5.526999999998228e-06}, {'time': 0.018946806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018954, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.018954486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018966, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.018966486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018977833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1346999999998358e-05, 'source_diff': 1.1346999999998358e-05}, {'time': 0.018978319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018988181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.861999999999371e-06, 'source_diff': 9.861999999999371e-06}, {'time': 0.018988653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0189965, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.018996986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019010681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3695000000001067e-05, 'source_diff': 1.3695000000001067e-05}, {'time': 0.019011153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019020361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208000000000133e-06, 'source_diff': 9.208000000000133e-06}, {'time': 0.019020833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019029014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.019029486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019038861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.019039333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019046361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.028000000002671e-06, 'source_diff': 7.028000000002671e-06}, {'time': 0.019046833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019061347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.019061819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019076181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4362000000000402e-05, 'source_diff': 1.4362000000000402e-05}, {'time': 0.019076667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019084361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.694000000002532e-06, 'source_diff': 7.694000000002532e-06}, {'time': 0.019084833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019096181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1348000000001301e-05, 'source_diff': 1.1348000000001301e-05}, {'time': 0.019096667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019101042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3749999999974365e-06, 'source_diff': 4.3749999999974365e-06}, {'time': 0.019101514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019107181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.019107667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:45.355" endtime="20201112 10:13:45.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.351" endtime="20201112 10:13:45.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:45.386" level="INFO">${debug-compressed} = {'time': [0.018618792, 0.018619278, 0.018630458, 0.018630944, 0.018642333, 0.018642806, 0.018654806, 0.018655278, 0.018666972, 0.018667444, 0.018674806, 0.018675278, 0.018689972, 0.018690444, 0.018699...</msg>
<status status="PASS" starttime="20201112 10:13:45.362" endtime="20201112 10:13:45.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.390" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:45.389" endtime="20201112 10:13:45.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.394" level="INFO">VALUE: {'time': [0.018618792, 0.018619278, 0.018630458, 0.018630944, 0.018642333, 0.018642806, 0.018654806, 0.018655278, 0.018666972, 0.018667444, 0.018674806, 0.018675278, 0.018689972, 0.018690444, 0.018699639, 0.018700111, 0.018707306, 0.018707778, 0.018719972, 0.018720458, 0.018729806, 0.018730292, 0.018740306, 0.018740792, 0.018747806, 0.018748292, 0.018762667, 0.018763139, 0.018777153, 0.018777625, 0.018790486, 0.018790958, 0.018798319, 0.018798792, 0.018807667, 0.018808139, 0.018813319, 0.018813792, 0.018819167, 0.018819639, 0.018828, 0.018828472, 0.018842486, 0.018842972, 0.018848833, 0.018849306, 0.018860333, 0.018860806, 0.018868222, 0.018868694, 0.018875653, 0.018876139, 0.0188865, 0.018886972, 0.018898, 0.018898472, 0.018905, 0.018905472, 0.0189145, 0.018914972, 0.018924167, 0.018924639, 0.018932847, 0.018933319, 0.018940333, 0.018940806, 0.018946333, 0.018946806, 0.018954, 0.018954486, 0.018966, 0.018966486, 0.018977833, 0.018978319, 0.018988181, 0.018988653, 0.0189965, 0.018996986, 0.019010681, 0.019011153, 0.019020361, 0.019020833, 0.019029014, 0.019029486, 0.019038861, 0.019039333, 0.019046361, 0.019046833, 0.019061347, 0.019061819, 0.019076181, 0.019076667, 0.019084361, 0.019084833, 0.019096181, 0.019096667, 0.019101042, 0.019101514, 0.019107181, 0.019107667], 'eventdiff': [0, 4.860000000009301e-07, 1.1179999999999524e-05, 4.860000000009301e-07, 1.1389000000000538e-05, 4.7300000000083386e-07, 1.1999999999998123e-05, 4.720000000013602e-07, 1.1693999999999594e-05, 4.7199999999789077e-07, 7.3620000000003405e-06, 4.720000000013602e-07, 1.4693999999999124e-05, 4.720000000013602e-07, 9.195000000000036e-06, 4.7199999999789077e-07, 7.195000000001506e-06, 4.720000000013602e-07, 1.2194000000000094e-05, 4.859999999974607e-07, 9.34800000000277e-06, 4.859999999974607e-07, 1.0014000000002632e-05, 4.859999999974607e-07, 7.013999999999632e-06, 4.860000000009301e-07, 1.4375000000000498e-05, 4.720000000013602e-07, 1.4013999999999693e-05, 4.7199999999789077e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 7.361000000000867e-06, 4.7300000000083386e-07, 8.874999999998467e-06, 4.720000000013602e-07, 5.1799999999969926e-06, 4.7300000000083386e-07, 5.375000000001906e-06, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 1.4013999999999693e-05, 4.860000000009301e-07, 5.860999999999367e-06, 4.7300000000083386e-07, 1.1027000000000259e-05, 4.7300000000083386e-07, 7.415999999999673e-06, 4.7199999999789077e-07, 6.959000000000826e-06, 4.860000000009301e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 1.1028000000003202e-05, 4.7199999999789077e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 9.195000000000036e-06, 4.720000000013602e-07, 8.207999999999133e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.7300000000083386e-07, 5.526999999998228e-06, 4.7300000000083386e-07, 7.193999999998563e-06, 4.860000000009301e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 1.1346999999998358e-05, 4.860000000009301e-07, 9.861999999999371e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.860000000009301e-07, 1.3695000000001067e-05, 4.7199999999789077e-07, 9.208000000000133e-06, 4.720000000013602e-07, 8.180999999999466e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.7199999999789077e-07, 7.028000000002671e-06, 4.7199999999789077e-07, 1.4514000000000193e-05, 4.720000000013602e-07, 1.4362000000000402e-05, 4.859999999974607e-07, 7.694000000002532e-06, 4.7199999999789077e-07, 1.1348000000001301e-05, 4.860000000009301e-07, 4.3749999999974365e-06, 4.720000000013602e-07, 5.667000000000866e-06, 4.859999999974607e-07], 'source_diff': [0, 4.860000000009301e-07, 1.1179999999999524e-05, 4.860000000009301e-07, 1.1389000000000538e-05, 4.7300000000083386e-07, 1.1999999999998123e-05, 4.720000000013602e-07, 1.1693999999999594e-05, 4.7199999999789077e-07, 7.3620000000003405e-06, 4.720000000013602e-07, 1.4693999999999124e-05, 4.720000000013602e-07, 9.195000000000036e-06, 4.7199999999789077e-07, 7.195000000001506e-06, 4.720000000013602e-07, 1.2194000000000094e-05, 4.859999999974607e-07, 9.34800000000277e-06, 4.859999999974607e-07, 1.0014000000002632e-05, 4.859999999974607e-07, 7.013999999999632e-06, 4.860000000009301e-07, 1.4375000000000498e-05, 4.720000000013602e-07, 1.4013999999999693e-05, 4.7199999999789077e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 7.361000000000867e-06, 4.7300000000083386e-07, 8.874999999998467e-06, 4.720000000013602e-07, 5.1799999999969926e-06, 4.7300000000083386e-07, 5.375000000001906e-06, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 1.4013999999999693e-05, 4.860000000009301e-07, 5.860999999999367e-06, 4.7300000000083386e-07, 1.1027000000000259e-05, 4.7300000000083386e-07, 7.415999999999673e-06, 4.7199999999789077e-07, 6.959000000000826e-06, 4.860000000009301e-07, 1.0361000000000398e-05, 4.7199999999789077e-07, 1.1028000000003202e-05, 4.7199999999789077e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 9.028000000001202e-06, 4.7199999999789077e-07, 9.195000000000036e-06, 4.720000000013602e-07, 8.207999999999133e-06, 4.720000000013602e-07, 7.013999999999632e-06, 4.7300000000083386e-07, 5.526999999998228e-06, 4.7300000000083386e-07, 7.193999999998563e-06, 4.860000000009301e-07, 1.1514000000000663e-05, 4.860000000009301e-07, 1.1346999999998358e-05, 4.860000000009301e-07, 9.861999999999371e-06, 4.720000000013602e-07, 7.846999999998328e-06, 4.860000000009301e-07, 1.3695000000001067e-05, 4.7199999999789077e-07, 9.208000000000133e-06, 4.720000000013602e-07, 8.180999999999466e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.7199999999789077e-07, 7.028000000002671e-06, 4.7199999999789077e-07, 1.4514000000000193e-05, 4.720000000013602e-07, 1.4362000000000402e-05, 4.859999999974607e-07, 7.694000000002532e-06, 4.7199999999789077e-07, 1.1348000000001301e-05, 4.860000000009301e-07, 4.3749999999974365e-06, 4.720000000013602e-07, 5.667000000000866e-06, 4.859999999974607e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:45.391" endtime="20201112 10:13:45.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.387" endtime="20201112 10:13:45.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:45.400" level="INFO">${RESULT} = [{'time': 0.018619278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018630944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:45.397" endtime="20201112 10:13:45.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:45.414" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018619278, 0.018630944, 0.018642806, 0.018655278, 0.018667444, 0.018675278, 0.018690444, 0.018700111, 0.018707778, 0.018720458, 0.018730292, 0.018740792, 0.018748292, 0.018763139, 0.018777...</msg>
<status status="PASS" starttime="20201112 10:13:45.401" endtime="20201112 10:13:45.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.418" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:45.417" endtime="20201112 10:13:45.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.421" level="INFO">VALUE: [4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07]</msg>
<status status="PASS" starttime="20201112 10:13:45.420" endtime="20201112 10:13:45.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.415" endtime="20201112 10:13:45.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.424" endtime="20201112 10:13:45.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:45.428" endtime="20201112 10:13:45.447"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.426" endtime="20201112 10:13:45.448"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.423" endtime="20201112 10:13:45.448"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.015" endtime="20201112 10:13:45.448"></status>
</kw>
<msg timestamp="20201112 10:13:45.449" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.456" endtime="20201112 10:13:45.466"></status>
</kw>
<msg timestamp="20201112 10:13:45.466" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.455" endtime="20201112 10:13:45.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.469" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.467" endtime="20201112 10:13:45.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.470" endtime="20201112 10:13:45.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.452" endtime="20201112 10:13:45.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.451" endtime="20201112 10:13:45.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.480" endtime="20201112 10:13:45.778"></status>
</kw>
<msg timestamp="20201112 10:13:45.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018497861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018498333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:45.478" endtime="20201112 10:13:45.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018497861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018498333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:45.782" endtime="20201112 10:13:45.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.791" endtime="20201112 10:13:45.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.476" endtime="20201112 10:13:45.793"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.473" endtime="20201112 10:13:45.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.797" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:45.796" endtime="20201112 10:13:45.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.802" level="INFO">VALUE: [{'time': 0.018497861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018498333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018503708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.018504181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018513861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.679999999998024e-06, 'source_diff': 9.679999999998024e-06}, {'time': 0.018514333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018520042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.018520514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018530208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.694000000001063e-06, 'source_diff': 9.694000000001063e-06}, {'time': 0.018530681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018544694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.401300000000022e-05, 'source_diff': 1.401300000000022e-05}, {'time': 0.018545167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018553028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.0185535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018558694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.018559167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018564861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6939999999970625e-06, 'source_diff': 5.6939999999970625e-06}, {'time': 0.018565347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018573694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347000000002297e-06, 'source_diff': 8.347000000002297e-06}, {'time': 0.018574181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018584361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180000000001993e-05, 'source_diff': 1.0180000000001993e-05}, {'time': 0.018584847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018599375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.018599847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018609694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.018610181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018615375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.018615847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018627042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1194999999998567e-05, 'source_diff': 1.1194999999998567e-05}, {'time': 0.018627514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018639708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.018640181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018649375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.018649847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018663708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018664181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018675708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1527000000000759e-05, 'source_diff': 1.1527000000000759e-05}, {'time': 0.018676181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018686722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0540999999999329e-05, 'source_diff': 1.0540999999999329e-05}, {'time': 0.018687194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018694375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999998466e-06, 'source_diff': 7.180999999998466e-06}, {'time': 0.018694861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018704208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.018704694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018712375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.018712861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018723042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.018723528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018732542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.018733028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018737556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018738028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018748278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0249999999999843e-05, 'source_diff': 1.0249999999999843e-05}, {'time': 0.01874875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018754556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805999999997091e-06, 'source_diff': 5.805999999997091e-06}, {'time': 0.018755028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018761056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018761528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018770458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930000000000743e-06, 'source_diff': 8.930000000000743e-06}, {'time': 0.018770931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018776889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.018777361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018788278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0916999999999177e-05, 'source_diff': 1.0916999999999177e-05}, {'time': 0.01878875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018797556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.018798028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018804903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999999937e-06, 'source_diff': 6.874999999999937e-06}, {'time': 0.018805375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018819403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.018819875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018832389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2514000000001663e-05, 'source_diff': 1.2514000000001663e-05}, {'time': 0.018832875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018841903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.018842375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018856069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3693999999998124e-05, 'source_diff': 1.3693999999998124e-05}, {'time': 0.018856542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018866569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.018867042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018879083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2041000000000829e-05, 'source_diff': 1.2041000000000829e-05}, {'time': 0.018879556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018893417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.018893889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018901917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.018902389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018916097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3708000000001164e-05, 'source_diff': 1.3708000000001164e-05}, {'time': 0.018916569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018922292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.018922764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018934236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.018934722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018947069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.018947556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018953069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.512999999998658e-06, 'source_diff': 5.512999999998658e-06}, {'time': 0.018953556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018965236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.018965722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018979417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3694999999997598e-05, 'source_diff': 1.3694999999997598e-05}, {'time': 0.018979889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018988083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.018988556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:45.798" endtime="20201112 10:13:45.804"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.794" endtime="20201112 10:13:45.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:45.829" level="INFO">${debug-compressed} = {'time': [0.018497861, 0.018498333, 0.018503708, 0.018504181, 0.018513861, 0.018514333, 0.018520042, 0.018520514, 0.018530208, 0.018530681, 0.018544694, 0.018545167, 0.018553028, 0.0185535, 0.01855869...</msg>
<status status="PASS" starttime="20201112 10:13:45.805" endtime="20201112 10:13:45.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.833" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:45.832" endtime="20201112 10:13:45.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.837" level="INFO">VALUE: {'time': [0.018497861, 0.018498333, 0.018503708, 0.018504181, 0.018513861, 0.018514333, 0.018520042, 0.018520514, 0.018530208, 0.018530681, 0.018544694, 0.018545167, 0.018553028, 0.0185535, 0.018558694, 0.018559167, 0.018564861, 0.018565347, 0.018573694, 0.018574181, 0.018584361, 0.018584847, 0.018599375, 0.018599847, 0.018609694, 0.018610181, 0.018615375, 0.018615847, 0.018627042, 0.018627514, 0.018639708, 0.018640181, 0.018649375, 0.018649847, 0.018663708, 0.018664181, 0.018675708, 0.018676181, 0.018686722, 0.018687194, 0.018694375, 0.018694861, 0.018704208, 0.018704694, 0.018712375, 0.018712861, 0.018723042, 0.018723528, 0.018732542, 0.018733028, 0.018737556, 0.018738028, 0.018748278, 0.01874875, 0.018754556, 0.018755028, 0.018761056, 0.018761528, 0.018770458, 0.018770931, 0.018776889, 0.018777361, 0.018788278, 0.01878875, 0.018797556, 0.018798028, 0.018804903, 0.018805375, 0.018819403, 0.018819875, 0.018832389, 0.018832875, 0.018841903, 0.018842375, 0.018856069, 0.018856542, 0.018866569, 0.018867042, 0.018879083, 0.018879556, 0.018893417, 0.018893889, 0.018901917, 0.018902389, 0.018916097, 0.018916569, 0.018922292, 0.018922764, 0.018934236, 0.018934722, 0.018947069, 0.018947556, 0.018953069, 0.018953556, 0.018965236, 0.018965722, 0.018979417, 0.018979889, 0.018988083, 0.018988556], 'eventdiff': [0, 4.7199999999789077e-07, 5.375000000001906e-06, 4.7300000000083386e-07, 9.679999999998024e-06, 4.720000000013602e-07, 5.7089999999995755e-06, 4.7199999999789077e-07, 9.694000000001063e-06, 4.7300000000083386e-07, 1.401300000000022e-05, 4.7300000000083386e-07, 7.860999999997897e-06, 4.720000000013602e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 5.6939999999970625e-06, 4.860000000009301e-07, 8.347000000002297e-06, 4.869999999969343e-07, 1.0180000000001993e-05, 4.860000000009301e-07, 1.4527999999999763e-05, 4.7199999999789077e-07, 9.847000000000328e-06, 4.870000000004038e-07, 5.194000000000032e-06, 4.720000000013602e-07, 1.1194999999998567e-05, 4.720000000013602e-07, 1.2194000000000094e-05, 4.729999999973644e-07, 9.194000000000563e-06, 4.720000000013602e-07, 1.3861000000000429e-05, 4.729999999973644e-07, 1.1527000000000759e-05, 4.7300000000083386e-07, 1.0540999999999329e-05, 4.720000000013602e-07, 7.180999999998466e-06, 4.860000000009301e-07, 9.346999999999828e-06, 4.860000000009301e-07, 7.680999999998966e-06, 4.860000000009301e-07, 1.0180999999997997e-05, 4.860000000009301e-07, 9.014000000001632e-06, 4.859999999974607e-07, 4.528000000000171e-06, 4.720000000013602e-07, 1.0249999999999843e-05, 4.720000000013602e-07, 5.805999999997091e-06, 4.720000000013602e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 8.930000000000743e-06, 4.7300000000083386e-07, 5.958000000000352e-06, 4.7199999999789077e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 8.806000000000092e-06, 4.720000000013602e-07, 6.874999999999937e-06, 4.7199999999789077e-07, 1.4027999999999263e-05, 4.720000000013602e-07, 1.2514000000001663e-05, 4.859999999974607e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.3693999999998124e-05, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 1.2041000000000829e-05, 4.729999999973644e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 1.3708000000001164e-05, 4.720000000013602e-07, 5.7229999999991454e-06, 4.720000000013602e-07, 1.1471999999998483e-05, 4.860000000009301e-07, 1.2346999999999358e-05, 4.870000000004038e-07, 5.512999999998658e-06, 4.870000000004038e-07, 1.1680000000000024e-05, 4.860000000009301e-07, 1.3694999999997598e-05, 4.720000000013602e-07, 8.193999999999563e-06, 4.7300000000083386e-07], 'source_diff': [0, 4.7199999999789077e-07, 5.375000000001906e-06, 4.7300000000083386e-07, 9.679999999998024e-06, 4.720000000013602e-07, 5.7089999999995755e-06, 4.7199999999789077e-07, 9.694000000001063e-06, 4.7300000000083386e-07, 1.401300000000022e-05, 4.7300000000083386e-07, 7.860999999997897e-06, 4.720000000013602e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 5.6939999999970625e-06, 4.860000000009301e-07, 8.347000000002297e-06, 4.869999999969343e-07, 1.0180000000001993e-05, 4.860000000009301e-07, 1.4527999999999763e-05, 4.7199999999789077e-07, 9.847000000000328e-06, 4.870000000004038e-07, 5.194000000000032e-06, 4.720000000013602e-07, 1.1194999999998567e-05, 4.720000000013602e-07, 1.2194000000000094e-05, 4.729999999973644e-07, 9.194000000000563e-06, 4.720000000013602e-07, 1.3861000000000429e-05, 4.729999999973644e-07, 1.1527000000000759e-05, 4.7300000000083386e-07, 1.0540999999999329e-05, 4.720000000013602e-07, 7.180999999998466e-06, 4.860000000009301e-07, 9.346999999999828e-06, 4.860000000009301e-07, 7.680999999998966e-06, 4.860000000009301e-07, 1.0180999999997997e-05, 4.860000000009301e-07, 9.014000000001632e-06, 4.859999999974607e-07, 4.528000000000171e-06, 4.720000000013602e-07, 1.0249999999999843e-05, 4.720000000013602e-07, 5.805999999997091e-06, 4.720000000013602e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 8.930000000000743e-06, 4.7300000000083386e-07, 5.958000000000352e-06, 4.7199999999789077e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 8.806000000000092e-06, 4.720000000013602e-07, 6.874999999999937e-06, 4.7199999999789077e-07, 1.4027999999999263e-05, 4.720000000013602e-07, 1.2514000000001663e-05, 4.859999999974607e-07, 9.028000000001202e-06, 4.720000000013602e-07, 1.3693999999998124e-05, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 1.2041000000000829e-05, 4.729999999973644e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 8.028000000000202e-06, 4.7199999999789077e-07, 1.3708000000001164e-05, 4.720000000013602e-07, 5.7229999999991454e-06, 4.720000000013602e-07, 1.1471999999998483e-05, 4.860000000009301e-07, 1.2346999999999358e-05, 4.870000000004038e-07, 5.512999999998658e-06, 4.870000000004038e-07, 1.1680000000000024e-05, 4.860000000009301e-07, 1.3694999999997598e-05, 4.720000000013602e-07, 8.193999999999563e-06, 4.7300000000083386e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:45.834" endtime="20201112 10:13:45.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.830" endtime="20201112 10:13:45.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:45.843" level="INFO">${RESULT} = [{'time': 0.018498333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018504181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:45.840" endtime="20201112 10:13:45.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:45.857" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018498333, 0.018504181, 0.018514333, 0.018520514, 0.018530681, 0.018545167, 0.0185535, 0.018559167, 0.018565347, 0.018574181, 0.018584847, 0.018599847, 0.018610181, 0.018615847, 0.01862751...</msg>
<status status="PASS" starttime="20201112 10:13:45.844" endtime="20201112 10:13:45.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.862" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:45.860" endtime="20201112 10:13:45.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.864" level="INFO">VALUE: [4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.869999999969343e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 10:13:45.863" endtime="20201112 10:13:45.865"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.858" endtime="20201112 10:13:45.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.867" endtime="20201112 10:13:45.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:45.871" endtime="20201112 10:13:45.890"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.869" endtime="20201112 10:13:45.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.866" endtime="20201112 10:13:45.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.449" endtime="20201112 10:13:45.892"></status>
</kw>
<msg timestamp="20201112 10:13:45.892" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.900" endtime="20201112 10:13:45.909"></status>
</kw>
<msg timestamp="20201112 10:13:45.910" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.898" endtime="20201112 10:13:45.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.912" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.911" endtime="20201112 10:13:45.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.913" endtime="20201112 10:13:45.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.895" endtime="20201112 10:13:45.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.894" endtime="20201112 10:13:45.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.922" endtime="20201112 10:13:46.212"></status>
</kw>
<msg timestamp="20201112 10:13:46.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018606097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018606569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:45.921" endtime="20201112 10:13:46.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018606097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018606569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:46.216" endtime="20201112 10:13:46.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.225" endtime="20201112 10:13:46.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.918" endtime="20201112 10:13:46.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.916" endtime="20201112 10:13:46.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.232" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:46.231" endtime="20201112 10:13:46.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.237" level="INFO">VALUE: [{'time': 0.018606097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018606569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018618778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2208999999999137e-05, 'source_diff': 1.2208999999999137e-05}, {'time': 0.01861925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018627597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.018628083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018638431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0348000000000301e-05, 'source_diff': 1.0348000000000301e-05}, {'time': 0.018638917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018645764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.01864625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018660597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4347000000001359e-05, 'source_diff': 1.4347000000001359e-05}, {'time': 0.018661083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018672333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1250000000000843e-05, 'source_diff': 1.1250000000000843e-05}, {'time': 0.018672806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018684611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1805000000000149e-05, 'source_diff': 1.1805000000000149e-05}, {'time': 0.018685083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018690944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018691417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018698458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.041000000002767e-06, 'source_diff': 7.041000000002767e-06}, {'time': 0.018698931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018711278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2347000000002828e-05, 'source_diff': 1.2347000000002828e-05}, {'time': 0.01871175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018718778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.01871925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018723778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.01872425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018738278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.01873875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018745278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.528000000002171e-06, 'source_diff': 6.528000000002171e-06}, {'time': 0.018745764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018760444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4679999999999555e-05, 'source_diff': 1.4679999999999555e-05}, {'time': 0.018760931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018775611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4679999999999555e-05, 'source_diff': 1.4679999999999555e-05}, {'time': 0.018776097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018787625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.018788097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018796958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.018797431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018811958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.452700000000029e-05, 'source_diff': 1.452700000000029e-05}, {'time': 0.018812431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018825806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3374999999999498e-05, 'source_diff': 1.3374999999999498e-05}, {'time': 0.018826278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018834292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.018834764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018840625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018841097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018848139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.018848611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018852778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.01885325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018861458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.018861931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018866292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018866764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018877625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0860999999997428e-05, 'source_diff': 1.0860999999997428e-05}, {'time': 0.018878097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018888444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.018888917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018900111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1193999999999094e-05, 'source_diff': 1.1193999999999094e-05}, {'time': 0.018900583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018914278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3695000000001067e-05, 'source_diff': 1.3695000000001067e-05}, {'time': 0.01891475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018924292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.541999999997802e-06, 'source_diff': 9.541999999997802e-06}, {'time': 0.018924764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018932111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000001297e-06, 'source_diff': 7.347000000001297e-06}, {'time': 0.018932597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018943194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.018943667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018957111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3443999999997874e-05, 'source_diff': 1.3443999999997874e-05}, {'time': 0.018957597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018965444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.018965931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018977847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1916000000000704e-05, 'source_diff': 1.1916000000000704e-05}, {'time': 0.018978319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018988792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0473000000000426e-05, 'source_diff': 1.0473000000000426e-05}, {'time': 0.018989264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019001792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2528000000001233e-05, 'source_diff': 1.2528000000001233e-05}, {'time': 0.019002264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019010792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527999999997232e-06, 'source_diff': 8.527999999997232e-06}, {'time': 0.019011264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019022125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.019022597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019035458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2861000000002898e-05, 'source_diff': 1.2861000000002898e-05}, {'time': 0.019035931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019050472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.454099999999986e-05, 'source_diff': 1.454099999999986e-05}, {'time': 0.019050944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019059292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347999999998301e-06, 'source_diff': 8.347999999998301e-06}, {'time': 0.019059778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019067958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.019068444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019082972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.019083444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019096139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2695000000000067e-05, 'source_diff': 1.2695000000000067e-05}, {'time': 0.019096611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019103486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999999937e-06, 'source_diff': 6.874999999999937e-06}, {'time': 0.019103958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019112972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999998162e-06, 'source_diff': 9.013999999998162e-06}, {'time': 0.019113444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019126806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3361999999999402e-05, 'source_diff': 1.3361999999999402e-05}, {'time': 0.019127278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:46.233" endtime="20201112 10:13:46.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.229" endtime="20201112 10:13:46.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:46.264" level="INFO">${debug-compressed} = {'time': [0.018606097, 0.018606569, 0.018618778, 0.01861925, 0.018627597, 0.018628083, 0.018638431, 0.018638917, 0.018645764, 0.01864625, 0.018660597, 0.018661083, 0.018672333, 0.018672806, 0.01868461...</msg>
<status status="PASS" starttime="20201112 10:13:46.240" endtime="20201112 10:13:46.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.268" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:46.267" endtime="20201112 10:13:46.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.272" level="INFO">VALUE: {'time': [0.018606097, 0.018606569, 0.018618778, 0.01861925, 0.018627597, 0.018628083, 0.018638431, 0.018638917, 0.018645764, 0.01864625, 0.018660597, 0.018661083, 0.018672333, 0.018672806, 0.018684611, 0.018685083, 0.018690944, 0.018691417, 0.018698458, 0.018698931, 0.018711278, 0.01871175, 0.018718778, 0.01871925, 0.018723778, 0.01872425, 0.018738278, 0.01873875, 0.018745278, 0.018745764, 0.018760444, 0.018760931, 0.018775611, 0.018776097, 0.018787625, 0.018788097, 0.018796958, 0.018797431, 0.018811958, 0.018812431, 0.018825806, 0.018826278, 0.018834292, 0.018834764, 0.018840625, 0.018841097, 0.018848139, 0.018848611, 0.018852778, 0.01885325, 0.018861458, 0.018861931, 0.018866292, 0.018866764, 0.018877625, 0.018878097, 0.018888444, 0.018888917, 0.018900111, 0.018900583, 0.018914278, 0.01891475, 0.018924292, 0.018924764, 0.018932111, 0.018932597, 0.018943194, 0.018943667, 0.018957111, 0.018957597, 0.018965444, 0.018965931, 0.018977847, 0.018978319, 0.018988792, 0.018989264, 0.019001792, 0.019002264, 0.019010792, 0.019011264, 0.019022125, 0.019022597, 0.019035458, 0.019035931, 0.019050472, 0.019050944, 0.019059292, 0.019059778, 0.019067958, 0.019068444, 0.019082972, 0.019083444, 0.019096139, 0.019096611, 0.019103486, 0.019103958, 0.019112972, 0.019113444, 0.019126806, 0.019127278], 'eventdiff': [0, 4.720000000013602e-07, 1.2208999999999137e-05, 4.720000000013602e-07, 8.346999999998828e-06, 4.860000000009301e-07, 1.0348000000000301e-05, 4.860000000009301e-07, 6.8469999999973274e-06, 4.860000000009301e-07, 1.4347000000001359e-05, 4.859999999974607e-07, 1.1250000000000843e-05, 4.7300000000083386e-07, 1.1805000000000149e-05, 4.720000000013602e-07, 5.860999999999367e-06, 4.729999999973644e-07, 7.041000000002767e-06, 4.729999999973644e-07, 1.2347000000002828e-05, 4.7199999999789077e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 4.528000000000171e-06, 4.720000000013602e-07, 1.4027999999999263e-05, 4.7199999999789077e-07, 6.528000000002171e-06, 4.860000000009301e-07, 1.4679999999999555e-05, 4.870000000004038e-07, 1.4679999999999555e-05, 4.859999999974607e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4.7300000000083386e-07, 1.452700000000029e-05, 4.7300000000083386e-07, 1.3374999999999498e-05, 4.7199999999789077e-07, 8.014000000000632e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 4.166999999999366e-06, 4.7199999999789077e-07, 8.208000000002602e-06, 4.729999999973644e-07, 4.361000000001336e-06, 4.720000000013602e-07, 1.0860999999997428e-05, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7300000000083386e-07, 1.1193999999999094e-05, 4.7199999999789077e-07, 1.3695000000001067e-05, 4.720000000013602e-07, 9.541999999997802e-06, 4.720000000013602e-07, 7.347000000001297e-06, 4.859999999974607e-07, 1.0597000000001078e-05, 4.7300000000083386e-07, 1.3443999999997874e-05, 4.860000000009301e-07, 7.847000000001797e-06, 4.869999999969343e-07, 1.1916000000000704e-05, 4.720000000013602e-07, 1.0473000000000426e-05, 4.7199999999789077e-07, 1.2528000000001233e-05, 4.720000000013602e-07, 8.527999999997232e-06, 4.720000000013602e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 1.2861000000002898e-05, 4.729999999973644e-07, 1.454099999999986e-05, 4.720000000013602e-07, 8.347999999998301e-06, 4.860000000009301e-07, 8.179999999999993e-06, 4.860000000009301e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.2695000000000067e-05, 4.7199999999789077e-07, 6.874999999999937e-06, 4.720000000013602e-07, 9.013999999998162e-06, 4.720000000013602e-07, 1.3361999999999402e-05, 4.720000000013602e-07], 'source_diff': [0, 4.720000000013602e-07, 1.2208999999999137e-05, 4.720000000013602e-07, 8.346999999998828e-06, 4.860000000009301e-07, 1.0348000000000301e-05, 4.860000000009301e-07, 6.8469999999973274e-06, 4.860000000009301e-07, 1.4347000000001359e-05, 4.859999999974607e-07, 1.1250000000000843e-05, 4.7300000000083386e-07, 1.1805000000000149e-05, 4.720000000013602e-07, 5.860999999999367e-06, 4.729999999973644e-07, 7.041000000002767e-06, 4.729999999973644e-07, 1.2347000000002828e-05, 4.7199999999789077e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 4.528000000000171e-06, 4.720000000013602e-07, 1.4027999999999263e-05, 4.7199999999789077e-07, 6.528000000002171e-06, 4.860000000009301e-07, 1.4679999999999555e-05, 4.870000000004038e-07, 1.4679999999999555e-05, 4.859999999974607e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 8.860999999998898e-06, 4.7300000000083386e-07, 1.452700000000029e-05, 4.7300000000083386e-07, 1.3374999999999498e-05, 4.7199999999789077e-07, 8.014000000000632e-06, 4.720000000013602e-07, 5.860999999999367e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 4.166999999999366e-06, 4.7199999999789077e-07, 8.208000000002602e-06, 4.729999999973644e-07, 4.361000000001336e-06, 4.720000000013602e-07, 1.0860999999997428e-05, 4.720000000013602e-07, 1.0347000000000828e-05, 4.7300000000083386e-07, 1.1193999999999094e-05, 4.7199999999789077e-07, 1.3695000000001067e-05, 4.720000000013602e-07, 9.541999999997802e-06, 4.720000000013602e-07, 7.347000000001297e-06, 4.859999999974607e-07, 1.0597000000001078e-05, 4.7300000000083386e-07, 1.3443999999997874e-05, 4.860000000009301e-07, 7.847000000001797e-06, 4.869999999969343e-07, 1.1916000000000704e-05, 4.720000000013602e-07, 1.0473000000000426e-05, 4.7199999999789077e-07, 1.2528000000001233e-05, 4.720000000013602e-07, 8.527999999997232e-06, 4.720000000013602e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 1.2861000000002898e-05, 4.729999999973644e-07, 1.454099999999986e-05, 4.720000000013602e-07, 8.347999999998301e-06, 4.860000000009301e-07, 8.179999999999993e-06, 4.860000000009301e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.2695000000000067e-05, 4.7199999999789077e-07, 6.874999999999937e-06, 4.720000000013602e-07, 9.013999999998162e-06, 4.720000000013602e-07, 1.3361999999999402e-05, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:46.269" endtime="20201112 10:13:46.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.265" endtime="20201112 10:13:46.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:46.278" level="INFO">${RESULT} = [{'time': 0.018606569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01861925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:13:46.274" endtime="20201112 10:13:46.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:46.292" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018606569, 0.01861925, 0.018628083, 0.018638917, 0.01864625, 0.018661083, 0.018672806, 0.018685083, 0.018691417, 0.018698931, 0.01871175, 0.01871925, 0.01872425, 0.01873875, 0.018745764, 0...</msg>
<status status="PASS" starttime="20201112 10:13:46.279" endtime="20201112 10:13:46.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.296" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:46.295" endtime="20201112 10:13:46.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.298" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.869999999969343e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:13:46.297" endtime="20201112 10:13:46.299"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.293" endtime="20201112 10:13:46.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.302" endtime="20201112 10:13:46.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:46.305" endtime="20201112 10:13:46.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.303" endtime="20201112 10:13:46.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.300" endtime="20201112 10:13:46.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.892" endtime="20201112 10:13:46.325"></status>
</kw>
<msg timestamp="20201112 10:13:46.326" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.333" endtime="20201112 10:13:46.343"></status>
</kw>
<msg timestamp="20201112 10:13:46.344" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:46.332" endtime="20201112 10:13:46.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.346" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:46.345" endtime="20201112 10:13:46.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.347" endtime="20201112 10:13:46.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.329" endtime="20201112 10:13:46.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.327" endtime="20201112 10:13:46.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.357" endtime="20201112 10:13:46.661"></status>
</kw>
<msg timestamp="20201112 10:13:46.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018414958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018415431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:46.355" endtime="20201112 10:13:46.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018414958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018415431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:46.666" endtime="20201112 10:13:46.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.674" endtime="20201112 10:13:46.676"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.352" endtime="20201112 10:13:46.677"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.350" endtime="20201112 10:13:46.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.681" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:46.680" endtime="20201112 10:13:46.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.686" level="INFO">VALUE: [{'time': 0.018414958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018415431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018422458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.026999999999728e-06, 'source_diff': 7.026999999999728e-06}, {'time': 0.018422931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018433639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0708000000001633e-05, 'source_diff': 1.0708000000001633e-05}, {'time': 0.018434111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018442472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.018442944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018448292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.34800000000224e-06, 'source_diff': 5.34800000000224e-06}, {'time': 0.018448764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018454625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018455097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018462958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.018463431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018473139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.708000000000633e-06, 'source_diff': 9.708000000000633e-06}, {'time': 0.018473611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018488125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.018488611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018494792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.018495278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018509625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.434699999999789e-05, 'source_diff': 1.434699999999789e-05}, {'time': 0.018510111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018520639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.018521111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018531458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.018531944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018541806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.861999999999371e-06, 'source_diff': 9.861999999999371e-06}, {'time': 0.018542278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018552806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0528000000002702e-05, 'source_diff': 1.0528000000002702e-05}, {'time': 0.018553278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018561986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999999633e-06, 'source_diff': 8.707999999999633e-06}, {'time': 0.018562458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018572139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.681000000000967e-06, 'source_diff': 9.681000000000967e-06}, {'time': 0.018572611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018585972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.018586444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018598139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1694999999999067e-05, 'source_diff': 1.1694999999999067e-05}, {'time': 0.018598611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018609181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0569999999997942e-05, 'source_diff': 1.0569999999997942e-05}, {'time': 0.018609653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0186235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847000000000859e-05, 'source_diff': 1.3847000000000859e-05}, {'time': 0.018623972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018632486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.018632958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018638139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.018638625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018653333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4708000000002164e-05, 'source_diff': 1.4708000000002164e-05}, {'time': 0.018653806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018658986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.018659458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018672819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3360999999999928e-05, 'source_diff': 1.3360999999999928e-05}, {'time': 0.018673292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018682653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.018683125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018688319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.018688792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018694153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.018694625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0187075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2874999999998998e-05, 'source_diff': 1.2874999999998998e-05}, {'time': 0.018707972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018715653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.018716125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018727486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1361000000001398e-05, 'source_diff': 1.1361000000001398e-05}, {'time': 0.018727972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.0187415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3528000000002233e-05, 'source_diff': 1.3528000000002233e-05}, {'time': 0.018741972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018756167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4195000000001567e-05, 'source_diff': 1.4195000000001567e-05}, {'time': 0.018756639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018770153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3514000000002663e-05, 'source_diff': 1.3514000000002663e-05}, {'time': 0.018770639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018775472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018783167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.694999999998536e-06, 'source_diff': 7.694999999998536e-06}, {'time': 0.018783639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018794333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0693999999998594e-05, 'source_diff': 1.0693999999998594e-05}, {'time': 0.018794806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018802833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.027000000000728e-06, 'source_diff': 8.027000000000728e-06}, {'time': 0.018803306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.0188135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194000000001563e-05, 'source_diff': 1.0194000000001563e-05}, {'time': 0.018813972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018826694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.018827167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018840847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3680000000002024e-05, 'source_diff': 1.3680000000002024e-05}, {'time': 0.018841319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0188555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4181000000001998e-05, 'source_diff': 1.4181000000001998e-05}, {'time': 0.018855986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018862667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.680999999997966e-06, 'source_diff': 6.680999999997966e-06}, {'time': 0.018863153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018869667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.018870153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018880667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999999663e-05, 'source_diff': 1.0513999999999663e-05}, {'time': 0.018881153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018892, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0846999999997858e-05, 'source_diff': 1.0846999999997858e-05}, {'time': 0.018892486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018897014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018897486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018907028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.541999999997802e-06, 'source_diff': 9.541999999997802e-06}, {'time': 0.0189075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018919681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2180999999999997e-05, 'source_diff': 1.2180999999999997e-05}, {'time': 0.018920153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:46.682" endtime="20201112 10:13:46.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.678" endtime="20201112 10:13:46.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:46.714" level="INFO">${debug-compressed} = {'time': [0.018414958, 0.018415431, 0.018422458, 0.018422931, 0.018433639, 0.018434111, 0.018442472, 0.018442944, 0.018448292, 0.018448764, 0.018454625, 0.018455097, 0.018462958, 0.018463431, 0.018473...</msg>
<status status="PASS" starttime="20201112 10:13:46.689" endtime="20201112 10:13:46.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.718" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:46.716" endtime="20201112 10:13:46.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.722" level="INFO">VALUE: {'time': [0.018414958, 0.018415431, 0.018422458, 0.018422931, 0.018433639, 0.018434111, 0.018442472, 0.018442944, 0.018448292, 0.018448764, 0.018454625, 0.018455097, 0.018462958, 0.018463431, 0.018473139, 0.018473611, 0.018488125, 0.018488611, 0.018494792, 0.018495278, 0.018509625, 0.018510111, 0.018520639, 0.018521111, 0.018531458, 0.018531944, 0.018541806, 0.018542278, 0.018552806, 0.018553278, 0.018561986, 0.018562458, 0.018572139, 0.018572611, 0.018585972, 0.018586444, 0.018598139, 0.018598611, 0.018609181, 0.018609653, 0.0186235, 0.018623972, 0.018632486, 0.018632958, 0.018638139, 0.018638625, 0.018653333, 0.018653806, 0.018658986, 0.018659458, 0.018672819, 0.018673292, 0.018682653, 0.018683125, 0.018688319, 0.018688792, 0.018694153, 0.018694625, 0.0187075, 0.018707972, 0.018715653, 0.018716125, 0.018727486, 0.018727972, 0.0187415, 0.018741972, 0.018756167, 0.018756639, 0.018770153, 0.018770639, 0.018775, 0.018775472, 0.018783167, 0.018783639, 0.018794333, 0.018794806, 0.018802833, 0.018803306, 0.0188135, 0.018813972, 0.018826694, 0.018827167, 0.018840847, 0.018841319, 0.0188555, 0.018855986, 0.018862667, 0.018863153, 0.018869667, 0.018870153, 0.018880667, 0.018881153, 0.018892, 0.018892486, 0.018897014, 0.018897486, 0.018907028, 0.0189075, 0.018919681, 0.018920153], 'eventdiff': [0, 4.7300000000083386e-07, 7.026999999999728e-06, 4.7300000000083386e-07, 1.0708000000001633e-05, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 5.34800000000224e-06, 4.7199999999789077e-07, 5.860999999999367e-06, 4.720000000013602e-07, 7.861000000001367e-06, 4.729999999973644e-07, 9.708000000000633e-06, 4.720000000013602e-07, 1.4514000000000193e-05, 4.859999999974607e-07, 6.181000000000936e-06, 4.860000000009301e-07, 1.434699999999789e-05, 4.860000000009301e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 1.0347000000000828e-05, 4.860000000009301e-07, 9.861999999999371e-06, 4.7199999999789077e-07, 1.0528000000002702e-05, 4.7199999999789077e-07, 8.707999999999633e-06, 4.720000000013602e-07, 9.681000000000967e-06, 4.7199999999789077e-07, 1.3360999999999928e-05, 4.720000000013602e-07, 1.1694999999999067e-05, 4.720000000013602e-07, 1.0569999999997942e-05, 4.720000000013602e-07, 1.3847000000000859e-05, 4.7199999999789077e-07, 8.514000000001132e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.859999999974607e-07, 1.4708000000002164e-05, 4.729999999973644e-07, 5.180000000000462e-06, 4.720000000013602e-07, 1.3360999999999928e-05, 4.7300000000083386e-07, 9.360999999999398e-06, 4.7199999999789077e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 5.361000000002336e-06, 4.7199999999789077e-07, 1.2874999999998998e-05, 4.720000000013602e-07, 7.680999999998966e-06, 4.720000000013602e-07, 1.1361000000001398e-05, 4.859999999974607e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 1.4195000000001567e-05, 4.7199999999789077e-07, 1.3514000000002663e-05, 4.859999999974607e-07, 4.361000000001336e-06, 4.720000000013602e-07, 7.694999999998536e-06, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 8.027000000000728e-06, 4.729999999973644e-07, 1.0194000000001563e-05, 4.720000000013602e-07, 1.2721999999999734e-05, 4.729999999973644e-07, 1.3680000000002024e-05, 4.7199999999789077e-07, 1.4181000000001998e-05, 4.860000000009301e-07, 6.680999999997966e-06, 4.860000000009301e-07, 6.513999999999132e-06, 4.860000000009301e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 1.0846999999997858e-05, 4.860000000009301e-07, 4.528000000000171e-06, 4.720000000013602e-07, 9.541999999997802e-06, 4.720000000013602e-07, 1.2180999999999997e-05, 4.7199999999789077e-07], 'source_diff': [0, 4.7300000000083386e-07, 7.026999999999728e-06, 4.7300000000083386e-07, 1.0708000000001633e-05, 4.7199999999789077e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 5.34800000000224e-06, 4.7199999999789077e-07, 5.860999999999367e-06, 4.720000000013602e-07, 7.861000000001367e-06, 4.729999999973644e-07, 9.708000000000633e-06, 4.720000000013602e-07, 1.4514000000000193e-05, 4.859999999974607e-07, 6.181000000000936e-06, 4.860000000009301e-07, 1.434699999999789e-05, 4.860000000009301e-07, 1.0527999999999232e-05, 4.720000000013602e-07, 1.0347000000000828e-05, 4.860000000009301e-07, 9.861999999999371e-06, 4.7199999999789077e-07, 1.0528000000002702e-05, 4.7199999999789077e-07, 8.707999999999633e-06, 4.720000000013602e-07, 9.681000000000967e-06, 4.7199999999789077e-07, 1.3360999999999928e-05, 4.720000000013602e-07, 1.1694999999999067e-05, 4.720000000013602e-07, 1.0569999999997942e-05, 4.720000000013602e-07, 1.3847000000000859e-05, 4.7199999999789077e-07, 8.514000000001132e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.859999999974607e-07, 1.4708000000002164e-05, 4.729999999973644e-07, 5.180000000000462e-06, 4.720000000013602e-07, 1.3360999999999928e-05, 4.7300000000083386e-07, 9.360999999999398e-06, 4.7199999999789077e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 5.361000000002336e-06, 4.7199999999789077e-07, 1.2874999999998998e-05, 4.720000000013602e-07, 7.680999999998966e-06, 4.720000000013602e-07, 1.1361000000001398e-05, 4.859999999974607e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 1.4195000000001567e-05, 4.7199999999789077e-07, 1.3514000000002663e-05, 4.859999999974607e-07, 4.361000000001336e-06, 4.720000000013602e-07, 7.694999999998536e-06, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 8.027000000000728e-06, 4.729999999973644e-07, 1.0194000000001563e-05, 4.720000000013602e-07, 1.2721999999999734e-05, 4.729999999973644e-07, 1.3680000000002024e-05, 4.7199999999789077e-07, 1.4181000000001998e-05, 4.860000000009301e-07, 6.680999999997966e-06, 4.860000000009301e-07, 6.513999999999132e-06, 4.860000000009301e-07, 1.0513999999999663e-05, 4.860000000009301e-07, 1.0846999999997858e-05, 4.860000000009301e-07, 4.528000000000171e-06, 4.720000000013602e-07, 9.541999999997802e-06, 4.720000000013602e-07, 1.2180999999999997e-05, 4.7199999999789077e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:46.719" endtime="20201112 10:13:46.723"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.714" endtime="20201112 10:13:46.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:46.728" level="INFO">${RESULT} = [{'time': 0.018415431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018422931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:46.724" endtime="20201112 10:13:46.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:46.742" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018415431, 0.018422931, 0.018434111, 0.018442944, 0.018448764, 0.018455097, 0.018463431, 0.018473611, 0.018488611, 0.018495278, 0.018510111, 0.018521111, 0.018531944, 0.018542278, 0.018553...</msg>
<status status="PASS" starttime="20201112 10:13:46.729" endtime="20201112 10:13:46.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.746" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:46.745" endtime="20201112 10:13:46.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.749" level="INFO">VALUE: [4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 10:13:46.747" endtime="20201112 10:13:46.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.743" endtime="20201112 10:13:46.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.752" endtime="20201112 10:13:46.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:46.756" endtime="20201112 10:13:46.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.754" endtime="20201112 10:13:46.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.750" endtime="20201112 10:13:46.777"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.326" endtime="20201112 10:13:46.777"></status>
</kw>
<msg timestamp="20201112 10:13:46.777" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.785" endtime="20201112 10:13:46.795"></status>
</kw>
<msg timestamp="20201112 10:13:46.796" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:46.784" endtime="20201112 10:13:46.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.798" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:46.797" endtime="20201112 10:13:46.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.799" endtime="20201112 10:13:46.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.781" endtime="20201112 10:13:46.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.779" endtime="20201112 10:13:46.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.808" endtime="20201112 10:13:47.094"></status>
</kw>
<msg timestamp="20201112 10:13:47.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018876736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018877208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:46.807" endtime="20201112 10:13:47.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018876736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018877208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:47.098" endtime="20201112 10:13:47.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.107" endtime="20201112 10:13:47.109"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.804" endtime="20201112 10:13:47.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.802" endtime="20201112 10:13:47.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.114" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:47.113" endtime="20201112 10:13:47.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.119" level="INFO">VALUE: [{'time': 0.018876736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018877208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018882083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.018882556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018892236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.679999999998024e-06, 'source_diff': 9.679999999998024e-06}, {'time': 0.018892708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018905569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.018906056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018918403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.018918889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018927569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.018928056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018939319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1263000000000939e-05, 'source_diff': 1.1263000000000939e-05}, {'time': 0.018939792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018949417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.018949889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018960764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.018961236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018975417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4181000000001998e-05, 'source_diff': 1.4181000000001998e-05}, {'time': 0.018975889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018982764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999999937e-06, 'source_diff': 6.874999999999937e-06}, {'time': 0.018983236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018993083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.018993556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018999125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5689999999969375e-06, 'source_diff': 5.5689999999969375e-06}, {'time': 0.018999597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019006417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.820000000001131e-06, 'source_diff': 6.820000000001131e-06}, {'time': 0.019006889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019016083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.019016556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01902225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.019022736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019027083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.019027569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019034431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8619999999998404e-06, 'source_diff': 6.8619999999998404e-06}, {'time': 0.019034903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019042417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.019042903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01905075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.019051236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019059417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180999999999466e-06, 'source_diff': 8.180999999999466e-06}, {'time': 0.019059903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019068764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.019069236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019076278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.01907675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019091264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.019091736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019095903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.019096389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019106403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.019106889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019120736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847000000000859e-05, 'source_diff': 1.3847000000000859e-05}, {'time': 0.019121222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019132083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.019132556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019144931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2375000000001968e-05, 'source_diff': 1.2375000000001968e-05}, {'time': 0.019145403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019154083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000000493e-06, 'source_diff': 8.680000000000493e-06}, {'time': 0.019154556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019161931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.019162403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019167597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.019168069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019181917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3848000000000332e-05, 'source_diff': 1.3848000000000332e-05}, {'time': 0.019182389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019189583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.193999999998563e-06, 'source_diff': 7.193999999998563e-06}, {'time': 0.019190056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019200917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.019201403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019211417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.019211903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.01922125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.019221736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01923025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.019230736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019242431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1695000000002537e-05, 'source_diff': 1.1695000000002537e-05}, {'time': 0.019242903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019254264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1361000000001398e-05, 'source_diff': 1.1361000000001398e-05}, {'time': 0.019254736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019262847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.019263319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019271097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.019271569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019280278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.709000000002576e-06, 'source_diff': 8.709000000002576e-06}, {'time': 0.01928075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019286944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.019287417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019301431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.019301903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019313097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1194000000002563e-05, 'source_diff': 1.1194000000002563e-05}, {'time': 0.019313569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019326931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3361999999999402e-05, 'source_diff': 1.3361999999999402e-05}, {'time': 0.019327417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019335931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.019336417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019344111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.693999999999063e-06, 'source_diff': 7.693999999999063e-06}, {'time': 0.019344583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019356125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1541999999999802e-05, 'source_diff': 1.1541999999999802e-05}, {'time': 0.019356597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:47.115" endtime="20201112 10:13:47.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.111" endtime="20201112 10:13:47.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:47.148" level="INFO">${debug-compressed} = {'time': [0.018876736, 0.018877208, 0.018882083, 0.018882556, 0.018892236, 0.018892708, 0.018905569, 0.018906056, 0.018918403, 0.018918889, 0.018927569, 0.018928056, 0.018939319, 0.018939792, 0.018949...</msg>
<status status="PASS" starttime="20201112 10:13:47.122" endtime="20201112 10:13:47.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.152" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:47.151" endtime="20201112 10:13:47.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.157" level="INFO">VALUE: {'time': [0.018876736, 0.018877208, 0.018882083, 0.018882556, 0.018892236, 0.018892708, 0.018905569, 0.018906056, 0.018918403, 0.018918889, 0.018927569, 0.018928056, 0.018939319, 0.018939792, 0.018949417, 0.018949889, 0.018960764, 0.018961236, 0.018975417, 0.018975889, 0.018982764, 0.018983236, 0.018993083, 0.018993556, 0.018999125, 0.018999597, 0.019006417, 0.019006889, 0.019016083, 0.019016556, 0.01902225, 0.019022736, 0.019027083, 0.019027569, 0.019034431, 0.019034903, 0.019042417, 0.019042903, 0.01905075, 0.019051236, 0.019059417, 0.019059903, 0.019068764, 0.019069236, 0.019076278, 0.01907675, 0.019091264, 0.019091736, 0.019095903, 0.019096389, 0.019106403, 0.019106889, 0.019120736, 0.019121222, 0.019132083, 0.019132556, 0.019144931, 0.019145403, 0.019154083, 0.019154556, 0.019161931, 0.019162403, 0.019167597, 0.019168069, 0.019181917, 0.019182389, 0.019189583, 0.019190056, 0.019200917, 0.019201403, 0.019211417, 0.019211903, 0.01922125, 0.019221736, 0.01923025, 0.019230736, 0.019242431, 0.019242903, 0.019254264, 0.019254736, 0.019262847, 0.019263319, 0.019271097, 0.019271569, 0.019280278, 0.01928075, 0.019286944, 0.019287417, 0.019301431, 0.019301903, 0.019313097, 0.019313569, 0.019326931, 0.019327417, 0.019335931, 0.019336417, 0.019344111, 0.019344583, 0.019356125, 0.019356597], 'eventdiff': [0, 4.7199999999789077e-07, 4.875000000001406e-06, 4.7300000000083386e-07, 9.679999999998024e-06, 4.720000000013602e-07, 1.2860999999999428e-05, 4.870000000004038e-07, 1.2346999999999358e-05, 4.860000000009301e-07, 8.680000000000493e-06, 4.869999999969343e-07, 1.1263000000000939e-05, 4.7300000000083386e-07, 9.624999999999218e-06, 4.720000000013602e-07, 1.0875000000000468e-05, 4.7199999999789077e-07, 1.4181000000001998e-05, 4.7199999999789077e-07, 6.874999999999937e-06, 4.720000000013602e-07, 9.847000000000328e-06, 4.7300000000083386e-07, 5.5689999999969375e-06, 4.720000000013602e-07, 6.820000000001131e-06, 4.7199999999789077e-07, 9.194000000000563e-06, 4.7300000000083386e-07, 5.694000000000532e-06, 4.859999999974607e-07, 4.347000000001766e-06, 4.860000000009301e-07, 6.8619999999998404e-06, 4.7199999999789077e-07, 7.514000000000132e-06, 4.860000000009301e-07, 7.847000000001797e-06, 4.859999999974607e-07, 8.180999999999466e-06, 4.860000000009301e-07, 8.860999999998898e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 1.4514000000000193e-05, 4.720000000013602e-07, 4.166999999999366e-06, 4.859999999974607e-07, 1.0014000000002632e-05, 4.859999999974607e-07, 1.3847000000000859e-05, 4.860000000009301e-07, 1.0861000000000898e-05, 4.729999999973644e-07, 1.2375000000001968e-05, 4.7199999999789077e-07, 8.680000000000493e-06, 4.7300000000083386e-07, 7.375000000000437e-06, 4.720000000013602e-07, 5.194000000000032e-06, 4.7199999999789077e-07, 1.3848000000000332e-05, 4.720000000013602e-07, 7.193999999998563e-06, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.859999999974607e-07, 1.0014000000002632e-05, 4.859999999974607e-07, 9.346999999999828e-06, 4.860000000009301e-07, 8.514000000001132e-06, 4.859999999974607e-07, 1.1695000000002537e-05, 4.7199999999789077e-07, 1.1361000000001398e-05, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.7199999999789077e-07, 8.709000000002576e-06, 4.7199999999789077e-07, 6.194000000001032e-06, 4.7300000000083386e-07, 1.4013999999999693e-05, 4.7199999999789077e-07, 1.1194000000002563e-05, 4.7199999999789077e-07, 1.3361999999999402e-05, 4.860000000009301e-07, 8.514000000001132e-06, 4.860000000009301e-07, 7.693999999999063e-06, 4.7199999999789077e-07, 1.1541999999999802e-05, 4.720000000013602e-07], 'source_diff': [0, 4.7199999999789077e-07, 4.875000000001406e-06, 4.7300000000083386e-07, 9.679999999998024e-06, 4.720000000013602e-07, 1.2860999999999428e-05, 4.870000000004038e-07, 1.2346999999999358e-05, 4.860000000009301e-07, 8.680000000000493e-06, 4.869999999969343e-07, 1.1263000000000939e-05, 4.7300000000083386e-07, 9.624999999999218e-06, 4.720000000013602e-07, 1.0875000000000468e-05, 4.7199999999789077e-07, 1.4181000000001998e-05, 4.7199999999789077e-07, 6.874999999999937e-06, 4.720000000013602e-07, 9.847000000000328e-06, 4.7300000000083386e-07, 5.5689999999969375e-06, 4.720000000013602e-07, 6.820000000001131e-06, 4.7199999999789077e-07, 9.194000000000563e-06, 4.7300000000083386e-07, 5.694000000000532e-06, 4.859999999974607e-07, 4.347000000001766e-06, 4.860000000009301e-07, 6.8619999999998404e-06, 4.7199999999789077e-07, 7.514000000000132e-06, 4.860000000009301e-07, 7.847000000001797e-06, 4.859999999974607e-07, 8.180999999999466e-06, 4.860000000009301e-07, 8.860999999998898e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 1.4514000000000193e-05, 4.720000000013602e-07, 4.166999999999366e-06, 4.859999999974607e-07, 1.0014000000002632e-05, 4.859999999974607e-07, 1.3847000000000859e-05, 4.860000000009301e-07, 1.0861000000000898e-05, 4.729999999973644e-07, 1.2375000000001968e-05, 4.7199999999789077e-07, 8.680000000000493e-06, 4.7300000000083386e-07, 7.375000000000437e-06, 4.720000000013602e-07, 5.194000000000032e-06, 4.7199999999789077e-07, 1.3848000000000332e-05, 4.720000000013602e-07, 7.193999999998563e-06, 4.7300000000083386e-07, 1.0861000000000898e-05, 4.859999999974607e-07, 1.0014000000002632e-05, 4.859999999974607e-07, 9.346999999999828e-06, 4.860000000009301e-07, 8.514000000001132e-06, 4.859999999974607e-07, 1.1695000000002537e-05, 4.7199999999789077e-07, 1.1361000000001398e-05, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.7199999999789077e-07, 8.709000000002576e-06, 4.7199999999789077e-07, 6.194000000001032e-06, 4.7300000000083386e-07, 1.4013999999999693e-05, 4.7199999999789077e-07, 1.1194000000002563e-05, 4.7199999999789077e-07, 1.3361999999999402e-05, 4.860000000009301e-07, 8.514000000001132e-06, 4.860000000009301e-07, 7.693999999999063e-06, 4.7199999999789077e-07, 1.1541999999999802e-05, 4.720000000013602e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:47.154" endtime="20201112 10:13:47.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.149" endtime="20201112 10:13:47.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:47.163" level="INFO">${RESULT} = [{'time': 0.018877208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018882556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:47.159" endtime="20201112 10:13:47.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:47.177" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018877208, 0.018882556, 0.018892708, 0.018906056, 0.018918889, 0.018928056, 0.018939792, 0.018949889, 0.018961236, 0.018975889, 0.018983236, 0.018993556, 0.018999597, 0.019006889, 0.019016...</msg>
<status status="PASS" starttime="20201112 10:13:47.164" endtime="20201112 10:13:47.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.181" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:47.180" endtime="20201112 10:13:47.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.184" level="INFO">VALUE: [4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.869999999969343e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 10:13:47.182" endtime="20201112 10:13:47.184"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.178" endtime="20201112 10:13:47.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.187" endtime="20201112 10:13:47.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:47.191" endtime="20201112 10:13:47.210"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.189" endtime="20201112 10:13:47.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.186" endtime="20201112 10:13:47.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.778" endtime="20201112 10:13:47.212"></status>
</kw>
<msg timestamp="20201112 10:13:47.212" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.220" endtime="20201112 10:13:47.230"></status>
</kw>
<msg timestamp="20201112 10:13:47.231" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:47.218" endtime="20201112 10:13:47.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.233" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:47.232" endtime="20201112 10:13:47.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.234" endtime="20201112 10:13:47.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.215" endtime="20201112 10:13:47.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.214" endtime="20201112 10:13:47.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.244" endtime="20201112 10:13:47.528"></status>
</kw>
<msg timestamp="20201112 10:13:47.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018957028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018957514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:47.242" endtime="20201112 10:13:47.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018957028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018957514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:47.532" endtime="20201112 10:13:47.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.568" endtime="20201112 10:13:47.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.239" endtime="20201112 10:13:47.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.238" endtime="20201112 10:13:47.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.575" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:47.574" endtime="20201112 10:13:47.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.580" level="INFO">VALUE: [{'time': 0.018957028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018957514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018966361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.018966847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018981208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4361000000000929e-05, 'source_diff': 1.4361000000000929e-05}, {'time': 0.018981681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018991042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.018991514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019000556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041999999997302e-06, 'source_diff': 9.041999999997302e-06}, {'time': 0.019001028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019013222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.019013694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019019708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.019020181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019031556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1375000000000968e-05, 'source_diff': 1.1375000000000968e-05}, {'time': 0.019032028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019039875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000001797e-06, 'source_diff': 7.847000000001797e-06}, {'time': 0.019040347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019045556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.209000000002545e-06, 'source_diff': 5.209000000002545e-06}, {'time': 0.019046028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019054556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.019055028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019068056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3027999999998263e-05, 'source_diff': 1.3027999999998263e-05}, {'time': 0.019068528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019079375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0846999999997858e-05, 'source_diff': 1.0846999999997858e-05}, {'time': 0.019079861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019088389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.019088861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019097042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.181000000002936e-06, 'source_diff': 8.181000000002936e-06}, {'time': 0.019097528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019105889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.361000000001867e-06, 'source_diff': 8.361000000001867e-06}, {'time': 0.019106361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019120222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.019120694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019129569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.019130042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019144389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4347000000001359e-05, 'source_diff': 1.4347000000001359e-05}, {'time': 0.019144861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019154889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.019155361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019166556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1195000000002037e-05, 'source_diff': 1.1195000000002037e-05}, {'time': 0.019167028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019180403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3374999999999498e-05, 'source_diff': 1.3374999999999498e-05}, {'time': 0.019180875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019186556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.019187042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019194722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.679999999999493e-06, 'source_diff': 7.679999999999493e-06}, {'time': 0.019195208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019208889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3681000000001498e-05, 'source_diff': 1.3681000000001498e-05}, {'time': 0.019209375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019216389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.019216875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019221389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.019221875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019232972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1097000000001578e-05, 'source_diff': 1.1097000000001578e-05}, {'time': 0.019233444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019244403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0959000000001357e-05, 'source_diff': 1.0959000000001357e-05}, {'time': 0.019244875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019254236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.019254708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019265236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0528000000002702e-05, 'source_diff': 1.0528000000002702e-05}, {'time': 0.019265708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01927325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.019273722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019285569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1846999999998858e-05, 'source_diff': 1.1846999999998858e-05}, {'time': 0.019286042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019293403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000000867e-06, 'source_diff': 7.361000000000867e-06}, {'time': 0.019293875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019298583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.708000000002571e-06, 'source_diff': 4.708000000002571e-06}, {'time': 0.019299056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019310236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1180000000002993e-05, 'source_diff': 1.1180000000002993e-05}, {'time': 0.019310722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019322569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1847000000002328e-05, 'source_diff': 1.1847000000002328e-05}, {'time': 0.019323056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019334236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1179999999999524e-05, 'source_diff': 1.1179999999999524e-05}, {'time': 0.019334722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019344917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0195000000001037e-05, 'source_diff': 1.0195000000001037e-05}, {'time': 0.019345389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01935375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.360999999998397e-06, 'source_diff': 8.360999999998397e-06}, {'time': 0.019354222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01936025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.019360722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019365417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.019365889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01937825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.019378722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019389083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.019389556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019396431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999999937e-06, 'source_diff': 6.874999999999937e-06}, {'time': 0.019396903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019404417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.019404889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019410583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6939999999970625e-06, 'source_diff': 5.6939999999970625e-06}, {'time': 0.019411056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01942525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4194000000002094e-05, 'source_diff': 1.4194000000002094e-05}, {'time': 0.019425736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019437417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680999999999497e-05, 'source_diff': 1.1680999999999497e-05}, {'time': 0.019437903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01944375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.019444236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:47.576" endtime="20201112 10:13:47.581"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.571" endtime="20201112 10:13:47.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:47.607" level="INFO">${debug-compressed} = {'time': [0.018957028, 0.018957514, 0.018966361, 0.018966847, 0.018981208, 0.018981681, 0.018991042, 0.018991514, 0.019000556, 0.019001028, 0.019013222, 0.019013694, 0.019019708, 0.019020181, 0.019031...</msg>
<status status="PASS" starttime="20201112 10:13:47.583" endtime="20201112 10:13:47.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.611" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:47.610" endtime="20201112 10:13:47.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.616" level="INFO">VALUE: {'time': [0.018957028, 0.018957514, 0.018966361, 0.018966847, 0.018981208, 0.018981681, 0.018991042, 0.018991514, 0.019000556, 0.019001028, 0.019013222, 0.019013694, 0.019019708, 0.019020181, 0.019031556, 0.019032028, 0.019039875, 0.019040347, 0.019045556, 0.019046028, 0.019054556, 0.019055028, 0.019068056, 0.019068528, 0.019079375, 0.019079861, 0.019088389, 0.019088861, 0.019097042, 0.019097528, 0.019105889, 0.019106361, 0.019120222, 0.019120694, 0.019129569, 0.019130042, 0.019144389, 0.019144861, 0.019154889, 0.019155361, 0.019166556, 0.019167028, 0.019180403, 0.019180875, 0.019186556, 0.019187042, 0.019194722, 0.019195208, 0.019208889, 0.019209375, 0.019216389, 0.019216875, 0.019221389, 0.019221875, 0.019232972, 0.019233444, 0.019244403, 0.019244875, 0.019254236, 0.019254708, 0.019265236, 0.019265708, 0.01927325, 0.019273722, 0.019285569, 0.019286042, 0.019293403, 0.019293875, 0.019298583, 0.019299056, 0.019310236, 0.019310722, 0.019322569, 0.019323056, 0.019334236, 0.019334722, 0.019344917, 0.019345389, 0.01935375, 0.019354222, 0.01936025, 0.019360722, 0.019365417, 0.019365889, 0.01937825, 0.019378722, 0.019389083, 0.019389556, 0.019396431, 0.019396903, 0.019404417, 0.019404889, 0.019410583, 0.019411056, 0.01942525, 0.019425736, 0.019437417, 0.019437903, 0.01944375, 0.019444236], 'eventdiff': [0, 4.860000000009301e-07, 8.846999999999328e-06, 4.859999999974607e-07, 1.4361000000000929e-05, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 9.041999999997302e-06, 4.720000000013602e-07, 1.2194000000000094e-05, 4.720000000013602e-07, 6.0139999999986316e-06, 4.7300000000083386e-07, 1.1375000000000968e-05, 4.7199999999789077e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 5.209000000002545e-06, 4.7199999999789077e-07, 8.528000000000702e-06, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 1.0846999999997858e-05, 4.860000000009301e-07, 8.528000000000702e-06, 4.7199999999789077e-07, 8.181000000002936e-06, 4.859999999974607e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 1.4347000000001359e-05, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.7199999999789077e-07, 1.1195000000002037e-05, 4.7199999999789077e-07, 1.3374999999999498e-05, 4.720000000013602e-07, 5.681000000000436e-06, 4.860000000009301e-07, 7.679999999999493e-06, 4.859999999974607e-07, 1.3681000000001498e-05, 4.860000000009301e-07, 7.013999999999632e-06, 4.860000000009301e-07, 4.513999999997131e-06, 4.860000000009301e-07, 1.1097000000001578e-05, 4.7199999999789077e-07, 1.0959000000001357e-05, 4.720000000013602e-07, 9.360999999999398e-06, 4.7199999999789077e-07, 1.0528000000002702e-05, 4.7199999999789077e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 1.1846999999998858e-05, 4.7300000000083386e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 4.708000000002571e-06, 4.729999999973644e-07, 1.1180000000002993e-05, 4.859999999974607e-07, 1.1847000000002328e-05, 4.870000000004038e-07, 1.1179999999999524e-05, 4.859999999974607e-07, 1.0195000000001037e-05, 4.720000000013602e-07, 8.360999999998397e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 4.6949999999990055e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07, 1.0361000000000398e-05, 4.729999999973644e-07, 6.874999999999937e-06, 4.720000000013602e-07, 7.514000000000132e-06, 4.720000000013602e-07, 5.6939999999970625e-06, 4.7300000000083386e-07, 1.4194000000002094e-05, 4.859999999974607e-07, 1.1680999999999497e-05, 4.860000000009301e-07, 5.846999999999797e-06, 4.860000000009301e-07], 'source_diff': [0, 4.860000000009301e-07, 8.846999999999328e-06, 4.859999999974607e-07, 1.4361000000000929e-05, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 9.041999999997302e-06, 4.720000000013602e-07, 1.2194000000000094e-05, 4.720000000013602e-07, 6.0139999999986316e-06, 4.7300000000083386e-07, 1.1375000000000968e-05, 4.7199999999789077e-07, 7.847000000001797e-06, 4.7199999999789077e-07, 5.209000000002545e-06, 4.7199999999789077e-07, 8.528000000000702e-06, 4.720000000013602e-07, 1.3027999999998263e-05, 4.720000000013602e-07, 1.0846999999997858e-05, 4.860000000009301e-07, 8.528000000000702e-06, 4.7199999999789077e-07, 8.181000000002936e-06, 4.859999999974607e-07, 8.361000000001867e-06, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 1.4347000000001359e-05, 4.7199999999789077e-07, 1.0028000000002202e-05, 4.7199999999789077e-07, 1.1195000000002037e-05, 4.7199999999789077e-07, 1.3374999999999498e-05, 4.720000000013602e-07, 5.681000000000436e-06, 4.860000000009301e-07, 7.679999999999493e-06, 4.859999999974607e-07, 1.3681000000001498e-05, 4.860000000009301e-07, 7.013999999999632e-06, 4.860000000009301e-07, 4.513999999997131e-06, 4.860000000009301e-07, 1.1097000000001578e-05, 4.7199999999789077e-07, 1.0959000000001357e-05, 4.720000000013602e-07, 9.360999999999398e-06, 4.7199999999789077e-07, 1.0528000000002702e-05, 4.7199999999789077e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 1.1846999999998858e-05, 4.7300000000083386e-07, 7.361000000000867e-06, 4.7199999999789077e-07, 4.708000000002571e-06, 4.729999999973644e-07, 1.1180000000002993e-05, 4.859999999974607e-07, 1.1847000000002328e-05, 4.870000000004038e-07, 1.1179999999999524e-05, 4.859999999974607e-07, 1.0195000000001037e-05, 4.720000000013602e-07, 8.360999999998397e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 4.6949999999990055e-06, 4.720000000013602e-07, 1.2360999999998928e-05, 4.720000000013602e-07, 1.0361000000000398e-05, 4.729999999973644e-07, 6.874999999999937e-06, 4.720000000013602e-07, 7.514000000000132e-06, 4.720000000013602e-07, 5.6939999999970625e-06, 4.7300000000083386e-07, 1.4194000000002094e-05, 4.859999999974607e-07, 1.1680999999999497e-05, 4.860000000009301e-07, 5.846999999999797e-06, 4.860000000009301e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:47.612" endtime="20201112 10:13:47.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.608" endtime="20201112 10:13:47.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:47.621" level="INFO">${RESULT} = [{'time': 0.018957514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018966847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:47.618" endtime="20201112 10:13:47.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:47.635" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018957514, 0.018966847, 0.018981681, 0.018991514, 0.019001028, 0.019013694, 0.019020181, 0.019032028, 0.019040347, 0.019046028, 0.019055028, 0.019068528, 0.019079861, 0.019088861, 0.019097...</msg>
<status status="PASS" starttime="20201112 10:13:47.622" endtime="20201112 10:13:47.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.640" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:47.639" endtime="20201112 10:13:47.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.642" level="INFO">VALUE: [4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 10:13:47.641" endtime="20201112 10:13:47.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.636" endtime="20201112 10:13:47.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.646" endtime="20201112 10:13:47.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:47.649" endtime="20201112 10:13:47.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.648" endtime="20201112 10:13:47.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.644" endtime="20201112 10:13:47.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.212" endtime="20201112 10:13:47.670"></status>
</kw>
<msg timestamp="20201112 10:13:47.670" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.679" endtime="20201112 10:13:47.689"></status>
</kw>
<msg timestamp="20201112 10:13:47.690" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:47.677" endtime="20201112 10:13:47.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.692" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:47.691" endtime="20201112 10:13:47.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.694" endtime="20201112 10:13:47.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.675" endtime="20201112 10:13:47.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.672" endtime="20201112 10:13:47.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.703" endtime="20201112 10:13:47.986"></status>
</kw>
<msg timestamp="20201112 10:13:47.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019932472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:47.701" endtime="20201112 10:13:47.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019932472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:47.990" endtime="20201112 10:13:47.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.999" endtime="20201112 10:13:48.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.699" endtime="20201112 10:13:48.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.697" endtime="20201112 10:13:48.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.006" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:48.004" endtime="20201112 10:13:48.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.011" level="INFO">VALUE: [{'time': 0.019932472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019932944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019940958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.019941431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019951292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.019951778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019964806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3028000000001733e-05, 'source_diff': 1.3028000000001733e-05}, {'time': 0.019965278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019974125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.019974611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0199885, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3888999999999568e-05, 'source_diff': 1.3888999999999568e-05}, {'time': 0.019988972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019998306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.019998778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020008306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.020008778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020014806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.020015278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020024139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.020024611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020035472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0860999999997428e-05, 'source_diff': 1.0860999999997428e-05}, {'time': 0.020035944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020042472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.020042944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020052319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.020052792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020062486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.694000000001063e-06, 'source_diff': 9.694000000001063e-06}, {'time': 0.020062958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020069653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.020070125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020080653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0527999999999232e-05, 'source_diff': 1.0527999999999232e-05}, {'time': 0.020081125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020085972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.020086458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020095639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180999999996997e-06, 'source_diff': 9.180999999996997e-06}, {'time': 0.020096125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020108972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.020109458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020121819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2360999999998928e-05, 'source_diff': 1.2360999999998928e-05}, {'time': 0.020122292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020133819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1527000000000759e-05, 'source_diff': 1.1527000000000759e-05}, {'time': 0.020134292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020143653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.020144125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020157319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.020157792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020166986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.020167458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020174319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.020174792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020182667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000000937e-06, 'source_diff': 7.875000000000937e-06}, {'time': 0.020183139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020189653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.020190139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020201819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.020202306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020210486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.020210972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020216986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.020217472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020221819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.020222306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020234153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1847000000002328e-05, 'source_diff': 1.1847000000002328e-05}, {'time': 0.020234639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020244167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.020244639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0202575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2861000000002898e-05, 'source_diff': 1.2861000000002898e-05}, {'time': 0.020257972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020269833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1861000000001898e-05, 'source_diff': 1.1861000000001898e-05}, {'time': 0.020270306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020279667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.361000000002867e-06, 'source_diff': 9.361000000002867e-06}, {'time': 0.020280139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020284889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.750000000001281e-06, 'source_diff': 4.750000000001281e-06}, {'time': 0.020285361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020293833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.020294306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020309014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4707999999998694e-05, 'source_diff': 1.4707999999998694e-05}, {'time': 0.020309486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020316333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.020316819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0203215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.020321986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020326153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.020326625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020335167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.020335639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020347319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1680000000000024e-05, 'source_diff': 1.1680000000000024e-05}, {'time': 0.020347792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020357819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0026999999999259e-05, 'source_diff': 1.0026999999999259e-05}, {'time': 0.020358292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020362653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.020363125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020367819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.020368292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020381167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2874999999998998e-05, 'source_diff': 1.2874999999998998e-05}, {'time': 0.020381639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020387319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.020387806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020400153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.020400639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:48.007" endtime="20201112 10:13:48.012"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.002" endtime="20201112 10:13:48.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:48.039" level="INFO">${debug-compressed} = {'time': [0.019932472, 0.019932944, 0.019940958, 0.019941431, 0.019951292, 0.019951778, 0.019964806, 0.019965278, 0.019974125, 0.019974611, 0.0199885, 0.019988972, 0.019998306, 0.019998778, 0.02000830...</msg>
<status status="PASS" starttime="20201112 10:13:48.014" endtime="20201112 10:13:48.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.043" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:48.042" endtime="20201112 10:13:48.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.048" level="INFO">VALUE: {'time': [0.019932472, 0.019932944, 0.019940958, 0.019941431, 0.019951292, 0.019951778, 0.019964806, 0.019965278, 0.019974125, 0.019974611, 0.0199885, 0.019988972, 0.019998306, 0.019998778, 0.020008306, 0.020008778, 0.020014806, 0.020015278, 0.020024139, 0.020024611, 0.020035472, 0.020035944, 0.020042472, 0.020042944, 0.020052319, 0.020052792, 0.020062486, 0.020062958, 0.020069653, 0.020070125, 0.020080653, 0.020081125, 0.020085972, 0.020086458, 0.020095639, 0.020096125, 0.020108972, 0.020109458, 0.020121819, 0.020122292, 0.020133819, 0.020134292, 0.020143653, 0.020144125, 0.020157319, 0.020157792, 0.020166986, 0.020167458, 0.020174319, 0.020174792, 0.020182667, 0.020183139, 0.020189653, 0.020190139, 0.020201819, 0.020202306, 0.020210486, 0.020210972, 0.020216986, 0.020217472, 0.020221819, 0.020222306, 0.020234153, 0.020234639, 0.020244167, 0.020244639, 0.0202575, 0.020257972, 0.020269833, 0.020270306, 0.020279667, 0.020280139, 0.020284889, 0.020285361, 0.020293833, 0.020294306, 0.020309014, 0.020309486, 0.020316333, 0.020316819, 0.0203215, 0.020321986, 0.020326153, 0.020326625, 0.020335167, 0.020335639, 0.020347319, 0.020347792, 0.020357819, 0.020358292, 0.020362653, 0.020363125, 0.020367819, 0.020368292, 0.020381167, 0.020381639, 0.020387319, 0.020387806, 0.020400153, 0.020400639], 'eventdiff': [0, 4.720000000013602e-07, 8.014000000000632e-06, 4.729999999973644e-07, 9.860999999999898e-06, 4.860000000009301e-07, 1.3028000000001733e-05, 4.7199999999789077e-07, 8.846999999999328e-06, 4.860000000009301e-07, 1.3888999999999568e-05, 4.720000000013602e-07, 9.333999999999731e-06, 4.7199999999789077e-07, 9.528000000001702e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.0860999999997428e-05, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.7300000000083386e-07, 9.694000000001063e-06, 4.7199999999789077e-07, 6.695000000001006e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.7199999999789077e-07, 4.847000000002266e-06, 4.860000000009301e-07, 9.180999999996997e-06, 4.860000000009301e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.2360999999998928e-05, 4.7300000000083386e-07, 1.1527000000000759e-05, 4.7300000000083386e-07, 9.360999999999398e-06, 4.7199999999789077e-07, 1.3194000000001094e-05, 4.7300000000083386e-07, 9.194000000000563e-06, 4.7199999999789077e-07, 6.861000000000367e-06, 4.7300000000083386e-07, 7.875000000000937e-06, 4.7199999999789077e-07, 6.513999999999132e-06, 4.860000000009301e-07, 1.1680000000000024e-05, 4.870000000004038e-07, 8.179999999999993e-06, 4.860000000009301e-07, 6.0139999999986316e-06, 4.860000000009301e-07, 4.346999999998297e-06, 4.870000000004038e-07, 1.1847000000002328e-05, 4.859999999974607e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 1.2861000000002898e-05, 4.7199999999789077e-07, 1.1861000000001898e-05, 4.729999999973644e-07, 9.361000000002867e-06, 4.7199999999789077e-07, 4.750000000001281e-06, 4.7199999999789077e-07, 8.472000000002422e-06, 4.7300000000083386e-07, 1.4707999999998694e-05, 4.720000000013602e-07, 6.8469999999973274e-06, 4.860000000009301e-07, 4.680999999999436e-06, 4.860000000009301e-07, 4.166999999999366e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.7199999999789077e-07, 1.1680000000000024e-05, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 1.2874999999998998e-05, 4.720000000013602e-07, 5.680000000000962e-06, 4.870000000004038e-07, 1.2346999999999358e-05, 4.860000000009301e-07], 'source_diff': [0, 4.720000000013602e-07, 8.014000000000632e-06, 4.729999999973644e-07, 9.860999999999898e-06, 4.860000000009301e-07, 1.3028000000001733e-05, 4.7199999999789077e-07, 8.846999999999328e-06, 4.860000000009301e-07, 1.3888999999999568e-05, 4.720000000013602e-07, 9.333999999999731e-06, 4.7199999999789077e-07, 9.528000000001702e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.720000000013602e-07, 1.0860999999997428e-05, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.7300000000083386e-07, 9.694000000001063e-06, 4.7199999999789077e-07, 6.695000000001006e-06, 4.720000000013602e-07, 1.0527999999999232e-05, 4.7199999999789077e-07, 4.847000000002266e-06, 4.860000000009301e-07, 9.180999999996997e-06, 4.860000000009301e-07, 1.2846999999999859e-05, 4.860000000009301e-07, 1.2360999999998928e-05, 4.7300000000083386e-07, 1.1527000000000759e-05, 4.7300000000083386e-07, 9.360999999999398e-06, 4.7199999999789077e-07, 1.3194000000001094e-05, 4.7300000000083386e-07, 9.194000000000563e-06, 4.7199999999789077e-07, 6.861000000000367e-06, 4.7300000000083386e-07, 7.875000000000937e-06, 4.7199999999789077e-07, 6.513999999999132e-06, 4.860000000009301e-07, 1.1680000000000024e-05, 4.870000000004038e-07, 8.179999999999993e-06, 4.860000000009301e-07, 6.0139999999986316e-06, 4.860000000009301e-07, 4.346999999998297e-06, 4.870000000004038e-07, 1.1847000000002328e-05, 4.859999999974607e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 1.2861000000002898e-05, 4.7199999999789077e-07, 1.1861000000001898e-05, 4.729999999973644e-07, 9.361000000002867e-06, 4.7199999999789077e-07, 4.750000000001281e-06, 4.7199999999789077e-07, 8.472000000002422e-06, 4.7300000000083386e-07, 1.4707999999998694e-05, 4.720000000013602e-07, 6.8469999999973274e-06, 4.860000000009301e-07, 4.680999999999436e-06, 4.860000000009301e-07, 4.166999999999366e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.7199999999789077e-07, 1.1680000000000024e-05, 4.7300000000083386e-07, 1.0026999999999259e-05, 4.7300000000083386e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 4.693999999999532e-06, 4.7300000000083386e-07, 1.2874999999998998e-05, 4.720000000013602e-07, 5.680000000000962e-06, 4.870000000004038e-07, 1.2346999999999358e-05, 4.860000000009301e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:48.044" endtime="20201112 10:13:48.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.040" endtime="20201112 10:13:48.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:48.054" level="INFO">${RESULT} = [{'time': 0.019932944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019941431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:48.050" endtime="20201112 10:13:48.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:48.067" level="INFO">${GPIO_OVERHEAD} = {'time': [0.019932944, 0.019941431, 0.019951778, 0.019965278, 0.019974611, 0.019988972, 0.019998778, 0.020008778, 0.020015278, 0.020024611, 0.020035944, 0.020042944, 0.020052792, 0.020062958, 0.020070...</msg>
<status status="PASS" starttime="20201112 10:13:48.055" endtime="20201112 10:13:48.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.072" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:48.071" endtime="20201112 10:13:48.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.074" level="INFO">VALUE: [4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 10:13:48.073" endtime="20201112 10:13:48.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.068" endtime="20201112 10:13:48.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.078" endtime="20201112 10:13:48.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:48.081" endtime="20201112 10:13:48.101"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.080" endtime="20201112 10:13:48.101"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.076" endtime="20201112 10:13:48.102"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.671" endtime="20201112 10:13:48.102"></status>
</kw>
<msg timestamp="20201112 10:13:48.102" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.110" endtime="20201112 10:13:48.120"></status>
</kw>
<msg timestamp="20201112 10:13:48.121" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:48.109" endtime="20201112 10:13:48.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.123" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:48.122" endtime="20201112 10:13:48.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.125" endtime="20201112 10:13:48.126"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.106" endtime="20201112 10:13:48.127"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.104" endtime="20201112 10:13:48.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.134" endtime="20201112 10:13:48.420"></status>
</kw>
<msg timestamp="20201112 10:13:48.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018890833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018891306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:48.132" endtime="20201112 10:13:48.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018890833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018891306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:48.424" endtime="20201112 10:13:48.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.433" endtime="20201112 10:13:48.435"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.130" endtime="20201112 10:13:48.435"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.128" endtime="20201112 10:13:48.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.440" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:48.439" endtime="20201112 10:13:48.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.445" level="INFO">VALUE: [{'time': 0.018890833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018891306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018905667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4361000000000929e-05, 'source_diff': 1.4361000000000929e-05}, {'time': 0.018906139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018917667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.018918139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018932833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4693999999999124e-05, 'source_diff': 1.4693999999999124e-05}, {'time': 0.018933319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018943167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847999999999801e-06, 'source_diff': 9.847999999999801e-06}, {'time': 0.018943653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018952833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.018953319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018967903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4584000000001512e-05, 'source_diff': 1.4584000000001512e-05}, {'time': 0.018968375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018978347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.018978819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018985514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.694999999997536e-06, 'source_diff': 6.694999999997536e-06}, {'time': 0.018985986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018990528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.018991, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019000181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.019000653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019010181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.019010653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019016681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.019017153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019028208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1055000000002868e-05, 'source_diff': 1.1055000000002868e-05}, {'time': 0.019028681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019041514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2833000000000289e-05, 'source_diff': 1.2833000000000289e-05}, {'time': 0.019041986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019047181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.019047667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019058681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1014000000000163e-05, 'source_diff': 1.1014000000000163e-05}, {'time': 0.019059167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019067514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347000000002297e-06, 'source_diff': 8.347000000002297e-06}, {'time': 0.019068, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019081528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.019082, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019096528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4528000000003233e-05, 'source_diff': 1.4528000000003233e-05}, {'time': 0.019097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019111708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4708000000002164e-05, 'source_diff': 1.4708000000002164e-05}, {'time': 0.019112181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019126722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.454099999999986e-05, 'source_diff': 1.454099999999986e-05}, {'time': 0.019127194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019140111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2917000000001178e-05, 'source_diff': 1.2917000000001178e-05}, {'time': 0.019140583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019149361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.019149833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019158694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.019159181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019172361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3179999999998054e-05, 'source_diff': 1.3179999999998054e-05}, {'time': 0.019172847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019185194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.019185681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019197194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1513000000001189e-05, 'source_diff': 1.1513000000001189e-05}, {'time': 0.019197681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019210861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3179999999998054e-05, 'source_diff': 1.3179999999998054e-05}, {'time': 0.019211347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019221042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.695000000000537e-06, 'source_diff': 9.695000000000537e-06}, {'time': 0.019221514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019229389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000000937e-06, 'source_diff': 7.875000000000937e-06}, {'time': 0.019229861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01923725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.389000000000007e-06, 'source_diff': 7.389000000000007e-06}, {'time': 0.019237722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019249042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1320000000002162e-05, 'source_diff': 1.1320000000002162e-05}, {'time': 0.019249514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019258875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.361000000002867e-06, 'source_diff': 9.361000000002867e-06}, {'time': 0.019259347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019269042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.695000000000537e-06, 'source_diff': 9.695000000000537e-06}, {'time': 0.019269514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019273722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.019274194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019278778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5839999999984504e-06, 'source_diff': 4.5839999999984504e-06}, {'time': 0.01927925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019284028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.0192845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019290528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.019291, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019304861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.019305333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019313194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.019313667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019318028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.0193185, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019331694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.019332167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019342361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.019342833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019347208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.019347681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019351847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.019352319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019366028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3709000000000637e-05, 'source_diff': 1.3709000000000637e-05}, {'time': 0.0193665, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019379514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3014000000002163e-05, 'source_diff': 1.3014000000002163e-05}, {'time': 0.019379986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019389361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.375000000002437e-06, 'source_diff': 9.375000000002437e-06}, {'time': 0.019389833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019398014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.181000000002936e-06, 'source_diff': 8.181000000002936e-06}, {'time': 0.019398486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:48.441" endtime="20201112 10:13:48.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.437" endtime="20201112 10:13:48.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:48.472" level="INFO">${debug-compressed} = {'time': [0.018890833, 0.018891306, 0.018905667, 0.018906139, 0.018917667, 0.018918139, 0.018932833, 0.018933319, 0.018943167, 0.018943653, 0.018952833, 0.018953319, 0.018967903, 0.018968375, 0.018978...</msg>
<status status="PASS" starttime="20201112 10:13:48.448" endtime="20201112 10:13:48.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.476" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:48.475" endtime="20201112 10:13:48.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.480" level="INFO">VALUE: {'time': [0.018890833, 0.018891306, 0.018905667, 0.018906139, 0.018917667, 0.018918139, 0.018932833, 0.018933319, 0.018943167, 0.018943653, 0.018952833, 0.018953319, 0.018967903, 0.018968375, 0.018978347, 0.018978819, 0.018985514, 0.018985986, 0.018990528, 0.018991, 0.019000181, 0.019000653, 0.019010181, 0.019010653, 0.019016681, 0.019017153, 0.019028208, 0.019028681, 0.019041514, 0.019041986, 0.019047181, 0.019047667, 0.019058681, 0.019059167, 0.019067514, 0.019068, 0.019081528, 0.019082, 0.019096528, 0.019097, 0.019111708, 0.019112181, 0.019126722, 0.019127194, 0.019140111, 0.019140583, 0.019149361, 0.019149833, 0.019158694, 0.019159181, 0.019172361, 0.019172847, 0.019185194, 0.019185681, 0.019197194, 0.019197681, 0.019210861, 0.019211347, 0.019221042, 0.019221514, 0.019229389, 0.019229861, 0.01923725, 0.019237722, 0.019249042, 0.019249514, 0.019258875, 0.019259347, 0.019269042, 0.019269514, 0.019273722, 0.019274194, 0.019278778, 0.01927925, 0.019284028, 0.0192845, 0.019290528, 0.019291, 0.019304861, 0.019305333, 0.019313194, 0.019313667, 0.019318028, 0.0193185, 0.019331694, 0.019332167, 0.019342361, 0.019342833, 0.019347208, 0.019347681, 0.019351847, 0.019352319, 0.019366028, 0.0193665, 0.019379514, 0.019379986, 0.019389361, 0.019389833, 0.019398014, 0.019398486], 'eventdiff': [0, 4.7300000000083386e-07, 1.4361000000000929e-05, 4.7199999999789077e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 1.4693999999999124e-05, 4.860000000009301e-07, 9.847999999999801e-06, 4.860000000009301e-07, 9.179999999997523e-06, 4.860000000009301e-07, 1.4584000000001512e-05, 4.7199999999789077e-07, 9.972000000000453e-06, 4.720000000013602e-07, 6.694999999997536e-06, 4.720000000013602e-07, 4.541999999999741e-06, 4.720000000013602e-07, 9.181000000000467e-06, 4.7199999999789077e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 1.1055000000002868e-05, 4.729999999973644e-07, 1.2833000000000289e-05, 4.720000000013602e-07, 5.1949999999995056e-06, 4.860000000009301e-07, 1.1014000000000163e-05, 4.859999999974607e-07, 8.347000000002297e-06, 4.860000000009301e-07, 1.3527999999998763e-05, 4.7199999999789077e-07, 1.4528000000003233e-05, 4.7199999999789077e-07, 1.4708000000002164e-05, 4.729999999973644e-07, 1.454099999999986e-05, 4.720000000013602e-07, 1.2917000000001178e-05, 4.7199999999789077e-07, 8.778000000000952e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.870000000004038e-07, 1.3179999999998054e-05, 4.860000000009301e-07, 1.2346999999999358e-05, 4.870000000004038e-07, 1.1513000000001189e-05, 4.870000000004038e-07, 1.3179999999998054e-05, 4.860000000009301e-07, 9.695000000000537e-06, 4.7199999999789077e-07, 7.875000000000937e-06, 4.720000000013602e-07, 7.389000000000007e-06, 4.7199999999789077e-07, 1.1320000000002162e-05, 4.7199999999789077e-07, 9.361000000002867e-06, 4.7199999999789077e-07, 9.695000000000537e-06, 4.720000000013602e-07, 4.207999999998602e-06, 4.720000000013602e-07, 4.5839999999984504e-06, 4.720000000013602e-07, 4.778000000000421e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 7.860999999997897e-06, 4.7300000000083386e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 1.3194000000001094e-05, 4.7300000000083386e-07, 1.0193999999998093e-05, 4.720000000013602e-07, 4.375000000000906e-06, 4.729999999973644e-07, 4.165999999999892e-06, 4.720000000013602e-07, 1.3709000000000637e-05, 4.7199999999789077e-07, 1.3014000000002163e-05, 4.7199999999789077e-07, 9.375000000002437e-06, 4.7199999999789077e-07, 8.181000000002936e-06, 4.7199999999789077e-07], 'source_diff': [0, 4.7300000000083386e-07, 1.4361000000000929e-05, 4.7199999999789077e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 1.4693999999999124e-05, 4.860000000009301e-07, 9.847999999999801e-06, 4.860000000009301e-07, 9.179999999997523e-06, 4.860000000009301e-07, 1.4584000000001512e-05, 4.7199999999789077e-07, 9.972000000000453e-06, 4.720000000013602e-07, 6.694999999997536e-06, 4.720000000013602e-07, 4.541999999999741e-06, 4.720000000013602e-07, 9.181000000000467e-06, 4.7199999999789077e-07, 9.528000000001702e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 1.1055000000002868e-05, 4.729999999973644e-07, 1.2833000000000289e-05, 4.720000000013602e-07, 5.1949999999995056e-06, 4.860000000009301e-07, 1.1014000000000163e-05, 4.859999999974607e-07, 8.347000000002297e-06, 4.860000000009301e-07, 1.3527999999998763e-05, 4.7199999999789077e-07, 1.4528000000003233e-05, 4.7199999999789077e-07, 1.4708000000002164e-05, 4.729999999973644e-07, 1.454099999999986e-05, 4.720000000013602e-07, 1.2917000000001178e-05, 4.7199999999789077e-07, 8.778000000000952e-06, 4.720000000013602e-07, 8.860999999998898e-06, 4.870000000004038e-07, 1.3179999999998054e-05, 4.860000000009301e-07, 1.2346999999999358e-05, 4.870000000004038e-07, 1.1513000000001189e-05, 4.870000000004038e-07, 1.3179999999998054e-05, 4.860000000009301e-07, 9.695000000000537e-06, 4.7199999999789077e-07, 7.875000000000937e-06, 4.720000000013602e-07, 7.389000000000007e-06, 4.7199999999789077e-07, 1.1320000000002162e-05, 4.7199999999789077e-07, 9.361000000002867e-06, 4.7199999999789077e-07, 9.695000000000537e-06, 4.720000000013602e-07, 4.207999999998602e-06, 4.720000000013602e-07, 4.5839999999984504e-06, 4.720000000013602e-07, 4.778000000000421e-06, 4.7199999999789077e-07, 6.028000000001671e-06, 4.7199999999789077e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 7.860999999997897e-06, 4.7300000000083386e-07, 4.361000000001336e-06, 4.7199999999789077e-07, 1.3194000000001094e-05, 4.7300000000083386e-07, 1.0193999999998093e-05, 4.720000000013602e-07, 4.375000000000906e-06, 4.729999999973644e-07, 4.165999999999892e-06, 4.720000000013602e-07, 1.3709000000000637e-05, 4.7199999999789077e-07, 1.3014000000002163e-05, 4.7199999999789077e-07, 9.375000000002437e-06, 4.7199999999789077e-07, 8.181000000002936e-06, 4.7199999999789077e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:48.477" endtime="20201112 10:13:48.482"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.473" endtime="20201112 10:13:48.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:48.486" level="INFO">${RESULT} = [{'time': 0.018891306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018906139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:48.483" endtime="20201112 10:13:48.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:48.501" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018891306, 0.018906139, 0.018918139, 0.018933319, 0.018943653, 0.018953319, 0.018968375, 0.018978819, 0.018985986, 0.018991, 0.019000653, 0.019010653, 0.019017153, 0.019028681, 0.019041986...</msg>
<status status="PASS" starttime="20201112 10:13:48.487" endtime="20201112 10:13:48.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.505" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:48.504" endtime="20201112 10:13:48.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.508" level="INFO">VALUE: [4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201112 10:13:48.506" endtime="20201112 10:13:48.508"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.502" endtime="20201112 10:13:48.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.511" endtime="20201112 10:13:48.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:48.515" endtime="20201112 10:13:48.534"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.513" endtime="20201112 10:13:48.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.510" endtime="20201112 10:13:48.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.103" endtime="20201112 10:13:48.536"></status>
</kw>
<msg timestamp="20201112 10:13:48.536" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.545" endtime="20201112 10:13:48.555"></status>
</kw>
<msg timestamp="20201112 10:13:48.555" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:48.543" endtime="20201112 10:13:48.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.558" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:48.557" endtime="20201112 10:13:48.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.559" endtime="20201112 10:13:48.561"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.539" endtime="20201112 10:13:48.561"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.538" endtime="20201112 10:13:48.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.569" endtime="20201112 10:13:48.853"></status>
</kw>
<msg timestamp="20201112 10:13:48.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019827319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019827792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:48.567" endtime="20201112 10:13:48.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019827319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019827792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:48.857" endtime="20201112 10:13:48.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.866" endtime="20201112 10:13:48.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.564" endtime="20201112 10:13:48.869"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.563" endtime="20201112 10:13:48.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.874" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:48.873" endtime="20201112 10:13:48.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.879" level="INFO">VALUE: [{'time': 0.019827319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019827792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019838667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.019839139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019852667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3528000000002233e-05, 'source_diff': 1.3528000000002233e-05}, {'time': 0.019853139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019864667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.019865139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0198745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.019874972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019881833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000000367e-06, 'source_diff': 6.861000000000367e-06}, {'time': 0.019882306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019896167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.019896639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019911, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4361000000000929e-05, 'source_diff': 1.4361000000000929e-05}, {'time': 0.019911472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019917847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999999437e-06, 'source_diff': 6.374999999999437e-06}, {'time': 0.019918319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019922833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.019923306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019929347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041000000001767e-06, 'source_diff': 6.041000000001767e-06}, {'time': 0.019929819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019943667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3848000000000332e-05, 'source_diff': 1.3848000000000332e-05}, {'time': 0.019944139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019951333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.194000000002032e-06, 'source_diff': 7.194000000002032e-06}, {'time': 0.019951806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.0199645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2694000000000594e-05, 'source_diff': 1.2694000000000594e-05}, {'time': 0.019964972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019973667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694999999999536e-06, 'source_diff': 8.694999999999536e-06}, {'time': 0.019974153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019980861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7079999999976325e-06, 'source_diff': 6.7079999999976325e-06}, {'time': 0.019981333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019987333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.019987819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019992167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.34800000000124e-06, 'source_diff': 4.34800000000124e-06}, {'time': 0.019992653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020001, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.347000000002297e-06, 'source_diff': 8.347000000002297e-06}, {'time': 0.020001486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020010667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.020011153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020018667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.020019153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020033681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.020034153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020038319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.020038806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020049653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.020050139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020054514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3749999999974365e-06, 'source_diff': 4.3749999999974365e-06}, {'time': 0.020054986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020068486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.020068972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020073986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.020074472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020086333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1861000000001898e-05, 'source_diff': 1.1861000000001898e-05}, {'time': 0.020086806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020093333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.527000000002697e-06, 'source_diff': 6.527000000002697e-06}, {'time': 0.020093806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020098514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.708000000002571e-06, 'source_diff': 4.708000000002571e-06}, {'time': 0.020098986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020112833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847000000000859e-05, 'source_diff': 1.3847000000000859e-05}, {'time': 0.020113306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020118347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.020118819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020128, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.020128472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020139514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1041999999999302e-05, 'source_diff': 1.1041999999999302e-05}, {'time': 0.020139986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.020145472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0201505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027999999997201e-06, 'source_diff': 5.027999999997201e-06}, {'time': 0.020150972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020163833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.020164319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020169208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.020169681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020180167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000000523e-05, 'source_diff': 1.0486000000000523e-05}, {'time': 0.020180653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020194333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3679999999998554e-05, 'source_diff': 1.3679999999998554e-05}, {'time': 0.020194819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020201847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.020202319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020212194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.020212667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020221681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999998162e-06, 'source_diff': 9.013999999998162e-06}, {'time': 0.020222153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020229847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.693999999999063e-06, 'source_diff': 7.693999999999063e-06}, {'time': 0.020230319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020238181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.86200000000084e-06, 'source_diff': 7.86200000000084e-06}, {'time': 0.020238653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020247681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.020248153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020256347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999999563e-06, 'source_diff': 8.193999999999563e-06}, {'time': 0.020256819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020269181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2362000000001871e-05, 'source_diff': 1.2362000000001871e-05}, {'time': 0.020269667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020277847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999999993e-06, 'source_diff': 8.179999999999993e-06}, {'time': 0.020278333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020285347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.020285833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201112 10:13:48.875" endtime="20201112 10:13:48.881"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.870" endtime="20201112 10:13:48.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:48.908" level="INFO">${debug-compressed} = {'time': [0.019827319, 0.019827792, 0.019838667, 0.019839139, 0.019852667, 0.019853139, 0.019864667, 0.019865139, 0.0198745, 0.019874972, 0.019881833, 0.019882306, 0.019896167, 0.019896639, 0.019911, ...</msg>
<status status="PASS" starttime="20201112 10:13:48.883" endtime="20201112 10:13:48.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.912" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:48.911" endtime="20201112 10:13:48.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.917" level="INFO">VALUE: {'time': [0.019827319, 0.019827792, 0.019838667, 0.019839139, 0.019852667, 0.019853139, 0.019864667, 0.019865139, 0.0198745, 0.019874972, 0.019881833, 0.019882306, 0.019896167, 0.019896639, 0.019911, 0.019911472, 0.019917847, 0.019918319, 0.019922833, 0.019923306, 0.019929347, 0.019929819, 0.019943667, 0.019944139, 0.019951333, 0.019951806, 0.0199645, 0.019964972, 0.019973667, 0.019974153, 0.019980861, 0.019981333, 0.019987333, 0.019987819, 0.019992167, 0.019992653, 0.020001, 0.020001486, 0.020010667, 0.020011153, 0.020018667, 0.020019153, 0.020033681, 0.020034153, 0.020038319, 0.020038806, 0.020049653, 0.020050139, 0.020054514, 0.020054986, 0.020068486, 0.020068972, 0.020073986, 0.020074472, 0.020086333, 0.020086806, 0.020093333, 0.020093806, 0.020098514, 0.020098986, 0.020112833, 0.020113306, 0.020118347, 0.020118819, 0.020128, 0.020128472, 0.020139514, 0.020139986, 0.020145, 0.020145472, 0.0201505, 0.020150972, 0.020163833, 0.020164319, 0.020169208, 0.020169681, 0.020180167, 0.020180653, 0.020194333, 0.020194819, 0.020201847, 0.020202319, 0.020212194, 0.020212667, 0.020221681, 0.020222153, 0.020229847, 0.020230319, 0.020238181, 0.020238653, 0.020247681, 0.020248153, 0.020256347, 0.020256819, 0.020269181, 0.020269667, 0.020277847, 0.020278333, 0.020285347, 0.020285833], 'eventdiff': [0, 4.7300000000083386e-07, 1.0875000000000468e-05, 4.7199999999789077e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 6.861000000000367e-06, 4.729999999973644e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 1.4361000000000929e-05, 4.7199999999789077e-07, 6.374999999999437e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.729999999973644e-07, 6.041000000001767e-06, 4.720000000013602e-07, 1.3848000000000332e-05, 4.7199999999789077e-07, 7.194000000002032e-06, 4.729999999973644e-07, 1.2694000000000594e-05, 4.720000000013602e-07, 8.694999999999536e-06, 4.860000000009301e-07, 6.7079999999976325e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.860000000009301e-07, 4.34800000000124e-06, 4.859999999974607e-07, 8.347000000002297e-06, 4.859999999974607e-07, 9.181000000000467e-06, 4.860000000009301e-07, 7.514000000000132e-06, 4.860000000009301e-07, 1.4527999999999763e-05, 4.7199999999789077e-07, 4.165999999999892e-06, 4.870000000004038e-07, 1.0847000000001328e-05, 4.860000000009301e-07, 4.3749999999974365e-06, 4.720000000013602e-07, 1.3499999999999623e-05, 4.860000000009301e-07, 5.0139999999976315e-06, 4.860000000009301e-07, 1.1861000000001898e-05, 4.729999999973644e-07, 6.527000000002697e-06, 4.729999999973644e-07, 4.708000000002571e-06, 4.7199999999789077e-07, 1.3847000000000859e-05, 4.7300000000083386e-07, 5.041000000000767e-06, 4.7199999999789077e-07, 9.181000000000467e-06, 4.720000000013602e-07, 1.1041999999999302e-05, 4.7199999999789077e-07, 5.014000000001101e-06, 4.720000000013602e-07, 5.027999999997201e-06, 4.720000000013602e-07, 1.2860999999999428e-05, 4.860000000009301e-07, 4.889000000000976e-06, 4.729999999973644e-07, 1.0486000000000523e-05, 4.860000000009301e-07, 1.3679999999998554e-05, 4.860000000009301e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 9.013999999998162e-06, 4.720000000013602e-07, 7.693999999999063e-06, 4.720000000013602e-07, 7.86200000000084e-06, 4.7199999999789077e-07, 9.028000000001202e-06, 4.720000000013602e-07, 8.193999999999563e-06, 4.7199999999789077e-07, 1.2362000000001871e-05, 4.860000000009301e-07, 8.179999999999993e-06, 4.859999999974607e-07, 7.013999999999632e-06, 4.860000000009301e-07], 'source_diff': [0, 4.7300000000083386e-07, 1.0875000000000468e-05, 4.7199999999789077e-07, 1.3528000000002233e-05, 4.7199999999789077e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 6.861000000000367e-06, 4.729999999973644e-07, 1.3861000000000429e-05, 4.720000000013602e-07, 1.4361000000000929e-05, 4.7199999999789077e-07, 6.374999999999437e-06, 4.720000000013602e-07, 4.514000000000601e-06, 4.729999999973644e-07, 6.041000000001767e-06, 4.720000000013602e-07, 1.3848000000000332e-05, 4.7199999999789077e-07, 7.194000000002032e-06, 4.729999999973644e-07, 1.2694000000000594e-05, 4.720000000013602e-07, 8.694999999999536e-06, 4.860000000009301e-07, 6.7079999999976325e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.860000000009301e-07, 4.34800000000124e-06, 4.859999999974607e-07, 8.347000000002297e-06, 4.859999999974607e-07, 9.181000000000467e-06, 4.860000000009301e-07, 7.514000000000132e-06, 4.860000000009301e-07, 1.4527999999999763e-05, 4.7199999999789077e-07, 4.165999999999892e-06, 4.870000000004038e-07, 1.0847000000001328e-05, 4.860000000009301e-07, 4.3749999999974365e-06, 4.720000000013602e-07, 1.3499999999999623e-05, 4.860000000009301e-07, 5.0139999999976315e-06, 4.860000000009301e-07, 1.1861000000001898e-05, 4.729999999973644e-07, 6.527000000002697e-06, 4.729999999973644e-07, 4.708000000002571e-06, 4.7199999999789077e-07, 1.3847000000000859e-05, 4.7300000000083386e-07, 5.041000000000767e-06, 4.7199999999789077e-07, 9.181000000000467e-06, 4.720000000013602e-07, 1.1041999999999302e-05, 4.7199999999789077e-07, 5.014000000001101e-06, 4.720000000013602e-07, 5.027999999997201e-06, 4.720000000013602e-07, 1.2860999999999428e-05, 4.860000000009301e-07, 4.889000000000976e-06, 4.729999999973644e-07, 1.0486000000000523e-05, 4.860000000009301e-07, 1.3679999999998554e-05, 4.860000000009301e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 9.013999999998162e-06, 4.720000000013602e-07, 7.693999999999063e-06, 4.720000000013602e-07, 7.86200000000084e-06, 4.7199999999789077e-07, 9.028000000001202e-06, 4.720000000013602e-07, 8.193999999999563e-06, 4.7199999999789077e-07, 1.2362000000001871e-05, 4.860000000009301e-07, 8.179999999999993e-06, 4.859999999974607e-07, 7.013999999999632e-06, 4.860000000009301e-07], 'source}</msg>
<status status="PASS" starttime="20201112 10:13:48.913" endtime="20201112 10:13:48.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.909" endtime="20201112 10:13:48.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:48.923" level="INFO">${RESULT} = [{'time': 0.019827792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019839139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:48.919" endtime="20201112 10:13:48.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:48.937" level="INFO">${GPIO_OVERHEAD} = {'time': [0.019827792, 0.019839139, 0.019853139, 0.019865139, 0.019874972, 0.019882306, 0.019896639, 0.019911472, 0.019918319, 0.019923306, 0.019929819, 0.019944139, 0.019951806, 0.019964972, 0.019974...</msg>
<status status="PASS" starttime="20201112 10:13:48.924" endtime="20201112 10:13:48.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.942" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:48.941" endtime="20201112 10:13:48.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.944" level="INFO">VALUE: [4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201112 10:13:48.943" endtime="20201112 10:13:48.945"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.938" endtime="20201112 10:13:48.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.948" endtime="20201112 10:13:48.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:48.952" endtime="20201112 10:13:48.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.950" endtime="20201112 10:13:48.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.946" endtime="20201112 10:13:48.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.536" endtime="20201112 10:13:48.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.249" endtime="20201112 10:13:48.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:48.978" endtime="20201112 10:13:48.997"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.976" endtime="20201112 10:13:48.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.974" endtime="20201112 10:13:48.998"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:40.174" endtime="20201112 10:13:48.999" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:49.008" endtime="20201112 10:13:49.027"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.006" endtime="20201112 10:13:49.028"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.041" endtime="20201112 10:13:49.061"></status>
</kw>
<msg timestamp="20201112 10:13:49.061" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.040" endtime="20201112 10:13:49.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.064" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.063" endtime="20201112 10:13:49.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.068" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:49.066" endtime="20201112 10:13:49.068"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:49.037" endtime="20201112 10:13:49.069"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:49.034" endtime="20201112 10:13:49.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.033" endtime="20201112 10:13:49.070"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:49.074" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:49.074" endtime="20201112 10:13:49.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.070" endtime="20201112 10:13:49.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.032" endtime="20201112 10:13:49.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.032" endtime="20201112 10:13:49.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.077" endtime="20201112 10:13:49.078"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.030" endtime="20201112 10:13:49.079"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.028" endtime="20201112 10:13:49.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.004" endtime="20201112 10:13:49.080"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 10:13:49.083" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.093" endtime="20201112 10:13:49.105"></status>
</kw>
<msg timestamp="20201112 10:13:49.106" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.091" endtime="20201112 10:13:49.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.108" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.107" endtime="20201112 10:13:49.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.109" endtime="20201112 10:13:49.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.088" endtime="20201112 10:13:49.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.085" endtime="20201112 10:13:49.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.119" endtime="20201112 10:13:49.403"></status>
</kw>
<msg timestamp="20201112 10:13:49.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076388528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076391222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:49.117" endtime="20201112 10:13:49.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076388528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076391222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:49.408" endtime="20201112 10:13:49.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.416" endtime="20201112 10:13:49.418"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.114" endtime="20201112 10:13:49.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.113" endtime="20201112 10:13:49.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:49.423" level="INFO">${RESULT} = [{'time': 0.076391222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6939999999975317e-06, 'source_diff': 2.6939999999975317e-06}, {'time': 0.076398708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:49.420" endtime="20201112 10:13:49.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:49.438" level="INFO">${OVERHEAD} = {'time': [0.076391222, 0.076398708, 0.076407069, 0.076418111, 0.076426278, 0.076438806, 0.076446319, 0.076462667, 0.076476861, 0.076493903, 0.076507069, 0.076517764, 0.076533306, 0.076543139, 0.076553...</msg>
<status status="PASS" starttime="20201112 10:13:49.424" endtime="20201112 10:13:49.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.443" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:49.442" endtime="20201112 10:13:49.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.446" level="INFO">VALUE: [2.6939999999975317e-06, 2.665999999998392e-06, 2.651999999991883e-06, 2.6939999999975317e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6529999999913567e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6809999999904965e-06, 2.6529999999913567e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6529999999913567e-06, 2.6669999999978655e-06, 2.695000000010883e-06, 2.7080000000040405e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6670000000117433e-06, 2.6670000000117433e-06, 2.6669999999978655e-06, 2.6529999999913567e-06, 2.6530000000052345e-06, 2.6669999999978655e-06, 2.7219999999966715e-06, 2.6939999999975317e-06, 2.5839999999999197e-06, 2.5689999999939372e-06, 2.6809999999904965e-06, 2.6810000000043743e-06, 2.6669999999978655e-06, 2.7080000000040405e-06, 2.6530000000052345e-06, 2.6669999999978655e-06, 2.624999999992217e-06, 2.6530000000052345e-06, 2.6669999999978655e-06, 2.6529999999913567e-06, 2.6810000000043743e-06, 2.6810000000043743e-06, 2.665999999998392e-06, 2.6810000000043743e-06, 2.6530000000052345e-06, 2.6800000000049007e-06, 2.709000000003514e-06]</msg>
<status status="PASS" starttime="20201112 10:13:49.444" endtime="20201112 10:13:49.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.440" endtime="20201112 10:13:49.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.449" endtime="20201112 10:13:49.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:49.454" endtime="20201112 10:13:49.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.452" endtime="20201112 10:13:49.474"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.447" endtime="20201112 10:13:49.474"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.083" endtime="20201112 10:13:49.475"></status>
</kw>
<msg timestamp="20201112 10:13:49.475" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.483" endtime="20201112 10:13:49.494"></status>
</kw>
<msg timestamp="20201112 10:13:49.495" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.481" endtime="20201112 10:13:49.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.497" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.496" endtime="20201112 10:13:49.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.499" endtime="20201112 10:13:49.500"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.479" endtime="20201112 10:13:49.501"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.477" endtime="20201112 10:13:49.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.508" endtime="20201112 10:13:49.791"></status>
</kw>
<msg timestamp="20201112 10:13:49.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019998444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020001111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:49.506" endtime="20201112 10:13:49.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019998444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020001111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:49.795" endtime="20201112 10:13:49.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.804" endtime="20201112 10:13:49.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.504" endtime="20201112 10:13:49.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.502" endtime="20201112 10:13:49.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:49.811" level="INFO">${RESULT} = [{'time': 0.020001111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.020015972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:49.807" endtime="20201112 10:13:49.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:49.825" level="INFO">${OVERHEAD} = {'time': [0.020001111, 0.020015972, 0.020023819, 0.020030847, 0.020045528, 0.020059542, 0.020074403, 0.020088931, 0.020096111, 0.020103181, 0.020120319, 0.020131847, 0.020145208, 0.020158556, 0.020169...</msg>
<status status="PASS" starttime="20201112 10:13:49.812" endtime="20201112 10:13:49.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.830" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:49.829" endtime="20201112 10:13:49.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.832" level="INFO">VALUE: [2.6669999999978655e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.695000000000475e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6809999999974354e-06, 2.6809999999974354e-06, 2.610999999999586e-06, 2.679999999997962e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.708000000000571e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.6250000000026252e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.6800000000014312e-06, 2.735999999999711e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.6669999999978655e-06]</msg>
<status status="PASS" starttime="20201112 10:13:49.831" endtime="20201112 10:13:49.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.826" endtime="20201112 10:13:49.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.836" endtime="20201112 10:13:49.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:49.840" endtime="20201112 10:13:49.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.838" endtime="20201112 10:13:49.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.834" endtime="20201112 10:13:49.861"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.475" endtime="20201112 10:13:49.861"></status>
</kw>
<msg timestamp="20201112 10:13:49.861" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.869" endtime="20201112 10:13:49.880"></status>
</kw>
<msg timestamp="20201112 10:13:49.881" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.867" endtime="20201112 10:13:49.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.883" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.882" endtime="20201112 10:13:49.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.885" endtime="20201112 10:13:49.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.865" endtime="20201112 10:13:49.887"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.863" endtime="20201112 10:13:49.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.894" endtime="20201112 10:13:50.178"></status>
</kw>
<msg timestamp="20201112 10:13:50.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020014861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:49.892" endtime="20201112 10:13:50.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020014861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:50.182" endtime="20201112 10:13:50.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.191" endtime="20201112 10:13:50.193"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.890" endtime="20201112 10:13:50.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.888" endtime="20201112 10:13:50.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:50.199" level="INFO">${RESULT} = [{'time': 0.020017542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.020034556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:50.195" endtime="20201112 10:13:50.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:50.214" level="INFO">${OVERHEAD} = {'time': [0.020017542, 0.020034556, 0.020051403, 0.020062778, 0.020070444, 0.020079042, 0.020093486, 0.020109556, 0.020124028, 0.020131389, 0.02014375, 0.020152431, 0.020162972, 0.020176681, 0.0201885...</msg>
<status status="PASS" starttime="20201112 10:13:50.200" endtime="20201112 10:13:50.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.218" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:50.217" endtime="20201112 10:13:50.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.221" level="INFO">VALUE: [2.681000000000905e-06, 2.6809999999974354e-06, 2.6389999999987257e-06, 2.6249999999991558e-06, 2.6249999999991558e-06, 2.735999999999711e-06, 2.667000000001335e-06, 2.695000000000475e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.6949999999970053e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.708000000000571e-06, 2.651999999998822e-06, 2.735999999999711e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.610999999999586e-06, 2.679999999997962e-06, 2.679999999997962e-06, 2.6669999999978655e-06, 2.7360000000031803e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.639000000002195e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.5979999999994896e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06]</msg>
<status status="PASS" starttime="20201112 10:13:50.219" endtime="20201112 10:13:50.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.215" endtime="20201112 10:13:50.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.224" endtime="20201112 10:13:50.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:50.228" endtime="20201112 10:13:50.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.226" endtime="20201112 10:13:50.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.222" endtime="20201112 10:13:50.249"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.862" endtime="20201112 10:13:50.249"></status>
</kw>
<msg timestamp="20201112 10:13:50.249" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.257" endtime="20201112 10:13:50.269"></status>
</kw>
<msg timestamp="20201112 10:13:50.270" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:50.256" endtime="20201112 10:13:50.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.272" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:50.271" endtime="20201112 10:13:50.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.273" endtime="20201112 10:13:50.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.253" endtime="20201112 10:13:50.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.251" endtime="20201112 10:13:50.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.283" endtime="20201112 10:13:50.568"></status>
</kw>
<msg timestamp="20201112 10:13:50.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020084125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020086792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:50.281" endtime="20201112 10:13:50.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020084125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020086792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:50.572" endtime="20201112 10:13:50.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.581" endtime="20201112 10:13:50.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.278" endtime="20201112 10:13:50.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.277" endtime="20201112 10:13:50.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:50.588" level="INFO">${RESULT} = [{'time': 0.020086792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.020093806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:50.585" endtime="20201112 10:13:50.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:50.602" level="INFO">${OVERHEAD} = {'time': [0.020086792, 0.020093806, 0.020100847, 0.020114528, 0.020126028, 0.020139889, 0.020148083, 0.020163764, 0.020175625, 0.020191139, 0.020206, 0.020218042, 0.020231375, 0.020239236, 0.020256097...</msg>
<status status="PASS" starttime="20201112 10:13:50.589" endtime="20201112 10:13:50.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.606" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:50.605" endtime="20201112 10:13:50.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.609" level="INFO">VALUE: [2.6669999999978655e-06, 2.6249999999991558e-06, 2.6800000000014312e-06, 2.681000000000905e-06, 2.5839999999999197e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.610999999999586e-06, 2.6669999999978655e-06, 2.6809999999974354e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.679999999997962e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.6800000000014312e-06, 2.7079999999971016e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.695000000000475e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.722000000000141e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.665999999998392e-06]</msg>
<status status="PASS" starttime="20201112 10:13:50.608" endtime="20201112 10:13:50.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.603" endtime="20201112 10:13:50.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.612" endtime="20201112 10:13:50.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:50.617" endtime="20201112 10:13:50.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.614" endtime="20201112 10:13:50.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.611" endtime="20201112 10:13:50.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.250" endtime="20201112 10:13:50.637"></status>
</kw>
<msg timestamp="20201112 10:13:50.638" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.646" endtime="20201112 10:13:50.658"></status>
</kw>
<msg timestamp="20201112 10:13:50.658" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:50.644" endtime="20201112 10:13:50.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.661" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:50.659" endtime="20201112 10:13:50.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.662" endtime="20201112 10:13:50.663"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.641" endtime="20201112 10:13:50.664"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.640" endtime="20201112 10:13:50.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.671" endtime="20201112 10:13:50.957"></status>
</kw>
<msg timestamp="20201112 10:13:50.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020095556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020098167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:50.669" endtime="20201112 10:13:50.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020095556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020098167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:50.962" endtime="20201112 10:13:50.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.970" endtime="20201112 10:13:50.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.667" endtime="20201112 10:13:50.973"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.665" endtime="20201112 10:13:50.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:50.977" level="INFO">${RESULT} = [{'time': 0.020098167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.020108694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:50.974" endtime="20201112 10:13:50.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:50.993" level="INFO">${OVERHEAD} = {'time': [0.020098167, 0.020108694, 0.020125625, 0.020140403, 0.020157597, 0.020174278, 0.020184694, 0.020191653, 0.020207347, 0.020223042, 0.020236903, 0.020254306, 0.020268111, 0.020279806, 0.020288...</msg>
<status status="PASS" starttime="20201112 10:13:50.978" endtime="20201112 10:13:50.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.997" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:50.996" endtime="20201112 10:13:50.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.000" level="INFO">VALUE: [2.610999999999586e-06, 2.665999999998392e-06, 2.7500000000027502e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.722000000000141e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.5979999999994896e-06, 2.681000000000905e-06, 2.7229999999996146e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.722000000000141e-06, 2.6520000000022914e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.637999999999252e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.597000000000016e-06, 2.667000000001335e-06, 2.7090000000000447e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.610999999999586e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.651999999998822e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.651999999998822e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6249999999991558e-06]</msg>
<status status="PASS" starttime="20201112 10:13:50.998" endtime="20201112 10:13:51.000"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.993" endtime="20201112 10:13:51.001"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.003" endtime="20201112 10:13:51.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:51.008" endtime="20201112 10:13:51.027"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.005" endtime="20201112 10:13:51.028"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.001" endtime="20201112 10:13:51.028"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.638" endtime="20201112 10:13:51.029"></status>
</kw>
<msg timestamp="20201112 10:13:51.029" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.037" endtime="20201112 10:13:51.049"></status>
</kw>
<msg timestamp="20201112 10:13:51.049" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.035" endtime="20201112 10:13:51.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.052" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.050" endtime="20201112 10:13:51.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.053" endtime="20201112 10:13:51.055"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.032" endtime="20201112 10:13:51.055"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.031" endtime="20201112 10:13:51.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.063" endtime="20201112 10:13:51.350"></status>
</kw>
<msg timestamp="20201112 10:13:51.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020185806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020188472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:51.061" endtime="20201112 10:13:51.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020185806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020188472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:51.355" endtime="20201112 10:13:51.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.363" endtime="20201112 10:13:51.365"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.058" endtime="20201112 10:13:51.365"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.056" endtime="20201112 10:13:51.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:51.370" level="INFO">${RESULT} = [{'time': 0.020188472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.020203819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:51.367" endtime="20201112 10:13:51.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:51.384" level="INFO">${OVERHEAD} = {'time': [0.020188472, 0.020203819, 0.020219861, 0.020232208, 0.020241097, 0.020253458, 0.020267444, 0.020284514, 0.020296986, 0.020312014, 0.020324861, 0.020339069, 0.020355083, 0.020366444, 0.020373...</msg>
<status status="PASS" starttime="20201112 10:13:51.371" endtime="20201112 10:13:51.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.389" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:51.388" endtime="20201112 10:13:51.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.392" level="INFO">VALUE: [2.665999999998392e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.694000000001001e-06, 2.7079999999971016e-06, 2.679999999997962e-06, 2.708000000000571e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.679999999997962e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.6800000000014312e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6250000000026252e-06, 2.6110000000030553e-06, 2.665999999998392e-06, 2.6249999999991558e-06, 2.665999999998392e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.723000000003084e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.6249999999991558e-06, 2.6249999999991558e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.695000000000475e-06, 2.695000000000475e-06, 2.6529999999982956e-06]</msg>
<status status="PASS" starttime="20201112 10:13:51.390" endtime="20201112 10:13:51.392"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.385" endtime="20201112 10:13:51.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.395" endtime="20201112 10:13:51.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:51.399" endtime="20201112 10:13:51.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.397" endtime="20201112 10:13:51.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.393" endtime="20201112 10:13:51.420"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.029" endtime="20201112 10:13:51.420"></status>
</kw>
<msg timestamp="20201112 10:13:51.420" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.428" endtime="20201112 10:13:51.439"></status>
</kw>
<msg timestamp="20201112 10:13:51.440" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.427" endtime="20201112 10:13:51.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.443" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.441" endtime="20201112 10:13:51.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.444" endtime="20201112 10:13:51.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.424" endtime="20201112 10:13:51.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.422" endtime="20201112 10:13:51.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.454" endtime="20201112 10:13:51.739"></status>
</kw>
<msg timestamp="20201112 10:13:51.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020152722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020155389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:51.452" endtime="20201112 10:13:51.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020152722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020155389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:51.744" endtime="20201112 10:13:51.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.752" endtime="20201112 10:13:51.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.449" endtime="20201112 10:13:51.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.447" endtime="20201112 10:13:51.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:51.759" level="INFO">${RESULT} = [{'time': 0.020155389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.020162597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:51.756" endtime="20201112 10:13:51.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:51.773" level="INFO">${OVERHEAD} = {'time': [0.020155389, 0.020162597, 0.020179778, 0.020193125, 0.020200986, 0.020211333, 0.020227194, 0.020236236, 0.020244236, 0.020260764, 0.020277778, 0.020290639, 0.020303514, 0.020311014, 0.020318...</msg>
<status status="PASS" starttime="20201112 10:13:51.760" endtime="20201112 10:13:51.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.778" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:51.777" endtime="20201112 10:13:51.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.780" level="INFO">VALUE: [2.6669999999978655e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.583000000000446e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.597000000000016e-06, 2.722000000000141e-06, 2.667000000001335e-06, 2.639000000002195e-06, 2.667000000001335e-06, 2.722000000000141e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.610999999999586e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.6939999999975317e-06, 2.6249999999991558e-06, 2.6660000000018613e-06, 2.6389999999987257e-06, 2.7090000000000447e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.735999999999711e-06, 2.6669999999978655e-06, 2.639000000002195e-06, 2.681000000000905e-06]</msg>
<status status="PASS" starttime="20201112 10:13:51.779" endtime="20201112 10:13:51.781"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.774" endtime="20201112 10:13:51.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.784" endtime="20201112 10:13:51.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:51.788" endtime="20201112 10:13:51.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.786" endtime="20201112 10:13:51.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.782" endtime="20201112 10:13:51.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.421" endtime="20201112 10:13:51.809"></status>
</kw>
<msg timestamp="20201112 10:13:51.809" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.817" endtime="20201112 10:13:51.829"></status>
</kw>
<msg timestamp="20201112 10:13:51.829" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.815" endtime="20201112 10:13:51.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.832" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.830" endtime="20201112 10:13:51.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.833" endtime="20201112 10:13:51.835"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.813" endtime="20201112 10:13:51.836"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.811" endtime="20201112 10:13:51.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.843" endtime="20201112 10:13:52.127"></status>
</kw>
<msg timestamp="20201112 10:13:52.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019982056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:51.841" endtime="20201112 10:13:52.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019979417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019982056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:52.131" endtime="20201112 10:13:52.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.140" endtime="20201112 10:13:52.142"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.839" endtime="20201112 10:13:52.142"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.837" endtime="20201112 10:13:52.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:52.147" level="INFO">${RESULT} = [{'time': 0.019982056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.639000000002195e-06, 'source_diff': 2.639000000002195e-06}, {'time': 0.019989736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:52.143" endtime="20201112 10:13:52.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:52.161" level="INFO">${OVERHEAD} = {'time': [0.019982056, 0.019989736, 0.020002111, 0.020016625, 0.020033806, 0.020046847, 0.020059347, 0.020068375, 0.020080236, 0.020089097, 0.020098778, 0.020108639, 0.020116833, 0.020132028, 0.020139...</msg>
<status status="PASS" starttime="20201112 10:13:52.148" endtime="20201112 10:13:52.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.165" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:52.164" endtime="20201112 10:13:52.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.168" level="INFO">VALUE: [2.639000000002195e-06, 2.653000000001765e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.7229999999996146e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.597000000000016e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.735999999999711e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.694000000001001e-06, 2.6660000000018613e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.679999999997962e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6249999999991558e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.6249999999991558e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.653000000001765e-06]</msg>
<status status="PASS" starttime="20201112 10:13:52.167" endtime="20201112 10:13:52.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.162" endtime="20201112 10:13:52.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.171" endtime="20201112 10:13:52.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:52.176" endtime="20201112 10:13:52.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.173" endtime="20201112 10:13:52.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.170" endtime="20201112 10:13:52.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.809" endtime="20201112 10:13:52.196"></status>
</kw>
<msg timestamp="20201112 10:13:52.197" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.205" endtime="20201112 10:13:52.218"></status>
</kw>
<msg timestamp="20201112 10:13:52.218" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:52.203" endtime="20201112 10:13:52.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.221" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:52.219" endtime="20201112 10:13:52.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.222" endtime="20201112 10:13:52.224"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.200" endtime="20201112 10:13:52.225"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.198" endtime="20201112 10:13:52.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.232" endtime="20201112 10:13:52.520"></status>
</kw>
<msg timestamp="20201112 10:13:52.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020495667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020498333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:52.231" endtime="20201112 10:13:52.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020495667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020498333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:52.524" endtime="20201112 10:13:52.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.533" endtime="20201112 10:13:52.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.228" endtime="20201112 10:13:52.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.226" endtime="20201112 10:13:52.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:52.540" level="INFO">${RESULT} = [{'time': 0.020498333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6660000000018613e-06, 'source_diff': 2.6660000000018613e-06}, {'time': 0.020508208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:52.536" endtime="20201112 10:13:52.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:52.555" level="INFO">${OVERHEAD} = {'time': [0.020498333, 0.020508208, 0.020519042, 0.020529903, 0.020540417, 0.020548792, 0.020561125, 0.020573319, 0.020585514, 0.020597028, 0.020610389, 0.02062425, 0.020631431, 0.020639958, 0.0206528...</msg>
<status status="PASS" starttime="20201112 10:13:52.541" endtime="20201112 10:13:52.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.560" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:52.559" endtime="20201112 10:13:52.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.562" level="INFO">VALUE: [2.6660000000018613e-06, 2.6800000000014312e-06, 2.653000000001765e-06, 2.6249999999991558e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.651999999998822e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.735999999999711e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.695000000000475e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.708000000000571e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.597000000000016e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.6249999999991558e-06, 2.667000000001335e-06]</msg>
<status status="PASS" starttime="20201112 10:13:52.561" endtime="20201112 10:13:52.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.556" endtime="20201112 10:13:52.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.566" endtime="20201112 10:13:52.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:52.570" endtime="20201112 10:13:52.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.568" endtime="20201112 10:13:52.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.564" endtime="20201112 10:13:52.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.197" endtime="20201112 10:13:52.591"></status>
</kw>
<msg timestamp="20201112 10:13:52.591" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.607" endtime="20201112 10:13:52.619"></status>
</kw>
<msg timestamp="20201112 10:13:52.619" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:52.605" endtime="20201112 10:13:52.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.622" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:52.621" endtime="20201112 10:13:52.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.623" endtime="20201112 10:13:52.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.602" endtime="20201112 10:13:52.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.593" endtime="20201112 10:13:52.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.633" endtime="20201112 10:13:52.921"></status>
</kw>
<msg timestamp="20201112 10:13:52.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027724472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027727139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:52.631" endtime="20201112 10:13:52.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027724472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027727139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:52.926" endtime="20201112 10:13:52.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.934" endtime="20201112 10:13:52.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.628" endtime="20201112 10:13:52.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.627" endtime="20201112 10:13:52.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:52.941" level="INFO">${RESULT} = [{'time': 0.027727139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.027735306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:52.938" endtime="20201112 10:13:52.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:52.956" level="INFO">${OVERHEAD} = {'time': [0.027727139, 0.027735306, 0.027748667, 0.027760514, 0.027769056, 0.027784903, 0.027799764, 0.027808778, 0.027816625, 0.027829653, 0.027845681, 0.027859208, 0.027873889, 0.027888403, 0.027904...</msg>
<status status="PASS" starttime="20201112 10:13:52.942" endtime="20201112 10:13:52.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.960" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:52.959" endtime="20201112 10:13:52.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.963" level="INFO">VALUE: [2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.610999999999586e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.651999999998822e-06, 2.651999999998822e-06, 2.6529999999982956e-06, 2.6800000000014312e-06, 2.6389999999987257e-06, 2.6249999999991558e-06, 2.708000000000571e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.708000000000571e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.6800000000014312e-06, 2.6249999999991558e-06]</msg>
<status status="PASS" starttime="20201112 10:13:52.961" endtime="20201112 10:13:52.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.957" endtime="20201112 10:13:52.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.966" endtime="20201112 10:13:52.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:52.971" endtime="20201112 10:13:52.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.968" endtime="20201112 10:13:52.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.964" endtime="20201112 10:13:52.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.592" endtime="20201112 10:13:52.992"></status>
</kw>
<msg timestamp="20201112 10:13:52.992" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.000" endtime="20201112 10:13:53.012"></status>
</kw>
<msg timestamp="20201112 10:13:53.013" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:52.999" endtime="20201112 10:13:53.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.015" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:53.014" endtime="20201112 10:13:53.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.017" endtime="20201112 10:13:53.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.996" endtime="20201112 10:13:53.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.994" endtime="20201112 10:13:53.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.026" endtime="20201112 10:13:53.313"></status>
</kw>
<msg timestamp="20201112 10:13:53.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020217125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020219792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:53.024" endtime="20201112 10:13:53.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020217125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020219792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:53.318" endtime="20201112 10:13:53.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.326" endtime="20201112 10:13:53.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.022" endtime="20201112 10:13:53.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.020" endtime="20201112 10:13:53.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:53.333" level="INFO">${RESULT} = [{'time': 0.020219792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.020230319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:53.330" endtime="20201112 10:13:53.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:53.347" level="INFO">${OVERHEAD} = {'time': [0.020219792, 0.020230319, 0.020246681, 0.020262542, 0.020274889, 0.020281917, 0.020293444, 0.020307333, 0.020321514, 0.020336833, 0.020344847, 0.020359569, 0.020374056, 0.020390917, 0.020402...</msg>
<status status="PASS" starttime="20201112 10:13:53.334" endtime="20201112 10:13:53.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.352" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:53.351" endtime="20201112 10:13:53.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.354" level="INFO">VALUE: [2.667000000001335e-06, 2.665999999998392e-06, 2.6809999999974354e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6520000000022914e-06, 2.708000000000571e-06, 2.708000000000571e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.694000000001001e-06, 2.639000000002195e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.6389999999987257e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.679999999997962e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6389999999987257e-06, 2.6800000000014312e-06, 2.6809999999974354e-06, 2.5829999999969766e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6249999999991558e-06, 2.6520000000022914e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.6669999999978655e-06, 2.6249999999991558e-06, 2.6529999999982956e-06, 2.639000000002195e-06, 2.7229999999996146e-06, 2.653000000001765e-06]</msg>
<status status="PASS" starttime="20201112 10:13:53.353" endtime="20201112 10:13:53.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.348" endtime="20201112 10:13:53.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.358" endtime="20201112 10:13:53.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:53.362" endtime="20201112 10:13:53.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.360" endtime="20201112 10:13:53.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.356" endtime="20201112 10:13:53.383"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.993" endtime="20201112 10:13:53.383"></status>
</kw>
<msg timestamp="20201112 10:13:53.383" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.391" endtime="20201112 10:13:53.404"></status>
</kw>
<msg timestamp="20201112 10:13:53.404" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:53.390" endtime="20201112 10:13:53.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.407" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:53.405" endtime="20201112 10:13:53.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.408" endtime="20201112 10:13:53.410"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.387" endtime="20201112 10:13:53.410"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.385" endtime="20201112 10:13:53.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.417" endtime="20201112 10:13:53.704"></status>
</kw>
<msg timestamp="20201112 10:13:53.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020199014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:53.416" endtime="20201112 10:13:53.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020199014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:53.708" endtime="20201112 10:13:53.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.717" endtime="20201112 10:13:53.718"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.413" endtime="20201112 10:13:53.719"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.411" endtime="20201112 10:13:53.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:53.724" level="INFO">${RESULT} = [{'time': 0.020201694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.679999999997962e-06, 'source_diff': 2.679999999997962e-06}, {'time': 0.020216194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:53.720" endtime="20201112 10:13:53.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:53.738" level="INFO">${OVERHEAD} = {'time': [0.020201694, 0.020216194, 0.020230056, 0.02024125, 0.020256444, 0.020264806, 0.020280806, 0.020292347, 0.020307375, 0.020316417, 0.020332417, 0.02034125, 0.020356278, 0.020366986, 0.02038048...</msg>
<status status="PASS" starttime="20201112 10:13:53.725" endtime="20201112 10:13:53.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.742" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:53.741" endtime="20201112 10:13:53.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.745" level="INFO">VALUE: [2.679999999997962e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6809999999974354e-06, 2.6249999999991558e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.6529999999982956e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.6809999999974354e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.679999999997962e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6380000000027215e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6939999999975317e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.651999999998822e-06, 2.6249999999991558e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6249999999991558e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.708000000000571e-06, 2.6669999999978655e-06]</msg>
<status status="PASS" starttime="20201112 10:13:53.744" endtime="20201112 10:13:53.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.739" endtime="20201112 10:13:53.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.749" endtime="20201112 10:13:53.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:53.753" endtime="20201112 10:13:53.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.751" endtime="20201112 10:13:53.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.747" endtime="20201112 10:13:53.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.384" endtime="20201112 10:13:53.774"></status>
</kw>
<msg timestamp="20201112 10:13:53.774" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.782" endtime="20201112 10:13:53.795"></status>
</kw>
<msg timestamp="20201112 10:13:53.795" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:53.781" endtime="20201112 10:13:53.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.798" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:53.796" endtime="20201112 10:13:53.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.799" endtime="20201112 10:13:53.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.778" endtime="20201112 10:13:53.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.776" endtime="20201112 10:13:53.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.808" endtime="20201112 10:13:54.092"></status>
</kw>
<msg timestamp="20201112 10:13:54.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020014458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:53.807" endtime="20201112 10:13:54.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020014458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:54.096" endtime="20201112 10:13:54.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.104" endtime="20201112 10:13:54.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.804" endtime="20201112 10:13:54.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.802" endtime="20201112 10:13:54.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:54.111" level="INFO">${RESULT} = [{'time': 0.020017125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.020025653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:54.108" endtime="20201112 10:13:54.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:54.127" level="INFO">${OVERHEAD} = {'time': [0.020017125, 0.020025653, 0.020036847, 0.020049194, 0.020057042, 0.020064236, 0.020077097, 0.020089778, 0.020106306, 0.0201145, 0.020127847, 0.020141389, 0.020157403, 0.020174597, 0.02018677...</msg>
<status status="PASS" starttime="20201112 10:13:54.112" endtime="20201112 10:13:54.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.131" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:54.130" endtime="20201112 10:13:54.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.134" level="INFO">VALUE: [2.667000000001335e-06, 2.667000000001335e-06, 2.6249999999991558e-06, 2.651999999998822e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.639000000002195e-06, 2.6809999999974354e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.6809999999974354e-06, 2.610999999999586e-06, 2.6669999999978655e-06, 2.597000000000016e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.651999999998822e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.695000000000475e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.6520000000022914e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6800000000014312e-06]</msg>
<status status="PASS" starttime="20201112 10:13:54.132" endtime="20201112 10:13:54.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.128" endtime="20201112 10:13:54.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.137" endtime="20201112 10:13:54.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:54.142" endtime="20201112 10:13:54.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.139" endtime="20201112 10:13:54.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.136" endtime="20201112 10:13:54.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.775" endtime="20201112 10:13:54.163"></status>
</kw>
<msg timestamp="20201112 10:13:54.163" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.171" endtime="20201112 10:13:54.183"></status>
</kw>
<msg timestamp="20201112 10:13:54.183" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.169" endtime="20201112 10:13:54.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.186" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.184" endtime="20201112 10:13:54.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.187" endtime="20201112 10:13:54.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.167" endtime="20201112 10:13:54.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.165" endtime="20201112 10:13:54.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.196" endtime="20201112 10:13:54.480"></status>
</kw>
<msg timestamp="20201112 10:13:54.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020026111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020028764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:54.195" endtime="20201112 10:13:54.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020026111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020028764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:54.485" endtime="20201112 10:13:54.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.493" endtime="20201112 10:13:54.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.192" endtime="20201112 10:13:54.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.190" endtime="20201112 10:13:54.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:54.500" level="INFO">${RESULT} = [{'time': 0.020028764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.020035778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:54.497" endtime="20201112 10:13:54.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:54.514" level="INFO">${OVERHEAD} = {'time': [0.020028764, 0.020035778, 0.020045153, 0.020061, 0.020077181, 0.020089056, 0.020100722, 0.020108083, 0.020119111, 0.020127819, 0.020136319, 0.020150333, 0.020165528, 0.020180736, 0.020188069...</msg>
<status status="PASS" starttime="20201112 10:13:54.501" endtime="20201112 10:13:54.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.519" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:54.518" endtime="20201112 10:13:54.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.521" level="INFO">VALUE: [2.653000000001765e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.639000000002195e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.694000000001001e-06, 2.651999999998822e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.583000000000446e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.597000000000016e-06, 2.653000000001765e-06, 2.7219999999966715e-06, 2.653000000001765e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.6800000000014312e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.6249999999991558e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.708000000000571e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.681000000000905e-06]</msg>
<status status="PASS" starttime="20201112 10:13:54.520" endtime="20201112 10:13:54.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.515" endtime="20201112 10:13:54.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.525" endtime="20201112 10:13:54.526"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:54.529" endtime="20201112 10:13:54.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.527" endtime="20201112 10:13:54.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.523" endtime="20201112 10:13:54.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.163" endtime="20201112 10:13:54.550"></status>
</kw>
<msg timestamp="20201112 10:13:54.550" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.558" endtime="20201112 10:13:54.571"></status>
</kw>
<msg timestamp="20201112 10:13:54.571" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.557" endtime="20201112 10:13:54.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.574" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.572" endtime="20201112 10:13:54.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.575" endtime="20201112 10:13:54.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.554" endtime="20201112 10:13:54.577"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.552" endtime="20201112 10:13:54.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.584" endtime="20201112 10:13:54.872"></status>
</kw>
<msg timestamp="20201112 10:13:54.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020239236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020241903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:54.583" endtime="20201112 10:13:54.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020239236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020241903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:54.876" endtime="20201112 10:13:54.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.887" endtime="20201112 10:13:54.888"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.580" endtime="20201112 10:13:54.889"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.578" endtime="20201112 10:13:54.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:54.894" level="INFO">${RESULT} = [{'time': 0.020241903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.020256597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:54.890" endtime="20201112 10:13:54.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:54.908" level="INFO">${OVERHEAD} = {'time': [0.020241903, 0.020256597, 0.020265972, 0.020278306, 0.020294014, 0.020303861, 0.020318417, 0.020329736, 0.020346764, 0.020362458, 0.020376958, 0.020386153, 0.020401, 0.020416028, 0.020431222...</msg>
<status status="PASS" starttime="20201112 10:13:54.895" endtime="20201112 10:13:54.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.912" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:54.911" endtime="20201112 10:13:54.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.915" level="INFO">VALUE: [2.6669999999978655e-06, 2.6660000000018613e-06, 2.694000000001001e-06, 2.6529999999982956e-06, 2.6809999999974354e-06, 2.6669999999978655e-06, 2.7090000000000447e-06, 2.6800000000014312e-06, 2.681000000000905e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.665999999998392e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.6249999999991558e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.694000000001001e-06, 2.597000000000016e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.681000000000905e-06, 2.610999999999586e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.722000000000141e-06, 2.667000000001335e-06, 2.6520000000022914e-06, 2.667000000001335e-06, 2.7229999999996146e-06, 2.653000000001765e-06, 2.749999999999281e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.679999999997962e-06, 2.6529999999982956e-06]</msg>
<status status="PASS" starttime="20201112 10:13:54.913" endtime="20201112 10:13:54.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.909" endtime="20201112 10:13:54.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.919" endtime="20201112 10:13:54.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:54.923" endtime="20201112 10:13:54.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.921" endtime="20201112 10:13:54.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.917" endtime="20201112 10:13:54.944"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.551" endtime="20201112 10:13:54.944"></status>
</kw>
<msg timestamp="20201112 10:13:54.944" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.960" endtime="20201112 10:13:54.975"></status>
</kw>
<msg timestamp="20201112 10:13:54.976" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.957" endtime="20201112 10:13:54.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.982" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.978" endtime="20201112 10:13:54.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.984" endtime="20201112 10:13:54.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.951" endtime="20201112 10:13:54.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.947" endtime="20201112 10:13:54.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.004" endtime="20201112 10:13:55.302"></status>
</kw>
<msg timestamp="20201112 10:13:55.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029436694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029439347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.001" endtime="20201112 10:13:55.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029436694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029439347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.306" endtime="20201112 10:13:55.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.314" endtime="20201112 10:13:55.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.995" endtime="20201112 10:13:55.317"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.991" endtime="20201112 10:13:55.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:55.321" level="INFO">${RESULT} = [{'time': 0.029439347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.029450542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:55.318" endtime="20201112 10:13:55.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:55.335" level="INFO">${OVERHEAD} = {'time': [0.029439347, 0.029450542, 0.029463903, 0.029471764, 0.029479028, 0.029490639, 0.029507, 0.029522681, 0.029535028, 0.029542222, 0.029551583, 0.029560764, 0.029575653, 0.029584806, 0.029592694...</msg>
<status status="PASS" starttime="20201112 10:13:55.322" endtime="20201112 10:13:55.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.340" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:55.339" endtime="20201112 10:13:55.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.342" level="INFO">VALUE: [2.653000000001765e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.681000000000905e-06, 2.6809999999974354e-06, 2.6249999999991558e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.7090000000000447e-06, 2.667000000001335e-06, 2.6939999999975317e-06, 2.679999999997962e-06, 2.6939999999975317e-06, 2.667000000001335e-06, 2.665999999998392e-06, 2.722000000000141e-06, 2.6520000000022914e-06, 2.6660000000018613e-06, 2.610999999999586e-06, 2.665999999998392e-06, 2.6669999999978655e-06, 2.6249999999991558e-06, 2.6809999999974354e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.610999999999586e-06, 2.651999999998822e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.6389999999987257e-06, 2.651999999998822e-06, 2.679999999997962e-06, 2.665999999998392e-06, 2.667000000001335e-06]</msg>
<status status="PASS" starttime="20201112 10:13:55.341" endtime="20201112 10:13:55.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.336" endtime="20201112 10:13:55.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.346" endtime="20201112 10:13:55.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:55.351" endtime="20201112 10:13:55.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.348" endtime="20201112 10:13:55.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.344" endtime="20201112 10:13:55.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.945" endtime="20201112 10:13:55.371"></status>
</kw>
<msg timestamp="20201112 10:13:55.372" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.380" endtime="20201112 10:13:55.391"></status>
</kw>
<msg timestamp="20201112 10:13:55.392" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.378" endtime="20201112 10:13:55.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.394" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.393" endtime="20201112 10:13:55.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.395" endtime="20201112 10:13:55.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.375" endtime="20201112 10:13:55.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.374" endtime="20201112 10:13:55.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.405" endtime="20201112 10:13:55.690"></status>
</kw>
<msg timestamp="20201112 10:13:55.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020090653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020093306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.403" endtime="20201112 10:13:55.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020090653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020093306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.694" endtime="20201112 10:13:55.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.703" endtime="20201112 10:13:55.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.400" endtime="20201112 10:13:55.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.399" endtime="20201112 10:13:55.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:55.710" level="INFO">${RESULT} = [{'time': 0.020093306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.020101847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:55.706" endtime="20201112 10:13:55.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:55.725" level="INFO">${OVERHEAD} = {'time': [0.020093306, 0.020101847, 0.020110708, 0.020118542, 0.020133403, 0.020148583, 0.020162111, 0.020174819, 0.020186153, 0.020202861, 0.020217875, 0.020232903, 0.020243611, 0.020257764, 0.020267...</msg>
<status status="PASS" starttime="20201112 10:13:55.711" endtime="20201112 10:13:55.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.730" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:55.728" endtime="20201112 10:13:55.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.732" level="INFO">VALUE: [2.6529999999982956e-06, 2.665999999998392e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6250000000026252e-06, 2.6250000000026252e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.694000000001001e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.651999999998822e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.6800000000014312e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.681000000000905e-06, 2.6529999999982956e-06, 2.7090000000000447e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.6249999999991558e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 2.679999999997962e-06, 2.667000000001335e-06, 2.6249999999991558e-06, 2.653000000001765e-06, 2.6809999999974354e-06, 2.6939999999975317e-06, 2.667000000001335e-06, 2.610999999999586e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.653000000001765e-06]</msg>
<status status="PASS" starttime="20201112 10:13:55.731" endtime="20201112 10:13:55.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.726" endtime="20201112 10:13:55.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.736" endtime="20201112 10:13:55.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:55.740" endtime="20201112 10:13:55.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.738" endtime="20201112 10:13:55.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.734" endtime="20201112 10:13:55.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.372" endtime="20201112 10:13:55.761"></status>
</kw>
<msg timestamp="20201112 10:13:55.761" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.769" endtime="20201112 10:13:55.780"></status>
</kw>
<msg timestamp="20201112 10:13:55.781" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.767" endtime="20201112 10:13:55.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.783" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.782" endtime="20201112 10:13:55.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.785" endtime="20201112 10:13:55.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.765" endtime="20201112 10:13:55.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.763" endtime="20201112 10:13:55.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.794" endtime="20201112 10:13:56.078"></status>
</kw>
<msg timestamp="20201112 10:13:56.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020029042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020031694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.792" endtime="20201112 10:13:56.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020029042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020031694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:56.083" endtime="20201112 10:13:56.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.091" endtime="20201112 10:13:56.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.790" endtime="20201112 10:13:56.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.788" endtime="20201112 10:13:56.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:56.098" level="INFO">${RESULT} = [{'time': 0.020031694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.651999999998822e-06, 'source_diff': 2.651999999998822e-06}, {'time': 0.020042722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:56.095" endtime="20201112 10:13:56.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:56.112" level="INFO">${OVERHEAD} = {'time': [0.020031694, 0.020042722, 0.020056069, 0.020071931, 0.020081986, 0.020098653, 0.020112167, 0.020127681, 0.020136042, 0.020153417, 0.020161764, 0.020176611, 0.020187292, 0.020203986, 0.020211...</msg>
<status status="PASS" starttime="20201112 10:13:56.099" endtime="20201112 10:13:56.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.117" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:56.116" endtime="20201112 10:13:56.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.119" level="INFO">VALUE: [2.651999999998822e-06, 2.665999999998392e-06, 2.610999999999586e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.6389999999987257e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.597000000000016e-06, 2.639000000002195e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6250000000026252e-06, 2.681000000000905e-06, 2.665999999998392e-06, 2.679999999997962e-06, 2.6529999999982956e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.6809999999974354e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.694000000001001e-06, 2.6660000000018613e-06, 2.6800000000014312e-06, 2.653000000001765e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.653000000001765e-06, 2.681000000000905e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.679999999997962e-06, 2.681000000000905e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.6800000000014312e-06, 2.639000000002195e-06]</msg>
<status status="PASS" starttime="20201112 10:13:56.118" endtime="20201112 10:13:56.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.113" endtime="20201112 10:13:56.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.123" endtime="20201112 10:13:56.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:56.127" endtime="20201112 10:13:56.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.125" endtime="20201112 10:13:56.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.121" endtime="20201112 10:13:56.148"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.762" endtime="20201112 10:13:56.148"></status>
</kw>
<msg timestamp="20201112 10:13:56.148" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.156" endtime="20201112 10:13:56.169"></status>
</kw>
<msg timestamp="20201112 10:13:56.169" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.155" endtime="20201112 10:13:56.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.172" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.170" endtime="20201112 10:13:56.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.173" endtime="20201112 10:13:56.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.152" endtime="20201112 10:13:56.175"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.150" endtime="20201112 10:13:56.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.182" endtime="20201112 10:13:56.468"></status>
</kw>
<msg timestamp="20201112 10:13:56.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020014083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02001675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:13:56.180" endtime="20201112 10:13:56.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020014083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02001675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:13:56.472" endtime="20201112 10:13:56.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.481" endtime="20201112 10:13:56.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.178" endtime="20201112 10:13:56.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.176" endtime="20201112 10:13:56.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:56.488" level="INFO">${RESULT} = [{'time': 0.02001675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.020028431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:13:56.484" endtime="20201112 10:13:56.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:56.502" level="INFO">${OVERHEAD} = {'time': [0.02001675, 0.020028431, 0.020036958, 0.020048472, 0.020062167, 0.020073042, 0.020090375, 0.020106903, 0.020119931, 0.020130278, 0.020139806, 0.020151319, 0.020163181, 0.020177222, 0.0201862...</msg>
<status status="PASS" starttime="20201112 10:13:56.489" endtime="20201112 10:13:56.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.506" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:56.505" endtime="20201112 10:13:56.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.509" level="INFO">VALUE: [2.667000000001335e-06, 2.6669999999978655e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.6529999999982956e-06, 2.6660000000018613e-06, 2.5979999999994896e-06, 2.6800000000014312e-06, 2.6660000000018613e-06, 2.6809999999974354e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6389999999987257e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.679999999997962e-06, 2.6529999999982956e-06, 2.667000000001335e-06, 2.681000000000905e-06, 2.6389999999987257e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.694000000001001e-06, 2.6809999999974354e-06, 2.6660000000018613e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.597000000000016e-06, 2.665999999998392e-06, 2.651999999998822e-06, 2.6119999999990595e-06, 2.667000000001335e-06, 2.6939999999975317e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.667000000001335e-06]</msg>
<status status="PASS" starttime="20201112 10:13:56.508" endtime="20201112 10:13:56.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.503" endtime="20201112 10:13:56.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.513" endtime="20201112 10:13:56.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:56.517" endtime="20201112 10:13:56.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.515" endtime="20201112 10:13:56.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.511" endtime="20201112 10:13:56.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.149" endtime="20201112 10:13:56.538"></status>
</kw>
<msg timestamp="20201112 10:13:56.538" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.546" endtime="20201112 10:13:56.558"></status>
</kw>
<msg timestamp="20201112 10:13:56.559" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.545" endtime="20201112 10:13:56.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.561" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.560" endtime="20201112 10:13:56.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.562" endtime="20201112 10:13:56.564"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.542" endtime="20201112 10:13:56.565"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.540" endtime="20201112 10:13:56.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.572" endtime="20201112 10:13:56.857"></status>
</kw>
<msg timestamp="20201112 10:13:56.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019924528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:56.570" endtime="20201112 10:13:56.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019924528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:56.861" endtime="20201112 10:13:56.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.869" endtime="20201112 10:13:56.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.567" endtime="20201112 10:13:56.872"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.566" endtime="20201112 10:13:56.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:56.876" level="INFO">${RESULT} = [{'time': 0.019927139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.019940167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:56.873" endtime="20201112 10:13:56.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:56.891" level="INFO">${OVERHEAD} = {'time': [0.019927139, 0.019940167, 0.019949847, 0.019959194, 0.019974292, 0.019986236, 0.020002597, 0.020011167, 0.020019653, 0.020030167, 0.020039847, 0.020047708, 0.020064903, 0.020080931, 0.020090...</msg>
<status status="PASS" starttime="20201112 10:13:56.877" endtime="20201112 10:13:56.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.895" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:56.894" endtime="20201112 10:13:56.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.897" level="INFO">VALUE: [2.610999999999586e-06, 2.681000000000905e-06, 2.6800000000014312e-06, 2.665999999998392e-06, 2.735999999999711e-06, 2.610999999999586e-06, 2.6660000000018613e-06, 2.7229999999996146e-06, 2.6809999999974354e-06, 2.653000000001765e-06, 2.665999999998392e-06, 2.6660000000018613e-06, 2.6669999999978655e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.735999999999711e-06, 2.665999999998392e-06, 2.6529999999982956e-06, 2.7089999999965753e-06, 2.667000000001335e-06, 2.6249999999991558e-06, 2.665999999998392e-06, 2.667000000001335e-06, 2.653000000001765e-06, 2.694000000001001e-06, 2.6529999999982956e-06, 2.639000000002195e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.6669999999978655e-06, 2.681000000000905e-06, 2.667000000001335e-06, 2.6660000000018613e-06, 2.6660000000018613e-06, 2.667000000001335e-06, 2.667000000001335e-06, 2.6800000000014312e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.653000000001765e-06, 2.6660000000018613e-06, 2.6529999999982956e-06, 2.6529999999982956e-06, 2.722000000000141e-06, 2.6389999999987257e-06, 2.667000000001335e-06, 2.597000000000016e-06, 2.6529999999982956e-06]</msg>
<status status="PASS" starttime="20201112 10:13:56.896" endtime="20201112 10:13:56.898"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.891" endtime="20201112 10:13:56.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.901" endtime="20201112 10:13:56.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:56.906" endtime="20201112 10:13:56.925"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.903" endtime="20201112 10:13:56.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.899" endtime="20201112 10:13:56.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.539" endtime="20201112 10:13:56.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.082" endtime="20201112 10:13:56.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:56.931" endtime="20201112 10:13:56.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.930" endtime="20201112 10:13:56.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.928" endtime="20201112 10:13:56.952"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:49.002" endtime="20201112 10:13:56.952" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:56.960" endtime="20201112 10:13:56.980"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.958" endtime="20201112 10:13:56.980"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.994" endtime="20201112 10:13:57.013"></status>
</kw>
<msg timestamp="20201112 10:13:57.013" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.992" endtime="20201112 10:13:57.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.016" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.014" endtime="20201112 10:13:57.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.019" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:57.017" endtime="20201112 10:13:57.019"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:56.989" endtime="20201112 10:13:57.020"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:56.987" endtime="20201112 10:13:57.021"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.986" endtime="20201112 10:13:57.021"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:57.025" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:57.024" endtime="20201112 10:13:57.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.022" endtime="20201112 10:13:57.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.985" endtime="20201112 10:13:57.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.984" endtime="20201112 10:13:57.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.027" endtime="20201112 10:13:57.028"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.983" endtime="20201112 10:13:57.029"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.981" endtime="20201112 10:13:57.029"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.957" endtime="20201112 10:13:57.029"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.040" endtime="20201112 10:13:57.060"></status>
</kw>
<msg timestamp="20201112 10:13:57.060" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.038" endtime="20201112 10:13:57.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.063" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.061" endtime="20201112 10:13:57.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.064" endtime="20201112 10:13:57.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.035" endtime="20201112 10:13:57.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.032" endtime="20201112 10:13:57.067"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.069" endtime="20201112 10:13:57.071"></status>
</kw>
<msg timestamp="20201112 10:13:57.071" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 10:13:57.067" endtime="20201112 10:13:57.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.075" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:13:57.074" endtime="20201112 10:13:57.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.077" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:13:57.076" endtime="20201112 10:13:57.078"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.072" endtime="20201112 10:13:57.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.082" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:13:57.081" endtime="20201112 10:13:57.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.084" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:13:57.083" endtime="20201112 10:13:57.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.079" endtime="20201112 10:13:57.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.092" endtime="20201112 10:13:57.379"></status>
</kw>
<msg timestamp="20201112 10:13:57.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072849014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072855347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:57.090" endtime="20201112 10:13:57.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072849014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072855347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:57.383" endtime="20201112 10:13:57.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.392" endtime="20201112 10:13:57.393"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.088" endtime="20201112 10:13:57.394"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.086" endtime="20201112 10:13:57.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:57.398" level="INFO">${RESULT} = [{'time': 0.072855347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.3329999999972575e-06, 'source_diff': 6.3329999999972575e-06}, {'time': 0.072875153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:57.395" endtime="20201112 10:13:57.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:57.414" level="INFO">${OVERHEAD} = {'time': [0.072855347, 0.072875153, 0.072890972, 0.072902625, 0.072921278, 0.07294175, 0.072955556, 0.072967611, 0.072988361, 0.0730095, 0.073023333, 0.073044014, 0.073054764, 0.073070264, 0.073085056...</msg>
<status status="PASS" starttime="20201112 10:13:57.400" endtime="20201112 10:13:57.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.419" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 10:13:57.418" endtime="20201112 10:13:57.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.422" level="INFO">VALUE: [6.3329999999972575e-06, 6.416999999994677e-06, 6.443999999994343e-06, 6.403000000002046e-06, 6.4450000000076946e-06, 6.443999999994343e-06, 6.417000000008555e-06, 6.417000000008555e-06, 6.444000000008221e-06, 6.431000000001186e-06, 6.443999999994343e-06, 6.472000000007361e-06, 6.444999999993817e-06, 6.458000000000852e-06, 6.431000000001186e-06, 6.459000000000326e-06, 6.443999999994343e-06, 6.431000000001186e-06, 6.403000000002046e-06, 6.431000000001186e-06, 6.430000000001712e-06, 6.4450000000076946e-06, 6.431000000001186e-06, 6.444000000008221e-06, 6.4450000000076946e-06, 6.431000000001186e-06, 6.443999999994343e-06, 6.417000000008555e-06, 6.417000000008555e-06, 6.444999999993817e-06, 6.431000000001186e-06, 6.430000000001712e-06, 6.443999999994343e-06, 6.430000000001712e-06, 6.4450000000076946e-06, 6.415999999995203e-06, 6.443999999994343e-06, 6.417000000008555e-06, 6.430000000001712e-06, 6.416999999994677e-06, 6.403000000002046e-06, 6.458000000000852e-06, 6.499999999992623e-06, 6.431000000001186e-06, 6.416000000009081e-06, 6.375000000002906e-06, 6.459000000000326e-06, 6.444000000008221e-06, 6.415999999995203e-06, 6.443999999994343e-06]</msg>
<status status="PASS" starttime="20201112 10:13:57.421" endtime="20201112 10:13:57.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.415" endtime="20201112 10:13:57.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.426" endtime="20201112 10:13:57.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:57.429" endtime="20201112 10:13:57.448"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.427" endtime="20201112 10:13:57.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.424" endtime="20201112 10:13:57.450"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.030" endtime="20201112 10:13:57.450"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:56.954" endtime="20201112 10:13:57.451" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:57.458" endtime="20201112 10:13:57.478"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.457" endtime="20201112 10:13:57.478"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.492" endtime="20201112 10:13:57.511"></status>
</kw>
<msg timestamp="20201112 10:13:57.512" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.490" endtime="20201112 10:13:57.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.514" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.513" endtime="20201112 10:13:57.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.517" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:57.515" endtime="20201112 10:13:57.518"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:57.488" endtime="20201112 10:13:57.518"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:57.485" endtime="20201112 10:13:57.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.484" endtime="20201112 10:13:57.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:57.523" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:57.522" endtime="20201112 10:13:57.524"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.520" endtime="20201112 10:13:57.524"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.483" endtime="20201112 10:13:57.524"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.482" endtime="20201112 10:13:57.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.526" endtime="20201112 10:13:57.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.481" endtime="20201112 10:13:57.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.479" endtime="20201112 10:13:57.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.456" endtime="20201112 10:13:57.529"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.539" endtime="20201112 10:13:57.629"></status>
</kw>
<msg timestamp="20201112 10:13:57.629" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.537" endtime="20201112 10:13:57.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.632" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.630" endtime="20201112 10:13:57.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.633" endtime="20201112 10:13:57.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.534" endtime="20201112 10:13:57.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.532" endtime="20201112 10:13:57.636"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.638" endtime="20201112 10:13:57.640"></status>
</kw>
<msg timestamp="20201112 10:13:57.640" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 10:13:57.637" endtime="20201112 10:13:57.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.644" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:13:57.643" endtime="20201112 10:13:57.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.646" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:13:57.645" endtime="20201112 10:13:57.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.641" endtime="20201112 10:13:57.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.651" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:13:57.650" endtime="20201112 10:13:57.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.654" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:13:57.652" endtime="20201112 10:13:57.654"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.648" endtime="20201112 10:13:57.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.661" endtime="20201112 10:13:57.954"></status>
</kw>
<msg timestamp="20201112 10:13:57.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074359153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.07441025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:13:57.659" endtime="20201112 10:13:57.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074359153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.07441025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:13:57.958" endtime="20201112 10:13:57.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.966" endtime="20201112 10:13:57.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.657" endtime="20201112 10:13:57.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.655" endtime="20201112 10:13:57.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:57.973" level="INFO">${RESULT} = [{'time': 0.07441025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.109699999999995e-05, 'source_diff': 5.109699999999995e-05}, {'time': 0.075843875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:13:57.970" endtime="20201112 10:13:57.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:57.988" level="INFO">${OVERHEAD} = {'time': [0.07441025, 0.075843875, 0.077271681, 0.078696819, 0.080126986, 0.081560611, 0.082986972, 0.084420083, 0.085855208, 0.087285181, 0.088716833, 0.090145806, 0.091577278, 0.093009944, 0.0944382...</msg>
<status status="PASS" starttime="20201112 10:13:57.974" endtime="20201112 10:13:57.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.001" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 10:13:58.000" endtime="20201112 10:13:58.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.004" level="INFO">VALUE: [5.109699999999995e-05, 5.126400000000919e-05, 5.123699999999565e-05, 5.125000000000268e-05, 5.1207999999997034e-05, 5.125000000000268e-05, 5.130500000000149e-05, 5.127700000000235e-05, 5.125000000000268e-05, 5.1195000000003876e-05, 5.126399999999531e-05, 5.123699999999565e-05, 5.125000000000268e-05, 5.1193999999990525e-05, 5.1235999999996173e-05, 5.1209000000010385e-05, 5.125000000000268e-05, 5.1235999999996173e-05, 5.126400000000919e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.1223000000003016e-05, 5.126399999999531e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.127800000000182e-05, 5.125000000000268e-05, 5.126399999999531e-05, 5.126399999999531e-05, 5.125000000000268e-05, 5.126400000000919e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.127800000000182e-05, 5.1235999999996173e-05, 5.124999999997493e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.123600000001005e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.126399999999531e-05, 5.125000000000268e-05, 5.122200000001742e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.1237000000009525e-05]</msg>
<status status="PASS" starttime="20201112 10:13:58.002" endtime="20201112 10:13:58.004"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.997" endtime="20201112 10:13:58.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.007" endtime="20201112 10:13:58.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:58.010" endtime="20201112 10:13:58.030"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.009" endtime="20201112 10:13:58.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.005" endtime="20201112 10:13:58.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.530" endtime="20201112 10:13:58.031"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:57.453" endtime="20201112 10:13:58.032" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:58.040" endtime="20201112 10:13:58.060"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.038" endtime="20201112 10:13:58.060"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.074" endtime="20201112 10:13:58.093"></status>
</kw>
<msg timestamp="20201112 10:13:58.094" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.072" endtime="20201112 10:13:58.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.096" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.095" endtime="20201112 10:13:58.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.100" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:58.097" endtime="20201112 10:13:58.101"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:58.069" endtime="20201112 10:13:58.101"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:58.067" endtime="20201112 10:13:58.102"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.065" endtime="20201112 10:13:58.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:58.106" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:58.105" endtime="20201112 10:13:58.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.103" endtime="20201112 10:13:58.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.065" endtime="20201112 10:13:58.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.064" endtime="20201112 10:13:58.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.108" endtime="20201112 10:13:58.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.063" endtime="20201112 10:13:58.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.061" endtime="20201112 10:13:58.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.037" endtime="20201112 10:13:58.111"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.121" endtime="20201112 10:13:58.401"></status>
</kw>
<msg timestamp="20201112 10:13:58.402" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.119" endtime="20201112 10:13:58.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.405" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.403" endtime="20201112 10:13:58.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.406" endtime="20201112 10:13:58.407"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.116" endtime="20201112 10:13:58.408"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.114" endtime="20201112 10:13:58.408"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.411" endtime="20201112 10:13:58.412"></status>
</kw>
<msg timestamp="20201112 10:13:58.413" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 10:13:58.409" endtime="20201112 10:13:58.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.417" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:13:58.416" endtime="20201112 10:13:58.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.419" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:13:58.418" endtime="20201112 10:13:58.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.413" endtime="20201112 10:13:58.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.424" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:13:58.423" endtime="20201112 10:13:58.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.426" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:13:58.425" endtime="20201112 10:13:58.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.421" endtime="20201112 10:13:58.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.434" endtime="20201112 10:13:58.746"></status>
</kw>
<msg timestamp="20201112 10:13:58.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077388819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077486806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.432" endtime="20201112 10:13:58.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077388819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077486806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.751" endtime="20201112 10:13:58.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.759" endtime="20201112 10:13:58.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.429" endtime="20201112 10:13:58.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.428" endtime="20201112 10:13:58.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:58.766" level="INFO">${RESULT} = [{'time': 0.077486806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.798700000000771e-05, 'source_diff': 9.798700000000771e-05}, {'time': 0.082727819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:58.762" endtime="20201112 10:13:58.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:58.780" level="INFO">${OVERHEAD} = {'time': [0.077486806, 0.082727819, 0.0879705, 0.093212847, 0.098459028, 0.103703556, 0.109050042, 0.114300222, 0.119541417, 0.124790431, 0.130032625, 0.135276306, 0.140519486, 0.145761181, 0.15100186...</msg>
<status status="PASS" starttime="20201112 10:13:58.767" endtime="20201112 10:13:58.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.785" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 10:13:58.784" endtime="20201112 10:13:58.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.787" level="INFO">VALUE: [9.798700000000771e-05, 9.748599999999386e-05, 9.74439999999882e-05, 9.745799999999472e-05, 9.745900000000807e-05, 9.745900000000807e-05, 9.74730000000007e-05, 9.740300000000979e-05, 9.74730000000007e-05, 9.743099999999505e-05, 9.74720000000151e-05, 9.745900000002194e-05, 9.744400000000208e-05, 9.747299999998682e-05, 9.745799999999472e-05, 9.745799999999472e-05, 9.74720000000151e-05, 9.745799999999472e-05, 9.741599999998907e-05, 9.747199999998735e-05, 9.745899999999419e-05, 9.747299999998682e-05, 9.745899999999419e-05, 9.745800000002247e-05, 9.743100000000893e-05, 9.7513999999993e-05, 9.74299999999817e-05, 9.748599999997998e-05, 9.745900000002194e-05, 9.745799999999472e-05, 9.745799999999472e-05, 9.74720000000151e-05, 9.747199999998735e-05, 9.747199999998735e-05, 9.745799999999472e-05, 9.747199999998735e-05, 9.748599999997998e-05, 9.747299999995906e-05, 9.748600000003549e-05, 9.745799999999472e-05, 9.750000000002812e-05, 9.745799999999472e-05, 9.747200000004286e-05, 9.747300000001458e-05, 9.747199999998735e-05, 9.748600000003549e-05, 9.745900000002194e-05, 9.743100000003668e-05, 9.747199999998735e-05, 9.745899999996643e-05]</msg>
<status status="PASS" starttime="20201112 10:13:58.786" endtime="20201112 10:13:58.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.781" endtime="20201112 10:13:58.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.791" endtime="20201112 10:13:58.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:58.794" endtime="20201112 10:13:58.814"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.793" endtime="20201112 10:13:58.814"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.789" endtime="20201112 10:13:58.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.112" endtime="20201112 10:13:58.815"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:58.034" endtime="20201112 10:13:58.816" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:58.824" endtime="20201112 10:13:58.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.822" endtime="20201112 10:13:58.844"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.858" endtime="20201112 10:13:58.878"></status>
</kw>
<msg timestamp="20201112 10:13:58.878" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.855" endtime="20201112 10:13:58.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.881" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.879" endtime="20201112 10:13:58.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.884" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:58.882" endtime="20201112 10:13:58.884"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:58.853" endtime="20201112 10:13:58.885"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:58.850" endtime="20201112 10:13:58.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.849" endtime="20201112 10:13:58.886"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:58.890" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:58.889" endtime="20201112 10:13:58.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.887" endtime="20201112 10:13:58.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.848" endtime="20201112 10:13:58.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.847" endtime="20201112 10:13:58.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.892" endtime="20201112 10:13:58.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.846" endtime="20201112 10:13:58.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.844" endtime="20201112 10:13:58.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.821" endtime="20201112 10:13:58.895"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.904" endtime="20201112 10:13:58.925"></status>
</kw>
<msg timestamp="20201112 10:13:58.926" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.903" endtime="20201112 10:13:58.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.928" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.927" endtime="20201112 10:13:58.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.929" endtime="20201112 10:13:58.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.900" endtime="20201112 10:13:58.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.898" endtime="20201112 10:13:58.932"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.934" endtime="20201112 10:13:58.936"></status>
</kw>
<msg timestamp="20201112 10:13:58.937" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 10:13:58.933" endtime="20201112 10:13:58.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.941" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:13:58.940" endtime="20201112 10:13:58.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.943" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:13:58.942" endtime="20201112 10:13:58.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.937" endtime="20201112 10:13:58.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.948" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:13:58.947" endtime="20201112 10:13:58.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.950" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:13:58.949" endtime="20201112 10:13:58.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.944" endtime="20201112 10:13:58.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.958" endtime="20201112 10:13:59.247"></status>
</kw>
<msg timestamp="20201112 10:13:59.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073681333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073682875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.956" endtime="20201112 10:13:59.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073681333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073682875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.252" endtime="20201112 10:13:59.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.260" endtime="20201112 10:13:59.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.953" endtime="20201112 10:13:59.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.951" endtime="20201112 10:13:59.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:59.268" level="INFO">${RESULT} = [{'time': 0.073682875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.541999999993271e-06, 'source_diff': 1.541999999993271e-06}, {'time': 0.073697417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:59.264" endtime="20201112 10:13:59.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:59.281" level="INFO">${OVERHEAD} = {'time': [0.073682875, 0.073697417, 0.073714306, 0.073727514, 0.073745556, 0.07376225, 0.073782125, 0.073799347, 0.073815403, 0.073834278, 0.073851472, 0.073873194, 0.073885222, 0.073906597, 0.0739206...</msg>
<status status="PASS" starttime="20201112 10:13:59.269" endtime="20201112 10:13:59.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.286" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 10:13:59.285" endtime="20201112 10:13:59.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.289" level="INFO">VALUE: [1.541999999993271e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000071488e-06, 1.4860000000088691e-06, 1.5000000000015001e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.4720000000023603e-06, 1.52800000000064e-06, 1.514000000008009e-06, 1.541999999993271e-06, 1.5410000000076751e-06, 1.5420000000071488e-06, 1.5559999999997798e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.5559999999997798e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.5409999999937973e-06, 1.5409999999937973e-06, 1.4720000000023603e-06, 1.52800000000064e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.4860000000088691e-06, 1.52800000000064e-06, 1.5409999999937973e-06, 1.514000000008009e-06, 1.52800000000064e-06, 1.5409999999937973e-06, 1.569000000006815e-06, 1.5559999999997798e-06, 1.5420000000071488e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5689999999929372e-06, 1.4870000000083428e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.5420000000071488e-06, 1.5269999999872885e-06, 1.5420000000071488e-06]</msg>
<status status="PASS" starttime="20201112 10:13:59.287" endtime="20201112 10:13:59.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.282" endtime="20201112 10:13:59.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.292" endtime="20201112 10:13:59.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:59.296" endtime="20201112 10:13:59.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.294" endtime="20201112 10:13:59.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.290" endtime="20201112 10:13:59.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.896" endtime="20201112 10:13:59.316"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:58.818" endtime="20201112 10:13:59.317" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:59.325" endtime="20201112 10:13:59.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.324" endtime="20201112 10:13:59.346"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.360" endtime="20201112 10:13:59.380"></status>
</kw>
<msg timestamp="20201112 10:13:59.380" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.357" endtime="20201112 10:13:59.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.383" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.381" endtime="20201112 10:13:59.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.386" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:59.384" endtime="20201112 10:13:59.386"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:59.355" endtime="20201112 10:13:59.387"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:59.352" endtime="20201112 10:13:59.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.351" endtime="20201112 10:13:59.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:59.392" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:59.392" endtime="20201112 10:13:59.393"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.389" endtime="20201112 10:13:59.393"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.350" endtime="20201112 10:13:59.393"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.350" endtime="20201112 10:13:59.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.394" endtime="20201112 10:13:59.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.348" endtime="20201112 10:13:59.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.346" endtime="20201112 10:13:59.397"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.322" endtime="20201112 10:13:59.397"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.406" endtime="20201112 10:13:59.497"></status>
</kw>
<msg timestamp="20201112 10:13:59.498" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.405" endtime="20201112 10:13:59.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.501" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.499" endtime="20201112 10:13:59.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.502" endtime="20201112 10:13:59.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.402" endtime="20201112 10:13:59.504"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.400" endtime="20201112 10:13:59.504"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.507" endtime="20201112 10:13:59.508"></status>
</kw>
<msg timestamp="20201112 10:13:59.509" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 10:13:59.505" endtime="20201112 10:13:59.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.513" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:13:59.512" endtime="20201112 10:13:59.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.515" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:13:59.514" endtime="20201112 10:13:59.515"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.510" endtime="20201112 10:13:59.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.520" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:13:59.519" endtime="20201112 10:13:59.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.522" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:13:59.521" endtime="20201112 10:13:59.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.517" endtime="20201112 10:13:59.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.530" endtime="20201112 10:13:59.822"></status>
</kw>
<msg timestamp="20201112 10:13:59.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075099736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075117611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.528" endtime="20201112 10:13:59.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075099736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075117611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.826" endtime="20201112 10:13:59.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.835" endtime="20201112 10:13:59.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.525" endtime="20201112 10:13:59.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.524" endtime="20201112 10:13:59.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:59.842" level="INFO">${RESULT} = [{'time': 0.075117611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.787500000000053e-05, 'source_diff': 1.787500000000053e-05}, {'time': 0.076561236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:59.839" endtime="20201112 10:13:59.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:59.856" level="INFO">${OVERHEAD} = {'time': [0.075117611, 0.076561236, 0.078013542, 0.079456681, 0.080902944, 0.082353403, 0.083797375, 0.085245819, 0.086691792, 0.088144069, 0.089587694, 0.091040167, 0.092489625, 0.093939569, 0.095392...</msg>
<status status="PASS" starttime="20201112 10:13:59.843" endtime="20201112 10:13:59.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.861" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 10:13:59.860" endtime="20201112 10:13:59.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.864" level="INFO">VALUE: [1.787500000000053e-05, 1.787500000000053e-05, 1.7889000000007038e-05, 1.7889000000007038e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.788899999999316e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.786099999999402e-05, 1.7889000000007038e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.7902000000000196e-05, 1.78610000000079e-05, 1.788899999999316e-05, 1.7916000000006704e-05, 1.7889000000007038e-05, 1.787500000000053e-05, 1.788899999999316e-05, 1.790299999999967e-05, 1.7889000000007038e-05, 1.7889000000007038e-05, 1.788899999999316e-05, 1.7902000000000196e-05, 1.7888000000007565e-05, 1.7887999999993687e-05, 1.7805999999995215e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.7889000000007038e-05, 1.787500000000053e-05, 1.78610000000079e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.788899999999316e-05, 1.788899999999316e-05, 1.78610000000079e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.788899999999316e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.7889000000020916e-05]</msg>
<status status="PASS" starttime="20201112 10:13:59.862" endtime="20201112 10:13:59.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.857" endtime="20201112 10:13:59.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.867" endtime="20201112 10:13:59.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:59.870" endtime="20201112 10:13:59.890"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.869" endtime="20201112 10:13:59.890"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.865" endtime="20201112 10:13:59.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.398" endtime="20201112 10:13:59.891"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:59.319" endtime="20201112 10:13:59.892" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:59.900" endtime="20201112 10:13:59.919"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.898" endtime="20201112 10:13:59.920"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.933" endtime="20201112 10:13:59.954"></status>
</kw>
<msg timestamp="20201112 10:13:59.954" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.932" endtime="20201112 10:13:59.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.957" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.955" endtime="20201112 10:13:59.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.961" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:59.959" endtime="20201112 10:13:59.961"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:59.929" endtime="20201112 10:13:59.962"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:59.927" endtime="20201112 10:13:59.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.925" endtime="20201112 10:13:59.963"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:59.966" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:59.966" endtime="20201112 10:13:59.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.964" endtime="20201112 10:13:59.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.924" endtime="20201112 10:13:59.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.924" endtime="20201112 10:13:59.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.968" endtime="20201112 10:13:59.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.922" endtime="20201112 10:13:59.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.921" endtime="20201112 10:13:59.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.897" endtime="20201112 10:13:59.971"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.981" endtime="20201112 10:14:00.268"></status>
</kw>
<msg timestamp="20201112 10:14:00.269" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.979" endtime="20201112 10:14:00.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.274" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:00.271" endtime="20201112 10:14:00.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.277" endtime="20201112 10:14:00.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.976" endtime="20201112 10:14:00.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.974" endtime="20201112 10:14:00.282"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.287" endtime="20201112 10:14:00.291"></status>
</kw>
<msg timestamp="20201112 10:14:00.292" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 10:14:00.284" endtime="20201112 10:14:00.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.300" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:14:00.298" endtime="20201112 10:14:00.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.305" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:14:00.303" endtime="20201112 10:14:00.306"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.293" endtime="20201112 10:14:00.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.312" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:14:00.311" endtime="20201112 10:14:00.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.314" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:14:00.313" endtime="20201112 10:14:00.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.308" endtime="20201112 10:14:00.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.321" endtime="20201112 10:14:00.614"></status>
</kw>
<msg timestamp="20201112 10:14:00.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079139903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079174444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:00.320" endtime="20201112 10:14:00.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079139903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079174444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:00.618" endtime="20201112 10:14:00.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.626" endtime="20201112 10:14:00.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.317" endtime="20201112 10:14:00.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.315" endtime="20201112 10:14:00.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:00.633" level="INFO">${RESULT} = [{'time': 0.079174444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4540999999999045e-05, 'source_diff': 3.4540999999999045e-05}, {'time': 0.084551194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:00.630" endtime="20201112 10:14:00.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:14:00.647" level="INFO">${OVERHEAD} = {'time': [0.079174444, 0.084551194, 0.089829653, 0.095107611, 0.100385736, 0.105660361, 0.110942486, 0.116220111, 0.12149575, 0.126775944, 0.132054681, 0.137330125, 0.142604417, 0.14798625, 0.15326955...</msg>
<status status="PASS" starttime="20201112 10:14:00.634" endtime="20201112 10:14:00.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.652" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 10:14:00.651" endtime="20201112 10:14:00.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.655" level="INFO">VALUE: [3.4540999999999045e-05, 3.4554999999991676e-05, 3.455599999999115e-05, 3.454199999999852e-05, 3.454199999999852e-05, 3.452799999999201e-05, 3.452800000000589e-05, 3.454199999999852e-05, 3.455600000000503e-05, 3.462500000001034e-05, 3.4500000000020625e-05, 3.454199999999852e-05, 3.454199999999852e-05, 3.4556000000018905e-05, 3.4570000000011536e-05, 3.454199999999852e-05, 3.447200000000761e-05, 3.4554999999991676e-05, 3.456899999998431e-05, 3.4570000000011536e-05, 3.449999999999287e-05, 3.452800000000589e-05, 3.454199999999852e-05, 3.4554999999991676e-05, 3.454199999999852e-05, 3.455599999999115e-05, 3.452800000000589e-05, 3.4540999999999045e-05, 3.4540999999999045e-05, 3.458300000000469e-05, 3.451299999998603e-05, 3.4570000000011536e-05, 3.4540999999999045e-05, 3.454199999997076e-05, 3.4542000000026274e-05, 3.452800000003364e-05, 3.4527000000006414e-05, 3.4540999999999045e-05, 3.458400000000417e-05, 3.452800000003364e-05, 3.458400000000417e-05, 3.4527000000006414e-05, 3.4540999999999045e-05, 3.4554999999991676e-05, 3.4556000000018905e-05, 3.4540999999999045e-05, 3.4542000000026274e-05, 3.454199999997076e-05, 3.456899999998431e-05, 3.4527000000006414e-05]</msg>
<status status="PASS" starttime="20201112 10:14:00.653" endtime="20201112 10:14:00.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.648" endtime="20201112 10:14:00.655"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.658" endtime="20201112 10:14:00.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:00.661" endtime="20201112 10:14:00.681"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.660" endtime="20201112 10:14:00.681"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.656" endtime="20201112 10:14:00.682"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.972" endtime="20201112 10:14:00.682"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:59.894" endtime="20201112 10:14:00.683" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:13:38.445" endtime="20201112 10:14:00.691"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.759" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:14:00.767" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:14:02.065" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:14:00.758" endtime="20201112 10:14:02.066"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.068" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:14:02.067" endtime="20201112 10:14:02.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.756" endtime="20201112 10:14:02.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:02.071" endtime="20201112 10:14:02.260"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.070" endtime="20201112 10:14:02.261"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.274" endtime="20201112 10:14:02.293"></status>
</kw>
<msg timestamp="20201112 10:14:02.293" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f09...</msg>
<status status="PASS" starttime="20201112 10:14:02.272" endtime="20201112 10:14:02.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.296" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f09...</msg>
<status status="PASS" starttime="20201112 10:14:02.294" endtime="20201112 10:14:02.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.299" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:02.297" endtime="20201112 10:14:02.300"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:02.270" endtime="20201112 10:14:02.300"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:02.267" endtime="20201112 10:14:02.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.266" endtime="20201112 10:14:02.301"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:02.306" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:02.304" endtime="20201112 10:14:02.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.302" endtime="20201112 10:14:02.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.265" endtime="20201112 10:14:02.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.265" endtime="20201112 10:14:02.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.308" endtime="20201112 10:14:02.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.263" endtime="20201112 10:14:02.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.311" endtime="20201112 10:14:02.313"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.262" endtime="20201112 10:14:02.313"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.755" endtime="20201112 10:14:02.314"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:02.320" endtime="20201112 10:14:02.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.318" endtime="20201112 10:14:02.340"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.353" endtime="20201112 10:14:02.372"></status>
</kw>
<msg timestamp="20201112 10:14:02.373" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.352" endtime="20201112 10:14:02.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.376" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.374" endtime="20201112 10:14:02.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.380" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:02.377" endtime="20201112 10:14:02.380"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:02.349" endtime="20201112 10:14:02.381"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:02.347" endtime="20201112 10:14:02.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.345" endtime="20201112 10:14:02.382"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:02.386" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:02.385" endtime="20201112 10:14:02.386"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.383" endtime="20201112 10:14:02.386"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.345" endtime="20201112 10:14:02.386"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.344" endtime="20201112 10:14:02.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.387" endtime="20201112 10:14:02.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.342" endtime="20201112 10:14:02.390"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.341" endtime="20201112 10:14:02.390"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.317" endtime="20201112 10:14:02.390"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.402" endtime="20201112 10:14:02.417"></status>
</kw>
<msg timestamp="20201112 10:14:02.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.400" endtime="20201112 10:14:02.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.418" endtime="20201112 10:14:02.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.421" endtime="20201112 10:14:02.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.396" endtime="20201112 10:14:02.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.394" endtime="20201112 10:14:02.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.431" endtime="20201112 10:14:02.720"></status>
</kw>
<msg timestamp="20201112 10:14:02.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074367333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074371917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:02.429" endtime="20201112 10:14:02.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074367333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074371917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:02.725" endtime="20201112 10:14:02.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.733" endtime="20201112 10:14:02.735"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.426" endtime="20201112 10:14:02.735"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.424" endtime="20201112 10:14:02.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:02.740" level="INFO">${RESULT} = [{'time': 0.074371917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.58400000000192e-06, 'source_diff': 4.58400000000192e-06}, {'time': 0.074389667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:02.737" endtime="20201112 10:14:02.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:02.754" level="INFO">${ACCURACY} = {'time': [0.074371917, 0.074389667, 0.074403583, 0.074417681, 0.074429819, 0.074441569, 0.074459611, 0.074475653, 0.074485403, 0.074505944, 0.074521861, 0.074537403, 0.074555875, 0.074567625, 0.074581...</msg>
<status status="PASS" starttime="20201112 10:14:02.741" endtime="20201112 10:14:02.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.760" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 10:14:02.758" endtime="20201112 10:14:02.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.762" level="INFO">VALUE: [4.58400000000192e-06, 4.58400000000192e-06, 4.568999999995937e-06, 4.597999999994551e-06, 3.957999999998352e-06, 4.568999999995937e-06, 3.2919999999880822e-06, 3.306000000008469e-06, 4.58400000000192e-06, 5.208000000006541e-06, 4.596999999995077e-06, 3.3890000000064147e-06, 3.971999999990983e-06, 4.568999999995937e-06, 5.124999999994717e-06, 5.152000000008261e-06, 3.971999999990983e-06, 4.513999999997131e-06, 3.9720000000048605e-06, 3.374999999999906e-06, 4.583000000002446e-06, 4.58400000000192e-06, 4.58400000000192e-06, 3.957999999998352e-06, 4.583000000002446e-06, 3.9720000000048605e-06, 4.5829999999885684e-06, 4.569000000009815e-06, 3.9030000000134235e-06, 4.58400000000192e-06, 3.374999999999906e-06, 3.360999999993397e-06, 3.9720000000048605e-06, 4.58400000000192e-06, 3.374999999999906e-06, 5.180999999992997e-06, 5.111000000002086e-06, 3.9720000000048605e-06, 3.9170000000060545e-06, 4.624999999994217e-06, 3.388999999992537e-06, 4.598000000008429e-06, 3.958999999997825e-06, 4.5829999999885684e-06, 4.598000000008429e-06, 4.000000000004e-06, 4.569999999995411e-06, 3.416000000006081e-06, 4.583000000002446e-06, 3.374999999999906e-06]</msg>
<status status="PASS" starttime="20201112 10:14:02.761" endtime="20201112 10:14:02.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.755" endtime="20201112 10:14:02.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.766" endtime="20201112 10:14:02.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:02.769" endtime="20201112 10:14:02.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.768" endtime="20201112 10:14:02.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.764" endtime="20201112 10:14:02.790"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.392" endtime="20201112 10:14:02.790"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.392" endtime="20201112 10:14:02.790"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.799" endtime="20201112 10:14:02.814"></status>
</kw>
<msg timestamp="20201112 10:14:02.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.798" endtime="20201112 10:14:02.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.816" endtime="20201112 10:14:02.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.819" endtime="20201112 10:14:02.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.795" endtime="20201112 10:14:02.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.793" endtime="20201112 10:14:02.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.828" endtime="20201112 10:14:03.114"></status>
</kw>
<msg timestamp="20201112 10:14:03.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023710944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023716125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:02.826" endtime="20201112 10:14:03.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023710944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023716125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.118" endtime="20201112 10:14:03.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.127" endtime="20201112 10:14:03.128"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.824" endtime="20201112 10:14:03.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.822" endtime="20201112 10:14:03.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:03.134" level="INFO">${RESULT} = [{'time': 0.023716125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.023733972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:03.130" endtime="20201112 10:14:03.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:03.160" level="INFO">${ACCURACY} = {'time': [0.023716125, 0.023733972, 0.023754542, 0.023766278, 0.023786056, 0.023800181, 0.023812431, 0.02382825, 0.023840486, 0.023854167, 0.023876333, 0.023890181, 0.023908167, 0.023926194, 0.0239463...</msg>
<status status="PASS" starttime="20201112 10:14:03.135" endtime="20201112 10:14:03.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.165" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 10:14:03.164" endtime="20201112 10:14:03.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.168" level="INFO">VALUE: [5.180999999999936e-06, 5.180000000000462e-06, 6.388999999999007e-06, 6.360999999999867e-06, 6.431000000001186e-06, 7.000000000000062e-06, 7.083999999997481e-06, 6.4029999999985765e-06, 6.417000000001616e-06, 5.1949999999995056e-06, 6.972000000000922e-06, 7.013999999999632e-06, 7.000000000000062e-06, 5.180000000000462e-06, 5.777000000001947e-06, 6.374999999999437e-06, 5.096999999999047e-06, 5.194000000000032e-06, 5.7779999999979514e-06, 6.388999999999007e-06, 7.055000000002337e-06, 7.000000000000062e-06, 5.8329999999967574e-06, 6.4029999999985765e-06, 6.388999999999007e-06, 6.417000000001616e-06, 5.180999999999936e-06, 7.0279999999992016e-06, 5.778000000001421e-06, 7.000000000000062e-06, 5.805000000001087e-06, 5.861000000002836e-06, 6.388999999999007e-06, 5.1949999999995056e-06, 7.000000000000062e-06, 7.000000000000062e-06, 5.207999999999602e-06, 5.792000000000991e-06, 7.0279999999992016e-06, 7.000000000000062e-06, 5.792000000000991e-06, 7.000000000000062e-06, 6.388999999999007e-06, 5.778000000001421e-06, 6.401999999999103e-06, 7.000000000000062e-06, 5.791000000001517e-06, 5.180000000000462e-06, 5.735999999999242e-06, 5.846999999999797e-06]</msg>
<status status="PASS" starttime="20201112 10:14:03.166" endtime="20201112 10:14:03.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.161" endtime="20201112 10:14:03.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.171" endtime="20201112 10:14:03.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:03.175" endtime="20201112 10:14:03.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.173" endtime="20201112 10:14:03.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.169" endtime="20201112 10:14:03.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.791" endtime="20201112 10:14:03.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.791" endtime="20201112 10:14:03.196"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.205" endtime="20201112 10:14:03.220"></status>
</kw>
<msg timestamp="20201112 10:14:03.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.203" endtime="20201112 10:14:03.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.221" endtime="20201112 10:14:03.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.224" endtime="20201112 10:14:03.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.200" endtime="20201112 10:14:03.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.198" endtime="20201112 10:14:03.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.234" endtime="20201112 10:14:03.521"></status>
</kw>
<msg timestamp="20201112 10:14:03.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022591958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.233" endtime="20201112 10:14:03.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022591958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.525" endtime="20201112 10:14:03.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.533" endtime="20201112 10:14:03.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.230" endtime="20201112 10:14:03.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.228" endtime="20201112 10:14:03.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:03.541" level="INFO">${RESULT} = [{'time': 0.022591958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.221999999998703e-06, 'source_diff': 8.221999999998703e-06}, {'time': 0.022612319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:03.537" endtime="20201112 10:14:03.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:03.555" level="INFO">${ACCURACY} = {'time': [0.022591958, 0.022612319, 0.022630028, 0.022648417, 0.022668, 0.022690097, 0.022706319, 0.022728306, 0.022742083, 0.022766236, 0.022782056, 0.022800375, 0.022822139, 0.022840181, 0.022856333...</msg>
<status status="PASS" starttime="20201112 10:14:03.542" endtime="20201112 10:14:03.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.560" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 10:14:03.558" endtime="20201112 10:14:03.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.562" level="INFO">VALUE: [8.221999999998703e-06, 8.207999999999133e-06, 8.208999999998606e-06, 8.209000000002076e-06, 8.264000000000882e-06, 8.805000000000618e-06, 8.166000000000423e-06, 8.833999999999231e-06, 8.805000000000618e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.832999999999758e-06, 7.611000000001117e-06, 8.195000000002506e-06, 8.819000000000188e-06, 8.792000000000522e-06, 8.819999999999661e-06, 7.597999999997551e-06, 8.194999999999036e-06, 7.582999999998508e-06, 7.000000000000062e-06, 8.235999999998272e-06, 7.584000000001451e-06, 7.6120000000005905e-06, 8.179999999999993e-06, 8.763999999997912e-06, 7.582999999998508e-06, 7.598000000001021e-06, 8.832999999999758e-06, 8.819000000000188e-06, 7.013999999999632e-06, 7.554999999999368e-06, 9.416999999997677e-06, 8.193999999999563e-06, 8.778000000000952e-06, 8.207999999999133e-06, 8.764000000001382e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.221999999998703e-06, 8.805000000000618e-06, 8.819999999999661e-06, 8.207999999999133e-06, 7.597999999997551e-06, 7.583999999997981e-06, 8.874999999998467e-06, 8.222000000002172e-06, 8.222999999998176e-06, 8.806000000000092e-06, 8.207999999999133e-06]</msg>
<status status="PASS" starttime="20201112 10:14:03.561" endtime="20201112 10:14:03.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.556" endtime="20201112 10:14:03.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.566" endtime="20201112 10:14:03.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:03.569" endtime="20201112 10:14:03.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.567" endtime="20201112 10:14:03.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.564" endtime="20201112 10:14:03.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.196" endtime="20201112 10:14:03.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.196" endtime="20201112 10:14:03.590"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.599" endtime="20201112 10:14:03.613"></status>
</kw>
<msg timestamp="20201112 10:14:03.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.597" endtime="20201112 10:14:03.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.615" endtime="20201112 10:14:03.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.618" endtime="20201112 10:14:03.620"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.595" endtime="20201112 10:14:03.621"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.593" endtime="20201112 10:14:03.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.628" endtime="20201112 10:14:03.913"></status>
</kw>
<msg timestamp="20201112 10:14:03.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022407653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.626" endtime="20201112 10:14:03.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022407653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.917" endtime="20201112 10:14:03.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.926" endtime="20201112 10:14:03.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.624" endtime="20201112 10:14:03.929"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.622" endtime="20201112 10:14:03.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:03.933" level="INFO">${RESULT} = [{'time': 0.022407653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.022427417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:03.930" endtime="20201112 10:14:03.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:03.949" level="INFO">${ACCURACY} = {'time': [0.022407653, 0.022427417, 0.022445375, 0.022471819, 0.022489792, 0.022513319, 0.022537417, 0.022557597, 0.022583569, 0.022601528, 0.022621431, 0.022637625, 0.02266375, 0.02268575, 0.02270147...</msg>
<status status="PASS" starttime="20201112 10:14:03.934" endtime="20201112 10:14:03.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.953" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 10:14:03.952" endtime="20201112 10:14:03.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.956" level="INFO">VALUE: [9.388999999998537e-06, 9.417000000001147e-06, 1.0541999999998802e-05, 1.1277000000000509e-05, 1.0014000000002632e-05, 1.0026999999999259e-05, 9.431000000000717e-06, 1.0027999999998732e-05, 1.0625000000000218e-05, 1.0638999999999788e-05, 9.417000000001147e-06, 1.0014000000002632e-05, 1.0625000000000218e-05, 1.0652999999999357e-05, 9.430000000001243e-06, 9.986000000000023e-06, 9.416000000001673e-06, 1.1237000000000746e-05, 1.0666999999998927e-05, 1.0026999999999259e-05, 9.360999999999398e-06, 9.402999999998107e-06, 1.0026999999999259e-05, 9.402999999998107e-06, 1.0625000000000218e-05, 1.0638999999999788e-05, 1.0055999999997872e-05, 1.0638000000000314e-05, 1.0652999999999357e-05, 9.416999999997677e-06, 1.0014000000002632e-05, 1.0625000000000218e-05, 9.986000000000023e-06, 1.1221999999998233e-05, 1.1179999999999524e-05, 1.0625000000000218e-05, 1.0611000000000648e-05, 9.416000000001673e-06, 9.417000000001147e-06, 1.0027999999998732e-05, 9.402999999998107e-06, 1.1223000000001176e-05, 1.0027000000002728e-05, 9.417000000001147e-06, 1.0597000000001078e-05, 1.0068999999997968e-05, 9.417000000001147e-06, 1.0596999999997608e-05, 9.471999999999953e-06, 1.0625000000000218e-05]</msg>
<status status="PASS" starttime="20201112 10:14:03.954" endtime="20201112 10:14:03.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.950" endtime="20201112 10:14:03.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.959" endtime="20201112 10:14:03.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:03.963" endtime="20201112 10:14:03.982"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.961" endtime="20201112 10:14:03.983"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.957" endtime="20201112 10:14:03.983"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.591" endtime="20201112 10:14:03.984"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.590" endtime="20201112 10:14:03.984"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.993" endtime="20201112 10:14:04.008"></status>
</kw>
<msg timestamp="20201112 10:14:04.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.991" endtime="20201112 10:14:04.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.010" endtime="20201112 10:14:04.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.012" endtime="20201112 10:14:04.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.988" endtime="20201112 10:14:04.016"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.986" endtime="20201112 10:14:04.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.023" endtime="20201112 10:14:04.310"></status>
</kw>
<msg timestamp="20201112 10:14:04.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022355528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022367986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.021" endtime="20201112 10:14:04.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022355528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022367986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.314" endtime="20201112 10:14:04.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.323" endtime="20201112 10:14:04.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.018" endtime="20201112 10:14:04.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.017" endtime="20201112 10:14:04.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:04.330" level="INFO">${RESULT} = [{'time': 0.022367986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2457999999999914e-05, 'source_diff': 1.2457999999999914e-05}, {'time': 0.0223875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:04.326" endtime="20201112 10:14:04.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:04.344" level="INFO">${ACCURACY} = {'time': [0.022367986, 0.0223875, 0.022409389, 0.022433875, 0.022456014, 0.022483667, 0.02250775, 0.022527639, 0.022545847, 0.022571611, 0.022589472, 0.022615681, 0.022639667, 0.022665708, 0.022687625...</msg>
<status status="PASS" starttime="20201112 10:14:04.331" endtime="20201112 10:14:04.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.349" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 10:14:04.348" endtime="20201112 10:14:04.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.351" level="INFO">VALUE: [1.2457999999999914e-05, 1.1889000000001038e-05, 1.2430999999996778e-05, 1.2471999999999483e-05, 1.2513999999998193e-05, 1.3041999999997833e-05, 1.2431000000000247e-05, 1.2985999999999553e-05, 1.3041000000001829e-05, 1.2429999999997304e-05, 1.1778000000000483e-05, 1.3041999999997833e-05, 1.1833999999998762e-05, 1.302699999999879e-05, 1.3083000000000539e-05, 1.1221999999998233e-05, 1.1833000000002758e-05, 1.3042000000001303e-05, 1.3055000000001399e-05, 1.2430000000000774e-05, 1.2958000000000414e-05, 1.1834000000002232e-05, 1.2402999999997638e-05, 1.1222000000001703e-05, 1.2360999999998928e-05, 1.1819999999999192e-05, 1.3042000000001303e-05, 1.1832999999999289e-05, 1.1833999999998762e-05, 1.3041000000001829e-05, 1.2429999999997304e-05, 1.1805999999999622e-05, 1.1832999999999289e-05, 1.2457999999999914e-05, 1.2431000000000247e-05, 1.1832999999999289e-05, 1.2431000000000247e-05, 1.1847999999998332e-05, 1.2444000000000344e-05, 1.2444999999999817e-05, 1.1236000000001273e-05, 1.304099999999836e-05, 1.2431000000000247e-05, 1.1832999999999289e-05, 1.1847000000002328e-05, 1.1846999999998858e-05, 1.1860999999998428e-05, 1.2499999999998623e-05, 1.1221999999998233e-05, 1.3055000000001399e-05]</msg>
<status status="PASS" starttime="20201112 10:14:04.350" endtime="20201112 10:14:04.352"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.345" endtime="20201112 10:14:04.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.355" endtime="20201112 10:14:04.356"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:04.358" endtime="20201112 10:14:04.378"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.357" endtime="20201112 10:14:04.378"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.353" endtime="20201112 10:14:04.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.985" endtime="20201112 10:14:04.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.984" endtime="20201112 10:14:04.379"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.388" endtime="20201112 10:14:04.403"></status>
</kw>
<msg timestamp="20201112 10:14:04.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.386" endtime="20201112 10:14:04.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.405" endtime="20201112 10:14:04.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.408" endtime="20201112 10:14:04.411"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.384" endtime="20201112 10:14:04.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.382" endtime="20201112 10:14:04.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.419" endtime="20201112 10:14:04.705"></status>
</kw>
<msg timestamp="20201112 10:14:04.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022205611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022220472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.417" endtime="20201112 10:14:04.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022205611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022220472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.710" endtime="20201112 10:14:04.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.718" endtime="20201112 10:14:04.720"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.415" endtime="20201112 10:14:04.721"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.413" endtime="20201112 10:14:04.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:04.725" level="INFO">${RESULT} = [{'time': 0.022220472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4861000000001429e-05, 'source_diff': 1.4861000000001429e-05}, {'time': 0.022241097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:04.722" endtime="20201112 10:14:04.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:04.740" level="INFO">${ACCURACY} = {'time': [0.022220472, 0.022241097, 0.022262708, 0.022288736, 0.022308569, 0.022334889, 0.022357042, 0.022376792, 0.022396917, 0.022420806, 0.022446833, 0.022466764, 0.022490847, 0.022516819, 0.022542...</msg>
<status status="PASS" starttime="20201112 10:14:04.726" endtime="20201112 10:14:04.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.744" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 10:14:04.743" endtime="20201112 10:14:04.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.747" level="INFO">VALUE: [1.4861000000001429e-05, 1.429099999999961e-05, 1.3651999999999415e-05, 1.4791999999999583e-05, 1.3680000000002024e-05, 1.483299999999882e-05, 1.5486000000002054e-05, 1.4263999999999943e-05, 1.3638999999999318e-05, 1.3709000000000637e-05, 1.4263999999999943e-05, 1.4277999999999513e-05, 1.4263999999999943e-05, 1.3651999999999415e-05, 1.3652999999998888e-05, 1.4861000000001429e-05, 1.4861000000001429e-05, 1.4847000000001859e-05, 1.3624999999999748e-05, 1.3652999999998888e-05, 1.4250000000000373e-05, 1.3638999999999318e-05, 1.3653000000002358e-05, 1.305499999999793e-05, 1.486099999999796e-05, 1.4250000000000373e-05, 1.4236000000000804e-05, 1.3638999999999318e-05, 1.486099999999796e-05, 1.4903000000000138e-05, 1.5457999999999444e-05, 1.4236000000000804e-05, 1.486099999999796e-05, 1.486099999999796e-05, 1.486099999999796e-05, 1.4263999999999943e-05, 1.4861000000001429e-05, 1.3652999999998888e-05, 1.484699999999839e-05, 1.4250000000000373e-05, 1.3652000000002884e-05, 1.484699999999839e-05, 1.3652999999998888e-05, 1.3637999999999845e-05, 1.4236000000000804e-05, 1.4207999999998194e-05, 1.484699999999839e-05, 1.486099999999796e-05, 1.4277999999999513e-05, 1.4207999999998194e-05]</msg>
<status status="PASS" starttime="20201112 10:14:04.745" endtime="20201112 10:14:04.747"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.741" endtime="20201112 10:14:04.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.750" endtime="20201112 10:14:04.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:04.754" endtime="20201112 10:14:04.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.752" endtime="20201112 10:14:04.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.748" endtime="20201112 10:14:04.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.380" endtime="20201112 10:14:04.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.379" endtime="20201112 10:14:04.775"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.784" endtime="20201112 10:14:04.799"></status>
</kw>
<msg timestamp="20201112 10:14:04.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.782" endtime="20201112 10:14:04.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.801" endtime="20201112 10:14:04.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.803" endtime="20201112 10:14:04.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.779" endtime="20201112 10:14:04.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.777" endtime="20201112 10:14:04.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.814" endtime="20201112 10:14:05.101"></status>
</kw>
<msg timestamp="20201112 10:14:05.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022239458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.812" endtime="20201112 10:14:05.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022239458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022256722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.106" endtime="20201112 10:14:05.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.114" endtime="20201112 10:14:05.116"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.809" endtime="20201112 10:14:05.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.808" endtime="20201112 10:14:05.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:05.122" level="INFO">${RESULT} = [{'time': 0.022256722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7263999999999474e-05, 'source_diff': 1.7263999999999474e-05}, {'time': 0.022288306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:05.118" endtime="20201112 10:14:05.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:05.136" level="INFO">${ACCURACY} = {'time': [0.022256722, 0.022288306, 0.022314514, 0.022338694, 0.022366653, 0.022388667, 0.022418611, 0.022446792, 0.0224745, 0.022502167, 0.022526403, 0.022548417, 0.022572236, 0.022596542, 0.02262276...</msg>
<status status="PASS" starttime="20201112 10:14:05.123" endtime="20201112 10:14:05.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.140" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 10:14:05.139" endtime="20201112 10:14:05.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.143" level="INFO">VALUE: [1.7263999999999474e-05, 1.6069999999999973e-05, 1.6695000000000598e-05, 1.604099999999789e-05, 1.5458999999998918e-05, 1.668100000000103e-05, 1.7292000000002083e-05, 1.7348000000000363e-05, 1.5458000000002914e-05, 1.666700000000146e-05, 1.6069999999999973e-05, 1.668100000000103e-05, 1.666699999999799e-05, 1.5473000000001957e-05, 1.6056000000000403e-05, 1.666699999999799e-05, 1.6042000000000833e-05, 1.7334000000000793e-05, 1.668100000000103e-05, 1.6651999999998945e-05, 1.6666000000001985e-05, 1.5513999999997724e-05, 1.666700000000146e-05, 1.608300000000007e-05, 1.7277999999999044e-05, 1.609699999999964e-05, 1.5443999999999874e-05, 1.60690000000005e-05, 1.7292000000002083e-05, 1.5443999999999874e-05, 1.60690000000005e-05, 1.7222000000000764e-05, 1.6722000000000264e-05, 1.6709000000000168e-05, 1.5471999999999014e-05, 1.727699999999957e-05, 1.6652000000002415e-05, 1.7264000000002944e-05, 1.665299999999842e-05, 1.5457999999999444e-05, 1.5457999999999444e-05, 1.6069999999999973e-05, 1.5457999999999444e-05, 1.6083999999999543e-05, 1.6679999999998085e-05, 1.663900000000232e-05, 1.613900000000182e-05, 1.666700000000146e-05, 1.5458999999998918e-05, 1.6749999999999404e-05]</msg>
<status status="PASS" starttime="20201112 10:14:05.141" endtime="20201112 10:14:05.143"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.137" endtime="20201112 10:14:05.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.146" endtime="20201112 10:14:05.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:05.150" endtime="20201112 10:14:05.169"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.148" endtime="20201112 10:14:05.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.144" endtime="20201112 10:14:05.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.775" endtime="20201112 10:14:05.171"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.775" endtime="20201112 10:14:05.171"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.180" endtime="20201112 10:14:05.195"></status>
</kw>
<msg timestamp="20201112 10:14:05.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.179" endtime="20201112 10:14:05.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.197" endtime="20201112 10:14:05.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.200" endtime="20201112 10:14:05.202"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.176" endtime="20201112 10:14:05.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.173" endtime="20201112 10:14:05.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.210" endtime="20201112 10:14:05.496"></status>
</kw>
<msg timestamp="20201112 10:14:05.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022879306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.208" endtime="20201112 10:14:05.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022879306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.500" endtime="20201112 10:14:05.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.509" endtime="20201112 10:14:05.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.206" endtime="20201112 10:14:05.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.204" endtime="20201112 10:14:05.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:05.516" level="INFO">${RESULT} = [{'time': 0.022879306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9083999999999074e-05, 'source_diff': 1.9083999999999074e-05}, {'time': 0.022907403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:05.512" endtime="20201112 10:14:05.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:05.531" level="INFO">${ACCURACY} = {'time': [0.022879306, 0.022907403, 0.022935278, 0.02296925, 0.022997194, 0.023025264, 0.023049278, 0.023079236, 0.023113486, 0.023143083, 0.023170972, 0.023201528, 0.023227111, 0.023261583, 0.0232870...</msg>
<status status="PASS" starttime="20201112 10:14:05.517" endtime="20201112 10:14:05.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.536" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 10:14:05.535" endtime="20201112 10:14:05.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.538" level="INFO">VALUE: [1.9083999999999074e-05, 1.9014000000001224e-05, 1.787500000000053e-05, 1.8471999999998545e-05, 1.909699999999917e-05, 1.90829999999996e-05, 1.8500000000001154e-05, 1.8471999999998545e-05, 1.909699999999917e-05, 1.7263999999999474e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.7250000000003374e-05, 1.912499999999831e-05, 1.8486000000001584e-05, 1.8457999999998975e-05, 1.7263999999999474e-05, 1.7320000000001223e-05, 1.8458000000002445e-05, 1.78890000000001e-05, 1.8457999999998975e-05, 1.7277999999999044e-05, 1.845900000000192e-05, 1.906900000000003e-05, 1.7264000000002944e-05, 1.784699999999792e-05, 1.906900000000003e-05, 1.7263999999999474e-05, 1.8429999999999835e-05, 1.7236000000000334e-05, 1.7278000000002514e-05, 1.9083999999999074e-05, 1.786100000000096e-05, 1.727699999999957e-05, 1.787500000000053e-05, 1.8443999999999405e-05, 1.7848000000000863e-05, 1.7277999999999044e-05, 1.9112000000001683e-05, 1.7277999999999044e-05, 1.8486000000001584e-05, 1.906900000000003e-05, 1.911099999999874e-05, 1.9084000000002543e-05, 1.7263999999999474e-05, 1.90829999999996e-05, 1.906900000000003e-05, 1.786099999999749e-05, 1.8485999999998115e-05, 1.9014000000001224e-05]</msg>
<status status="PASS" starttime="20201112 10:14:05.537" endtime="20201112 10:14:05.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.532" endtime="20201112 10:14:05.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.542" endtime="20201112 10:14:05.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:05.546" endtime="20201112 10:14:05.565"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.543" endtime="20201112 10:14:05.566"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.540" endtime="20201112 10:14:05.566"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.172" endtime="20201112 10:14:05.566"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.171" endtime="20201112 10:14:05.566"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.575" endtime="20201112 10:14:05.591"></status>
</kw>
<msg timestamp="20201112 10:14:05.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.574" endtime="20201112 10:14:05.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.592" endtime="20201112 10:14:05.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.595" endtime="20201112 10:14:05.598"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.571" endtime="20201112 10:14:05.598"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.569" endtime="20201112 10:14:05.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.605" endtime="20201112 10:14:05.892"></status>
</kw>
<msg timestamp="20201112 10:14:05.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022321083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.604" endtime="20201112 10:14:05.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022321083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.897" endtime="20201112 10:14:05.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.905" endtime="20201112 10:14:05.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.601" endtime="20201112 10:14:05.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.599" endtime="20201112 10:14:05.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:05.912" level="INFO">${RESULT} = [{'time': 0.022321083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0901999999999726e-05, 'source_diff': 2.0901999999999726e-05}, {'time': 0.022346958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:05.909" endtime="20201112 10:14:05.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:05.926" level="INFO">${ACCURACY} = {'time': [0.022321083, 0.022346958, 0.022383361, 0.022411319, 0.022444931, 0.022475444, 0.022505208, 0.022538903, 0.022573444, 0.022607111, 0.022633139, 0.022661042, 0.022691111, 0.022717417, 0.022751...</msg>
<status status="PASS" starttime="20201112 10:14:05.913" endtime="20201112 10:14:05.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.931" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 10:14:05.930" endtime="20201112 10:14:05.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.933" level="INFO">VALUE: [2.0901999999999726e-05, 2.088899999999963e-05, 2.087500000000006e-05, 2.029099999999867e-05, 2.091700000000224e-05, 1.9721999999999795e-05, 2.029099999999867e-05, 1.969500000000013e-05, 1.9708000000000225e-05, 1.9679999999997616e-05, 1.966700000000099e-05, 2.088899999999963e-05, 1.9694000000000655e-05, 1.968100000000056e-05, 2.09029999999992e-05, 1.9763999999998505e-05, 2.1500000000000685e-05, 2.09029999999992e-05, 2.09029999999992e-05, 1.968100000000056e-05, 1.969500000000013e-05, 1.9708000000000225e-05, 1.9680000000001086e-05, 1.9708000000000225e-05, 2.088899999999963e-05, 2.084699999999745e-05, 2.029100000000214e-05, 2.0888000000000156e-05, 2.083300000000135e-05, 1.965300000000142e-05, 1.968100000000056e-05, 2.0306000000001184e-05, 2.033300000000085e-05, 2.0277999999998575e-05, 2.09029999999992e-05, 1.9694000000000655e-05, 1.97089999999997e-05, 2.09029999999992e-05, 2.0222000000000295e-05, 2.0208000000000725e-05, 2.0901999999999726e-05, 1.9680000000001086e-05, 1.969500000000013e-05, 2.0916000000002766e-05, 1.9680000000001086e-05, 2.0263999999999005e-05, 1.962500000000228e-05, 2.036099999999999e-05, 1.908300000000307e-05, 2.0277999999998575e-05]</msg>
<status status="PASS" starttime="20201112 10:14:05.932" endtime="20201112 10:14:05.934"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.927" endtime="20201112 10:14:05.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.937" endtime="20201112 10:14:05.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:05.941" endtime="20201112 10:14:05.960"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.939" endtime="20201112 10:14:05.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.935" endtime="20201112 10:14:05.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.567" endtime="20201112 10:14:05.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.567" endtime="20201112 10:14:05.962"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.971" endtime="20201112 10:14:05.987"></status>
</kw>
<msg timestamp="20201112 10:14:05.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.969" endtime="20201112 10:14:05.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.989" endtime="20201112 10:14:05.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.991" endtime="20201112 10:14:05.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.966" endtime="20201112 10:14:05.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.964" endtime="20201112 10:14:05.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.002" endtime="20201112 10:14:06.288"></status>
</kw>
<msg timestamp="20201112 10:14:06.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023046319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023069014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.000" endtime="20201112 10:14:06.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023046319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023069014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.292" endtime="20201112 10:14:06.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.301" endtime="20201112 10:14:06.303"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.997" endtime="20201112 10:14:06.303"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.996" endtime="20201112 10:14:06.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:06.308" level="INFO">${RESULT} = [{'time': 0.023069014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.269499999999966e-05, 'source_diff': 2.269499999999966e-05}, {'time': 0.023097014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:06.304" endtime="20201112 10:14:06.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:06.322" level="INFO">${ACCURACY} = {'time': [0.023069014, 0.023097014, 0.023129056, 0.023159236, 0.023191014, 0.023218681, 0.023253125, 0.023282819, 0.023314861, 0.023347125, 0.023384792, 0.023412847, 0.023447167, 0.023474833, 0.023506...</msg>
<status status="PASS" starttime="20201112 10:14:06.309" endtime="20201112 10:14:06.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.327" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 10:14:06.326" endtime="20201112 10:14:06.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.329" level="INFO">VALUE: [2.269499999999966e-05, 2.1500000000000685e-05, 2.270899999999923e-05, 2.1500000000000685e-05, 2.208299999999913e-05, 2.148700000000059e-05, 2.20969999999987e-05, 2.152700000000035e-05, 2.155499999999949e-05, 2.1500000000000685e-05, 2.215300000000045e-05, 2.211100000000174e-05, 2.3320000000000285e-05, 2.1500000000000685e-05, 2.1514000000000255e-05, 2.3292000000001145e-05, 2.1514000000000255e-05, 2.2694000000000186e-05, 2.2721999999999326e-05, 2.211099999999827e-05, 2.3320000000000285e-05, 2.1514000000000255e-05, 2.212500000000131e-05, 2.27229999999988e-05, 2.212499999999784e-05, 2.27229999999988e-05, 2.1500000000000685e-05, 2.2721999999999326e-05, 2.331900000000081e-05, 2.2112000000001214e-05, 2.2707999999999756e-05, 2.1471999999998076e-05, 2.211099999999827e-05, 2.2708000000003226e-05, 2.1499999999997216e-05, 2.2721999999999326e-05, 2.212499999999784e-05, 2.1527999999999825e-05, 2.1500000000000685e-05, 2.3306000000000715e-05, 2.212499999999784e-05, 2.211100000000174e-05, 2.2721999999999326e-05, 2.1514000000000255e-05, 2.1527999999999825e-05, 2.211100000000174e-05, 2.209700000000217e-05, 2.20969999999987e-05, 2.268100000000009e-05, 2.1500000000000685e-05]</msg>
<status status="PASS" starttime="20201112 10:14:06.328" endtime="20201112 10:14:06.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.323" endtime="20201112 10:14:06.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.333" endtime="20201112 10:14:06.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:06.337" endtime="20201112 10:14:06.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.335" endtime="20201112 10:14:06.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.331" endtime="20201112 10:14:06.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.963" endtime="20201112 10:14:06.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.962" endtime="20201112 10:14:06.357"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.367" endtime="20201112 10:14:06.382"></status>
</kw>
<msg timestamp="20201112 10:14:06.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.365" endtime="20201112 10:14:06.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.384" endtime="20201112 10:14:06.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.386" endtime="20201112 10:14:06.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.362" endtime="20201112 10:14:06.390"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.360" endtime="20201112 10:14:06.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.397" endtime="20201112 10:14:06.684"></status>
</kw>
<msg timestamp="20201112 10:14:06.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022795639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.395" endtime="20201112 10:14:06.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022795639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.688" endtime="20201112 10:14:06.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.697" endtime="20201112 10:14:06.698"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.393" endtime="20201112 10:14:06.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.391" endtime="20201112 10:14:06.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:06.704" level="INFO">${RESULT} = [{'time': 0.022819542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.39030000000022e-05, 'source_diff': 2.39030000000022e-05}, {'time': 0.022858069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:06.700" endtime="20201112 10:14:06.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:06.718" level="INFO">${ACCURACY} = {'time': [0.022819542, 0.022858069, 0.022893667, 0.022925792, 0.022955764, 0.02298975, 0.023021542, 0.023059639, 0.023097903, 0.023127556, 0.023159792, 0.02319575, 0.023229958, 0.023261597, 0.02329166...</msg>
<status status="PASS" starttime="20201112 10:14:06.705" endtime="20201112 10:14:06.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.722" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 10:14:06.721" endtime="20201112 10:14:06.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.725" level="INFO">VALUE: [2.39030000000022e-05, 2.4513000000000312e-05, 2.387499999999959e-05, 2.512500000000084e-05, 2.3235999999999396e-05, 2.515299999999998e-05, 2.3291999999997676e-05, 2.386100000000002e-05, 2.390299999999873e-05, 2.3333999999999855e-05, 2.39169999999983e-05, 2.512500000000084e-05, 2.4513999999999786e-05, 2.3318999999997342e-05, 2.4569999999998066e-05, 2.390299999999873e-05, 2.3916000000002297e-05, 2.511100000000127e-05, 2.4513000000000312e-05, 2.4500000000000216e-05, 2.512500000000084e-05, 2.3318999999997342e-05, 2.333300000000038e-05, 2.391700000000177e-05, 2.4528000000002825e-05, 2.513900000000041e-05, 2.331900000000081e-05, 2.3901999999999257e-05, 2.4528000000002825e-05, 2.3915999999998827e-05, 2.3304999999997772e-05, 2.519499999999869e-05, 2.4556000000001965e-05, 2.4541999999998926e-05, 2.386100000000002e-05, 2.5111999999997275e-05, 2.50970000000017e-05, 2.4500000000000216e-05, 2.3320000000000285e-05, 2.393100000000134e-05, 2.50970000000017e-05, 2.4500000000000216e-05, 2.3916000000002297e-05, 2.4500000000000216e-05, 2.455500000000249e-05, 2.3901999999999257e-05, 2.513900000000041e-05, 2.386100000000002e-05, 2.333300000000038e-05, 2.4527999999999356e-05]</msg>
<status status="PASS" starttime="20201112 10:14:06.724" endtime="20201112 10:14:06.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.719" endtime="20201112 10:14:06.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.729" endtime="20201112 10:14:06.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:06.732" endtime="20201112 10:14:06.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.731" endtime="20201112 10:14:06.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.727" endtime="20201112 10:14:06.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.358" endtime="20201112 10:14:06.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.358" endtime="20201112 10:14:06.753"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.762" endtime="20201112 10:14:06.778"></status>
</kw>
<msg timestamp="20201112 10:14:06.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.761" endtime="20201112 10:14:06.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.780" endtime="20201112 10:14:06.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.783" endtime="20201112 10:14:06.785"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.758" endtime="20201112 10:14:06.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.756" endtime="20201112 10:14:06.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.793" endtime="20201112 10:14:07.079"></status>
</kw>
<msg timestamp="20201112 10:14:07.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022475264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.791" endtime="20201112 10:14:07.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022475264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022501583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.083" endtime="20201112 10:14:07.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.092" endtime="20201112 10:14:07.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.789" endtime="20201112 10:14:07.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.787" endtime="20201112 10:14:07.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:07.099" level="INFO">${RESULT} = [{'time': 0.022501583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6319000000000342e-05, 'source_diff': 2.6319000000000342e-05}, {'time': 0.022539917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:07.095" endtime="20201112 10:14:07.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:07.114" level="INFO">${ACCURACY} = {'time': [0.022501583, 0.022539917, 0.022577847, 0.022617597, 0.022655833, 0.022689722, 0.022731569, 0.022767903, 0.022801639, 0.022841597, 0.022877486, 0.022914042, 0.022947611, 0.022989722, 0.023029...</msg>
<status status="PASS" starttime="20201112 10:14:07.100" endtime="20201112 10:14:07.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.119" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 10:14:07.118" endtime="20201112 10:14:07.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.121" level="INFO">VALUE: [2.6319000000000342e-05, 2.6306000000000246e-05, 2.5750000000001466e-05, 2.6944000000000967e-05, 2.5721999999998857e-05, 2.5721999999998857e-05, 2.6332999999999912e-05, 2.6333999999999386e-05, 2.5735999999998427e-05, 2.690300000000173e-05, 2.5707999999999287e-05, 2.572299999999833e-05, 2.5735999999998427e-05, 2.6916000000001827e-05, 2.5082999999998662e-05, 2.634700000000295e-05, 2.5735999999998427e-05, 2.6332999999999912e-05, 2.6332999999999912e-05, 2.5735999999998427e-05, 2.69309999999974e-05, 2.6944000000000967e-05, 2.5792000000000176e-05, 2.569499999999919e-05, 2.5736000000001896e-05, 2.6332999999999912e-05, 2.6972000000000107e-05, 2.6333999999999386e-05, 2.6332999999999912e-05, 2.6332999999999912e-05, 2.5722000000002326e-05, 2.515299999999998e-05, 2.6333999999999386e-05, 2.5708000000002756e-05, 2.5736000000001896e-05, 2.5735999999998427e-05, 2.570900000000223e-05, 2.5735999999998427e-05, 2.6874999999999122e-05, 2.5735999999998427e-05, 2.5722000000002326e-05, 2.513900000000041e-05, 2.57230000000018e-05, 2.6319000000000342e-05, 2.6957999999997068e-05, 2.6319000000000342e-05, 2.5721999999998857e-05, 2.5736000000001896e-05, 2.691699999999783e-05, 2.5736000000001896e-05]</msg>
<status status="PASS" starttime="20201112 10:14:07.120" endtime="20201112 10:14:07.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.115" endtime="20201112 10:14:07.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.125" endtime="20201112 10:14:07.126"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:07.129" endtime="20201112 10:14:07.148"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.127" endtime="20201112 10:14:07.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.123" endtime="20201112 10:14:07.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.754" endtime="20201112 10:14:07.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.754" endtime="20201112 10:14:07.150"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.159" endtime="20201112 10:14:07.175"></status>
</kw>
<msg timestamp="20201112 10:14:07.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.157" endtime="20201112 10:14:07.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.176" endtime="20201112 10:14:07.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.179" endtime="20201112 10:14:07.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.154" endtime="20201112 10:14:07.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.152" endtime="20201112 10:14:07.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.189" endtime="20201112 10:14:07.475"></status>
</kw>
<msg timestamp="20201112 10:14:07.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022841167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022869903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.188" endtime="20201112 10:14:07.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022841167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022869903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.480" endtime="20201112 10:14:07.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.488" endtime="20201112 10:14:07.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.185" endtime="20201112 10:14:07.491"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.183" endtime="20201112 10:14:07.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:07.495" level="INFO">${RESULT} = [{'time': 0.022869903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8736000000001427e-05, 'source_diff': 2.8736000000001427e-05}, {'time': 0.022903681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:07.492" endtime="20201112 10:14:07.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:07.509" level="INFO">${ACCURACY} = {'time': [0.022869903, 0.022903681, 0.022941667, 0.022975722, 0.023013764, 0.023055528, 0.023091736, 0.023125889, 0.023159944, 0.023197875, 0.023237653, 0.023281694, 0.023319931, 0.023354083, 0.023393...</msg>
<status status="PASS" starttime="20201112 10:14:07.496" endtime="20201112 10:14:07.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.514" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 10:14:07.513" endtime="20201112 10:14:07.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.517" level="INFO">VALUE: [2.8736000000001427e-05, 2.7611999999999776e-05, 2.7555999999998027e-05, 2.7527999999998887e-05, 2.7541999999998457e-05, 2.69309999999974e-05, 2.7542000000001926e-05, 2.8152999999999512e-05, 2.7554999999998553e-05, 2.8764000000000567e-05, 2.8778000000000137e-05, 2.8735999999997958e-05, 2.7513999999999317e-05, 2.8165999999999608e-05, 2.7542000000001926e-05, 2.7597000000000732e-05, 2.7555000000002022e-05, 2.748699999999965e-05, 2.7556000000001496e-05, 2.8750000000000997e-05, 2.8138999999999942e-05, 2.7584000000000636e-05, 2.7542000000001926e-05, 2.9305999999999777e-05, 2.8152999999999512e-05, 2.816699999999908e-05, 2.7568999999998123e-05, 2.9347999999998486e-05, 2.8778000000000137e-05, 2.8750000000000997e-05, 2.8750000000000997e-05, 2.8764000000000567e-05, 2.8138999999999942e-05, 2.8152999999999512e-05, 2.7569000000001592e-05, 2.8138000000000468e-05, 2.8138999999999942e-05, 2.7514000000002786e-05, 2.7528000000002356e-05, 2.8735999999997958e-05, 2.7555999999998027e-05, 2.6944000000000967e-05, 2.7569999999997596e-05, 2.7556000000001496e-05, 2.8152999999999512e-05, 2.8750000000000997e-05, 2.748699999999965e-05, 2.7555999999998027e-05, 2.7556000000001496e-05, 2.8750000000000997e-05]</msg>
<status status="PASS" starttime="20201112 10:14:07.515" endtime="20201112 10:14:07.518"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.510" endtime="20201112 10:14:07.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.521" endtime="20201112 10:14:07.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:07.524" endtime="20201112 10:14:07.543"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.523" endtime="20201112 10:14:07.544"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.519" endtime="20201112 10:14:07.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.151" endtime="20201112 10:14:07.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.150" endtime="20201112 10:14:07.545"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.554" endtime="20201112 10:14:07.570"></status>
</kw>
<msg timestamp="20201112 10:14:07.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.552" endtime="20201112 10:14:07.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.572" endtime="20201112 10:14:07.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.574" endtime="20201112 10:14:07.577"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.550" endtime="20201112 10:14:07.577"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.548" endtime="20201112 10:14:07.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.585" endtime="20201112 10:14:07.871"></status>
</kw>
<msg timestamp="20201112 10:14:07.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022362458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.583" endtime="20201112 10:14:07.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022362458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.876" endtime="20201112 10:14:07.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.884" endtime="20201112 10:14:07.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.580" endtime="20201112 10:14:07.887"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.578" endtime="20201112 10:14:07.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:07.891" level="INFO">${RESULT} = [{'time': 0.022393625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.116699999999861e-05, 'source_diff': 3.116699999999861e-05}, {'time': 0.022437208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:07.888" endtime="20201112 10:14:07.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:07.905" level="INFO">${ACCURACY} = {'time': [0.022393625, 0.022437208, 0.022477542, 0.022519278, 0.0225575, 0.022603236, 0.022645222, 0.022687236, 0.02272325, 0.022761653, 0.022805389, 0.022843792, 0.022879694, 0.022925694, 0.022963597...</msg>
<status status="PASS" starttime="20201112 10:14:07.892" endtime="20201112 10:14:07.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.910" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 10:14:07.909" endtime="20201112 10:14:07.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.913" level="INFO">VALUE: [3.116699999999861e-05, 3.055500000000155e-05, 3.115299999999904e-05, 3.052800000000189e-05, 3.0485999999999708e-05, 3.054199999999799e-05, 2.9985999999999208e-05, 2.9360999999998583e-05, 2.9346999999999013e-05, 3.05700000000006e-05, 3.056999999999713e-05, 3.05700000000006e-05, 3.0526999999998944e-05, 3.116599999999914e-05, 3.0568999999997654e-05, 3.055600000000103e-05, 3.054100000000198e-05, 2.9348000000001956e-05, 3.055600000000103e-05, 3.055600000000103e-05, 2.9971999999999638e-05, 3.119400000000175e-05, 3.116699999999861e-05, 2.9985999999999208e-05, 2.9416000000000858e-05, 3.115199999999957e-05, 3.056900000000112e-05, 3.05700000000006e-05, 3.05700000000006e-05, 3.0014000000001817e-05, 2.9360999999998583e-05, 2.997299999999911e-05, 2.995899999999954e-05, 3.05700000000006e-05, 2.9332999999999443e-05, 2.9346999999999013e-05, 2.9389000000001192e-05, 3.0540999999998514e-05, 3.119399999999828e-05, 3.055500000000155e-05, 2.9931000000000402e-05, 3.056900000000112e-05, 3.056900000000112e-05, 3.119400000000175e-05, 3.05700000000006e-05, 3.116699999999861e-05, 2.9999999999998778e-05, 3.0554999999998084e-05, 3.0028000000001387e-05, 2.9999999999998778e-05]</msg>
<status status="PASS" starttime="20201112 10:14:07.911" endtime="20201112 10:14:07.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.906" endtime="20201112 10:14:07.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.916" endtime="20201112 10:14:07.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:07.920" endtime="20201112 10:14:07.939"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.918" endtime="20201112 10:14:07.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.915" endtime="20201112 10:14:07.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.546" endtime="20201112 10:14:07.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.545" endtime="20201112 10:14:07.941"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.950" endtime="20201112 10:14:07.966"></status>
</kw>
<msg timestamp="20201112 10:14:07.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.948" endtime="20201112 10:14:07.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.968" endtime="20201112 10:14:07.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.971" endtime="20201112 10:14:07.973"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.946" endtime="20201112 10:14:07.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.943" endtime="20201112 10:14:07.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.981" endtime="20201112 10:14:08.268"></status>
</kw>
<msg timestamp="20201112 10:14:08.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022441986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022473764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.979" endtime="20201112 10:14:08.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022441986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022473764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.272" endtime="20201112 10:14:08.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.281" endtime="20201112 10:14:08.283"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.977" endtime="20201112 10:14:08.283"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.975" endtime="20201112 10:14:08.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:08.288" level="INFO">${RESULT} = [{'time': 0.022473764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.177799999999967e-05, 'source_diff': 3.177799999999967e-05}, {'time': 0.022513972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:08.284" endtime="20201112 10:14:08.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:08.302" level="INFO">${ACCURACY} = {'time': [0.022473764, 0.022513972, 0.022557875, 0.022600014, 0.022637958, 0.022677597, 0.022718042, 0.022759708, 0.022808028, 0.022848014, 0.022895597, 0.022939875, 0.022984028, 0.023027681, 0.023072...</msg>
<status status="PASS" starttime="20201112 10:14:08.289" endtime="20201112 10:14:08.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.307" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 10:14:08.306" endtime="20201112 10:14:08.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.309" level="INFO">VALUE: [3.177799999999967e-05, 3.237500000000115e-05, 3.240300000000029e-05, 3.291700000000036e-05, 3.1777000000000194e-05, 3.297199999999917e-05, 3.177799999999967e-05, 3.116599999999914e-05, 3.298600000000221e-05, 3.298599999999874e-05, 3.241600000000039e-05, 3.297199999999917e-05, 3.297199999999917e-05, 3.298700000000168e-05, 3.300000000000178e-05, 3.230599999999931e-05, 3.179199999999924e-05, 3.17640000000001e-05, 3.116699999999861e-05, 3.298599999999874e-05, 3.298600000000221e-05, 3.299999999999831e-05, 3.1790999999999764e-05, 3.2374999999997683e-05, 3.2374999999997683e-05, 3.17640000000001e-05, 3.177799999999967e-05, 3.17640000000001e-05, 3.1790999999999764e-05, 3.238899999999725e-05, 3.177799999999967e-05, 3.1777000000000194e-05, 3.184700000000151e-05, 3.297299999999864e-05, 3.173600000000096e-05, 3.2346999999998544e-05, 3.177799999999967e-05, 3.238900000000072e-05, 3.115299999999904e-05, 3.301400000000135e-05, 3.240300000000029e-05, 3.177799999999967e-05, 3.294400000000003e-05, 3.2360999999998113e-05, 3.299999999999831e-05, 3.237500000000115e-05, 3.2304999999999834e-05, 3.298600000000221e-05, 3.116700000000208e-05, 3.116599999999914e-05]</msg>
<status status="PASS" starttime="20201112 10:14:08.308" endtime="20201112 10:14:08.317"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.303" endtime="20201112 10:14:08.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.320" endtime="20201112 10:14:08.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:08.324" endtime="20201112 10:14:08.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.322" endtime="20201112 10:14:08.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.318" endtime="20201112 10:14:08.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.942" endtime="20201112 10:14:08.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.941" endtime="20201112 10:14:08.345"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.354" endtime="20201112 10:14:08.370"></status>
</kw>
<msg timestamp="20201112 10:14:08.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.352" endtime="20201112 10:14:08.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.372" endtime="20201112 10:14:08.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.374" endtime="20201112 10:14:08.377"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.350" endtime="20201112 10:14:08.377"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.347" endtime="20201112 10:14:08.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.385" endtime="20201112 10:14:08.672"></status>
</kw>
<msg timestamp="20201112 10:14:08.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022514847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.383" endtime="20201112 10:14:08.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022514847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.676" endtime="20201112 10:14:08.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.684" endtime="20201112 10:14:08.686"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.380" endtime="20201112 10:14:08.687"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.378" endtime="20201112 10:14:08.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:08.691" level="INFO">${RESULT} = [{'time': 0.022548417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.357000000000013e-05, 'source_diff': 3.357000000000013e-05}, {'time': 0.022588264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:08.688" endtime="20201112 10:14:08.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:08.707" level="INFO">${ACCURACY} = {'time': [0.022548417, 0.022588264, 0.022632361, 0.022680236, 0.022728181, 0.022771889, 0.022818069, 0.022862167, 0.022908014, 0.022958431, 0.023000278, 0.023043944, 0.023084458, 0.023126306, 0.023170...</msg>
<status status="PASS" starttime="20201112 10:14:08.692" endtime="20201112 10:14:08.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.711" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 10:14:08.710" endtime="20201112 10:14:08.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.714" level="INFO">VALUE: [3.357000000000013e-05, 3.4152999999998573e-05, 3.3583000000000224e-05, 3.419399999999781e-05, 3.47779999999992e-05, 3.419500000000075e-05, 3.419400000000128e-05, 3.359799999999927e-05, 3.416700000000161e-05, 3.536200000000059e-05, 3.419499999999728e-05, 3.29579999999996e-05, 3.419399999999781e-05, 3.418099999999771e-05, 3.416700000000161e-05, 3.5375000000000684e-05, 3.480599999999834e-05, 3.420800000000085e-05, 3.361100000000283e-05, 3.357000000000013e-05, 3.4804999999998865e-05, 3.419500000000075e-05, 3.420799999999738e-05, 3.4804999999998865e-05, 3.47779999999992e-05, 3.359799999999927e-05, 3.5318999999998935e-05, 3.41519999999991e-05, 3.479199999999877e-05, 3.419500000000075e-05, 3.424999999999956e-05, 3.418099999999771e-05, 3.479199999999877e-05, 3.419399999999781e-05, 3.4138999999999003e-05, 3.366599999999817e-05, 3.3569000000000654e-05, 3.47779999999992e-05, 3.3583000000000224e-05, 3.366700000000111e-05, 3.3596999999999794e-05, 3.47779999999992e-05, 3.476399999999963e-05, 3.4819000000001904e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.419400000000128e-05, 3.419399999999781e-05, 3.3610999999999364e-05, 3.3596999999999794e-05]</msg>
<status status="PASS" starttime="20201112 10:14:08.713" endtime="20201112 10:14:08.715"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.708" endtime="20201112 10:14:08.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.718" endtime="20201112 10:14:08.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:08.721" endtime="20201112 10:14:08.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.720" endtime="20201112 10:14:08.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.716" endtime="20201112 10:14:08.742"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.346" endtime="20201112 10:14:08.742"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.345" endtime="20201112 10:14:08.742"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.753" endtime="20201112 10:14:08.770"></status>
</kw>
<msg timestamp="20201112 10:14:08.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.751" endtime="20201112 10:14:08.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.771" endtime="20201112 10:14:08.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.774" endtime="20201112 10:14:08.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.749" endtime="20201112 10:14:08.777"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.746" endtime="20201112 10:14:08.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.784" endtime="20201112 10:14:09.070"></status>
</kw>
<msg timestamp="20201112 10:14:09.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024578125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024614736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.783" endtime="20201112 10:14:09.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024578125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024614736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.074" endtime="20201112 10:14:09.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.083" endtime="20201112 10:14:09.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.780" endtime="20201112 10:14:09.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.778" endtime="20201112 10:14:09.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:09.090" level="INFO">${RESULT} = [{'time': 0.024614736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6611000000002364e-05, 'source_diff': 3.6611000000002364e-05}, {'time': 0.024661, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:09.086" endtime="20201112 10:14:09.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:09.104" level="INFO">${ACCURACY} = {'time': [0.024614736, 0.024661, 0.024712806, 0.024758944, 0.024804778, 0.024855, 0.024899042, 0.024947222, 0.024993097, 0.025035097, 0.025081042, 0.025130875, 0.025179153, 0.025225097, 0.025270708, 0...</msg>
<status status="PASS" starttime="20201112 10:14:09.091" endtime="20201112 10:14:09.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.108" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 10:14:09.107" endtime="20201112 10:14:09.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.111" level="INFO">VALUE: [3.6611000000002364e-05, 3.6610999999998894e-05, 3.6639000000001504e-05, 3.600000000000131e-05, 3.599999999999784e-05, 3.722199999999995e-05, 3.720899999999985e-05, 3.601400000000088e-05, 3.720800000000038e-05, 3.598599999999827e-05, 3.655600000000009e-05, 3.600000000000131e-05, 3.6596999999999325e-05, 3.6568999999996715e-05, 3.6610999999998894e-05, 3.722199999999995e-05, 3.5375000000000684e-05, 3.601399999999741e-05, 3.719400000000081e-05, 3.722199999999995e-05, 3.600000000000131e-05, 3.5375000000000684e-05, 3.600000000000131e-05, 3.720899999999985e-05, 3.540200000000035e-05, 3.599999999999784e-05, 3.719399999999734e-05, 3.601400000000088e-05, 3.598599999999827e-05, 3.599999999999784e-05, 3.6596999999999325e-05, 3.5360999999997644e-05, 3.541599999999992e-05, 3.598600000000174e-05, 3.6596999999999325e-05, 3.601400000000088e-05, 3.541700000000286e-05, 3.600000000000131e-05, 3.6596999999999325e-05, 3.7195000000000283e-05, 3.720800000000038e-05, 3.6611000000002364e-05, 3.6541000000001045e-05, 3.6610999999998894e-05, 3.6611000000002364e-05, 3.5402999999999823e-05, 3.5402999999999823e-05, 3.5389000000000254e-05, 3.541599999999992e-05, 3.541700000000286e-05]</msg>
<status status="PASS" starttime="20201112 10:14:09.110" endtime="20201112 10:14:09.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.105" endtime="20201112 10:14:09.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.115" endtime="20201112 10:14:09.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:09.118" endtime="20201112 10:14:09.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.117" endtime="20201112 10:14:09.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.113" endtime="20201112 10:14:09.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.743" endtime="20201112 10:14:09.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.743" endtime="20201112 10:14:09.139"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.149" endtime="20201112 10:14:09.165"></status>
</kw>
<msg timestamp="20201112 10:14:09.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.147" endtime="20201112 10:14:09.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.167" endtime="20201112 10:14:09.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.169" endtime="20201112 10:14:09.172"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.144" endtime="20201112 10:14:09.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.142" endtime="20201112 10:14:09.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.180" endtime="20201112 10:14:09.467"></status>
</kw>
<msg timestamp="20201112 10:14:09.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023148847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.178" endtime="20201112 10:14:09.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023148847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.472" endtime="20201112 10:14:09.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.481" endtime="20201112 10:14:09.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.175" endtime="20201112 10:14:09.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.174" endtime="20201112 10:14:09.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:09.489" level="INFO">${RESULT} = [{'time': 0.023148847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8402999999999354e-05, 'source_diff': 3.8402999999999354e-05}, {'time': 0.023194889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:09.485" endtime="20201112 10:14:09.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:09.503" level="INFO">${ACCURACY} = {'time': [0.023148847, 0.023194889, 0.023242792, 0.023295028, 0.023343125, 0.023396806, 0.023444806, 0.023492944, 0.023538819, 0.023586889, 0.023636986, 0.023682736, 0.023730722, 0.023779042, 0.023824...</msg>
<status status="PASS" starttime="20201112 10:14:09.490" endtime="20201112 10:14:09.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.507" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 10:14:09.506" endtime="20201112 10:14:09.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.510" level="INFO">VALUE: [3.8402999999999354e-05, 3.720800000000038e-05, 3.723600000000299e-05, 3.8416999999998924e-05, 3.8430999999998494e-05, 3.901400000000041e-05, 3.781999999999744e-05, 3.7819000000001435e-05, 3.9041000000000076e-05, 3.8375000000000214e-05, 3.8416999999998924e-05, 3.8402999999999354e-05, 3.7804999999998395e-05, 3.782000000000091e-05, 3.842999999999902e-05, 3.845799999999816e-05, 3.8375000000000214e-05, 3.8416999999998924e-05, 3.7804999999998395e-05, 3.902799999999998e-05, 3.7804999999998395e-05, 3.77780000000022e-05, 3.7804999999998395e-05, 3.8431000000001964e-05, 3.780599999999787e-05, 3.780600000000134e-05, 3.8445000000001534e-05, 3.7819000000001435e-05, 3.901400000000041e-05, 3.902799999999998e-05, 3.842999999999902e-05, 3.7832999999997535e-05, 3.720800000000038e-05, 3.8431000000001964e-05, 3.720800000000038e-05, 3.8402999999999354e-05, 3.848600000000077e-05, 3.841599999999945e-05, 3.8402999999999354e-05, 3.840199999999988e-05, 3.8361000000000645e-05, 3.902799999999998e-05, 3.900000000000084e-05, 3.722199999999995e-05, 3.720800000000038e-05, 3.9041000000000076e-05, 3.8402999999999354e-05, 3.841599999999945e-05, 3.723599999999952e-05, 3.902799999999998e-05]</msg>
<status status="PASS" starttime="20201112 10:14:09.509" endtime="20201112 10:14:09.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.504" endtime="20201112 10:14:09.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.514" endtime="20201112 10:14:09.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:09.517" endtime="20201112 10:14:09.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.516" endtime="20201112 10:14:09.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.512" endtime="20201112 10:14:09.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.140" endtime="20201112 10:14:09.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.140" endtime="20201112 10:14:09.538"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.547" endtime="20201112 10:14:09.564"></status>
</kw>
<msg timestamp="20201112 10:14:09.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.546" endtime="20201112 10:14:09.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.565" endtime="20201112 10:14:09.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.568" endtime="20201112 10:14:09.571"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.543" endtime="20201112 10:14:09.571"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.541" endtime="20201112 10:14:09.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.578" endtime="20201112 10:14:09.865"></status>
</kw>
<msg timestamp="20201112 10:14:09.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022907917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022947542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.577" endtime="20201112 10:14:09.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022907917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022947542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.869" endtime="20201112 10:14:09.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.878" endtime="20201112 10:14:09.880"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.574" endtime="20201112 10:14:09.880"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.572" endtime="20201112 10:14:09.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:09.885" level="INFO">${RESULT} = [{'time': 0.022947542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9625000000001465e-05, 'source_diff': 3.9625000000001465e-05}, {'time': 0.023003569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:09.881" endtime="20201112 10:14:09.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:09.899" level="INFO">${ACCURACY} = {'time': [0.022947542, 0.023003569, 0.023055514, 0.023111292, 0.023161556, 0.023211181, 0.023267361, 0.023317222, 0.023365569, 0.023411722, 0.023461417, 0.023511319, 0.02355725, 0.023609264, 0.0236637...</msg>
<status status="PASS" starttime="20201112 10:14:09.886" endtime="20201112 10:14:09.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.904" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 10:14:09.903" endtime="20201112 10:14:09.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.906" level="INFO">VALUE: [3.9625000000001465e-05, 4.0861000000003145e-05, 3.9624999999997995e-05, 4.027799999999776e-05, 3.9639000000001035e-05, 3.9625000000001465e-05, 4.0847000000000105e-05, 3.902799999999998e-05, 4.0860999999999675e-05, 4.0833000000000536e-05, 3.9694999999999314e-05, 3.9596999999998855e-05, 3.9096999999998355e-05, 4.023600000000252e-05, 4.0847000000000105e-05, 3.9639000000001035e-05, 4.022199999999948e-05, 4.0819000000000966e-05, 3.9624999999997995e-05, 4.0847000000000105e-05, 4.024999999999862e-05, 4.0833000000000536e-05, 4.0290999999997856e-05, 4.023600000000252e-05, 4.083400000000001e-05, 3.9625000000001465e-05, 4.0833000000000536e-05, 3.9624999999997995e-05, 4.0291000000001326e-05, 3.9611000000001895e-05, 4.083400000000001e-05, 4.0222999999998954e-05, 3.9624999999997995e-05, 4.022199999999948e-05, 4.149999999999987e-05, 4.0847000000000105e-05, 4.0833000000000536e-05, 4.023599999999905e-05, 4.083400000000001e-05, 3.968000000000027e-05, 3.902799999999998e-05, 4.0833000000000536e-05, 4.024999999999862e-05, 4.0819000000000966e-05, 4.0833000000000536e-05, 4.1431000000001494e-05, 3.902799999999998e-05, 4.025000000000209e-05, 4.023599999999905e-05, 4.0902999999998385e-05]</msg>
<status status="PASS" starttime="20201112 10:14:09.905" endtime="20201112 10:14:09.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.900" endtime="20201112 10:14:09.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.910" endtime="20201112 10:14:09.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:09.914" endtime="20201112 10:14:09.934"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.913" endtime="20201112 10:14:09.934"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.908" endtime="20201112 10:14:09.935"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.539" endtime="20201112 10:14:09.935"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.539" endtime="20201112 10:14:09.935"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.944" endtime="20201112 10:14:09.961"></status>
</kw>
<msg timestamp="20201112 10:14:09.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.943" endtime="20201112 10:14:09.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.963" endtime="20201112 10:14:09.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.965" endtime="20201112 10:14:09.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.940" endtime="20201112 10:14:09.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.938" endtime="20201112 10:14:09.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.976" endtime="20201112 10:14:10.262"></status>
</kw>
<msg timestamp="20201112 10:14:10.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022742833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.975" endtime="20201112 10:14:10.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022742833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.266" endtime="20201112 10:14:10.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.274" endtime="20201112 10:14:10.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.972" endtime="20201112 10:14:10.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.970" endtime="20201112 10:14:10.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:10.281" level="INFO">${RESULT} = [{'time': 0.022784292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1459000000000634e-05, 'source_diff': 4.1459000000000634e-05}, {'time': 0.022838597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:10.278" endtime="20201112 10:14:10.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:10.297" level="INFO">${ACCURACY} = {'time': [0.022784292, 0.022838597, 0.022894389, 0.022948764, 0.023000375, 0.023050681, 0.023108639, 0.023166431, 0.02321625, 0.023264847, 0.023314319, 0.023370444, 0.023420472, 0.023476625, 0.0235287...</msg>
<status status="PASS" starttime="20201112 10:14:10.282" endtime="20201112 10:14:10.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.301" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 10:14:10.300" endtime="20201112 10:14:10.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.304" level="INFO">VALUE: [4.1459000000000634e-05, 4.2653000000000135e-05, 4.145800000000116e-05, 4.204199999999908e-05, 4.144400000000159e-05, 4.2653000000000135e-05, 4.329200000000033e-05, 4.2653000000000135e-05, 4.2611000000001426e-05, 4.326400000000119e-05, 4.265200000000066e-05, 4.143000000000202e-05, 4.2040999999999606e-05, 4.2639000000000565e-05, 4.2653000000000135e-05, 4.2040999999999606e-05, 4.144399999999812e-05, 4.2639000000000565e-05, 4.320799999999944e-05, 4.204199999999908e-05, 4.1431000000001494e-05, 4.2680999999999275e-05, 4.325000000000162e-05, 4.204199999999908e-05, 4.258400000000176e-05, 4.204200000000255e-05, 4.2040999999999606e-05, 4.1459000000000634e-05, 4.2653000000000135e-05, 4.266600000000023e-05, 4.326400000000119e-05, 4.204199999999908e-05, 4.2097000000001356e-05, 4.1973000000000704e-05, 4.2110999999997456e-05, 4.204199999999908e-05, 4.2666999999999705e-05, 4.2027000000000037e-05, 4.265200000000066e-05, 4.202799999999951e-05, 4.205600000000212e-05, 4.324999999999815e-05, 4.204200000000255e-05, 4.1431000000001494e-05, 4.1402999999998885e-05, 4.204199999999908e-05, 4.33059999999999e-05, 4.2625000000000995e-05, 4.3291000000000857e-05, 4.19860000000008e-05]</msg>
<status status="PASS" starttime="20201112 10:14:10.303" endtime="20201112 10:14:10.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.298" endtime="20201112 10:14:10.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.308" endtime="20201112 10:14:10.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:10.311" endtime="20201112 10:14:10.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.310" endtime="20201112 10:14:10.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.306" endtime="20201112 10:14:10.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.936" endtime="20201112 10:14:10.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.936" endtime="20201112 10:14:10.332"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.341" endtime="20201112 10:14:10.358"></status>
</kw>
<msg timestamp="20201112 10:14:10.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.340" endtime="20201112 10:14:10.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.360" endtime="20201112 10:14:10.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.362" endtime="20201112 10:14:10.365"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.337" endtime="20201112 10:14:10.366"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.335" endtime="20201112 10:14:10.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.373" endtime="20201112 10:14:10.660"></status>
</kw>
<msg timestamp="20201112 10:14:10.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022453, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022497458, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:10.371" endtime="20201112 10:14:10.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022453, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022497458, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:10.664" endtime="20201112 10:14:10.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.673" endtime="20201112 10:14:10.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.368" endtime="20201112 10:14:10.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.367" endtime="20201112 10:14:10.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:10.680" level="INFO">${RESULT} = [{'time': 0.022497458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.445800000000069e-05, 'source_diff': 4.445800000000069e-05}, {'time': 0.022547583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:10.676" endtime="20201112 10:14:10.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:10.694" level="INFO">${ACCURACY} = {'time': [0.022497458, 0.022547583, 0.022597986, 0.022651583, 0.022701778, 0.022755694, 0.022805833, 0.022863611, 0.022919819, 0.022979403, 0.023035806, 0.023089722, 0.023147847, 0.023199708, 0.023251...</msg>
<status status="PASS" starttime="20201112 10:14:10.681" endtime="20201112 10:14:10.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.698" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 10:14:10.697" endtime="20201112 10:14:10.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.701" level="INFO">VALUE: [4.445800000000069e-05, 4.444400000000112e-05, 4.3903000000001385e-05, 4.445800000000069e-05, 4.3860999999999206e-05, 4.325000000000162e-05, 4.447200000000026e-05, 4.327799999999729e-05, 4.390200000000191e-05, 4.4430999999997556e-05, 4.505599999999818e-05, 4.5083000000001316e-05, 4.447200000000026e-05, 4.3860999999999206e-05, 4.3874999999998776e-05, 4.507000000000122e-05, 4.505599999999818e-05, 4.504199999999861e-05, 4.44860000000033e-05, 4.3874999999998776e-05, 4.445800000000069e-05, 4.507000000000122e-05, 4.3846999999999636e-05, 4.3833000000000066e-05, 4.447200000000026e-05, 4.448599999999983e-05, 4.324999999999815e-05, 4.384800000000258e-05, 4.324999999999815e-05, 4.506899999999828e-05, 4.4459000000000165e-05, 4.386199999999868e-05, 4.505499999999871e-05, 4.3833000000000066e-05, 4.508400000000079e-05, 4.4459000000000165e-05, 4.325000000000162e-05, 4.5097000000000886e-05, 4.3889000000001815e-05, 4.450000000000287e-05, 4.4416999999997986e-05, 4.445800000000069e-05, 4.445800000000069e-05, 4.322199999999901e-05, 4.508299999999785e-05, 4.505599999999818e-05, 4.447200000000026e-05, 4.38060000000004e-05, 4.3846999999999636e-05, 4.445800000000069e-05]</msg>
<status status="PASS" starttime="20201112 10:14:10.700" endtime="20201112 10:14:10.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.695" endtime="20201112 10:14:10.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.705" endtime="20201112 10:14:10.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:10.708" endtime="20201112 10:14:10.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.707" endtime="20201112 10:14:10.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.703" endtime="20201112 10:14:10.729"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.333" endtime="20201112 10:14:10.729"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.333" endtime="20201112 10:14:10.729"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.738" endtime="20201112 10:14:10.755"></status>
</kw>
<msg timestamp="20201112 10:14:10.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.737" endtime="20201112 10:14:10.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.756" endtime="20201112 10:14:10.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.759" endtime="20201112 10:14:10.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.734" endtime="20201112 10:14:10.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.732" endtime="20201112 10:14:10.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.769" endtime="20201112 10:14:11.056"></status>
</kw>
<msg timestamp="20201112 10:14:11.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022585014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.768" endtime="20201112 10:14:11.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022585014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.060" endtime="20201112 10:14:11.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.069" endtime="20201112 10:14:11.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.765" endtime="20201112 10:14:11.071"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.763" endtime="20201112 10:14:11.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:11.076" level="INFO">${RESULT} = [{'time': 0.022585014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5680999999998806e-05, 'source_diff': 4.5680999999998806e-05}, {'time': 0.022644889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:11.072" endtime="20201112 10:14:11.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:11.090" level="INFO">${ACCURACY} = {'time': [0.022585014, 0.022644889, 0.022696583, 0.022748625, 0.022807111, 0.022864972, 0.022924833, 0.022982569, 0.023034806, 0.023086875, 0.023149042, 0.023204986, 0.023262764, 0.023321153, 0.023376...</msg>
<status status="PASS" starttime="20201112 10:14:11.077" endtime="20201112 10:14:11.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.095" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 10:14:11.093" endtime="20201112 10:14:11.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.097" level="INFO">VALUE: [4.5680999999998806e-05, 4.6889000000001346e-05, 4.56939999999989e-05, 4.6903000000000916e-05, 4.5667000000002705e-05, 4.566599999999976e-05, 4.687499999999831e-05, 4.502700000000304e-05, 4.6889000000001346e-05, 4.686099999999874e-05, 4.6875000000001776e-05, 4.626400000000072e-05, 4.624999999999768e-05, 4.6861000000002206e-05, 4.687499999999831e-05, 4.567999999999933e-05, 4.6861000000002206e-05, 4.6889000000001346e-05, 4.5666999999999236e-05, 4.56939999999989e-05, 4.626400000000072e-05, 4.688899999999788e-05, 4.5625000000000526e-05, 4.68329999999996e-05, 4.5666999999999236e-05, 4.505600000000165e-05, 4.626400000000072e-05, 4.687499999999831e-05, 4.6944999999999626e-05, 4.625000000000115e-05, 4.623599999999811e-05, 4.687499999999831e-05, 4.626400000000072e-05, 4.6917000000000486e-05, 4.5639000000000096e-05, 4.569400000000237e-05, 4.684699999999917e-05, 4.5069000000001747e-05, 4.567999999999933e-05, 4.629100000000039e-05, 4.567999999999933e-05, 4.5666999999999236e-05, 4.567999999999933e-05, 4.570800000000194e-05, 4.627800000000029e-05, 4.6875000000001776e-05, 4.6903000000000916e-05, 4.5680999999998806e-05, 4.624999999999768e-05, 4.626399999999725e-05]</msg>
<status status="PASS" starttime="20201112 10:14:11.096" endtime="20201112 10:14:11.098"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.091" endtime="20201112 10:14:11.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.101" endtime="20201112 10:14:11.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:11.104" endtime="20201112 10:14:11.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.103" endtime="20201112 10:14:11.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.099" endtime="20201112 10:14:11.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.730" endtime="20201112 10:14:11.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.730" endtime="20201112 10:14:11.125"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.134" endtime="20201112 10:14:11.151"></status>
</kw>
<msg timestamp="20201112 10:14:11.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.133" endtime="20201112 10:14:11.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.153" endtime="20201112 10:14:11.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.155" endtime="20201112 10:14:11.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.130" endtime="20201112 10:14:11.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.128" endtime="20201112 10:14:11.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.166" endtime="20201112 10:14:11.451"></status>
</kw>
<msg timestamp="20201112 10:14:11.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.164" endtime="20201112 10:14:11.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.455" endtime="20201112 10:14:11.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.464" endtime="20201112 10:14:11.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.161" endtime="20201112 10:14:11.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.160" endtime="20201112 10:14:11.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:11.471" level="INFO">${RESULT} = [{'time': 0.022565194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.809700000000042e-05, 'source_diff': 4.809700000000042e-05}, {'time': 0.022629069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:11.467" endtime="20201112 10:14:11.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:11.485" level="INFO">${ACCURACY} = {'time': [0.022565194, 0.022629069, 0.02269275, 0.022750944, 0.022804861, 0.022859014, 0.022919167, 0.022980819, 0.023040972, 0.023095167, 0.023153153, 0.023209306, 0.02326725, 0.023327181, 0.02338526...</msg>
<status status="PASS" starttime="20201112 10:14:11.472" endtime="20201112 10:14:11.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.490" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 10:14:11.488" endtime="20201112 10:14:11.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.492" level="INFO">VALUE: [4.809700000000042e-05, 4.870800000000147e-05, 4.8667000000002236e-05, 4.869399999999843e-05, 4.805499999999824e-05, 4.747199999999979e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.868099999999834e-05, 4.748599999999936e-05, 4.931999999999853e-05, 4.927799999999982e-05, 4.809799999999989e-05, 4.808300000000085e-05, 4.75000000000024e-05, 4.806899999999781e-05, 4.804200000000161e-05, 4.748599999999936e-05, 4.866699999999877e-05, 4.8681000000001806e-05, 4.7487000000002305e-05, 4.867999999999886e-05, 4.872200000000104e-05, 4.8708999999997477e-05, 4.929099999999992e-05, 4.809799999999989e-05, 4.870800000000147e-05, 4.812499999999956e-05, 4.869499999999791e-05, 4.869399999999843e-05, 4.808300000000085e-05, 4.75000000000024e-05, 4.802799999999857e-05, 4.869399999999843e-05, 4.869399999999843e-05, 4.808299999999738e-05, 4.86940000000019e-05, 4.748599999999936e-05, 4.872200000000104e-05, 4.742999999999761e-05, 4.804100000000214e-05, 4.869399999999843e-05, 4.808299999999738e-05, 4.870800000000147e-05, 4.875000000000018e-05, 4.808400000000032e-05, 4.872199999999757e-05, 4.748599999999936e-05, 4.876399999999975e-05]</msg>
<status status="PASS" starttime="20201112 10:14:11.491" endtime="20201112 10:14:11.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.486" endtime="20201112 10:14:11.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.496" endtime="20201112 10:14:11.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:11.500" endtime="20201112 10:14:11.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.498" endtime="20201112 10:14:11.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.494" endtime="20201112 10:14:11.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.126" endtime="20201112 10:14:11.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.126" endtime="20201112 10:14:11.521"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.530" endtime="20201112 10:14:11.547"></status>
</kw>
<msg timestamp="20201112 10:14:11.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.528" endtime="20201112 10:14:11.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.549" endtime="20201112 10:14:11.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.552" endtime="20201112 10:14:11.554"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.525" endtime="20201112 10:14:11.555"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.523" endtime="20201112 10:14:11.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.562" endtime="20201112 10:14:11.848"></status>
</kw>
<msg timestamp="20201112 10:14:11.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.561" endtime="20201112 10:14:11.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.852" endtime="20201112 10:14:11.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.861" endtime="20201112 10:14:11.863"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.558" endtime="20201112 10:14:11.863"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.556" endtime="20201112 10:14:11.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:11.868" level="INFO">${RESULT} = [{'time': 0.022710972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.988900000000088e-05, 'source_diff': 4.988900000000088e-05}, {'time': 0.022766639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:11.864" endtime="20201112 10:14:11.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:11.883" level="INFO">${ACCURACY} = {'time': [0.022710972, 0.022766639, 0.022822917, 0.022884667, 0.022944833, 0.023006736, 0.023063, 0.023126736, 0.023186611, 0.023250778, 0.023314889, 0.023374972, 0.023436972, 0.023492875, 0.023558986...</msg>
<status status="PASS" starttime="20201112 10:14:11.869" endtime="20201112 10:14:11.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.888" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 10:14:11.887" endtime="20201112 10:14:11.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.891" level="INFO">VALUE: [4.988900000000088e-05, 5.050000000000193e-05, 5.109800000000289e-05, 4.991700000000002e-05, 5.05140000000015e-05, 4.983299999999913e-05, 4.993099999999959e-05, 4.993000000000011e-05, 4.988900000000088e-05, 5.049999999999846e-05, 5.111099999999952e-05, 4.991600000000054e-05, 5.05140000000015e-05, 4.987500000000131e-05, 5.111099999999952e-05, 4.990300000000045e-05, 5.051399999999803e-05, 5.051300000000203e-05, 4.929199999999939e-05, 5.05140000000015e-05, 5.111099999999952e-05, 5.115299999999823e-05, 4.991700000000002e-05, 5.111099999999952e-05, 5.044400000000018e-05, 4.990300000000045e-05, 4.936100000000124e-05, 5.11530000000017e-05, 5.05140000000015e-05, 4.990299999999698e-05, 4.988900000000088e-05, 4.988900000000088e-05, 5.05140000000015e-05, 5.049999999999846e-05, 4.93469999999982e-05, 5.109699999999995e-05, 5.051399999999803e-05, 4.990300000000045e-05, 4.9959000000002196e-05, 4.988900000000088e-05, 5.108300000000038e-05, 5.05140000000015e-05, 4.929199999999939e-05, 5.051399999999803e-05, 4.990300000000045e-05, 5.109800000000289e-05, 4.929199999999939e-05, 4.988900000000088e-05, 4.991700000000002e-05, 4.988900000000088e-05]</msg>
<status status="PASS" starttime="20201112 10:14:11.889" endtime="20201112 10:14:11.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.884" endtime="20201112 10:14:11.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.894" endtime="20201112 10:14:11.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:11.898" endtime="20201112 10:14:11.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.896" endtime="20201112 10:14:11.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.893" endtime="20201112 10:14:11.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.522" endtime="20201112 10:14:11.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.521" endtime="20201112 10:14:11.919"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.928" endtime="20201112 10:14:11.945"></status>
</kw>
<msg timestamp="20201112 10:14:11.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.926" endtime="20201112 10:14:11.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.946" endtime="20201112 10:14:11.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.949" endtime="20201112 10:14:11.952"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.923" endtime="20201112 10:14:11.952"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.921" endtime="20201112 10:14:11.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.959" endtime="20201112 10:14:12.245"></status>
</kw>
<msg timestamp="20201112 10:14:12.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022748653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022800389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.958" endtime="20201112 10:14:12.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022748653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022800389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.249" endtime="20201112 10:14:12.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.258" endtime="20201112 10:14:12.260"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.955" endtime="20201112 10:14:12.260"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.953" endtime="20201112 10:14:12.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:12.265" level="INFO">${RESULT} = [{'time': 0.022800389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.173600000000014e-05, 'source_diff': 5.173600000000014e-05}, {'time': 0.02286075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:12.261" endtime="20201112 10:14:12.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:12.279" level="INFO">${ACCURACY} = {'time': [0.022800389, 0.02286075, 0.022928667, 0.022994597, 0.023062861, 0.023130611, 0.023190861, 0.023248944, 0.023314528, 0.023380625, 0.023444958, 0.023512764, 0.023576472, 0.023638625, 0.0236987...</msg>
<status status="PASS" starttime="20201112 10:14:12.266" endtime="20201112 10:14:12.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.284" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 10:14:12.283" endtime="20201112 10:14:12.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.286" level="INFO">VALUE: [5.173600000000014e-05, 5.163899999999916e-05, 5.290299999999998e-05, 5.2916000000000074e-05, 5.2929999999999644e-05, 5.291699999999955e-05, 5.173600000000014e-05, 5.2943999999999214e-05, 5.177800000000232e-05, 5.231899999999859e-05, 5.233299999999816e-05, 5.230599999999849e-05, 5.1708000000001e-05, 5.223600000000064e-05, 5.2916000000000074e-05, 5.111099999999952e-05, 5.168099999999787e-05, 5.234699999999773e-05, 5.229099999999945e-05, 5.2916000000000074e-05, 5.1708000000001e-05, 5.294500000000216e-05, 5.2916000000000074e-05, 5.2916000000000074e-05, 5.172200000000057e-05, 5.172200000000057e-05, 5.173600000000014e-05, 5.231899999999859e-05, 5.231999999999806e-05, 5.1707999999997534e-05, 5.109699999999995e-05, 5.230600000000196e-05, 5.231999999999806e-05, 5.288900000000041e-05, 5.231899999999859e-05, 5.112499999999909e-05, 5.233299999999816e-05, 5.179200000000189e-05, 5.172200000000057e-05, 5.232000000000153e-05, 5.291699999999955e-05, 5.238899999999991e-05, 5.291699999999955e-05, 5.231899999999859e-05, 5.1708000000001e-05, 5.297200000000182e-05, 5.2902000000000504e-05, 5.116600000000179e-05, 5.230599999999849e-05, 5.172200000000057e-05]</msg>
<status status="PASS" starttime="20201112 10:14:12.285" endtime="20201112 10:14:12.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.280" endtime="20201112 10:14:12.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.290" endtime="20201112 10:14:12.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:12.294" endtime="20201112 10:14:12.313"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.292" endtime="20201112 10:14:12.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.288" endtime="20201112 10:14:12.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.920" endtime="20201112 10:14:12.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.919" endtime="20201112 10:14:12.315"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.324" endtime="20201112 10:14:12.340"></status>
</kw>
<msg timestamp="20201112 10:14:12.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.322" endtime="20201112 10:14:12.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.342" endtime="20201112 10:14:12.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.344" endtime="20201112 10:14:12.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.319" endtime="20201112 10:14:12.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.317" endtime="20201112 10:14:12.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.355" endtime="20201112 10:14:12.641"></status>
</kw>
<msg timestamp="20201112 10:14:12.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022463111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022516653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.353" endtime="20201112 10:14:12.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022463111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022516653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.646" endtime="20201112 10:14:12.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.654" endtime="20201112 10:14:12.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.350" endtime="20201112 10:14:12.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.349" endtime="20201112 10:14:12.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:12.661" level="INFO">${RESULT} = [{'time': 0.022516653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.354200000000017e-05, 'source_diff': 5.354200000000017e-05}, {'time': 0.022584875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:12.658" endtime="20201112 10:14:12.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:12.675" level="INFO">${ACCURACY} = {'time': [0.022516653, 0.022584875, 0.022653181, 0.022717208, 0.022778931, 0.022842972, 0.022909278, 0.022979167, 0.023045236, 0.023113083, 0.023178806, 0.023245306, 0.023312986, 0.023377222, 0.023437...</msg>
<status status="PASS" starttime="20201112 10:14:12.662" endtime="20201112 10:14:12.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.680" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 10:14:12.679" endtime="20201112 10:14:12.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.683" level="INFO">VALUE: [5.354200000000017e-05, 5.4708000000000534e-05, 5.412500000000209e-05, 5.35410000000007e-05, 5.473699999999915e-05, 5.35410000000007e-05, 5.415300000000123e-05, 5.473600000000314e-05, 5.538899999999944e-05, 5.4735999999999674e-05, 5.470900000000001e-05, 5.415300000000123e-05, 5.354200000000017e-05, 5.4735999999999674e-05, 5.4735999999999674e-05, 5.351400000000103e-05, 5.4735999999999674e-05, 5.356899999999984e-05, 5.3527999999997133e-05, 5.413899999999819e-05, 5.412500000000209e-05, 5.412499999999862e-05, 5.4194000000000464e-05, 5.41670000000008e-05, 5.355599999999974e-05, 5.538899999999944e-05, 5.347299999999833e-05, 5.4722000000000104e-05, 5.351300000000156e-05, 5.538899999999944e-05, 5.5305999999998023e-05, 5.4735999999999674e-05, 5.409699999999948e-05, 5.411100000000252e-05, 5.475000000000271e-05, 5.413899999999819e-05, 5.412500000000209e-05, 5.476400000000228e-05, 5.411099999999905e-05, 5.411099999999905e-05, 5.3499999999997994e-05, 5.4735999999999674e-05, 5.479200000000142e-05, 5.4722000000000104e-05, 5.475000000000271e-05, 5.358300000000288e-05, 5.413899999999819e-05, 5.405600000000024e-05, 5.412499999999862e-05, 5.35280000000006e-05]</msg>
<status status="PASS" starttime="20201112 10:14:12.681" endtime="20201112 10:14:12.683"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.676" endtime="20201112 10:14:12.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.686" endtime="20201112 10:14:12.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:12.690" endtime="20201112 10:14:12.709"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.688" endtime="20201112 10:14:12.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.685" endtime="20201112 10:14:12.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.315" endtime="20201112 10:14:12.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.315" endtime="20201112 10:14:12.711"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.720" endtime="20201112 10:14:12.736"></status>
</kw>
<msg timestamp="20201112 10:14:12.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.718" endtime="20201112 10:14:12.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.738" endtime="20201112 10:14:12.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.741" endtime="20201112 10:14:12.743"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.716" endtime="20201112 10:14:12.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.713" endtime="20201112 10:14:12.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.751" endtime="20201112 10:14:13.038"></status>
</kw>
<msg timestamp="20201112 10:14:13.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02253925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:12.749" endtime="20201112 10:14:13.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02253925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:13.042" endtime="20201112 10:14:13.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.051" endtime="20201112 10:14:13.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.747" endtime="20201112 10:14:13.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.745" endtime="20201112 10:14:13.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:13.058" level="INFO">${RESULT} = [{'time': 0.022596403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.715300000000076e-05, 'source_diff': 5.715300000000076e-05}, {'time': 0.022658292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:13.054" endtime="20201112 10:14:13.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:13.072" level="INFO">${ACCURACY} = {'time': [0.022596403, 0.022658292, 0.022730181, 0.022798222, 0.022860236, 0.022924069, 0.022994556, 0.023058278, 0.023120375, 0.023190444, 0.023262111, 0.023330292, 0.023398417, 0.023460639, 0.023522...</msg>
<status status="PASS" starttime="20201112 10:14:13.059" endtime="20201112 10:14:13.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.077" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 10:14:13.076" endtime="20201112 10:14:13.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.079" level="INFO">VALUE: [5.715300000000076e-05, 5.6555999999999274e-05, 5.647299999999786e-05, 5.65549999999998e-05, 5.6014000000000064e-05, 5.5401999999999535e-05, 5.6541999999999704e-05, 5.654200000000317e-05, 5.593099999999865e-05, 5.5387999999999965e-05, 5.6541999999999704e-05, 5.71809999999999e-05, 5.713900000000119e-05, 5.6555999999999274e-05, 5.65549999999998e-05, 5.6541999999999704e-05, 5.5971999999997885e-05, 5.5972000000001354e-05, 5.533300000000116e-05, 5.5972000000001354e-05, 5.593100000000212e-05, 5.5958000000001784e-05, 5.657000000000231e-05, 5.6541999999999704e-05, 5.716700000000033e-05, 5.7152000000001285e-05, 5.53610000000003e-05, 5.654100000000023e-05, 5.662500000000112e-05, 5.5957999999998315e-05, 5.654100000000023e-05, 5.533399999999716e-05, 5.534700000000073e-05, 5.6027999999999634e-05, 5.587500000000037e-05, 5.532000000000106e-05, 5.7152000000001285e-05, 5.6513999999997094e-05, 5.713900000000119e-05, 5.5958000000001784e-05, 5.6555999999999274e-05, 5.53610000000003e-05, 5.654099999999676e-05, 5.597300000000083e-05, 5.5986000000000924e-05, 5.5944000000002214e-05, 5.5305999999998023e-05, 5.6541999999999704e-05, 5.534699999999726e-05, 5.715300000000076e-05]</msg>
<status status="PASS" starttime="20201112 10:14:13.078" endtime="20201112 10:14:13.080"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.073" endtime="20201112 10:14:13.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.083" endtime="20201112 10:14:13.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:13.087" endtime="20201112 10:14:13.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.085" endtime="20201112 10:14:13.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.081" endtime="20201112 10:14:13.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.712" endtime="20201112 10:14:13.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.711" endtime="20201112 10:14:13.108"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.117" endtime="20201112 10:14:13.133"></status>
</kw>
<msg timestamp="20201112 10:14:13.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.115" endtime="20201112 10:14:13.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.135" endtime="20201112 10:14:13.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.137" endtime="20201112 10:14:13.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.112" endtime="20201112 10:14:13.141"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.110" endtime="20201112 10:14:13.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.148" endtime="20201112 10:14:13.434"></status>
</kw>
<msg timestamp="20201112 10:14:13.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02251925, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:13.146" endtime="20201112 10:14:13.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02251925, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:13.438" endtime="20201112 10:14:13.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.447" endtime="20201112 10:14:13.448"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.144" endtime="20201112 10:14:13.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.142" endtime="20201112 10:14:13.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:13.454" level="INFO">${RESULT} = [{'time': 0.02251925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7750000000002244e-05, 'source_diff': 5.7750000000002244e-05}, {'time': 0.022583444, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:14:13.450" endtime="20201112 10:14:13.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:13.469" level="INFO">${ACCURACY} = {'time': [0.02251925, 0.022583444, 0.022652917, 0.022723347, 0.022797056, 0.022867167, 0.022935, 0.023001125, 0.023069569, 0.023135458, 0.023201042, 0.023267403, 0.023331514, 0.02340325, 0.023467083, ...</msg>
<status status="PASS" starttime="20201112 10:14:13.455" endtime="20201112 10:14:13.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.474" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 10:14:13.473" endtime="20201112 10:14:13.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.476" level="INFO">VALUE: [5.7750000000002244e-05, 5.834700000000026e-05, 5.897300000000036e-05, 5.7750000000002244e-05, 5.83749999999994e-05, 5.895900000000079e-05, 5.716700000000033e-05, 5.8944000000001745e-05, 5.8444000000001245e-05, 5.8958000000001315e-05, 5.770900000000301e-05, 5.836099999999983e-05, 5.7778000000001384e-05, 5.841700000000158e-05, 5.83749999999994e-05, 5.7749999999998775e-05, 5.783400000000313e-05, 5.7750000000002244e-05, 5.9000000000000025e-05, 5.836099999999983e-05, 5.7763999999998344e-05, 5.7749999999998775e-05, 5.8972000000000885e-05, 5.8944000000001745e-05, 5.836099999999983e-05, 5.8986000000000455e-05, 5.7721999999999635e-05, 5.7750000000002244e-05, 5.834700000000026e-05, 5.776299999999887e-05, 5.8306000000001024e-05, 5.8971999999997415e-05, 5.833300000000069e-05, 5.7763999999998344e-05, 5.7180000000000425e-05, 5.7749999999998775e-05, 5.7736000000002674e-05, 5.8971999999997415e-05, 5.7763999999998344e-05, 5.8972000000000885e-05, 5.8958000000001315e-05, 5.8958000000001315e-05, 5.8347999999999733e-05, 5.8986000000000455e-05, 5.8972000000000885e-05, 5.776299999999887e-05, 5.83619999999993e-05, 5.7749999999998775e-05, 5.7179999999996955e-05, 5.894500000000122e-05]</msg>
<status status="PASS" starttime="20201112 10:14:13.475" endtime="20201112 10:14:13.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.470" endtime="20201112 10:14:13.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.487" endtime="20201112 10:14:13.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:13.490" endtime="20201112 10:14:13.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.489" endtime="20201112 10:14:13.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.485" endtime="20201112 10:14:13.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.109" endtime="20201112 10:14:13.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.108" endtime="20201112 10:14:13.511"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.520" endtime="20201112 10:14:13.538"></status>
</kw>
<msg timestamp="20201112 10:14:13.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.519" endtime="20201112 10:14:13.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.540" endtime="20201112 10:14:13.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.542" endtime="20201112 10:14:13.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.516" endtime="20201112 10:14:13.546"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.514" endtime="20201112 10:14:13.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.553" endtime="20201112 10:14:13.838"></status>
</kw>
<msg timestamp="20201112 10:14:13.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022491583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.552" endtime="20201112 10:14:13.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022491583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.843" endtime="20201112 10:14:13.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.851" endtime="20201112 10:14:13.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.549" endtime="20201112 10:14:13.854"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.547" endtime="20201112 10:14:13.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:13.858" level="INFO">${RESULT} = [{'time': 0.022551194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.961100000000108e-05, 'source_diff': 5.961100000000108e-05}, {'time': 0.022619347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:13.855" endtime="20201112 10:14:13.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:13.872" level="INFO">${ACCURACY} = {'time': [0.022551194, 0.022619347, 0.022689125, 0.022758889, 0.022827139, 0.022893208, 0.022963278, 0.023033167, 0.023103069, 0.023172917, 0.023245208, 0.023317361, 0.023382875, 0.023449125, 0.023520...</msg>
<status status="PASS" starttime="20201112 10:14:13.859" endtime="20201112 10:14:13.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.877" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 10:14:13.876" endtime="20201112 10:14:13.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.880" level="INFO">VALUE: [5.961100000000108e-05, 6.0194000000002995e-05, 6.0792000000000485e-05, 6.0778000000000915e-05, 5.958299999999847e-05, 5.958300000000194e-05, 5.9584000000001414e-05, 5.9555999999998804e-05, 5.95689999999989e-05, 6.01810000000029e-05, 6.079100000000101e-05, 6.011100000000158e-05, 6.018099999999943e-05, 5.958300000000194e-05, 6.0764000000001345e-05, 6.0179999999999956e-05, 5.9527999999999665e-05, 6.016699999999986e-05, 6.0806000000000054e-05, 6.015300000000029e-05, 5.956900000000237e-05, 6.01810000000029e-05, 6.0792000000000485e-05, 6.016699999999986e-05, 6.018099999999943e-05, 6.015300000000029e-05, 6.079100000000101e-05, 6.0778000000000915e-05, 5.959700000000151e-05, 5.9556000000002274e-05, 6.016699999999986e-05, 6.018099999999943e-05, 5.956900000000237e-05, 6.0166000000000386e-05, 6.015300000000029e-05, 5.9500000000000525e-05, 6.0193999999999526e-05, 6.0764000000001345e-05, 6.013900000000072e-05, 6.0777999999997445e-05, 6.138900000000197e-05, 6.0194000000002995e-05, 6.016699999999986e-05, 5.955499999999933e-05, 6.0166000000000386e-05, 5.9541999999999234e-05, 6.0778000000000915e-05, 6.013900000000072e-05, 6.0778000000000915e-05, 6.077699999999797e-05]</msg>
<status status="PASS" starttime="20201112 10:14:13.878" endtime="20201112 10:14:13.881"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.873" endtime="20201112 10:14:13.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.884" endtime="20201112 10:14:13.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:13.887" endtime="20201112 10:14:13.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.886" endtime="20201112 10:14:13.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.882" endtime="20201112 10:14:13.908"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.512" endtime="20201112 10:14:13.908"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.512" endtime="20201112 10:14:13.908"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.917" endtime="20201112 10:14:13.935"></status>
</kw>
<msg timestamp="20201112 10:14:13.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.915" endtime="20201112 10:14:13.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.937" endtime="20201112 10:14:13.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.939" endtime="20201112 10:14:13.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.913" endtime="20201112 10:14:13.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.911" endtime="20201112 10:14:13.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.950" endtime="20201112 10:14:14.235"></status>
</kw>
<msg timestamp="20201112 10:14:14.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022361306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022430139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.948" endtime="20201112 10:14:14.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022361306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022430139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.240" endtime="20201112 10:14:14.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.248" endtime="20201112 10:14:14.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.945" endtime="20201112 10:14:14.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.944" endtime="20201112 10:14:14.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:14.255" level="INFO">${RESULT} = [{'time': 0.022430139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.883300000000078e-05, 'source_diff': 6.883300000000078e-05}, {'time': 0.022508153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:14.252" endtime="20201112 10:14:14.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:14.269" level="INFO">${ACCURACY} = {'time': [0.022430139, 0.022508153, 0.022592153, 0.022674181, 0.022754167, 0.022840181, 0.022926181, 0.023006194, 0.023084208, 0.023168208, 0.023254222, 0.023338278, 0.023424236, 0.02351025, 0.0235962...</msg>
<status status="PASS" starttime="20201112 10:14:14.256" endtime="20201112 10:14:14.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.274" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 10:14:14.273" endtime="20201112 10:14:14.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.277" level="INFO">VALUE: [6.883300000000078e-05, 6.711099999999817e-05, 6.793100000000024e-05, 6.736200000000137e-05, 6.876399999999894e-05, 6.741700000000017e-05, 6.833399999999976e-05, 6.826299999999896e-05, 6.74299999999968e-05, 6.816599999999798e-05, 6.716600000000045e-05, 6.770899999999913e-05, 6.850000000000259e-05, 6.87359999999998e-05, 6.761099999999867e-05, 6.898600000000005e-05, 6.865299999999838e-05, 6.78480000000023e-05, 6.87640000000024e-05, 6.7583999999999e-05, 6.824999999999887e-05, 6.880600000000112e-05, 6.85970000000001e-05, 6.848599999999955e-05, 6.89299999999983e-05, 6.883300000000078e-05, 6.843100000000074e-05, 6.883300000000078e-05, 6.708299999999903e-05, 6.72640000000009e-05, 6.874999999999937e-05, 6.80559999999969e-05, 6.806999999999994e-05, 6.793000000000077e-05, 6.749999999999812e-05, 6.893000000000177e-05, 6.899999999999962e-05, 6.824999999999887e-05, 6.87359999999998e-05, 6.808300000000003e-05, 6.808300000000003e-05, 6.85970000000001e-05, 6.806999999999994e-05, 6.726399999999744e-05, 6.857000000000044e-05, 6.743099999999974e-05, 6.781999999999969e-05, 6.775000000000184e-05, 6.893000000000177e-05, 6.751400000000116e-05]</msg>
<status status="PASS" starttime="20201112 10:14:14.275" endtime="20201112 10:14:14.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.270" endtime="20201112 10:14:14.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.280" endtime="20201112 10:14:14.282"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:14.284" endtime="20201112 10:14:14.303"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.282" endtime="20201112 10:14:14.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.279" endtime="20201112 10:14:14.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.909" endtime="20201112 10:14:14.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.908" endtime="20201112 10:14:14.305"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.314" endtime="20201112 10:14:14.332"></status>
</kw>
<msg timestamp="20201112 10:14:14.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.312" endtime="20201112 10:14:14.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.334" endtime="20201112 10:14:14.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.336" endtime="20201112 10:14:14.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.310" endtime="20201112 10:14:14.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.307" endtime="20201112 10:14:14.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.347" endtime="20201112 10:14:14.633"></status>
</kw>
<msg timestamp="20201112 10:14:14.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.345" endtime="20201112 10:14:14.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022437681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.637" endtime="20201112 10:14:14.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.646" endtime="20201112 10:14:14.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.342" endtime="20201112 10:14:14.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.341" endtime="20201112 10:14:14.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:14.653" level="INFO">${RESULT} = [{'time': 0.022507319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.963800000000034e-05, 'source_diff': 6.963800000000034e-05}, {'time': 0.022591333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:14.649" endtime="20201112 10:14:14.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:14.667" level="INFO">${ACCURACY} = {'time': [0.022507319, 0.022591333, 0.022681347, 0.022769375, 0.022855403, 0.022935403, 0.023019375, 0.023105403, 0.023193431, 0.023281431, 0.023361417, 0.023449486, 0.023537444, 0.023627444, 0.023711...</msg>
<status status="PASS" starttime="20201112 10:14:14.654" endtime="20201112 10:14:14.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.671" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 10:14:14.670" endtime="20201112 10:14:14.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.674" level="INFO">VALUE: [6.963800000000034e-05, 7.068000000000005e-05, 7.084700000000235e-05, 6.944400000000184e-05, 7.087500000000149e-05, 7.029199999999958e-05, 6.966700000000242e-05, 6.943100000000174e-05, 7.104200000000033e-05, 6.994499999999834e-05, 6.916699999999845e-05, 7.05689999999995e-05, 7.076300000000146e-05, 7.041600000000023e-05, 6.922200000000073e-05, 7.066600000000048e-05, 6.933300000000128e-05, 6.99169999999992e-05, 6.923699999999977e-05, 6.913900000000278e-05, 6.918100000000149e-05, 7.018100000000249e-05, 6.966700000000242e-05, 7.066699999999995e-05, 7.019399999999912e-05, 7.083299999999931e-05, 6.941599999999923e-05, 7.048600000000155e-05, 6.976399999999994e-05, 7.011100000000117e-05, 7.037500000000099e-05, 7.036100000000142e-05, 7.011100000000117e-05, 6.986099999999745e-05, 7.105500000000042e-05, 6.956999999999797e-05, 7.058399999999854e-05, 6.90970000000006e-05, 6.958299999999806e-05, 6.994399999999887e-05, 7.081899999999974e-05, 6.94299999999988e-05, 6.969499999999809e-05, 6.983300000000178e-05, 6.976399999999994e-05, 7.094499999999934e-05, 7.098600000000205e-05, 6.975000000000037e-05, 7.058399999999854e-05, 7.043099999999927e-05]</msg>
<status status="PASS" starttime="20201112 10:14:14.673" endtime="20201112 10:14:14.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.668" endtime="20201112 10:14:14.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.678" endtime="20201112 10:14:14.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:14.681" endtime="20201112 10:14:14.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.680" endtime="20201112 10:14:14.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.676" endtime="20201112 10:14:14.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.306" endtime="20201112 10:14:14.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.305" endtime="20201112 10:14:14.702"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.711" endtime="20201112 10:14:14.729"></status>
</kw>
<msg timestamp="20201112 10:14:14.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.710" endtime="20201112 10:14:14.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.731" endtime="20201112 10:14:14.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.733" endtime="20201112 10:14:14.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.707" endtime="20201112 10:14:14.737"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.705" endtime="20201112 10:14:14.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.744" endtime="20201112 10:14:15.031"></status>
</kw>
<msg timestamp="20201112 10:14:15.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022885167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022957819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.742" endtime="20201112 10:14:15.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022885167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022957819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.035" endtime="20201112 10:14:15.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.043" endtime="20201112 10:14:15.045"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.740" endtime="20201112 10:14:15.046"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.738" endtime="20201112 10:14:15.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:15.050" level="INFO">${RESULT} = [{'time': 0.022957819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.265199999999944e-05, 'source_diff': 7.265199999999944e-05}, {'time': 0.023047833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:15.047" endtime="20201112 10:14:15.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:15.066" level="INFO">${ACCURACY} = {'time': [0.022957819, 0.023047833, 0.023135861, 0.023221861, 0.023311861, 0.023395875, 0.023485889, 0.023571889, 0.023661903, 0.023745917, 0.023835931, 0.023919931, 0.024009958, 0.024096, 0.024183986...</msg>
<status status="PASS" starttime="20201112 10:14:15.051" endtime="20201112 10:14:15.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.070" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 10:14:15.069" endtime="20201112 10:14:15.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.073" level="INFO">VALUE: [7.265199999999944e-05, 7.266599999999901e-05, 7.136099999999895e-05, 7.209700000000013e-05, 7.205500000000142e-05, 7.291699999999873e-05, 7.118100000000002e-05, 7.166699999999748e-05, 7.216700000000145e-05, 7.218099999999755e-05, 7.118100000000002e-05, 7.227799999999854e-05, 7.225000000000287e-05, 7.255599999999793e-05, 7.170800000000019e-05, 7.108299999999956e-05, 7.276400000000294e-05, 7.1069e-05, 7.1069e-05, 7.140300000000113e-05, 7.136099999999895e-05, 7.19309999999973e-05, 7.113900000000131e-05, 7.215300000000188e-05, 7.234700000000038e-05, 7.15690000000005e-05, 7.191599999999826e-05, 7.186100000000292e-05, 7.195800000000044e-05, 7.166700000000095e-05, 7.118100000000002e-05, 7.232000000000072e-05, 7.194499999999687e-05, 7.282000000000122e-05, 7.108399999999904e-05, 7.226399999999897e-05, 7.208400000000004e-05, 7.16109999999992e-05, 7.254100000000235e-05, 7.279200000000208e-05, 7.108299999999956e-05, 7.176400000000194e-05, 7.108299999999956e-05, 7.245800000000094e-05, 7.229200000000158e-05, 7.126400000000144e-05, 7.176399999999847e-05, 7.111199999999818e-05, 7.108399999999904e-05, 7.12629999999985e-05]</msg>
<status status="PASS" starttime="20201112 10:14:15.072" endtime="20201112 10:14:15.074"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.067" endtime="20201112 10:14:15.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.077" endtime="20201112 10:14:15.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:15.080" endtime="20201112 10:14:15.100"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.079" endtime="20201112 10:14:15.100"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.075" endtime="20201112 10:14:15.101"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.703" endtime="20201112 10:14:15.101"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.703" endtime="20201112 10:14:15.101"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.110" endtime="20201112 10:14:15.129"></status>
</kw>
<msg timestamp="20201112 10:14:15.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.109" endtime="20201112 10:14:15.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.130" endtime="20201112 10:14:15.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.133" endtime="20201112 10:14:15.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.106" endtime="20201112 10:14:15.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.104" endtime="20201112 10:14:15.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.143" endtime="20201112 10:14:15.429"></status>
</kw>
<msg timestamp="20201112 10:14:15.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.142" endtime="20201112 10:14:15.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.434" endtime="20201112 10:14:15.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.442" endtime="20201112 10:14:15.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.139" endtime="20201112 10:14:15.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.137" endtime="20201112 10:14:15.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:15.449" level="INFO">${RESULT} = [{'time': 0.022587764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.422199999999879e-05, 'source_diff': 7.422199999999879e-05}, {'time': 0.02267375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:15.446" endtime="20201112 10:14:15.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:15.463" level="INFO">${ACCURACY} = {'time': [0.022587764, 0.02267375, 0.022761736, 0.022851736, 0.022935736, 0.02301975, 0.02310975, 0.023199764, 0.023293778, 0.023377806, 0.023467792, 0.023557806, 0.023649847, 0.023743819, 0.023831847...</msg>
<status status="PASS" starttime="20201112 10:14:15.450" endtime="20201112 10:14:15.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.468" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 10:14:15.467" endtime="20201112 10:14:15.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.471" level="INFO">VALUE: [7.422199999999879e-05, 7.470799999999972e-05, 7.402800000000029e-05, 7.49440000000004e-05, 7.334700000000138e-05, 7.40829999999991e-05, 7.434699999999891e-05, 7.450000000000165e-05, 7.476400000000147e-05, 7.30560000000019e-05, 7.391699999999973e-05, 7.368099999999905e-05, 7.320800000000169e-05, 7.399999999999768e-05, 7.309700000000113e-05, 7.392999999999983e-05, 7.416600000000051e-05, 7.330599999999868e-05, 7.476400000000147e-05, 7.427800000000054e-05, 7.32500000000004e-05, 7.409699999999866e-05, 7.477700000000156e-05, 7.39309999999993e-05, 7.368099999999905e-05, 7.468000000000058e-05, 7.358300000000206e-05, 7.333299999999834e-05, 7.426400000000097e-05, 7.42500000000014e-05, 7.359700000000163e-05, 7.474999999999843e-05, 7.429200000000011e-05, 7.327799999999954e-05, 7.491700000000073e-05, 7.416699999999998e-05, 7.332000000000172e-05, 7.474999999999843e-05, 7.341599999999976e-05, 7.498599999999911e-05, 7.443000000000033e-05, 7.384699999999841e-05, 7.32500000000004e-05, 7.376400000000047e-05, 7.42639999999975e-05, 7.49310000000003e-05, 7.436199999999796e-05, 7.39170000000032e-05, 7.383400000000179e-05, 7.458399999999907e-05]</msg>
<status status="PASS" starttime="20201112 10:14:15.469" endtime="20201112 10:14:15.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.464" endtime="20201112 10:14:15.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.474" endtime="20201112 10:14:15.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:15.478" endtime="20201112 10:14:15.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.476" endtime="20201112 10:14:15.498"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.473" endtime="20201112 10:14:15.498"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.102" endtime="20201112 10:14:15.499"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.102" endtime="20201112 10:14:15.499"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.508" endtime="20201112 10:14:15.525"></status>
</kw>
<msg timestamp="20201112 10:14:15.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.506" endtime="20201112 10:14:15.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.527" endtime="20201112 10:14:15.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.530" endtime="20201112 10:14:15.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.504" endtime="20201112 10:14:15.533"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.501" endtime="20201112 10:14:15.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.540" endtime="20201112 10:14:15.826"></status>
</kw>
<msg timestamp="20201112 10:14:15.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022565528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.539" endtime="20201112 10:14:15.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022565528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.831" endtime="20201112 10:14:15.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.839" endtime="20201112 10:14:15.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.536" endtime="20201112 10:14:15.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.534" endtime="20201112 10:14:15.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:15.846" level="INFO">${RESULT} = [{'time': 0.022641514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.598600000000011e-05, 'source_diff': 7.598600000000011e-05}, {'time': 0.022727514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:15.843" endtime="20201112 10:14:15.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:15.860" level="INFO">${ACCURACY} = {'time': [0.022641514, 0.022727514, 0.022815556, 0.022909542, 0.023003542, 0.023093569, 0.023183569, 0.023269569, 0.023359583, 0.023447611, 0.023535597, 0.023627639, 0.023721653, 0.023815639, 0.023901...</msg>
<status status="PASS" starttime="20201112 10:14:15.847" endtime="20201112 10:14:15.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.865" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 10:14:15.864" endtime="20201112 10:14:15.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.867" level="INFO">VALUE: [7.598600000000011e-05, 7.62639999999995e-05, 7.587499999999955e-05, 7.527800000000154e-05, 7.509799999999914e-05, 7.54440000000009e-05, 7.550000000000265e-05, 7.591599999999879e-05, 7.617999999999861e-05, 7.652799999999932e-05, 7.673599999999739e-05, 7.527799999999807e-05, 7.61249999999998e-05, 7.604199999999839e-05, 7.593099999999783e-05, 7.566700000000148e-05, 7.584799999999989e-05, 7.6764e-05, 7.541699999999776e-05, 7.598600000000011e-05, 7.642999999999886e-05, 7.561099999999973e-05, 7.623600000000036e-05, 7.675000000000043e-05, 7.6764e-05, 7.622200000000079e-05, 7.541700000000123e-05, 7.516700000000098e-05, 7.687500000000055e-05, 7.508399999999957e-05, 7.65839999999976e-05, 7.591600000000226e-05, 7.679099999999967e-05, 7.697200000000154e-05, 7.654199999999889e-05, 7.60830000000011e-05, 7.670800000000172e-05, 7.593099999999783e-05, 7.599999999999968e-05, 7.693099999999883e-05, 7.668099999999858e-05, 7.680600000000218e-05, 7.559700000000016e-05, 7.592999999999836e-05, 7.567999999999811e-05, 7.683300000000184e-05, 7.658299999999812e-05, 7.54029999999982e-05, 7.568100000000105e-05, 7.700000000000068e-05]</msg>
<status status="PASS" starttime="20201112 10:14:15.866" endtime="20201112 10:14:15.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.861" endtime="20201112 10:14:15.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.871" endtime="20201112 10:14:15.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:15.875" endtime="20201112 10:14:15.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.873" endtime="20201112 10:14:15.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.869" endtime="20201112 10:14:15.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.500" endtime="20201112 10:14:15.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.499" endtime="20201112 10:14:15.896"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.905" endtime="20201112 10:14:15.924"></status>
</kw>
<msg timestamp="20201112 10:14:15.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.903" endtime="20201112 10:14:15.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.925" endtime="20201112 10:14:15.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.928" endtime="20201112 10:14:15.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.900" endtime="20201112 10:14:15.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.898" endtime="20201112 10:14:15.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.938" endtime="20201112 10:14:16.225"></status>
</kw>
<msg timestamp="20201112 10:14:16.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022831542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022909875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.937" endtime="20201112 10:14:16.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022831542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022909875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:16.229" endtime="20201112 10:14:16.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.238" endtime="20201112 10:14:16.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.934" endtime="20201112 10:14:16.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.932" endtime="20201112 10:14:16.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:16.245" level="INFO">${RESULT} = [{'time': 0.022909875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.833299999999987e-05, 'source_diff': 7.833299999999987e-05}, {'time': 0.023005847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:16.241" endtime="20201112 10:14:16.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:16.259" level="INFO">${ACCURACY} = {'time': [0.022909875, 0.023005847, 0.023095847, 0.023189875, 0.023285875, 0.023375889, 0.023471903, 0.023563903, 0.023661917, 0.023757944, 0.023853944, 0.023943958, 0.024039972, 0.024135986, 0.024232...</msg>
<status status="PASS" starttime="20201112 10:14:16.246" endtime="20201112 10:14:16.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.264" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 10:14:16.263" endtime="20201112 10:14:16.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.266" level="INFO">VALUE: [7.833299999999987e-05, 7.85969999999997e-05, 7.791600000000079e-05, 7.881899999999734e-05, 7.756899999999955e-05, 7.743099999999933e-05, 7.868099999999711e-05, 7.783400000000232e-05, 7.823600000000236e-05, 7.761099999999826e-05, 7.876299999999906e-05, 7.809700000000266e-05, 7.841600000000129e-05, 7.818000000000061e-05, 7.802800000000082e-05, 7.89450000000004e-05, 7.855599999999699e-05, 7.843100000000033e-05, 7.716699999999951e-05, 7.734800000000139e-05, 7.825000000000193e-05, 7.793000000000036e-05, 7.786099999999851e-05, 7.877800000000157e-05, 7.891600000000179e-05, 7.847199999999957e-05, 7.844399999999696e-05, 7.851400000000175e-05, 7.841700000000076e-05, 7.863900000000187e-05, 7.765299999999697e-05, 7.895899999999997e-05, 7.788799999999818e-05, 7.715299999999994e-05, 7.816600000000104e-05, 7.902800000000182e-05, 7.844400000000043e-05, 7.824999999999846e-05, 7.8458e-05, 7.843100000000033e-05, 7.886100000000298e-05, 7.829200000000064e-05, 7.806999999999953e-05, 7.74449999999989e-05, 7.868100000000058e-05, 7.731999999999878e-05, 7.742999999999986e-05, 7.851400000000175e-05, 7.776399999999753e-05, 7.741700000000323e-05]</msg>
<status status="PASS" starttime="20201112 10:14:16.265" endtime="20201112 10:14:16.267"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.260" endtime="20201112 10:14:16.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.270" endtime="20201112 10:14:16.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:16.274" endtime="20201112 10:14:16.293"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.272" endtime="20201112 10:14:16.294"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.268" endtime="20201112 10:14:16.294"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.896" endtime="20201112 10:14:16.294"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.896" endtime="20201112 10:14:16.295"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.304" endtime="20201112 10:14:16.322"></status>
</kw>
<msg timestamp="20201112 10:14:16.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.302" endtime="20201112 10:14:16.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.324" endtime="20201112 10:14:16.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.326" endtime="20201112 10:14:16.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.299" endtime="20201112 10:14:16.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.297" endtime="20201112 10:14:16.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.337" endtime="20201112 10:14:16.624"></status>
</kw>
<msg timestamp="20201112 10:14:16.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022791917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022872722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:16.335" endtime="20201112 10:14:16.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022791917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022872722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:16.628" endtime="20201112 10:14:16.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.636" endtime="20201112 10:14:16.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.333" endtime="20201112 10:14:16.639"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.331" endtime="20201112 10:14:16.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:16.643" level="INFO">${RESULT} = [{'time': 0.022872722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.080500000000324e-05, 'source_diff': 8.080500000000324e-05}, {'time': 0.022966736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:16.640" endtime="20201112 10:14:16.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:16.659" level="INFO">${ACCURACY} = {'time': [0.022872722, 0.022966736, 0.02306275, 0.023152792, 0.023242764, 0.023336778, 0.023436806, 0.023534806, 0.023630819, 0.023720819, 0.023812833, 0.023904847, 0.024002861, 0.024094861, 0.0241848...</msg>
<status status="PASS" starttime="20201112 10:14:16.644" endtime="20201112 10:14:16.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.663" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 10:14:16.662" endtime="20201112 10:14:16.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.666" level="INFO">VALUE: [8.080500000000324e-05, 8.00970000000012e-05, 7.993099999999836e-05, 7.937499999999958e-05, 8.009699999999773e-05, 7.95840000000006e-05, 8.087500000000108e-05, 7.951399999999928e-05, 8.090200000000075e-05, 8.000000000000021e-05, 7.992999999999889e-05, 8.000000000000021e-05, 8.04169999999993e-05, 8.001399999999978e-05, 7.943100000000133e-05, 8.066699999999954e-05, 8.066699999999954e-05, 8.106900000000306e-05, 7.909799999999967e-05, 8.058399999999813e-05, 8.061100000000126e-05, 8.040200000000025e-05, 7.916699999999804e-05, 8.034700000000145e-05, 8.059699999999823e-05, 8.088900000000065e-05, 8.101399999999731e-05, 8.09450000000024e-05, 8.031999999999831e-05, 8.07780000000001e-05, 8.052799999999985e-05, 8.07369999999974e-05, 8.038800000000068e-05, 7.969400000000168e-05, 8.034699999999798e-05, 7.974999999999996e-05, 7.95970000000007e-05, 8.058300000000213e-05, 8.075000000000096e-05, 7.991700000000226e-05, 8.100000000000121e-05, 7.95840000000006e-05, 8.026400000000003e-05, 7.959699999999723e-05, 8.042999999999939e-05, 8.001399999999978e-05, 7.90970000000002e-05, 7.994400000000193e-05, 8.016699999999904e-05, 7.966699999999854e-05]</msg>
<status status="PASS" starttime="20201112 10:14:16.665" endtime="20201112 10:14:16.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.660" endtime="20201112 10:14:16.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.670" endtime="20201112 10:14:16.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:16.673" endtime="20201112 10:14:16.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.672" endtime="20201112 10:14:16.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.668" endtime="20201112 10:14:16.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.296" endtime="20201112 10:14:16.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.295" endtime="20201112 10:14:16.694"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.703" endtime="20201112 10:14:16.722"></status>
</kw>
<msg timestamp="20201112 10:14:16.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.702" endtime="20201112 10:14:16.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.724" endtime="20201112 10:14:16.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.726" endtime="20201112 10:14:16.729"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.699" endtime="20201112 10:14:16.729"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.697" endtime="20201112 10:14:16.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.737" endtime="20201112 10:14:17.024"></status>
</kw>
<msg timestamp="20201112 10:14:17.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022462306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022544806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:16.735" endtime="20201112 10:14:17.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022462306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022544806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.028" endtime="20201112 10:14:17.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.036" endtime="20201112 10:14:17.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.732" endtime="20201112 10:14:17.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.731" endtime="20201112 10:14:17.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:17.043" level="INFO">${RESULT} = [{'time': 0.022544806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.249999999999924e-05, 'source_diff': 8.249999999999924e-05}, {'time': 0.022638806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:17.040" endtime="20201112 10:14:17.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:17.058" level="INFO">${ACCURACY} = {'time': [0.022544806, 0.022638806, 0.022732819, 0.022824833, 0.022924847, 0.023024861, 0.023122861, 0.023220875, 0.023316903, 0.023418903, 0.023518958, 0.023618931, 0.023714944, 0.023812958, 0.023907...</msg>
<status status="PASS" starttime="20201112 10:14:17.044" endtime="20201112 10:14:17.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.062" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 10:14:17.061" endtime="20201112 10:14:17.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.065" level="INFO">VALUE: [8.249999999999924e-05, 8.274999999999949e-05, 8.238800000000268e-05, 8.134699999999898e-05, 8.243000000000139e-05, 8.200000000000221e-05, 8.175000000000196e-05, 8.259699999999676e-05, 8.19170000000008e-05, 8.251400000000228e-05, 8.226399999999856e-05, 8.226399999999856e-05, 8.261100000000327e-05, 8.109699999999873e-05, 8.199999999999874e-05, 8.201400000000178e-05, 8.226399999999856e-05, 8.193000000000089e-05, 8.116700000000004e-05, 8.134699999999898e-05, 8.156999999999956e-05, 8.224999999999899e-05, 8.124999999999799e-05, 8.293000000000189e-05, 8.116600000000057e-05, 8.199999999999874e-05, 8.208299999999669e-05, 8.130599999999974e-05, 8.226399999999856e-05, 8.17780000000011e-05, 8.191699999999733e-05, 8.116700000000004e-05, 8.269500000000068e-05, 8.134800000000192e-05, 8.109800000000167e-05, 8.175000000000196e-05, 8.259700000000023e-05, 8.17780000000011e-05, 8.126399999999756e-05, 8.191600000000132e-05, 8.216700000000104e-05, 8.201399999999831e-05, 8.24309999999974e-05, 8.301399999999931e-05, 8.10979999999982e-05, 8.14170000000003e-05, 8.301400000000278e-05, 8.243000000000139e-05, 8.269400000000121e-05, 8.186100000000252e-05]</msg>
<status status="PASS" starttime="20201112 10:14:17.063" endtime="20201112 10:14:17.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.059" endtime="20201112 10:14:17.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.069" endtime="20201112 10:14:17.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:17.072" endtime="20201112 10:14:17.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.071" endtime="20201112 10:14:17.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.067" endtime="20201112 10:14:17.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.695" endtime="20201112 10:14:17.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.695" endtime="20201112 10:14:17.093"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.102" endtime="20201112 10:14:17.121"></status>
</kw>
<msg timestamp="20201112 10:14:17.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.101" endtime="20201112 10:14:17.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.123" endtime="20201112 10:14:17.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.125" endtime="20201112 10:14:17.128"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.098" endtime="20201112 10:14:17.128"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.096" endtime="20201112 10:14:17.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.136" endtime="20201112 10:14:17.421"></status>
</kw>
<msg timestamp="20201112 10:14:17.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022600236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022684875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.134" endtime="20201112 10:14:17.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022600236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022684875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.425" endtime="20201112 10:14:17.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.433" endtime="20201112 10:14:17.435"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.131" endtime="20201112 10:14:17.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.130" endtime="20201112 10:14:17.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:17.441" level="INFO">${RESULT} = [{'time': 0.022684875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.463900000000094e-05, 'source_diff': 8.463900000000094e-05}, {'time': 0.022782875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:17.437" endtime="20201112 10:14:17.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:17.455" level="INFO">${ACCURACY} = {'time': [0.022684875, 0.022782875, 0.022882903, 0.022984903, 0.023080917, 0.023184931, 0.023284944, 0.023386944, 0.023482958, 0.023586972, 0.023683, 0.023785, 0.023883, 0.023987014, 0.024081042, 0.02...</msg>
<status status="PASS" starttime="20201112 10:14:17.442" endtime="20201112 10:14:17.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.459" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 10:14:17.458" endtime="20201112 10:14:17.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.462" level="INFO">VALUE: [8.463900000000094e-05, 8.4153e-05, 8.3846999999998e-05, 8.343100000000186e-05, 8.318099999999815e-05, 8.451399999999734e-05, 8.373599999999745e-05, 8.375000000000049e-05, 8.490200000000128e-05, 8.38330000000019e-05, 8.494399999999999e-05, 8.433299999999894e-05, 8.458300000000266e-05, 8.458300000000266e-05, 8.344500000000143e-05, 8.49309999999999e-05, 8.391699999999933e-05, 8.468000000000017e-05, 8.499999999999827e-05, 8.341600000000282e-05, 8.36529999999995e-05, 8.386100000000105e-05, 8.495899999999904e-05, 8.400000000000074e-05, 8.341699999999883e-05, 8.350000000000024e-05, 8.426400000000056e-05, 8.388800000000071e-05, 8.381900000000234e-05, 8.408299999999869e-05, 8.493000000000042e-05, 8.451399999999734e-05, 8.46110000000018e-05, 8.448700000000114e-05, 8.368100000000211e-05, 8.36529999999995e-05, 8.433400000000188e-05, 8.326399999999956e-05, 8.44309999999994e-05, 8.437500000000112e-05, 8.358300000000166e-05, 8.491600000000085e-05, 8.468000000000017e-05, 8.466700000000008e-05, 8.469499999999922e-05, 8.497199999999913e-05, 8.341699999999883e-05, 8.368099999999865e-05, 8.351399999999981e-05, 8.39309999999989e-05]</msg>
<status status="PASS" starttime="20201112 10:14:17.461" endtime="20201112 10:14:17.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.456" endtime="20201112 10:14:17.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.466" endtime="20201112 10:14:17.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:17.469" endtime="20201112 10:14:17.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.468" endtime="20201112 10:14:17.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.464" endtime="20201112 10:14:17.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.094" endtime="20201112 10:14:17.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.094" endtime="20201112 10:14:17.490"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.499" endtime="20201112 10:14:17.517"></status>
</kw>
<msg timestamp="20201112 10:14:17.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.498" endtime="20201112 10:14:17.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.519" endtime="20201112 10:14:17.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.522" endtime="20201112 10:14:17.524"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.495" endtime="20201112 10:14:17.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.493" endtime="20201112 10:14:17.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.532" endtime="20201112 10:14:17.817"></status>
</kw>
<msg timestamp="20201112 10:14:17.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022567819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.531" endtime="20201112 10:14:17.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022567819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022653819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.822" endtime="20201112 10:14:17.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.830" endtime="20201112 10:14:17.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.528" endtime="20201112 10:14:17.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.526" endtime="20201112 10:14:17.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:17.837" level="INFO">${RESULT} = [{'time': 0.022653819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.599999999999927e-05, 'source_diff': 8.599999999999927e-05}, {'time': 0.022753833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:17.834" endtime="20201112 10:14:17.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:17.851" level="INFO">${ACCURACY} = {'time': [0.022653819, 0.022753833, 0.022851847, 0.022951917, 0.023053875, 0.023153889, 0.023259889, 0.023365903, 0.023467903, 0.023567917, 0.023665931, 0.023765986, 0.023865944, 0.023967958, 0.024066...</msg>
<status status="PASS" starttime="20201112 10:14:17.838" endtime="20201112 10:14:17.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.856" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 10:14:17.855" endtime="20201112 10:14:17.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.858" level="INFO">VALUE: [8.599999999999927e-05, 8.559699999999976e-05, 8.677800000000263e-05, 8.582000000000034e-05, 8.56110000000028e-05, 8.638899999999922e-05, 8.5847e-05, 8.675000000000002e-05, 8.624999999999952e-05, 8.684800000000048e-05, 8.568100000000065e-05, 8.572199999999988e-05, 8.531900000000037e-05, 8.523600000000242e-05, 8.632000000000084e-05, 8.527800000000113e-05, 8.676399999999959e-05, 8.693099999999843e-05, 8.64860000000002e-05, 8.623599999999995e-05, 8.534700000000298e-05, 8.575000000000249e-05, 8.655499999999858e-05, 8.577799999999816e-05, 8.63059999999978e-05, 8.605500000000155e-05, 8.637499999999965e-05, 8.580600000000077e-05, 8.609700000000026e-05, 8.54310000000004e-05, 8.533399999999941e-05, 8.559799999999923e-05, 8.541700000000083e-05, 8.519400000000024e-05, 8.5847e-05, 8.591599999999838e-05, 8.552799999999791e-05, 8.541700000000083e-05, 8.636100000000008e-05, 8.675000000000002e-05, 8.591700000000133e-05, 8.636199999999955e-05, 8.659800000000023e-05, 8.545800000000006e-05, 8.619400000000124e-05, 8.552800000000138e-05, 8.641599999999888e-05, 8.602799999999841e-05, 8.591700000000133e-05, 8.562500000000237e-05]</msg>
<status status="PASS" starttime="20201112 10:14:17.857" endtime="20201112 10:14:17.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.852" endtime="20201112 10:14:17.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.862" endtime="20201112 10:14:17.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:17.866" endtime="20201112 10:14:17.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.864" endtime="20201112 10:14:17.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.861" endtime="20201112 10:14:17.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.491" endtime="20201112 10:14:17.887"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.491" endtime="20201112 10:14:17.887"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.896" endtime="20201112 10:14:17.916"></status>
</kw>
<msg timestamp="20201112 10:14:17.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.894" endtime="20201112 10:14:17.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.918" endtime="20201112 10:14:17.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.921" endtime="20201112 10:14:17.923"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.892" endtime="20201112 10:14:17.924"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.889" endtime="20201112 10:14:17.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.931" endtime="20201112 10:14:18.218"></status>
</kw>
<msg timestamp="20201112 10:14:18.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022725153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.929" endtime="20201112 10:14:18.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022725153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.222" endtime="20201112 10:14:18.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.231" endtime="20201112 10:14:18.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.927" endtime="20201112 10:14:18.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.925" endtime="20201112 10:14:18.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:18.238" level="INFO">${RESULT} = [{'time': 0.022725153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000000077e-05, 'source_diff': 8.750000000000077e-05}, {'time': 0.022829194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:18.234" endtime="20201112 10:14:18.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:18.253" level="INFO">${ACCURACY} = {'time': [0.022725153, 0.022829194, 0.022929167, 0.023029167, 0.023135194, 0.023237194, 0.023345208, 0.023445236, 0.023545236, 0.02364725, 0.023747278, 0.023845333, 0.023953292, 0.024059292, 0.0241593...</msg>
<status status="PASS" starttime="20201112 10:14:18.239" endtime="20201112 10:14:18.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.258" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 10:14:18.257" endtime="20201112 10:14:18.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.260" level="INFO">VALUE: [8.750000000000077e-05, 8.823600000000195e-05, 8.758400000000166e-05, 8.788900000000072e-05, 8.81800000000002e-05, 8.71799999999992e-05, 8.883299999999997e-05, 8.870799999999984e-05, 8.876400000000159e-05, 8.875000000000202e-05, 8.758400000000166e-05, 8.742999999999945e-05, 8.795900000000204e-05, 8.726400000000009e-05, 8.791699999999986e-05, 8.833299999999947e-05, 8.824999999999805e-05, 8.870799999999984e-05, 8.776400000000059e-05, 8.791699999999986e-05, 8.751400000000034e-05, 8.733300000000194e-05, 8.775000000000102e-05, 8.776400000000059e-05, 8.898599999999923e-05, 8.787500000000115e-05, 8.709700000000126e-05, 8.773600000000145e-05, 8.891600000000138e-05, 8.747200000000163e-05, 8.725000000000052e-05, 8.843099999999993e-05, 8.834699999999904e-05, 8.725000000000052e-05, 8.71120000000003e-05, 8.836200000000155e-05, 8.881999999999987e-05, 8.761099999999786e-05, 8.845799999999959e-05, 8.81800000000002e-05, 8.738900000000022e-05, 8.806900000000312e-05, 8.858299999999972e-05, 8.856999999999962e-05, 8.79310000000029e-05, 8.902799999999794e-05, 8.759799999999776e-05, 8.791600000000038e-05, 8.81800000000002e-05, 8.866600000000113e-05]</msg>
<status status="PASS" starttime="20201112 10:14:18.259" endtime="20201112 10:14:18.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.254" endtime="20201112 10:14:18.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.264" endtime="20201112 10:14:18.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:18.267" endtime="20201112 10:14:18.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.266" endtime="20201112 10:14:18.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.262" endtime="20201112 10:14:18.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.888" endtime="20201112 10:14:18.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.887" endtime="20201112 10:14:18.288"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.297" endtime="20201112 10:14:18.317"></status>
</kw>
<msg timestamp="20201112 10:14:18.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.296" endtime="20201112 10:14:18.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.319" endtime="20201112 10:14:18.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.321" endtime="20201112 10:14:18.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.293" endtime="20201112 10:14:18.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.291" endtime="20201112 10:14:18.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.332" endtime="20201112 10:14:18.618"></status>
</kw>
<msg timestamp="20201112 10:14:18.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022720486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022809639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.330" endtime="20201112 10:14:18.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022720486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022809639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.622" endtime="20201112 10:14:18.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.631" endtime="20201112 10:14:18.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.328" endtime="20201112 10:14:18.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.326" endtime="20201112 10:14:18.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:18.638" level="INFO">${RESULT} = [{'time': 0.022809639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.915299999999807e-05, 'source_diff': 8.915299999999807e-05}, {'time': 0.022917653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:18.634" endtime="20201112 10:14:18.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:18.652" level="INFO">${ACCURACY} = {'time': [0.022809639, 0.022917653, 0.023021667, 0.023121681, 0.023229778, 0.023339722, 0.023441722, 0.023541722, 0.023651736, 0.02376175, 0.023863764, 0.023973778, 0.024073792, 0.024177806, 0.0242818...</msg>
<status status="PASS" starttime="20201112 10:14:18.639" endtime="20201112 10:14:18.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.657" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 10:14:18.656" endtime="20201112 10:14:18.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.659" level="INFO">VALUE: [8.915299999999807e-05, 8.932000000000037e-05, 8.941699999999789e-05, 8.951400000000234e-05, 9.068099999999871e-05, 9.077799999999969e-05, 8.943000000000145e-05, 8.915300000000154e-05, 9.0332999999998e-05, 9.008300000000122e-05, 8.941699999999789e-05, 9.05000000000003e-05, 9.04450000000015e-05, 8.974999999999955e-05, 9.041599999999941e-05, 9.008300000000122e-05, 9.057000000000162e-05, 9.075000000000055e-05, 9.076400000000012e-05, 9.023600000000048e-05, 8.976399999999912e-05, 8.961099999999986e-05, 8.972200000000041e-05, 9.025000000000005e-05, 9.090299999999982e-05, 8.99999999999998e-05, 8.944400000000102e-05, 9.051399999999987e-05, 9.026399999999962e-05, 8.962499999999943e-05, 8.973599999999998e-05, 8.993099999999796e-05, 8.918099999999721e-05, 8.947299999999964e-05, 9.042999999999898e-05, 9.030499999999886e-05, 8.942999999999798e-05, 9.087500000000068e-05, 8.908300000000022e-05, 9.077799999999969e-05, 8.926399999999862e-05, 9.04589999999976e-05, 8.984800000000001e-05, 8.976399999999912e-05, 9.038899999999975e-05, 9.067999999999923e-05, 9.08329999999985e-05, 9.076400000000012e-05, 9.026399999999962e-05, 8.956900000000115e-05]</msg>
<status status="PASS" starttime="20201112 10:14:18.658" endtime="20201112 10:14:18.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.653" endtime="20201112 10:14:18.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.672" endtime="20201112 10:14:18.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:18.675" endtime="20201112 10:14:18.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.674" endtime="20201112 10:14:18.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.670" endtime="20201112 10:14:18.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.289" endtime="20201112 10:14:18.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.289" endtime="20201112 10:14:18.696"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.705" endtime="20201112 10:14:18.725"></status>
</kw>
<msg timestamp="20201112 10:14:18.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.704" endtime="20201112 10:14:18.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.727" endtime="20201112 10:14:18.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.730" endtime="20201112 10:14:18.732"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.701" endtime="20201112 10:14:18.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.699" endtime="20201112 10:14:18.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.740" endtime="20201112 10:14:19.027"></status>
</kw>
<msg timestamp="20201112 10:14:19.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022883125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022975597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.738" endtime="20201112 10:14:19.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022883125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022975597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.032" endtime="20201112 10:14:19.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.040" endtime="20201112 10:14:19.042"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.736" endtime="20201112 10:14:19.043"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.734" endtime="20201112 10:14:19.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:19.047" level="INFO">${RESULT} = [{'time': 0.022975597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.24719999999997e-05, 'source_diff': 9.24719999999997e-05}, {'time': 0.023085611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:19.044" endtime="20201112 10:14:19.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:19.061" level="INFO">${ACCURACY} = {'time': [0.022975597, 0.023085611, 0.023189625, 0.023291708, 0.023397639, 0.023507681, 0.023611681, 0.023721681, 0.023833694, 0.023939722, 0.024047722, 0.02415375, 0.024261764, 0.024371764, 0.0244777...</msg>
<status status="PASS" starttime="20201112 10:14:19.048" endtime="20201112 10:14:19.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.066" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 10:14:19.065" endtime="20201112 10:14:19.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.069" level="INFO">VALUE: [9.24719999999997e-05, 9.152800000000044e-05, 9.143099999999946e-05, 9.208299999999975e-05, 9.108300000000222e-05, 9.155599999999958e-05, 9.293099999999749e-05, 9.20000000000018e-05, 9.209699999999932e-05, 9.127800000000019e-05, 9.154100000000054e-05, 9.220799999999987e-05, 9.177800000000069e-05, 9.258300000000025e-05, 9.290299999999835e-05, 9.236099999999914e-05, 9.159799999999829e-05, 9.191700000000039e-05, 9.20000000000018e-05, 9.259699999999982e-05, 9.158299999999925e-05, 9.258300000000025e-05, 9.206900000000018e-05, 9.188899999999778e-05, 9.184699999999907e-05, 9.176400000000112e-05, 9.143099999999946e-05, 9.216699999999717e-05, 9.226399999999815e-05, 9.238899999999828e-05, 9.106899999999918e-05, 9.240299999999785e-05, 9.284700000000007e-05, 9.1945000000003e-05, 9.284700000000007e-05, 9.176400000000112e-05, 9.224999999999858e-05, 9.243100000000046e-05, 9.236099999999914e-05, 9.226400000000162e-05, 9.108299999999875e-05, 9.243000000000098e-05, 9.218100000000021e-05, 9.152800000000044e-05, 9.209699999999932e-05, 9.24589999999996e-05, 9.15000000000013e-05, 9.206999999999965e-05, 9.276400000000212e-05, 9.227699999999825e-05]</msg>
<status status="PASS" starttime="20201112 10:14:19.067" endtime="20201112 10:14:19.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.062" endtime="20201112 10:14:19.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.072" endtime="20201112 10:14:19.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:19.076" endtime="20201112 10:14:19.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.074" endtime="20201112 10:14:19.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.071" endtime="20201112 10:14:19.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.697" endtime="20201112 10:14:19.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.697" endtime="20201112 10:14:19.097"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.106" endtime="20201112 10:14:19.126"></status>
</kw>
<msg timestamp="20201112 10:14:19.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.104" endtime="20201112 10:14:19.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.128" endtime="20201112 10:14:19.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.130" endtime="20201112 10:14:19.133"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.102" endtime="20201112 10:14:19.134"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.099" endtime="20201112 10:14:19.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.141" endtime="20201112 10:14:19.427"></status>
</kw>
<msg timestamp="20201112 10:14:19.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022903278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022998264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.139" endtime="20201112 10:14:19.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022903278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022998264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.432" endtime="20201112 10:14:19.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.440" endtime="20201112 10:14:19.442"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.136" endtime="20201112 10:14:19.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.135" endtime="20201112 10:14:19.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:19.447" level="INFO">${RESULT} = [{'time': 0.022998264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.498600000000176e-05, 'source_diff': 9.498600000000176e-05}, {'time': 0.023102347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:19.444" endtime="20201112 10:14:19.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:19.461" level="INFO">${ACCURACY} = {'time': [0.022998264, 0.023102347, 0.023208278, 0.023314292, 0.023424347, 0.023532319, 0.023642375, 0.023756347, 0.023860361, 0.023972375, 0.024078389, 0.024186389, 0.024292403, 0.024398417, 0.024502...</msg>
<status status="PASS" starttime="20201112 10:14:19.448" endtime="20201112 10:14:19.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.466" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 10:14:19.465" endtime="20201112 10:14:19.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.469" level="INFO">VALUE: [9.498600000000176e-05, 9.347199999999722e-05, 9.366699999999867e-05, 9.40139999999999e-05, 9.430500000000286e-05, 9.392999999999901e-05, 9.419399999999883e-05, 9.41529999999996e-05, 9.311099999999989e-05, 9.3333000000001e-05, 9.426400000000015e-05, 9.474999999999761e-05, 9.326399999999915e-05, 9.476399999999718e-05, 9.376400000000312e-05, 9.337500000000318e-05, 9.50140000000009e-05, 9.359700000000082e-05, 9.375000000000008e-05, 9.491699999999992e-05, 9.41529999999996e-05, 9.33469999999971e-05, 9.312500000000293e-05, 9.411199999999689e-05, 9.43880000000008e-05, 9.400000000000033e-05, 9.308300000000075e-05, 9.425000000000058e-05, 9.308299999999728e-05, 9.427799999999972e-05, 9.443099999999899e-05, 9.334700000000057e-05, 9.494499999999906e-05, 9.349999999999983e-05, 9.444399999999908e-05, 9.333400000000047e-05, 9.458299999999878e-05, 9.475000000000108e-05, 9.375000000000008e-05, 9.443000000000298e-05, 9.395799999999815e-05, 9.393099999999849e-05, 9.468099999999924e-05, 9.334800000000004e-05, 9.324999999999958e-05, 9.441699999999942e-05, 9.384700000000107e-05, 9.444399999999908e-05, 9.324999999999958e-05, 9.43200000000019e-05]</msg>
<status status="PASS" starttime="20201112 10:14:19.467" endtime="20201112 10:14:19.470"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.462" endtime="20201112 10:14:19.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.472" endtime="20201112 10:14:19.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:19.476" endtime="20201112 10:14:19.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.474" endtime="20201112 10:14:19.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.471" endtime="20201112 10:14:19.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.098" endtime="20201112 10:14:19.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.097" endtime="20201112 10:14:19.497"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.506" endtime="20201112 10:14:19.524"></status>
</kw>
<msg timestamp="20201112 10:14:19.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.504" endtime="20201112 10:14:19.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.526" endtime="20201112 10:14:19.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.529" endtime="20201112 10:14:19.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.502" endtime="20201112 10:14:19.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.499" endtime="20201112 10:14:19.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.539" endtime="20201112 10:14:19.826"></status>
</kw>
<msg timestamp="20201112 10:14:19.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022472986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.537" endtime="20201112 10:14:19.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022472986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.831" endtime="20201112 10:14:19.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.839" endtime="20201112 10:14:19.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.535" endtime="20201112 10:14:19.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.533" endtime="20201112 10:14:19.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:19.846" level="INFO">${RESULT} = [{'time': 0.022568153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.516700000000017e-05, 'source_diff': 9.516700000000017e-05}, {'time': 0.022676181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:19.843" endtime="20201112 10:14:19.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:19.861" level="INFO">${ACCURACY} = {'time': [0.022568153, 0.022676181, 0.022786181, 0.022892181, 0.023004208, 0.023114194, 0.023228208, 0.023340222, 0.023450236, 0.023562264, 0.023674264, 0.023790278, 0.023896292, 0.024012306, 0.024120...</msg>
<status status="PASS" starttime="20201112 10:14:19.847" endtime="20201112 10:14:19.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.866" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 10:14:19.865" endtime="20201112 10:14:19.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.869" level="INFO">VALUE: [9.516700000000017e-05, 9.570899999999938e-05, 9.536199999999814e-05, 9.509800000000179e-05, 9.627700000000225e-05, 9.556900000000021e-05, 9.64019999999989e-05, 9.699999999999986e-05, 9.61799999999978e-05, 9.544499999999956e-05, 9.701399999999943e-05, 9.659700000000035e-05, 9.626399999999868e-05, 9.691700000000192e-05, 9.61660000000017e-05, 9.618000000000126e-05, 9.601399999999843e-05, 9.692999999999855e-05, 9.68470000000006e-05, 9.593100000000049e-05, 9.64859999999998e-05, 9.640299999999838e-05, 9.666700000000167e-05, 9.587500000000221e-05, 9.68340000000005e-05, 9.543000000000051e-05, 9.61660000000017e-05, 9.616700000000117e-05, 9.701399999999943e-05, 9.512499999999799e-05, 9.597199999999972e-05, 9.68340000000005e-05, 9.608399999999975e-05, 9.508399999999875e-05, 9.574999999999861e-05, 9.626400000000215e-05, 9.676399999999918e-05, 9.632000000000043e-05, 9.644400000000108e-05, 9.609699999999985e-05, 9.644499999999709e-05, 9.586099999999917e-05, 9.520899999999888e-05, 9.526400000000115e-05, 9.558299999999978e-05, 9.595800000000015e-05, 9.5333000000003e-05, 9.659699999999688e-05, 9.527800000000072e-05, 9.676400000000265e-05]</msg>
<status status="PASS" starttime="20201112 10:14:19.867" endtime="20201112 10:14:19.869"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.862" endtime="20201112 10:14:19.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.872" endtime="20201112 10:14:19.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:19.876" endtime="20201112 10:14:19.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.874" endtime="20201112 10:14:19.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.871" endtime="20201112 10:14:19.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.498" endtime="20201112 10:14:19.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.497" endtime="20201112 10:14:19.897"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.906" endtime="20201112 10:14:19.926"></status>
</kw>
<msg timestamp="20201112 10:14:19.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.904" endtime="20201112 10:14:19.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.927" endtime="20201112 10:14:19.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.930" endtime="20201112 10:14:19.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.901" endtime="20201112 10:14:19.933"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.899" endtime="20201112 10:14:19.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.940" endtime="20201112 10:14:20.224"></status>
</kw>
<msg timestamp="20201112 10:14:20.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.938" endtime="20201112 10:14:20.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022657069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022756056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.229" endtime="20201112 10:14:20.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.237" endtime="20201112 10:14:20.239"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.936" endtime="20201112 10:14:20.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.934" endtime="20201112 10:14:20.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:20.244" level="INFO">${RESULT} = [{'time': 0.022756056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.898700000000177e-05, 'source_diff': 9.898700000000177e-05}, {'time': 0.022866083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:20.241" endtime="20201112 10:14:20.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:20.258" level="INFO">${ACCURACY} = {'time': [0.022756056, 0.022866083, 0.022984097, 0.023092097, 0.023204111, 0.023320111, 0.023430139, 0.023544139, 0.023656153, 0.023774167, 0.023884194, 0.024002194, 0.024118208, 0.024234222, 0.024352...</msg>
<status status="PASS" starttime="20201112 10:14:20.245" endtime="20201112 10:14:20.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.263" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 10:14:20.262" endtime="20201112 10:14:20.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.266" level="INFO">VALUE: [9.898700000000177e-05, 9.877699999999781e-05, 9.809699999999838e-05, 9.726399999999968e-05, 9.809699999999838e-05, 9.791699999999945e-05, 9.834699999999863e-05, 9.793099999999902e-05, 9.833399999999853e-05, 9.809799999999785e-05, 9.876300000000171e-05, 9.791599999999998e-05, 9.884699999999913e-05, 9.843000000000005e-05, 9.777799999999975e-05, 9.893100000000002e-05, 9.750000000000036e-05, 9.875000000000161e-05, 9.776400000000018e-05, 9.844399999999962e-05, 9.851299999999799e-05, 9.776400000000018e-05, 9.756899999999874e-05, 9.741599999999948e-05, 9.901399999999796e-05, 9.726399999999968e-05, 9.827800000000025e-05, 9.733299999999806e-05, 9.776400000000018e-05, 9.843099999999952e-05, 9.750000000000036e-05, 9.792999999999955e-05, 9.8028e-05, 9.726399999999968e-05, 9.891700000000045e-05, 9.815299999999666e-05, 9.743100000000199e-05, 9.890300000000088e-05, 9.784800000000107e-05, 9.723700000000002e-05, 9.811099999999795e-05, 9.892999999999708e-05, 9.808400000000175e-05, 9.790299999999988e-05, 9.820900000000188e-05, 9.73470000000011e-05, 9.780499999999942e-05, 9.861199999999792e-05, 9.841699999999995e-05, 9.81799999999998e-05]</msg>
<status status="PASS" starttime="20201112 10:14:20.264" endtime="20201112 10:14:20.266"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.259" endtime="20201112 10:14:20.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.269" endtime="20201112 10:14:20.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:20.273" endtime="20201112 10:14:20.292"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.271" endtime="20201112 10:14:20.293"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.268" endtime="20201112 10:14:20.293"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.898" endtime="20201112 10:14:20.294"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.897" endtime="20201112 10:14:20.294"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.303" endtime="20201112 10:14:20.323"></status>
</kw>
<msg timestamp="20201112 10:14:20.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.301" endtime="20201112 10:14:20.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.324" endtime="20201112 10:14:20.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.327" endtime="20201112 10:14:20.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.299" endtime="20201112 10:14:20.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.296" endtime="20201112 10:14:20.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.337" endtime="20201112 10:14:20.623"></status>
</kw>
<msg timestamp="20201112 10:14:20.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022442847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:20.336" endtime="20201112 10:14:20.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022442847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:20.627" endtime="20201112 10:14:20.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.636" endtime="20201112 10:14:20.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.333" endtime="20201112 10:14:20.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.331" endtime="20201112 10:14:20.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:20.643" level="INFO">${RESULT} = [{'time': 0.022542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.915300000000113e-05, 'source_diff': 9.915300000000113e-05}, {'time': 0.022654014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:14:20.639" endtime="20201112 10:14:20.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:20.658" level="INFO">${ACCURACY} = {'time': [0.022542, 0.022654014, 0.022768028, 0.022882083, 0.022996056, 0.023106069, 0.023224097, 0.023338097, 0.023450111, 0.023566111, 0.023682139, 0.023794153, 0.023904167, 0.024022167, 0.024142181...</msg>
<status status="PASS" starttime="20201112 10:14:20.644" endtime="20201112 10:14:20.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.663" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 10:14:20.661" endtime="20201112 10:14:20.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.665" level="INFO">VALUE: [9.915300000000113e-05, 9.918100000000027e-05, 9.91670000000007e-05, 9.9722e-05, 9.951400000000193e-05, 9.902700000000153e-05, 9.952799999999803e-05, 0.00010009699999999691, 0.00010009700000000038, 9.95280000000015e-05, 0.00010093100000000202, 0.0001001809999999978, 9.931999999999996e-05, 9.925000000000211e-05, 0.00010037499999999977, 0.00010101399999999996, 9.924999999999864e-05, 9.974999999999914e-05, 9.905600000000014e-05, 0.00010037499999999977, 9.969500000000034e-05, 0.0001001670000000017, 9.918100000000027e-05, 9.968100000000077e-05, 9.917999999999733e-05, 9.93609999999992e-05, 9.944400000000062e-05, 0.00010034700000000063, 9.958300000000031e-05, 0.00010008300000000081, 0.00010026399999999921, 0.00010077699999999981, 9.94999999999989e-05, 0.00010086099999999723, 9.909699999999938e-05, 0.00010044400000000162, 0.00010084700000000113, 0.00010009700000000038, 0.00010009700000000038, 0.00010037499999999977, 9.918100000000027e-05, 0.00010073600000000058, 0.00010051400000000293, 9.909699999999938e-05, 0.00010094500000000159, 0.00010013899999999909, 0.00010084700000000113, 0.00010090299999999941, 9.998599999999983e-05, 0.00010059699999999741]</msg>
<status status="PASS" starttime="20201112 10:14:20.664" endtime="20201112 10:14:20.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.659" endtime="20201112 10:14:20.666"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.669" endtime="20201112 10:14:20.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:20.672" endtime="20201112 10:14:20.692"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.671" endtime="20201112 10:14:20.692"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.667" endtime="20201112 10:14:20.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.295" endtime="20201112 10:14:20.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.294" endtime="20201112 10:14:20.693"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.702" endtime="20201112 10:14:20.722"></status>
</kw>
<msg timestamp="20201112 10:14:20.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.701" endtime="20201112 10:14:20.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.723" endtime="20201112 10:14:20.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.726" endtime="20201112 10:14:20.729"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.698" endtime="20201112 10:14:20.729"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.696" endtime="20201112 10:14:20.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.736" endtime="20201112 10:14:21.021"></status>
</kw>
<msg timestamp="20201112 10:14:21.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.735" endtime="20201112 10:14:21.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.026" endtime="20201112 10:14:21.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.034" endtime="20201112 10:14:21.036"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.732" endtime="20201112 10:14:21.036"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.730" endtime="20201112 10:14:21.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:21.041" level="INFO">${RESULT} = [{'time': 0.022685681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010216700000000023, 'source_diff': 0.00010216700000000023}, {'time': 0.022803708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:21.037" endtime="20201112 10:14:21.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:21.055" level="INFO">${ACCURACY} = {'time': [0.022685681, 0.022803708, 0.022915722, 0.023029708, 0.023143736, 0.023263736, 0.023375764, 0.023497764, 0.023611764, 0.023729792, 0.023849792, 0.023963806, 0.024075819, 0.024191833, 0.024309...</msg>
<status status="PASS" starttime="20201112 10:14:21.042" endtime="20201112 10:14:21.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.060" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 10:14:21.058" endtime="20201112 10:14:21.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.062" level="INFO">VALUE: [0.00010216700000000023, 0.00010304099999999816, 0.00010245799999999972, 0.00010159699999999841, 0.00010188900000000084, 0.00010167999999999983, 0.00010152800000000003, 0.00010226400000000122, 0.00010274999999999868, 0.00010175000000000115, 0.00010154200000000307, 0.00010241700000000048, 0.00010166599999999679, 0.00010116599999999976, 0.00010249999999999843, 0.00010211099999999848, 0.00010208299999999934, 0.00010259699999999941, 0.00010127799999999978, 0.00010226399999999775, 0.00010238899999999787, 0.00010258299999999984, 0.00010227800000000078, 0.00010293000000000108, 0.00010220899999999894, 0.00010258299999999984, 0.00010156999999999874, 0.00010226400000000122, 0.00010162499999999755, 0.00010159800000000135, 0.00010108300000000181, 0.00010109700000000138, 0.0001023610000000022, 0.00010269499999999987, 0.00010283299999999662, 0.00010241700000000048, 0.00010166699999999973, 0.00010133399999999806, 0.00010244499999999962, 0.00010106999999999824, 0.00010291599999999804, 0.00010202800000000053, 0.00010109699999999791, 0.00010127799999999978, 0.00010244499999999962, 0.00010284699999999966, 0.00010206999999999924, 0.00010125000000000065, 0.00010293099999999708, 0.00010184700000000213]</msg>
<status status="PASS" starttime="20201112 10:14:21.061" endtime="20201112 10:14:21.063"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.056" endtime="20201112 10:14:21.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.066" endtime="20201112 10:14:21.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:21.069" endtime="20201112 10:14:21.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.068" endtime="20201112 10:14:21.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.064" endtime="20201112 10:14:21.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.694" endtime="20201112 10:14:21.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.694" endtime="20201112 10:14:21.090"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.100" endtime="20201112 10:14:21.120"></status>
</kw>
<msg timestamp="20201112 10:14:21.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.098" endtime="20201112 10:14:21.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.121" endtime="20201112 10:14:21.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.124" endtime="20201112 10:14:21.127"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.095" endtime="20201112 10:14:21.127"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.093" endtime="20201112 10:14:21.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.134" endtime="20201112 10:14:21.420"></status>
</kw>
<msg timestamp="20201112 10:14:21.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022838153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022943139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.133" endtime="20201112 10:14:21.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022838153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022943139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.424" endtime="20201112 10:14:21.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.432" endtime="20201112 10:14:21.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.130" endtime="20201112 10:14:21.435"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.128" endtime="20201112 10:14:21.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:21.439" level="INFO">${RESULT} = [{'time': 0.022943139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010498600000000136, 'source_diff': 0.00010498600000000136}, {'time': 0.023065194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:21.436" endtime="20201112 10:14:21.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:21.455" level="INFO">${ACCURACY} = {'time': [0.022943139, 0.023065194, 0.023187167, 0.023307194, 0.023423194, 0.023545222, 0.023667222, 0.023783236, 0.023901333, 0.024017264, 0.024139278, 0.024261292, 0.024383306, 0.024497319, 0.024617...</msg>
<status status="PASS" starttime="20201112 10:14:21.440" endtime="20201112 10:14:21.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.460" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 10:14:21.459" endtime="20201112 10:14:21.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.462" level="INFO">VALUE: [0.00010498600000000136, 0.00010397200000000079, 0.00010383400000000056, 0.00010494399999999918, 0.00010334700000000016, 0.00010394400000000165, 0.00010463900000000012, 0.00010481899999999905, 0.00010384700000000066, 0.00010374999999999968, 0.00010476400000000025, 0.00010359799999999988, 0.00010409800000000038, 0.0001032359999999996, 0.00010443000000000258, 0.00010399999999999993, 0.00010426399999999975, 0.00010376399999999925, 0.00010309699999999991, 0.00010475000000000068, 0.00010374999999999968, 0.00010470900000000144, 0.00010408399999999735, 0.00010448600000000086, 0.00010344400000000115, 0.00010374999999999968, 0.00010340299999999844, 0.00010366700000000173, 0.00010450000000000043, 0.0001037360000000001, 0.00010390299999999894, 0.00010463900000000012, 0.00010362499999999955, 0.00010318000000000133, 0.00010417999999999886, 0.0001050140000000005, 0.00010459700000000141, 0.00010374999999999968, 0.00010409700000000091, 0.00010459799999999742, 0.00010459799999999742, 0.00010309699999999991, 0.00010442999999999911, 0.00010434699999999769, 0.00010327799999999832, 0.00010411100000000048, 0.00010426399999999975, 0.00010358400000000031, 0.00010458399999999785, 0.00010327699999999884]</msg>
<status status="PASS" starttime="20201112 10:14:21.461" endtime="20201112 10:14:21.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.456" endtime="20201112 10:14:21.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.466" endtime="20201112 10:14:21.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:21.470" endtime="20201112 10:14:21.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.468" endtime="20201112 10:14:21.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.465" endtime="20201112 10:14:21.491"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.091" endtime="20201112 10:14:21.491"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.091" endtime="20201112 10:14:21.491"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.501" endtime="20201112 10:14:21.521"></status>
</kw>
<msg timestamp="20201112 10:14:21.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.499" endtime="20201112 10:14:21.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.522" endtime="20201112 10:14:21.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.525" endtime="20201112 10:14:21.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.496" endtime="20201112 10:14:21.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.494" endtime="20201112 10:14:21.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.536" endtime="20201112 10:14:21.823"></status>
</kw>
<msg timestamp="20201112 10:14:21.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023223889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023330056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.534" endtime="20201112 10:14:21.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023223889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023330056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.827" endtime="20201112 10:14:21.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.836" endtime="20201112 10:14:21.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.532" endtime="20201112 10:14:21.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.530" endtime="20201112 10:14:21.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:21.842" level="INFO">${RESULT} = [{'time': 0.023330056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010616699999999729, 'source_diff': 0.00010616699999999729}, {'time': 0.023452097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:21.839" endtime="20201112 10:14:21.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:21.856" level="INFO">${ACCURACY} = {'time': [0.023330056, 0.023452097, 0.023568097, 0.023688097, 0.023810111, 0.023930139, 0.024052139, 0.024172167, 0.024290167, 0.024412208, 0.024528208, 0.024646264, 0.024772236, 0.024892236, 0.025012...</msg>
<status status="PASS" starttime="20201112 10:14:21.843" endtime="20201112 10:14:21.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.861" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 10:14:21.860" endtime="20201112 10:14:21.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.864" level="INFO">VALUE: [0.00010616699999999729, 0.00010569399999999993, 0.00010586099999999876, 0.00010543000000000011, 0.00010534699999999869, 0.00010509699999999844, 0.00010626400000000175, 0.00010544500000000262, 0.00010618100000000033, 0.0001063750000000023, 0.0001055689999999998, 0.00010598600000000236, 0.00010619400000000043, 0.00010518000000000333, 0.00010651399999999853, 0.00010659699999999994, 0.00010594500000000312, 0.00010518099999999933, 0.00010681900000000105, 0.00010555500000000023, 0.00010592999999999714, 0.00010669400000000093, 0.00010701399999999903, 0.00010512500000000105, 0.0001066950000000004, 0.00010629099999999794, 0.00010609800000000238, 0.00010561099999999851, 0.00010587499999999833, 0.00010599999999999846, 0.00010593000000000061, 0.00010519399999999943, 0.00010568099999999983, 0.00010608299999999987, 0.0001050559999999992, 0.00010509800000000138, 0.00010591700000000051, 0.00010616599999999782, 0.0001070279999999986, 0.00010626400000000175, 0.00010559699999999894, 0.00010643100000000058, 0.00010584699999999919, 0.00010681900000000105, 0.00010509800000000138, 0.00010676399999999878, 0.00010509700000000191, 0.00010592999999999714, 0.00010652800000000157, 0.00010695900000000022]</msg>
<status status="PASS" starttime="20201112 10:14:21.862" endtime="20201112 10:14:21.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.857" endtime="20201112 10:14:21.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.867" endtime="20201112 10:14:21.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:21.871" endtime="20201112 10:14:21.890"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.869" endtime="20201112 10:14:21.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.866" endtime="20201112 10:14:21.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.492" endtime="20201112 10:14:21.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.492" endtime="20201112 10:14:21.892"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.901" endtime="20201112 10:14:21.922"></status>
</kw>
<msg timestamp="20201112 10:14:21.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.899" endtime="20201112 10:14:21.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.923" endtime="20201112 10:14:21.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.926" endtime="20201112 10:14:21.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.897" endtime="20201112 10:14:21.929"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.894" endtime="20201112 10:14:21.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.936" endtime="20201112 10:14:22.223"></status>
</kw>
<msg timestamp="20201112 10:14:22.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023063333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023171819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.935" endtime="20201112 10:14:22.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023063333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023171819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.227" endtime="20201112 10:14:22.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.235" endtime="20201112 10:14:22.237"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.932" endtime="20201112 10:14:22.237"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.930" endtime="20201112 10:14:22.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:22.242" level="INFO">${RESULT} = [{'time': 0.023171819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010848600000000139, 'source_diff': 0.00010848600000000139}, {'time': 0.023299833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:22.239" endtime="20201112 10:14:22.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:22.256" level="INFO">${ACCURACY} = {'time': [0.023171819, 0.023299833, 0.023423875, 0.023541861, 0.023663875, 0.023785903, 0.023907917, 0.024027917, 0.024153931, 0.024271944, 0.024392014, 0.024520014, 0.024643986, 0.02477, 0.024894014,...</msg>
<status status="PASS" starttime="20201112 10:14:22.243" endtime="20201112 10:14:22.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.261" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 10:14:22.260" endtime="20201112 10:14:22.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.263" level="INFO">VALUE: [0.00010848600000000139, 0.00010891600000000057, 0.00010854199999999967, 0.00010709700000000044, 0.00010759700000000094, 0.00010793100000000208, 0.0001086950000000024, 0.0001088479999999982, 0.00010843099999999911, 0.00010734700000000069, 0.00010831999999999856, 0.00010862500000000108, 0.00010742999999999864, 0.00010734700000000069, 0.00010893099999999961, 0.00010851400000000053, 0.0001075699999999978, 0.00010823700000000061, 0.00010774999999999674, 0.00010859699999999847, 0.0001085829999999989, 0.00010758300000000137, 0.00010795900000000122, 0.00010718099999999786, 0.00010752699999999962, 0.00010727699999999937, 0.00010862500000000108, 0.0001077500000000002, 0.00010827799999999985, 0.0001080690000000023, 0.00010743099999999811, 0.0001077219999999976, 0.00010819499999999843, 0.0001085280000000001, 0.00010845800000000225, 0.00010800000000000046, 0.00010776399999999978, 0.00010744399999999821, 0.00010784700000000119, 0.00010870799999999903, 0.00010843099999999911, 0.0001090280000000006, 0.00010848600000000139, 0.00010801400000000003, 0.00010894399999999971, 0.00010867999999999989, 0.00010850000000000096, 0.00010711100000000001, 0.00010859699999999847, 0.00010709700000000044]</msg>
<status status="PASS" starttime="20201112 10:14:22.262" endtime="20201112 10:14:22.264"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.257" endtime="20201112 10:14:22.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.267" endtime="20201112 10:14:22.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:22.271" endtime="20201112 10:14:22.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.269" endtime="20201112 10:14:22.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.265" endtime="20201112 10:14:22.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.893" endtime="20201112 10:14:22.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.892" endtime="20201112 10:14:22.292"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.301" endtime="20201112 10:14:22.321"></status>
</kw>
<msg timestamp="20201112 10:14:22.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.299" endtime="20201112 10:14:22.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.323" endtime="20201112 10:14:22.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.326" endtime="20201112 10:14:22.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.296" endtime="20201112 10:14:22.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.294" endtime="20201112 10:14:22.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.336" endtime="20201112 10:14:22.622"></status>
</kw>
<msg timestamp="20201112 10:14:22.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.335" endtime="20201112 10:14:22.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022825792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.627" endtime="20201112 10:14:22.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.635" endtime="20201112 10:14:22.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.332" endtime="20201112 10:14:22.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.330" endtime="20201112 10:14:22.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:22.642" level="INFO">${RESULT} = [{'time': 0.022825792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011023599999999967, 'source_diff': 0.00011023599999999967}, {'time': 0.022955833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:22.638" endtime="20201112 10:14:22.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:22.656" level="INFO">${ACCURACY} = {'time': [0.022825792, 0.022955833, 0.023081819, 0.023207833, 0.023335847, 0.023459875, 0.023589889, 0.023711889, 0.023839917, 0.023965986, 0.024091931, 0.024211944, 0.024335972, 0.024457972, 0.024588...</msg>
<status status="PASS" starttime="20201112 10:14:22.643" endtime="20201112 10:14:22.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.660" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 10:14:22.659" endtime="20201112 10:14:22.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.663" level="INFO">VALUE: [0.00011023599999999967, 0.00011062499999999961, 0.00011019400000000096, 0.00010976400000000178, 0.00010941600000000107, 0.00011069400000000146, 0.00011069500000000093, 0.00010916700000000029, 0.00010979199999999745, 0.00011081900000000158, 0.00011074999999999974, 0.0001090829999999994, 0.00011059700000000047, 0.00011091600000000257, 0.00011034699999999675, 0.00010975000000000221, 0.00011076399999999931, 0.00011030500000000151, 0.00011043100000000111, 0.00011067999999999842, 0.00010951400000000153, 0.00010961100000000251, 0.00011043000000000164, 0.00011004200000000117, 0.00010959699999999947, 0.00010994500000000018, 0.00011101399999999956, 0.00010926399999999781, 0.00011009699999999997, 0.00010926400000000128, 0.00010926400000000128, 0.00011076399999999931, 0.00011040300000000197, 0.00010984699999999972, 0.00010993100000000061, 0.00010984800000000267, 0.00011008399999999988, 0.00010976400000000178, 0.00011090199999999953, 0.00011016600000000182, 0.00011001400000000203, 0.0001092219999999991, 0.00010923599999999867, 0.00010991699999999757, 0.00011016700000000129, 0.00011105599999999827, 0.00010924999999999824, 0.0001090829999999994, 0.00010945899999999925, 0.00010950000000000196]</msg>
<status status="PASS" starttime="20201112 10:14:22.662" endtime="20201112 10:14:22.664"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.657" endtime="20201112 10:14:22.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.667" endtime="20201112 10:14:22.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:22.671" endtime="20201112 10:14:22.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.669" endtime="20201112 10:14:22.691"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.665" endtime="20201112 10:14:22.692"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.293" endtime="20201112 10:14:22.692"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.292" endtime="20201112 10:14:22.692"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.701" endtime="20201112 10:14:22.722"></status>
</kw>
<msg timestamp="20201112 10:14:22.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.700" endtime="20201112 10:14:22.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.723" endtime="20201112 10:14:22.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.726" endtime="20201112 10:14:22.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.697" endtime="20201112 10:14:22.729"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.695" endtime="20201112 10:14:22.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.736" endtime="20201112 10:14:23.023"></status>
</kw>
<msg timestamp="20201112 10:14:23.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022804069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.735" endtime="20201112 10:14:23.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022804069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.027" endtime="20201112 10:14:23.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.035" endtime="20201112 10:14:23.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.732" endtime="20201112 10:14:23.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.730" endtime="20201112 10:14:23.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:23.042" level="INFO">${RESULT} = [{'time': 0.022915889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011181999999999859, 'source_diff': 0.00011181999999999859}, {'time': 0.023047903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:23.039" endtime="20201112 10:14:23.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:23.057" level="INFO">${ACCURACY} = {'time': [0.022915889, 0.023047903, 0.023173931, 0.023305958, 0.023427958, 0.023557986, 0.023683986, 0.023808, 0.023938028, 0.024070028, 0.024196097, 0.024324056, 0.024448125, 0.024580083, 0.024706111...</msg>
<status status="PASS" starttime="20201112 10:14:23.043" endtime="20201112 10:14:23.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.062" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 10:14:23.061" endtime="20201112 10:14:23.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.064" level="INFO">VALUE: [0.00011181999999999859, 0.0001122220000000021, 0.00011159799999999748, 0.00011294400000000024, 0.00011134699999999775, 0.00011293000000000067, 0.00011184700000000172, 0.00011143099999999864, 0.00011118099999999839, 0.00011181999999999859, 0.00011109700000000097, 0.0001114029999999995, 0.00011205600000000274, 0.00011190200000000053, 0.00011286099999999882, 0.0001110830000000014, 0.00011255599999999977, 0.00011227799999999691, 0.00011125000000000024, 0.00011291700000000057, 0.00011198600000000142, 0.000112596999999999, 0.00011259700000000247, 0.00011176400000000031, 0.00011133299999999818, 0.00011193100000000261, 0.00011216699999999982, 0.00011168100000000236, 0.00011219399999999949, 0.00011183299999999868, 0.0001110830000000014, 0.00011277800000000088, 0.0001120969999999985, 0.00011226400000000081, 0.00011255599999999977, 0.00011211100000000154, 0.00011211200000000102, 0.00011125000000000024, 0.0001114159999999996, 0.00011216600000000035, 0.00011115299999999925, 0.00011249999999999802, 0.00011276399999999784, 0.00011226400000000081, 0.00011111200000000002, 0.00011211099999999807, 0.0001120969999999985, 0.00011211100000000154, 0.00011275000000000174, 0.0001110830000000014]</msg>
<status status="PASS" starttime="20201112 10:14:23.063" endtime="20201112 10:14:23.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.058" endtime="20201112 10:14:23.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.068" endtime="20201112 10:14:23.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:23.072" endtime="20201112 10:14:23.091"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.070" endtime="20201112 10:14:23.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.066" endtime="20201112 10:14:23.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.693" endtime="20201112 10:14:23.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.692" endtime="20201112 10:14:23.093"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.102" endtime="20201112 10:14:23.122"></status>
</kw>
<msg timestamp="20201112 10:14:23.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.100" endtime="20201112 10:14:23.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.124" endtime="20201112 10:14:23.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.126" endtime="20201112 10:14:23.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.097" endtime="20201112 10:14:23.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.095" endtime="20201112 10:14:23.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.137" endtime="20201112 10:14:23.422"></status>
</kw>
<msg timestamp="20201112 10:14:23.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022717167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.135" endtime="20201112 10:14:23.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022717167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.426" endtime="20201112 10:14:23.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.434" endtime="20201112 10:14:23.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.132" endtime="20201112 10:14:23.437"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.131" endtime="20201112 10:14:23.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:23.441" level="INFO">${RESULT} = [{'time': 0.022717167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011450000000000002, 'source_diff': 0.00011450000000000002}, {'time': 0.022841194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:23.438" endtime="20201112 10:14:23.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:23.455" level="INFO">${ACCURACY} = {'time': [0.022717167, 0.022841194, 0.022971194, 0.023101222, 0.02323325, 0.023365236, 0.02349325, 0.023623264, 0.023747278, 0.023873292, 0.024003319, 0.024129319, 0.024259347, 0.024391361, 0.02451537...</msg>
<status status="PASS" starttime="20201112 10:14:23.442" endtime="20201112 10:14:23.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.460" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 10:14:23.459" endtime="20201112 10:14:23.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.462" level="INFO">VALUE: [0.00011450000000000002, 0.00011304099999999775, 0.00011326299999999886, 0.00011376400000000231, 0.00011362499999999914, 0.00011493000000000267, 0.00011500000000000052, 0.000113597, 0.0001144169999999986, 0.00011326400000000181, 0.00011391599999999863, 0.00011366599999999838, 0.00011366600000000185, 0.00011334699999999975, 0.0001130969999999995, 0.00011443100000000164, 0.00011343100000000064, 0.00011450000000000002, 0.00011326400000000181, 0.00011412499999999964, 0.00011424999999999977, 0.000113597, 0.00011424999999999977, 0.00011376400000000231, 0.00011411100000000007, 0.000113597, 0.00011344500000000021, 0.00011383400000000016, 0.00011458299999999796, 0.00011319400000000049, 0.00011494400000000224, 0.00011434699999999728, 0.00011477799999999941, 0.0001134169999999976, 0.0001150689999999989, 0.00011476399999999984, 0.0001137770000000024, 0.0001144299999999987, 0.00011318000000000092, 0.00011352799999999816, 0.0001130420000000007, 0.00011393100000000114, 0.00011384700000000025, 0.00011408400000000041, 0.00011426399999999934, 0.00011458300000000143, 0.00011358299999999696, 0.000114597000000001, 0.0001130689999999969, 0.00011308399999999941]</msg>
<status status="PASS" starttime="20201112 10:14:23.461" endtime="20201112 10:14:23.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.456" endtime="20201112 10:14:23.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.466" endtime="20201112 10:14:23.467"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:23.470" endtime="20201112 10:14:23.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.468" endtime="20201112 10:14:23.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.464" endtime="20201112 10:14:23.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.094" endtime="20201112 10:14:23.491"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.093" endtime="20201112 10:14:23.491"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.500" endtime="20201112 10:14:23.521"></status>
</kw>
<msg timestamp="20201112 10:14:23.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.498" endtime="20201112 10:14:23.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.522" endtime="20201112 10:14:23.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.525" endtime="20201112 10:14:23.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.495" endtime="20201112 10:14:23.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.493" endtime="20201112 10:14:23.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.535" endtime="20201112 10:14:23.822"></status>
</kw>
<msg timestamp="20201112 10:14:23.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022803333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022919625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.534" endtime="20201112 10:14:23.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022803333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022919625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.826" endtime="20201112 10:14:23.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.835" endtime="20201112 10:14:23.836"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.531" endtime="20201112 10:14:23.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.529" endtime="20201112 10:14:23.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:23.842" level="INFO">${RESULT} = [{'time': 0.022919625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011629200000000048, 'source_diff': 0.00011629200000000048}, {'time': 0.023051625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:23.838" endtime="20201112 10:14:23.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:23.855" level="INFO">${ACCURACY} = {'time': [0.022919625, 0.023051625, 0.023187653, 0.023323653, 0.023449667, 0.023581694, 0.023717694, 0.023847708, 0.023975722, 0.024107764, 0.024241764, 0.024375778, 0.024503792, 0.024635819, 0.024763...</msg>
<status status="PASS" starttime="20201112 10:14:23.843" endtime="20201112 10:14:23.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.860" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 10:14:23.859" endtime="20201112 10:14:23.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.863" level="INFO">VALUE: [0.00011629200000000048, 0.00011576400000000084, 0.0001161109999999986, 0.00011693100000000067, 0.00011580599999999955, 0.00011694400000000077, 0.00011651300000000211, 0.00011608299999999946, 0.0001167360000000027, 0.00011561100000000157, 0.0001154169999999996, 0.00011534700000000175, 0.00011676399999999837, 0.00011673599999999923, 0.00011692999999999773, 0.00011534699999999828, 0.00011541599999999666, 0.0001169170000000011, 0.0001150970000000015, 0.00011644499999999974, 0.00011558399999999844, 0.00011641699999999713, 0.00011515299999999978, 0.00011511100000000107, 0.00011615300000000078, 0.00011650000000000202, 0.00011580599999999955, 0.00011676400000000184, 0.00011643100000000017, 0.00011533399999999819, 0.0001159170000000001, 0.00011669400000000052, 0.00011666600000000138, 0.00011551400000000059, 0.00011590300000000053, 0.00011601400000000109, 0.00011531899999999914, 0.00011626399999999787, 0.0001166109999999991, 0.00011609699999999903, 0.00011516700000000282, 0.00011609699999999903, 0.0001150970000000015, 0.00011658299999999996, 0.00011559699999999853, 0.0001154169999999996, 0.00011618000000000045, 0.00011533299999999871, 0.00011608299999999946, 0.00011661100000000257]</msg>
<status status="PASS" starttime="20201112 10:14:23.861" endtime="20201112 10:14:23.922"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.856" endtime="20201112 10:14:23.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.925" endtime="20201112 10:14:23.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:23.929" endtime="20201112 10:14:23.948"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.927" endtime="20201112 10:14:23.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.924" endtime="20201112 10:14:23.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.492" endtime="20201112 10:14:23.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.491" endtime="20201112 10:14:23.950"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.959" endtime="20201112 10:14:23.980"></status>
</kw>
<msg timestamp="20201112 10:14:23.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.958" endtime="20201112 10:14:23.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.982" endtime="20201112 10:14:23.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.984" endtime="20201112 10:14:23.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.955" endtime="20201112 10:14:23.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.952" endtime="20201112 10:14:23.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.995" endtime="20201112 10:14:24.281"></status>
</kw>
<msg timestamp="20201112 10:14:24.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023012056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023130681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.993" endtime="20201112 10:14:24.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023012056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023130681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.285" endtime="20201112 10:14:24.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.294" endtime="20201112 10:14:24.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.990" endtime="20201112 10:14:24.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.988" endtime="20201112 10:14:24.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:24.301" level="INFO">${RESULT} = [{'time': 0.023130681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011862500000000067, 'source_diff': 0.00011862500000000067}, {'time': 0.023266694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:24.297" endtime="20201112 10:14:24.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:24.315" level="INFO">${ACCURACY} = {'time': [0.023130681, 0.023266694, 0.023398708, 0.023528722, 0.023658736, 0.02379675, 0.023928778, 0.024062792, 0.024198806, 0.024332819, 0.024468833, 0.024596847, 0.024728861, 0.024856875, 0.0249868...</msg>
<status status="PASS" starttime="20201112 10:14:24.302" endtime="20201112 10:14:24.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.319" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 10:14:24.318" endtime="20201112 10:14:24.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.322" level="INFO">VALUE: [0.00011862500000000067, 0.00011883300000000221, 0.00011841599999999966, 0.00011784699999999732, 0.00011892999999999973, 0.00011834699999999782, 0.0001185560000000023, 0.0001187500000000008, 0.0001179309999999982, 0.00011899999999999758, 0.00011859699999999807, 0.00011709700000000003, 0.00011776400000000284, 0.00011840299999999956, 0.00011893100000000267, 0.00011847200000000141, 0.0001187639999999969, 0.0001182500000000003, 0.00011792999999999873, 0.00011850000000000055, 0.0001184300000000027, 0.00011800000000000005, 0.00011776399999999937, 0.0001174170000000016, 0.00011902800000000019, 0.00011759800000000001, 0.00011708300000000046, 0.00011729199999999801, 0.00011876400000000037, 0.00011809700000000103, 0.00011743100000000117, 0.00011847199999999794, 0.00011755599999999783, 0.00011826399999999987, 0.0001187630000000009, 0.00011744400000000127, 0.00011899999999999758, 0.00011897299999999791, 0.00011766699999999838, 0.00011836100000000085, 0.00011711200000000255, 0.00011777700000000293, 0.00011791600000000263, 0.00011901399999999715, 0.00011876400000000037, 0.00011859699999999807, 0.00011727799999999844, 0.00011741699999999813, 0.00011819499999999802, 0.00011884800000000126]</msg>
<status status="PASS" starttime="20201112 10:14:24.320" endtime="20201112 10:14:24.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.315" endtime="20201112 10:14:24.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.325" endtime="20201112 10:14:24.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:24.329" endtime="20201112 10:14:24.348"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.327" endtime="20201112 10:14:24.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.324" endtime="20201112 10:14:24.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.951" endtime="20201112 10:14:24.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.950" endtime="20201112 10:14:24.350"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.359" endtime="20201112 10:14:24.379"></status>
</kw>
<msg timestamp="20201112 10:14:24.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.357" endtime="20201112 10:14:24.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.381" endtime="20201112 10:14:24.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.384" endtime="20201112 10:14:24.386"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.355" endtime="20201112 10:14:24.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.353" endtime="20201112 10:14:24.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.394" endtime="20201112 10:14:24.680"></status>
</kw>
<msg timestamp="20201112 10:14:24.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022926139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023046139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.392" endtime="20201112 10:14:24.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022926139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023046139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.684" endtime="20201112 10:14:24.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.692" endtime="20201112 10:14:24.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.390" endtime="20201112 10:14:24.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.388" endtime="20201112 10:14:24.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:24.699" level="INFO">${RESULT} = [{'time': 0.023046139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011999999999999858, 'source_diff': 0.00011999999999999858}, {'time': 0.023182139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:24.696" endtime="20201112 10:14:24.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:24.715" level="INFO">${ACCURACY} = {'time': [0.023046139, 0.023182139, 0.023320153, 0.023458181, 0.023588181, 0.023722208, 0.023858222, 0.02399025, 0.02412425, 0.024260278, 0.024398278, 0.024530292, 0.024668306, 0.024806347, 0.02493634...</msg>
<status status="PASS" starttime="20201112 10:14:24.700" endtime="20201112 10:14:24.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.720" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 10:14:24.719" endtime="20201112 10:14:24.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.722" level="INFO">VALUE: [0.00011999999999999858, 0.0001204310000000007, 0.00012101399999999915, 0.00012072300000000313, 0.00011974999999999833, 0.00012041600000000166, 0.00012084699999999685, 0.00012009699999999957, 0.00011909699999999857, 0.00012094500000000077, 0.00011918099999999945, 0.00012018099999999698, 0.00012001400000000162, 0.00011927800000000044, 0.00012026400000000187, 0.00012061099999999964, 0.00012027800000000144, 0.00011976400000000137, 0.00012094500000000077, 0.00012101400000000262, 0.00011961099999999864, 0.00012091600000000216, 0.00012017999999999751, 0.00012079199999999804, 0.0001207639999999989, 0.00011930599999999958, 0.00011911099999999814, 0.00011909799999999804, 0.00012027700000000197, 0.00011926400000000087, 0.00012041600000000166, 0.00011934700000000228, 0.00012059700000000007, 0.00012101399999999915, 0.00011951400000000112, 0.00012027799999999797, 0.00012008399999999947, 0.0001205830000000005, 0.00012024999999999883, 0.0001201110000000026, 0.0001207639999999989, 0.00011981900000000018, 0.00012044500000000027, 0.0001199310000000002, 0.00011950000000000155, 0.00011991600000000116, 0.00012017999999999751, 0.00011947199999999894, 0.00011979200000000051, 0.00011959699999999907]</msg>
<status status="PASS" starttime="20201112 10:14:24.721" endtime="20201112 10:14:24.723"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.716" endtime="20201112 10:14:24.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.726" endtime="20201112 10:14:24.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:24.729" endtime="20201112 10:14:24.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.728" endtime="20201112 10:14:24.750"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.724" endtime="20201112 10:14:24.750"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.351" endtime="20201112 10:14:24.750"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.351" endtime="20201112 10:14:24.751"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.760" endtime="20201112 10:14:24.781"></status>
</kw>
<msg timestamp="20201112 10:14:24.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.758" endtime="20201112 10:14:24.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.782" endtime="20201112 10:14:24.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.785" endtime="20201112 10:14:24.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.755" endtime="20201112 10:14:24.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.753" endtime="20201112 10:14:24.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.795" endtime="20201112 10:14:25.081"></status>
</kw>
<msg timestamp="20201112 10:14:25.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023037472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023158708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.794" endtime="20201112 10:14:25.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023037472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023158708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.085" endtime="20201112 10:14:25.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.094" endtime="20201112 10:14:25.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.791" endtime="20201112 10:14:25.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.789" endtime="20201112 10:14:25.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:25.101" level="INFO">${RESULT} = [{'time': 0.023158708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012123600000000026, 'source_diff': 0.00012123600000000026}, {'time': 0.023300708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:25.097" endtime="20201112 10:14:25.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:25.115" level="INFO">${ACCURACY} = {'time': [0.023158708, 0.023300708, 0.023434736, 0.023568736, 0.02370875, 0.023848778, 0.023982792, 0.024124806, 0.024266819, 0.024398833, 0.024532861, 0.024674875, 0.024810889, 0.024944944, 0.0250829...</msg>
<status status="PASS" starttime="20201112 10:14:25.102" endtime="20201112 10:14:25.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.119" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 10:14:25.118" endtime="20201112 10:14:25.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.122" level="INFO">VALUE: [0.00012123600000000026, 0.00012208299999999853, 0.00012143000000000223, 0.0001218189999999987, 0.00012201400000000015, 0.00012291700000000017, 0.00012200000000000058, 0.00012193099999999873, 0.00012201299999999721, 0.00012156900000000193, 0.00012211100000000114, 0.00012293099999999973, 0.0001214579999999979, 0.0001216380000000003, 0.0001222640000000004, 0.00012209800000000104, 0.00012225000000000083, 0.00012193000000000273, 0.0001221799999999995, 0.00012151399999999965, 0.0001220969999999981, 0.0001227640000000009, 0.00012108400000000047, 0.00012133300000000125, 0.00012209700000000157, 0.00012109700000000057, 0.0001216250000000002, 0.0001212639999999994, 0.00012161100000000064, 0.00012230499999999964, 0.00012204199999999929, 0.0001214310000000017, 0.00012168000000000248, 0.00012151399999999965, 0.00012208299999999853, 0.0001212639999999994, 0.00012243099999999923, 0.00012237500000000096, 0.00012229100000000007, 0.00012161099999999717, 0.00012261100000000164, 0.00012142999999999876, 0.00012168100000000195, 0.00012236100000000139, 0.0001220969999999981, 0.000122292000000003, 0.00012193099999999873, 0.00012115299999999884, 0.00012234699999999835, 0.0001227640000000009]</msg>
<status status="PASS" starttime="20201112 10:14:25.121" endtime="20201112 10:14:25.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.116" endtime="20201112 10:14:25.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.126" endtime="20201112 10:14:25.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:25.129" endtime="20201112 10:14:25.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.128" endtime="20201112 10:14:25.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.124" endtime="20201112 10:14:25.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.752" endtime="20201112 10:14:25.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.751" endtime="20201112 10:14:25.150"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.159" endtime="20201112 10:14:25.180"></status>
</kw>
<msg timestamp="20201112 10:14:25.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.158" endtime="20201112 10:14:25.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.182" endtime="20201112 10:14:25.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.184" endtime="20201112 10:14:25.187"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.155" endtime="20201112 10:14:25.187"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.153" endtime="20201112 10:14:25.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.195" endtime="20201112 10:14:25.480"></status>
</kw>
<msg timestamp="20201112 10:14:25.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022759569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.193" endtime="20201112 10:14:25.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022759569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.485" endtime="20201112 10:14:25.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.493" endtime="20201112 10:14:25.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.190" endtime="20201112 10:14:25.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.189" endtime="20201112 10:14:25.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:25.500" level="INFO">${RESULT} = [{'time': 0.022759569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012416600000000194, 'source_diff': 0.00012416600000000194}, {'time': 0.022901569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:25.496" endtime="20201112 10:14:25.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:25.514" level="INFO">${ACCURACY} = {'time': [0.022759569, 0.022901569, 0.023035583, 0.023175597, 0.023313625, 0.023453653, 0.023593667, 0.023727681, 0.023861681, 0.024005694, 0.024143708, 0.024279736, 0.02442175, 0.024565792, 0.0247057...</msg>
<status status="PASS" starttime="20201112 10:14:25.501" endtime="20201112 10:14:25.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.518" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 10:14:25.517" endtime="20201112 10:14:25.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.521" level="INFO">VALUE: [0.00012416600000000194, 0.00012434700000000035, 0.00012351399999999818, 0.00012441599999999872, 0.00012350000000000208, 0.00012411099999999967, 0.0001232779999999975, 0.0001242229999999997, 0.00012343100000000023, 0.00012483300000000128, 0.0001244299999999983, 0.00012467999999999854, 0.00012431899999999774, 0.0001239450000000003, 0.00012484700000000085, 0.00012377800000000147, 0.0001242640000000024, 0.0001232640000000014, 0.00012375000000000233, 0.00012343000000000076, 0.00012498600000000054, 0.000123083000000003, 0.00012311099999999867, 0.00012409799999999957, 0.00012376299999999896, 0.00012447200000000047, 0.00012377800000000147, 0.0001244299999999983, 0.00012433300000000078, 0.00012429199999999807, 0.00012359700000000307, 0.00012461100000000017, 0.00012494400000000183, 0.0001249169999999987, 0.00012311100000000214, 0.00012325000000000183, 0.0001232640000000014, 0.00012401400000000215, 0.0001233480000000023, 0.00012411099999999967, 0.00012476299999999996, 0.00012325000000000183, 0.0001245970000000006, 0.00012409699999999663, 0.0001230969999999991, 0.0001242640000000024, 0.000123083999999999, 0.00012426299999999946, 0.00012406900000000096, 0.00012494400000000183]</msg>
<status status="PASS" starttime="20201112 10:14:25.520" endtime="20201112 10:14:25.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.515" endtime="20201112 10:14:25.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.525" endtime="20201112 10:14:25.526"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:25.528" endtime="20201112 10:14:25.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.527" endtime="20201112 10:14:25.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.523" endtime="20201112 10:14:25.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.151" endtime="20201112 10:14:25.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.151" endtime="20201112 10:14:25.549"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.558" endtime="20201112 10:14:25.579"></status>
</kw>
<msg timestamp="20201112 10:14:25.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.557" endtime="20201112 10:14:25.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.581" endtime="20201112 10:14:25.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.583" endtime="20201112 10:14:25.586"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.554" endtime="20201112 10:14:25.587"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.552" endtime="20201112 10:14:25.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.594" endtime="20201112 10:14:25.880"></status>
</kw>
<msg timestamp="20201112 10:14:25.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.592" endtime="20201112 10:14:25.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022583889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.885" endtime="20201112 10:14:25.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.893" endtime="20201112 10:14:25.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.590" endtime="20201112 10:14:25.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.588" endtime="20201112 10:14:25.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:25.900" level="INFO">${RESULT} = [{'time': 0.022710917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012702800000000125, 'source_diff': 0.00012702800000000125}, {'time': 0.022848931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:25.896" endtime="20201112 10:14:25.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:25.914" level="INFO">${ACCURACY} = {'time': [0.022710917, 0.022848931, 0.022992931, 0.023134931, 0.023278944, 0.023420958, 0.023556986, 0.023693042, 0.023833014, 0.023969028, 0.024115042, 0.024251083, 0.024391069, 0.024537111, 0.024677...</msg>
<status status="PASS" starttime="20201112 10:14:25.901" endtime="20201112 10:14:25.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.919" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 10:14:25.917" endtime="20201112 10:14:25.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.921" level="INFO">VALUE: [0.00012702800000000125, 0.00012511200000000014, 0.00012593100000000274, 0.00012566699999999945, 0.00012534699999999788, 0.00012692999999999732, 0.00012637499999999802, 0.00012576400000000043, 0.00012508299999999806, 0.00012543099999999877, 0.00012684799999999885, 0.0001261109999999982, 0.00012586100000000142, 0.00012602800000000025, 0.00012543000000000276, 0.00012516699999999895, 0.00012684699999999938, 0.00012575000000000086, 0.00012626400000000093, 0.0001260970000000021, 0.0001262780000000005, 0.00012640299999999716, 0.0001261939999999996, 0.000125471999999998, 0.0001250970000000011, 0.00012643099999999977, 0.0001265130000000017, 0.0001255970000000016, 0.00012576400000000043, 0.00012527800000000297, 0.0001259299999999998, 0.00012532000000000168, 0.00012526399999999993, 0.0001257499999999974, 0.00012527700000000003, 0.00012611100000000167, 0.00012529199999999907, 0.00012575000000000086, 0.00012693100000000027, 0.00012584699999999838, 0.00012676400000000143, 0.00012590300000000013, 0.00012634800000000182, 0.00012526399999999993, 0.0001250970000000011, 0.0001267499999999984, 0.00012643099999999977, 0.00012669499999999959, 0.00012601400000000068, 0.00012576400000000043]</msg>
<status status="PASS" starttime="20201112 10:14:25.920" endtime="20201112 10:14:25.922"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.915" endtime="20201112 10:14:25.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.925" endtime="20201112 10:14:25.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:25.928" endtime="20201112 10:14:25.948"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.927" endtime="20201112 10:14:25.948"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.923" endtime="20201112 10:14:25.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.550" endtime="20201112 10:14:25.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.550" endtime="20201112 10:14:25.949"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.958" endtime="20201112 10:14:25.979"></status>
</kw>
<msg timestamp="20201112 10:14:25.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.957" endtime="20201112 10:14:25.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.981" endtime="20201112 10:14:25.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.983" endtime="20201112 10:14:25.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.954" endtime="20201112 10:14:25.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.952" endtime="20201112 10:14:25.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.994" endtime="20201112 10:14:26.280"></status>
</kw>
<msg timestamp="20201112 10:14:26.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022753403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022882472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.992" endtime="20201112 10:14:26.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022753403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022882472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.284" endtime="20201112 10:14:26.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.293" endtime="20201112 10:14:26.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.989" endtime="20201112 10:14:26.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.988" endtime="20201112 10:14:26.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:26.300" level="INFO">${RESULT} = [{'time': 0.022882472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001290690000000025, 'source_diff': 0.0001290690000000025}, {'time': 0.023022486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:26.296" endtime="20201112 10:14:26.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:26.315" level="INFO">${ACCURACY} = {'time': [0.022882472, 0.023022486, 0.0231705, 0.023310514, 0.023456542, 0.023596542, 0.023742583, 0.023888597, 0.024026597, 0.024164625, 0.024310639, 0.024448639, 0.024588653, 0.024730681, 0.02487469...</msg>
<status status="PASS" starttime="20201112 10:14:26.301" endtime="20201112 10:14:26.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.319" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 10:14:26.318" endtime="20201112 10:14:26.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.322" level="INFO">VALUE: [0.0001290690000000025, 0.00012818000000000204, 0.00012850000000000014, 0.00012793100000000127, 0.00012752800000000175, 0.0001285980000000006, 0.00012727700000000203, 0.00012809700000000063, 0.00012845800000000143, 0.00012727799999999803, 0.00012827799999999903, 0.00012843100000000177, 0.00012826399999999946, 0.00012826399999999946, 0.00012859699999999766, 0.00012804099999999888, 0.00012809700000000063, 0.00012892999999999932, 0.0001288469999999979, 0.00012858400000000103, 0.00012723599999999932, 0.00012744400000000086, 0.00012847199999999753, 0.00012842999999999882, 0.0001279720000000005, 0.00012843100000000177, 0.00012902799999999978, 0.0001287919999999991, 0.0001280980000000001, 0.00012827699999999956, 0.0001271109999999992, 0.00012892999999999932, 0.00012834700000000088, 0.0001289309999999988, 0.00012822200000000075, 0.0001290140000000002, 0.0001275979999999996, 0.00012892999999999932, 0.00012873600000000082, 0.00012880500000000267, 0.00012743100000000077, 0.00012734699999999988, 0.0001284309999999983, 0.00012819500000000109, 0.0001286249999999968, 0.00012886099999999748, 0.0001289300000000028, 0.00012850000000000014, 0.00012793100000000127, 0.0001272919999999976]</msg>
<status status="PASS" starttime="20201112 10:14:26.321" endtime="20201112 10:14:26.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.316" endtime="20201112 10:14:26.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.326" endtime="20201112 10:14:26.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:26.329" endtime="20201112 10:14:26.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.328" endtime="20201112 10:14:26.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.324" endtime="20201112 10:14:26.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.950" endtime="20201112 10:14:26.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.950" endtime="20201112 10:14:26.350"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.359" endtime="20201112 10:14:26.381"></status>
</kw>
<msg timestamp="20201112 10:14:26.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.358" endtime="20201112 10:14:26.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.382" endtime="20201112 10:14:26.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.385" endtime="20201112 10:14:26.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.355" endtime="20201112 10:14:26.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.353" endtime="20201112 10:14:26.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.395" endtime="20201112 10:14:26.681"></status>
</kw>
<msg timestamp="20201112 10:14:26.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022724097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.393" endtime="20201112 10:14:26.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022724097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.685" endtime="20201112 10:14:26.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.694" endtime="20201112 10:14:26.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.391" endtime="20201112 10:14:26.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.389" endtime="20201112 10:14:26.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:26.701" level="INFO">${RESULT} = [{'time': 0.022724097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013019400000000014, 'source_diff': 0.00013019400000000014}, {'time': 0.022864111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:26.697" endtime="20201112 10:14:26.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:26.714" level="INFO">${ACCURACY} = {'time': [0.022724097, 0.022864111, 0.023008125, 0.023154139, 0.023304153, 0.023444181, 0.023588208, 0.023732208, 0.023882222, 0.02402425, 0.024172278, 0.024320292, 0.024464361, 0.024612319, 0.0247623...</msg>
<status status="PASS" starttime="20201112 10:14:26.702" endtime="20201112 10:14:26.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.719" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 10:14:26.718" endtime="20201112 10:14:26.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.722" level="INFO">VALUE: [0.00013019400000000014, 0.00012926400000000046, 0.0001299309999999998, 0.0001309859999999996, 0.00013072199999999978, 0.0001295980000000016, 0.0001299439999999999, 0.00013018000000000057, 0.0001298330000000028, 0.0001301110000000022, 0.00013011099999999873, 0.0001295980000000016, 0.00012983299999999934, 0.00012927700000000056, 0.00012995799999999946, 0.0001308189999999973, 0.0001296530000000004, 0.00013013899999999787, 0.00013041699999999726, 0.00013101399999999874, 0.00013027700000000156, 0.00012998600000000207, 0.0001298469999999989, 0.0001309440000000009, 0.0001300140000000012, 0.0001307639999999985, 0.0001304310000000003, 0.0001303339999999993, 0.0001301249999999983, 0.00013065299999999794, 0.00012929200000000307, 0.00013074999999999892, 0.00013059699999999966, 0.00013011099999999873, 0.0001307639999999985, 0.0001302500000000019, 0.00012959699999999866, 0.00013091599999999828, 0.00012917999999999957, 0.0001298330000000028, 0.00013009700000000263, 0.000130263999999998, 0.00012976400000000096, 0.00013074999999999892, 0.00012912500000000077, 0.00012961099999999823, 0.0001300829999999996, 0.00012941699999999973, 0.00012951399999999724, 0.00013044499999999987]</msg>
<status status="PASS" starttime="20201112 10:14:26.720" endtime="20201112 10:14:26.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.715" endtime="20201112 10:14:26.723"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.725" endtime="20201112 10:14:26.727"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:26.729" endtime="20201112 10:14:26.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.728" endtime="20201112 10:14:26.750"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.724" endtime="20201112 10:14:26.750"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.351" endtime="20201112 10:14:26.751"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.351" endtime="20201112 10:14:26.751"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.760" endtime="20201112 10:14:26.782"></status>
</kw>
<msg timestamp="20201112 10:14:26.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.758" endtime="20201112 10:14:26.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.783" endtime="20201112 10:14:26.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.786" endtime="20201112 10:14:26.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.755" endtime="20201112 10:14:26.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.753" endtime="20201112 10:14:26.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.796" endtime="20201112 10:14:27.083"></status>
</kw>
<msg timestamp="20201112 10:14:27.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023179514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023310833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.795" endtime="20201112 10:14:27.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023179514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023310833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.087" endtime="20201112 10:14:27.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.095" endtime="20201112 10:14:27.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.792" endtime="20201112 10:14:27.098"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.790" endtime="20201112 10:14:27.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:27.102" level="INFO">${RESULT} = [{'time': 0.023310833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013131900000000127, 'source_diff': 0.00013131900000000127}, {'time': 0.023454903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:27.099" endtime="20201112 10:14:27.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:27.116" level="INFO">${ACCURACY} = {'time': [0.023310833, 0.023454903, 0.023604861, 0.023754903, 0.023902903, 0.024052917, 0.024204931, 0.024350958, 0.024500972, 0.024644986, 0.024789014, 0.024931014, 0.025081042, 0.025233069, 0.025379...</msg>
<status status="PASS" starttime="20201112 10:14:27.103" endtime="20201112 10:14:27.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.121" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 10:14:27.120" endtime="20201112 10:14:27.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.123" level="INFO">VALUE: [0.00013131900000000127, 0.00013298599999999813, 0.0001326799999999996, 0.00013152800000000228, 0.00013136099999999998, 0.00013268099999999908, 0.00013231999999999827, 0.00013225000000000042, 0.0001327640000000005, 0.000132264, 0.00013126400000000246, 0.00013244500000000187, 0.00013158400000000056, 0.00013294399999999942, 0.00013250000000000067, 0.00013209700000000116, 0.00013211100000000073, 0.00013293099999999933, 0.00013219500000000162, 0.00013188800000000014, 0.0001314310000000013, 0.00013168000000000207, 0.00013206999999999802, 0.00013261100000000123, 0.00013193000000000232, 0.00013234699999999794, 0.00013263799999999742, 0.00013194500000000137, 0.00013155499999999848, 0.00013113899999999887, 0.0001314029999999987, 0.00013236100000000098, 0.0001329310000000028, 0.0001325279999999998, 0.000132264, 0.00013261100000000123, 0.00013292999999999985, 0.0001316799999999986, 0.00013222200000000128, 0.00013134699999999694, 0.00013209700000000116, 0.00013197200000000103, 0.00013268099999999908, 0.00013215199999999996, 0.0001326799999999996, 0.00013151399999999924, 0.00013300000000000117, 0.0001328470000000019, 0.00013206999999999802, 0.00013293099999999933]</msg>
<status status="PASS" starttime="20201112 10:14:27.122" endtime="20201112 10:14:27.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.117" endtime="20201112 10:14:27.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.127" endtime="20201112 10:14:27.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:27.131" endtime="20201112 10:14:27.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.129" endtime="20201112 10:14:27.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.125" endtime="20201112 10:14:27.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.752" endtime="20201112 10:14:27.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.751" endtime="20201112 10:14:27.152"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.161" endtime="20201112 10:14:27.182"></status>
</kw>
<msg timestamp="20201112 10:14:27.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.159" endtime="20201112 10:14:27.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.184" endtime="20201112 10:14:27.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.186" endtime="20201112 10:14:27.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.156" endtime="20201112 10:14:27.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.154" endtime="20201112 10:14:27.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.197" endtime="20201112 10:14:27.483"></status>
</kw>
<msg timestamp="20201112 10:14:27.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022664472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.195" endtime="20201112 10:14:27.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022664472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.487" endtime="20201112 10:14:27.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.495" endtime="20201112 10:14:27.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.193" endtime="20201112 10:14:27.498"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.191" endtime="20201112 10:14:27.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:27.502" level="INFO">${RESULT} = [{'time': 0.022798236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013376399999999802, 'source_diff': 0.00013376399999999802}, {'time': 0.02294225, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:14:27.499" endtime="20201112 10:14:27.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:27.516" level="INFO">${ACCURACY} = {'time': [0.022798236, 0.02294225, 0.023088264, 0.023242264, 0.023386278, 0.023534319, 0.023684333, 0.023836347, 0.023984347, 0.024136389, 0.024288403, 0.024442403, 0.024588486, 0.024732431, 0.0248844...</msg>
<status status="PASS" starttime="20201112 10:14:27.503" endtime="20201112 10:14:27.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.521" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 10:14:27.520" endtime="20201112 10:14:27.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.523" level="INFO">VALUE: [0.00013376399999999802, 0.00013377800000000106, 0.00013411099999999926, 0.00013408300000000012, 0.0001335969999999992, 0.0001332770000000011, 0.00013361099999999876, 0.00013455500000000148, 0.0001345970000000002, 0.00013493100000000133, 0.00013502799999999884, 0.000134264000000002, 0.0001339999999999987, 0.0001337779999999976, 0.00013425000000000242, 0.00013356900000000005, 0.00013415299999999797, 0.000133264000000001, 0.00013354200000000038, 0.00013377800000000106, 0.0001345840000000001, 0.0001332770000000011, 0.000134264000000002, 0.00013492999999999838, 0.00013387499999999858, 0.00013311100000000173, 0.00013427800000000156, 0.00013359799999999866, 0.0001332770000000011, 0.00013437499999999908, 0.00013383299999999987, 0.0001344450000000004, 0.0001343609999999995, 0.00013343099999999983, 0.00013455500000000148, 0.0001345970000000002, 0.00013374999999999845, 0.0001340969999999997, 0.00013441700000000126, 0.00013368100000000008, 0.00013454200000000138, 0.0001346389999999989, 0.00013492999999999838, 0.00013466600000000203, 0.00013384699999999944, 0.0001339169999999973, 0.0001335280000000008, 0.00013425000000000242, 0.0001347640000000025, 0.00013393100000000033]</msg>
<status status="PASS" starttime="20201112 10:14:27.522" endtime="20201112 10:14:27.524"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.517" endtime="20201112 10:14:27.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.527" endtime="20201112 10:14:27.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:27.531" endtime="20201112 10:14:27.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.529" endtime="20201112 10:14:27.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.525" endtime="20201112 10:14:27.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.153" endtime="20201112 10:14:27.552"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.152" endtime="20201112 10:14:27.552"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.561" endtime="20201112 10:14:27.582"></status>
</kw>
<msg timestamp="20201112 10:14:27.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.559" endtime="20201112 10:14:27.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.584" endtime="20201112 10:14:27.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.586" endtime="20201112 10:14:27.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.556" endtime="20201112 10:14:27.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.554" endtime="20201112 10:14:27.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.597" endtime="20201112 10:14:27.881"></status>
</kw>
<msg timestamp="20201112 10:14:27.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022941681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023078014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.595" endtime="20201112 10:14:27.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022941681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023078014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.885" endtime="20201112 10:14:27.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.894" endtime="20201112 10:14:27.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.592" endtime="20201112 10:14:27.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.591" endtime="20201112 10:14:27.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:27.901" level="INFO">${RESULT} = [{'time': 0.023078014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013633300000000237, 'source_diff': 0.00013633300000000237}, {'time': 0.023226014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:27.897" endtime="20201112 10:14:27.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:27.916" level="INFO">${ACCURACY} = {'time': [0.023078014, 0.023226014, 0.023378042, 0.023532042, 0.023682069, 0.023830083, 0.023976111, 0.024124181, 0.024276125, 0.024426153, 0.024574208, 0.024730236, 0.024880208, 0.025034222, 0.025184...</msg>
<status status="PASS" starttime="20201112 10:14:27.902" endtime="20201112 10:14:27.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.920" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 10:14:27.919" endtime="20201112 10:14:27.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.923" level="INFO">VALUE: [0.00013633300000000237, 0.00013658299999999915, 0.000135264000000003, 0.0001355840000000011, 0.00013577700000000012, 0.00013609699999999822, 0.00013594400000000242, 0.0001360840000000016, 0.00013576400000000002, 0.0001350970000000007, 0.00013641600000000031, 0.00013606899999999908, 0.00013677700000000112, 0.00013558299999999815, 0.00013690299999999725, 0.00013619499999999868, 0.0001351519999999995, 0.0001358480000000009, 0.00013540299999999922, 0.000135861000000001, 0.00013629199999999966, 0.00013522200000000081, 0.00013626400000000052, 0.00013643099999999936, 0.00013623599999999791, 0.00013643099999999936, 0.00013636099999999804, 0.0001362780000000001, 0.00013576400000000002, 0.0001367780000000006, 0.00013672200000000231, 0.00013626400000000052, 0.0001350840000000006, 0.00013624999999999748, 0.00013674999999999798, 0.0001350970000000007, 0.000135264000000003, 0.00013644499999999893, 0.00013634700000000194, 0.0001350840000000006, 0.00013527699999999962, 0.00013609699999999822, 0.00013559699999999772, 0.00013566699999999904, 0.00013572199999999784, 0.00013609699999999822, 0.00013559800000000066, 0.00013561100000000076, 0.00013526399999999952, 0.00013693000000000038]</msg>
<status status="PASS" starttime="20201112 10:14:27.921" endtime="20201112 10:14:27.924"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.917" endtime="20201112 10:14:27.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.927" endtime="20201112 10:14:27.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:27.930" endtime="20201112 10:14:27.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.928" endtime="20201112 10:14:27.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.925" endtime="20201112 10:14:27.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.553" endtime="20201112 10:14:27.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.552" endtime="20201112 10:14:27.951"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.960" endtime="20201112 10:14:27.983"></status>
</kw>
<msg timestamp="20201112 10:14:27.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.959" endtime="20201112 10:14:27.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.984" endtime="20201112 10:14:27.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.987" endtime="20201112 10:14:27.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.956" endtime="20201112 10:14:27.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.954" endtime="20201112 10:14:27.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.997" endtime="20201112 10:14:28.282"></status>
</kw>
<msg timestamp="20201112 10:14:28.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022776111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.996" endtime="20201112 10:14:28.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022776111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.286" endtime="20201112 10:14:28.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.295" endtime="20201112 10:14:28.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.993" endtime="20201112 10:14:28.297"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.991" endtime="20201112 10:14:28.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:28.302" level="INFO">${RESULT} = [{'time': 0.022915042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001389309999999984, 'source_diff': 0.0001389309999999984}, {'time': 0.023069069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:28.298" endtime="20201112 10:14:28.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:28.316" level="INFO">${ACCURACY} = {'time': [0.022915042, 0.023069069, 0.023217083, 0.023369097, 0.023525153, 0.023677181, 0.023831139, 0.023989167, 0.024139181, 0.024287194, 0.024437222, 0.024587222, 0.024739236, 0.024891264, 0.025043...</msg>
<status status="PASS" starttime="20201112 10:14:28.303" endtime="20201112 10:14:28.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.320" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 10:14:28.319" endtime="20201112 10:14:28.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.323" level="INFO">VALUE: [0.0001389309999999984, 0.00013874999999999998, 0.00013744400000000045, 0.00013819399999999774, 0.00013870900000000075, 0.00013906999999999808, 0.00013824999999999948, 0.00013877799999999912, 0.00013720899999999925, 0.00013726300000000205, 0.00013794400000000095, 0.00013867999999999867, 0.00013898600000000066, 0.00013841699999999832, 0.00013720900000000272, 0.00013852799999999887, 0.00013798599999999966, 0.00013884700000000097, 0.00013774999999999898, 0.00013772199999999984, 0.0001377780000000016, 0.00013876399999999955, 0.00013709800000000216, 0.0001381109999999998, 0.00013793000000000138, 0.00013768000000000113, 0.00013787500000000258, 0.00013775000000000245, 0.0001377780000000016, 0.00013776400000000202, 0.00013709699999999922, 0.00013892999999999892, 0.00013718000000000063, 0.00013895800000000152, 0.000137959, 0.0001390139999999998, 0.00013794499999999696, 0.00013722199999999934, 0.00013884700000000097, 0.00013709699999999922, 0.00013744400000000045, 0.0001380139999999988, 0.0001381109999999998, 0.00013762500000000233, 0.00013876400000000302, 0.00013791599999999835, 0.00013818000000000163, 0.00013868000000000213, 0.0001386810000000016, 0.00013741599999999785]</msg>
<status status="PASS" starttime="20201112 10:14:28.321" endtime="20201112 10:14:28.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.317" endtime="20201112 10:14:28.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.327" endtime="20201112 10:14:28.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:28.330" endtime="20201112 10:14:28.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.328" endtime="20201112 10:14:28.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.325" endtime="20201112 10:14:28.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.952" endtime="20201112 10:14:28.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.951" endtime="20201112 10:14:28.351"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.360" endtime="20201112 10:14:28.382"></status>
</kw>
<msg timestamp="20201112 10:14:28.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.359" endtime="20201112 10:14:28.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.383" endtime="20201112 10:14:28.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.386" endtime="20201112 10:14:28.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.356" endtime="20201112 10:14:28.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.354" endtime="20201112 10:14:28.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.396" endtime="20201112 10:14:28.683"></status>
</kw>
<msg timestamp="20201112 10:14:28.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023000847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023141681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.395" endtime="20201112 10:14:28.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023000847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023141681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.687" endtime="20201112 10:14:28.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.695" endtime="20201112 10:14:28.697"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.392" endtime="20201112 10:14:28.698"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.390" endtime="20201112 10:14:28.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:28.702" level="INFO">${RESULT} = [{'time': 0.023141681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001408339999999994, 'source_diff': 0.0001408339999999994}, {'time': 0.023293708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:28.699" endtime="20201112 10:14:28.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:28.720" level="INFO">${ACCURACY} = {'time': [0.023141681, 0.023293708, 0.023453708, 0.023607722, 0.023759764, 0.023915764, 0.024075792, 0.024229792, 0.024383819, 0.024537847, 0.024691861, 0.024843861, 0.024999889, 0.025155903, 0.025309...</msg>
<status status="PASS" starttime="20201112 10:14:28.703" endtime="20201112 10:14:28.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.725" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 10:14:28.724" endtime="20201112 10:14:28.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.728" level="INFO">VALUE: [0.0001408339999999994, 0.00014044399999999999, 0.00014033299999999943, 0.00014040300000000075, 0.0001402079999999993, 0.00013916699999999907, 0.00014001399999999734, 0.0001409310000000004, 0.0001400270000000009, 0.00014026400000000105, 0.00013926400000000005, 0.00014009699999999875, 0.00013994500000000243, 0.0001408469999999995, 0.0001405980000000022, 0.00013943000000000288, 0.0001403750000000016, 0.00013942999999999942, 0.0001400140000000008, 0.00014044499999999946, 0.0001408750000000021, 0.00014044499999999946, 0.00014009700000000222, 0.00013976300000000108, 0.00013992999999999992, 0.00014000000000000123, 0.0001404309999999999, 0.00014074999999999852, 0.00013912500000000036, 0.00013927700000000015, 0.0001392629999999971, 0.00014095800000000006, 0.00013936100000000104, 0.00014026400000000105, 0.00014000000000000123, 0.00014036199999999804, 0.0001405980000000022, 0.00014013899999999746, 0.00013990300000000025, 0.0001403050000000003, 0.00013926400000000005, 0.00014044499999999946, 0.0001406949999999997, 0.00013984799999999797, 0.0001407629999999986, 0.00013977800000000012, 0.00013976400000000055, 0.0001394309999999989, 0.000140346999999999, 0.00014075000000000198]</msg>
<status status="PASS" starttime="20201112 10:14:28.726" endtime="20201112 10:14:28.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.721" endtime="20201112 10:14:28.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.731" endtime="20201112 10:14:28.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:28.735" endtime="20201112 10:14:28.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.733" endtime="20201112 10:14:28.755"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.730" endtime="20201112 10:14:28.756"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.352" endtime="20201112 10:14:28.756"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.351" endtime="20201112 10:14:28.756"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.766" endtime="20201112 10:14:28.788"></status>
</kw>
<msg timestamp="20201112 10:14:28.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.764" endtime="20201112 10:14:28.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.790" endtime="20201112 10:14:28.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.793" endtime="20201112 10:14:28.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.761" endtime="20201112 10:14:28.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.759" endtime="20201112 10:14:28.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.803" endtime="20201112 10:14:29.090"></status>
</kw>
<msg timestamp="20201112 10:14:29.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023791222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023932708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.801" endtime="20201112 10:14:29.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023791222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023932708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.094" endtime="20201112 10:14:29.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.102" endtime="20201112 10:14:29.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.799" endtime="20201112 10:14:29.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.797" endtime="20201112 10:14:29.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:29.109" level="INFO">${RESULT} = [{'time': 0.023932708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001414859999999997, 'source_diff': 0.0001414859999999997}, {'time': 0.024094778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:29.105" endtime="20201112 10:14:29.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:29.123" level="INFO">${ACCURACY} = {'time': [0.023932708, 0.024094778, 0.024250764, 0.024408764, 0.024568792, 0.024726806, 0.024886819, 0.025040861, 0.025198889, 0.025358875, 0.025510889, 0.025664903, 0.025818972, 0.025976958, 0.026136...</msg>
<status status="PASS" starttime="20201112 10:14:29.110" endtime="20201112 10:14:29.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.128" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 10:14:29.126" endtime="20201112 10:14:29.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.130" level="INFO">VALUE: [0.0001414859999999997, 0.00014265299999999953, 0.00014161099999999982, 0.00014176399999999909, 0.00014277799999999966, 0.00014209800000000022, 0.00014209700000000075, 0.00014261100000000082, 0.00014197199999999716, 0.000142347000000001, 0.00014226399999999959, 0.00014174999999999952, 0.00014163899999999896, 0.00014244400000000199, 0.0001415140000000023, 0.0001426250000000004, 0.00014243099999999842, 0.00014211100000000032, 0.00014170900000000028, 0.00014144400000000099, 0.00014251300000000036, 0.0001428340000000014, 0.00014242999999999895, 0.00014172299999999985, 0.000141347, 0.00014194500000000096, 0.00014298599999999773, 0.00014265299999999953, 0.00014245799999999809, 0.00014242999999999895, 0.00014284699999999803, 0.00014126399999999859, 0.00014159799999999972, 0.00014209800000000022, 0.00014279099999999975, 0.0001417080000000008, 0.0001423889999999997, 0.00014284699999999803, 0.00014183300000000093, 0.0001411119999999988, 0.00014193099999999792, 0.00014301300000000086, 0.0001428890000000002, 0.00014201399999999934, 0.00014176399999999909, 0.00014194500000000096, 0.00014219499999999774, 0.0001411530000000015, 0.00014202699999999596, 0.0001425549999999956]</msg>
<status status="PASS" starttime="20201112 10:14:29.129" endtime="20201112 10:14:29.131"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.124" endtime="20201112 10:14:29.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.134" endtime="20201112 10:14:29.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:29.138" endtime="20201112 10:14:29.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.136" endtime="20201112 10:14:29.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.132" endtime="20201112 10:14:29.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.757" endtime="20201112 10:14:29.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.756" endtime="20201112 10:14:29.159"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.167" endtime="20201112 10:14:29.189"></status>
</kw>
<msg timestamp="20201112 10:14:29.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.166" endtime="20201112 10:14:29.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.191" endtime="20201112 10:14:29.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.193" endtime="20201112 10:14:29.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.163" endtime="20201112 10:14:29.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.161" endtime="20201112 10:14:29.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.204" endtime="20201112 10:14:29.490"></status>
</kw>
<msg timestamp="20201112 10:14:29.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022840958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022984361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.202" endtime="20201112 10:14:29.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022840958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022984361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.494" endtime="20201112 10:14:29.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.503" endtime="20201112 10:14:29.504"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.200" endtime="20201112 10:14:29.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.198" endtime="20201112 10:14:29.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:29.510" level="INFO">${RESULT} = [{'time': 0.022984361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001434029999999968, 'source_diff': 0.0001434029999999968}, {'time': 0.023146361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:29.506" endtime="20201112 10:14:29.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:29.525" level="INFO">${ACCURACY} = {'time': [0.022984361, 0.023146361, 0.023300389, 0.023456444, 0.023612431, 0.023772431, 0.023930458, 0.024086472, 0.0242405, 0.0243985, 0.024552556, 0.024708542, 0.024866611, 0.025028583, 0.025190611,...</msg>
<status status="PASS" starttime="20201112 10:14:29.511" endtime="20201112 10:14:29.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.529" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 10:14:29.528" endtime="20201112 10:14:29.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.532" level="INFO">VALUE: [0.0001434029999999968, 0.00014326400000000059, 0.00014372200000000238, 0.00014413799999999852, 0.00014477799999999819, 0.00014459799999999925, 0.00014376400000000109, 0.00014342999999999995, 0.00014419400000000027, 0.00014401400000000134, 0.00014329199999999973, 0.00014476399999999862, 0.00014415300000000103, 0.00014426400000000159, 0.00014376400000000109, 0.00014326400000000059, 0.00014493100000000092, 0.00014433399999999943, 0.00014376400000000109, 0.00014393000000000045, 0.00014416600000000113, 0.0001441939999999968, 0.00014368099999999967, 0.0001440280000000009, 0.00014443100000000042, 0.00014486199999999907, 0.00014409699999999928, 0.00014411099999999885, 0.00014476399999999862, 0.00014326400000000059, 0.0001433609999999981, 0.0001448479999999995, 0.00014374999999999805, 0.00014409700000000275, 0.00014323599999999798, 0.00014344399999999952, 0.00014433299999999996, 0.00014411100000000232, 0.00014394500000000296, 0.0001446670000000011, 0.0001445410000000015, 0.00014427800000000116, 0.00014429200000000073, 0.00014326400000000059, 0.00014361099999999835, 0.0001439449999999995, 0.0001448479999999995, 0.00014376400000000109, 0.00014492999999999798, 0.0001449999999999993]</msg>
<status status="PASS" starttime="20201112 10:14:29.530" endtime="20201112 10:14:29.533"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.526" endtime="20201112 10:14:29.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.536" endtime="20201112 10:14:29.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:29.539" endtime="20201112 10:14:29.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.538" endtime="20201112 10:14:29.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.534" endtime="20201112 10:14:29.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.159" endtime="20201112 10:14:29.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.159" endtime="20201112 10:14:29.561"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.570" endtime="20201112 10:14:29.592"></status>
</kw>
<msg timestamp="20201112 10:14:29.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.568" endtime="20201112 10:14:29.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.593" endtime="20201112 10:14:29.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.596" endtime="20201112 10:14:29.598"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.565" endtime="20201112 10:14:29.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.563" endtime="20201112 10:14:29.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.606" endtime="20201112 10:14:29.893"></status>
</kw>
<msg timestamp="20201112 10:14:29.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022805569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022951069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.605" endtime="20201112 10:14:29.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022805569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022951069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.897" endtime="20201112 10:14:29.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.906" endtime="20201112 10:14:29.908"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.602" endtime="20201112 10:14:29.908"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.600" endtime="20201112 10:14:29.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:29.913" level="INFO">${RESULT} = [{'time': 0.022951069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001454999999999998, 'source_diff': 0.0001454999999999998}, {'time': 0.023113111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:29.909" endtime="20201112 10:14:29.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:29.927" level="INFO">${ACCURACY} = {'time': [0.022951069, 0.023113111, 0.023273097, 0.023431125, 0.023593167, 0.023759208, 0.023919181, 0.024079194, 0.024245222, 0.024403236, 0.02456125, 0.024727278, 0.024891306, 0.025051319, 0.0252073...</msg>
<status status="PASS" starttime="20201112 10:14:29.914" endtime="20201112 10:14:29.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.931" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 10:14:29.930" endtime="20201112 10:14:29.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.934" level="INFO">VALUE: [0.0001454999999999998, 0.00014527799999999869, 0.00014526399999999912, 0.00014509700000000028, 0.00014627800000000316, 0.0001466520000000006, 0.00014659800000000126, 0.00014659700000000178, 0.00014627799999999969, 0.00014574999999999658, 0.00014593099999999845, 0.00014669499999999877, 0.000145138999999999, 0.00014567999999999873, 0.00014517999999999823, 0.0001463610000000011, 0.00014543000000000195, 0.0001459029999999993, 0.00014526399999999912, 0.00014544499999999752, 0.0001458480000000005, 0.00014508299999999724, 0.00014642999999999948, 0.00014619500000000174, 0.00014684699999999856, 0.00014593099999999845, 0.00014686200000000108, 0.00014561100000000035, 0.0001460830000000017, 0.00014542999999999848, 0.00014537499999999967, 0.00014676400000000062, 0.00014693099999999945, 0.0001466520000000006, 0.00014601399999999987, 0.0001459719999999977, 0.000146139, 0.0001458190000000019, 0.00014588899999999974, 0.00014548600000000023, 0.00014643100000000242, 0.0001461939999999988, 0.00014667999999999973, 0.00014552799999999894, 0.0001469030000000003, 0.00014683399999999847, 0.00014508400000000019, 0.00014644400000000252, 0.00014666600000000016, 0.00014651400000000037]</msg>
<status status="PASS" starttime="20201112 10:14:29.932" endtime="20201112 10:14:29.935"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.927" endtime="20201112 10:14:29.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.937" endtime="20201112 10:14:29.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:29.941" endtime="20201112 10:14:29.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.940" endtime="20201112 10:14:29.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.936" endtime="20201112 10:14:29.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.561" endtime="20201112 10:14:29.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.561" endtime="20201112 10:14:29.962"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.971" endtime="20201112 10:14:29.993"></status>
</kw>
<msg timestamp="20201112 10:14:29.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.969" endtime="20201112 10:14:29.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.995" endtime="20201112 10:14:29.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.997" endtime="20201112 10:14:30.000"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.967" endtime="20201112 10:14:30.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.965" endtime="20201112 10:14:30.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.008" endtime="20201112 10:14:30.294"></status>
</kw>
<msg timestamp="20201112 10:14:30.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022632264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022779597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.006" endtime="20201112 10:14:30.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022632264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022779597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.298" endtime="20201112 10:14:30.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.307" endtime="20201112 10:14:30.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.003" endtime="20201112 10:14:30.309"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.002" endtime="20201112 10:14:30.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:30.314" level="INFO">${RESULT} = [{'time': 0.022779597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001473329999999995, 'source_diff': 0.0001473329999999995}, {'time': 0.022941597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:30.310" endtime="20201112 10:14:30.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:30.327" level="INFO">${ACCURACY} = {'time': [0.022779597, 0.022941597, 0.023105639, 0.023265653, 0.023429708, 0.023587667, 0.023747708, 0.023909708, 0.024069736, 0.02423575, 0.024393792, 0.024553778, 0.024713806, 0.024881833, 0.0250458...</msg>
<status status="PASS" starttime="20201112 10:14:30.315" endtime="20201112 10:14:30.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.332" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 10:14:30.331" endtime="20201112 10:14:30.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.335" level="INFO">VALUE: [0.0001473329999999995, 0.00014726400000000112, 0.00014706999999999915, 0.00014811099999999938, 0.00014895800000000112, 0.0001480139999999984, 0.00014761099999999888, 0.00014722199999999894, 0.00014822199999999994, 0.00014893100000000145, 0.00014737500000000167, 0.00014843099999999748, 0.00014884800000000004, 0.00014811099999999938, 0.00014858300000000074, 0.00014730599999999983, 0.00014726400000000112, 0.00014777799999999772, 0.00014863899999999902, 0.00014845799999999715, 0.00014756900000000017, 0.00014877800000000219, 0.00014876399999999915, 0.00014811099999999938, 0.00014743099999999995, 0.0001475139999999979, 0.00014826300000000264, 0.0001479299999999975, 0.0001471939999999998, 0.0001476940000000003, 0.0001473610000000021, 0.0001475969999999993, 0.00014874999999999958, 0.00014726300000000164, 0.00014844400000000105, 0.0001476940000000003, 0.00014801400000000187, 0.00014802800000000144, 0.00014826399999999865, 0.00014791700000000088, 0.00014813899999999852, 0.000148833000000001, 0.00014838899999999877, 0.00014816700000000113, 0.00014734799999999854, 0.00014775000000000205, 0.00014874999999999958, 0.00014838900000000224, 0.00014784699999999956, 0.00014843000000000148]</msg>
<status status="PASS" starttime="20201112 10:14:30.333" endtime="20201112 10:14:30.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.328" endtime="20201112 10:14:30.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.338" endtime="20201112 10:14:30.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:30.342" endtime="20201112 10:14:30.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.340" endtime="20201112 10:14:30.362"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.337" endtime="20201112 10:14:30.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.963" endtime="20201112 10:14:30.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.962" endtime="20201112 10:14:30.363"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.372" endtime="20201112 10:14:30.394"></status>
</kw>
<msg timestamp="20201112 10:14:30.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.370" endtime="20201112 10:14:30.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.396" endtime="20201112 10:14:30.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.398" endtime="20201112 10:14:30.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.368" endtime="20201112 10:14:30.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.365" endtime="20201112 10:14:30.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.409" endtime="20201112 10:14:30.696"></status>
</kw>
<msg timestamp="20201112 10:14:30.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022745958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022895917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.407" endtime="20201112 10:14:30.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022745958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022895917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.700" endtime="20201112 10:14:30.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.708" endtime="20201112 10:14:30.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.405" endtime="20201112 10:14:30.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.403" endtime="20201112 10:14:30.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:30.715" level="INFO">${RESULT} = [{'time': 0.022895917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014995899999999812, 'source_diff': 0.00014995899999999812}, {'time': 0.023059958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:30.712" endtime="20201112 10:14:30.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:30.729" level="INFO">${ACCURACY} = {'time': [0.022895917, 0.023059958, 0.023227972, 0.023396, 0.023556, 0.023716014, 0.023876056, 0.024044069, 0.024206111, 0.024374097, 0.024534111, 0.024702125, 0.024870167, 0.025038181, 0.025206181, 0...</msg>
<status status="PASS" starttime="20201112 10:14:30.716" endtime="20201112 10:14:30.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.734" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 10:14:30.733" endtime="20201112 10:14:30.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.736" level="INFO">VALUE: [0.00014995899999999812, 0.00015095799999999965, 0.00014936100000000063, 0.00015045799999999915, 0.00014950000000000033, 0.0001500970000000018, 0.0001490559999999981, 0.0001500970000000018, 0.0001502499999999976, 0.00015027800000000022, 0.00014941700000000238, 0.0001508469999999991, 0.00015095899999999912, 0.0001495139999999999, 0.00015076400000000115, 0.0001499720000000017, 0.0001510140000000014, 0.00015043, 0.00014934700000000106, 0.00014941700000000238, 0.00014986100000000113, 0.00015044399999999958, 0.00014952799999999947, 0.00014958299999999827, 0.00014976400000000015, 0.00015033299999999902, 0.00014912499999999995, 0.00014959799999999732, 0.00014986100000000113, 0.0001508469999999991, 0.00014944400000000205, 0.00014984700000000156, 0.0001502499999999976, 0.00015058400000000222, 0.00015022200000000194, 0.00014977799999999972, 0.0001505689999999997, 0.00014961100000000088, 0.0001494859999999973, 0.00014955499999999913, 0.00015093099999999998, 0.00014949999999999686, 0.00015043, 0.0001493469999999976, 0.00014925000000000008, 0.0001490970000000008, 0.00014927799999999922, 0.00015077700000000124, 0.00015094400000000008, 0.00014952799999999947]</msg>
<status status="PASS" starttime="20201112 10:14:30.735" endtime="20201112 10:14:30.737"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.730" endtime="20201112 10:14:30.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.740" endtime="20201112 10:14:30.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:30.743" endtime="20201112 10:14:30.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.742" endtime="20201112 10:14:30.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.738" endtime="20201112 10:14:30.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.364" endtime="20201112 10:14:30.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.363" endtime="20201112 10:14:30.764"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.773" endtime="20201112 10:14:30.795"></status>
</kw>
<msg timestamp="20201112 10:14:30.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.772" endtime="20201112 10:14:30.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.797" endtime="20201112 10:14:30.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.800" endtime="20201112 10:14:30.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.769" endtime="20201112 10:14:30.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.767" endtime="20201112 10:14:30.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.811" endtime="20201112 10:14:31.097"></status>
</kw>
<msg timestamp="20201112 10:14:31.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022692139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.809" endtime="20201112 10:14:31.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022539125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022692139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.102" endtime="20201112 10:14:31.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.110" endtime="20201112 10:14:31.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.806" endtime="20201112 10:14:31.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.804" endtime="20201112 10:14:31.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:31.117" level="INFO">${RESULT} = [{'time': 0.022692139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015301399999999993, 'source_diff': 0.00015301399999999993}, {'time': 0.022862153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:31.114" endtime="20201112 10:14:31.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:31.132" level="INFO">${ACCURACY} = {'time': [0.022692139, 0.022862153, 0.023030167, 0.023200181, 0.023368208, 0.023536222, 0.02370425, 0.023874264, 0.024038306, 0.024200306, 0.024364361, 0.024528361, 0.024696361, 0.024866431, 0.0250303...</msg>
<status status="PASS" starttime="20201112 10:14:31.118" endtime="20201112 10:14:31.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.137" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 10:14:31.136" endtime="20201112 10:14:31.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.139" level="INFO">VALUE: [0.00015301399999999993, 0.00015193100000000098, 0.00015234800000000007, 0.00015240299999999887, 0.00015249999999999986, 0.00015205499999999816, 0.0001521109999999999, 0.0001527500000000001, 0.00015179199999999782, 0.00015126400000000165, 0.00015112500000000195, 0.00015229199999999832, 0.00015242999999999854, 0.00015307000000000168, 0.00015193100000000098, 0.00015134799999999907, 0.0001514439999999971, 0.00015236100000000016, 0.0001516109999999994, 0.000151430000000001, 0.00015301399999999993, 0.00015143100000000048, 0.0001528479999999971, 0.00015159699999999984, 0.0001513889999999983, 0.00015157000000000018, 0.00015193100000000098, 0.0001523470000000006, 0.00015227799999999875, 0.00015295799999999818, 0.0001521799999999983, 0.0001521799999999983, 0.00015151399999999843, 0.00015277799999999925, 0.00015293100000000198, 0.00015155500000000113, 0.000152430000000002, 0.00015201399999999893, 0.00015109699999999934, 0.00015259700000000084, 0.00015231899999999798, 0.0001514170000000009, 0.00015248699999999976, 0.00015159699999999984, 0.00015173599999999954, 0.00015109699999999934, 0.00015195900000000012, 0.0001530279999999995, 0.0001529860000000008, 0.00015201299999999945]</msg>
<status status="PASS" starttime="20201112 10:14:31.138" endtime="20201112 10:14:31.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.133" endtime="20201112 10:14:31.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.143" endtime="20201112 10:14:31.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:31.146" endtime="20201112 10:14:31.166"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.145" endtime="20201112 10:14:31.166"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.141" endtime="20201112 10:14:31.167"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.765" endtime="20201112 10:14:31.167"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.765" endtime="20201112 10:14:31.167"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.176" endtime="20201112 10:14:31.199"></status>
</kw>
<msg timestamp="20201112 10:14:31.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.175" endtime="20201112 10:14:31.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.200" endtime="20201112 10:14:31.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.203" endtime="20201112 10:14:31.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.172" endtime="20201112 10:14:31.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.170" endtime="20201112 10:14:31.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.214" endtime="20201112 10:14:31.499"></status>
</kw>
<msg timestamp="20201112 10:14:31.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022802972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022956806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.212" endtime="20201112 10:14:31.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022802972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022956806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.504" endtime="20201112 10:14:31.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.512" endtime="20201112 10:14:31.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.209" endtime="20201112 10:14:31.514"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.207" endtime="20201112 10:14:31.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:31.519" level="INFO">${RESULT} = [{'time': 0.022956806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015383399999999853, 'source_diff': 0.00015383399999999853}, {'time': 0.023122833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:31.515" endtime="20201112 10:14:31.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:31.533" level="INFO">${ACCURACY} = {'time': [0.022956806, 0.023122833, 0.023288847, 0.023454875, 0.023624958, 0.023798903, 0.023966917, 0.024136944, 0.024308972, 0.024476986, 0.024643014, 0.024815014, 0.024985042, 0.025153056, 0.025325...</msg>
<status status="PASS" starttime="20201112 10:14:31.520" endtime="20201112 10:14:31.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.537" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 10:14:31.536" endtime="20201112 10:14:31.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.540" level="INFO">VALUE: [0.00015383399999999853, 0.00015311099999999744, 0.00015327799999999975, 0.0001544440000000001, 0.00015376400000000068, 0.0001546670000000007, 0.00015400000000000136, 0.0001549440000000006, 0.00015318000000000276, 0.0001533609999999977, 0.000154431, 0.0001549999999999989, 0.00015444499999999958, 0.00015334800000000107, 0.00015497199999999975, 0.00015401399999999746, 0.0001545829999999998, 0.00015479199999999735, 0.00015309800000000082, 0.00015408399999999878, 0.00015441600000000097, 0.00015451399999999796, 0.00015427799999999728, 0.00015445799999999968, 0.00015309700000000134, 0.0001549310000000005, 0.00015468100000000026, 0.00015319399999999886, 0.0001541800000000003, 0.00015450000000000186, 0.0001549310000000005, 0.00015501400000000193, 0.00015330499999999941, 0.00015394400000000308, 0.00015316599999999972, 0.0001537080000000024, 0.00015501400000000193, 0.00015476400000000168, 0.0001541120000000014, 0.00015362500000000098, 0.0001539439999999996, 0.00015401400000000093, 0.0001537639999999972, 0.00015450000000000186, 0.00015344500000000205, 0.00015320799999999843, 0.00015333299999999855, 0.00015306899999999873, 0.00015411099999999844, 0.0001545829999999998]</msg>
<status status="PASS" starttime="20201112 10:14:31.538" endtime="20201112 10:14:31.541"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.533" endtime="20201112 10:14:31.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.544" endtime="20201112 10:14:31.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:31.547" endtime="20201112 10:14:31.566"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.545" endtime="20201112 10:14:31.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.542" endtime="20201112 10:14:31.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.168" endtime="20201112 10:14:31.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.168" endtime="20201112 10:14:31.568"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.577" endtime="20201112 10:14:31.599"></status>
</kw>
<msg timestamp="20201112 10:14:31.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.576" endtime="20201112 10:14:31.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.601" endtime="20201112 10:14:31.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.603" endtime="20201112 10:14:31.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.573" endtime="20201112 10:14:31.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.571" endtime="20201112 10:14:31.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.615" endtime="20201112 10:14:31.901"></status>
</kw>
<msg timestamp="20201112 10:14:31.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022974431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023130083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.613" endtime="20201112 10:14:31.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022974431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023130083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.905" endtime="20201112 10:14:31.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.914" endtime="20201112 10:14:31.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.610" endtime="20201112 10:14:31.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.608" endtime="20201112 10:14:31.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:31.921" level="INFO">${RESULT} = [{'time': 0.023130083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015565199999999918, 'source_diff': 0.00015565199999999918}, {'time': 0.023306111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:31.917" endtime="20201112 10:14:31.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:31.935" level="INFO">${ACCURACY} = {'time': [0.023130083, 0.023306111, 0.023474125, 0.023648153, 0.023816181, 0.023982181, 0.024158208, 0.024330222, 0.02450425, 0.024670264, 0.024844306, 0.025016306, 0.025186319, 0.025352361, 0.0255183...</msg>
<status status="PASS" starttime="20201112 10:14:31.922" endtime="20201112 10:14:31.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.939" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 10:14:31.938" endtime="20201112 10:14:31.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.942" level="INFO">VALUE: [0.00015565199999999918, 0.00015601399999999946, 0.00015676399999999674, 0.0001567640000000002, 0.00015611199999999992, 0.00015608400000000078, 0.00015625000000000014, 0.0001560969999999974, 0.00015505600000000064, 0.00015641700000000244, 0.00015529200000000132, 0.0001557639999999992, 0.00015592999999999857, 0.00015519400000000086, 0.0001554999999999994, 0.00015645900000000115, 0.00015587499999999976, 0.00015611199999999992, 0.00015656899999999876, 0.00015647200000000125, 0.0001568749999999973, 0.00015591699999999847, 0.00015637500000000026, 0.00015641699999999897, 0.00015551399999999896, 0.00015659700000000137, 0.0001550280000000015, 0.00015544399999999764, 0.00015552799999999853, 0.00015574999999999964, 0.00015541700000000144, 0.0001557769999999993, 0.00015592999999999857, 0.0001556670000000017, 0.00015518100000000076, 0.000155528000000002, 0.0001557500000000031, 0.00015661100000000094, 0.0001564440000000021, 0.00015649999999999692, 0.00015561099999999994, 0.00015662500000000051, 0.00015561099999999994, 0.00015659800000000085, 0.00015591600000000247, 0.00015519400000000086, 0.00015584700000000062, 0.00015694500000000208, 0.0001560549999999987, 0.000156528000000003]</msg>
<status status="PASS" starttime="20201112 10:14:31.940" endtime="20201112 10:14:31.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.935" endtime="20201112 10:14:31.943"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.946" endtime="20201112 10:14:31.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:31.949" endtime="20201112 10:14:31.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.947" endtime="20201112 10:14:31.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.944" endtime="20201112 10:14:31.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.569" endtime="20201112 10:14:31.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.568" endtime="20201112 10:14:31.970"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.979" endtime="20201112 10:14:32.002"></status>
</kw>
<msg timestamp="20201112 10:14:32.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.978" endtime="20201112 10:14:32.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.004" endtime="20201112 10:14:32.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.006" endtime="20201112 10:14:32.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.975" endtime="20201112 10:14:32.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.973" endtime="20201112 10:14:32.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.017" endtime="20201112 10:14:32.302"></status>
</kw>
<msg timestamp="20201112 10:14:32.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022910181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023068, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:32.015" endtime="20201112 10:14:32.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022910181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023068, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:32.306" endtime="20201112 10:14:32.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.315" endtime="20201112 10:14:32.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.012" endtime="20201112 10:14:32.317"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.011" endtime="20201112 10:14:32.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:32.321" level="INFO">${RESULT} = [{'time': 0.023068, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015781900000000001, 'source_diff': 0.00015781900000000001}, {'time': 0.023238014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:32.318" endtime="20201112 10:14:32.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:32.335" level="INFO">${ACCURACY} = {'time': [0.023068, 0.023238014, 0.023410042, 0.023580056, 0.023752083, 0.023920097, 0.024096125, 0.024264139, 0.024440153, 0.024614167, 0.024786208, 0.024960222, 0.025130236, 0.02530225, 0.025476306,...</msg>
<status status="PASS" starttime="20201112 10:14:32.322" endtime="20201112 10:14:32.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.340" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 10:14:32.339" endtime="20201112 10:14:32.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.342" level="INFO">VALUE: [0.00015781900000000001, 0.00015759700000000237, 0.00015709799999999788, 0.00015776399999999774, 0.00015811099999999897, 0.00015752800000000053, 0.00015743099999999954, 0.0001578610000000022, 0.0001580839999999993, 0.00015826399999999824, 0.00015761100000000194, 0.00015777800000000078, 0.00015877800000000178, 0.00015893099999999757, 0.00015737500000000126, 0.00015859799999999938, 0.00015793000000000057, 0.0001585139999999985, 0.00015861100000000294, 0.00015762499999999804, 0.00015824999999999867, 0.00015879199999999788, 0.00015743099999999954, 0.0001571939999999994, 0.00015715300000000015, 0.00015834699999999965, 0.00015762500000000151, 0.0001577779999999973, 0.0001572640000000007, 0.00015794400000000014, 0.00015883299999999712, 0.00015858300000000033, 0.00015774999999999817, 0.0001570839999999983, 0.00015793100000000004, 0.0001583749999999988, 0.0001587640000000022, 0.00015891700000000147, 0.00015802799999999756, 0.00015899999999999942, 0.00015749999999999792, 0.0001572640000000007, 0.0001580969999999994, 0.00015867999999999785, 0.00015793000000000057, 0.0001583749999999988, 0.00015825000000000214, 0.00015765300000000065, 0.00015776300000000174, 0.00015793000000000057]</msg>
<status status="PASS" starttime="20201112 10:14:32.341" endtime="20201112 10:14:32.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.336" endtime="20201112 10:14:32.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.346" endtime="20201112 10:14:32.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:32.350" endtime="20201112 10:14:32.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.348" endtime="20201112 10:14:32.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.345" endtime="20201112 10:14:32.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.971" endtime="20201112 10:14:32.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.971" endtime="20201112 10:14:32.371"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.380" endtime="20201112 10:14:32.403"></status>
</kw>
<msg timestamp="20201112 10:14:32.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.378" endtime="20201112 10:14:32.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.404" endtime="20201112 10:14:32.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.407" endtime="20201112 10:14:32.409"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.376" endtime="20201112 10:14:32.410"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.373" endtime="20201112 10:14:32.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.417" endtime="20201112 10:14:32.703"></status>
</kw>
<msg timestamp="20201112 10:14:32.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022559375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022718708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.416" endtime="20201112 10:14:32.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022559375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022718708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.708" endtime="20201112 10:14:32.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.716" endtime="20201112 10:14:32.718"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.413" endtime="20201112 10:14:32.718"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.411" endtime="20201112 10:14:32.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:32.723" level="INFO">${RESULT} = [{'time': 0.022718708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015933300000000108, 'source_diff': 0.00015933300000000108}, {'time': 0.022890722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:32.720" endtime="20201112 10:14:32.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:32.738" level="INFO">${ACCURACY} = {'time': [0.022718708, 0.022890722, 0.023066792, 0.023244778, 0.023422778, 0.023596806, 0.023768819, 0.023942861, 0.024120861, 0.024300889, 0.024472903, 0.024644931, 0.024820958, 0.024994972, 0.025172...</msg>
<status status="PASS" starttime="20201112 10:14:32.724" endtime="20201112 10:14:32.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.743" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 10:14:32.742" endtime="20201112 10:14:32.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.745" level="INFO">VALUE: [0.00015933300000000108, 0.00015976399999999974, 0.00016048599999999788, 0.00015919500000000086, 0.00015916699999999825, 0.00016000000000000042, 0.0001604299999999996, 0.00016036099999999776, 0.00015926399999999924, 0.00016059699999999844, 0.00015993100000000204, 0.0001601949999999984, 0.00016036100000000122, 0.00016044399999999917, 0.00016067999999999985, 0.000160223000000001, 0.00016100000000000142, 0.00016045899999999821, 0.00015911099999999997, 0.00016016699999999925, 0.00015970800000000146, 0.0001601109999999975, 0.00016025000000000067, 0.0001602499999999972, 0.00015961100000000047, 0.00015976399999999974, 0.00016045799999999874, 0.00016070899999999846, 0.0001596810000000018, 0.0001606949999999989, 0.00016002700000000009, 0.0001604299999999996, 0.0001605140000000005, 0.0001591940000000014, 0.00015975000000000017, 0.00016026400000000024, 0.0001590970000000004, 0.00015976300000000027, 0.00015926399999999924, 0.00016012500000000054, 0.00015980600000000192, 0.00016026400000000024, 0.0001607910000000004, 0.00016076300000000127, 0.0001594580000000012, 0.00016084700000000215, 0.00015918099999999782, 0.0001594169999999985, 0.000160707999999999, 0.00016049999999999745]</msg>
<status status="PASS" starttime="20201112 10:14:32.744" endtime="20201112 10:14:32.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.739" endtime="20201112 10:14:32.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.749" endtime="20201112 10:14:32.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:32.752" endtime="20201112 10:14:32.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.751" endtime="20201112 10:14:32.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.747" endtime="20201112 10:14:32.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.372" endtime="20201112 10:14:32.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.371" endtime="20201112 10:14:32.773"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.782" endtime="20201112 10:14:32.804"></status>
</kw>
<msg timestamp="20201112 10:14:32.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.781" endtime="20201112 10:14:32.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.806" endtime="20201112 10:14:32.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.808" endtime="20201112 10:14:32.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.778" endtime="20201112 10:14:32.812"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.776" endtime="20201112 10:14:32.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.819" endtime="20201112 10:14:33.105"></status>
</kw>
<msg timestamp="20201112 10:14:33.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02249425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022656444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:32.817" endtime="20201112 10:14:33.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02249425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022656444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:33.109" endtime="20201112 10:14:33.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.118" endtime="20201112 10:14:33.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.815" endtime="20201112 10:14:33.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.813" endtime="20201112 10:14:33.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:33.125" level="INFO">${RESULT} = [{'time': 0.022656444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016219400000000092, 'source_diff': 0.00016219400000000092}, {'time': 0.022832431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:33.121" endtime="20201112 10:14:33.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:33.138" level="INFO">${ACCURACY} = {'time': [0.022656444, 0.022832431, 0.023006458, 0.023180486, 0.0233525, 0.023530528, 0.023710528, 0.023888569, 0.024070569, 0.024252597, 0.024432625, 0.024610639, 0.024790653, 0.024966694, 0.02514870...</msg>
<status status="PASS" starttime="20201112 10:14:33.126" endtime="20201112 10:14:33.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.143" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 10:14:33.142" endtime="20201112 10:14:33.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.146" level="INFO">VALUE: [0.00016219400000000092, 0.00016134799999999866, 0.00016177700000000184, 0.0001617780000000013, 0.00016111100000000197, 0.0001611109999999985, 0.0001620560000000007, 0.00016209699999999994, 0.00016292999999999863, 0.00016251399999999902, 0.00016193100000000057, 0.00016194500000000014, 0.0001624309999999976, 0.00016254100000000216, 0.00016226399999999877, 0.0001617780000000013, 0.0001611109999999985, 0.00016226399999999877, 0.0001617780000000013, 0.00016243100000000107, 0.0001621659999999983, 0.00016186099999999926, 0.00016232000000000052, 0.00016144499999999964, 0.00016304199999999866, 0.00016225000000000267, 0.0001617629999999988, 0.00016209699999999994, 0.00016188900000000186, 0.00016201399999999852, 0.00016108300000000284, 0.0001624170000000015, 0.00016234799999999966, 0.00016244400000000117, 0.00016183300000000012, 0.00016277799999999884, 0.00016294500000000114, 0.0001615140000000015, 0.00016259800000000338, 0.0001629439999999982, 0.00016147200000000278, 0.0001618750000000023, 0.0001615140000000015, 0.00016193100000000057, 0.00016279200000000188, 0.00016209699999999994, 0.00016209699999999994, 0.0001624300000000016, 0.00016201399999999852, 0.00016276399999999927]</msg>
<status status="PASS" starttime="20201112 10:14:33.144" endtime="20201112 10:14:33.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.139" endtime="20201112 10:14:33.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.150" endtime="20201112 10:14:33.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:33.153" endtime="20201112 10:14:33.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.152" endtime="20201112 10:14:33.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.148" endtime="20201112 10:14:33.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.774" endtime="20201112 10:14:33.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.774" endtime="20201112 10:14:33.174"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.183" endtime="20201112 10:14:33.206"></status>
</kw>
<msg timestamp="20201112 10:14:33.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.182" endtime="20201112 10:14:33.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.208" endtime="20201112 10:14:33.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.210" endtime="20201112 10:14:33.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.179" endtime="20201112 10:14:33.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.177" endtime="20201112 10:14:33.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.221" endtime="20201112 10:14:33.506"></status>
</kw>
<msg timestamp="20201112 10:14:33.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022886236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023051125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.219" endtime="20201112 10:14:33.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022886236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023051125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.510" endtime="20201112 10:14:33.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.518" endtime="20201112 10:14:33.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.216" endtime="20201112 10:14:33.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.214" endtime="20201112 10:14:33.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:33.525" level="INFO">${RESULT} = [{'time': 0.023051125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016488899999999793, 'source_diff': 0.00016488899999999793}, {'time': 0.023231111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:33.522" endtime="20201112 10:14:33.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:33.539" level="INFO">${ACCURACY} = {'time': [0.023051125, 0.023231111, 0.023407111, 0.023591139, 0.023771167, 0.023953181, 0.024135222, 0.024319236, 0.024499306, 0.024681306, 0.024861278, 0.025045306, 0.025225319, 0.025405347, 0.025583...</msg>
<status status="PASS" starttime="20201112 10:14:33.526" endtime="20201112 10:14:33.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.544" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 10:14:33.543" endtime="20201112 10:14:33.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.547" level="INFO">VALUE: [0.00016488899999999793, 0.00016345799999999827, 0.00016433300000000262, 0.00016473600000000213, 0.00016477800000000084, 0.00016343100000000207, 0.00016437500000000133, 0.00016395800000000224, 0.0001632370000000001, 0.00016440300000000047, 0.00016441700000000004, 0.0001650280000000011, 0.00016459699999999897, 0.00016476400000000127, 0.00016326399999999977, 0.0001644439999999997, 0.0001639309999999991, 0.00016337500000000033, 0.00016358300000000187, 0.000164611000000002, 0.00016313899999999965, 0.00016495899999999925, 0.0001638340000000016, 0.00016376400000000027, 0.0001645829999999994, 0.00016443000000000013, 0.00016384699999999822, 0.00016359700000000144, 0.00016437500000000133, 0.00016418099999999936, 0.00016383299999999865, 0.00016359700000000144, 0.00016451400000000102, 0.00016468099999999986, 0.00016404199999999966, 0.00016491700000000054, 0.0001640410000000002, 0.00016441600000000056, 0.0001645280000000006, 0.00016393100000000257, 0.00016422299999999806, 0.00016350000000000045, 0.0001645829999999994, 0.00016443000000000013, 0.00016487499999999836, 0.00016359699999999797, 0.0001639309999999991, 0.000165014000000005, 0.0001639309999999991, 0.00016367999999999938]</msg>
<status status="PASS" starttime="20201112 10:14:33.545" endtime="20201112 10:14:33.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.540" endtime="20201112 10:14:33.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.550" endtime="20201112 10:14:33.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:33.554" endtime="20201112 10:14:33.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.552" endtime="20201112 10:14:33.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.548" endtime="20201112 10:14:33.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.175" endtime="20201112 10:14:33.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.174" endtime="20201112 10:14:33.575"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.584" endtime="20201112 10:14:33.607"></status>
</kw>
<msg timestamp="20201112 10:14:33.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.582" endtime="20201112 10:14:33.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.609" endtime="20201112 10:14:33.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.611" endtime="20201112 10:14:33.614"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.579" endtime="20201112 10:14:33.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.577" endtime="20201112 10:14:33.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.622" endtime="20201112 10:14:33.908"></status>
</kw>
<msg timestamp="20201112 10:14:33.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02285275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023018931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:33.620" endtime="20201112 10:14:33.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02285275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023018931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:33.913" endtime="20201112 10:14:33.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.921" endtime="20201112 10:14:33.923"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.617" endtime="20201112 10:14:33.923"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.616" endtime="20201112 10:14:33.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:33.928" level="INFO">${RESULT} = [{'time': 0.023018931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016618099999999789, 'source_diff': 0.00016618099999999789}, {'time': 0.023196931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:33.925" endtime="20201112 10:14:33.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:33.942" level="INFO">${ACCURACY} = {'time': [0.023018931, 0.023196931, 0.023376944, 0.023558986, 0.023745014, 0.023921014, 0.024099042, 0.024279056, 0.024461083, 0.024639097, 0.024819111, 0.024997139, 0.025175153, 0.025353194, 0.025531...</msg>
<status status="PASS" starttime="20201112 10:14:33.929" endtime="20201112 10:14:33.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.947" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 10:14:33.945" endtime="20201112 10:14:33.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.949" level="INFO">VALUE: [0.00016618099999999789, 0.00016532000000000005, 0.00016692999999999916, 0.00016636100000000029, 0.00016679199999999894, 0.0001652500000000022, 0.00016694500000000168, 0.0001658479999999997, 0.00016559699999999997, 0.00016642999999999866, 0.00016513900000000165, 0.00016584700000000022, 0.00016541699999999757, 0.00016604099999999872, 0.00016509699999999947, 0.00016544399999999723, 0.00016666700000000229, 0.0001655700000000003, 0.00016545899999999975, 0.00016569500000000043, 0.00016616599999999884, 0.00016636100000000029, 0.0001662639999999993, 0.0001665969999999975, 0.00016645899999999728, 0.0001660280000000021, 0.00016542999999999766, 0.00016654200000000216, 0.00016609700000000047, 0.00016694500000000168, 0.00016569500000000043, 0.00016566700000000129, 0.00016666599999999934, 0.0001664860000000004, 0.00016541699999999757, 0.00016568099999999739, 0.00016566700000000129, 0.00016601399999999905, 0.00016505500000000076, 0.000166096999999997, 0.00016577800000000184, 0.00016523599999999916, 0.00016661100000000054, 0.00016659800000000044, 0.00016609700000000047, 0.0001654159999999981, 0.00016604200000000166, 0.00016588899999999546, 0.0001662090000000005, 0.00016681999999999808]</msg>
<status status="PASS" starttime="20201112 10:14:33.948" endtime="20201112 10:14:33.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.943" endtime="20201112 10:14:33.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.953" endtime="20201112 10:14:33.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:33.956" endtime="20201112 10:14:33.976"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.955" endtime="20201112 10:14:33.976"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.951" endtime="20201112 10:14:33.977"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.576" endtime="20201112 10:14:33.977"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.575" endtime="20201112 10:14:33.977"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.986" endtime="20201112 10:14:34.009"></status>
</kw>
<msg timestamp="20201112 10:14:34.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.985" endtime="20201112 10:14:34.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.011" endtime="20201112 10:14:34.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.013" endtime="20201112 10:14:34.016"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.982" endtime="20201112 10:14:34.016"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.980" endtime="20201112 10:14:34.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.024" endtime="20201112 10:14:34.310"></status>
</kw>
<msg timestamp="20201112 10:14:34.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022716625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.022" endtime="20201112 10:14:34.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022716625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.314" endtime="20201112 10:14:34.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.322" endtime="20201112 10:14:34.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.019" endtime="20201112 10:14:34.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.018" endtime="20201112 10:14:34.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:34.329" level="INFO">${RESULT} = [{'time': 0.022716625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016723600000000116, 'source_diff': 0.00016723600000000116}, {'time': 0.022900653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:34.326" endtime="20201112 10:14:34.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:34.344" level="INFO">${ACCURACY} = {'time': [0.022716625, 0.022900653, 0.023080625, 0.023260653, 0.023438667, 0.023624681, 0.023804708, 0.023988792, 0.02416675, 0.024346819, 0.024528792, 0.024708806, 0.024892847, 0.025076861, 0.0252608...</msg>
<status status="PASS" starttime="20201112 10:14:34.330" endtime="20201112 10:14:34.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.349" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 10:14:34.348" endtime="20201112 10:14:34.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.351" level="INFO">VALUE: [0.00016723600000000116, 0.00016713900000000018, 0.00016861099999999907, 0.00016827800000000087, 0.00016708400000000137, 0.0001677640000000008, 0.0001677770000000009, 0.00016815299999999728, 0.00016811100000000204, 0.00016797199999999887, 0.00016732000000000205, 0.00016819499999999946, 0.0001671250000000006, 0.00016708299999999843, 0.00016709700000000147, 0.00016715299999999975, 0.0001671120000000005, 0.0001689580000000003, 0.00016752800000000012, 0.00016890299999999803, 0.00016829200000000044, 0.00016874999999999876, 0.0001681120000000015, 0.00016843100000000014, 0.00016751400000000055, 0.00016747199999999837, 0.00016718099999999889, 0.00016718099999999889, 0.00016887500000000236, 0.00016761099999999807, 0.00016811100000000204, 0.00016794399999999973, 0.0001688749999999989, 0.00016809700000000247, 0.00016747199999999837, 0.000168403000000001, 0.0001679160000000006, 0.00016734699999999825, 0.0001682779999999974, 0.00016893100000000064, 0.00016901399999999858, 0.00016811099999999857, 0.00016793000000000016, 0.00016737500000000086, 0.00016843100000000014, 0.0001680420000000002, 0.00016793099999999964, 0.0001690269999999952, 0.00016777800000000037, 0.00016827800000000087]</msg>
<status status="PASS" starttime="20201112 10:14:34.350" endtime="20201112 10:14:34.358"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.345" endtime="20201112 10:14:34.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.362" endtime="20201112 10:14:34.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:34.365" endtime="20201112 10:14:34.385"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.364" endtime="20201112 10:14:34.385"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.360" endtime="20201112 10:14:34.386"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.978" endtime="20201112 10:14:34.386"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.978" endtime="20201112 10:14:34.386"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.395" endtime="20201112 10:14:34.418"></status>
</kw>
<msg timestamp="20201112 10:14:34.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.394" endtime="20201112 10:14:34.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.420" endtime="20201112 10:14:34.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.422" endtime="20201112 10:14:34.425"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.391" endtime="20201112 10:14:34.425"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.389" endtime="20201112 10:14:34.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.433" endtime="20201112 10:14:34.719"></status>
</kw>
<msg timestamp="20201112 10:14:34.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022684597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.431" endtime="20201112 10:14:34.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022684597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.724" endtime="20201112 10:14:34.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.732" endtime="20201112 10:14:34.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.428" endtime="20201112 10:14:34.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.427" endtime="20201112 10:14:34.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:34.739" level="INFO">${RESULT} = [{'time': 0.022684597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017098600000000144, 'source_diff': 0.00017098600000000144}, {'time': 0.022868611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:34.735" endtime="20201112 10:14:34.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:34.753" level="INFO">${ACCURACY} = {'time': [0.022684597, 0.022868611, 0.023050639, 0.023238667, 0.023418722, 0.023600736, 0.023782722, 0.023970736, 0.024156764, 0.024340778, 0.024528806, 0.024712861, 0.024894847, 0.025084875, 0.025272...</msg>
<status status="PASS" starttime="20201112 10:14:34.740" endtime="20201112 10:14:34.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.757" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 10:14:34.756" endtime="20201112 10:14:34.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.760" level="INFO">VALUE: [0.00017098600000000144, 0.00016943000000000166, 0.00017066700000000282, 0.00017083400000000165, 0.0001701389999999997, 0.00017047200000000137, 0.00016917999999999794, 0.00017016699999999885, 0.00016951399999999908, 0.00017043100000000214, 0.00016918100000000089, 0.00017005499999999882, 0.0001697640000000028, 0.000170097000000001, 0.00017011100000000057, 0.00016945900000000028, 0.000170693999999999, 0.00017002700000000315, 0.00017012500000000014, 0.00016926399999999883, 0.00016908300000000043, 0.00017007000000000133, 0.00016943000000000166, 0.00017051400000000008, 0.00016976399999999933, 0.00017076400000000033, 0.000170097000000001, 0.0001702230000000006, 0.00016961100000000007, 0.00017026399999999983, 0.0001695970000000005, 0.00016976399999999933, 0.0001694450000000007, 0.00017052799999999965, 0.00016926299999999936, 0.00017079199999999947, 0.00016979199999999847, 0.00016961100000000007, 0.00017012500000000014, 0.00017009800000000047, 0.00017094399999999926, 0.0001700559999999983, 0.00017076400000000033, 0.00017057000000000183, 0.00017098599999999797, 0.00016952699999999918, 0.00017076300000000086, 0.0001705000000000005, 0.0001695970000000005, 0.00016908300000000043]</msg>
<status status="PASS" starttime="20201112 10:14:34.758" endtime="20201112 10:14:34.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.754" endtime="20201112 10:14:34.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.764" endtime="20201112 10:14:34.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:34.767" endtime="20201112 10:14:34.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.766" endtime="20201112 10:14:34.787"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.762" endtime="20201112 10:14:34.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.387" endtime="20201112 10:14:34.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.387" endtime="20201112 10:14:34.788"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.797" endtime="20201112 10:14:34.820"></status>
</kw>
<msg timestamp="20201112 10:14:34.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.796" endtime="20201112 10:14:34.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.822" endtime="20201112 10:14:34.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.824" endtime="20201112 10:14:34.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.793" endtime="20201112 10:14:34.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.791" endtime="20201112 10:14:34.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.835" endtime="20201112 10:14:35.121"></status>
</kw>
<msg timestamp="20201112 10:14:35.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022443042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.833" endtime="20201112 10:14:35.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022443042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.125" endtime="20201112 10:14:35.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.133" endtime="20201112 10:14:35.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.830" endtime="20201112 10:14:35.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.828" endtime="20201112 10:14:35.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:35.140" level="INFO">${RESULT} = [{'time': 0.022614708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017166600000000087, 'source_diff': 0.00017166600000000087}, {'time': 0.022804736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:35.137" endtime="20201112 10:14:35.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:35.154" level="INFO">${ACCURACY} = {'time': [0.022614708, 0.022804736, 0.02299075, 0.023172792, 0.023358792, 0.023542889, 0.023732847, 0.023924889, 0.024112889, 0.024300917, 0.024488917, 0.024679, 0.024870972, 0.025062986, 0.025245028,...</msg>
<status status="PASS" starttime="20201112 10:14:35.141" endtime="20201112 10:14:35.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.159" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 10:14:35.158" endtime="20201112 10:14:35.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.161" level="INFO">VALUE: [0.00017166600000000087, 0.00017234699999999978, 0.00017175000000000176, 0.00017212500000000214, 0.00017243100000000067, 0.00017309700000000053, 0.0001727780000000019, 0.00017229200000000097, 0.00017177799999999743, 0.000172791999999998, 0.0001729309999999977, 0.000172888999999999, 0.00017294400000000126, 0.0001720139999999981, 0.0001716109999999986, 0.00017156999999999936, 0.00017248599999999947, 0.0001730139999999991, 0.00017195799999999983, 0.0001725139999999986, 0.0001726109999999996, 0.00017194499999999974, 0.0001730269999999992, 0.0001712499999999978, 0.00017190300000000103, 0.00017268100000000092, 0.00017134700000000225, 0.00017161100000000207, 0.00017243100000000067, 0.0001711939999999995, 0.00017151400000000108, 0.00017245800000000033, 0.000172582999999997, 0.00017211199999999857, 0.00017162499999999817, 0.0001726109999999996, 0.0001716109999999986, 0.00017193100000000017, 0.000172000000000002, 0.00017294500000000074, 0.000171694, 0.00017168000000000044, 0.00017267999999999797, 0.00017154200000000022, 0.00017261200000000254, 0.00017298599999999997, 0.00017181900000000014, 0.00017242999999999425, 0.00017117999999999994, 0.00017237499999999545]</msg>
<status status="PASS" starttime="20201112 10:14:35.160" endtime="20201112 10:14:35.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.155" endtime="20201112 10:14:35.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.165" endtime="20201112 10:14:35.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:35.169" endtime="20201112 10:14:35.188"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.167" endtime="20201112 10:14:35.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.163" endtime="20201112 10:14:35.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.789" endtime="20201112 10:14:35.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.788" endtime="20201112 10:14:35.190"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.199" endtime="20201112 10:14:35.222"></status>
</kw>
<msg timestamp="20201112 10:14:35.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.197" endtime="20201112 10:14:35.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.224" endtime="20201112 10:14:35.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.226" endtime="20201112 10:14:35.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.194" endtime="20201112 10:14:35.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.192" endtime="20201112 10:14:35.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.237" endtime="20201112 10:14:35.524"></status>
</kw>
<msg timestamp="20201112 10:14:35.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022507542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022681556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.235" endtime="20201112 10:14:35.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022507542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022681556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.528" endtime="20201112 10:14:35.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.536" endtime="20201112 10:14:35.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.233" endtime="20201112 10:14:35.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.231" endtime="20201112 10:14:35.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:35.543" level="INFO">${RESULT} = [{'time': 0.022681556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001740140000000001, 'source_diff': 0.0001740140000000001}, {'time': 0.022871556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:35.539" endtime="20201112 10:14:35.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:35.557" level="INFO">${ACCURACY} = {'time': [0.022681556, 0.022871556, 0.023059583, 0.023249597, 0.023443653, 0.023637639, 0.023831681, 0.024017681, 0.024201708, 0.024387722, 0.02457575, 0.024763778, 0.024951806, 0.025135833, 0.0253258...</msg>
<status status="PASS" starttime="20201112 10:14:35.544" endtime="20201112 10:14:35.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.562" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 10:14:35.560" endtime="20201112 10:14:35.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.564" level="INFO">VALUE: [0.0001740140000000001, 0.00017477800000000043, 0.0001744300000000032, 0.00017450000000000104, 0.0001747639999999974, 0.00017409699999999806, 0.00017477800000000043, 0.00017326399999999936, 0.00017427700000000046, 0.000174582999999999, 0.0001749309999999997, 0.00017434700000000178, 0.0001739309999999987, 0.00017420799999999861, 0.0001733469999999973, 0.00017362500000000017, 0.00017394500000000174, 0.00017501399999999764, 0.00017427799999999993, 0.00017493000000000022, 0.00017419399999999904, 0.0001748330000000027, 0.00017409699999999806, 0.0001739309999999987, 0.00017401399999999664, 0.0001742630000000009, 0.0001746249999999977, 0.00017493000000000022, 0.00017454200000000322, 0.00017308400000000043, 0.00017392999999999922, 0.00017334700000000078, 0.0001744439999999993, 0.0001741940000000025, 0.00017368099999999845, 0.00017319499999999752, 0.00017373599999999725, 0.00017417999999999947, 0.00017402799999999968, 0.0001732780000000024, 0.0001739309999999987, 0.00017468099999999945, 0.00017470800000000258, 0.0001733469999999973, 0.00017444400000000276, 0.0001742500000000008, 0.00017368099999999845, 0.00017334800000000372, 0.00017427700000000046, 0.00017394400000000226]</msg>
<status status="PASS" starttime="20201112 10:14:35.563" endtime="20201112 10:14:35.565"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.558" endtime="20201112 10:14:35.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.568" endtime="20201112 10:14:35.569"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:35.571" endtime="20201112 10:14:35.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.570" endtime="20201112 10:14:35.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.566" endtime="20201112 10:14:35.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.191" endtime="20201112 10:14:35.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.190" endtime="20201112 10:14:35.592"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.601" endtime="20201112 10:14:35.624"></status>
</kw>
<msg timestamp="20201112 10:14:35.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.600" endtime="20201112 10:14:35.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.626" endtime="20201112 10:14:35.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.628" endtime="20201112 10:14:35.631"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.597" endtime="20201112 10:14:35.632"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.595" endtime="20201112 10:14:35.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.639" endtime="20201112 10:14:35.925"></status>
</kw>
<msg timestamp="20201112 10:14:35.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022639389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.637" endtime="20201112 10:14:35.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022639389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.929" endtime="20201112 10:14:35.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.938" endtime="20201112 10:14:35.939"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.635" endtime="20201112 10:14:35.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.633" endtime="20201112 10:14:35.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:35.945" level="INFO">${RESULT} = [{'time': 0.022816028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017663899999999927, 'source_diff': 0.00017663899999999927}, {'time': 0.023012042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:35.941" endtime="20201112 10:14:35.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:35.960" level="INFO">${ACCURACY} = {'time': [0.022816028, 0.023012042, 0.023208069, 0.023398083, 0.023590111, 0.023784153, 0.023972167, 0.024168194, 0.024356208, 0.024550222, 0.024740236, 0.024934278, 0.025124292, 0.025316306, 0.025508...</msg>
<status status="PASS" starttime="20201112 10:14:35.946" endtime="20201112 10:14:35.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.964" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 10:14:35.963" endtime="20201112 10:14:35.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.967" level="INFO">VALUE: [0.00017663899999999927, 0.00017680600000000157, 0.0001762630000000029, 0.00017522199999999918, 0.000176583000000001, 0.00017577799999999796, 0.00017644500000000077, 0.00017637499999999945, 0.0001764440000000013, 0.00017619400000000104, 0.00017683299999999777, 0.00017627800000000193, 0.00017611099999999963, 0.00017659800000000003, 0.0001759440000000008, 0.00017652800000000218, 0.0001766249999999997, 0.00017527800000000093, 0.00017608400000000343, 0.00017509699999999906, 0.00017598600000000297, 0.0001753890000000015, 0.00017537499999999845, 0.00017682000000000114, 0.00017644500000000077, 0.00017583299999999677, 0.00017661100000000013, 0.00017559699999999956, 0.0001750829999999995, 0.00017609700000000006, 0.00017627799999999846, 0.00017593000000000122, 0.000175179999999997, 0.00017669400000000154, 0.00017583300000000024, 0.00017545899999999934, 0.0001770409999999993, 0.0001754440000000003, 0.0001758469999999998, 0.00017641700000000163, 0.00017568100000000045, 0.00017551399999999814, 0.00017661100000000013, 0.00017609700000000006, 0.00017611099999999963, 0.0001762639999999989, 0.00017643099999999773, 0.00017518099999999648, 0.0001758050000000011, 0.0001759579999999969]</msg>
<status status="PASS" starttime="20201112 10:14:35.965" endtime="20201112 10:14:35.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.961" endtime="20201112 10:14:35.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.971" endtime="20201112 10:14:35.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:35.974" endtime="20201112 10:14:35.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.973" endtime="20201112 10:14:35.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.969" endtime="20201112 10:14:35.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.593" endtime="20201112 10:14:35.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.593" endtime="20201112 10:14:35.995"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.004" endtime="20201112 10:14:36.027"></status>
</kw>
<msg timestamp="20201112 10:14:36.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.003" endtime="20201112 10:14:36.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.029" endtime="20201112 10:14:36.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.032" endtime="20201112 10:14:36.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.000" endtime="20201112 10:14:36.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.998" endtime="20201112 10:14:36.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.042" endtime="20201112 10:14:36.327"></status>
</kw>
<msg timestamp="20201112 10:14:36.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0230055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023184222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:36.040" endtime="20201112 10:14:36.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0230055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023184222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:36.332" endtime="20201112 10:14:36.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.340" endtime="20201112 10:14:36.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.038" endtime="20201112 10:14:36.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.036" endtime="20201112 10:14:36.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:36.347" level="INFO">${RESULT} = [{'time': 0.023184222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017872199999999921, 'source_diff': 0.00017872199999999921}, {'time': 0.02338025, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:14:36.343" endtime="20201112 10:14:36.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:36.361" level="INFO">${ACCURACY} = {'time': [0.023184222, 0.02338025, 0.02357425, 0.023764264, 0.023956306, 0.024150361, 0.024344347, 0.024538361, 0.024736375, 0.024932403, 0.025120431, 0.025314444, 0.025506472, 0.025704514, 0.02590056...</msg>
<status status="PASS" starttime="20201112 10:14:36.348" endtime="20201112 10:14:36.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.365" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 10:14:36.364" endtime="20201112 10:14:36.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.368" level="INFO">VALUE: [0.00017872199999999921, 0.00017745800000000186, 0.00017736100000000088, 0.0001782640000000009, 0.0001781120000000011, 0.00017865299999999737, 0.00017861099999999866, 0.00017727800000000293, 0.00017893100000000023, 0.00017801399999999717, 0.00017777799999999996, 0.00017842999999999679, 0.00017802800000000021, 0.0001789579999999999, 0.00017898599999999903, 0.0001787779999999975, 0.00017891600000000119, 0.00017787500000000095, 0.00017893000000000076, 0.00017883299999999977, 0.00017727799999999946, 0.0001777640000000004, 0.0001777770000000005, 0.00017859700000000256, 0.00017843000000000026, 0.00017736100000000088, 0.00017777799999999996, 0.00017841600000000069, 0.00017822199999999871, 0.00017802800000000021, 0.00017709700000000106, 0.00017793099999999923, 0.0001783479999999983, 0.00017794399999999932, 0.0001775409999999998, 0.0001772639999999999, 0.00017829200000000003, 0.00017727799999999946, 0.0001779449999999988, 0.0001779030000000001, 0.0001772639999999999, 0.00017794399999999932, 0.0001788470000000028, 0.00017893100000000023, 0.00017752799999999624, 0.00017727700000000346, 0.00017861100000000213, 0.00017876399999999792, 0.00017859700000000256, 0.00017811100000000163]</msg>
<status status="PASS" starttime="20201112 10:14:36.366" endtime="20201112 10:14:36.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.362" endtime="20201112 10:14:36.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.372" endtime="20201112 10:14:36.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:36.375" endtime="20201112 10:14:36.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.374" endtime="20201112 10:14:36.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.370" endtime="20201112 10:14:36.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.996" endtime="20201112 10:14:36.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.996" endtime="20201112 10:14:36.396"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.405" endtime="20201112 10:14:36.429"></status>
</kw>
<msg timestamp="20201112 10:14:36.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.404" endtime="20201112 10:14:36.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.431" endtime="20201112 10:14:36.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.433" endtime="20201112 10:14:36.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.401" endtime="20201112 10:14:36.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.399" endtime="20201112 10:14:36.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.444" endtime="20201112 10:14:36.729"></status>
</kw>
<msg timestamp="20201112 10:14:36.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022792056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:36.442" endtime="20201112 10:14:36.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022792056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:36.733" endtime="20201112 10:14:36.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.741" endtime="20201112 10:14:36.743"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.439" endtime="20201112 10:14:36.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.437" endtime="20201112 10:14:36.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:36.748" level="INFO">${RESULT} = [{'time': 0.022792056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017950000000000257, 'source_diff': 0.00017950000000000257}, {'time': 0.022988111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:36.745" endtime="20201112 10:14:36.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:36.762" level="INFO">${ACCURACY} = {'time': [0.022792056, 0.022988111, 0.023182111, 0.023374194, 0.023570153, 0.023760167, 0.023954208, 0.024146222, 0.024336236, 0.024534319, 0.024734278, 0.024932306, 0.025128319, 0.025326347, 0.025518...</msg>
<status status="PASS" starttime="20201112 10:14:36.749" endtime="20201112 10:14:36.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.767" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 10:14:36.766" endtime="20201112 10:14:36.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.769" level="INFO">VALUE: [0.00017950000000000257, 0.0001801389999999993, 0.00018092999999999929, 0.00018058300000000152, 0.00017976399999999892, 0.00017919500000000005, 0.00018011100000000016, 0.00017961099999999966, 0.0001804580000000014, 0.00017916599999999797, 0.00018093099999999876, 0.00017968100000000098, 0.00017984700000000034, 0.00018024999999999985, 0.00018094499999999833, 0.00018002799999999874, 0.00018009800000000006, 0.00018092999999999929, 0.00018001400000000264, 0.00018092999999999929, 0.00018037499999999998, 0.00018026399999999942, 0.00017976399999999892, 0.0001795970000000001, 0.00017977800000000196, 0.00017977800000000196, 0.00017911099999999916, 0.00017943100000000073, 0.00017936100000000288, 0.00018061100000000066, 0.0001797640000000024, 0.00018043100000000173, 0.00017918100000000048, 0.00018034800000000031, 0.00017911099999999916, 0.00017943000000000126, 0.00017987499999999948, 0.00018058300000000152, 0.00017904200000000078, 0.0001807909999999996, 0.00017976299999999945, 0.0001794580000000004, 0.0001796670000000014, 0.00018052799999999924, 0.00017959799999999956, 0.00018009800000000353, 0.0001796109999999962, 0.0001801109999999967, 0.00018043100000000173, 0.00018036100000000388]</msg>
<status status="PASS" starttime="20201112 10:14:36.768" endtime="20201112 10:14:36.770"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.763" endtime="20201112 10:14:36.771"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.773" endtime="20201112 10:14:36.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:36.777" endtime="20201112 10:14:36.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.775" endtime="20201112 10:14:36.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.771" endtime="20201112 10:14:36.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.397" endtime="20201112 10:14:36.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.396" endtime="20201112 10:14:36.797"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.806" endtime="20201112 10:14:36.830"></status>
</kw>
<msg timestamp="20201112 10:14:36.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.805" endtime="20201112 10:14:36.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.832" endtime="20201112 10:14:36.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.834" endtime="20201112 10:14:36.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.802" endtime="20201112 10:14:36.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.800" endtime="20201112 10:14:36.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.844" endtime="20201112 10:14:37.130"></status>
</kw>
<msg timestamp="20201112 10:14:37.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022797958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:36.843" endtime="20201112 10:14:37.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022797958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.135" endtime="20201112 10:14:37.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.143" endtime="20201112 10:14:37.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.840" endtime="20201112 10:14:37.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.838" endtime="20201112 10:14:37.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:37.150" level="INFO">${RESULT} = [{'time': 0.022797958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018298599999999957, 'source_diff': 0.00018298599999999957}, {'time': 0.022991972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:37.146" endtime="20201112 10:14:37.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:37.163" level="INFO">${ACCURACY} = {'time': [0.022797958, 0.022991972, 0.023186014, 0.023386014, 0.023588056, 0.023790069, 0.023986097, 0.024182111, 0.024380125, 0.024574153, 0.024772208, 0.024970264, 0.025168222, 0.02536025, 0.0255542...</msg>
<status status="PASS" starttime="20201112 10:14:37.151" endtime="20201112 10:14:37.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.168" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 10:14:37.167" endtime="20201112 10:14:37.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.171" level="INFO">VALUE: [0.00018298599999999957, 0.00018208299999999955, 0.00018111100000000116, 0.00018259699999999962, 0.0001825979999999991, 0.00018294400000000086, 0.00018168000000000004, 0.00018202800000000074, 0.00018259699999999962, 0.0001820840000000025, 0.00018212500000000173, 0.00018166699999999994, 0.00018293000000000129, 0.00018147200000000197, 0.00018277799999999803, 0.00018293100000000076, 0.0001827910000000016, 0.00018193000000000029, 0.0001816939999999996, 0.00018215300000000087, 0.00018254200000000081, 0.00018209800000000206, 0.00018176299999999798, 0.00018144399999999936, 0.00018263899999999833, 0.00018166699999999994, 0.00018186099999999844, 0.00018265300000000137, 0.00018106899999999898, 0.0001815970000000021, 0.00018276399999999846, 0.0001815979999999981, 0.0001820979999999986, 0.00018127700000000052, 0.000182972, 0.00018304200000000131, 0.00018290300000000162, 0.0001820000000000016, 0.00018209800000000206, 0.00018127699999999705, 0.00018244400000000036, 0.0001826940000000006, 0.00018169500000000255, 0.00018269500000000008, 0.00018286099999999944, 0.0001816109999999982, 0.00018209699999999912, 0.00018259699999999962, 0.00018213899999999783, 0.00018227699999999458]</msg>
<status status="PASS" starttime="20201112 10:14:37.169" endtime="20201112 10:14:37.172"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.164" endtime="20201112 10:14:37.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.174" endtime="20201112 10:14:37.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:37.178" endtime="20201112 10:14:37.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.176" endtime="20201112 10:14:37.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.173" endtime="20201112 10:14:37.199"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.798" endtime="20201112 10:14:37.199"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.798" endtime="20201112 10:14:37.199"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.208" endtime="20201112 10:14:37.232"></status>
</kw>
<msg timestamp="20201112 10:14:37.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.206" endtime="20201112 10:14:37.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.233" endtime="20201112 10:14:37.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.236" endtime="20201112 10:14:37.239"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.204" endtime="20201112 10:14:37.239"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.202" endtime="20201112 10:14:37.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.246" endtime="20201112 10:14:37.533"></status>
</kw>
<msg timestamp="20201112 10:14:37.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022697653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.245" endtime="20201112 10:14:37.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022697653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.537" endtime="20201112 10:14:37.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.545" endtime="20201112 10:14:37.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.242" endtime="20201112 10:14:37.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.240" endtime="20201112 10:14:37.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:37.552" level="INFO">${RESULT} = [{'time': 0.022697653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018366700000000194, 'source_diff': 0.00018366700000000194}, {'time': 0.022891667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:37.549" endtime="20201112 10:14:37.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:37.613" level="INFO">${ACCURACY} = {'time': [0.022697653, 0.022891667, 0.02308775, 0.023285708, 0.023487736, 0.023689764, 0.023889792, 0.024091819, 0.024285847, 0.024479847, 0.024673889, 0.024877903, 0.025079917, 0.025281944, 0.0254759...</msg>
<status status="PASS" starttime="20201112 10:14:37.553" endtime="20201112 10:14:37.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.618" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 10:14:37.617" endtime="20201112 10:14:37.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.621" level="INFO">VALUE: [0.00018366700000000194, 0.00018347299999999997, 0.000183278000000002, 0.00018309700000000012, 0.00018492999999999982, 0.00018381999999999774, 0.00018494499999999886, 0.00018334700000000037, 0.00018376399999999946, 0.00018358299999999758, 0.00018329200000000156, 0.0001849309999999993, 0.0001836810000000015, 0.00018368000000000204, 0.00018384700000000087, 0.00018477800000000003, 0.0001844309999999988, 0.00018447300000000097, 0.00018459799999999763, 0.00018426399999999996, 0.0001840689999999985, 0.0001846110000000012, 0.00018444499999999836, 0.0001840139999999997, 0.00018444400000000236, 0.00018334700000000037, 0.00018324999999999939, 0.00018379200000000206, 0.00018426399999999996, 0.00018393100000000176, 0.00018431899999999876, 0.00018440299999999965, 0.00018404199999999885, 0.00018376399999999946, 0.00018344500000000083, 0.00018419399999999864, 0.0001840139999999997, 0.00018426399999999996, 0.0001844729999999975, 0.00018422199999999778, 0.0001850140000000007, 0.0001846110000000012, 0.00018376399999999946, 0.00018459700000000162, 0.00018454200000000281, 0.00018408400000000102, 0.0001831109999999997, 0.00018379200000000206, 0.00018424999999999692, 0.0001841110000000007]</msg>
<status status="PASS" starttime="20201112 10:14:37.619" endtime="20201112 10:14:37.621"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.614" endtime="20201112 10:14:37.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.624" endtime="20201112 10:14:37.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:37.628" endtime="20201112 10:14:37.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.627" endtime="20201112 10:14:37.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.623" endtime="20201112 10:14:37.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.200" endtime="20201112 10:14:37.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.199" endtime="20201112 10:14:37.649"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.658" endtime="20201112 10:14:37.682"></status>
</kw>
<msg timestamp="20201112 10:14:37.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.657" endtime="20201112 10:14:37.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.684" endtime="20201112 10:14:37.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.686" endtime="20201112 10:14:37.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.654" endtime="20201112 10:14:37.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.652" endtime="20201112 10:14:37.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.696" endtime="20201112 10:14:37.982"></status>
</kw>
<msg timestamp="20201112 10:14:37.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022477958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022664722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.694" endtime="20201112 10:14:37.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022477958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022664722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.986" endtime="20201112 10:14:37.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.995" endtime="20201112 10:14:37.996"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.691" endtime="20201112 10:14:37.997"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.690" endtime="20201112 10:14:37.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:38.002" level="INFO">${RESULT} = [{'time': 0.022664722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018676400000000246, 'source_diff': 0.00018676400000000246}, {'time': 0.02286475, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:14:37.998" endtime="20201112 10:14:38.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:38.016" level="INFO">${ACCURACY} = {'time': [0.022664722, 0.02286475, 0.023068778, 0.023264792, 0.023470819, 0.023666833, 0.023868861, 0.024064903, 0.024262903, 0.024460944, 0.024660958, 0.024862986, 0.025059, 0.025259014, 0.025463056,...</msg>
<status status="PASS" starttime="20201112 10:14:38.003" endtime="20201112 10:14:38.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.021" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 10:14:38.019" endtime="20201112 10:14:38.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.023" level="INFO">VALUE: [0.00018676400000000246, 0.00018661099999999972, 0.0001869310000000013, 0.0001858339999999993, 0.0001867629999999995, 0.00018559700000000262, 0.00018509700000000212, 0.00018579199999999713, 0.00018509699999999865, 0.00018577699999999808, 0.00018561099999999872, 0.00018659700000000015, 0.00018577800000000103, 0.00018509699999999865, 0.00018511200000000116, 0.00018629100000000162, 0.00018626400000000196, 0.00018690300000000215, 0.00018640300000000165, 0.00018645899999999993, 0.00018529100000000062, 0.00018627699999999858, 0.0001861249999999988, 0.00018576400000000146, 0.00018644500000000036, 0.0001855409999999974, 0.00018673599999999985, 0.00018627800000000153, 0.00018642999999999785, 0.00018668099999999757, 0.00018536099999999847, 0.00018674999999999942, 0.00018576400000000146, 0.0001856110000000022, 0.0001851249999999978, 0.00018570900000000265, 0.0001861119999999987, 0.00018626300000000248, 0.00018509699999999865, 0.0001854439999999999, 0.00018626400000000196, 0.00018552800000000078, 0.00018579100000000112, 0.00018676399999999899, 0.0001866110000000032, 0.00018609700000000312, 0.00018659699999999668, 0.0001869860000000001, 0.00018552699999999783, 0.0001862080000000002]</msg>
<status status="PASS" starttime="20201112 10:14:38.022" endtime="20201112 10:14:38.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.017" endtime="20201112 10:14:38.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.027" endtime="20201112 10:14:38.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:38.030" endtime="20201112 10:14:38.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.029" endtime="20201112 10:14:38.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.025" endtime="20201112 10:14:38.051"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.650" endtime="20201112 10:14:38.051"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.650" endtime="20201112 10:14:38.051"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.060" endtime="20201112 10:14:38.086"></status>
</kw>
<msg timestamp="20201112 10:14:38.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.059" endtime="20201112 10:14:38.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.087" endtime="20201112 10:14:38.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.090" endtime="20201112 10:14:38.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.056" endtime="20201112 10:14:38.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.054" endtime="20201112 10:14:38.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.099" endtime="20201112 10:14:38.386"></status>
</kw>
<msg timestamp="20201112 10:14:38.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022647694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.098" endtime="20201112 10:14:38.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022647694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.390" endtime="20201112 10:14:38.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.398" endtime="20201112 10:14:38.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.095" endtime="20201112 10:14:38.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.093" endtime="20201112 10:14:38.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:38.406" level="INFO">${RESULT} = [{'time': 0.022647694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018816600000000003, 'source_diff': 0.00018816600000000003}, {'time': 0.022849722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:38.403" endtime="20201112 10:14:38.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:38.419" level="INFO">${ACCURACY} = {'time': [0.022647694, 0.022849722, 0.02304775, 0.023247764, 0.023455806, 0.023653806, 0.023855833, 0.024055861, 0.024259917, 0.024461917, 0.024667931, 0.024873972, 0.025077972, 0.025286, 0.025484028,...</msg>
<status status="PASS" starttime="20201112 10:14:38.407" endtime="20201112 10:14:38.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.424" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 10:14:38.423" endtime="20201112 10:14:38.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.427" level="INFO">VALUE: [0.00018816600000000003, 0.00018736100000000047, 0.00018709699999999718, 0.00018726399999999949, 0.00018862499999999782, 0.00018759800000000063, 0.00018859699999999868, 0.00018894399999999992, 0.0001883890000000006, 0.00018777799999999956, 0.00018856999999999902, 0.0001871249999999998, 0.00018791599999999978, 0.00018786100000000097, 0.00018726399999999949, 0.00018794500000000186, 0.0001871799999999986, 0.00018901400000000124, 0.00018811100000000122, 0.00018857000000000249, 0.00018859800000000163, 0.000187764, 0.00018777799999999956, 0.00018709700000000065, 0.00018759700000000115, 0.00018729199999999863, 0.0001871119999999997, 0.00018844399999999942, 0.00018904200000000038, 0.00018726399999999949, 0.0001877920000000026, 0.0001874310000000018, 0.00018833299999999886, 0.00018841600000000028, 0.00018751399999999974, 0.00018781900000000226, 0.0001889449999999994, 0.00018801400000000024, 0.00018894399999999992, 0.00018766599999999953, 0.00018718100000000154, 0.00018869499999999914, 0.00018768099999999857, 0.00018802700000000033, 0.0001880829999999986, 0.000187764, 0.0001885829999999991, 0.0001889310000000033, 0.00018836199999999748, 0.00018777700000000008]</msg>
<status status="PASS" starttime="20201112 10:14:38.425" endtime="20201112 10:14:38.427"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.420" endtime="20201112 10:14:38.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.430" endtime="20201112 10:14:38.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:38.434" endtime="20201112 10:14:38.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.432" endtime="20201112 10:14:38.454"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.429" endtime="20201112 10:14:38.454"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.052" endtime="20201112 10:14:38.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.052" endtime="20201112 10:14:38.455"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.464" endtime="20201112 10:14:38.488"></status>
</kw>
<msg timestamp="20201112 10:14:38.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.462" endtime="20201112 10:14:38.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.490" endtime="20201112 10:14:38.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.493" endtime="20201112 10:14:38.494"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.460" endtime="20201112 10:14:38.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.457" endtime="20201112 10:14:38.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.502" endtime="20201112 10:14:38.788"></status>
</kw>
<msg timestamp="20201112 10:14:38.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022556597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022746833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.500" endtime="20201112 10:14:38.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022556597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022746833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.793" endtime="20201112 10:14:38.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.801" endtime="20201112 10:14:38.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.498" endtime="20201112 10:14:38.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.496" endtime="20201112 10:14:38.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:38.808" level="INFO">${RESULT} = [{'time': 0.022746833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00019023599999999988, 'source_diff': 0.00019023599999999988}, {'time': 0.022950792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:38.804" endtime="20201112 10:14:38.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:38.822" level="INFO">${ACCURACY} = {'time': [0.022746833, 0.022950792, 0.023150806, 0.023352833, 0.023554861, 0.023760875, 0.023964931, 0.024174944, 0.024380972, 0.024588972, 0.024797042, 0.025001042, 0.025201056, 0.025411069, 0.025615...</msg>
<status status="PASS" starttime="20201112 10:14:38.809" endtime="20201112 10:14:38.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.826" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 10:14:38.825" endtime="20201112 10:14:38.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.829" level="INFO">VALUE: [0.00019023599999999988, 0.00019001400000000224, 0.0001900419999999979, 0.0001899159999999983, 0.000189360999999999, 0.00019091700000000225, 0.0001897089999999997, 0.00019104099999999943, 0.00019011099999999975, 0.00018959699999999968, 0.00019097299999999706, 0.0001910280000000028, 0.00019011199999999923, 0.00019061100000000025, 0.00018927800000000106, 0.00018943000000000085, 0.0001907229999999968, 0.0001897089999999997, 0.00018983399999999984, 0.00019093000000000235, 0.00018986100000000297, 0.00018920799999999974, 0.00018988899999999864, 0.00019102699999999986, 0.00018994400000000092, 0.00018936100000000247, 0.00018943100000000032, 0.0001893470000000029, 0.0001897779999999981, 0.00018929099999999768, 0.0001905969999999972, 0.00018974999999999895, 0.0001900830000000006, 0.00018923600000000235, 0.00018959699999999968, 0.00018926399999999802, 0.00019011099999999975, 0.00019025000000000292, 0.00019079199999999866, 0.0001909450000000014, 0.00019051399999999927, 0.00019009700000000018, 0.0001893060000000002, 0.0001899310000000043, 0.00019037499999999957, 0.00019041600000000575, 0.00019016599999999856, 0.0001905280000000023, 0.00018961099999999925, 0.00019072200000000428]</msg>
<status status="PASS" starttime="20201112 10:14:38.827" endtime="20201112 10:14:38.830"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.823" endtime="20201112 10:14:38.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.833" endtime="20201112 10:14:38.834"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:38.836" endtime="20201112 10:14:38.856"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.835" endtime="20201112 10:14:38.856"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.831" endtime="20201112 10:14:38.857"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.456" endtime="20201112 10:14:38.857"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.455" endtime="20201112 10:14:38.857"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.866" endtime="20201112 10:14:38.891"></status>
</kw>
<msg timestamp="20201112 10:14:38.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.864" endtime="20201112 10:14:38.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.893" endtime="20201112 10:14:38.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.895" endtime="20201112 10:14:38.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.862" endtime="20201112 10:14:38.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.860" endtime="20201112 10:14:38.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.905" endtime="20201112 10:14:39.192"></status>
</kw>
<msg timestamp="20201112 10:14:39.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022764083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.903" endtime="20201112 10:14:39.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022764083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.196" endtime="20201112 10:14:39.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.205" endtime="20201112 10:14:39.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.900" endtime="20201112 10:14:39.207"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.899" endtime="20201112 10:14:39.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:39.211" level="INFO">${RESULT} = [{'time': 0.022764083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001915000000000007, 'source_diff': 0.0001915000000000007}, {'time': 0.022972111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:39.208" endtime="20201112 10:14:39.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:39.226" level="INFO">${ACCURACY} = {'time': [0.022764083, 0.022972111, 0.023182125, 0.023390167, 0.023600181, 0.023810194, 0.024020222, 0.024222319, 0.024428278, 0.024632306, 0.024836319, 0.025046361, 0.025252361, 0.025462403, 0.025668...</msg>
<status status="PASS" starttime="20201112 10:14:39.212" endtime="20201112 10:14:39.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.231" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 10:14:39.230" endtime="20201112 10:14:39.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.234" level="INFO">VALUE: [0.0001915000000000007, 0.0001922780000000006, 0.00019258299999999964, 0.0001929589999999995, 0.00019136200000000048, 0.0001928749999999986, 0.00019234700000000243, 0.0001925269999999979, 0.00019191699999999978, 0.00019116699999999903, 0.00019186099999999803, 0.00019129199999999916, 0.0001925969999999992, 0.00019212500000000132, 0.0001912779999999996, 0.00019107000000000152, 0.00019127700000000011, 0.0001918480000000014, 0.0001914450000000019, 0.00019184700000000193, 0.00019294499999999992, 0.00019152700000000036, 0.00019192999999999988, 0.0001926940000000002, 0.0001915000000000007, 0.00019208400000000209, 0.00019129099999999968, 0.00019243000000000038, 0.0001918610000000015, 0.00019143100000000232, 0.00019201400000000077, 0.00019176300000000104, 0.0001929299999999974, 0.00019268000000000063, 0.00019125000000000045, 0.00019282000000000327, 0.00019209800000000166, 0.00019294400000000045, 0.00019201400000000077, 0.00019229200000000016, 0.00019244499999999942, 0.00019120799999999827, 0.0001928610000000025, 0.00019142999999999938, 0.0001913469999999945, 0.00019161100000000125, 0.00019294499999999992, 0.00019283299999999642, 0.00019109700000000118, 0.00019243099999999985]</msg>
<status status="PASS" starttime="20201112 10:14:39.232" endtime="20201112 10:14:39.234"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.227" endtime="20201112 10:14:39.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.237" endtime="20201112 10:14:39.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:39.241" endtime="20201112 10:14:39.260"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.239" endtime="20201112 10:14:39.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.236" endtime="20201112 10:14:39.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.858" endtime="20201112 10:14:39.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.857" endtime="20201112 10:14:39.262"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.271" endtime="20201112 10:14:39.296"></status>
</kw>
<msg timestamp="20201112 10:14:39.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.269" endtime="20201112 10:14:39.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.297" endtime="20201112 10:14:39.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.300" endtime="20201112 10:14:39.302"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.267" endtime="20201112 10:14:39.302"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.264" endtime="20201112 10:14:39.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.309" endtime="20201112 10:14:39.597"></status>
</kw>
<msg timestamp="20201112 10:14:39.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022674903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.308" endtime="20201112 10:14:39.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022674903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.601" endtime="20201112 10:14:39.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.609" endtime="20201112 10:14:39.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.305" endtime="20201112 10:14:39.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.303" endtime="20201112 10:14:39.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:39.616" level="INFO">${RESULT} = [{'time': 0.022674903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001935139999999988, 'source_diff': 0.0001935139999999988}, {'time': 0.022886917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:39.613" endtime="20201112 10:14:39.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:39.630" level="INFO">${ACCURACY} = {'time': [0.022674903, 0.022886917, 0.023094944, 0.023302958, 0.023509, 0.023713014, 0.023925042, 0.024129056, 0.024339083, 0.024549125, 0.024753125, 0.024965208, 0.025169181, 0.025381222, 0.025591222...</msg>
<status status="PASS" starttime="20201112 10:14:39.617" endtime="20201112 10:14:39.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.634" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 10:14:39.633" endtime="20201112 10:14:39.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.637" level="INFO">VALUE: [0.0001935139999999988, 0.00019341700000000128, 0.00019369399999999773, 0.00019467999999999916, 0.000194846999999998, 0.0001932780000000016, 0.00019443100000000185, 0.00019313899999999842, 0.0001940269999999994, 0.00019429200000000216, 0.0001930969999999997, 0.00019379099999999871, 0.00019327799999999812, 0.00019327799999999812, 0.00019358300000000064, 0.00019411100000000028, 0.00019461100000000078, 0.00019456999999999808, 0.00019486099999999756, 0.0001931940000000007, 0.0001948750000000006, 0.00019494500000000192, 0.00019333399999999987, 0.00019344400000000095, 0.0001940139999999993, 0.00019443100000000185, 0.00019320899999999974, 0.00019436100000000053, 0.00019444400000000195, 0.00019402799999999887, 0.0001947919999999992, 0.0001932780000000016, 0.00019376399999999905, 0.00019445799999999805, 0.00019419399999999823, 0.000193846999999997, 0.00019344500000000042, 0.0001945139999999998, 0.00019477799999999962, 0.00019349999999999923, 0.00019488900000000017, 0.00019427799999999912, 0.00019444500000000142, 0.0001946799999999957, 0.00019401299999999982, 0.00019472200000000134, 0.00019443000000000238, 0.00019419500000000117, 0.00019352799999999837, 0.00019479099999999971]</msg>
<status status="PASS" starttime="20201112 10:14:39.636" endtime="20201112 10:14:39.646"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.631" endtime="20201112 10:14:39.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.649" endtime="20201112 10:14:39.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:39.653" endtime="20201112 10:14:39.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.652" endtime="20201112 10:14:39.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.648" endtime="20201112 10:14:39.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.263" endtime="20201112 10:14:39.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.262" endtime="20201112 10:14:39.674"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.683" endtime="20201112 10:14:39.708"></status>
</kw>
<msg timestamp="20201112 10:14:39.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.681" endtime="20201112 10:14:39.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.710" endtime="20201112 10:14:39.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.712" endtime="20201112 10:14:39.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.679" endtime="20201112 10:14:39.714"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.677" endtime="20201112 10:14:39.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.722" endtime="20201112 10:14:40.009"></status>
</kw>
<msg timestamp="20201112 10:14:40.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022455681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022652181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.720" endtime="20201112 10:14:40.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022455681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022652181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.013" endtime="20201112 10:14:40.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.021" endtime="20201112 10:14:40.023"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.717" endtime="20201112 10:14:40.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.715" endtime="20201112 10:14:40.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:40.028" level="INFO">${RESULT} = [{'time': 0.022652181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00019649999999999876, 'source_diff': 0.00019649999999999876}, {'time': 0.022862208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:40.025" endtime="20201112 10:14:40.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:40.042" level="INFO">${ACCURACY} = {'time': [0.022652181, 0.022862208, 0.023078236, 0.023288264, 0.023500292, 0.023716319, 0.023922333, 0.024128347, 0.024342389, 0.024556403, 0.024764444, 0.024978444, 0.025190472, 0.0253965, 0.02560452...</msg>
<status status="PASS" starttime="20201112 10:14:40.029" endtime="20201112 10:14:40.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.047" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 10:14:40.045" endtime="20201112 10:14:40.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.049" level="INFO">VALUE: [0.00019649999999999876, 0.0001962499999999985, 0.00019611099999999881, 0.00019559699999999874, 0.00019576399999999758, 0.00019659699999999974, 0.00019627700000000164, 0.0001954299999999999, 0.0001956949999999992, 0.00019602800000000087, 0.00019529100000000021, 0.0001954299999999999, 0.00019533299999999892, 0.00019527800000000012, 0.00019644499999999995, 0.00019634799999999897, 0.00019626300000000207, 0.00019534800000000144, 0.00019679199999999772, 0.00019627800000000112, 0.00019593099999999988, 0.00019522199999999837, 0.00019602800000000087, 0.00019559699999999874, 0.0001954169999999998, 0.00019586100000000203, 0.00019561100000000178, 0.00019581999999999933, 0.0001965690000000006, 0.00019626400000000155, 0.00019693100000000088, 0.00019699999999999926, 0.00019661099999999931, 0.00019611099999999881, 0.000196153000000001, 0.00019695900000000002, 0.00019568099999999963, 0.0001951660000000001, 0.000196847, 0.00019611099999999881, 0.00019580599999999976, 0.00019576400000000105, 0.00019509699999999824, 0.00019511099999999781, 0.00019558299999999917, 0.00019591700000000378, 0.00019668099999999716, 0.0001965270000000019, 0.00019594400000000345, 0.00019536099999999806]</msg>
<status status="PASS" starttime="20201112 10:14:40.048" endtime="20201112 10:14:40.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.043" endtime="20201112 10:14:40.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.053" endtime="20201112 10:14:40.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:40.056" endtime="20201112 10:14:40.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.055" endtime="20201112 10:14:40.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.051" endtime="20201112 10:14:40.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.675" endtime="20201112 10:14:40.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.674" endtime="20201112 10:14:40.077"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.086" endtime="20201112 10:14:40.111"></status>
</kw>
<msg timestamp="20201112 10:14:40.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.085" endtime="20201112 10:14:40.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.112" endtime="20201112 10:14:40.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.115" endtime="20201112 10:14:40.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.082" endtime="20201112 10:14:40.117"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.080" endtime="20201112 10:14:40.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.124" endtime="20201112 10:14:40.411"></status>
</kw>
<msg timestamp="20201112 10:14:40.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022739444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.123" endtime="20201112 10:14:40.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022739444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.416" endtime="20201112 10:14:40.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.424" endtime="20201112 10:14:40.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.120" endtime="20201112 10:14:40.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.118" endtime="20201112 10:14:40.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:40.431" level="INFO">${RESULT} = [{'time': 0.022739444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00019866600000000012, 'source_diff': 0.00019866600000000012}, {'time': 0.022955528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:40.427" endtime="20201112 10:14:40.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:40.445" level="INFO">${ACCURACY} = {'time': [0.022739444, 0.022955528, 0.023169486, 0.023377542, 0.023589542, 0.023799569, 0.024009583, 0.024223639, 0.024439639, 0.024647667, 0.024855681, 0.025065708, 0.025279736, 0.02548975, 0.0256977...</msg>
<status status="PASS" starttime="20201112 10:14:40.432" endtime="20201112 10:14:40.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.449" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 10:14:40.448" endtime="20201112 10:14:40.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.452" level="INFO">VALUE: [0.00019866600000000012, 0.00019891699999999984, 0.00019759700000000074, 0.0001984860000000012, 0.00019743100000000138, 0.00019884699999999852, 0.00019842999999999944, 0.00019772200000000087, 0.00019884699999999852, 0.00019708400000000015, 0.00019826400000000008, 0.000197443999999998, 0.00019819400000000223, 0.0001989999999999978, 0.00019726400000000255, 0.00019813899999999995, 0.000197443999999998, 0.00019851400000000033, 0.00019794500000000145, 0.00019720900000000027, 0.0001985279999999999, 0.00019727700000000264, 0.00019759700000000074, 0.00019759700000000074, 0.00019895899999999855, 0.0001985279999999999, 0.00019859700000000174, 0.00019712499999999938, 0.000198443999999999, 0.00019869499999999873, 0.00019768099999999816, 0.00019769400000000173, 0.00019801399999999983, 0.00019891699999999984, 0.00019884699999999852, 0.00019812500000000038, 0.0001989159999999969, 0.00019887500000000113, 0.00019769400000000173, 0.00019809700000000124, 0.00019809800000000072, 0.00019744400000000495, 0.00019834699999999456, 0.0001982920000000027, 0.00019794499999999798, 0.00019711099999999981, 0.0001982219999999979, 0.00019886100000000156, 0.00019811100000000081, 0.00019726400000000255]</msg>
<status status="PASS" starttime="20201112 10:14:40.450" endtime="20201112 10:14:40.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.446" endtime="20201112 10:14:40.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.456" endtime="20201112 10:14:40.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:40.459" endtime="20201112 10:14:40.478"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.457" endtime="20201112 10:14:40.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.454" endtime="20201112 10:14:40.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.078" endtime="20201112 10:14:40.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.078" endtime="20201112 10:14:40.480"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.489" endtime="20201112 10:14:40.514"></status>
</kw>
<msg timestamp="20201112 10:14:40.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.487" endtime="20201112 10:14:40.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.515" endtime="20201112 10:14:40.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.518" endtime="20201112 10:14:40.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.485" endtime="20201112 10:14:40.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.483" endtime="20201112 10:14:40.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.527" endtime="20201112 10:14:40.814"></status>
</kw>
<msg timestamp="20201112 10:14:40.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022658389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.526" endtime="20201112 10:14:40.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022658389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.818" endtime="20201112 10:14:40.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.827" endtime="20201112 10:14:40.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.523" endtime="20201112 10:14:40.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.521" endtime="20201112 10:14:40.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:40.834" level="INFO">${RESULT} = [{'time': 0.022658389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020001400000000183, 'source_diff': 0.00020001400000000183}, {'time': 0.022868403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:40.830" endtime="20201112 10:14:40.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:40.849" level="INFO">${ACCURACY} = {'time': [0.022658389, 0.022868403, 0.023086431, 0.023306444, 0.023522486, 0.023734486, 0.023948528, 0.024158542, 0.024370569, 0.024586597, 0.024800667, 0.025016639, 0.025236667, 0.025450708, 0.025670...</msg>
<status status="PASS" starttime="20201112 10:14:40.835" endtime="20201112 10:14:40.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.853" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 10:14:40.852" endtime="20201112 10:14:40.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.856" level="INFO">VALUE: [0.00020001400000000183, 0.00020047200000000015, 0.00020061199999999932, 0.00020092999999999847, 0.00019970799999999983, 0.00020001399999999836, 0.00019961099999999884, 0.00020027800000000165, 0.000200444000000001, 0.00020069400000000126, 0.00020023599999999947, 0.00020018100000000066, 0.00020032000000000036, 0.00019912499999999791, 0.00020077799999999868, 0.0001995829999999997, 0.0002005830000000007, 0.00019965200000000155, 0.00019962499999999841, 0.000199541000000001, 0.00020009699999999978, 0.00020062499999999941, 0.00019962499999999841, 0.00020011099999999934, 0.00019913900000000095, 0.00020059700000000028, 0.00020011099999999934, 0.00019976400000000158, 0.00019959799999999875, 0.00019992999999999747, 0.0001991800000000002, 0.00020004200000000097, 0.00019943099999999991, 0.00020034700000000003, 0.00020092999999999847, 0.00019936100000000206, 0.00020043100000000091, 0.00019943000000000044, 0.00020030499999999785, 0.00020061099999999985, 0.00020061099999999985, 0.00019940300000000077, 0.00019951399999999786, 0.000200541999999998, 0.00019926299999999814, 0.000199444, 0.00019983299999999649, 0.00020011100000000281, 0.00020054099999999853, 0.00020093000000000194]</msg>
<status status="PASS" starttime="20201112 10:14:40.855" endtime="20201112 10:14:40.857"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.850" endtime="20201112 10:14:40.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.860" endtime="20201112 10:14:40.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:40.863" endtime="20201112 10:14:40.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.862" endtime="20201112 10:14:40.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.858" endtime="20201112 10:14:40.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.481" endtime="20201112 10:14:40.887"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.480" endtime="20201112 10:14:40.887"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.896" endtime="20201112 10:14:40.921"></status>
</kw>
<msg timestamp="20201112 10:14:40.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.894" endtime="20201112 10:14:40.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.922" endtime="20201112 10:14:40.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.925" endtime="20201112 10:14:40.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.892" endtime="20201112 10:14:40.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.889" endtime="20201112 10:14:40.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.934" endtime="20201112 10:14:41.222"></status>
</kw>
<msg timestamp="20201112 10:14:41.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025042583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025244917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.933" endtime="20201112 10:14:41.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025042583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025244917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.226" endtime="20201112 10:14:41.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.234" endtime="20201112 10:14:41.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.930" endtime="20201112 10:14:41.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.928" endtime="20201112 10:14:41.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:41.241" level="INFO">${RESULT} = [{'time': 0.025244917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020233399999999846, 'source_diff': 0.00020233399999999846}, {'time': 0.025464944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:41.237" endtime="20201112 10:14:41.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:41.254" level="INFO">${ACCURACY} = {'time': [0.025244917, 0.025464944, 0.025680958, 0.025894986, 0.026109014, 0.026321042, 0.026539056, 0.026755125, 0.026967111, 0.027185139, 0.027401181, 0.027617181, 0.027833264, 0.02804925, 0.0282632...</msg>
<status status="PASS" starttime="20201112 10:14:41.242" endtime="20201112 10:14:41.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.258" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 10:14:41.257" endtime="20201112 10:14:41.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.261" level="INFO">VALUE: [0.00020233399999999846, 0.00020244399999999954, 0.00020184700000000153, 0.00020108299999999774, 0.00020161100000000085, 0.00020211099999999788, 0.00020243099999999944, 0.000202542, 0.00020177799999999968, 0.0002022640000000006, 0.00020277800000000068, 0.0002022640000000006, 0.00020147200000000115, 0.00020251400000000086, 0.0002025969999999988, 0.00020227800000000018, 0.00020244399999999954, 0.00020248600000000172, 0.00020227800000000018, 0.00020293099999999994, 0.0002015000000000003, 0.00020293099999999994, 0.00020294400000000004, 0.00020149999999999682, 0.00020119500000000123, 0.00020166699999999912, 0.00020154099999999953, 0.00020295800000000308, 0.00020116699999999862, 0.00020201400000000036, 0.00020166600000000312, 0.00020144499999999455, 0.00020251400000000086, 0.00020277800000000068, 0.00020282000000000633, 0.00020293099999999648, 0.0002026949999999958, 0.00020201400000000036, 0.0002014299999999955, 0.00020202799999999993, 0.00020125000000000004, 0.00020133299999999799, 0.0002029440000000035, 0.00020115300000000252, 0.00020118099999999473, 0.00020206899999999917, 0.00020277800000000068, 0.0002020969999999983, 0.00020111099999999688, 0.0002025969999999988]</msg>
<status status="PASS" starttime="20201112 10:14:41.259" endtime="20201112 10:14:41.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.255" endtime="20201112 10:14:41.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.264" endtime="20201112 10:14:41.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:41.268" endtime="20201112 10:14:41.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.266" endtime="20201112 10:14:41.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.263" endtime="20201112 10:14:41.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.888" endtime="20201112 10:14:41.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.887" endtime="20201112 10:14:41.288"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.297" endtime="20201112 10:14:41.322"></status>
</kw>
<msg timestamp="20201112 10:14:41.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.295" endtime="20201112 10:14:41.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.324" endtime="20201112 10:14:41.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.326" endtime="20201112 10:14:41.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.293" endtime="20201112 10:14:41.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.291" endtime="20201112 10:14:41.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.335" endtime="20201112 10:14:41.622"></status>
</kw>
<msg timestamp="20201112 10:14:41.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.333" endtime="20201112 10:14:41.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021864778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.626" endtime="20201112 10:14:41.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.634" endtime="20201112 10:14:41.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.331" endtime="20201112 10:14:41.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.329" endtime="20201112 10:14:41.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:41.642" level="INFO">${RESULT} = [{'time': 0.022068764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020398599999999975, 'source_diff': 0.00020398599999999975}, {'time': 0.022290792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:41.638" endtime="20201112 10:14:41.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:41.672" level="INFO">${ACCURACY} = {'time': [0.022068764, 0.022290792, 0.022510819, 0.022726847, 0.022940875, 0.023164903, 0.023386917, 0.023606944, 0.023825014, 0.024044986, 0.024265028, 0.024489042, 0.024711069, 0.024931111, 0.025155...</msg>
<status status="PASS" starttime="20201112 10:14:41.644" endtime="20201112 10:14:41.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.682" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 10:14:41.680" endtime="20201112 10:14:41.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.687" level="INFO">VALUE: [0.00020398599999999975, 0.0002032640000000016, 0.00020344400000000054, 0.00020452800000000243, 0.00020394400000000104, 0.00020436100000000013, 0.00020443100000000144, 0.000205027, 0.00020397200000000018, 0.00020334699999999956, 0.00020461100000000038, 0.00020411099999999988, 0.00020361099999999938, 0.00020379199999999778, 0.0002040970000000003, 0.00020493099999999848, 0.00020334799999999903, 0.00020398599999999975, 0.00020320799999999986, 0.00020316700000000062, 0.00020344500000000001, 0.0002034169999999974, 0.0002041940000000013, 0.00020341700000000087, 0.00020341700000000087, 0.00020351400000000186, 0.00020411099999999988, 0.00020429100000000228, 0.00020379200000000125, 0.00020394500000000051, 0.00020484700000000106, 0.00020445900000000058, 0.00020458300000000124, 0.0002047779999999992, 0.0002035969999999998, 0.00020427800000000218, 0.00020312500000000192, 0.00020311100000000235, 0.00020444399999999807, 0.0002049580000000016, 0.00020361100000000285, 0.00020462499999999995, 0.0002047770000000032, 0.00020458300000000124, 0.00020472199999999746, 0.00020443100000000491, 0.000204027999999995, 0.00020327699999999477, 0.0002042640000000026, 0.00020326399999999467]</msg>
<status status="PASS" starttime="20201112 10:14:41.684" endtime="20201112 10:14:41.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.674" endtime="20201112 10:14:41.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.694" endtime="20201112 10:14:41.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:41.701" endtime="20201112 10:14:41.723"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.698" endtime="20201112 10:14:41.724"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.691" endtime="20201112 10:14:41.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.289" endtime="20201112 10:14:41.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.289" endtime="20201112 10:14:41.726"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.743" endtime="20201112 10:14:41.768"></status>
</kw>
<msg timestamp="20201112 10:14:41.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.741" endtime="20201112 10:14:41.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.769" endtime="20201112 10:14:41.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.772" endtime="20201112 10:14:41.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.735" endtime="20201112 10:14:41.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.731" endtime="20201112 10:14:41.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.781" endtime="20201112 10:14:42.068"></status>
</kw>
<msg timestamp="20201112 10:14:42.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033652625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033859653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.779" endtime="20201112 10:14:42.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033652625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033859653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.072" endtime="20201112 10:14:42.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.080" endtime="20201112 10:14:42.082"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.777" endtime="20201112 10:14:42.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.775" endtime="20201112 10:14:42.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:42.087" level="INFO">${RESULT} = [{'time': 0.033859653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020702800000000493, 'source_diff': 0.00020702800000000493}, {'time': 0.034083667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:42.084" endtime="20201112 10:14:42.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:42.100" level="INFO">${ACCURACY} = {'time': [0.033859653, 0.034083667, 0.034305681, 0.034521722, 0.034745764, 0.034965778, 0.035185778, 0.035409819, 0.035635833, 0.035861861, 0.036079903, 0.036303917, 0.036526, 0.036741958, 0.036960069...</msg>
<status status="PASS" starttime="20201112 10:14:42.088" endtime="20201112 10:14:42.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.105" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 10:14:42.104" endtime="20201112 10:14:42.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.107" level="INFO">VALUE: [0.00020702800000000493, 0.00020626399999999767, 0.00020676399999999817, 0.00020512500000000045, 0.0002054719999999982, 0.0002060420000000035, 0.0002050840000000012, 0.00020644400000000007, 0.00020651399999999792, 0.0002064300000000005, 0.00020584700000000206, 0.00020626399999999767, 0.00020648600000000572, 0.00020551399999999692, 0.00020517999999999925, 0.0002060970000000023, 0.00020633299999999605, 0.00020623599999999853, 0.0002060970000000023, 0.0002062919999999968, 0.0002065970000000028, 0.00020511100000000088, 0.00020661100000000238, 0.0002064300000000005, 0.00020669400000000032, 0.00020516699999999916, 0.00020634800000000203, 0.00020691600000000143, 0.00020586100000000163, 0.00020511100000000088, 0.00020694500000000005, 0.00020551400000000386, 0.00020545799999999864, 0.000207027999999998, 0.00020558300000000224, 0.0002060970000000023, 0.0002059169999999999, 0.00020619399999999982, 0.00020701399999999842, 0.00020649999999999835, 0.00020516699999999916, 0.00020570899999999837, 0.00020652699999999802, 0.00020661099999999544, 0.00020523600000000447, 0.00020693100000000048, 0.00020636100000000213, 0.00020544399999999907, 0.0002058750000000012, 0.00020611100000000188]</msg>
<status status="PASS" starttime="20201112 10:14:42.106" endtime="20201112 10:14:42.108"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.101" endtime="20201112 10:14:42.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.111" endtime="20201112 10:14:42.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:42.114" endtime="20201112 10:14:42.133"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.112" endtime="20201112 10:14:42.134"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.109" endtime="20201112 10:14:42.134"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.728" endtime="20201112 10:14:42.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.727" endtime="20201112 10:14:42.135"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.143" endtime="20201112 10:14:42.169"></status>
</kw>
<msg timestamp="20201112 10:14:42.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.142" endtime="20201112 10:14:42.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.170" endtime="20201112 10:14:42.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.173" endtime="20201112 10:14:42.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.139" endtime="20201112 10:14:42.175"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.137" endtime="20201112 10:14:42.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.182" endtime="20201112 10:14:42.468"></status>
</kw>
<msg timestamp="20201112 10:14:42.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022264569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:42.180" endtime="20201112 10:14:42.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022264569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:42.472" endtime="20201112 10:14:42.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.480" endtime="20201112 10:14:42.482"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.177" endtime="20201112 10:14:42.482"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.176" endtime="20201112 10:14:42.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:42.486" level="INFO">${RESULT} = [{'time': 0.022264569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0002090690000000027, 'source_diff': 0.0002090690000000027}, {'time': 0.022492597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:42.483" endtime="20201112 10:14:42.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:42.501" level="INFO">${ACCURACY} = {'time': [0.022264569, 0.022492597, 0.022716611, 0.022936681, 0.023156667, 0.023374694, 0.023602722, 0.023820806, 0.024044764, 0.024268792, 0.024492819, 0.024710847, 0.024930875, 0.025150903, 0.025368...</msg>
<status status="PASS" starttime="20201112 10:14:42.487" endtime="20201112 10:14:42.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.505" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 10:14:42.504" endtime="20201112 10:14:42.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.508" level="INFO">VALUE: [0.0002090690000000027, 0.000208027999999999, 0.00020891699999999944, 0.00020787499999999973, 0.00020861099999999744, 0.0002074300000000015, 0.00020845799999999817, 0.00020716700000000116, 0.00020709699999999984, 0.00020790300000000234, 0.0002089859999999978, 0.00020844400000000207, 0.00020759700000000034, 0.00020861099999999744, 0.0002083049999999989, 0.0002071109999999994, 0.00020827799999999924, 0.0002081110000000004, 0.00020726400000000214, 0.0002089439999999991, 0.00020733300000000052, 0.0002082780000000027, 0.00020706899999999723, 0.0002081110000000004, 0.00020776399999999917, 0.00020827699999999977, 0.00020776399999999917, 0.00020866600000000318, 0.00020893100000000248, 0.00020850000000000035, 0.00020745800000000064, 0.0002078470000000006, 0.00020793100000000148, 0.00020799999999999985, 0.00020863900000000005, 0.00020842999999999903, 0.00020786100000000016, 0.00020876400000000017, 0.0002072499999999991, 0.00020844500000000155, 0.00020736099999999966, 0.00020845800000000164, 0.0002086950000000018, 0.00020818100000000173, 0.0002076809999999943, 0.0002083609999999972, 0.00020827799999999924, 0.0002080699999999977, 0.0002084170000000024, 0.00020749999999999935]</msg>
<status status="PASS" starttime="20201112 10:14:42.507" endtime="20201112 10:14:42.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.502" endtime="20201112 10:14:42.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.511" endtime="20201112 10:14:42.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:42.515" endtime="20201112 10:14:42.534"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.513" endtime="20201112 10:14:42.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.510" endtime="20201112 10:14:42.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.136" endtime="20201112 10:14:42.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.135" endtime="20201112 10:14:42.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.391" endtime="20201112 10:14:42.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:42.540" endtime="20201112 10:14:42.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.539" endtime="20201112 10:14:42.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.537" endtime="20201112 10:14:42.561"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:02.314" endtime="20201112 10:14:42.561" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:42.569" endtime="20201112 10:14:42.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.568" endtime="20201112 10:14:42.589"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.603" endtime="20201112 10:14:42.622"></status>
</kw>
<msg timestamp="20201112 10:14:42.622" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.601" endtime="20201112 10:14:42.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.625" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.623" endtime="20201112 10:14:42.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.628" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:42.626" endtime="20201112 10:14:42.628"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:42.598" endtime="20201112 10:14:42.629"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:42.596" endtime="20201112 10:14:42.629"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.594" endtime="20201112 10:14:42.630"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:42.633" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:42.633" endtime="20201112 10:14:42.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.631" endtime="20201112 10:14:42.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.594" endtime="20201112 10:14:42.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.593" endtime="20201112 10:14:42.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.635" endtime="20201112 10:14:42.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.592" endtime="20201112 10:14:42.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.590" endtime="20201112 10:14:42.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.567" endtime="20201112 10:14:42.638"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.648" endtime="20201112 10:14:42.663"></status>
</kw>
<msg timestamp="20201112 10:14:42.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.647" endtime="20201112 10:14:42.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.664" endtime="20201112 10:14:42.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.667" endtime="20201112 10:14:42.668"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.644" endtime="20201112 10:14:42.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.642" endtime="20201112 10:14:42.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.676" endtime="20201112 10:14:42.962"></status>
</kw>
<msg timestamp="20201112 10:14:42.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071608097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071617611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.674" endtime="20201112 10:14:42.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071608097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071617611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.966" endtime="20201112 10:14:42.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.974" endtime="20201112 10:14:42.976"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.672" endtime="20201112 10:14:42.977"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.670" endtime="20201112 10:14:42.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:42.982" level="INFO">${RESULT} = [{'time': 0.071617611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.514000000002132e-06, 'source_diff': 9.514000000002132e-06}, {'time': 0.071637625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:42.978" endtime="20201112 10:14:42.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:42.996" level="INFO">${ACCURACY} = {'time': [0.071617611, 0.071637625, 0.071659778, 0.071675917, 0.07169975, 0.071721681, 0.071739431, 0.071757403, 0.071771819, 0.071787472, 0.071803722, 0.071825764, 0.071847875, 0.071867583, 0.0718834...</msg>
<status status="PASS" starttime="20201112 10:14:42.983" endtime="20201112 10:14:42.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.001" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 10:14:43.000" endtime="20201112 10:14:43.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.004" level="INFO">VALUE: [9.514000000002132e-06, 9.486000000002992e-06, 8.958999999988948e-06, 9.486000000002992e-06, 9.5000000000095e-06, 8.888999999998037e-06, 8.889000000011915e-06, 8.291999999993083e-06, 8.887999999998564e-06, 8.278000000000452e-06, 8.847000000006267e-06, 9.499999999995623e-06, 1.0083000000007947e-05, 9.514000000002132e-06, 8.902999999990668e-06, 9.499999999995623e-06, 8.305000000000118e-06, 8.290999999993609e-06, 8.305000000000118e-06, 8.887999999998564e-06, 8.903000000004546e-06, 9.499999999995623e-06, 8.903000000004546e-06, 1.0111000000007087e-05, 8.360999999998397e-06, 8.222000000002172e-06, 1.0027999999995263e-05, 8.943999999996843e-06, 1.0055999999994403e-05, 1.0098000000000051e-05, 9.431000000004186e-06, 9.514000000002132e-06, 9.527999999994763e-06, 8.305000000000118e-06, 1.0111000000007087e-05, 8.291999999993083e-06, 8.902999999990668e-06, 8.903000000004546e-06, 8.903000000004546e-06, 8.875000000005406e-06, 8.888999999998037e-06, 8.84800000000574e-06, 8.903000000004546e-06, 8.915999999997704e-06, 1.0124999999999718e-05, 9.486000000002992e-06, 1.0167000000005366e-05, 9.5000000000095e-06, 9.499999999995623e-06, 1.0097000000000578e-05]</msg>
<status status="PASS" starttime="20201112 10:14:43.002" endtime="20201112 10:14:43.004"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.997" endtime="20201112 10:14:43.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.007" endtime="20201112 10:14:43.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.010" endtime="20201112 10:14:43.029"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.008" endtime="20201112 10:14:43.030"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.005" endtime="20201112 10:14:43.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.640" endtime="20201112 10:14:43.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.640" endtime="20201112 10:14:43.031"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.040" endtime="20201112 10:14:43.055"></status>
</kw>
<msg timestamp="20201112 10:14:43.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.038" endtime="20201112 10:14:43.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.056" endtime="20201112 10:14:43.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.059" endtime="20201112 10:14:43.060"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.036" endtime="20201112 10:14:43.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.034" endtime="20201112 10:14:43.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.068" endtime="20201112 10:14:43.354"></status>
</kw>
<msg timestamp="20201112 10:14:43.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022494819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.066" endtime="20201112 10:14:43.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022494819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.358" endtime="20201112 10:14:43.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.366" endtime="20201112 10:14:43.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.064" endtime="20201112 10:14:43.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.062" endtime="20201112 10:14:43.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:43.373" level="INFO">${RESULT} = [{'time': 0.022506722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1903000000000608e-05, 'source_diff': 1.1903000000000608e-05}, {'time': 0.022527125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:43.370" endtime="20201112 10:14:43.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:43.388" level="INFO">${ACCURACY} = {'time': [0.022506722, 0.022527125, 0.022550583, 0.02256675, 0.022590917, 0.022606917, 0.022626694, 0.022642694, 0.022660694, 0.022676861, 0.022692861, 0.022708931, 0.022730597, 0.022749181, 0.0227646...</msg>
<status status="PASS" starttime="20201112 10:14:43.374" endtime="20201112 10:14:43.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.392" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 10:14:43.391" endtime="20201112 10:14:43.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.395" level="INFO">VALUE: [1.1903000000000608e-05, 1.0680999999998497e-05, 1.0111000000000148e-05, 1.1318999999999219e-05, 1.1291999999999552e-05, 1.1305999999999122e-05, 1.1916000000000704e-05, 1.1305000000003118e-05, 1.1304999999999649e-05, 1.1304999999999649e-05, 1.1305000000003118e-05, 1.1334000000001732e-05, 1.0708000000001633e-05, 1.0709000000001107e-05, 1.0111000000000148e-05, 1.1930999999999747e-05, 1.1917000000000177e-05, 1.0721999999997733e-05, 1.0709000000001107e-05, 1.1362000000000871e-05, 1.0750000000000343e-05, 1.1361000000001398e-05, 1.1985999999998553e-05, 1.1319000000002688e-05, 1.0125000000003187e-05, 1.0709000000001107e-05, 1.0694999999998067e-05, 1.0695000000001537e-05, 1.1319999999998692e-05, 1.1347000000001828e-05, 1.1304999999999649e-05, 1.1917000000000177e-05, 1.0111000000000148e-05, 1.1318999999999219e-05, 1.1320000000002162e-05, 1.1902000000001134e-05, 1.0694000000002063e-05, 1.0721999999997733e-05, 1.0707999999998163e-05, 1.1916000000000704e-05, 1.0082999999997538e-05, 1.1889000000001038e-05, 1.1972000000002453e-05, 1.1917000000000177e-05, 1.1917000000000177e-05, 1.1930999999999747e-05, 1.0694000000002063e-05, 1.1917000000000177e-05, 1.1347000000001828e-05, 1.1306000000002592e-05]</msg>
<status status="PASS" starttime="20201112 10:14:43.393" endtime="20201112 10:14:43.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.389" endtime="20201112 10:14:43.395"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.398" endtime="20201112 10:14:43.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.402" endtime="20201112 10:14:43.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.400" endtime="20201112 10:14:43.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.396" endtime="20201112 10:14:43.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.032" endtime="20201112 10:14:43.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.032" endtime="20201112 10:14:43.422"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.431" endtime="20201112 10:14:43.446"></status>
</kw>
<msg timestamp="20201112 10:14:43.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.430" endtime="20201112 10:14:43.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.448" endtime="20201112 10:14:43.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.451" endtime="20201112 10:14:43.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.427" endtime="20201112 10:14:43.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.425" endtime="20201112 10:14:43.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.459" endtime="20201112 10:14:43.746"></status>
</kw>
<msg timestamp="20201112 10:14:43.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022241667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.458" endtime="20201112 10:14:43.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022241667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.750" endtime="20201112 10:14:43.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.759" endtime="20201112 10:14:43.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.455" endtime="20201112 10:14:43.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.454" endtime="20201112 10:14:43.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:43.766" level="INFO">${RESULT} = [{'time': 0.022241667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2528000000001233e-05, 'source_diff': 1.2528000000001233e-05}, {'time': 0.022263306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:43.763" endtime="20201112 10:14:43.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:43.780" level="INFO">${ACCURACY} = {'time': [0.022241667, 0.022263306, 0.022287222, 0.022309708, 0.022337528, 0.02236175, 0.022389403, 0.02241575, 0.022437347, 0.02246575, 0.022489556, 0.022515278, 0.022543694, 0.022561597, 0.022589417...</msg>
<status status="PASS" starttime="20201112 10:14:43.767" endtime="20201112 10:14:43.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.784" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 10:14:43.783" endtime="20201112 10:14:43.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.787" level="INFO">VALUE: [1.2528000000001233e-05, 1.3777999999999013e-05, 1.3124999999999248e-05, 1.3125000000002718e-05, 1.3124999999999248e-05, 1.2542000000000803e-05, 1.3124999999999248e-05, 1.4347000000001359e-05, 1.3749999999999873e-05, 1.3722000000000734e-05, 1.3124999999999248e-05, 1.2485999999999053e-05, 1.3736000000000304e-05, 1.3722000000000734e-05, 1.3138999999998818e-05, 1.3139000000002288e-05, 1.2473000000002427e-05, 1.3179999999998054e-05, 1.3124999999999248e-05, 1.3763999999999443e-05, 1.3124999999999248e-05, 1.3722000000000734e-05, 1.2541999999997333e-05, 1.3110999999999678e-05, 1.3736999999999777e-05, 1.2527999999997763e-05, 1.2528000000001233e-05, 1.2514000000001663e-05, 1.3709000000000637e-05, 1.2583999999999512e-05, 1.3041999999997833e-05, 1.3124999999999248e-05, 1.2514000000001663e-05, 1.3125000000002718e-05, 1.3721999999997264e-05, 1.2500000000002093e-05, 1.2513999999998193e-05, 1.3736999999999777e-05, 1.2528000000001233e-05, 1.3778000000002483e-05, 1.3723000000000207e-05, 1.3124999999999248e-05, 1.2485999999999053e-05, 1.2583000000000039e-05, 1.1903000000000608e-05, 1.3194000000001094e-05, 1.2528000000001233e-05, 1.2513999999998193e-05, 1.3680999999998028e-05, 1.2487000000001997e-05]</msg>
<status status="PASS" starttime="20201112 10:14:43.786" endtime="20201112 10:14:43.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.781" endtime="20201112 10:14:43.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.791" endtime="20201112 10:14:43.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.794" endtime="20201112 10:14:43.813"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.792" endtime="20201112 10:14:43.814"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.789" endtime="20201112 10:14:43.814"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.423" endtime="20201112 10:14:43.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.423" endtime="20201112 10:14:43.815"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.823" endtime="20201112 10:14:43.838"></status>
</kw>
<msg timestamp="20201112 10:14:43.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.822" endtime="20201112 10:14:43.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.839" endtime="20201112 10:14:43.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.842" endtime="20201112 10:14:43.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.819" endtime="20201112 10:14:43.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.817" endtime="20201112 10:14:43.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.851" endtime="20201112 10:14:44.139"></status>
</kw>
<msg timestamp="20201112 10:14:44.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021985514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.849" endtime="20201112 10:14:44.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021985514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.143" endtime="20201112 10:14:44.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.151" endtime="20201112 10:14:44.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.847" endtime="20201112 10:14:44.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.845" endtime="20201112 10:14:44.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:44.158" level="INFO">${RESULT} = [{'time': 0.021999833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.431899999999875e-05, 'source_diff': 1.431899999999875e-05}, {'time': 0.022021611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:44.154" endtime="20201112 10:14:44.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:44.171" level="INFO">${ACCURACY} = {'time': [0.021999833, 0.022021611, 0.022047639, 0.022069528, 0.022089611, 0.022113792, 0.022135722, 0.022159542, 0.02217975, 0.022199986, 0.0222255, 0.022245708, 0.022269819, 0.022296, 0.022321903, 0...</msg>
<status status="PASS" starttime="20201112 10:14:44.159" endtime="20201112 10:14:44.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.176" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 10:14:44.175" endtime="20201112 10:14:44.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.178" level="INFO">VALUE: [1.431899999999875e-05, 1.5569e-05, 1.5555999999999903e-05, 1.5542000000000333e-05, 1.555499999999696e-05, 1.6181000000000528e-05, 1.4916000000000235e-05, 1.4959000000001887e-05, 1.5500000000001624e-05, 1.5542000000000333e-05, 1.431899999999875e-05, 1.434699999999789e-05, 1.4929999999999805e-05, 1.612499999999878e-05, 1.5555999999999903e-05, 1.5542000000000333e-05, 1.4916000000000235e-05, 1.5542000000000333e-05, 1.4929999999999805e-05, 1.5528000000000763e-05, 1.4903000000000138e-05, 1.434699999999789e-05, 1.4959000000001887e-05, 1.554099999999739e-05, 1.4944999999998848e-05, 1.4930999999999278e-05, 1.4929999999999805e-05, 1.5542000000000333e-05, 1.5528000000000763e-05, 1.4957999999998944e-05, 1.4361000000000929e-05, 1.4943999999999374e-05, 1.5542000000000333e-05, 1.4347000000001359e-05, 1.4943999999999374e-05, 1.4929999999999805e-05, 1.4347000000001359e-05, 1.4929999999999805e-05, 1.5569999999999473e-05, 1.4943999999999374e-05, 1.561099999999871e-05, 1.4333000000001789e-05, 1.4319000000002219e-05, 1.615299999999792e-05, 1.5542000000000333e-05, 1.4943999999999374e-05, 1.4348000000000832e-05, 1.4916999999999708e-05, 1.5542000000000333e-05, 1.4972000000001984e-05]</msg>
<status status="PASS" starttime="20201112 10:14:44.177" endtime="20201112 10:14:44.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.172" endtime="20201112 10:14:44.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.182" endtime="20201112 10:14:44.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:44.185" endtime="20201112 10:14:44.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.184" endtime="20201112 10:14:44.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.180" endtime="20201112 10:14:44.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.816" endtime="20201112 10:14:44.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.815" endtime="20201112 10:14:44.206"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.215" endtime="20201112 10:14:44.230"></status>
</kw>
<msg timestamp="20201112 10:14:44.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.213" endtime="20201112 10:14:44.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.232" endtime="20201112 10:14:44.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.234" endtime="20201112 10:14:44.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.211" endtime="20201112 10:14:44.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.209" endtime="20201112 10:14:44.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.243" endtime="20201112 10:14:44.530"></status>
</kw>
<msg timestamp="20201112 10:14:44.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022055528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.242" endtime="20201112 10:14:44.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022055528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.535" endtime="20201112 10:14:44.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.543" endtime="20201112 10:14:44.544"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.239" endtime="20201112 10:14:44.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.237" endtime="20201112 10:14:44.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:44.549" level="INFO">${RESULT} = [{'time': 0.022055528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.734700000000089e-05, 'source_diff': 1.734700000000089e-05}, {'time': 0.022079236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:44.546" endtime="20201112 10:14:44.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:44.563" level="INFO">${ACCURACY} = {'time': [0.022055528, 0.022079236, 0.022101236, 0.022131569, 0.022155264, 0.022177583, 0.022207125, 0.022235458, 0.022261542, 0.022289486, 0.022317639, 0.022341528, 0.022367625, 0.022391542, 0.022415...</msg>
<status status="PASS" starttime="20201112 10:14:44.550" endtime="20201112 10:14:44.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.567" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 10:14:44.566" endtime="20201112 10:14:44.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.570" level="INFO">VALUE: [1.734700000000089e-05, 1.736099999999699e-05, 1.613899999999835e-05, 1.7972000000001515e-05, 1.736100000000046e-05, 1.7958000000001945e-05, 1.733300000000132e-05, 1.681900000000125e-05, 1.794499999999838e-05, 1.6735999999999834e-05, 1.7958000000001945e-05, 1.737500000000003e-05, 1.6749999999999404e-05, 1.73889999999996e-05, 1.6763999999998974e-05, 1.736100000000046e-05, 1.6151999999998445e-05, 1.733300000000132e-05, 1.6805999999997684e-05, 1.7973000000000988e-05, 1.6735999999999834e-05, 1.613899999999835e-05, 1.736099999999699e-05, 1.734699999999742e-05, 1.794500000000185e-05, 1.6764000000002444e-05, 1.791700000000271e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.736100000000046e-05, 1.6736000000003304e-05, 1.6749999999999404e-05, 1.795899999999795e-05, 1.613900000000182e-05, 1.793100000000228e-05, 1.7361999999999933e-05, 1.7943999999998905e-05, 1.6750000000002874e-05, 1.7415999999999265e-05, 1.7959000000001418e-05, 1.6709000000000168e-05, 1.7971999999998045e-05, 1.6749999999999404e-05, 1.736100000000046e-05, 1.7943999999998905e-05, 1.737500000000003e-05, 1.7958000000001945e-05, 1.6722000000000264e-05, 1.740299999999917e-05, 1.7957999999998475e-05]</msg>
<status status="PASS" starttime="20201112 10:14:44.569" endtime="20201112 10:14:44.571"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.564" endtime="20201112 10:14:44.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.574" endtime="20201112 10:14:44.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:44.577" endtime="20201112 10:14:44.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.575" endtime="20201112 10:14:44.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.572" endtime="20201112 10:14:44.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.207" endtime="20201112 10:14:44.598"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.206" endtime="20201112 10:14:44.598"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.606" endtime="20201112 10:14:44.621"></status>
</kw>
<msg timestamp="20201112 10:14:44.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.605" endtime="20201112 10:14:44.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.623" endtime="20201112 10:14:44.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.625" endtime="20201112 10:14:44.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.602" endtime="20201112 10:14:44.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.600" endtime="20201112 10:14:44.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.635" endtime="20201112 10:14:44.922"></status>
</kw>
<msg timestamp="20201112 10:14:44.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022188431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.633" endtime="20201112 10:14:44.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022188431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.926" endtime="20201112 10:14:44.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.935" endtime="20201112 10:14:44.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.630" endtime="20201112 10:14:44.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.629" endtime="20201112 10:14:44.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:44.942" level="INFO">${RESULT} = [{'time': 0.022208208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.97769999999986e-05, 'source_diff': 1.97769999999986e-05}, {'time': 0.022234736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:44.938" endtime="20201112 10:14:44.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:44.955" level="INFO">${ACCURACY} = {'time': [0.022208208, 0.022234736, 0.022266653, 0.022294292, 0.022318639, 0.022344347, 0.022374736, 0.022402542, 0.022428403, 0.022452806, 0.022480431, 0.022506653, 0.022532653, 0.022562569, 0.022592...</msg>
<status status="PASS" starttime="20201112 10:14:44.943" endtime="20201112 10:14:44.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.960" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 10:14:44.959" endtime="20201112 10:14:44.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.962" level="INFO">VALUE: [1.97769999999986e-05, 1.9180000000000585e-05, 1.8570000000002473e-05, 1.794500000000185e-05, 1.9806000000000684e-05, 1.856899999999953e-05, 2.037499999999956e-05, 1.9764000000001974e-05, 1.916700000000049e-05, 1.922299999999877e-05, 1.912499999999831e-05, 1.91950000000031e-05, 1.911099999999874e-05, 1.854100000000039e-05, 1.976299999999903e-05, 1.855499999999996e-05, 1.8569999999999004e-05, 1.9180000000000585e-05, 1.9180000000000585e-05, 1.913900000000135e-05, 1.8555999999999434e-05, 1.9221999999999295e-05, 1.855499999999996e-05, 1.916700000000049e-05, 1.7957999999998475e-05, 1.794499999999838e-05, 1.916700000000049e-05, 1.7959000000001418e-05, 1.916700000000049e-05, 1.97769999999986e-05, 1.916700000000049e-05, 1.9736000000002835e-05, 1.97630000000025e-05, 1.855499999999996e-05, 1.916700000000049e-05, 1.8555999999999434e-05, 1.9806000000000684e-05, 1.85829999999991e-05, 1.979100000000164e-05, 1.856899999999953e-05, 1.913900000000135e-05, 1.8612000000001183e-05, 1.90829999999996e-05, 1.9777999999998075e-05, 1.8541999999999864e-05, 1.976299999999903e-05, 2.038899999999913e-05, 1.9721999999999795e-05, 2.03890000000026e-05, 1.855499999999996e-05]</msg>
<status status="PASS" starttime="20201112 10:14:44.961" endtime="20201112 10:14:44.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.956" endtime="20201112 10:14:44.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.966" endtime="20201112 10:14:44.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:44.969" endtime="20201112 10:14:44.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.967" endtime="20201112 10:14:44.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.964" endtime="20201112 10:14:44.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.599" endtime="20201112 10:14:44.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.598" endtime="20201112 10:14:44.990"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.998" endtime="20201112 10:14:45.014"></status>
</kw>
<msg timestamp="20201112 10:14:45.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.997" endtime="20201112 10:14:45.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.016" endtime="20201112 10:14:45.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.018" endtime="20201112 10:14:45.020"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.994" endtime="20201112 10:14:45.021"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.992" endtime="20201112 10:14:45.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.027" endtime="20201112 10:14:45.314"></status>
</kw>
<msg timestamp="20201112 10:14:45.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022308306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022328667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.026" endtime="20201112 10:14:45.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022308306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022328667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.318" endtime="20201112 10:14:45.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.326" endtime="20201112 10:14:45.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.023" endtime="20201112 10:14:45.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.022" endtime="20201112 10:14:45.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:45.333" level="INFO">${RESULT} = [{'time': 0.022328667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.036099999999999e-05, 'source_diff': 2.036099999999999e-05}, {'time': 0.022360514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:45.330" endtime="20201112 10:14:45.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:45.347" level="INFO">${ACCURACY} = {'time': [0.022328667, 0.022360514, 0.022386833, 0.022420875, 0.022446819, 0.022474569, 0.022510847, 0.022542875, 0.022568819, 0.0226025, 0.022632722, 0.022668847, 0.022702569, 0.022734458, 0.02276245...</msg>
<status status="PASS" starttime="20201112 10:14:45.334" endtime="20201112 10:14:45.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.351" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 10:14:45.350" endtime="20201112 10:14:45.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.354" level="INFO">VALUE: [2.036099999999999e-05, 2.0958000000001475e-05, 2.0971999999997576e-05, 2.216700000000002e-05, 2.158299999999863e-05, 2.0387999999999656e-05, 2.159700000000167e-05, 2.2193999999999686e-05, 2.15830000000021e-05, 2.0986000000000615e-05, 2.034700000000042e-05, 2.15969999999982e-05, 2.0387999999999656e-05, 2.036099999999999e-05, 2.0971999999997576e-05, 2.098700000000009e-05, 2.098700000000009e-05, 2.1598000000001144e-05, 2.037499999999956e-05, 2.038899999999913e-05, 2.156899999999906e-05, 2.0972000000001045e-05, 2.15830000000021e-05, 2.1583999999998105e-05, 2.158299999999863e-05, 2.154099999999992e-05, 2.159700000000167e-05, 2.095900000000095e-05, 2.1583999999998105e-05, 2.037499999999956e-05, 2.094499999999791e-05, 2.038899999999913e-05, 2.2180000000000116e-05, 2.161100000000124e-05, 2.1597999999997675e-05, 2.1652000000000476e-05, 2.0972000000001045e-05, 2.0986000000000615e-05, 2.2236000000001865e-05, 2.0387999999999656e-05, 2.15969999999982e-05, 2.038899999999913e-05, 2.038899999999913e-05, 2.15830000000021e-05, 2.0972000000001045e-05, 2.104099999999942e-05, 2.0986000000000615e-05, 2.2193999999999686e-05, 2.037499999999956e-05, 2.1584000000001574e-05]</msg>
<status status="PASS" starttime="20201112 10:14:45.352" endtime="20201112 10:14:45.354"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.348" endtime="20201112 10:14:45.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.357" endtime="20201112 10:14:45.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:45.361" endtime="20201112 10:14:45.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.359" endtime="20201112 10:14:45.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.356" endtime="20201112 10:14:45.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.991" endtime="20201112 10:14:45.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.990" endtime="20201112 10:14:45.382"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.390" endtime="20201112 10:14:45.405"></status>
</kw>
<msg timestamp="20201112 10:14:45.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.389" endtime="20201112 10:14:45.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.407" endtime="20201112 10:14:45.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.409" endtime="20201112 10:14:45.411"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.386" endtime="20201112 10:14:45.411"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.384" endtime="20201112 10:14:45.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.418" endtime="20201112 10:14:45.705"></status>
</kw>
<msg timestamp="20201112 10:14:45.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022431278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022455278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.417" endtime="20201112 10:14:45.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022431278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022455278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.710" endtime="20201112 10:14:45.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.718" endtime="20201112 10:14:45.720"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.414" endtime="20201112 10:14:45.720"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.412" endtime="20201112 10:14:45.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:45.725" level="INFO">${RESULT} = [{'time': 0.022455278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3999999999999716e-05, 'source_diff': 2.3999999999999716e-05}, {'time': 0.022489347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:45.721" endtime="20201112 10:14:45.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:45.738" level="INFO">${ACCURACY} = {'time': [0.022455278, 0.022489347, 0.0225235, 0.0225595, 0.022587389, 0.022619458, 0.022655333, 0.022687486, 0.022719306, 0.022749222, 0.022779139, 0.022809403, 0.022845208, 0.022883236, 0.022921181,...</msg>
<status status="PASS" starttime="20201112 10:14:45.726" endtime="20201112 10:14:45.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.743" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 10:14:45.742" endtime="20201112 10:14:45.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.745" level="INFO">VALUE: [2.3999999999999716e-05, 2.2221999999998826e-05, 2.2818999999996842e-05, 2.3999999999999716e-05, 2.2207999999999256e-05, 2.3401999999998757e-05, 2.2166000000000546e-05, 2.2792000000000645e-05, 2.2778000000001075e-05, 2.331900000000081e-05, 2.336099999999952e-05, 2.338899999999866e-05, 2.2790999999997702e-05, 2.3999999999999716e-05, 2.3347999999999425e-05, 2.2792000000000645e-05, 2.2207999999999256e-05, 2.341700000000127e-05, 2.2792000000000645e-05, 2.34030000000017e-05, 2.34030000000017e-05, 2.216700000000002e-05, 2.2193999999999686e-05, 2.340299999999823e-05, 2.2221999999998826e-05, 2.2236000000001865e-05, 2.3999999999999716e-05, 2.216700000000002e-05, 2.4026999999999382e-05, 2.284699999999945e-05, 2.3387999999999187e-05, 2.2764000000001505e-05, 2.336099999999952e-05, 2.3402000000002227e-05, 2.219500000000263e-05, 2.218100000000306e-05, 2.2806000000000215e-05, 2.3999999999999716e-05, 2.3401999999998757e-05, 2.4041999999998426e-05, 2.280500000000074e-05, 2.344500000000041e-05, 2.4028000000002325e-05, 2.340299999999823e-05, 2.4028000000002325e-05, 2.2806000000000215e-05, 2.2790999999997702e-05, 2.3999999999999716e-05, 2.338899999999866e-05, 2.2804999999997272e-05]</msg>
<status status="PASS" starttime="20201112 10:14:45.744" endtime="20201112 10:14:45.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.739" endtime="20201112 10:14:45.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.749" endtime="20201112 10:14:45.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:45.752" endtime="20201112 10:14:45.771"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.751" endtime="20201112 10:14:45.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.747" endtime="20201112 10:14:45.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.382" endtime="20201112 10:14:45.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.382" endtime="20201112 10:14:45.773"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.781" endtime="20201112 10:14:45.797"></status>
</kw>
<msg timestamp="20201112 10:14:45.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.780" endtime="20201112 10:14:45.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.798" endtime="20201112 10:14:45.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.801" endtime="20201112 10:14:45.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.777" endtime="20201112 10:14:45.803"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.775" endtime="20201112 10:14:45.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.810" endtime="20201112 10:14:46.096"></status>
</kw>
<msg timestamp="20201112 10:14:46.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.808" endtime="20201112 10:14:46.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021911472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.101" endtime="20201112 10:14:46.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.109" endtime="20201112 10:14:46.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.806" endtime="20201112 10:14:46.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.804" endtime="20201112 10:14:46.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:46.116" level="INFO">${RESULT} = [{'time': 0.021911472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5818999999999842e-05, 'source_diff': 2.5818999999999842e-05}, {'time': 0.02194125, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:14:46.112" endtime="20201112 10:14:46.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:46.129" level="INFO">${ACCURACY} = {'time': [0.021911472, 0.02194125, 0.021977583, 0.022011167, 0.022043111, 0.022081125, 0.02211525, 0.022151486, 0.022187125, 0.022219611, 0.022249236, 0.022285153, 0.022317639, 0.0223515, 0.022391319,...</msg>
<status status="PASS" starttime="20201112 10:14:46.116" endtime="20201112 10:14:46.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.134" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 10:14:46.133" endtime="20201112 10:14:46.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.136" level="INFO">VALUE: [2.5818999999999842e-05, 2.4610999999997302e-05, 2.5735999999998427e-05, 2.52230000000013e-05, 2.458300000000163e-05, 2.5818999999999842e-05, 2.461100000000077e-05, 2.516700000000302e-05, 2.462499999999687e-05, 2.5805000000000272e-05, 2.4596999999997732e-05, 2.5221999999998357e-05, 2.5805999999999746e-05, 2.5832999999999412e-05, 2.5805000000000272e-05, 2.5818999999999842e-05, 2.462500000000034e-05, 2.408300000000113e-05, 2.4570000000001535e-05, 2.3971999999997107e-05, 2.5819999999999316e-05, 2.5221999999998357e-05, 2.4014000000002755e-05, 2.462500000000034e-05, 2.461100000000077e-05, 2.461100000000077e-05, 2.5208000000002256e-05, 2.52230000000013e-05, 2.5221999999998357e-05, 2.5193999999999217e-05, 2.52230000000013e-05, 2.5207999999998787e-05, 2.5819999999999316e-05, 2.5166000000000077e-05, 2.4612000000000245e-05, 2.523700000000087e-05, 2.5790999999997233e-05, 2.520899999999826e-05, 2.461100000000077e-05, 2.5236000000001396e-05, 2.5818999999999842e-05, 2.5834000000002355e-05, 2.4013999999999286e-05, 2.5166000000000077e-05, 2.519499999999869e-05, 2.5208000000002256e-05, 2.5834000000002355e-05, 2.5805000000000272e-05, 2.458300000000163e-05, 2.4597999999997205e-05]</msg>
<status status="PASS" starttime="20201112 10:14:46.135" endtime="20201112 10:14:46.137"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.130" endtime="20201112 10:14:46.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.140" endtime="20201112 10:14:46.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:46.143" endtime="20201112 10:14:46.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.142" endtime="20201112 10:14:46.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.138" endtime="20201112 10:14:46.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.774" endtime="20201112 10:14:46.164"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.773" endtime="20201112 10:14:46.164"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.172" endtime="20201112 10:14:46.189"></status>
</kw>
<msg timestamp="20201112 10:14:46.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.171" endtime="20201112 10:14:46.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.191" endtime="20201112 10:14:46.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.193" endtime="20201112 10:14:46.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.168" endtime="20201112 10:14:46.195"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.166" endtime="20201112 10:14:46.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.202" endtime="20201112 10:14:46.489"></status>
</kw>
<msg timestamp="20201112 10:14:46.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022091167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.200" endtime="20201112 10:14:46.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022091167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.493" endtime="20201112 10:14:46.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.501" endtime="20201112 10:14:46.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.198" endtime="20201112 10:14:46.504"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.196" endtime="20201112 10:14:46.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:46.508" level="INFO">${RESULT} = [{'time': 0.022118167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7000000000002716e-05, 'source_diff': 2.7000000000002716e-05}, {'time': 0.022154625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:46.505" endtime="20201112 10:14:46.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:46.522" level="INFO">${ACCURACY} = {'time': [0.022118167, 0.022154625, 0.022194681, 0.022228375, 0.022266708, 0.022306736, 0.022346611, 0.022378667, 0.022410306, 0.022446264, 0.022486375, 0.022526403, 0.022560625, 0.022596542, 0.022630...</msg>
<status status="PASS" starttime="20201112 10:14:46.509" endtime="20201112 10:14:46.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.526" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 10:14:46.525" endtime="20201112 10:14:46.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.529" level="INFO">VALUE: [2.7000000000002716e-05, 2.638900000000166e-05, 2.7028000000001856e-05, 2.7014000000002286e-05, 2.7651999999999538e-05, 2.7694000000001717e-05, 2.641699999999733e-05, 2.7028000000001856e-05, 2.638900000000166e-05, 2.7638999999999442e-05, 2.640299999999776e-05, 2.6999999999999247e-05, 2.7028000000001856e-05, 2.820900000000126e-05, 2.7028000000001856e-05, 2.8236000000000927e-05, 2.8222000000001357e-05, 2.6430000000000897e-05, 2.6415999999997858e-05, 2.64170000000008e-05, 2.8235999999997458e-05, 2.7624999999999872e-05, 2.643100000000037e-05, 2.64170000000008e-05, 2.7611000000000302e-05, 2.8179999999999178e-05, 2.7027999999998387e-05, 2.6458000000000037e-05, 2.6415999999997858e-05, 2.7013999999998817e-05, 2.7624999999999872e-05, 2.820900000000126e-05, 2.640300000000123e-05, 2.6415999999997858e-05, 2.697300000000305e-05, 2.6402000000001757e-05, 2.7652999999999012e-05, 2.7028000000001856e-05, 2.6402000000001757e-05, 2.7013999999998817e-05, 2.765300000000248e-05, 2.768099999999815e-05, 2.644500000000341e-05, 2.8277000000000163e-05, 2.7624999999999872e-05, 2.7638999999999442e-05, 2.6416000000001327e-05, 2.7624999999999872e-05, 2.64170000000008e-05, 2.7652999999999012e-05]</msg>
<status status="PASS" starttime="20201112 10:14:46.527" endtime="20201112 10:14:46.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.523" endtime="20201112 10:14:46.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.532" endtime="20201112 10:14:46.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:46.536" endtime="20201112 10:14:46.555"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.534" endtime="20201112 10:14:46.556"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.531" endtime="20201112 10:14:46.556"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.165" endtime="20201112 10:14:46.556"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.164" endtime="20201112 10:14:46.556"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.565" endtime="20201112 10:14:46.581"></status>
</kw>
<msg timestamp="20201112 10:14:46.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.564" endtime="20201112 10:14:46.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.582" endtime="20201112 10:14:46.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.585" endtime="20201112 10:14:46.586"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.561" endtime="20201112 10:14:46.587"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.559" endtime="20201112 10:14:46.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.594" endtime="20201112 10:14:46.881"></status>
</kw>
<msg timestamp="20201112 10:14:46.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022105319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022134167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.592" endtime="20201112 10:14:46.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022105319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022134167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.885" endtime="20201112 10:14:46.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.893" endtime="20201112 10:14:46.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.590" endtime="20201112 10:14:46.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.588" endtime="20201112 10:14:46.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:46.900" level="INFO">${RESULT} = [{'time': 0.022134167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8848000000001456e-05, 'source_diff': 2.8848000000001456e-05}, {'time': 0.022168514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:46.896" endtime="20201112 10:14:46.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:46.913" level="INFO">${ACCURACY} = {'time': [0.022134167, 0.022168514, 0.022206542, 0.022248569, 0.022282153, 0.022320444, 0.02235625, 0.022398389, 0.022434167, 0.022470194, 0.022512278, 0.022546653, 0.022582444, 0.022620264, 0.0226566...</msg>
<status status="PASS" starttime="20201112 10:14:46.901" endtime="20201112 10:14:46.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.918" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 10:14:46.917" endtime="20201112 10:14:46.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.920" level="INFO">VALUE: [2.8848000000001456e-05, 2.8832999999998943e-05, 2.8833999999998416e-05, 2.8832999999998943e-05, 2.8235999999997458e-05, 3.0096999999999763e-05, 2.9514000000001317e-05, 2.8833000000002412e-05, 2.94309999999999e-05, 2.8832999999998943e-05, 2.816699999999908e-05, 2.8846999999998513e-05, 2.8277000000000163e-05, 2.8847000000001982e-05, 2.8832999999998943e-05, 2.8834000000001886e-05, 2.8847000000001982e-05, 2.8833000000002412e-05, 2.8833000000002412e-05, 2.8818999999999373e-05, 2.8819000000002842e-05, 2.9443999999999998e-05, 2.822300000000083e-05, 2.8819999999998847e-05, 2.944499999999947e-05, 2.8236000000000927e-05, 2.9443999999999998e-05, 2.9430000000000428e-05, 2.9430000000000428e-05, 2.9457999999999568e-05, 3.0042000000000957e-05, 2.8847000000001982e-05, 2.9457999999999568e-05, 3.0042000000000957e-05, 2.9430000000000428e-05, 2.9458000000003037e-05, 2.9513000000001843e-05, 2.9999999999998778e-05, 3.0138999999998473e-05, 2.8847000000001982e-05, 3.0042000000000957e-05, 3.0027000000001913e-05, 2.8833999999998416e-05, 2.8250000000000497e-05, 3.0055000000001053e-05, 2.9443999999999998e-05, 2.8804999999999803e-05, 2.8236000000000927e-05, 2.8819999999998847e-05, 2.8222000000001357e-05]</msg>
<status status="PASS" starttime="20201112 10:14:46.919" endtime="20201112 10:14:46.921"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.914" endtime="20201112 10:14:46.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.924" endtime="20201112 10:14:46.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:46.927" endtime="20201112 10:14:46.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.926" endtime="20201112 10:14:46.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.922" endtime="20201112 10:14:46.948"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.557" endtime="20201112 10:14:46.948"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.557" endtime="20201112 10:14:46.948"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.957" endtime="20201112 10:14:46.973"></status>
</kw>
<msg timestamp="20201112 10:14:46.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.955" endtime="20201112 10:14:46.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.975" endtime="20201112 10:14:46.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.977" endtime="20201112 10:14:46.979"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.953" endtime="20201112 10:14:46.979"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.951" endtime="20201112 10:14:46.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.986" endtime="20201112 10:14:47.274"></status>
</kw>
<msg timestamp="20201112 10:14:47.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022254736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.985" endtime="20201112 10:14:47.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022223486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022254736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.278" endtime="20201112 10:14:47.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.287" endtime="20201112 10:14:47.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.982" endtime="20201112 10:14:47.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.980" endtime="20201112 10:14:47.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:47.293" level="INFO">${RESULT} = [{'time': 0.022254736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.125000000000003e-05, 'source_diff': 3.125000000000003e-05}, {'time': 0.022296792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:47.290" endtime="20201112 10:14:47.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:47.307" level="INFO">${ACCURACY} = {'time': [0.022254736, 0.022296792, 0.022341056, 0.022376625, 0.022416625, 0.022458667, 0.022494861, 0.022532792, 0.022569139, 0.022607125, 0.022649181, 0.022685014, 0.022727208, 0.022767222, 0.022806...</msg>
<status status="PASS" starttime="20201112 10:14:47.294" endtime="20201112 10:14:47.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.311" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 10:14:47.310" endtime="20201112 10:14:47.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.314" level="INFO">VALUE: [3.125000000000003e-05, 3.1860999999997613e-05, 3.123699999999993e-05, 3.0042000000000957e-05, 3.06249999999994e-05, 3.183400000000142e-05, 3.065300000000201e-05, 3.0013999999998348e-05, 3.180599999999881e-05, 3.065299999999854e-05, 3.184800000000099e-05, 3.061099999999983e-05, 3.1346999999997543e-05, 3.125000000000003e-05, 3.0054999999997584e-05, 3.184800000000099e-05, 3.119400000000175e-05, 3.186100000000108e-05, 3.118100000000165e-05, 3.065199999999907e-05, 3.1263000000000124e-05, 3.065300000000201e-05, 3.188900000000022e-05, 3.063899999999897e-05, 3.183400000000142e-05, 3.187500000000065e-05, 3.065299999999854e-05, 3.12639999999996e-05, 3.190200000000032e-05, 3.0028000000001387e-05, 3.05700000000006e-05, 3.187500000000065e-05, 3.125000000000003e-05, 3.123600000000046e-05, 3.186100000000108e-05, 3.125000000000003e-05, 3.186100000000108e-05, 3.183399999999795e-05, 3.066699999999811e-05, 3.184700000000151e-05, 3.068000000000168e-05, 3.063900000000244e-05, 3.065300000000201e-05, 3.12639999999996e-05, 3.1318999999998404e-05, 3.06249999999994e-05, 3.124999999999656e-05, 3.0069000000000623e-05, 3.072200000000039e-05, 3.187500000000065e-05]</msg>
<status status="PASS" starttime="20201112 10:14:47.313" endtime="20201112 10:14:47.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.308" endtime="20201112 10:14:47.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.317" endtime="20201112 10:14:47.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:47.321" endtime="20201112 10:14:47.340"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.319" endtime="20201112 10:14:47.341"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.316" endtime="20201112 10:14:47.341"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.949" endtime="20201112 10:14:47.341"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.949" endtime="20201112 10:14:47.342"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.350" endtime="20201112 10:14:47.367"></status>
</kw>
<msg timestamp="20201112 10:14:47.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.348" endtime="20201112 10:14:47.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.368" endtime="20201112 10:14:47.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.371" endtime="20201112 10:14:47.373"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.346" endtime="20201112 10:14:47.373"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.344" endtime="20201112 10:14:47.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.380" endtime="20201112 10:14:47.667"></status>
</kw>
<msg timestamp="20201112 10:14:47.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.378" endtime="20201112 10:14:47.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022131153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.672" endtime="20201112 10:14:47.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.680" endtime="20201112 10:14:47.682"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.376" endtime="20201112 10:14:47.682"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.374" endtime="20201112 10:14:47.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:47.687" level="INFO">${RESULT} = [{'time': 0.022164222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3069000000000154e-05, 'source_diff': 3.3069000000000154e-05}, {'time': 0.022212625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:47.683" endtime="20201112 10:14:47.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:47.700" level="INFO">${ACCURACY} = {'time': [0.022164222, 0.022212625, 0.022260347, 0.022308528, 0.022348389, 0.022388486, 0.022432597, 0.022478583, 0.022522542, 0.022568611, 0.022608181, 0.022648653, 0.022694181, 0.022736583, 0.022776...</msg>
<status status="PASS" starttime="20201112 10:14:47.688" endtime="20201112 10:14:47.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.705" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 10:14:47.704" endtime="20201112 10:14:47.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.707" level="INFO">VALUE: [3.3069000000000154e-05, 3.372199999999992e-05, 3.3082999999999724e-05, 3.3610999999999364e-05, 3.366700000000111e-05, 3.302799999999745e-05, 3.424999999999956e-05, 3.244399999999953e-05, 3.306999999999963e-05, 3.3082999999999724e-05, 3.304200000000049e-05, 3.311100000000233e-05, 3.188900000000022e-05, 3.3069000000000154e-05, 3.366599999999817e-05, 3.244399999999953e-05, 3.306999999999963e-05, 3.368100000000068e-05, 3.365299999999807e-05, 3.245899999999857e-05, 3.305600000000006e-05, 3.2444999999999e-05, 3.3069000000000154e-05, 3.4319000000001404e-05, 3.3069000000000154e-05, 3.373599999999949e-05, 3.3610999999999364e-05, 3.247199999999867e-05, 3.368000000000121e-05, 3.24310000000029e-05, 3.3055000000000584e-05, 3.368100000000068e-05, 3.368100000000068e-05, 3.427800000000217e-05, 3.252799999999695e-05, 3.369399999999731e-05, 3.243099999999943e-05, 3.306999999999963e-05, 3.242999999999996e-05, 3.42779999999987e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.302799999999745e-05, 3.24579999999991e-05, 3.366700000000111e-05, 3.365300000000154e-05, 3.305600000000006e-05, 3.4276999999999225e-05, 3.301400000000135e-05, 3.302800000000092e-05]</msg>
<status status="PASS" starttime="20201112 10:14:47.706" endtime="20201112 10:14:47.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.701" endtime="20201112 10:14:47.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.711" endtime="20201112 10:14:47.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:47.714" endtime="20201112 10:14:47.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.713" endtime="20201112 10:14:47.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.709" endtime="20201112 10:14:47.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.343" endtime="20201112 10:14:47.735"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.342" endtime="20201112 10:14:47.735"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.743" endtime="20201112 10:14:47.760"></status>
</kw>
<msg timestamp="20201112 10:14:47.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.742" endtime="20201112 10:14:47.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.761" endtime="20201112 10:14:47.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.764" endtime="20201112 10:14:47.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.739" endtime="20201112 10:14:47.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.737" endtime="20201112 10:14:47.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.773" endtime="20201112 10:14:48.059"></status>
</kw>
<msg timestamp="20201112 10:14:48.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022102083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022136958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.771" endtime="20201112 10:14:48.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022102083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022136958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.064" endtime="20201112 10:14:48.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.072" endtime="20201112 10:14:48.074"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.768" endtime="20201112 10:14:48.074"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.767" endtime="20201112 10:14:48.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:48.079" level="INFO">${RESULT} = [{'time': 0.022136958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4875000000000184e-05, 'source_diff': 3.4875000000000184e-05}, {'time': 0.022181097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:48.075" endtime="20201112 10:14:48.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:48.092" level="INFO">${ACCURACY} = {'time': [0.022136958, 0.022181097, 0.022224944, 0.022270847, 0.022316903, 0.022356875, 0.022405056, 0.022447111, 0.022492903, 0.022537292, 0.022584764, 0.022630944, 0.02267125, 0.022713028, 0.0227591...</msg>
<status status="PASS" starttime="20201112 10:14:48.080" endtime="20201112 10:14:48.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.097" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 10:14:48.096" endtime="20201112 10:14:48.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.099" level="INFO">VALUE: [3.4875000000000184e-05, 3.42779999999987e-05, 3.548600000000124e-05, 3.4902999999999323e-05, 3.4888999999999754e-05, 3.429199999999827e-05, 3.550000000000081e-05, 3.4875000000000184e-05, 3.427800000000217e-05, 3.4875000000000184e-05, 3.42779999999987e-05, 3.550000000000081e-05, 3.6096999999998824e-05, 3.54719999999982e-05, 3.547200000000167e-05, 3.550000000000081e-05, 3.492999999999899e-05, 3.490200000000332e-05, 3.6096999999998824e-05, 3.6096999999998824e-05, 3.426399999999913e-05, 3.4875000000000184e-05, 3.4875000000000184e-05, 3.4276999999999225e-05, 3.6027000000000975e-05, 3.6083000000002724e-05, 3.42779999999987e-05, 3.4875000000000184e-05, 3.544399999999906e-05, 3.607000000000263e-05, 3.609800000000177e-05, 3.4888999999999754e-05, 3.548600000000124e-05, 3.545900000000157e-05, 3.60840000000022e-05, 3.4861000000000614e-05, 3.6083000000002724e-05, 3.4875000000000184e-05, 3.427800000000217e-05, 3.61520000000011e-05, 3.426399999999913e-05, 3.548600000000124e-05, 3.6097000000002294e-05, 3.547299999999767e-05, 3.426399999999913e-05, 3.4888999999999754e-05, 3.4804999999998865e-05, 3.547200000000167e-05, 3.4305000000001834e-05, 3.6055000000000115e-05]</msg>
<status status="PASS" starttime="20201112 10:14:48.098" endtime="20201112 10:14:48.100"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.093" endtime="20201112 10:14:48.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.103" endtime="20201112 10:14:48.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:48.106" endtime="20201112 10:14:48.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.105" endtime="20201112 10:14:48.126"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.101" endtime="20201112 10:14:48.127"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.736" endtime="20201112 10:14:48.127"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.735" endtime="20201112 10:14:48.127"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.136" endtime="20201112 10:14:48.152"></status>
</kw>
<msg timestamp="20201112 10:14:48.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.134" endtime="20201112 10:14:48.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.154" endtime="20201112 10:14:48.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.156" endtime="20201112 10:14:48.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.132" endtime="20201112 10:14:48.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.129" endtime="20201112 10:14:48.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.165" endtime="20201112 10:14:48.452"></status>
</kw>
<msg timestamp="20201112 10:14:48.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022164819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022202153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.164" endtime="20201112 10:14:48.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022164819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022202153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.456" endtime="20201112 10:14:48.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.464" endtime="20201112 10:14:48.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.161" endtime="20201112 10:14:48.467"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.159" endtime="20201112 10:14:48.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:48.471" level="INFO">${RESULT} = [{'time': 0.022202153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.733399999999998e-05, 'source_diff': 3.733399999999998e-05}, {'time': 0.022244014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:48.468" endtime="20201112 10:14:48.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:48.485" level="INFO">${ACCURACY} = {'time': [0.022202153, 0.022244014, 0.022292097, 0.022334458, 0.022382514, 0.022426236, 0.022470444, 0.0225125, 0.022560556, 0.022612056, 0.022660375, 0.022708111, 0.022760194, 0.02280425, 0.022850292...</msg>
<status status="PASS" starttime="20201112 10:14:48.472" endtime="20201112 10:14:48.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.489" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 10:14:48.488" endtime="20201112 10:14:48.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.492" level="INFO">VALUE: [3.733399999999998e-05, 3.670799999999988e-05, 3.7902999999998854e-05, 3.668000000000074e-05, 3.669499999999978e-05, 3.669400000000031e-05, 3.66659999999977e-05, 3.7874999999999714e-05, 3.6681000000000213e-05, 3.72919999999978e-05, 3.7319000000000935e-05, 3.7902999999998854e-05, 3.788799999999981e-05, 3.669400000000031e-05, 3.669499999999978e-05, 3.725000000000256e-05, 3.7291000000001795e-05, 3.6097000000002294e-05, 3.780599999999787e-05, 3.6097000000002294e-05, 3.608399999999873e-05, 3.7888999999999284e-05, 3.6638999999998034e-05, 3.6082999999999255e-05, 3.730600000000084e-05, 3.670799999999988e-05, 3.7319000000000935e-05, 3.669400000000031e-05, 3.6097000000002294e-05, 3.732000000000041e-05, 3.730599999999737e-05, 3.669400000000031e-05, 3.729200000000127e-05, 3.670799999999988e-05, 3.7903000000002324e-05, 3.730600000000084e-05, 3.730600000000084e-05, 3.669400000000031e-05, 3.7903000000002324e-05, 3.669400000000031e-05, 3.790199999999938e-05, 3.669499999999978e-05, 3.791599999999895e-05, 3.794400000000156e-05, 3.729200000000127e-05, 3.7902999999998854e-05, 3.6680999999996744e-05, 3.7305000000001365e-05, 3.669499999999978e-05, 3.723599999999952e-05]</msg>
<status status="PASS" starttime="20201112 10:14:48.490" endtime="20201112 10:14:48.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.486" endtime="20201112 10:14:48.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.495" endtime="20201112 10:14:48.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:48.499" endtime="20201112 10:14:48.518"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.497" endtime="20201112 10:14:48.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.494" endtime="20201112 10:14:48.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.128" endtime="20201112 10:14:48.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.127" endtime="20201112 10:14:48.519"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.528" endtime="20201112 10:14:48.544"></status>
</kw>
<msg timestamp="20201112 10:14:48.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.526" endtime="20201112 10:14:48.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.545" endtime="20201112 10:14:48.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.548" endtime="20201112 10:14:48.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.524" endtime="20201112 10:14:48.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.522" endtime="20201112 10:14:48.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.557" endtime="20201112 10:14:48.846"></status>
</kw>
<msg timestamp="20201112 10:14:48.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022094139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.555" endtime="20201112 10:14:48.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022094139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.850" endtime="20201112 10:14:48.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.858" endtime="20201112 10:14:48.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.553" endtime="20201112 10:14:48.861"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.551" endtime="20201112 10:14:48.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:48.865" level="INFO">${RESULT} = [{'time': 0.022094139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9096999999998355e-05, 'source_diff': 3.9096999999998355e-05}, {'time': 0.022146542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:48.862" endtime="20201112 10:14:48.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:48.880" level="INFO">${ACCURACY} = {'time': [0.022094139, 0.022146542, 0.022192597, 0.02223875, 0.022282625, 0.022328264, 0.022374417, 0.022422472, 0.022474639, 0.022522347, 0.022572403, 0.022618222, 0.022664389, 0.022712458, 0.0227646...</msg>
<status status="PASS" starttime="20201112 10:14:48.866" endtime="20201112 10:14:48.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.885" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 10:14:48.884" endtime="20201112 10:14:48.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.888" level="INFO">VALUE: [3.9096999999998355e-05, 3.9709000000002354e-05, 3.919400000000281e-05, 3.972200000000245e-05, 3.970799999999941e-05, 3.97920000000003e-05, 3.852799999999948e-05, 3.972199999999898e-05, 3.8431000000001964e-05, 3.850000000000034e-05, 3.9695000000002784e-05, 3.9125000000000965e-05, 3.848600000000077e-05, 3.970800000000288e-05, 3.970799999999941e-05, 3.90980000000013e-05, 3.7902999999998854e-05, 3.90980000000013e-05, 3.848600000000077e-05, 3.850000000000034e-05, 3.844400000000206e-05, 3.848600000000077e-05, 3.9096999999998355e-05, 3.9125000000000965e-05, 3.972199999999898e-05, 3.9125000000000965e-05, 3.9125000000000965e-05, 3.9125000000000965e-05, 3.7888999999999284e-05, 3.9709000000002354e-05, 3.848600000000077e-05, 3.9180999999999244e-05, 3.848600000000077e-05, 3.977800000000073e-05, 3.9125000000000965e-05, 3.96660000000007e-05, 3.9709000000002354e-05, 3.9111000000001395e-05, 3.970799999999941e-05, 3.851399999999991e-05, 3.8459000000001103e-05, 3.9110999999997925e-05, 3.972199999999898e-05, 3.851399999999991e-05, 3.850000000000034e-05, 3.9125000000000965e-05, 3.9083000000002255e-05, 4.0346999999999605e-05, 3.84720000000012e-05, 3.9680999999999744e-05]</msg>
<status status="PASS" starttime="20201112 10:14:48.886" endtime="20201112 10:14:48.889"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.881" endtime="20201112 10:14:48.889"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.892" endtime="20201112 10:14:48.893"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:48.896" endtime="20201112 10:14:48.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.894" endtime="20201112 10:14:48.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.890" endtime="20201112 10:14:48.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.520" endtime="20201112 10:14:48.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.520" endtime="20201112 10:14:48.917"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.926" endtime="20201112 10:14:48.943"></status>
</kw>
<msg timestamp="20201112 10:14:48.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.925" endtime="20201112 10:14:48.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.944" endtime="20201112 10:14:48.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.947" endtime="20201112 10:14:48.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.922" endtime="20201112 10:14:48.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.920" endtime="20201112 10:14:48.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.956" endtime="20201112 10:14:49.244"></status>
</kw>
<msg timestamp="20201112 10:14:49.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022936069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022977583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.955" endtime="20201112 10:14:49.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022936069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022977583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.249" endtime="20201112 10:14:49.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.257" endtime="20201112 10:14:49.259"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.952" endtime="20201112 10:14:49.260"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.950" endtime="20201112 10:14:49.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:49.264" level="INFO">${RESULT} = [{'time': 0.022977583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.151399999999944e-05, 'source_diff': 4.151399999999944e-05}, {'time': 0.023027514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:49.261" endtime="20201112 10:14:49.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:49.278" level="INFO">${ACCURACY} = {'time': [0.022977583, 0.023027514, 0.023077917, 0.023123681, 0.023177625, 0.023225889, 0.023277833, 0.023327611, 0.023375597, 0.023426, 0.023475944, 0.023521569, 0.023575667, 0.023624014, 0.023676153...</msg>
<status status="PASS" starttime="20201112 10:14:49.265" endtime="20201112 10:14:49.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.283" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 10:14:49.282" endtime="20201112 10:14:49.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.286" level="INFO">VALUE: [4.151399999999944e-05, 4.0916999999997955e-05, 4.152799999999901e-05, 4.0931000000000994e-05, 4.0874999999999245e-05, 4.0888999999998815e-05, 4.091600000000195e-05, 4.0917000000001424e-05, 4.094400000000109e-05, 4.0916999999997955e-05, 4.091599999999848e-05, 4.0874999999999245e-05, 4.0917000000001424e-05, 4.031999999999994e-05, 4.2124999999997026e-05, 4.030600000000037e-05, 4.2125000000000495e-05, 4.0902999999998385e-05, 4.0931000000000994e-05, 4.091600000000195e-05, 4.02920000000008e-05, 4.151399999999944e-05, 4.151399999999944e-05, 4.154199999999858e-05, 4.149999999999987e-05, 4.0931000000000994e-05, 4.026399999999819e-05, 4.151399999999944e-05, 4.152799999999901e-05, 4.152800000000248e-05, 4.097200000000023e-05, 4.0305000000000896e-05, 4.0305000000000896e-05, 4.031999999999994e-05, 4.1445000000001064e-05, 4.151400000000291e-05, 4.152799999999901e-05, 4.1512999999999967e-05, 4.0917000000001424e-05, 4.1540999999999106e-05, 4.220800000000191e-05, 4.2152999999999635e-05, 4.2152999999999635e-05, 4.0931000000000994e-05, 4.0917000000001424e-05, 4.157000000000119e-05, 4.0889000000002285e-05, 4.0917000000001424e-05, 4.2124999999997026e-05, 4.091599999999848e-05]</msg>
<status status="PASS" starttime="20201112 10:14:49.284" endtime="20201112 10:14:49.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.279" endtime="20201112 10:14:49.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.290" endtime="20201112 10:14:49.292"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:49.294" endtime="20201112 10:14:49.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.292" endtime="20201112 10:14:49.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.288" endtime="20201112 10:14:49.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.918" endtime="20201112 10:14:49.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.917" endtime="20201112 10:14:49.315"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.325" endtime="20201112 10:14:49.342"></status>
</kw>
<msg timestamp="20201112 10:14:49.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.323" endtime="20201112 10:14:49.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.343" endtime="20201112 10:14:49.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.346" endtime="20201112 10:14:49.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.320" endtime="20201112 10:14:49.348"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.318" endtime="20201112 10:14:49.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.355" endtime="20201112 10:14:49.642"></status>
</kw>
<msg timestamp="20201112 10:14:49.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02303125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023073389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:49.354" endtime="20201112 10:14:49.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02303125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023073389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:49.646" endtime="20201112 10:14:49.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.655" endtime="20201112 10:14:49.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.351" endtime="20201112 10:14:49.657"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.349" endtime="20201112 10:14:49.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:49.662" level="INFO">${RESULT} = [{'time': 0.023073389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2139000000000065e-05, 'source_diff': 4.2139000000000065e-05}, {'time': 0.023125583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:49.658" endtime="20201112 10:14:49.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:49.676" level="INFO">${ACCURACY} = {'time': [0.023073389, 0.023125583, 0.023183431, 0.023231528, 0.023287736, 0.023339417, 0.023395514, 0.023447431, 0.023505292, 0.023557403, 0.023613542, 0.023665833, 0.023713347, 0.023761417, 0.023819...</msg>
<status status="PASS" starttime="20201112 10:14:49.663" endtime="20201112 10:14:49.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.681" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 10:14:49.680" endtime="20201112 10:14:49.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.683" level="INFO">VALUE: [4.2139000000000065e-05, 4.3347000000002606e-05, 4.333400000000251e-05, 4.273600000000155e-05, 4.3332999999999566e-05, 4.334800000000208e-05, 4.274999999999765e-05, 4.2723000000001454e-05, 4.333399999999904e-05, 4.276400000000069e-05, 4.2125000000000495e-05, 4.393000000000105e-05, 4.3332999999999566e-05, 4.273600000000155e-05, 4.392999999999758e-05, 4.273600000000155e-05, 4.3318999999999996e-05, 4.394400000000062e-05, 4.333399999999904e-05, 4.3347000000002606e-05, 4.3347000000002606e-05, 4.334800000000208e-05, 4.333399999999904e-05, 4.272200000000198e-05, 4.3346999999999136e-05, 4.3874999999998776e-05, 4.343000000000055e-05, 4.3346999999999136e-05, 4.2125000000000495e-05, 4.3347000000002606e-05, 4.3346999999999136e-05, 4.3346999999999136e-05, 4.276400000000069e-05, 4.2722999999997985e-05, 4.2125000000000495e-05, 4.2083000000001786e-05, 4.3958999999999665e-05, 4.3346999999999136e-05, 4.272200000000198e-05, 4.395800000000019e-05, 4.275000000000112e-05, 4.273600000000155e-05, 4.3361000000002176e-05, 4.3346999999999136e-05, 4.394399999999715e-05, 4.3332999999999566e-05, 4.3958999999999665e-05, 4.2111000000000925e-05, 4.3931000000000525e-05, 4.3931000000000525e-05]</msg>
<status status="PASS" starttime="20201112 10:14:49.682" endtime="20201112 10:14:49.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.677" endtime="20201112 10:14:49.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.687" endtime="20201112 10:14:49.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:49.691" endtime="20201112 10:14:49.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.689" endtime="20201112 10:14:49.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.685" endtime="20201112 10:14:49.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.316" endtime="20201112 10:14:49.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.316" endtime="20201112 10:14:49.711"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.720" endtime="20201112 10:14:49.738"></status>
</kw>
<msg timestamp="20201112 10:14:49.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.719" endtime="20201112 10:14:49.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.740" endtime="20201112 10:14:49.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.742" endtime="20201112 10:14:49.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.716" endtime="20201112 10:14:49.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.714" endtime="20201112 10:14:49.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.752" endtime="20201112 10:14:50.039"></status>
</kw>
<msg timestamp="20201112 10:14:50.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022756431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022801528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.750" endtime="20201112 10:14:50.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022756431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022801528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.044" endtime="20201112 10:14:50.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.052" endtime="20201112 10:14:50.054"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.748" endtime="20201112 10:14:50.054"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.746" endtime="20201112 10:14:50.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:50.059" level="INFO">${RESULT} = [{'time': 0.022801528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5097000000000886e-05, 'source_diff': 4.5097000000000886e-05}, {'time': 0.022861792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:50.056" endtime="20201112 10:14:50.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:50.073" level="INFO">${ACCURACY} = {'time': [0.022801528, 0.022861792, 0.022911736, 0.02296525, 0.023023181, 0.02307975, 0.023131319, 0.023191444, 0.023241681, 0.023299569, 0.023355194, 0.023411833, 0.023467722, 0.023527333, 0.02358527...</msg>
<status status="PASS" starttime="20201112 10:14:50.060" endtime="20201112 10:14:50.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.078" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 10:14:50.077" endtime="20201112 10:14:50.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.081" level="INFO">VALUE: [4.5097000000000886e-05, 4.634799999999814e-05, 4.5152999999999166e-05, 4.5166999999998736e-05, 4.575000000000065e-05, 4.454199999999811e-05, 4.454100000000211e-05, 4.576299999999728e-05, 4.457000000000072e-05, 4.455499999999821e-05, 4.394400000000062e-05, 4.4597000000000386e-05, 4.576400000000022e-05, 4.575000000000065e-05, 4.575000000000065e-05, 4.508400000000079e-05, 4.5138999999999596e-05, 4.634699999999867e-05, 4.5166999999998736e-05, 4.5139000000003066e-05, 4.5152999999999166e-05, 4.505499999999871e-05, 4.573600000000108e-05, 4.6347000000002136e-05, 4.455599999999768e-05, 4.515199999999969e-05, 4.452799999999854e-05, 4.5152999999999166e-05, 4.454199999999811e-05, 4.575000000000065e-05, 4.5138999999999596e-05, 4.515199999999969e-05, 4.451399999999897e-05, 4.5195000000001345e-05, 4.576399999999675e-05, 4.576400000000022e-05, 4.5111000000000456e-05, 4.574999999999718e-05, 4.5152999999999166e-05, 4.3945000000000095e-05, 4.454200000000158e-05, 4.576399999999675e-05, 4.5125000000000026e-05, 4.5153000000002635e-05, 4.576400000000022e-05, 4.4555000000001677e-05, 4.4555000000001677e-05, 4.5083000000001316e-05, 4.5125000000000026e-05, 4.394400000000062e-05]</msg>
<status status="PASS" starttime="20201112 10:14:50.079" endtime="20201112 10:14:50.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.074" endtime="20201112 10:14:50.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.095" endtime="20201112 10:14:50.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:50.099" endtime="20201112 10:14:50.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.097" endtime="20201112 10:14:50.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.093" endtime="20201112 10:14:50.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.712" endtime="20201112 10:14:50.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.712" endtime="20201112 10:14:50.120"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.129" endtime="20201112 10:14:50.146"></status>
</kw>
<msg timestamp="20201112 10:14:50.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.127" endtime="20201112 10:14:50.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.147" endtime="20201112 10:14:50.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.150" endtime="20201112 10:14:50.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.124" endtime="20201112 10:14:50.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.122" endtime="20201112 10:14:50.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.159" endtime="20201112 10:14:50.448"></status>
</kw>
<msg timestamp="20201112 10:14:50.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022864667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022912236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.158" endtime="20201112 10:14:50.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022864667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022912236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.453" endtime="20201112 10:14:50.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.461" endtime="20201112 10:14:50.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.155" endtime="20201112 10:14:50.464"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.153" endtime="20201112 10:14:50.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:50.468" level="INFO">${RESULT} = [{'time': 0.022912236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.756899999999731e-05, 'source_diff': 4.756899999999731e-05}, {'time': 0.022964528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:50.465" endtime="20201112 10:14:50.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:50.482" level="INFO">${ACCURACY} = {'time': [0.022912236, 0.022964528, 0.023018514, 0.023074375, 0.023128264, 0.023184472, 0.023244292, 0.023296222, 0.023352375, 0.023410264, 0.023468139, 0.023524389, 0.023578097, 0.023636597, 0.023692...</msg>
<status status="PASS" starttime="20201112 10:14:50.469" endtime="20201112 10:14:50.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.487" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 10:14:50.486" endtime="20201112 10:14:50.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.490" level="INFO">VALUE: [4.756899999999731e-05, 4.759699999999992e-05, 4.8167000000001736e-05, 4.8153000000002166e-05, 4.636099999999824e-05, 4.6361000000001706e-05, 4.6958999999999196e-05, 4.75139999999985e-05, 4.697200000000276e-05, 4.6375000000001276e-05, 4.63329999999991e-05, 4.755600000000068e-05, 4.630499999999996e-05, 4.697199999999929e-05, 4.691699999999702e-05, 4.6958999999999196e-05, 4.6347000000002136e-05, 4.694400000000015e-05, 4.757000000000025e-05, 4.6973000000002235e-05, 4.6375000000001276e-05, 4.6430999999999556e-05, 4.759699999999992e-05, 4.756900000000078e-05, 4.8181000000001306e-05, 4.636200000000118e-05, 4.695799999999972e-05, 4.756899999999731e-05, 4.758300000000035e-05, 4.6945000000003095e-05, 4.755600000000068e-05, 4.816699999999827e-05, 4.63329999999991e-05, 4.755600000000068e-05, 4.6416999999999986e-05, 4.697199999999929e-05, 4.636199999999771e-05, 4.634699999999867e-05, 4.81940000000014e-05, 4.697199999999929e-05, 4.758300000000035e-05, 4.755499999999774e-05, 4.638899999999738e-05, 4.634800000000161e-05, 4.761099999999949e-05, 4.697199999999929e-05, 4.640200000000094e-05, 4.813800000000312e-05, 4.637499999999781e-05, 4.634699999999867e-05]</msg>
<status status="PASS" starttime="20201112 10:14:50.488" endtime="20201112 10:14:50.491"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.483" endtime="20201112 10:14:50.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.494" endtime="20201112 10:14:50.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:50.497" endtime="20201112 10:14:50.516"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.496" endtime="20201112 10:14:50.517"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.492" endtime="20201112 10:14:50.518"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.121" endtime="20201112 10:14:50.518"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.120" endtime="20201112 10:14:50.518"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.527" endtime="20201112 10:14:50.544"></status>
</kw>
<msg timestamp="20201112 10:14:50.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.525" endtime="20201112 10:14:50.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.545" endtime="20201112 10:14:50.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.548" endtime="20201112 10:14:50.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.523" endtime="20201112 10:14:50.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.521" endtime="20201112 10:14:50.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.557" endtime="20201112 10:14:50.845"></status>
</kw>
<msg timestamp="20201112 10:14:50.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022678931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022727667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.556" endtime="20201112 10:14:50.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022678931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022727667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.849" endtime="20201112 10:14:50.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.858" endtime="20201112 10:14:50.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.553" endtime="20201112 10:14:50.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.551" endtime="20201112 10:14:50.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:50.865" level="INFO">${RESULT} = [{'time': 0.022727667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.873600000000061e-05, 'source_diff': 4.873600000000061e-05}, {'time': 0.022789514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:50.861" endtime="20201112 10:14:50.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:50.879" level="INFO">${ACCURACY} = {'time': [0.022727667, 0.022789514, 0.022845375, 0.022905403, 0.022963375, 0.023017444, 0.023075458, 0.023133681, 0.023195375, 0.023251375, 0.023305583, 0.023365417, 0.023421278, 0.023483611, 0.023537...</msg>
<status status="PASS" starttime="20201112 10:14:50.866" endtime="20201112 10:14:50.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.883" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 10:14:50.882" endtime="20201112 10:14:50.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.886" level="INFO">VALUE: [4.873600000000061e-05, 4.994499999999916e-05, 5.002800000000057e-05, 4.933400000000157e-05, 4.872200000000104e-05, 4.937500000000081e-05, 4.995799999999925e-05, 4.937500000000081e-05, 4.813899999999913e-05, 4.880600000000193e-05, 4.938900000000038e-05, 4.998599999999839e-05, 4.8181000000001306e-05, 4.997200000000229e-05, 4.937500000000081e-05, 4.877699999999985e-05, 4.877799999999932e-05, 4.937500000000081e-05, 4.944399999999918e-05, 4.818000000000183e-05, 4.998600000000186e-05, 4.998599999999839e-05, 4.938899999999691e-05, 4.8139000000002596e-05, 4.876399999999975e-05, 4.8167000000001736e-05, 4.884800000000064e-05, 4.8181000000001306e-05, 4.875000000000018e-05, 4.999999999999796e-05, 4.818099999999784e-05, 4.876399999999975e-05, 4.877799999999932e-05, 4.877800000000279e-05, 4.873600000000061e-05, 4.938900000000038e-05, 4.816699999999827e-05, 4.936100000000124e-05, 4.819399999999793e-05, 4.879199999999889e-05, 4.938900000000038e-05, 4.999999999999796e-05, 4.931999999999853e-05, 4.997199999999882e-05, 4.817999999999836e-05, 4.938900000000038e-05, 4.938900000000038e-05, 4.876399999999975e-05, 4.877800000000279e-05, 4.818000000000183e-05]</msg>
<status status="PASS" starttime="20201112 10:14:50.885" endtime="20201112 10:14:50.887"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.880" endtime="20201112 10:14:50.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.890" endtime="20201112 10:14:50.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:50.893" endtime="20201112 10:14:50.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.892" endtime="20201112 10:14:50.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.888" endtime="20201112 10:14:50.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.519" endtime="20201112 10:14:50.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.518" endtime="20201112 10:14:50.914"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.923" endtime="20201112 10:14:50.941"></status>
</kw>
<msg timestamp="20201112 10:14:50.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.922" endtime="20201112 10:14:50.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.943" endtime="20201112 10:14:50.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.945" endtime="20201112 10:14:50.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.919" endtime="20201112 10:14:50.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.917" endtime="20201112 10:14:50.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.955" endtime="20201112 10:14:51.240"></status>
</kw>
<msg timestamp="20201112 10:14:51.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022772111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.953" endtime="20201112 10:14:51.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022772111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022823306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.245" endtime="20201112 10:14:51.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.253" endtime="20201112 10:14:51.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.950" endtime="20201112 10:14:51.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.948" endtime="20201112 10:14:51.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:51.260" level="INFO">${RESULT} = [{'time': 0.022823306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.119500000000041e-05, 'source_diff': 5.119500000000041e-05}, {'time': 0.02288125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:51.257" endtime="20201112 10:14:51.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:51.274" level="INFO">${ACCURACY} = {'time': [0.022823306, 0.02288125, 0.022941458, 0.023001792, 0.023061764, 0.023119583, 0.023185833, 0.023247556, 0.023303403, 0.023367403, 0.023425625, 0.023483569, 0.023541833, 0.023601347, 0.0236618...</msg>
<status status="PASS" starttime="20201112 10:14:51.261" endtime="20201112 10:14:51.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.279" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 10:14:51.278" endtime="20201112 10:14:51.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.282" level="INFO">VALUE: [5.119500000000041e-05, 5.05279999999976e-05, 5.118000000000136e-05, 5.182000000000103e-05, 5.180599999999799e-05, 5.177699999999938e-05, 5.237500000000034e-05, 5.119500000000041e-05, 4.998600000000186e-05, 4.998599999999839e-05, 5.1193999999997464e-05, 5.05409999999977e-05, 5.058299999999988e-05, 4.997200000000229e-05, 5.180499999999852e-05, 5.118100000000084e-05, 5.058299999999988e-05, 5.118100000000084e-05, 5.118100000000084e-05, 5.119500000000041e-05, 5.113900000000213e-05, 5.176400000000275e-05, 5.12080000000005e-05, 5.119500000000041e-05, 5.180599999999799e-05, 5.179200000000189e-05, 4.998600000000186e-05, 5.18470000000007e-05, 5.238899999999991e-05, 5.059699999999945e-05, 5.061099999999902e-05, 4.9972999999998297e-05, 5.119500000000041e-05, 5.125000000000268e-05, 5.119499999999694e-05, 5.052800000000107e-05, 5.119400000000093e-05, 5.119400000000093e-05, 5.183300000000113e-05, 5.061099999999902e-05, 5.119400000000093e-05, 5.180499999999852e-05, 5.122299999999955e-05, 5.119400000000093e-05, 5.181899999999809e-05, 5.119400000000093e-05, 5.118100000000084e-05, 5.051399999999803e-05, 5.119400000000093e-05, 5.119400000000093e-05]</msg>
<status status="PASS" starttime="20201112 10:14:51.280" endtime="20201112 10:14:51.282"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.275" endtime="20201112 10:14:51.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.285" endtime="20201112 10:14:51.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:51.289" endtime="20201112 10:14:51.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.287" endtime="20201112 10:14:51.309"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.284" endtime="20201112 10:14:51.309"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.915" endtime="20201112 10:14:51.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.915" endtime="20201112 10:14:51.310"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.319" endtime="20201112 10:14:51.336"></status>
</kw>
<msg timestamp="20201112 10:14:51.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.317" endtime="20201112 10:14:51.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.338" endtime="20201112 10:14:51.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.341" endtime="20201112 10:14:51.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.314" endtime="20201112 10:14:51.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.312" endtime="20201112 10:14:51.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.350" endtime="20201112 10:14:51.638"></status>
</kw>
<msg timestamp="20201112 10:14:51.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023045875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023098861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.348" endtime="20201112 10:14:51.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023045875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023098861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.643" endtime="20201112 10:14:51.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.651" endtime="20201112 10:14:51.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.346" endtime="20201112 10:14:51.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.344" endtime="20201112 10:14:51.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:51.658" level="INFO">${RESULT} = [{'time': 0.023098861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2985999999997924e-05, 'source_diff': 5.2985999999997924e-05}, {'time': 0.023156806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:51.655" endtime="20201112 10:14:51.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:51.672" level="INFO">${ACCURACY} = {'time': [0.023098861, 0.023156806, 0.023225014, 0.023292819, 0.023350736, 0.023408875, 0.023469083, 0.023533097, 0.023598514, 0.023664875, 0.023724708, 0.023790917, 0.023855125, 0.023923083, 0.023982...</msg>
<status status="PASS" starttime="20201112 10:14:51.659" endtime="20201112 10:14:51.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.677" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 10:14:51.676" endtime="20201112 10:14:51.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.679" level="INFO">VALUE: [5.2985999999997924e-05, 5.237499999999687e-05, 5.4208000000000034e-05, 5.359699999999898e-05, 5.238899999999991e-05, 5.361099999999855e-05, 5.301400000000053e-05, 5.300000000000096e-05, 5.238899999999991e-05, 5.2999999999997494e-05, 5.363900000000116e-05, 5.420900000000298e-05, 5.300000000000096e-05, 5.359700000000245e-05, 5.3666000000000824e-05, 5.300000000000096e-05, 5.4208000000000034e-05, 5.238899999999991e-05, 5.247200000000132e-05, 5.361100000000202e-05, 5.359699999999898e-05, 5.240299999999948e-05, 5.420899999999951e-05, 5.238899999999991e-05, 5.301400000000053e-05, 5.301400000000053e-05, 5.300000000000096e-05, 5.419499999999994e-05, 5.4221999999999604e-05, 5.359799999999845e-05, 5.240299999999948e-05, 5.237500000000034e-05, 5.359699999999898e-05, 5.305499999999977e-05, 5.2471999999997854e-05, 5.361099999999855e-05, 5.2985999999997924e-05, 5.355500000000027e-05, 5.361100000000202e-05, 5.244499999999819e-05, 5.361099999999855e-05, 5.300000000000096e-05, 5.300000000000096e-05, 5.4194000000000464e-05, 5.300000000000096e-05, 5.238899999999991e-05, 5.361099999999855e-05, 5.2985999999997924e-05, 5.4208000000000034e-05, 5.361099999999855e-05]</msg>
<status status="PASS" starttime="20201112 10:14:51.678" endtime="20201112 10:14:51.680"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.673" endtime="20201112 10:14:51.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.683" endtime="20201112 10:14:51.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:51.687" endtime="20201112 10:14:51.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.685" endtime="20201112 10:14:51.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.681" endtime="20201112 10:14:51.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.311" endtime="20201112 10:14:51.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.310" endtime="20201112 10:14:51.708"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.717" endtime="20201112 10:14:51.734"></status>
</kw>
<msg timestamp="20201112 10:14:51.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.715" endtime="20201112 10:14:51.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.736" endtime="20201112 10:14:51.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.738" endtime="20201112 10:14:51.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.712" endtime="20201112 10:14:51.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.710" endtime="20201112 10:14:51.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.748" endtime="20201112 10:14:52.037"></status>
</kw>
<msg timestamp="20201112 10:14:52.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022809, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:51.746" endtime="20201112 10:14:52.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022754167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022809, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:52.041" endtime="20201112 10:14:52.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.050" endtime="20201112 10:14:52.051"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.744" endtime="20201112 10:14:52.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.742" endtime="20201112 10:14:52.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:52.057" level="INFO">${RESULT} = [{'time': 0.022809, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.483300000000066e-05, 'source_diff': 5.483300000000066e-05}, {'time': 0.022868722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:14:52.053" endtime="20201112 10:14:52.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:52.071" level="INFO">${ACCURACY} = {'time': [0.022809, 0.022868722, 0.022934792, 0.023001028, 0.023064528, 0.023124861, 0.023186694, 0.023250611, 0.023316944, 0.023382778, 0.023448514, 0.023516653, 0.023583014, 0.023643125, 0.023704736...</msg>
<status status="PASS" starttime="20201112 10:14:52.058" endtime="20201112 10:14:52.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.075" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 10:14:52.074" endtime="20201112 10:14:52.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.078" level="INFO">VALUE: [5.483300000000066e-05, 5.4208000000000034e-05, 5.420899999999951e-05, 5.6041999999999204e-05, 5.482000000000056e-05, 5.481900000000109e-05, 5.481900000000109e-05, 5.4221999999999604e-05, 5.481899999999762e-05, 5.480600000000099e-05, 5.419499999999994e-05, 5.544499999999772e-05, 5.6014000000000064e-05, 5.540300000000248e-05, 5.541700000000205e-05, 5.602699999999669e-05, 5.4221999999999604e-05, 5.4221999999999604e-05, 5.6014000000000064e-05, 5.541699999999858e-05, 5.482000000000056e-05, 5.483300000000066e-05, 5.6027999999999634e-05, 5.48609999999998e-05, 5.6014000000000064e-05, 5.536099999999683e-05, 5.6027999999999634e-05, 5.480500000000152e-05, 5.5429999999998675e-05, 5.5387999999999965e-05, 5.4221999999999604e-05, 5.602700000000016e-05, 5.6014000000000064e-05, 5.6014000000000064e-05, 5.5415999999999105e-05, 5.6027999999999634e-05, 5.5458000000001284e-05, 5.6027999999999634e-05, 5.541700000000205e-05, 5.544499999999772e-05, 5.541699999999858e-05, 5.4194000000000464e-05, 5.4208000000000034e-05, 5.6000000000000494e-05, 5.481899999999762e-05, 5.480600000000099e-05, 5.543100000000162e-05, 5.481900000000109e-05, 5.420899999999951e-05, 5.48609999999998e-05]</msg>
<status status="PASS" starttime="20201112 10:14:52.076" endtime="20201112 10:14:52.079"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.071" endtime="20201112 10:14:52.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.082" endtime="20201112 10:14:52.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:52.085" endtime="20201112 10:14:52.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.083" endtime="20201112 10:14:52.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.080" endtime="20201112 10:14:52.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.709" endtime="20201112 10:14:52.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.708" endtime="20201112 10:14:52.106"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.116" endtime="20201112 10:14:52.133"></status>
</kw>
<msg timestamp="20201112 10:14:52.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.114" endtime="20201112 10:14:52.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.135" endtime="20201112 10:14:52.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.137" endtime="20201112 10:14:52.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.111" endtime="20201112 10:14:52.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.109" endtime="20201112 10:14:52.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.147" endtime="20201112 10:14:52.435"></status>
</kw>
<msg timestamp="20201112 10:14:52.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023884972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023942806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.145" endtime="20201112 10:14:52.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023884972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023942806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.439" endtime="20201112 10:14:52.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.448" endtime="20201112 10:14:52.450"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.142" endtime="20201112 10:14:52.450"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.140" endtime="20201112 10:14:52.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:52.455" level="INFO">${RESULT} = [{'time': 0.023942806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7833999999999663e-05, 'source_diff': 5.7833999999999663e-05}, {'time': 0.024015333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:52.452" endtime="20201112 10:14:52.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:52.469" level="INFO">${ACCURACY} = {'time': [0.023942806, 0.024015333, 0.024080944, 0.024145056, 0.024211042, 0.024273056, 0.024340889, 0.024410917, 0.024482931, 0.024545292, 0.024615361, 0.024685014, 0.024749403, 0.024813472, 0.024877...</msg>
<status status="PASS" starttime="20201112 10:14:52.456" endtime="20201112 10:14:52.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.474" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 10:14:52.473" endtime="20201112 10:14:52.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.476" level="INFO">VALUE: [5.7833999999999663e-05, 5.781900000000062e-05, 5.7916000000001605e-05, 5.7820000000000094e-05, 5.662499999999765e-05, 5.78480000000027e-05, 5.663900000000069e-05, 5.786099999999933e-05, 5.7833999999999663e-05, 5.7820000000000094e-05, 5.786099999999933e-05, 5.7820000000000094e-05, 5.786099999999933e-05, 5.7221999999999135e-05, 5.723700000000165e-05, 5.7235999999998705e-05, 5.663899999999722e-05, 5.723700000000165e-05, 5.7806000000000524e-05, 5.722299999999861e-05, 5.723700000000165e-05, 5.662500000000112e-05, 5.71809999999999e-05, 5.7221999999999135e-05, 5.663900000000069e-05, 5.666699999999983e-05, 5.723699999999818e-05, 5.781900000000062e-05, 5.661100000000155e-05, 5.7833999999999663e-05, 5.662499999999765e-05, 5.783400000000313e-05, 5.661100000000155e-05, 5.661100000000155e-05, 5.783299999999672e-05, 5.7235999999998705e-05, 5.662500000000112e-05, 5.662500000000112e-05, 5.663900000000069e-05, 5.7820000000000094e-05, 5.662499999999765e-05, 5.7833999999999663e-05, 5.786099999999933e-05, 5.661100000000155e-05, 5.787500000000237e-05, 5.7235999999998705e-05, 5.7221999999999135e-05, 5.6041999999999204e-05, 5.662499999999765e-05, 5.7236000000002174e-05]</msg>
<status status="PASS" starttime="20201112 10:14:52.475" endtime="20201112 10:14:52.477"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.470" endtime="20201112 10:14:52.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.480" endtime="20201112 10:14:52.482"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:52.484" endtime="20201112 10:14:52.503"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.482" endtime="20201112 10:14:52.504"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.478" endtime="20201112 10:14:52.504"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.107" endtime="20201112 10:14:52.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.106" endtime="20201112 10:14:52.505"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.514" endtime="20201112 10:14:52.532"></status>
</kw>
<msg timestamp="20201112 10:14:52.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.512" endtime="20201112 10:14:52.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.533" endtime="20201112 10:14:52.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.536" endtime="20201112 10:14:52.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.509" endtime="20201112 10:14:52.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.507" endtime="20201112 10:14:52.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.545" endtime="20201112 10:14:52.833"></status>
</kw>
<msg timestamp="20201112 10:14:52.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022780764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022839847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.544" endtime="20201112 10:14:52.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022780764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022839847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.837" endtime="20201112 10:14:52.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.846" endtime="20201112 10:14:52.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.541" endtime="20201112 10:14:52.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.539" endtime="20201112 10:14:52.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:52.853" level="INFO">${RESULT} = [{'time': 0.022839847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.908300000000144e-05, 'source_diff': 5.908300000000144e-05}, {'time': 0.022912278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:52.849" endtime="20201112 10:14:52.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:52.867" level="INFO">${ACCURACY} = {'time': [0.022839847, 0.022912278, 0.022985958, 0.023058264, 0.023130208, 0.023194222, 0.023260181, 0.023323931, 0.023388264, 0.023452083, 0.023521972, 0.023588153, 0.023656292, 0.023722, 0.023785819...</msg>
<status status="PASS" starttime="20201112 10:14:52.854" endtime="20201112 10:14:52.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.871" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 10:14:52.870" endtime="20201112 10:14:52.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.874" level="INFO">VALUE: [5.908300000000144e-05, 5.845900000000029e-05, 5.9652000000000316e-05, 5.8471999999996915e-05, 5.8415999999998636e-05, 5.965299999999979e-05, 5.843100000000115e-05, 5.9055999999998304e-05, 5.965299999999979e-05, 5.95689999999989e-05, 5.9707999999998596e-05, 5.9042000000002204e-05, 6.0278000000000415e-05, 5.9041999999998734e-05, 5.9652000000000316e-05, 5.8444000000001245e-05, 5.9652000000000316e-05, 5.904099999999926e-05, 5.843100000000115e-05, 5.9041999999998734e-05, 5.9665999999999886e-05, 5.8430000000001675e-05, 5.8513999999999095e-05, 5.844500000000072e-05, 5.844500000000072e-05, 5.912500000000015e-05, 5.9027999999999164e-05, 5.965299999999979e-05, 5.965299999999979e-05, 5.844499999999725e-05, 5.9056000000001774e-05, 5.8443999999997776e-05, 6.0249999999997805e-05, 5.845900000000029e-05, 5.9652000000000316e-05, 5.8458000000000815e-05, 5.9652000000000316e-05, 5.905499999999883e-05, 5.9055999999998304e-05, 5.965299999999979e-05, 5.965300000000326e-05, 5.8458000000000815e-05, 5.838900000000244e-05, 6.0235999999998235e-05, 5.905499999999883e-05, 5.845900000000029e-05, 5.8458000000000815e-05, 5.9652000000000316e-05, 5.965299999999979e-05, 5.904100000000273e-05]</msg>
<status status="PASS" starttime="20201112 10:14:52.873" endtime="20201112 10:14:52.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.868" endtime="20201112 10:14:52.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.878" endtime="20201112 10:14:52.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:52.881" endtime="20201112 10:14:52.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.880" endtime="20201112 10:14:52.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.876" endtime="20201112 10:14:52.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.506" endtime="20201112 10:14:52.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.505" endtime="20201112 10:14:52.902"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.911" endtime="20201112 10:14:52.930"></status>
</kw>
<msg timestamp="20201112 10:14:52.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.910" endtime="20201112 10:14:52.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:52.932" endtime="20201112 10:14:52.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.934" endtime="20201112 10:14:52.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.907" endtime="20201112 10:14:52.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.905" endtime="20201112 10:14:52.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:52.944" endtime="20201112 10:14:53.231"></status>
</kw>
<msg timestamp="20201112 10:14:53.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023072764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023134306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:52.942" endtime="20201112 10:14:53.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023072764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023134306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.235" endtime="20201112 10:14:53.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.244" endtime="20201112 10:14:53.246"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.939" endtime="20201112 10:14:53.246"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.938" endtime="20201112 10:14:53.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:53.251" level="INFO">${RESULT} = [{'time': 0.023134306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.154200000000123e-05, 'source_diff': 6.154200000000123e-05}, {'time': 0.023205847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:53.247" endtime="20201112 10:14:53.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:53.265" level="INFO">${ACCURACY} = {'time': [0.023134306, 0.023205847, 0.023276111, 0.023348319, 0.02342425, 0.023491875, 0.023566069, 0.02364, 0.023712319, 0.023788139, 0.023862194, 0.023936125, 0.024010125, 0.024080458, 0.024150264, ...</msg>
<status status="PASS" starttime="20201112 10:14:53.252" endtime="20201112 10:14:53.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.270" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 10:14:53.269" endtime="20201112 10:14:53.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.272" level="INFO">VALUE: [6.154200000000123e-05, 6.0236000000001705e-05, 6.205499999999836e-05, 6.086099999999886e-05, 6.20560000000013e-05, 6.0278000000000415e-05, 6.077699999999797e-05, 6.20560000000013e-05, 6.145800000000035e-05, 6.145800000000035e-05, 6.086099999999886e-05, 6.206899999999793e-05, 6.0250000000001275e-05, 6.154099999999829e-05, 6.084700000000276e-05, 6.0250000000001275e-05, 6.148600000000295e-05, 6.145899999999982e-05, 6.144500000000025e-05, 6.0264000000000845e-05, 6.140200000000207e-05, 6.147199999999992e-05, 6.208300000000097e-05, 6.086099999999886e-05, 6.148599999999949e-05, 6.086100000000233e-05, 6.086099999999886e-05, 6.086099999999886e-05, 6.0236000000001705e-05, 6.145799999999688e-05, 6.145899999999982e-05, 6.0250000000001275e-05, 6.148599999999949e-05, 6.0278000000000415e-05, 6.086099999999886e-05, 6.143099999999721e-05, 6.202800000000216e-05, 6.088900000000147e-05, 6.141700000000111e-05, 6.145800000000035e-05, 6.0236000000001705e-05, 6.084699999999929e-05, 6.207000000000087e-05, 6.147199999999992e-05, 6.147299999999939e-05, 6.147199999999992e-05, 6.147199999999992e-05, 6.086099999999886e-05, 6.147199999999992e-05, 6.145800000000035e-05]</msg>
<status status="PASS" starttime="20201112 10:14:53.271" endtime="20201112 10:14:53.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.266" endtime="20201112 10:14:53.274"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.276" endtime="20201112 10:14:53.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:53.280" endtime="20201112 10:14:53.299"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.278" endtime="20201112 10:14:53.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.274" endtime="20201112 10:14:53.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.903" endtime="20201112 10:14:53.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.903" endtime="20201112 10:14:53.301"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.310" endtime="20201112 10:14:53.327"></status>
</kw>
<msg timestamp="20201112 10:14:53.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.308" endtime="20201112 10:14:53.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.329" endtime="20201112 10:14:53.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.331" endtime="20201112 10:14:53.333"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.305" endtime="20201112 10:14:53.333"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.303" endtime="20201112 10:14:53.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.341" endtime="20201112 10:14:53.629"></status>
</kw>
<msg timestamp="20201112 10:14:53.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022764333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022827611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.339" endtime="20201112 10:14:53.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022764333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022827611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.633" endtime="20201112 10:14:53.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.642" endtime="20201112 10:14:53.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.336" endtime="20201112 10:14:53.644"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.335" endtime="20201112 10:14:53.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:53.649" level="INFO">${RESULT} = [{'time': 0.022827611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.327799999999995e-05, 'source_diff': 6.327799999999995e-05}, {'time': 0.022901694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:53.645" endtime="20201112 10:14:53.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:53.663" level="INFO">${ACCURACY} = {'time': [0.022827611, 0.022901694, 0.022975375, 0.023049403, 0.023121361, 0.023197569, 0.023273444, 0.023349375, 0.023427625, 0.023495861, 0.023569431, 0.023639514, 0.02370975, 0.023779458, 0.0238497...</msg>
<status status="PASS" starttime="20201112 10:14:53.650" endtime="20201112 10:14:53.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.667" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 10:14:53.666" endtime="20201112 10:14:53.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.670" level="INFO">VALUE: [6.327799999999995e-05, 6.388800000000153e-05, 6.333299999999875e-05, 6.3889000000001e-05, 6.32500000000008e-05, 6.269400000000203e-05, 6.27080000000016e-05, 6.32639999999969e-05, 6.3889000000001e-05, 6.384699999999882e-05, 6.388899999999753e-05, 6.204200000000173e-05, 6.387500000000143e-05, 6.267999999999899e-05, 6.329199999999952e-05, 6.268000000000246e-05, 6.269399999999856e-05, 6.327700000000047e-05, 6.327799999999995e-05, 6.327700000000047e-05, 6.387500000000143e-05, 6.207000000000087e-05, 6.329200000000298e-05, 6.326400000000038e-05, 6.387500000000143e-05, 6.387500000000143e-05, 6.327700000000047e-05, 6.388899999999753e-05, 6.205499999999836e-05, 6.326400000000038e-05, 6.267999999999899e-05, 6.329100000000004e-05, 6.268099999999846e-05, 6.207000000000087e-05, 6.3889000000001e-05, 6.270799999999813e-05, 6.26950000000015e-05, 6.266699999999889e-05, 6.32500000000008e-05, 6.3889000000001e-05, 6.391700000000014e-05, 6.266699999999889e-05, 6.206899999999793e-05, 6.387499999999796e-05, 6.323600000000124e-05, 6.266700000000236e-05, 6.387500000000143e-05, 6.329199999999952e-05, 6.384699999999882e-05, 6.327700000000047e-05]</msg>
<status status="PASS" starttime="20201112 10:14:53.668" endtime="20201112 10:14:53.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.664" endtime="20201112 10:14:53.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.674" endtime="20201112 10:14:53.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:53.677" endtime="20201112 10:14:53.697"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.676" endtime="20201112 10:14:53.697"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.672" endtime="20201112 10:14:53.698"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.302" endtime="20201112 10:14:53.698"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.301" endtime="20201112 10:14:53.698"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.707" endtime="20201112 10:14:53.725"></status>
</kw>
<msg timestamp="20201112 10:14:53.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.706" endtime="20201112 10:14:53.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.727" endtime="20201112 10:14:53.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.729" endtime="20201112 10:14:53.731"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.703" endtime="20201112 10:14:53.731"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.701" endtime="20201112 10:14:53.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.738" endtime="20201112 10:14:54.026"></status>
</kw>
<msg timestamp="20201112 10:14:54.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023176875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:53.737" endtime="20201112 10:14:54.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023176875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.030" endtime="20201112 10:14:54.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.038" endtime="20201112 10:14:54.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.734" endtime="20201112 10:14:54.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.732" endtime="20201112 10:14:54.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:54.046" level="INFO">${RESULT} = [{'time': 0.023176875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.629199999999905e-05, 'source_diff': 6.629199999999905e-05}, {'time': 0.023248597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:54.042" endtime="20201112 10:14:54.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:54.060" level="INFO">${ACCURACY} = {'time': [0.023176875, 0.023248597, 0.023320639, 0.023392833, 0.023470819, 0.023546403, 0.023616403, 0.023688917, 0.023760861, 0.023836986, 0.023914917, 0.023994806, 0.024064597, 0.024142875, 0.024218...</msg>
<status status="PASS" starttime="20201112 10:14:54.047" endtime="20201112 10:14:54.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.064" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 10:14:54.063" endtime="20201112 10:14:54.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.067" level="INFO">VALUE: [6.629199999999905e-05, 6.569399999999809e-05, 6.569500000000103e-05, 6.448599999999902e-05, 6.447199999999945e-05, 6.387500000000143e-05, 6.448600000000249e-05, 6.448599999999902e-05, 6.50830000000005e-05, 6.505500000000136e-05, 6.50700000000004e-05, 6.568100000000146e-05, 6.511099999999964e-05, 6.509700000000007e-05, 6.512499999999921e-05, 6.448599999999902e-05, 6.508399999999998e-05, 6.569499999999756e-05, 6.568100000000146e-05, 6.448599999999902e-05, 6.568100000000146e-05, 6.449999999999859e-05, 6.50419999999978e-05, 6.573600000000027e-05, 6.574999999999984e-05, 6.502700000000222e-05, 6.449999999999859e-05, 6.50830000000005e-05, 6.448600000000249e-05, 6.569399999999809e-05, 6.569499999999756e-05, 6.574999999999984e-05, 6.50830000000005e-05, 6.448599999999902e-05, 6.570800000000113e-05, 6.449999999999859e-05, 6.451299999999868e-05, 6.509700000000007e-05, 6.573600000000027e-05, 6.509700000000007e-05, 6.57220000000007e-05, 6.448599999999902e-05, 6.55969999999971e-05, 6.509700000000007e-05, 6.569400000000156e-05, 6.450000000000206e-05, 6.569499999999756e-05, 6.448600000000249e-05, 6.57090000000006e-05, 6.569500000000103e-05]</msg>
<status status="PASS" starttime="20201112 10:14:54.065" endtime="20201112 10:14:54.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.061" endtime="20201112 10:14:54.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.071" endtime="20201112 10:14:54.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:54.074" endtime="20201112 10:14:54.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.073" endtime="20201112 10:14:54.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.069" endtime="20201112 10:14:54.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.699" endtime="20201112 10:14:54.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.699" endtime="20201112 10:14:54.095"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.104" endtime="20201112 10:14:54.123"></status>
</kw>
<msg timestamp="20201112 10:14:54.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.103" endtime="20201112 10:14:54.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.124" endtime="20201112 10:14:54.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.127" endtime="20201112 10:14:54.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.100" endtime="20201112 10:14:54.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.098" endtime="20201112 10:14:54.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.137" endtime="20201112 10:14:54.423"></status>
</kw>
<msg timestamp="20201112 10:14:54.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022665458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.135" endtime="20201112 10:14:54.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022665458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.428" endtime="20201112 10:14:54.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.436" endtime="20201112 10:14:54.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.132" endtime="20201112 10:14:54.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.130" endtime="20201112 10:14:54.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:54.443" level="INFO">${RESULT} = [{'time': 0.022747514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.205600000000049e-05, 'source_diff': 8.205600000000049e-05}, {'time': 0.022841528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:54.440" endtime="20201112 10:14:54.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:54.457" level="INFO">${ACCURACY} = {'time': [0.022747514, 0.022841528, 0.022931556, 0.023025569, 0.023121556, 0.023211569, 0.023307653, 0.023393597, 0.023483597, 0.023577611, 0.023665653, 0.023759708, 0.023845639, 0.023941667, 0.024035...</msg>
<status status="PASS" starttime="20201112 10:14:54.444" endtime="20201112 10:14:54.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.462" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 10:14:54.461" endtime="20201112 10:14:54.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.465" level="INFO">VALUE: [8.205600000000049e-05, 8.232000000000031e-05, 8.133399999999888e-05, 8.21109999999993e-05, 8.248700000000261e-05, 8.148600000000214e-05, 8.172200000000282e-05, 8.158299999999966e-05, 8.14719999999991e-05, 8.263899999999894e-05, 8.084699999999848e-05, 8.238900000000215e-05, 8.131999999999931e-05, 8.198599999999917e-05, 8.21659999999981e-05, 8.09580000000025e-05, 8.2152999999998e-05, 8.231900000000084e-05, 8.1152000000001e-05, 8.107000000000253e-05, 8.24720000000001e-05, 8.166700000000054e-05, 8.231900000000084e-05, 8.115300000000047e-05, 8.130599999999974e-05, 8.180600000000024e-05, 8.19170000000008e-05, 8.181899999999687e-05, 8.09580000000025e-05, 8.181900000000034e-05, 8.102800000000035e-05, 8.249999999999924e-05, 8.130500000000027e-05, 8.17919999999972e-05, 8.216699999999758e-05, 8.198599999999917e-05, 8.12780000000006e-05, 8.115300000000047e-05, 8.215300000000147e-05, 8.131999999999931e-05, 8.131899999999984e-05, 8.248599999999967e-05, 8.119400000000318e-05, 8.181900000000034e-05, 8.24720000000001e-05, 8.19719999999996e-05, 8.081899999999934e-05, 8.170799999999978e-05, 8.181999999999981e-05, 8.148599999999867e-05]</msg>
<status status="PASS" starttime="20201112 10:14:54.463" endtime="20201112 10:14:54.465"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.458" endtime="20201112 10:14:54.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.468" endtime="20201112 10:14:54.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:54.472" endtime="20201112 10:14:54.491"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.470" endtime="20201112 10:14:54.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.467" endtime="20201112 10:14:54.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.096" endtime="20201112 10:14:54.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.095" endtime="20201112 10:14:54.493"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.502" endtime="20201112 10:14:54.521"></status>
</kw>
<msg timestamp="20201112 10:14:54.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.500" endtime="20201112 10:14:54.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.523" endtime="20201112 10:14:54.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.525" endtime="20201112 10:14:54.527"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.498" endtime="20201112 10:14:54.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.495" endtime="20201112 10:14:54.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.535" endtime="20201112 10:14:54.822"></status>
</kw>
<msg timestamp="20201112 10:14:54.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022728417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:54.533" endtime="20201112 10:14:54.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022728417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:54.827" endtime="20201112 10:14:54.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.835" endtime="20201112 10:14:54.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.530" endtime="20201112 10:14:54.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.529" endtime="20201112 10:14:54.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:54.842" level="INFO">${RESULT} = [{'time': 0.022728417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.391699999999933e-05, 'source_diff': 8.391699999999933e-05}, {'time': 0.022822444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:54.839" endtime="20201112 10:14:54.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:54.856" level="INFO">${ACCURACY} = {'time': [0.022728417, 0.022822444, 0.022914444, 0.023006444, 0.023096458, 0.023188458, 0.023282472, 0.0233785, 0.0234685, 0.023564528, 0.023656514, 0.023746542, 0.023838542, 0.023926556, 0.024016569,...</msg>
<status status="PASS" starttime="20201112 10:14:54.843" endtime="20201112 10:14:54.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.861" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 10:14:54.860" endtime="20201112 10:14:54.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.864" level="INFO">VALUE: [8.391699999999933e-05, 8.284700000000048e-05, 8.383299999999844e-05, 8.394400000000246e-05, 8.448600000000167e-05, 8.365200000000003e-05, 8.44859999999982e-05, 8.34720000000011e-05, 8.4153e-05, 8.29720000000006e-05, 8.312499999999987e-05, 8.299999999999974e-05, 8.441699999999983e-05, 8.294500000000093e-05, 8.348600000000067e-05, 8.459700000000223e-05, 8.447199999999863e-05, 8.450000000000124e-05, 8.33330000000014e-05, 8.386100000000105e-05, 8.412500000000087e-05, 8.363899999999994e-05, 8.418099999999915e-05, 8.332000000000131e-05, 8.281999999999734e-05, 8.365300000000297e-05, 8.366600000000307e-05, 8.317999999999867e-05, 8.281899999999787e-05, 8.431899999999937e-05, 8.28049999999983e-05, 8.298600000000017e-05, 8.381899999999887e-05, 8.368100000000211e-05, 8.380600000000224e-05, 8.336100000000055e-05, 8.376400000000006e-05, 8.397300000000107e-05, 8.431899999999937e-05, 8.33330000000014e-05, 8.302799999999888e-05, 8.363899999999994e-05, 8.420899999999829e-05, 8.383399999999791e-05, 8.363899999999994e-05, 8.44859999999982e-05, 8.46530000000005e-05, 8.386200000000052e-05, 8.30980000000002e-05, 8.41660000000001e-05]</msg>
<status status="PASS" starttime="20201112 10:14:54.862" endtime="20201112 10:14:54.865"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.857" endtime="20201112 10:14:54.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.867" endtime="20201112 10:14:54.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:54.871" endtime="20201112 10:14:54.890"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.869" endtime="20201112 10:14:54.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.866" endtime="20201112 10:14:54.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.494" endtime="20201112 10:14:54.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.493" endtime="20201112 10:14:54.892"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.901" endtime="20201112 10:14:54.920"></status>
</kw>
<msg timestamp="20201112 10:14:54.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.899" endtime="20201112 10:14:54.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:54.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:54.922" endtime="20201112 10:14:54.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.924" endtime="20201112 10:14:54.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.897" endtime="20201112 10:14:54.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.895" endtime="20201112 10:14:54.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:54.934" endtime="20201112 10:14:55.229"></status>
</kw>
<msg timestamp="20201112 10:14:55.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022821875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022907111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:54.932" endtime="20201112 10:14:55.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022821875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022907111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.233" endtime="20201112 10:14:55.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.242" endtime="20201112 10:14:55.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.930" endtime="20201112 10:14:55.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.928" endtime="20201112 10:14:55.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:55.249" level="INFO">${RESULT} = [{'time': 0.022907111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.523600000000242e-05, 'source_diff': 8.523600000000242e-05}, {'time': 0.023001125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:55.245" endtime="20201112 10:14:55.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:55.263" level="INFO">${ACCURACY} = {'time': [0.022907111, 0.023001125, 0.023101139, 0.023195139, 0.023285167, 0.023377167, 0.023473194, 0.023571181, 0.023665208, 0.023765222, 0.02385925, 0.023957264, 0.024053236, 0.02415125, 0.02424326...</msg>
<status status="PASS" starttime="20201112 10:14:55.250" endtime="20201112 10:14:55.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.268" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 10:14:55.267" endtime="20201112 10:14:55.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.270" level="INFO">VALUE: [8.523600000000242e-05, 8.633300000000094e-05, 8.66669999999986e-05, 8.647200000000063e-05, 8.533399999999941e-05, 8.54729999999991e-05, 8.53469999999995e-05, 8.5153000000001e-05, 8.51660000000011e-05, 8.533299999999994e-05, 8.518100000000015e-05, 8.519499999999972e-05, 8.497199999999913e-05, 8.665299999999904e-05, 8.498600000000217e-05, 8.615299999999854e-05, 8.509799999999873e-05, 8.659800000000023e-05, 8.547199999999963e-05, 8.511099999999883e-05, 8.500000000000174e-05, 8.59859999999997e-05, 8.605600000000102e-05, 8.6153000000002e-05, 8.481899999999987e-05, 8.545800000000006e-05, 8.6153000000002e-05, 8.583399999999991e-05, 8.661100000000033e-05, 8.581900000000087e-05, 8.515200000000153e-05, 8.647200000000063e-05, 8.631900000000137e-05, 8.66669999999986e-05, 8.5153000000001e-05, 8.48330000000029e-05, 8.554200000000095e-05, 8.53059999999968e-05, 8.5847e-05, 8.516700000000058e-05, 8.481999999999934e-05, 8.5153000000001e-05, 8.4846999999999e-05, 8.666599999999913e-05, 8.568000000000117e-05, 8.63189999999979e-05, 8.651399999999934e-05, 8.59859999999997e-05, 8.531999999999984e-05, 8.56669999999976e-05]</msg>
<status status="PASS" starttime="20201112 10:14:55.269" endtime="20201112 10:14:55.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.264" endtime="20201112 10:14:55.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.280" endtime="20201112 10:14:55.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:55.283" endtime="20201112 10:14:55.303"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.282" endtime="20201112 10:14:55.303"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.278" endtime="20201112 10:14:55.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.893" endtime="20201112 10:14:55.304"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:54.892" endtime="20201112 10:14:55.304"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.314" endtime="20201112 10:14:55.333"></status>
</kw>
<msg timestamp="20201112 10:14:55.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.312" endtime="20201112 10:14:55.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.334" endtime="20201112 10:14:55.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.337" endtime="20201112 10:14:55.338"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.309" endtime="20201112 10:14:55.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.307" endtime="20201112 10:14:55.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.346" endtime="20201112 10:14:55.632"></status>
</kw>
<msg timestamp="20201112 10:14:55.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022815431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022902542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.344" endtime="20201112 10:14:55.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022815431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022902542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.637" endtime="20201112 10:14:55.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.645" endtime="20201112 10:14:55.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.342" endtime="20201112 10:14:55.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.340" endtime="20201112 10:14:55.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:55.652" level="INFO">${RESULT} = [{'time': 0.022902542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.711100000000083e-05, 'source_diff': 8.711100000000083e-05}, {'time': 0.022994514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:55.649" endtime="20201112 10:14:55.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:55.666" level="INFO">${ACCURACY} = {'time': [0.022902542, 0.022994514, 0.023088528, 0.023182542, 0.023278556, 0.023370569, 0.023468583, 0.023562583, 0.023654611, 0.023752597, 0.023850625, 0.023952639, 0.024052653, 0.024146653, 0.024246...</msg>
<status status="PASS" starttime="20201112 10:14:55.653" endtime="20201112 10:14:55.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.671" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 10:14:55.670" endtime="20201112 10:14:55.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.673" level="INFO">VALUE: [8.711100000000083e-05, 8.765300000000004e-05, 8.781999999999887e-05, 8.715299999999954e-05, 8.76669999999996e-05, 8.69860000000007e-05, 8.683300000000144e-05, 8.715200000000006e-05, 8.730499999999933e-05, 8.865300000000104e-05, 8.76669999999996e-05, 8.79860000000017e-05, 8.750000000000077e-05, 8.763900000000047e-05, 8.84999999999983e-05, 8.786100000000158e-05, 8.74730000000011e-05, 8.765200000000056e-05, 8.74860000000012e-05, 8.802800000000041e-05, 8.815300000000054e-05, 8.733300000000194e-05, 8.715299999999954e-05, 8.865300000000104e-05, 8.783400000000191e-05, 8.815300000000054e-05, 8.819399999999977e-05, 8.862499999999843e-05, 8.83189999999999e-05, 8.78189999999994e-05, 8.8638999999998e-05, 8.693000000000242e-05, 8.833299999999947e-05, 8.747200000000163e-05, 8.71669999999991e-05, 8.813900000000097e-05, 8.781999999999887e-05, 8.783400000000191e-05, 8.79730000000016e-05, 8.731900000000237e-05, 8.86519999999981e-05, 8.733299999999847e-05, 8.73189999999989e-05, 8.788900000000072e-05, 8.716700000000258e-05, 8.851400000000134e-05, 8.765300000000004e-05, 8.802699999999747e-05, 8.74730000000011e-05, 8.769399999999927e-05]</msg>
<status status="PASS" starttime="20201112 10:14:55.672" endtime="20201112 10:14:55.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.667" endtime="20201112 10:14:55.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.677" endtime="20201112 10:14:55.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:55.681" endtime="20201112 10:14:55.700"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.679" endtime="20201112 10:14:55.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.675" endtime="20201112 10:14:55.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.305" endtime="20201112 10:14:55.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.305" endtime="20201112 10:14:55.702"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.711" endtime="20201112 10:14:55.729"></status>
</kw>
<msg timestamp="20201112 10:14:55.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.709" endtime="20201112 10:14:55.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:55.731" endtime="20201112 10:14:55.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.733" endtime="20201112 10:14:55.735"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.706" endtime="20201112 10:14:55.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.704" endtime="20201112 10:14:55.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.743" endtime="20201112 10:14:56.030"></status>
</kw>
<msg timestamp="20201112 10:14:56.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0228785, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022969083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:55.741" endtime="20201112 10:14:56.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0228785, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022969083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:56.034" endtime="20201112 10:14:56.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.043" endtime="20201112 10:14:56.045"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.738" endtime="20201112 10:14:56.045"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.737" endtime="20201112 10:14:56.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:56.050" level="INFO">${RESULT} = [{'time': 0.022969083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.058300000000172e-05, 'source_diff': 9.058300000000172e-05}, {'time': 0.023065083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:56.046" endtime="20201112 10:14:56.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:56.064" level="INFO">${ACCURACY} = {'time': [0.022969083, 0.023065083, 0.023159111, 0.023257153, 0.023353139, 0.023449194, 0.023543139, 0.023645153, 0.023745167, 0.023845181, 0.023943194, 0.024037194, 0.024141208, 0.024235222, 0.024333...</msg>
<status status="PASS" starttime="20201112 10:14:56.051" endtime="20201112 10:14:56.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.069" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 10:14:56.067" endtime="20201112 10:14:56.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.071" level="INFO">VALUE: [9.058300000000172e-05, 8.93190000000009e-05, 8.984700000000054e-05, 8.919500000000025e-05, 8.98199999999974e-05, 9.038800000000027e-05, 8.932000000000037e-05, 8.947200000000016e-05, 8.948599999999973e-05, 8.99869999999997e-05, 8.897199999999966e-05, 8.948599999999973e-05, 8.947200000000016e-05, 8.984700000000054e-05, 8.883299999999997e-05, 8.88190000000004e-05, 8.984700000000054e-05, 8.881999999999987e-05, 8.982000000000087e-05, 8.948599999999973e-05, 8.887500000000215e-05, 8.884699999999954e-05, 9.013800000000002e-05, 8.983300000000097e-05, 8.897200000000313e-05, 9.0639e-05, 8.948599999999973e-05, 9.03060000000018e-05, 8.884800000000248e-05, 8.934799999999951e-05, 8.94999999999993e-05, 9.066599999999966e-05, 8.93190000000009e-05, 8.915200000000206e-05, 9.048600000000073e-05, 8.948599999999973e-05, 8.897200000000313e-05, 9.016699999999864e-05, 8.998600000000023e-05, 8.880599999999683e-05, 9.016699999999864e-05, 8.9332999999997e-05, 8.998600000000023e-05, 9.03190000000019e-05, 8.880500000000083e-05, 8.881899999999693e-05, 8.900000000000227e-05, 8.915300000000154e-05, 8.998600000000023e-05, 8.948599999999973e-05]</msg>
<status status="PASS" starttime="20201112 10:14:56.070" endtime="20201112 10:14:56.072"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.065" endtime="20201112 10:14:56.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.075" endtime="20201112 10:14:56.076"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:56.078" endtime="20201112 10:14:56.098"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.077" endtime="20201112 10:14:56.098"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.073" endtime="20201112 10:14:56.099"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.703" endtime="20201112 10:14:56.099"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.702" endtime="20201112 10:14:56.099"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.108" endtime="20201112 10:14:56.128"></status>
</kw>
<msg timestamp="20201112 10:14:56.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.107" endtime="20201112 10:14:56.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.130" endtime="20201112 10:14:56.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.132" endtime="20201112 10:14:56.134"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.104" endtime="20201112 10:14:56.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.102" endtime="20201112 10:14:56.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.142" endtime="20201112 10:14:56.428"></status>
</kw>
<msg timestamp="20201112 10:14:56.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023070069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023161639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.140" endtime="20201112 10:14:56.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023070069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023161639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.433" endtime="20201112 10:14:56.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.441" endtime="20201112 10:14:56.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.138" endtime="20201112 10:14:56.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.136" endtime="20201112 10:14:56.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:56.448" level="INFO">${RESULT} = [{'time': 0.023161639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.157000000000262e-05, 'source_diff': 9.157000000000262e-05}, {'time': 0.023259639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:56.445" endtime="20201112 10:14:56.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:56.462" level="INFO">${ACCURACY} = {'time': [0.023161639, 0.023259639, 0.023363653, 0.023465681, 0.023567681, 0.023673681, 0.023771708, 0.023875792, 0.023977736, 0.024081736, 0.02418175, 0.024285764, 0.024385764, 0.024487792, 0.0245877...</msg>
<status status="PASS" starttime="20201112 10:14:56.449" endtime="20201112 10:14:56.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.467" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 10:14:56.466" endtime="20201112 10:14:56.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.470" level="INFO">VALUE: [9.157000000000262e-05, 9.21529999999976e-05, 9.147200000000216e-05, 9.116699999999964e-05, 9.266700000000114e-05, 9.23199999999999e-05, 9.116600000000016e-05, 9.223599999999901e-05, 9.092999999999948e-05, 9.198599999999876e-05, 9.227799999999772e-05, 9.165300000000057e-05, 9.265300000000157e-05, 9.183400000000244e-05, 9.130599999999933e-05, 9.082000000000187e-05, 9.10000000000008e-05, 9.134700000000204e-05, 9.181899999999993e-05, 9.129199999999976e-05, 9.115300000000007e-05, 9.152800000000044e-05, 9.218100000000021e-05, 9.097199999999819e-05, 9.15130000000014e-05, 9.183399999999897e-05, 9.163899999999753e-05, 9.081899999999893e-05, 9.104199999999951e-05, 9.243000000000098e-05, 9.1332999999999e-05, 9.112500000000093e-05, 9.19719999999992e-05, 9.186199999999811e-05, 9.133399999999847e-05, 9.23199999999999e-05, 9.18199999999994e-05, 9.263899999999853e-05, 9.26520000000021e-05, 9.116600000000016e-05, 9.081899999999893e-05, 9.127800000000019e-05, 9.1332999999999e-05, 9.081899999999893e-05, 9.230600000000033e-05, 9.134699999999857e-05, 9.2639000000002e-05, 9.184799999999854e-05, 9.213899999999803e-05, 9.202799999999747e-05]</msg>
<status status="PASS" starttime="20201112 10:14:56.468" endtime="20201112 10:14:56.470"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.463" endtime="20201112 10:14:56.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.473" endtime="20201112 10:14:56.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:56.477" endtime="20201112 10:14:56.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.475" endtime="20201112 10:14:56.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.472" endtime="20201112 10:14:56.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.100" endtime="20201112 10:14:56.498"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.100" endtime="20201112 10:14:56.498"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.507" endtime="20201112 10:14:56.526"></status>
</kw>
<msg timestamp="20201112 10:14:56.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.505" endtime="20201112 10:14:56.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.528" endtime="20201112 10:14:56.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.530" endtime="20201112 10:14:56.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.503" endtime="20201112 10:14:56.533"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.500" endtime="20201112 10:14:56.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.540" endtime="20201112 10:14:56.828"></status>
</kw>
<msg timestamp="20201112 10:14:56.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022670736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022763681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.538" endtime="20201112 10:14:56.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022670736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022763681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.832" endtime="20201112 10:14:56.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.841" endtime="20201112 10:14:56.842"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.535" endtime="20201112 10:14:56.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.534" endtime="20201112 10:14:56.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:56.847" level="INFO">${RESULT} = [{'time': 0.022763681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.294500000000053e-05, 'source_diff': 9.294500000000053e-05}, {'time': 0.022871653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:56.844" endtime="20201112 10:14:56.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:56.861" level="INFO">${ACCURACY} = {'time': [0.022763681, 0.022871653, 0.022969681, 0.023075681, 0.023181694, 0.023283708, 0.023391736, 0.023493722, 0.02359975, 0.02370775, 0.023807764, 0.023913778, 0.024015792, 0.024113847, 0.02422180...</msg>
<status status="PASS" starttime="20201112 10:14:56.848" endtime="20201112 10:14:56.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.866" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 10:14:56.865" endtime="20201112 10:14:56.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.869" level="INFO">VALUE: [9.294500000000053e-05, 9.431999999999843e-05, 9.299999999999933e-05, 9.36529999999991e-05, 9.413800000000055e-05, 9.433299999999853e-05, 9.34720000000007e-05, 9.381900000000193e-05, 9.431899999999896e-05, 9.413900000000003e-05, 9.36529999999991e-05, 9.28200000000004e-05, 9.41529999999996e-05, 9.337499999999971e-05, 9.331999999999743e-05, 9.349999999999983e-05, 9.281900000000093e-05, 9.448600000000126e-05, 9.36529999999991e-05, 9.44720000000017e-05, 9.299999999999933e-05, 9.330600000000133e-05, 9.31390000000025e-05, 9.283399999999997e-05, 9.286099999999964e-05, 9.336100000000014e-05, 9.348600000000026e-05, 9.400000000000033e-05, 9.298599999999976e-05, 9.36529999999991e-05, 9.466699999999967e-05, 9.352799999999897e-05, 9.398600000000076e-05, 9.4027e-05, 9.387500000000021e-05, 9.313899999999903e-05, 9.467999999999976e-05, 9.386100000000064e-05, 9.46530000000001e-05, 9.466700000000314e-05, 9.333299999999753e-05, 9.305499999999814e-05, 9.398600000000076e-05, 9.4333999999998e-05, 9.354199999999854e-05, 9.431899999999896e-05, 9.315199999999912e-05, 9.448600000000126e-05, 9.400000000000033e-05, 9.292999999999801e-05]</msg>
<status status="PASS" starttime="20201112 10:14:56.867" endtime="20201112 10:14:56.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.862" endtime="20201112 10:14:56.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.872" endtime="20201112 10:14:56.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:56.876" endtime="20201112 10:14:56.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.874" endtime="20201112 10:14:56.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.871" endtime="20201112 10:14:56.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.499" endtime="20201112 10:14:56.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.498" endtime="20201112 10:14:56.897"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.906" endtime="20201112 10:14:56.926"></status>
</kw>
<msg timestamp="20201112 10:14:56.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.904" endtime="20201112 10:14:56.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:56.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:56.928" endtime="20201112 10:14:56.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.930" endtime="20201112 10:14:56.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.902" endtime="20201112 10:14:56.933"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.900" endtime="20201112 10:14:56.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:56.940" endtime="20201112 10:14:57.228"></status>
</kw>
<msg timestamp="20201112 10:14:57.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022749167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022844764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:56.938" endtime="20201112 10:14:57.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022749167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022844764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.232" endtime="20201112 10:14:57.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.240" endtime="20201112 10:14:57.242"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.935" endtime="20201112 10:14:57.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.934" endtime="20201112 10:14:57.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:57.247" level="INFO">${RESULT} = [{'time': 0.022844764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.559699999999935e-05, 'source_diff': 9.559699999999935e-05}, {'time': 0.02294675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:57.244" endtime="20201112 10:14:57.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:57.261" level="INFO">${ACCURACY} = {'time': [0.022844764, 0.02294675, 0.023048764, 0.023150792, 0.023252792, 0.023354819, 0.023462819, 0.023564833, 0.023668833, 0.023770861, 0.023878861, 0.023986889, 0.024096889, 0.024202917, 0.0243049...</msg>
<status status="PASS" starttime="20201112 10:14:57.248" endtime="20201112 10:14:57.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.266" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 10:14:57.265" endtime="20201112 10:14:57.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.269" level="INFO">VALUE: [9.559699999999935e-05, 9.497199999999872e-05, 9.513900000000103e-05, 9.549999999999836e-05, 9.53200000000029e-05, 9.583300000000003e-05, 9.631900000000096e-05, 9.59859999999993e-05, 9.615199999999866e-05, 9.666700000000167e-05, 9.598600000000276e-05, 9.512500000000146e-05, 9.647200000000022e-05, 9.581999999999993e-05, 9.58339999999995e-05, 9.668000000000176e-05, 9.648699999999927e-05, 9.615199999999866e-05, 9.581900000000046e-05, 9.483299999999903e-05, 9.613899999999856e-05, 9.613899999999856e-05, 9.583300000000003e-05, 9.530599999999986e-05, 9.61530000000016e-05, 9.64729999999997e-05, 9.530500000000039e-05, 9.613799999999909e-05, 9.520899999999888e-05, 9.516700000000017e-05, 9.599999999999886e-05, 9.594400000000058e-05, 9.565299999999763e-05, 9.64859999999998e-05, 9.531999999999943e-05, 9.64859999999998e-05, 9.481999999999893e-05, 9.500000000000133e-05, 9.61660000000017e-05, 9.665199999999916e-05, 9.64859999999998e-05, 9.620899999999988e-05, 9.555500000000064e-05, 9.563900000000153e-05, 9.665299999999863e-05, 9.554100000000107e-05, 9.633300000000053e-05, 9.549999999999836e-05, 9.665199999999916e-05, 9.577800000000122e-05]</msg>
<status status="PASS" starttime="20201112 10:14:57.267" endtime="20201112 10:14:57.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.262" endtime="20201112 10:14:57.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.272" endtime="20201112 10:14:57.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:57.276" endtime="20201112 10:14:57.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.274" endtime="20201112 10:14:57.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.271" endtime="20201112 10:14:57.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.898" endtime="20201112 10:14:57.297"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:56.897" endtime="20201112 10:14:57.297"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.306" endtime="20201112 10:14:57.326"></status>
</kw>
<msg timestamp="20201112 10:14:57.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.304" endtime="20201112 10:14:57.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.327" endtime="20201112 10:14:57.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.330" endtime="20201112 10:14:57.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.302" endtime="20201112 10:14:57.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.299" endtime="20201112 10:14:57.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.339" endtime="20201112 10:14:57.626"></status>
</kw>
<msg timestamp="20201112 10:14:57.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022679597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022776986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.338" endtime="20201112 10:14:57.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022679597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022776986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.630" endtime="20201112 10:14:57.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.639" endtime="20201112 10:14:57.640"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.335" endtime="20201112 10:14:57.641"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.333" endtime="20201112 10:14:57.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:57.646" level="INFO">${RESULT} = [{'time': 0.022776986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.738899999999981e-05, 'source_diff': 9.738899999999981e-05}, {'time': 0.022879042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:57.642" endtime="20201112 10:14:57.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:57.660" level="INFO">${ACCURACY} = {'time': [0.022776986, 0.022879042, 0.022987014, 0.023095042, 0.023201056, 0.023311069, 0.023421069, 0.023525083, 0.023635153, 0.023739097, 0.023843111, 0.023947125, 0.024055139, 0.024163153, 0.024267...</msg>
<status status="PASS" starttime="20201112 10:14:57.647" endtime="20201112 10:14:57.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.664" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 10:14:57.663" endtime="20201112 10:14:57.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.667" level="INFO">VALUE: [9.738899999999981e-05, 9.769499999999834e-05, 9.815300000000013e-05, 9.783399999999803e-05, 9.863900000000106e-05, 9.86800000000003e-05, 9.716599999999923e-05, 9.766599999999973e-05, 9.788900000000031e-05, 9.715299999999913e-05, 9.79860000000013e-05, 9.847199999999875e-05, 9.765299999999963e-05, 9.74860000000008e-05, 9.750000000000036e-05, 9.85410000000006e-05, 9.729199999999882e-05, 9.681900000000146e-05, 9.865199999999769e-05, 9.818099999999927e-05, 9.779199999999932e-05, 9.681899999999799e-05, 9.69860000000003e-05, 9.86670000000002e-05, 9.738899999999981e-05, 9.84730000000017e-05, 9.815300000000013e-05, 9.763800000000059e-05, 9.865200000000116e-05, 9.834699999999863e-05, 9.733300000000153e-05, 9.78340000000015e-05, 9.76669999999992e-05, 9.765299999999963e-05, 9.715299999999913e-05, 9.732000000000143e-05, 9.798700000000077e-05, 9.798599999999782e-05, 9.713899999999956e-05, 9.731900000000196e-05, 9.768100000000224e-05, 9.833299999999906e-05, 9.679199999999832e-05, 9.697200000000072e-05, 9.781999999999846e-05, 9.800000000000086e-05, 9.730600000000186e-05, 9.766599999999973e-05, 9.786100000000117e-05, 9.716599999999923e-05]</msg>
<status status="PASS" starttime="20201112 10:14:57.665" endtime="20201112 10:14:57.668"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.661" endtime="20201112 10:14:57.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.671" endtime="20201112 10:14:57.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:57.674" endtime="20201112 10:14:57.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.673" endtime="20201112 10:14:57.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.669" endtime="20201112 10:14:57.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.298" endtime="20201112 10:14:57.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.297" endtime="20201112 10:14:57.695"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.704" endtime="20201112 10:14:57.724"></status>
</kw>
<msg timestamp="20201112 10:14:57.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.703" endtime="20201112 10:14:57.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:57.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:57.726" endtime="20201112 10:14:57.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.728" endtime="20201112 10:14:57.730"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.700" endtime="20201112 10:14:57.731"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.698" endtime="20201112 10:14:57.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:57.738" endtime="20201112 10:14:58.025"></status>
</kw>
<msg timestamp="20201112 10:14:58.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022622611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022722514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:57.736" endtime="20201112 10:14:58.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022622611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022722514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.030" endtime="20201112 10:14:58.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.038" endtime="20201112 10:14:58.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.733" endtime="20201112 10:14:58.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.732" endtime="20201112 10:14:58.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:58.045" level="INFO">${RESULT} = [{'time': 0.022722514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.990299999999841e-05, 'source_diff': 9.990299999999841e-05}, {'time': 0.022836542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:58.042" endtime="20201112 10:14:58.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:58.059" level="INFO">${ACCURACY} = {'time': [0.022722514, 0.022836542, 0.022946542, 0.023056556, 0.023166583, 0.023270597, 0.023378597, 0.023490597, 0.023600625, 0.023708625, 0.023820639, 0.023926653, 0.024040681, 0.024144681, 0.024250...</msg>
<status status="PASS" starttime="20201112 10:14:58.046" endtime="20201112 10:14:58.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.064" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 10:14:58.063" endtime="20201112 10:14:58.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.066" level="INFO">VALUE: [9.990299999999841e-05, 0.0001006670000000022, 9.997299999999973e-05, 9.982000000000046e-05, 9.91800000000008e-05, 9.951400000000193e-05, 9.950000000000236e-05, 9.963899999999859e-05, 9.96670000000012e-05, 9.998599999999983e-05, 9.915300000000113e-05, 0.00010063899999999959, 0.0001001670000000017, 9.898700000000177e-05, 9.920799999999994e-05, 9.883299999999956e-05, 9.94999999999989e-05, 9.918100000000027e-05, 9.898599999999882e-05, 9.98060000000009e-05, 0.00010015299999999866, 9.881999999999946e-05, 0.00010015299999999866, 0.00010065300000000263, 9.96800000000013e-05, 9.933300000000006e-05, 0.00010031900000000149, 9.91670000000007e-05, 9.968100000000077e-05, 0.00010016699999999823, 9.984700000000013e-05, 9.982000000000046e-05, 9.91800000000008e-05, 9.982000000000046e-05, 0.00010033299999999759, 0.00010065199999999969, 0.00010051400000000293, 9.980500000000142e-05, 9.933300000000006e-05, 0.0001001670000000017, 0.00010069500000000134, 0.00010013899999999909, 0.0001003060000000014, 0.0001002220000000005, 0.00010023600000000008, 0.0001006939999999984, 9.933300000000006e-05, 9.883299999999956e-05, 0.00010015300000000213, 9.981899999999752e-05]</msg>
<status status="PASS" starttime="20201112 10:14:58.065" endtime="20201112 10:14:58.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.060" endtime="20201112 10:14:58.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.070" endtime="20201112 10:14:58.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:58.074" endtime="20201112 10:14:58.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.072" endtime="20201112 10:14:58.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.068" endtime="20201112 10:14:58.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.696" endtime="20201112 10:14:58.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:57.696" endtime="20201112 10:14:58.095"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.104" endtime="20201112 10:14:58.123"></status>
</kw>
<msg timestamp="20201112 10:14:58.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.102" endtime="20201112 10:14:58.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.125" endtime="20201112 10:14:58.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.128" endtime="20201112 10:14:58.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.099" endtime="20201112 10:14:58.130"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.097" endtime="20201112 10:14:58.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.137" endtime="20201112 10:14:58.425"></status>
</kw>
<msg timestamp="20201112 10:14:58.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022706944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022807625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.135" endtime="20201112 10:14:58.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022706944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022807625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.430" endtime="20201112 10:14:58.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.438" endtime="20201112 10:14:58.439"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.133" endtime="20201112 10:14:58.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.131" endtime="20201112 10:14:58.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:58.445" level="INFO">${RESULT} = [{'time': 0.022807625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010068100000000177, 'source_diff': 0.00010068100000000177}, {'time': 0.022923667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:58.441" endtime="20201112 10:14:58.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:58.458" level="INFO">${ACCURACY} = {'time': [0.022807625, 0.022923667, 0.023031625, 0.023139639, 0.023247667, 0.023359667, 0.023465681, 0.023575694, 0.023687722, 0.023793722, 0.023899722, 0.024007736, 0.024115764, 0.024221819, 0.024329...</msg>
<status status="PASS" starttime="20201112 10:14:58.446" endtime="20201112 10:14:58.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.463" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 10:14:58.462" endtime="20201112 10:14:58.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.466" level="INFO">VALUE: [0.00010068100000000177, 0.00010219499999999937, 0.00010231900000000002, 0.00010148600000000133, 0.0001015000000000009, 0.00010230599999999992, 0.00010115299999999966, 0.00010115200000000019, 0.00010167999999999983, 0.00010148600000000133, 0.00010081900000000199, 0.00010115299999999966, 0.0001020000000000014, 0.00010086099999999723, 0.00010161100000000145, 0.00010233399999999906, 0.00010183399999999856, 0.00010249999999999843, 0.00010083300000000156, 0.00010231900000000002, 0.00010080499999999895, 0.00010238899999999787, 0.00010098599999999736, 0.00010230599999999992, 0.00010132000000000196, 0.00010266700000000073, 0.00010115299999999966, 0.00010115200000000019, 0.00010134700000000163, 0.00010116599999999976, 0.00010265300000000116, 0.00010131899999999902, 0.00010097200000000126, 0.00010113900000000009, 0.00010111100000000095, 0.00010097300000000073, 0.000101819999999999, 0.00010077699999999981, 0.00010079099999999938, 0.00010133300000000206, 0.00010134699999999816, 0.00010169499999999887, 0.00010215300000000066, 0.00010115299999999966, 0.00010126399999999675, 0.00010211099999999848, 0.00010138900000000034, 0.00010181899999999952, 0.00010166600000000026, 0.0001010000000000004]</msg>
<status status="PASS" starttime="20201112 10:14:58.464" endtime="20201112 10:14:58.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.459" endtime="20201112 10:14:58.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.469" endtime="20201112 10:14:58.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:58.473" endtime="20201112 10:14:58.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.471" endtime="20201112 10:14:58.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.468" endtime="20201112 10:14:58.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.096" endtime="20201112 10:14:58.494"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.095" endtime="20201112 10:14:58.494"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.503" endtime="20201112 10:14:58.523"></status>
</kw>
<msg timestamp="20201112 10:14:58.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.501" endtime="20201112 10:14:58.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.524" endtime="20201112 10:14:58.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.527" endtime="20201112 10:14:58.528"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.499" endtime="20201112 10:14:58.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.496" endtime="20201112 10:14:58.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.536" endtime="20201112 10:14:58.823"></status>
</kw>
<msg timestamp="20201112 10:14:58.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022688972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022793042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.535" endtime="20201112 10:14:58.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022688972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022793042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.828" endtime="20201112 10:14:58.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.836" endtime="20201112 10:14:58.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.532" endtime="20201112 10:14:58.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.530" endtime="20201112 10:14:58.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:58.843" level="INFO">${RESULT} = [{'time': 0.022793042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010406999999999778, 'source_diff': 0.00010406999999999778}, {'time': 0.022911125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:58.840" endtime="20201112 10:14:58.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:58.857" level="INFO">${ACCURACY} = {'time': [0.022793042, 0.022911125, 0.023025069, 0.023137097, 0.023251097, 0.023361125, 0.023479139, 0.023587139, 0.023701181, 0.023813167, 0.023925167, 0.024039181, 0.024157208, 0.024267208, 0.024375...</msg>
<status status="PASS" starttime="20201112 10:14:58.844" endtime="20201112 10:14:58.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.861" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 10:14:58.860" endtime="20201112 10:14:58.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.864" level="INFO">VALUE: [0.00010406999999999778, 0.0001043750000000003, 0.00010315199999999872, 0.00010281900000000052, 0.00010391599999999904, 0.00010316700000000123, 0.00010349999999999943, 0.00010283300000000009, 0.0001046810000000023, 0.00010383400000000056, 0.00010365300000000216, 0.00010431999999999803, 0.00010450000000000043, 0.00010465199999999675, 0.00010294400000000065, 0.00010386100000000023, 0.00010416699999999876, 0.00010450000000000043, 0.00010433400000000106, 0.00010399999999999993, 0.00010297300000000273, 0.00010467999999999936, 0.00010366599999999879, 0.0001028749999999988, 0.00010279099999999791, 0.00010415299999999919, 0.00010313900000000209, 0.00010316700000000123, 0.00010283399999999956, 0.00010399999999999993, 0.00010299999999999893, 0.00010433300000000159, 0.00010465200000000022, 0.00010383299999999762, 0.00010365299999999869, 0.00010362499999999955, 0.00010366699999999826, 0.00010298600000000283, 0.0001047079999999985, 0.00010367999999999836, 0.00010297199999999979, 0.00010330499999999798, 0.00010462500000000055, 0.00010344400000000115, 0.00010381899999999805, 0.00010431899999999855, 0.00010384700000000066, 0.00010430600000000192, 0.00010363900000000259, 0.00010351400000000247]</msg>
<status status="PASS" starttime="20201112 10:14:58.863" endtime="20201112 10:14:58.865"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.858" endtime="20201112 10:14:58.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.868" endtime="20201112 10:14:58.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:58.871" endtime="20201112 10:14:58.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.870" endtime="20201112 10:14:58.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.866" endtime="20201112 10:14:58.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.495" endtime="20201112 10:14:58.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.494" endtime="20201112 10:14:58.892"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.901" endtime="20201112 10:14:58.921"></status>
</kw>
<msg timestamp="20201112 10:14:58.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.900" endtime="20201112 10:14:58.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:58.923" endtime="20201112 10:14:58.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.926" endtime="20201112 10:14:58.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.897" endtime="20201112 10:14:58.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.895" endtime="20201112 10:14:58.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.935" endtime="20201112 10:14:59.222"></status>
</kw>
<msg timestamp="20201112 10:14:59.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022962944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023068194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.933" endtime="20201112 10:14:59.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022962944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023068194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.226" endtime="20201112 10:14:59.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.235" endtime="20201112 10:14:59.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.931" endtime="20201112 10:14:59.237"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.929" endtime="20201112 10:14:59.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:59.242" level="INFO">${RESULT} = [{'time': 0.023068194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010525000000000118, 'source_diff': 0.00010525000000000118}, {'time': 0.023180194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:59.238" endtime="20201112 10:14:59.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:59.255" level="INFO">${ACCURACY} = {'time': [0.023068194, 0.023180194, 0.023292222, 0.023412222, 0.023526236, 0.02364425, 0.023756264, 0.023868278, 0.023982292, 0.024100306, 0.024216319, 0.024328333, 0.024438347, 0.024558361, 0.0246723...</msg>
<status status="PASS" starttime="20201112 10:14:59.243" endtime="20201112 10:14:59.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.260" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 10:14:59.259" endtime="20201112 10:14:59.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.263" level="INFO">VALUE: [0.00010525000000000118, 0.00010498600000000136, 0.00010550000000000143, 0.00010630500000000098, 0.00010548599999999839, 0.00010515300000000019, 0.00010598599999999889, 0.00010665299999999822, 0.00010598599999999889, 0.00010580599999999996, 0.00010513800000000115, 0.00010581900000000005, 0.00010563899999999765, 0.00010595799999999975, 0.00010648599999999939, 0.00010648599999999939, 0.00010666700000000126, 0.00010650000000000243, 0.00010650000000000243, 0.00010549999999999796, 0.00010495799999999875, 0.00010548599999999839, 0.00010498600000000136, 0.00010531900000000302, 0.00010665300000000169, 0.00010518099999999933, 0.00010632000000000003, 0.00010647299999999929, 0.00010565300000000069, 0.00010618000000000086, 0.00010597200000000279, 0.00010497200000000179, 0.00010618100000000033, 0.00010534700000000216, 0.00010637499999999883, 0.00010500000000000093, 0.00010483400000000156, 0.0001058339999999991, 0.00010633300000000012, 0.00010548599999999839, 0.0001055559999999997, 0.00010563900000000112, 0.00010633300000000012, 0.0001066950000000004, 0.00010563899999999765, 0.00010599999999999846, 0.00010650000000000243, 0.00010513900000000062, 0.00010529099999999694, 0.00010580500000000048]</msg>
<status status="PASS" starttime="20201112 10:14:59.261" endtime="20201112 10:14:59.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.256" endtime="20201112 10:14:59.264"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.266" endtime="20201112 10:14:59.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:59.270" endtime="20201112 10:14:59.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.268" endtime="20201112 10:14:59.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.265" endtime="20201112 10:14:59.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.893" endtime="20201112 10:14:59.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.893" endtime="20201112 10:14:59.291"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.300" endtime="20201112 10:14:59.321"></status>
</kw>
<msg timestamp="20201112 10:14:59.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.298" endtime="20201112 10:14:59.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.322" endtime="20201112 10:14:59.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.325" endtime="20201112 10:14:59.326"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.296" endtime="20201112 10:14:59.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.294" endtime="20201112 10:14:59.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.334" endtime="20201112 10:14:59.621"></status>
</kw>
<msg timestamp="20201112 10:14:59.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023107111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023214403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.333" endtime="20201112 10:14:59.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023107111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023214403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.625" endtime="20201112 10:14:59.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.634" endtime="20201112 10:14:59.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.330" endtime="20201112 10:14:59.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.328" endtime="20201112 10:14:59.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:59.640" level="INFO">${RESULT} = [{'time': 0.023214403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010729200000000189, 'source_diff': 0.00010729200000000189}, {'time': 0.023326403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:59.637" endtime="20201112 10:14:59.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:59.654" level="INFO">${ACCURACY} = {'time': [0.023214403, 0.023326403, 0.023444431, 0.023556431, 0.023672444, 0.023790458, 0.023908486, 0.024026542, 0.0241425, 0.024258528, 0.024376542, 0.024492542, 0.024610569, 0.024732569, 0.02485458...</msg>
<status status="PASS" starttime="20201112 10:14:59.641" endtime="20201112 10:14:59.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.659" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 10:14:59.658" endtime="20201112 10:14:59.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.661" level="INFO">VALUE: [0.00010729200000000189, 0.00010761100000000051, 0.0001073340000000006, 0.00010730599999999799, 0.00010681900000000105, 0.00010765199999999975, 0.00010816699999999929, 0.00010870900000000197, 0.00010699999999999946, 0.00010745900000000072, 0.00010813900000000015, 0.00010849999999999749, 0.00010816599999999982, 0.00010848599999999792, 0.00010765199999999975, 0.00010765299999999922, 0.0001068889999999989, 0.00010799999999999699, 0.00010866699999999979, 0.00010798600000000089, 0.00010836099999999779, 0.00010781899999999858, 0.00010733300000000112, 0.00010683300000000062, 0.00010863900000000065, 0.00010847200000000182, 0.00010862500000000108, 0.00010680600000000096, 0.00010765299999999922, 0.00010798599999999742, 0.00010729199999999842, 0.00010848699999999739, 0.00010847199999999835, 0.00010751399999999953, 0.00010833299999999865, 0.0001075279999999991, 0.00010830599999999899, 0.00010730600000000146, 0.00010697200000000032, 0.00010733399999999713, 0.00010766599999999932, 0.00010718099999999786, 0.00010765199999999975, 0.00010848600000000139, 0.00010851400000000053, 0.00010731900000000155, 0.00010733300000000112, 0.00010690300000000194, 0.00010679200000000139, 0.00010866699999999979]</msg>
<status status="PASS" starttime="20201112 10:14:59.660" endtime="20201112 10:14:59.662"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.655" endtime="20201112 10:14:59.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.665" endtime="20201112 10:14:59.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:59.669" endtime="20201112 10:14:59.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.667" endtime="20201112 10:14:59.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.663" endtime="20201112 10:14:59.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.292" endtime="20201112 10:14:59.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.291" endtime="20201112 10:14:59.690"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.699" endtime="20201112 10:14:59.719"></status>
</kw>
<msg timestamp="20201112 10:14:59.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.697" endtime="20201112 10:14:59.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:59.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:59.721" endtime="20201112 10:14:59.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.723" endtime="20201112 10:14:59.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.694" endtime="20201112 10:14:59.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.692" endtime="20201112 10:14:59.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:59.733" endtime="20201112 10:15:00.021"></status>
</kw>
<msg timestamp="20201112 10:15:00.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022728764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022838833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:59.731" endtime="20201112 10:15:00.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022728764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022838833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.025" endtime="20201112 10:15:00.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.033" endtime="20201112 10:15:00.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.728" endtime="20201112 10:15:00.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.727" endtime="20201112 10:15:00.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:00.040" level="INFO">${RESULT} = [{'time': 0.022838833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011006900000000083, 'source_diff': 0.00011006900000000083}, {'time': 0.022956847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:00.037" endtime="20201112 10:15:00.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:00.054" level="INFO">${ACCURACY} = {'time': [0.022838833, 0.022956847, 0.023076875, 0.023196875, 0.023320944, 0.023438903, 0.023556931, 0.023672986, 0.023794944, 0.023914958, 0.024036986, 0.024159, 0.024281, 0.024403014, 0.024525028, 0...</msg>
<status status="PASS" starttime="20201112 10:15:00.041" endtime="20201112 10:15:00.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.058" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 10:15:00.057" endtime="20201112 10:15:00.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.061" level="INFO">VALUE: [0.00011006900000000083, 0.00011049999999999949, 0.00011061100000000004, 0.00010899999999999799, 0.00011048599999999992, 0.00010916700000000029, 0.00011048699999999939, 0.0001088890000000009, 0.00010949999999999849, 0.00010998599999999942, 0.00010916700000000029, 0.00010984699999999972, 0.00010931900000000008, 0.00010983300000000015, 0.00010916700000000029, 0.00010950000000000196, 0.00011069400000000146, 0.00010934699999999922, 0.00011051399999999906, 0.00011051400000000253, 0.00011001400000000203, 0.00011015300000000172, 0.00010911099999999854, 0.00011065300000000222, 0.00011066699999999832, 0.00010901299999999808, 0.00010934699999999922, 0.00010933299999999965, 0.00010934700000000269, 0.00010983300000000015, 0.00010933299999999965, 0.00011016699999999782, 0.00010883399999999863, 0.0001098479999999992, 0.00010998699999999889, 0.00011000000000000246, 0.00010998599999999942, 0.00011049999999999949, 0.00010915299999999725, 0.00010915300000000072, 0.00010930599999999999, 0.00011051399999999906, 0.00011048599999999992, 0.00010880600000000296, 0.00010948600000000239, 0.00011065199999999928, 0.00010948599999999892, 0.00010931900000000008, 0.00011054200000000167, 0.00010998600000000289]</msg>
<status status="PASS" starttime="20201112 10:15:00.060" endtime="20201112 10:15:00.062"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.055" endtime="20201112 10:15:00.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.065" endtime="20201112 10:15:00.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:00.068" endtime="20201112 10:15:00.088"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.067" endtime="20201112 10:15:00.088"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.063" endtime="20201112 10:15:00.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.691" endtime="20201112 10:15:00.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:59.690" endtime="20201112 10:15:00.089"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.098" endtime="20201112 10:15:00.119"></status>
</kw>
<msg timestamp="20201112 10:15:00.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.097" endtime="20201112 10:15:00.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.120" endtime="20201112 10:15:00.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.123" endtime="20201112 10:15:00.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.094" endtime="20201112 10:15:00.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.092" endtime="20201112 10:15:00.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.132" endtime="20201112 10:15:00.420"></status>
</kw>
<msg timestamp="20201112 10:15:00.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023062403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023173639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.131" endtime="20201112 10:15:00.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023062403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023173639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.424" endtime="20201112 10:15:00.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.432" endtime="20201112 10:15:00.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.128" endtime="20201112 10:15:00.435"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.126" endtime="20201112 10:15:00.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:00.439" level="INFO">${RESULT} = [{'time': 0.023173639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011123600000000067, 'source_diff': 0.00011123600000000067}, {'time': 0.023297653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:00.436" endtime="20201112 10:15:00.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:00.453" level="INFO">${ACCURACY} = {'time': [0.023173639, 0.023297653, 0.023417667, 0.023539681, 0.023657708, 0.023777722, 0.023903722, 0.02402575, 0.02414775, 0.024269764, 0.024395833, 0.024519833, 0.024637819, 0.024759833, 0.02488183...</msg>
<status status="PASS" starttime="20201112 10:15:00.440" endtime="20201112 10:15:00.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.458" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 10:15:00.457" endtime="20201112 10:15:00.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.460" level="INFO">VALUE: [0.00011123600000000067, 0.00011132000000000156, 0.00011225000000000124, 0.00011231999999999909, 0.00011083300000000115, 0.00011148600000000092, 0.00011148599999999745, 0.00011247199999999888, 0.00011081899999999811, 0.00011113899999999968, 0.00011236099999999832, 0.00011169400000000246, 0.00011081899999999811, 0.00011231899999999961, 0.00011081899999999811, 0.00011148600000000092, 0.00011247199999999888, 0.00011099999999999999, 0.00011115300000000272, 0.00011083400000000063, 0.00011133400000000113, 0.00011181999999999859, 0.00011268000000000042, 0.00011148600000000092, 0.00011268099999999989, 0.00011248600000000192, 0.00011198600000000142, 0.00011147200000000135, 0.00011198599999999795, 0.00011148600000000092, 0.00011270799999999956, 0.00011133299999999818, 0.00011148600000000092, 0.00011192999999999967, 0.00011165299999999975, 0.00011231899999999961, 0.00011181999999999859, 0.00011133400000000113, 0.00011163900000000018, 0.00011080599999999802, 0.00011098600000000042, 0.00011248600000000192, 0.00011198599999999795, 0.00011248600000000192, 0.00011166699999999932, 0.00011170800000000203, 0.00011182000000000206, 0.00011265300000000075, 0.00011165299999999975, 0.00011249999999999802]</msg>
<status status="PASS" starttime="20201112 10:15:00.459" endtime="20201112 10:15:00.467"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.454" endtime="20201112 10:15:00.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.470" endtime="20201112 10:15:00.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:00.473" endtime="20201112 10:15:00.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.472" endtime="20201112 10:15:00.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.468" endtime="20201112 10:15:00.494"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.090" endtime="20201112 10:15:00.494"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.090" endtime="20201112 10:15:00.494"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.503" endtime="20201112 10:15:00.524"></status>
</kw>
<msg timestamp="20201112 10:15:00.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.502" endtime="20201112 10:15:00.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.526" endtime="20201112 10:15:00.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.528" endtime="20201112 10:15:00.530"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.499" endtime="20201112 10:15:00.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.497" endtime="20201112 10:15:00.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.538" endtime="20201112 10:15:00.824"></status>
</kw>
<msg timestamp="20201112 10:15:00.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022804, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:00.536" endtime="20201112 10:15:00.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022804, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:00.828" endtime="20201112 10:15:00.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.836" endtime="20201112 10:15:00.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.533" endtime="20201112 10:15:00.839"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.532" endtime="20201112 10:15:00.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:00.843" level="INFO">${RESULT} = [{'time': 0.022804, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011372200000000013, 'source_diff': 0.00011372200000000013}, {'time': 0.022928014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:00.840" endtime="20201112 10:15:00.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:00.857" level="INFO">${ACCURACY} = {'time': [0.022804, 0.022928014, 0.023050028, 0.023168069, 0.023286069, 0.023406069, 0.023528083, 0.023654139, 0.023778111, 0.023902139, 0.024026139, 0.024146181, 0.024268236, 0.024396181, 0.024520208...</msg>
<status status="PASS" starttime="20201112 10:15:00.844" endtime="20201112 10:15:00.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.862" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 10:15:00.861" endtime="20201112 10:15:00.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.864" level="INFO">VALUE: [0.00011372200000000013, 0.00011281999999999959, 0.00011433400000000066, 0.00011336099999999932, 0.00011367999999999795, 0.0001142770000000029, 0.00011366600000000185, 0.00011369500000000046, 0.00011316700000000082, 0.00011284699999999925, 0.00011397199999999691, 0.0001128619999999983, 0.00011440299999999903, 0.00011416699999999835, 0.00011433300000000118, 0.00011398599999999995, 0.00011366699999999785, 0.00011333300000000018, 0.00011434700000000075, 0.00011448599999999698, 0.00011369400000000099, 0.00011315300000000125, 0.00011349999999999902, 0.00011381900000000111, 0.00011466599999999938, 0.00011315300000000125, 0.00011297199999999938, 0.00011295799999999981, 0.00011448600000000045, 0.00011298600000000242, 0.00011445900000000078, 0.00011430599999999805, 0.00011447200000000088, 0.00011381900000000111, 0.0001134299999999977, 0.00011466699999999885, 0.00011466699999999885, 0.00011283399999999916, 0.00011297199999999938, 0.00011432000000000109, 0.00011313900000000168, 0.00011379100000000197, 0.00011379100000000197, 0.00011384700000000025, 0.00011448600000000045, 0.00011298599999999895, 0.00011365299999999828, 0.00011463899999999971, 0.00011362499999999914, 0.00011399999999999952]</msg>
<status status="PASS" starttime="20201112 10:15:00.863" endtime="20201112 10:15:00.865"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.858" endtime="20201112 10:15:00.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.868" endtime="20201112 10:15:00.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:00.872" endtime="20201112 10:15:00.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.870" endtime="20201112 10:15:00.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.866" endtime="20201112 10:15:00.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.495" endtime="20201112 10:15:00.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.494" endtime="20201112 10:15:00.893"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.902" endtime="20201112 10:15:00.922"></status>
</kw>
<msg timestamp="20201112 10:15:00.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.900" endtime="20201112 10:15:00.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:00.923" endtime="20201112 10:15:00.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.926" endtime="20201112 10:15:00.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.897" endtime="20201112 10:15:00.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.895" endtime="20201112 10:15:00.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.935" endtime="20201112 10:15:01.223"></status>
</kw>
<msg timestamp="20201112 10:15:01.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023028667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023144083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:00.934" endtime="20201112 10:15:01.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023028667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023144083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.227" endtime="20201112 10:15:01.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.235" endtime="20201112 10:15:01.237"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.931" endtime="20201112 10:15:01.237"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.929" endtime="20201112 10:15:01.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:01.242" level="INFO">${RESULT} = [{'time': 0.023144083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011541600000000013, 'source_diff': 0.00011541600000000013}, {'time': 0.023274097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:01.239" endtime="20201112 10:15:01.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:01.256" level="INFO">${ACCURACY} = {'time': [0.023144083, 0.023274097, 0.023400167, 0.023522139, 0.023650194, 0.023772153, 0.023900167, 0.024022194, 0.024150194, 0.024270208, 0.024392222, 0.02451425, 0.02463825, 0.024762264, 0.02488633...</msg>
<status status="PASS" starttime="20201112 10:15:01.243" endtime="20201112 10:15:01.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.261" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 10:15:01.260" endtime="20201112 10:15:01.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.264" level="INFO">VALUE: [0.00011541600000000013, 0.00011545799999999884, 0.00011587499999999792, 0.00011601400000000109, 0.00011620799999999959, 0.00011581999999999912, 0.00011598599999999848, 0.00011511100000000107, 0.00011663799999999877, 0.00011548600000000145, 0.00011581900000000311, 0.00011633299999999971, 0.00011548600000000145, 0.00011613899999999774, 0.00011486100000000082, 0.00011562499999999767, 0.00011626399999999787, 0.000116291000000001, 0.00011547199999999841, 0.00011498599999999748, 0.00011531900000000261, 0.00011613900000000121, 0.00011482000000000159, 0.00011631999999999962, 0.00011566700000000332, 0.00011630600000000005, 0.00011563799999999777, 0.00011515299999999978, 0.00011583299999999921, 0.00011518099999999892, 0.00011633299999999971, 0.00011633400000000266, 0.00011583400000000216, 0.00011533399999999819, 0.00011567999999999995, 0.00011483300000000168, 0.00011595799999999934, 0.00011666700000000085, 0.00011531899999999914, 0.00011483300000000168, 0.00011583399999999869, 0.00011480600000000202, 0.00011611200000000155, 0.00011481900000000211, 0.00011648599999999898, 0.00011565300000000028, 0.00011583300000000268, 0.00011648599999999898, 0.00011581999999999912, 0.00011619400000000002]</msg>
<status status="PASS" starttime="20201112 10:15:01.262" endtime="20201112 10:15:01.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.257" endtime="20201112 10:15:01.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.268" endtime="20201112 10:15:01.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:01.271" endtime="20201112 10:15:01.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.270" endtime="20201112 10:15:01.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.266" endtime="20201112 10:15:01.292"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.893" endtime="20201112 10:15:01.292"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.893" endtime="20201112 10:15:01.292"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.301" endtime="20201112 10:15:01.322"></status>
</kw>
<msg timestamp="20201112 10:15:01.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.300" endtime="20201112 10:15:01.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.323" endtime="20201112 10:15:01.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.326" endtime="20201112 10:15:01.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.297" endtime="20201112 10:15:01.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.295" endtime="20201112 10:15:01.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.335" endtime="20201112 10:15:01.624"></status>
</kw>
<msg timestamp="20201112 10:15:01.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022748903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022866819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.334" endtime="20201112 10:15:01.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022748903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022866819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.628" endtime="20201112 10:15:01.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.636" endtime="20201112 10:15:01.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.331" endtime="20201112 10:15:01.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.329" endtime="20201112 10:15:01.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:01.643" level="INFO">${RESULT} = [{'time': 0.022866819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011791599999999916, 'source_diff': 0.00011791599999999916}, {'time': 0.022998833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:01.640" endtime="20201112 10:15:01.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:01.656" level="INFO">${ACCURACY} = {'time': [0.022866819, 0.022998833, 0.023128847, 0.023254875, 0.023376875, 0.023506889, 0.023636944, 0.023766917, 0.023898931, 0.024028944, 0.024158972, 0.024289, 0.024415, 0.024537028, 0.024665028, 0...</msg>
<status status="PASS" starttime="20201112 10:15:01.644" endtime="20201112 10:15:01.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.661" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 10:15:01.660" endtime="20201112 10:15:01.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.663" level="INFO">VALUE: [0.00011791599999999916, 0.00011766599999999891, 0.00011865299999999981, 0.00011748599999999998, 0.00011748599999999998, 0.00011697199999999991, 0.00011834700000000128, 0.00011831999999999815, 0.00011797300000000038, 0.00011765199999999934, 0.00011865299999999981, 0.00011851400000000012, 0.00011698599999999948, 0.00011733400000000019, 0.00011800000000000005, 0.00011698600000000295, 0.00011855499999999936, 0.00011833300000000171, 0.00011800000000000005, 0.00011766700000000185, 0.00011713899999999874, 0.00011681900000000064, 0.00011780599999999808, 0.00011748599999999998, 0.00011715299999999831, 0.00011866599999999991, 0.00011798600000000048, 0.00011865200000000034, 0.00011800000000000005, 0.00011851399999999665, 0.00011783299999999775, 0.00011784800000000026, 0.00011734799999999976, 0.00011750000000000302, 0.00011733299999999725, 0.00011786099999999688, 0.00011695800000000034, 0.00011804199999999876, 0.00011681899999999718, 0.00011797200000000091, 0.00011815299999999931, 0.00011716700000000135, 0.00011749999999999955, 0.00011694400000000077, 0.00011815199999999984, 0.00011831899999999868, 0.00011813899999999974, 0.00011819399999999855, 0.00011715299999999831, 0.00011766700000000185]</msg>
<status status="PASS" starttime="20201112 10:15:01.662" endtime="20201112 10:15:01.664"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.657" endtime="20201112 10:15:01.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.667" endtime="20201112 10:15:01.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:01.671" endtime="20201112 10:15:01.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.669" endtime="20201112 10:15:01.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.665" endtime="20201112 10:15:01.691"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.293" endtime="20201112 10:15:01.691"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.293" endtime="20201112 10:15:01.691"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.700" endtime="20201112 10:15:01.721"></status>
</kw>
<msg timestamp="20201112 10:15:01.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.698" endtime="20201112 10:15:01.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:01.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:01.722" endtime="20201112 10:15:01.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.725" endtime="20201112 10:15:01.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.696" endtime="20201112 10:15:01.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.694" endtime="20201112 10:15:01.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.734" endtime="20201112 10:15:02.022"></status>
</kw>
<msg timestamp="20201112 10:15:02.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022355208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022474278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:01.732" endtime="20201112 10:15:02.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022355208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022474278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.026" endtime="20201112 10:15:02.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.034" endtime="20201112 10:15:02.036"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.730" endtime="20201112 10:15:02.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.728" endtime="20201112 10:15:02.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:02.041" level="INFO">${RESULT} = [{'time': 0.022474278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001190699999999989, 'source_diff': 0.0001190699999999989}, {'time': 0.022606389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:02.038" endtime="20201112 10:15:02.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:02.054" level="INFO">${ACCURACY} = {'time': [0.022474278, 0.022606389, 0.022730319, 0.022858333, 0.022984361, 0.023110444, 0.023234403, 0.023364389, 0.023492403, 0.023622431, 0.023750431, 0.023874444, 0.024000458, 0.024130472, 0.024258...</msg>
<status status="PASS" starttime="20201112 10:15:02.042" endtime="20201112 10:15:02.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.059" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 10:15:02.058" endtime="20201112 10:15:02.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.061" level="INFO">VALUE: [0.0001190699999999989, 0.00012072200000000019, 0.00011899999999999758, 0.00011997200000000291, 0.00012034699999999982, 0.00011908300000000246, 0.00011886100000000135, 0.00012048599999999951, 0.00012066699999999791, 0.00011998699999999848, 0.00011965299999999734, 0.0001193050000000001, 0.00011881899999999918, 0.00011898600000000148, 0.00011981900000000018, 0.00011980600000000008, 0.00011882000000000212, 0.00011933399999999872, 0.00012032000000000015, 0.00012033299999999678, 0.00011934699999999882, 0.00011909699999999857, 0.00012049999999999908, 0.00011901400000000062, 0.0001196249999999982, 0.00012065199999999887, 0.00011931999999999915, 0.00011916599999999694, 0.00012063800000000277, 0.00012037499999999896, 0.00011881899999999918, 0.00011981900000000018, 0.00011915300000000031, 0.00011966700000000038, 0.00011884699999999832, 0.00012065199999999887, 0.00012000000000000205, 0.00011916600000000041, 0.00011963900000000124, 0.00012047199999999994, 0.00012061099999999964, 0.00011966700000000038, 0.00012013900000000174, 0.00012065300000000181, 0.00011920800000000259, 0.00012016600000000141, 0.00011948600000000198, 0.00012065300000000181, 0.00011948600000000198, 0.00011900000000000105]</msg>
<status status="PASS" starttime="20201112 10:15:02.060" endtime="20201112 10:15:02.062"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.055" endtime="20201112 10:15:02.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.065" endtime="20201112 10:15:02.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:02.069" endtime="20201112 10:15:02.088"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.067" endtime="20201112 10:15:02.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.063" endtime="20201112 10:15:02.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.692" endtime="20201112 10:15:02.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.692" endtime="20201112 10:15:02.090"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.098" endtime="20201112 10:15:02.119"></status>
</kw>
<msg timestamp="20201112 10:15:02.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.097" endtime="20201112 10:15:02.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.120" endtime="20201112 10:15:02.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.123" endtime="20201112 10:15:02.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.094" endtime="20201112 10:15:02.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.092" endtime="20201112 10:15:02.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.132" endtime="20201112 10:15:02.430"></status>
</kw>
<msg timestamp="20201112 10:15:02.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.130" endtime="20201112 10:15:02.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022252278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.434" endtime="20201112 10:15:02.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.442" endtime="20201112 10:15:02.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.128" endtime="20201112 10:15:02.445"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.126" endtime="20201112 10:15:02.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:02.449" level="INFO">${RESULT} = [{'time': 0.022373556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012127799999999897, 'source_diff': 0.00012127799999999897}, {'time': 0.022507528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:02.446" endtime="20201112 10:15:02.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:02.463" level="INFO">${ACCURACY} = {'time': [0.022373556, 0.022507528, 0.022637542, 0.022763556, 0.022893583, 0.023029597, 0.023155625, 0.023281625, 0.023413708, 0.023547653, 0.023673681, 0.023809681, 0.023945736, 0.024071722, 0.024207...</msg>
<status status="PASS" starttime="20201112 10:15:02.450" endtime="20201112 10:15:02.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.467" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 10:15:02.466" endtime="20201112 10:15:02.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.470" level="INFO">VALUE: [0.00012127799999999897, 0.00012163899999999978, 0.00012165299999999934, 0.00012098699999999948, 0.00012199999999999711, 0.00012133299999999778, 0.00012186099999999742, 0.00012081900000000118, 0.00012254099999999685, 0.00012216700000000288, 0.00012147299999999694, 0.00012247299999999794, 0.00012202799999999972, 0.00012099999999999958, 0.0001223189999999992, 0.00012252800000000022, 0.00012229199999999954, 0.00012098600000000001, 0.00012216699999999941, 0.00012200000000000058, 0.00012263799999999783, 0.00012165199999999987, 0.0001224860000000015, 0.00012166700000000238, 0.00012113899999999928, 0.00012080600000000108, 0.00012198599999999754, 0.00012144500000000127, 0.00012183299999999828, 0.0001218189999999987, 0.00012116599999999894, 0.00012180600000000208, 0.00012265300000000035, 0.00012183400000000122, 0.00012083400000000022, 0.00012131999999999768, 0.00012187500000000046, 0.00012165199999999987, 0.00012131900000000168, 0.00012216700000000288, 0.00012080599999999761, 0.00012166699999999891, 0.00012115300000000231, 0.00012099999999999958, 0.00012116599999999894, 0.00012198600000000101, 0.0001208050000000016, 0.00012183300000000175, 0.00012165299999999934, 0.0001223189999999992]</msg>
<status status="PASS" starttime="20201112 10:15:02.468" endtime="20201112 10:15:02.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.463" endtime="20201112 10:15:02.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.473" endtime="20201112 10:15:02.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:02.477" endtime="20201112 10:15:02.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.475" endtime="20201112 10:15:02.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.472" endtime="20201112 10:15:02.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.090" endtime="20201112 10:15:02.497"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.090" endtime="20201112 10:15:02.498"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.506" endtime="20201112 10:15:02.527"></status>
</kw>
<msg timestamp="20201112 10:15:02.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.505" endtime="20201112 10:15:02.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.528" endtime="20201112 10:15:02.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.531" endtime="20201112 10:15:02.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.502" endtime="20201112 10:15:02.533"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.500" endtime="20201112 10:15:02.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.540" endtime="20201112 10:15:02.826"></status>
</kw>
<msg timestamp="20201112 10:15:02.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022354319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.538" endtime="20201112 10:15:02.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022354319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.831" endtime="20201112 10:15:02.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.839" endtime="20201112 10:15:02.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.536" endtime="20201112 10:15:02.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.534" endtime="20201112 10:15:02.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:02.846" level="INFO">${RESULT} = [{'time': 0.022478556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012423699999999926, 'source_diff': 0.00012423699999999926}, {'time': 0.022610569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:02.842" endtime="20201112 10:15:02.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:02.859" level="INFO">${ACCURACY} = {'time': [0.022478556, 0.022610569, 0.022746583, 0.022876611, 0.023010611, 0.023140625, 0.023274681, 0.023404653, 0.023542681, 0.023676681, 0.023808708, 0.023940708, 0.02407075, 0.024208764, 0.0243387...</msg>
<status status="PASS" starttime="20201112 10:15:02.847" endtime="20201112 10:15:02.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.864" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 10:15:02.863" endtime="20201112 10:15:02.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.866" level="INFO">VALUE: [0.00012423699999999926, 0.00012316600000000094, 0.0001239999999999991, 0.000123680000000001, 0.00012416700000000142, 0.00012316700000000042, 0.00012302799999999725, 0.000122986000000002, 0.0001246389999999993, 0.00012280600000000308, 0.00012448600000000004, 0.00012279100000000057, 0.00012431899999999774, 0.00012368100000000048, 0.00012284699999999885, 0.00012366700000000092, 0.0001235839999999995, 0.00012466599999999897, 0.00012347199999999947, 0.00012413900000000228, 0.00012433300000000078, 0.0001243190000000012, 0.00012448600000000004, 0.00012383399999999975, 0.00012400000000000258, 0.00012365300000000135, 0.00012420800000000065, 0.00012448600000000004, 0.00012448600000000004, 0.00012400000000000258, 0.00012433300000000078, 0.00012334799999999882, 0.00012436099999999992, 0.0001240129999999992, 0.00012401400000000215, 0.00012466600000000244, 0.00012431899999999774, 0.0001238190000000007, 0.00012398599999999954, 0.00012343099999999677, 0.00012430599999999764, 0.00012432000000000068, 0.00012355600000000036, 0.00012401399999999868, 0.00012317999999999704, 0.0001234999999999986, 0.00012319499999999955, 0.00012448600000000004, 0.00012347299999999894, 0.00012333399999999925]</msg>
<status status="PASS" starttime="20201112 10:15:02.865" endtime="20201112 10:15:02.867"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.860" endtime="20201112 10:15:02.867"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.870" endtime="20201112 10:15:02.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:02.873" endtime="20201112 10:15:02.893"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.872" endtime="20201112 10:15:02.893"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.868" endtime="20201112 10:15:02.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.499" endtime="20201112 10:15:02.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.498" endtime="20201112 10:15:02.894"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.903" endtime="20201112 10:15:02.924"></status>
</kw>
<msg timestamp="20201112 10:15:02.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.901" endtime="20201112 10:15:02.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:02.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:02.926" endtime="20201112 10:15:02.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.928" endtime="20201112 10:15:02.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.899" endtime="20201112 10:15:02.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.897" endtime="20201112 10:15:02.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:02.937" endtime="20201112 10:15:03.226"></status>
</kw>
<msg timestamp="20201112 10:15:03.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022383028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:02.936" endtime="20201112 10:15:03.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022257472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022383028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.230" endtime="20201112 10:15:03.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.239" endtime="20201112 10:15:03.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.933" endtime="20201112 10:15:03.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.931" endtime="20201112 10:15:03.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:03.245" level="INFO">${RESULT} = [{'time': 0.022383028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001255559999999989, 'source_diff': 0.0001255559999999989}, {'time': 0.022519042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:03.242" endtime="20201112 10:15:03.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:03.259" level="INFO">${ACCURACY} = {'time': [0.022383028, 0.022519042, 0.022653056, 0.022791069, 0.022923097, 0.023057097, 0.023195111, 0.023327139, 0.023463153, 0.023597167, 0.023737181, 0.023873194, 0.024011222, 0.024141236, 0.024275...</msg>
<status status="PASS" starttime="20201112 10:15:03.246" endtime="20201112 10:15:03.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.264" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 10:15:03.263" endtime="20201112 10:15:03.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.266" level="INFO">VALUE: [0.0001255559999999989, 0.0001253199999999982, 0.00012515300000000285, 0.00012613800000000133, 0.0001255000000000006, 0.00012531899999999874, 0.00012665300000000088, 0.00012665300000000088, 0.00012566699999999945, 0.00012548599999999757, 0.0001263199999999992, 0.000126471999999999, 0.0001266529999999974, 0.0001255000000000006, 0.00012616700000000342, 0.0001260000000000011, 0.00012630599999999964, 0.0001255000000000006, 0.00012593099999999927, 0.00012631899999999974, 0.00012583300000000228, 0.00012648600000000204, 0.0001261390000000008, 0.0001250000000000001, 0.00012547200000000147, 0.0001260000000000011, 0.00012582000000000218, 0.0001258329999999988, 0.0001253190000000022, 0.00012548599999999757, 0.0001253329999999983, 0.00012515299999999938, 0.00012484800000000032, 0.0001255000000000006, 0.00012532000000000168, 0.000126165999999997, 0.00012581899999999924, 0.0001248190000000017, 0.00012648600000000204, 0.00012562499999999727, 0.00012548600000000104, 0.00012584699999999838, 0.00012515299999999938, 0.00012634699999999888, 0.00012512500000000024, 0.0001255000000000006, 0.000126471999999999, 0.00012615300000000038, 0.0001248199999999977, 0.00012654099999999738]</msg>
<status status="PASS" starttime="20201112 10:15:03.265" endtime="20201112 10:15:03.267"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.260" endtime="20201112 10:15:03.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.270" endtime="20201112 10:15:03.272"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:03.274" endtime="20201112 10:15:03.293"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.272" endtime="20201112 10:15:03.294"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.268" endtime="20201112 10:15:03.294"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.895" endtime="20201112 10:15:03.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:02.894" endtime="20201112 10:15:03.295"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.305" endtime="20201112 10:15:03.326"></status>
</kw>
<msg timestamp="20201112 10:15:03.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.303" endtime="20201112 10:15:03.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.327" endtime="20201112 10:15:03.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.330" endtime="20201112 10:15:03.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.300" endtime="20201112 10:15:03.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.298" endtime="20201112 10:15:03.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.339" endtime="20201112 10:15:03.627"></status>
</kw>
<msg timestamp="20201112 10:15:03.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024268111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024396167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.338" endtime="20201112 10:15:03.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024268111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024396167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.631" endtime="20201112 10:15:03.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.639" endtime="20201112 10:15:03.641"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.335" endtime="20201112 10:15:03.642"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.333" endtime="20201112 10:15:03.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:03.646" level="INFO">${RESULT} = [{'time': 0.024396167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001280560000000014, 'source_diff': 0.0001280560000000014}, {'time': 0.024532181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:03.643" endtime="20201112 10:15:03.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:03.660" level="INFO">${ACCURACY} = {'time': [0.024396167, 0.024532181, 0.024668194, 0.024804208, 0.024938264, 0.02507225, 0.02520625, 0.025348292, 0.025482278, 0.025618306, 0.025754319, 0.025890347, 0.026024403, 0.026166361, 0.02630438...</msg>
<status status="PASS" starttime="20201112 10:15:03.647" endtime="20201112 10:15:03.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.665" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 10:15:03.664" endtime="20201112 10:15:03.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.667" level="INFO">VALUE: [0.0001280560000000014, 0.00012850000000000014, 0.00012766600000000197, 0.0001283330000000013, 0.00012769500000000059, 0.00012866700000000245, 0.00012798600000000007, 0.00012816700000000195, 0.00012765300000000188, 0.00012833400000000078, 0.00012681900000000024, 0.0001286659999999995, 0.00012822200000000075, 0.00012763899999999884, 0.0001283330000000013, 0.00012686199999999842, 0.0001273200000000002, 0.00012749999999999914, 0.00012684699999999938, 0.00012699999999999864, 0.00012787500000000299, 0.0001286529999999994, 0.00012731900000000074, 0.00012762500000000274, 0.00012766700000000145, 0.00012683400000000275, 0.00012779099999999863, 0.0001285139999999997, 0.00012731899999999727, 0.00012842999999999882, 0.0001269719999999995, 0.00012713899999999834, 0.00012766699999999798, 0.00012850000000000014, 0.0001283330000000013, 0.00012765199999999893, 0.00012698599999999907, 0.0001273330000000003, 0.00012766700000000145, 0.00012798600000000007, 0.00012818099999999805, 0.0001283339999999973, 0.000127472, 0.00012698599999999907, 0.00012827799999999903, 0.00012736099999999945, 0.00012748599999999957, 0.00012748599999999957, 0.00012708300000000006, 0.00012833400000000078]</msg>
<status status="PASS" starttime="20201112 10:15:03.666" endtime="20201112 10:15:03.668"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.661" endtime="20201112 10:15:03.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.671" endtime="20201112 10:15:03.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:03.675" endtime="20201112 10:15:03.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.673" endtime="20201112 10:15:03.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.669" endtime="20201112 10:15:03.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.296" endtime="20201112 10:15:03.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.295" endtime="20201112 10:15:03.696"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.705" endtime="20201112 10:15:03.727"></status>
</kw>
<msg timestamp="20201112 10:15:03.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.703" endtime="20201112 10:15:03.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:03.729" endtime="20201112 10:15:03.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.731" endtime="20201112 10:15:03.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.700" endtime="20201112 10:15:03.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.698" endtime="20201112 10:15:03.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.741" endtime="20201112 10:15:04.028"></status>
</kw>
<msg timestamp="20201112 10:15:04.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023049917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023180528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.739" endtime="20201112 10:15:04.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023049917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023180528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.032" endtime="20201112 10:15:04.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.041" endtime="20201112 10:15:04.042"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.736" endtime="20201112 10:15:04.043"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.735" endtime="20201112 10:15:04.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:04.047" level="INFO">${RESULT} = [{'time': 0.023180528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013061099999999923, 'source_diff': 0.00013061099999999923}, {'time': 0.023322514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:04.044" endtime="20201112 10:15:04.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:04.061" level="INFO">${ACCURACY} = {'time': [0.023180528, 0.023322514, 0.023464528, 0.023604542, 0.023746583, 0.023886611, 0.024020611, 0.024156667, 0.024296639, 0.024440639, 0.024578653, 0.024718681, 0.024854694, 0.024994708, 0.025136...</msg>
<status status="PASS" starttime="20201112 10:15:04.048" endtime="20201112 10:15:04.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.066" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 10:15:04.065" endtime="20201112 10:15:04.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.068" level="INFO">VALUE: [0.00013061099999999923, 0.00013031999999999974, 0.0001294859999999981, 0.00012881999999999824, 0.00012945800000000243, 0.00012916699999999948, 0.00012917999999999957, 0.00012969499999999912, 0.00012916699999999948, 0.0001301530000000009, 0.0001294859999999981, 0.00012926400000000046, 0.00013033299999999984, 0.00013050000000000214, 0.00012900000000000064, 0.00012886099999999748, 0.00013016700000000048, 0.0001303339999999993, 0.00012966699999999998, 0.0001306530000000014, 0.00013034700000000288, 0.00012931899999999927, 0.00012883299999999834, 0.00012999999999999817, 0.0001290140000000002, 0.00012966699999999998, 0.00013000000000000164, 0.0001291529999999999, 0.0001294859999999981, 0.00012981899999999977, 0.0001298050000000002, 0.00012983299999999934, 0.00012933299999999884, 0.00012981999999999924, 0.00012929200000000307, 0.0001296530000000004, 0.00012881900000000224, 0.00012915200000000043, 0.00012948600000000157, 0.00013009699999999916, 0.00012877799999999953, 0.0001303339999999993, 0.00013015299999999744, 0.00012965200000000093, 0.00012950000000000114, 0.0001288049999999992, 0.00012954199999999985, 0.0001304859999999991, 0.00013033299999999984, 0.00013031999999999974]</msg>
<status status="PASS" starttime="20201112 10:15:04.067" endtime="20201112 10:15:04.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.062" endtime="20201112 10:15:04.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.072" endtime="20201112 10:15:04.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:04.076" endtime="20201112 10:15:04.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.074" endtime="20201112 10:15:04.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.071" endtime="20201112 10:15:04.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.697" endtime="20201112 10:15:04.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.696" endtime="20201112 10:15:04.097"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.106" endtime="20201112 10:15:04.127"></status>
</kw>
<msg timestamp="20201112 10:15:04.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.104" endtime="20201112 10:15:04.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.128" endtime="20201112 10:15:04.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.131" endtime="20201112 10:15:04.133"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.101" endtime="20201112 10:15:04.133"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.099" endtime="20201112 10:15:04.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.140" endtime="20201112 10:15:04.427"></status>
</kw>
<msg timestamp="20201112 10:15:04.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022743972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022875375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.139" endtime="20201112 10:15:04.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022743972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022875375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.431" endtime="20201112 10:15:04.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.440" endtime="20201112 10:15:04.441"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.136" endtime="20201112 10:15:04.442"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.134" endtime="20201112 10:15:04.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:04.446" level="INFO">${RESULT} = [{'time': 0.022875375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001314029999999987, 'source_diff': 0.0001314029999999987}, {'time': 0.023021375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:04.443" endtime="20201112 10:15:04.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:04.460" level="INFO">${ACCURACY} = {'time': [0.022875375, 0.023021375, 0.023165375, 0.023305389, 0.023445417, 0.023581417, 0.023725444, 0.023869458, 0.0240115, 0.024151486, 0.0242935, 0.024433528, 0.024579611, 0.024725569, 0.024871569,...</msg>
<status status="PASS" starttime="20201112 10:15:04.447" endtime="20201112 10:15:04.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.465" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 10:15:04.464" endtime="20201112 10:15:04.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.467" level="INFO">VALUE: [0.0001314029999999987, 0.00013197200000000103, 0.00013124999999999942, 0.0001318059999999982, 0.000131166999999998, 0.00013184800000000038, 0.00013191599999999928, 0.0001318189999999983, 0.00013152800000000228, 0.0001323189999999988, 0.0001313059999999977, 0.0001316669999999985, 0.00013272200000000178, 0.00013250000000000067, 0.00013266600000000003, 0.0001308189999999973, 0.0001324860000000011, 0.0001316530000000024, 0.000132166999999999, 0.00013116700000000148, 0.00013247299999999754, 0.00013165299999999894, 0.00013115199999999896, 0.0001308469999999999, 0.00013250000000000067, 0.00013151399999999924, 0.00013116599999999853, 0.0001326669999999995, 0.0001316530000000024, 0.00013181900000000177, 0.0001323189999999988, 0.00013099999999999917, 0.0001326669999999995, 0.00013247200000000153, 0.00013233399999999784, 0.00013134799999999988, 0.000131166999999998, 0.00013250000000000067, 0.00013099999999999917, 0.00013229099999999966, 0.0001313189999999978, 0.0001314860000000001, 0.00013166700000000198, 0.000132473000000001, 0.00013248700000000058, 0.00013147200000000053, 0.00013147200000000053, 0.00013263900000000037, 0.0001323189999999988, 0.00013251400000000024]</msg>
<status status="PASS" starttime="20201112 10:15:04.466" endtime="20201112 10:15:04.468"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.461" endtime="20201112 10:15:04.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.471" endtime="20201112 10:15:04.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:04.475" endtime="20201112 10:15:04.494"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.473" endtime="20201112 10:15:04.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.470" endtime="20201112 10:15:04.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.098" endtime="20201112 10:15:04.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.097" endtime="20201112 10:15:04.496"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.505" endtime="20201112 10:15:04.526"></status>
</kw>
<msg timestamp="20201112 10:15:04.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.503" endtime="20201112 10:15:04.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.527" endtime="20201112 10:15:04.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.530" endtime="20201112 10:15:04.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.500" endtime="20201112 10:15:04.532"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.498" endtime="20201112 10:15:04.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.539" endtime="20201112 10:15:04.828"></status>
</kw>
<msg timestamp="20201112 10:15:04.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022683472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.538" endtime="20201112 10:15:04.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022683472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022816486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.833" endtime="20201112 10:15:04.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.841" endtime="20201112 10:15:04.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.535" endtime="20201112 10:15:04.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.533" endtime="20201112 10:15:04.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:04.848" level="INFO">${RESULT} = [{'time': 0.022816486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013301400000000074, 'source_diff': 0.00013301400000000074}, {'time': 0.0229645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:04.844" endtime="20201112 10:15:04.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:04.861" level="INFO">${ACCURACY} = {'time': [0.022816486, 0.0229645, 0.023110556, 0.023256556, 0.023400597, 0.023544569, 0.023690597, 0.023836597, 0.023974611, 0.024118639, 0.024264653, 0.024404667, 0.024552736, 0.024698708, 0.02484077...</msg>
<status status="PASS" starttime="20201112 10:15:04.849" endtime="20201112 10:15:04.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.866" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 10:15:04.865" endtime="20201112 10:15:04.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.869" level="INFO">VALUE: [0.00013301400000000074, 0.0001333059999999997, 0.00013386200000000195, 0.00013401400000000174, 0.00013337499999999808, 0.00013375000000000192, 0.00013433300000000037, 0.00013363900000000137, 0.0001328189999999993, 0.00013313900000000087, 0.0001336670000000005, 0.00013282000000000224, 0.0001335419999999969, 0.00013333299999999937, 0.00013287500000000105, 0.00013433300000000037, 0.00013351400000000124, 0.00013295899999999847, 0.0001339999999999987, 0.00013281999999999877, 0.00013351400000000124, 0.00013297199999999856, 0.00013366600000000103, 0.0001343190000000008, 0.00013466699999999804, 0.00013295800000000246, 0.0001336670000000005, 0.00013300000000000117, 0.0001344999999999992, 0.0001334579999999995, 0.000133860999999999, 0.0001346670000000015, 0.00013398599999999913, 0.0001346670000000015, 0.000133167, 0.0001339999999999987, 0.00013462499999999933, 0.00013444400000000092, 0.0001346670000000015, 0.00013283299999999887, 0.00013319499999999915, 0.0001333059999999997, 0.0001333059999999997, 0.00013398599999999913, 0.0001336800000000006, 0.00013365299999999747, 0.00013401399999999827, 0.00013350000000000167, 0.00013381999999999977, 0.000134167000000001]</msg>
<status status="PASS" starttime="20201112 10:15:04.867" endtime="20201112 10:15:04.869"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.862" endtime="20201112 10:15:04.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.872" endtime="20201112 10:15:04.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:04.876" endtime="20201112 10:15:04.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.874" endtime="20201112 10:15:04.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.871" endtime="20201112 10:15:04.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.497" endtime="20201112 10:15:04.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.496" endtime="20201112 10:15:04.897"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.906" endtime="20201112 10:15:04.928"></status>
</kw>
<msg timestamp="20201112 10:15:04.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.904" endtime="20201112 10:15:04.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:04.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:04.929" endtime="20201112 10:15:04.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.932" endtime="20201112 10:15:04.934"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.902" endtime="20201112 10:15:04.934"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.899" endtime="20201112 10:15:04.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:04.941" endtime="20201112 10:15:05.228"></status>
</kw>
<msg timestamp="20201112 10:15:05.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023086292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023221042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:04.940" endtime="20201112 10:15:05.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023086292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023221042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.232" endtime="20201112 10:15:05.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.241" endtime="20201112 10:15:05.242"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.937" endtime="20201112 10:15:05.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.935" endtime="20201112 10:15:05.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:05.247" level="INFO">${RESULT} = [{'time': 0.023221042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013474999999999945, 'source_diff': 0.00013474999999999945}, {'time': 0.023369042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:05.244" endtime="20201112 10:15:05.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:05.261" level="INFO">${ACCURACY} = {'time': [0.023221042, 0.023369042, 0.023519069, 0.023661069, 0.023801083, 0.023951125, 0.024097125, 0.024243139, 0.024389181, 0.024531181, 0.024673194, 0.024821208, 0.02496525, 0.025107236, 0.0252512...</msg>
<status status="PASS" starttime="20201112 10:15:05.248" endtime="20201112 10:15:05.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.266" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 10:15:05.265" endtime="20201112 10:15:05.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.268" level="INFO">VALUE: [0.00013474999999999945, 0.00013630599999999923, 0.00013648600000000163, 0.00013648599999999816, 0.00013547200000000106, 0.00013601400000000027, 0.00013616699999999954, 0.00013580599999999873, 0.0001351809999999981, 0.00013516699999999854, 0.0001356109999999973, 0.0001360000000000007, 0.0001363610000000015, 0.00013548600000000063, 0.00013516699999999854, 0.00013501399999999927, 0.00013498600000000013, 0.00013615299999999997, 0.00013548600000000063, 0.0001366390000000009, 0.00013566699999999904, 0.00013566699999999904, 0.00013587500000000058, 0.00013566600000000303, 0.00013543099999999836, 0.00013616600000000006, 0.0001355000000000002, 0.0001366659999999971, 0.00013480499999999826, 0.00013533300000000137, 0.00013669499999999918, 0.00013616699999999954, 0.00013665300000000047, 0.0001351519999999995, 0.000136652000000001, 0.0001351809999999981, 0.00013484700000000044, 0.00013533300000000137, 0.00013615299999999997, 0.00013509800000000016, 0.00013483300000000087, 0.0001360000000000007, 0.00013566599999999956, 0.00013637500000000108, 0.00013584699999999797, 0.00013633399999999837, 0.0001358480000000009, 0.00013533400000000084, 0.00013612499999999736, 0.00013516599999999906]</msg>
<status status="PASS" starttime="20201112 10:15:05.267" endtime="20201112 10:15:05.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.262" endtime="20201112 10:15:05.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.272" endtime="20201112 10:15:05.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:05.276" endtime="20201112 10:15:05.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.274" endtime="20201112 10:15:05.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.270" endtime="20201112 10:15:05.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.898" endtime="20201112 10:15:05.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:04.897" endtime="20201112 10:15:05.297"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.306" endtime="20201112 10:15:05.327"></status>
</kw>
<msg timestamp="20201112 10:15:05.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.304" endtime="20201112 10:15:05.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.329" endtime="20201112 10:15:05.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.332" endtime="20201112 10:15:05.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.301" endtime="20201112 10:15:05.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.299" endtime="20201112 10:15:05.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.342" endtime="20201112 10:15:05.628"></status>
</kw>
<msg timestamp="20201112 10:15:05.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.341" endtime="20201112 10:15:05.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022784986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.632" endtime="20201112 10:15:05.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.641" endtime="20201112 10:15:05.642"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.338" endtime="20201112 10:15:05.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.336" endtime="20201112 10:15:05.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:05.647" level="INFO">${RESULT} = [{'time': 0.022784986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013840299999999875, 'source_diff': 0.00013840299999999875}, {'time': 0.022927014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:05.644" endtime="20201112 10:15:05.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:05.661" level="INFO">${ACCURACY} = {'time': [0.022784986, 0.022927014, 0.023075028, 0.023223028, 0.023373042, 0.023517056, 0.023663097, 0.023805097, 0.023951111, 0.024103125, 0.024249139, 0.024401167, 0.024553194, 0.024695194, 0.024839...</msg>
<status status="PASS" starttime="20201112 10:15:05.648" endtime="20201112 10:15:05.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.666" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 10:15:05.665" endtime="20201112 10:15:05.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.668" level="INFO">VALUE: [0.00013840299999999875, 0.0001371810000000001, 0.00013801400000000227, 0.00013680599999999973, 0.0001378200000000003, 0.00013830600000000123, 0.00013784699999999997, 0.0001370000000000017, 0.00013815300000000197, 0.00013762499999999886, 0.00013730600000000023, 0.00013747300000000254, 0.00013749999999999873, 0.0001369719999999991, 0.00013731900000000033, 0.0001378330000000004, 0.00013736099999999904, 0.00013716700000000054, 0.00013780600000000073, 0.0001368199999999993, 0.00013831900000000133, 0.0001378330000000004, 0.0001378330000000004, 0.00013745800000000002, 0.00013815300000000197, 0.00013766700000000104, 0.00013849999999999973, 0.00013766700000000104, 0.0001374719999999996, 0.00013681899999999983, 0.000138652999999999, 0.0001383330000000009, 0.00013716700000000054, 0.00013780600000000073, 0.0001376109999999993, 0.00013731900000000033, 0.00013831899999999786, 0.00013751400000000177, 0.00013848600000000016, 0.00013730600000000023, 0.00013799999999999923, 0.00013848600000000016, 0.00013848699999999964, 0.00013681899999999983, 0.00013806900000000108, 0.00013737500000000208, 0.00013816700000000154, 0.00013698600000000213, 0.0001371390000000014, 0.00013848699999999964]</msg>
<status status="PASS" starttime="20201112 10:15:05.667" endtime="20201112 10:15:05.676"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.662" endtime="20201112 10:15:05.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.680" endtime="20201112 10:15:05.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:05.683" endtime="20201112 10:15:05.703"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.682" endtime="20201112 10:15:05.703"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.678" endtime="20201112 10:15:05.704"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.297" endtime="20201112 10:15:05.704"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.297" endtime="20201112 10:15:05.704"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.713" endtime="20201112 10:15:05.735"></status>
</kw>
<msg timestamp="20201112 10:15:05.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.712" endtime="20201112 10:15:05.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:05.736" endtime="20201112 10:15:05.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.739" endtime="20201112 10:15:05.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.709" endtime="20201112 10:15:05.741"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.707" endtime="20201112 10:15:05.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.748" endtime="20201112 10:15:06.036"></status>
</kw>
<msg timestamp="20201112 10:15:06.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022849889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.747" endtime="20201112 10:15:06.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022849889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.040" endtime="20201112 10:15:06.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.048" endtime="20201112 10:15:06.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.744" endtime="20201112 10:15:06.051"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.742" endtime="20201112 10:15:06.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:06.055" level="INFO">${RESULT} = [{'time': 0.022849889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013958300000000215, 'source_diff': 0.00013958300000000215}, {'time': 0.022995903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:06.052" endtime="20201112 10:15:06.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:06.069" level="INFO">${ACCURACY} = {'time': [0.022849889, 0.022995903, 0.023139917, 0.023287931, 0.023431944, 0.023583972, 0.023731986, 0.023886, 0.024038028, 0.024184028, 0.024330056, 0.024476083, 0.024626111, 0.024778097, 0.024926111...</msg>
<status status="PASS" starttime="20201112 10:15:06.056" endtime="20201112 10:15:06.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.074" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 10:15:06.073" endtime="20201112 10:15:06.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.076" level="INFO">VALUE: [0.00013958300000000215, 0.0001388200000000013, 0.0001393339999999979, 0.00013933400000000137, 0.00013881899999999836, 0.00013900000000000023, 0.00014047199999999913, 0.0001398330000000024, 0.00013966699999999957, 0.00013948600000000116, 0.0001394729999999976, 0.00013917999999999917, 0.00013886100000000054, 0.0001401530000000005, 0.0001401530000000005, 0.00013931999999999833, 0.00013933400000000137, 0.00013948600000000116, 0.0001391659999999996, 0.00014070800000000327, 0.0001389720000000011, 0.00013916700000000254, 0.00013966700000000304, 0.00013966699999999957, 0.00014058399999999915, 0.00013884700000000097, 0.00013915200000000003, 0.00014013899999999746, 0.0001396810000000026, 0.0001390139999999998, 0.0001391529999999995, 0.00014016700000000007, 0.0001393339999999979, 0.00013918000000000263, 0.00013880500000000226, 0.00013881900000000183, 0.00013966699999999957, 0.00013966699999999957, 0.0001395140000000003, 0.000139653, 0.0001391659999999996, 0.0001389720000000011, 0.00013952799999999987, 0.0001391529999999995, 0.00013948600000000116, 0.00013988900000000068, 0.0001403330000000029, 0.00013965200000000053, 0.0001394859999999977, 0.0001400140000000008]</msg>
<status status="PASS" starttime="20201112 10:15:06.075" endtime="20201112 10:15:06.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.070" endtime="20201112 10:15:06.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.080" endtime="20201112 10:15:06.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:06.084" endtime="20201112 10:15:06.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.082" endtime="20201112 10:15:06.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.078" endtime="20201112 10:15:06.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.705" endtime="20201112 10:15:06.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.705" endtime="20201112 10:15:06.105"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.114" endtime="20201112 10:15:06.135"></status>
</kw>
<msg timestamp="20201112 10:15:06.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.112" endtime="20201112 10:15:06.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.136" endtime="20201112 10:15:06.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.139" endtime="20201112 10:15:06.141"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.109" endtime="20201112 10:15:06.141"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.107" endtime="20201112 10:15:06.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.148" endtime="20201112 10:15:06.438"></status>
</kw>
<msg timestamp="20201112 10:15:06.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022728361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.147" endtime="20201112 10:15:06.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022728361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.443" endtime="20201112 10:15:06.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.451" endtime="20201112 10:15:06.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.144" endtime="20201112 10:15:06.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.142" endtime="20201112 10:15:06.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:06.458" level="INFO">${RESULT} = [{'time': 0.022870778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014241700000000232, 'source_diff': 0.00014241700000000232}, {'time': 0.023024806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:06.454" endtime="20201112 10:15:06.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:06.471" level="INFO">${ACCURACY} = {'time': [0.022870778, 0.023024806, 0.023172819, 0.023320819, 0.023468833, 0.023624861, 0.023770889, 0.023918889, 0.024066903, 0.024222931, 0.024370944, 0.024520958, 0.024670986, 0.024823, 0.024975014...</msg>
<status status="PASS" starttime="20201112 10:15:06.459" endtime="20201112 10:15:06.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.476" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 10:15:06.475" endtime="20201112 10:15:06.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.479" level="INFO">VALUE: [0.00014241700000000232, 0.000142347999999997, 0.00014251300000000036, 0.0001416379999999995, 0.00014147200000000013, 0.00014131900000000086, 0.00014151399999999884, 0.00014165299999999853, 0.00014182000000000083, 0.0001421669999999986, 0.0001419860000000002, 0.00014081900000000036, 0.0001421669999999986, 0.00014100000000000223, 0.0001426669999999991, 0.0001421669999999986, 0.0001426669999999991, 0.00014233299999999796, 0.00014136099999999957, 0.00014180499999999832, 0.00014163899999999896, 0.00014165299999999853, 0.0001424860000000007, 0.00014234800000000047, 0.0001424860000000007, 0.0001409859999999992, 0.00014133300000000043, 0.0001419860000000002, 0.00014165299999999853, 0.0001413339999999999, 0.0001423889999999997, 0.00014201399999999934, 0.00014166599999999863, 0.00014120799999999684, 0.00014233299999999796, 0.00014245799999999809, 0.00014099999999999877, 0.00014170799999999734, 0.00014199999999999977, 0.00014083299999999993, 0.00014186100000000007, 0.00014118100000000064, 0.00014250000000000027, 0.00014213899999999946, 0.0001408339999999994, 0.00014266599999999963, 0.00014086099999999907, 0.0001423189999999984, 0.00014265299999999953, 0.00014195800000000106]</msg>
<status status="PASS" starttime="20201112 10:15:06.477" endtime="20201112 10:15:06.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.472" endtime="20201112 10:15:06.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.482" endtime="20201112 10:15:06.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:06.486" endtime="20201112 10:15:06.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.484" endtime="20201112 10:15:06.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.481" endtime="20201112 10:15:06.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.106" endtime="20201112 10:15:06.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.105" endtime="20201112 10:15:06.507"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.516" endtime="20201112 10:15:06.538"></status>
</kw>
<msg timestamp="20201112 10:15:06.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.514" endtime="20201112 10:15:06.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.539" endtime="20201112 10:15:06.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.542" endtime="20201112 10:15:06.543"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.512" endtime="20201112 10:15:06.544"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.509" endtime="20201112 10:15:06.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.551" endtime="20201112 10:15:06.839"></status>
</kw>
<msg timestamp="20201112 10:15:06.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022694153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.550" endtime="20201112 10:15:06.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022694153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.843" endtime="20201112 10:15:06.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.851" endtime="20201112 10:15:06.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.547" endtime="20201112 10:15:06.854"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.545" endtime="20201112 10:15:06.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:06.858" level="INFO">${RESULT} = [{'time': 0.022837014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001428609999999976, 'source_diff': 0.0001428609999999976}, {'time': 0.022987042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:06.855" endtime="20201112 10:15:06.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:06.872" level="INFO">${ACCURACY} = {'time': [0.022837014, 0.022987042, 0.023141042, 0.023295056, 0.023453097, 0.023611097, 0.023763125, 0.023915125, 0.024069208, 0.024217167, 0.024371181, 0.024529194, 0.024685222, 0.024833264, 0.024991...</msg>
<status status="PASS" starttime="20201112 10:15:06.859" endtime="20201112 10:15:06.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.877" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 10:15:06.876" endtime="20201112 10:15:06.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.879" level="INFO">VALUE: [0.0001428609999999976, 0.00014351400000000084, 0.0001441670000000006, 0.00014398700000000167, 0.00014467999999999773, 0.0001433189999999994, 0.00014361099999999835, 0.00014415299999999756, 0.0001433890000000007, 0.0001433340000000019, 0.00014466699999999763, 0.0001438189999999999, 0.0001433189999999994, 0.0001431950000000022, 0.00014363900000000096, 0.00014409699999999928, 0.00014415300000000103, 0.00014416600000000113, 0.00014357000000000258, 0.00014301400000000034, 0.00014434699999999953, 0.00014334699999999853, 0.00014295800000000206, 0.0001436670000000001, 0.00014433399999999943, 0.00014366600000000063, 0.00014281900000000236, 0.00014300000000000077, 0.00014333300000000243, 0.0001444860000000027, 0.00014411099999999885, 0.00014415300000000103, 0.00014366600000000063, 0.00014407000000000308, 0.00014400000000000177, 0.0001441250000000019, 0.00014454200000000098, 0.00014362499999999792, 0.00014315300000000003, 0.00014463799999999902, 0.0001431799999999997, 0.000144347000000003, 0.00014315300000000003, 0.0001438609999999986, 0.0001446670000000011, 0.0001428890000000002, 0.00014455600000000055, 0.00014366599999999716, 0.00014284699999999803, 0.00014347200000000213]</msg>
<status status="PASS" starttime="20201112 10:15:06.878" endtime="20201112 10:15:06.880"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.873" endtime="20201112 10:15:06.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.883" endtime="20201112 10:15:06.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:06.887" endtime="20201112 10:15:06.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.885" endtime="20201112 10:15:06.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.881" endtime="20201112 10:15:06.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.508" endtime="20201112 10:15:06.908"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.507" endtime="20201112 10:15:06.908"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.917" endtime="20201112 10:15:06.938"></status>
</kw>
<msg timestamp="20201112 10:15:06.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.915" endtime="20201112 10:15:06.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:06.940" endtime="20201112 10:15:06.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.942" endtime="20201112 10:15:06.944"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.913" endtime="20201112 10:15:06.945"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.910" endtime="20201112 10:15:06.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.952" endtime="20201112 10:15:07.239"></status>
</kw>
<msg timestamp="20201112 10:15:07.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022929931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023075111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.950" endtime="20201112 10:15:07.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022929931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023075111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.244" endtime="20201112 10:15:07.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.252" endtime="20201112 10:15:07.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.947" endtime="20201112 10:15:07.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.946" endtime="20201112 10:15:07.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:07.259" level="INFO">${RESULT} = [{'time': 0.023075111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014517999999999823, 'source_diff': 0.00014517999999999823}, {'time': 0.023225069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:07.255" endtime="20201112 10:15:07.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:07.272" level="INFO">${ACCURACY} = {'time': [0.023075111, 0.023225069, 0.023383097, 0.023539111, 0.023695125, 0.023855139, 0.024013153, 0.024165181, 0.024315264, 0.024475208, 0.024633236, 0.02479125, 0.024951264, 0.025103278, 0.0252593...</msg>
<status status="PASS" starttime="20201112 10:15:07.260" endtime="20201112 10:15:07.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.277" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 10:15:07.276" endtime="20201112 10:15:07.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.280" level="INFO">VALUE: [0.00014517999999999823, 0.00014533300000000096, 0.000145832999999998, 0.0001454999999999998, 0.00014477800000000166, 0.00014665300000000006, 0.00014612500000000042, 0.0001456670000000021, 0.00014523599999999998, 0.00014580499999999885, 0.000145832999999998, 0.00014483300000000046, 0.00014532000000000087, 0.00014497200000000016, 0.00014666600000000016, 0.0001461800000000027, 0.0001461520000000001, 0.00014665300000000006, 0.0001460000000000003, 0.0001466670000000031, 0.0001456670000000021, 0.0001454869999999997, 0.00014566599999999916, 0.00014548600000000023, 0.00014474999999999905, 0.0001463060000000023, 0.00014519499999999727, 0.00014616699999999913, 0.0001455129999999999, 0.00014583300000000146, 0.0001449999999999993, 0.0001451670000000016, 0.00014498599999999973, 0.00014566699999999863, 0.0001466390000000005, 0.00014644499999999852, 0.0001463329999999985, 0.0001463610000000011, 0.00014638900000000024, 0.0001459719999999977, 0.000145041000000002, 0.00014501400000000234, 0.0001456670000000021, 0.00014532000000000087, 0.00014483300000000046, 0.00014483300000000046, 0.0001460000000000003, 0.00014584700000000103, 0.00014498599999999973, 0.00014666699999999963]</msg>
<status status="PASS" starttime="20201112 10:15:07.278" endtime="20201112 10:15:07.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.273" endtime="20201112 10:15:07.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.284" endtime="20201112 10:15:07.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:07.287" endtime="20201112 10:15:07.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.286" endtime="20201112 10:15:07.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.282" endtime="20201112 10:15:07.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.909" endtime="20201112 10:15:07.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.908" endtime="20201112 10:15:07.308"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.317" endtime="20201112 10:15:07.339"></status>
</kw>
<msg timestamp="20201112 10:15:07.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.315" endtime="20201112 10:15:07.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.341" endtime="20201112 10:15:07.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.344" endtime="20201112 10:15:07.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.313" endtime="20201112 10:15:07.346"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.311" endtime="20201112 10:15:07.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.353" endtime="20201112 10:15:07.641"></status>
</kw>
<msg timestamp="20201112 10:15:07.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022950375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023097792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.351" endtime="20201112 10:15:07.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022950375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023097792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.645" endtime="20201112 10:15:07.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.653" endtime="20201112 10:15:07.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.349" endtime="20201112 10:15:07.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.347" endtime="20201112 10:15:07.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:07.660" level="INFO">${RESULT} = [{'time': 0.023097792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014741700000000038, 'source_diff': 0.00014741700000000038}, {'time': 0.023251806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:07.657" endtime="20201112 10:15:07.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:07.674" level="INFO">${ACCURACY} = {'time': [0.023097792, 0.023251806, 0.023405833, 0.023559889, 0.023717875, 0.023877875, 0.024029889, 0.024183986, 0.024339931, 0.024495944, 0.024649986, 0.024806, 0.024962014, 0.025114028, 0.025270042...</msg>
<status status="PASS" starttime="20201112 10:15:07.661" endtime="20201112 10:15:07.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.679" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 10:15:07.678" endtime="20201112 10:15:07.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.681" level="INFO">VALUE: [0.00014741700000000038, 0.00014816700000000113, 0.00014816600000000166, 0.00014720799999999937, 0.0001481810000000007, 0.00014681899999999942, 0.00014784699999999956, 0.00014723600000000198, 0.00014733399999999897, 0.00014748599999999876, 0.00014716700000000013, 0.0001486810000000012, 0.0001470000000000013, 0.00014716700000000013, 0.0001486529999999986, 0.00014851299999999942, 0.0001471520000000011, 0.00014720799999999937, 0.00014773699999999848, 0.0001480000000000023, 0.00014784699999999956, 0.00014777799999999772, 0.00014702800000000044, 0.0001486520000000026, 0.00014755600000000008, 0.00014697200000000216, 0.00014836099999999963, 0.00014816699999999766, 0.00014833399999999997, 0.00014865300000000206, 0.000147042, 0.0001483330000000005, 0.000146832999999999, 0.00014781900000000042, 0.00014734799999999854, 0.00014698600000000173, 0.0001476529999999976, 0.00014716600000000066, 0.0001473190000000034, 0.00014683300000000246, 0.00014677800000000019, 0.00014766700000000063, 0.0001475000000000018, 0.00014819399999999733, 0.00014815199999999862, 0.0001475000000000018, 0.00014815300000000156, 0.0001469580000000026, 0.0001483200000000004, 0.00014733399999999897]</msg>
<status status="PASS" starttime="20201112 10:15:07.680" endtime="20201112 10:15:07.682"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.675" endtime="20201112 10:15:07.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.685" endtime="20201112 10:15:07.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:07.689" endtime="20201112 10:15:07.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.687" endtime="20201112 10:15:07.709"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.683" endtime="20201112 10:15:07.709"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.309" endtime="20201112 10:15:07.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.308" endtime="20201112 10:15:07.710"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.719" endtime="20201112 10:15:07.740"></status>
</kw>
<msg timestamp="20201112 10:15:07.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.717" endtime="20201112 10:15:07.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:07.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:07.742" endtime="20201112 10:15:07.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.744" endtime="20201112 10:15:07.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.714" endtime="20201112 10:15:07.747"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.712" endtime="20201112 10:15:07.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:07.754" endtime="20201112 10:15:08.042"></status>
</kw>
<msg timestamp="20201112 10:15:08.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023022708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023172417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:07.752" endtime="20201112 10:15:08.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023022708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023172417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.046" endtime="20201112 10:15:08.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.054" endtime="20201112 10:15:08.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.749" endtime="20201112 10:15:08.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.748" endtime="20201112 10:15:08.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:08.061" level="INFO">${RESULT} = [{'time': 0.023172417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014970900000000134, 'source_diff': 0.00014970900000000134}, {'time': 0.023330417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:08.057" endtime="20201112 10:15:08.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:08.075" level="INFO">${ACCURACY} = {'time': [0.023172417, 0.023330417, 0.023488472, 0.023652458, 0.023810472, 0.0239645, 0.024124528, 0.024288542, 0.024442556, 0.024606653, 0.024760597, 0.024918611, 0.025080625, 0.025238639, 0.02539468...</msg>
<status status="PASS" starttime="20201112 10:15:08.062" endtime="20201112 10:15:08.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.079" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 10:15:08.078" endtime="20201112 10:15:08.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.082" level="INFO">VALUE: [0.00014970900000000134, 0.00014981999999999843, 0.0001505140000000009, 0.00015050000000000133, 0.00015030499999999988, 0.00014899999999999983, 0.00015068099999999973, 0.00015050000000000133, 0.00014950000000000033, 0.0001499169999999994, 0.00014950000000000033, 0.00014931900000000192, 0.00014933299999999802, 0.0001498200000000019, 0.00015034799999999807, 0.0001488200000000009, 0.00014975000000000058, 0.00015061100000000188, 0.0001500970000000018, 0.00014916699999999866, 0.00015000000000000083, 0.00015019399999999933, 0.00015050000000000133, 0.00014880499999999838, 0.00014948600000000076, 0.00014984700000000156, 0.0001506530000000006, 0.00014901400000000287, 0.0001494859999999973, 0.00014934700000000106, 0.0001491659999999992, 0.00015050000000000133, 0.00014966700000000263, 0.00014895799999999765, 0.0001493200000000014, 0.00014950000000000033, 0.00015048700000000123, 0.0001495139999999999, 0.0001506660000000007, 0.00014916699999999866, 0.0001491529999999991, 0.0001500140000000004, 0.00015016699999999966, 0.00015034700000000206, 0.0001488749999999997, 0.0001493330000000015, 0.00015031899999999945, 0.00014916699999999866, 0.00014933400000000097, 0.00014898600000000026]</msg>
<status status="PASS" starttime="20201112 10:15:08.080" endtime="20201112 10:15:08.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.075" endtime="20201112 10:15:08.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.085" endtime="20201112 10:15:08.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:08.089" endtime="20201112 10:15:08.108"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.087" endtime="20201112 10:15:08.109"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.084" endtime="20201112 10:15:08.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.711" endtime="20201112 10:15:08.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:07.710" endtime="20201112 10:15:08.110"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.119" endtime="20201112 10:15:08.142"></status>
</kw>
<msg timestamp="20201112 10:15:08.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.117" endtime="20201112 10:15:08.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.143" endtime="20201112 10:15:08.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.146" endtime="20201112 10:15:08.148"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.115" endtime="20201112 10:15:08.148"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.113" endtime="20201112 10:15:08.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.155" endtime="20201112 10:15:08.443"></status>
</kw>
<msg timestamp="20201112 10:15:08.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023226194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023378264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.154" endtime="20201112 10:15:08.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023226194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023378264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.447" endtime="20201112 10:15:08.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.455" endtime="20201112 10:15:08.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.151" endtime="20201112 10:15:08.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.149" endtime="20201112 10:15:08.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:08.462" level="INFO">${RESULT} = [{'time': 0.023378264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015207000000000068, 'source_diff': 0.00015207000000000068}, {'time': 0.023538278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:08.459" endtime="20201112 10:15:08.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:08.476" level="INFO">${ACCURACY} = {'time': [0.023378264, 0.023538278, 0.023694278, 0.023852306, 0.024010319, 0.024176403, 0.024332361, 0.024498375, 0.024656403, 0.024818417, 0.024976431, 0.025142458, 0.025308458, 0.0254685, 0.0256305,...</msg>
<status status="PASS" starttime="20201112 10:15:08.463" endtime="20201112 10:15:08.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.481" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 10:15:08.480" endtime="20201112 10:15:08.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.483" level="INFO">VALUE: [0.00015207000000000068, 0.00015118100000000023, 0.00015165299999999812, 0.00015199999999999936, 0.00015233299999999755, 0.00015172199999999997, 0.0001511530000000011, 0.00015165299999999812, 0.0001524170000000019, 0.00015229199999999832, 0.00015249999999999986, 0.00015212499999999948, 0.00015131900000000045, 0.000150833000000003, 0.00015213899999999905, 0.0001523340000000005, 0.0001523340000000005, 0.00015268000000000226, 0.00015266599999999922, 0.00015087499999999823, 0.00015165299999999812, 0.00015233299999999755, 0.0001519729999999997, 0.0001519859999999998, 0.0001518059999999974, 0.0001518470000000001, 0.00015133300000000002, 0.00015209700000000034, 0.00015182000000000043, 0.00015130600000000036, 0.0001513339999999995, 0.00015162499999999898, 0.00015166599999999822, 0.0001514859999999993, 0.00015116700000000066, 0.00015249999999999986, 0.00015232000000000093, 0.00015201300000000292, 0.00015100000000000183, 0.00015145800000000015, 0.00015215299999999862, 0.0001521669999999982, 0.00015115299999999762, 0.00015216700000000166, 0.00015268000000000226, 0.00015113800000000205, 0.00015231899999999798, 0.00015258300000000127, 0.0001511530000000011, 0.0001524860000000003]</msg>
<status status="PASS" starttime="20201112 10:15:08.482" endtime="20201112 10:15:08.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.477" endtime="20201112 10:15:08.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.487" endtime="20201112 10:15:08.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:08.491" endtime="20201112 10:15:08.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.489" endtime="20201112 10:15:08.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.485" endtime="20201112 10:15:08.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.111" endtime="20201112 10:15:08.512"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.110" endtime="20201112 10:15:08.512"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.521" endtime="20201112 10:15:08.543"></status>
</kw>
<msg timestamp="20201112 10:15:08.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.519" endtime="20201112 10:15:08.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.545" endtime="20201112 10:15:08.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.547" endtime="20201112 10:15:08.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.516" endtime="20201112 10:15:08.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.514" endtime="20201112 10:15:08.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.557" endtime="20201112 10:15:08.843"></status>
</kw>
<msg timestamp="20201112 10:15:08.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022974153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023127264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.555" endtime="20201112 10:15:08.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022974153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023127264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.848" endtime="20201112 10:15:08.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.856" endtime="20201112 10:15:08.858"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.552" endtime="20201112 10:15:08.858"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.551" endtime="20201112 10:15:08.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:08.863" level="INFO">${RESULT} = [{'time': 0.023127264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001531110000000009, 'source_diff': 0.0001531110000000009}, {'time': 0.023295292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:08.860" endtime="20201112 10:15:08.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:08.877" level="INFO">${ACCURACY} = {'time': [0.023127264, 0.023295292, 0.023463306, 0.023621319, 0.023785361, 0.023951361, 0.024115431, 0.024277403, 0.024441417, 0.024603431, 0.024769458, 0.024933486, 0.025099486, 0.025259542, 0.025417...</msg>
<status status="PASS" starttime="20201112 10:15:08.864" endtime="20201112 10:15:08.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.881" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 10:15:08.880" endtime="20201112 10:15:08.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.884" level="INFO">VALUE: [0.0001531110000000009, 0.00015383399999999853, 0.0001541670000000002, 0.0001529860000000008, 0.0001533470000000016, 0.00015433299999999955, 0.00015468100000000026, 0.00015348599999999782, 0.0001544999999999984, 0.00015445899999999915, 0.00015430500000000041, 0.0001541800000000003, 0.00015447199999999925, 0.0001543609999999987, 0.0001529860000000008, 0.0001544860000000023, 0.00015401400000000093, 0.00015316599999999972, 0.0001536669999999997, 0.00015365300000000012, 0.00015318099999999876, 0.00015431999999999946, 0.00015384699999999862, 0.00015333299999999855, 0.00015366600000000022, 0.00015465299999999765, 0.00015350000000000086, 0.00015327799999999975, 0.00015466699999999722, 0.00015312500000000048, 0.00015358400000000175, 0.00015466599999999775, 0.0001546670000000007, 0.00015383299999999905, 0.00015383399999999853, 0.00015373599999999807, 0.0001538470000000021, 0.00015366599999999675, 0.00015331899999999898, 0.0001537639999999972, 0.00015468100000000026, 0.00015350000000000086, 0.00015383399999999853, 0.00015433299999999955, 0.00015287500000000023, 0.0001528470000000011, 0.00015300000000000036, 0.00015383299999999905, 0.00015363900000000055, 0.00015365300000000012]</msg>
<status status="PASS" starttime="20201112 10:15:08.883" endtime="20201112 10:15:08.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.878" endtime="20201112 10:15:08.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.888" endtime="20201112 10:15:08.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:08.891" endtime="20201112 10:15:08.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.890" endtime="20201112 10:15:08.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.886" endtime="20201112 10:15:08.912"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.513" endtime="20201112 10:15:08.912"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.512" endtime="20201112 10:15:08.912"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.921" endtime="20201112 10:15:08.944"></status>
</kw>
<msg timestamp="20201112 10:15:08.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.920" endtime="20201112 10:15:08.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:08.945" endtime="20201112 10:15:08.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.948" endtime="20201112 10:15:08.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.917" endtime="20201112 10:15:08.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.915" endtime="20201112 10:15:08.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.960" endtime="20201112 10:15:09.248"></status>
</kw>
<msg timestamp="20201112 10:15:09.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022916014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023070931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.958" endtime="20201112 10:15:09.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022916014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023070931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.253" endtime="20201112 10:15:09.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.261" endtime="20201112 10:15:09.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.955" endtime="20201112 10:15:09.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.952" endtime="20201112 10:15:09.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:09.268" level="INFO">${RESULT} = [{'time': 0.023070931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015491700000000094, 'source_diff': 0.00015491700000000094}, {'time': 0.023236944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:09.265" endtime="20201112 10:15:09.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:09.282" level="INFO">${ACCURACY} = {'time': [0.023070931, 0.023236944, 0.023406972, 0.023567, 0.023733, 0.023897042, 0.024061042, 0.024229083, 0.024393097, 0.024561111, 0.024721139, 0.024889139, 0.025057167, 0.025221181, 0.025389236, 0...</msg>
<status status="PASS" starttime="20201112 10:15:09.269" endtime="20201112 10:15:09.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.287" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 10:15:09.286" endtime="20201112 10:15:09.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.289" level="INFO">VALUE: [0.00015491700000000094, 0.00015480499999999744, 0.00015550000000000286, 0.00015584700000000062, 0.0001553060000000009, 0.0001566809999999988, 0.0001559999999999999, 0.00015551399999999896, 0.00015501399999999846, 0.00015533300000000055, 0.00015534700000000012, 0.0001551670000000012, 0.00015648600000000082, 0.00015483399999999953, 0.00015620799999999796, 0.00015538899999999883, 0.00015618100000000176, 0.0001556809999999978, 0.00015597200000000075, 0.0001562639999999997, 0.00015532000000000046, 0.00015648600000000082, 0.00015531900000000098, 0.00015648600000000082, 0.0001566670000000027, 0.00015498599999999932, 0.0001558199999999975, 0.00015666599999999975, 0.00015581900000000148, 0.00015498599999999932, 0.00015522299999999947, 0.00015580599999999792, 0.0001559999999999999, 0.00015550000000000286, 0.00015545800000000068, 0.0001554999999999994, 0.00015648600000000082, 0.00015565299999999865, 0.00015547200000000025, 0.0001553479999999996, 0.0001565000000000004, 0.00015616599999999925, 0.0001561800000000023, 0.00015634700000000112, 0.00015536100000000316, 0.00015515299999999815, 0.0001557220000000005, 0.0001559999999999999, 0.00015615199999999968, 0.0001556809999999978]</msg>
<status status="PASS" starttime="20201112 10:15:09.288" endtime="20201112 10:15:09.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.283" endtime="20201112 10:15:09.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.293" endtime="20201112 10:15:09.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:09.296" endtime="20201112 10:15:09.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.295" endtime="20201112 10:15:09.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.291" endtime="20201112 10:15:09.317"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.913" endtime="20201112 10:15:09.317"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.913" endtime="20201112 10:15:09.317"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.326" endtime="20201112 10:15:09.350"></status>
</kw>
<msg timestamp="20201112 10:15:09.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.325" endtime="20201112 10:15:09.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.351" endtime="20201112 10:15:09.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.354" endtime="20201112 10:15:09.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.322" endtime="20201112 10:15:09.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.320" endtime="20201112 10:15:09.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.364" endtime="20201112 10:15:09.652"></status>
</kw>
<msg timestamp="20201112 10:15:09.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023259528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023416597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.362" endtime="20201112 10:15:09.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023259528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023416597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.656" endtime="20201112 10:15:09.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.664" endtime="20201112 10:15:09.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.359" endtime="20201112 10:15:09.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.357" endtime="20201112 10:15:09.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:09.671" level="INFO">${RESULT} = [{'time': 0.023416597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015706899999999926, 'source_diff': 0.00015706899999999926}, {'time': 0.023586625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:09.668" endtime="20201112 10:15:09.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:09.685" level="INFO">${ACCURACY} = {'time': [0.023416597, 0.023586625, 0.023756653, 0.023922694, 0.024090681, 0.024254694, 0.024424736, 0.024592736, 0.024756847, 0.024928792, 0.025092792, 0.025260819, 0.025432875, 0.025598861, 0.025764...</msg>
<status status="PASS" starttime="20201112 10:15:09.672" endtime="20201112 10:15:09.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.690" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 10:15:09.689" endtime="20201112 10:15:09.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.692" level="INFO">VALUE: [0.00015706899999999926, 0.00015799999999999842, 0.00015715300000000015, 0.00015752700000000106, 0.00015816700000000072, 0.00015731899999999951, 0.00015701400000000046, 0.00015748600000000182, 0.00015724999999999767, 0.0001573480000000016, 0.00015815299999999768, 0.00015812500000000201, 0.0001575420000000001, 0.00015765300000000065, 0.0001571809999999993, 0.00015748599999999835, 0.0001575139999999975, 0.00015687500000000076, 0.00015816599999999778, 0.00015816599999999778, 0.00015684700000000162, 0.00015833300000000008, 0.00015799999999999842, 0.00015783399999999906, 0.00015766600000000075, 0.00015768000000000032, 0.00015765300000000065, 0.00015727800000000028, 0.00015699999999999742, 0.00015697200000000175, 0.00015801300000000199, 0.00015749999999999792, 0.00015799999999999842, 0.00015737500000000126, 0.00015819499999999986, 0.00015833399999999956, 0.00015749999999999792, 0.00015865299999999818, 0.00015798599999999885, 0.00015768000000000032, 0.0001582359999999991, 0.00015715300000000015, 0.00015683399999999806, 0.00015818000000000082, 0.00015684699999999815, 0.00015731899999999951, 0.00015866700000000122, 0.0001571110000000049, 0.0001576809999999998, 0.00015749999999999792]</msg>
<status status="PASS" starttime="20201112 10:15:09.691" endtime="20201112 10:15:09.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.686" endtime="20201112 10:15:09.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.696" endtime="20201112 10:15:09.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:09.700" endtime="20201112 10:15:09.719"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.698" endtime="20201112 10:15:09.720"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.694" endtime="20201112 10:15:09.720"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.318" endtime="20201112 10:15:09.721"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.318" endtime="20201112 10:15:09.721"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.730" endtime="20201112 10:15:09.752"></status>
</kw>
<msg timestamp="20201112 10:15:09.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.728" endtime="20201112 10:15:09.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:09.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:09.754" endtime="20201112 10:15:09.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.757" endtime="20201112 10:15:09.758"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.725" endtime="20201112 10:15:09.759"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.723" endtime="20201112 10:15:09.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:09.766" endtime="20201112 10:15:10.053"></status>
</kw>
<msg timestamp="20201112 10:15:10.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023283125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023442708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:09.764" endtime="20201112 10:15:10.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023283125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023442708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.057" endtime="20201112 10:15:10.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.066" endtime="20201112 10:15:10.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.762" endtime="20201112 10:15:10.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.760" endtime="20201112 10:15:10.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:10.073" level="INFO">${RESULT} = [{'time': 0.023442708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015958300000000133, 'source_diff': 0.00015958300000000133}, {'time': 0.023616736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:10.069" endtime="20201112 10:15:10.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:10.086" level="INFO">${ACCURACY} = {'time': [0.023442708, 0.023616736, 0.023786806, 0.02395675, 0.024120764, 0.024290847, 0.024456819, 0.024622833, 0.024796875, 0.024964861, 0.025130889, 0.025300903, 0.025464917, 0.025630944, 0.0257989...</msg>
<status status="PASS" starttime="20201112 10:15:10.074" endtime="20201112 10:15:10.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.091" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 10:15:10.090" endtime="20201112 10:15:10.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.094" level="INFO">VALUE: [0.00015958300000000133, 0.00016034699999999819, 0.0001589030000000019, 0.00016000000000000042, 0.00015983299999999812, 0.00016020800000000196, 0.00015918000000000182, 0.00016050000000000092, 0.00016052800000000006, 0.00016015299999999968, 0.00015916700000000172, 0.00015915299999999868, 0.00015913899999999911, 0.00015883300000000058, 0.00016000000000000042, 0.00016068099999999932, 0.00015983299999999812, 0.00015916699999999825, 0.00016006900000000227, 0.00015948699999999982, 0.00016050000000000092, 0.00015933299999999762, 0.00015969500000000136, 0.00015948600000000035, 0.00016063900000000061, 0.00016001299999999705, 0.000160014, 0.0001591519999999992, 0.00015966700000000222, 0.00015899999999999942, 0.00016015299999999968, 0.00016015299999999968, 0.00015883299999999712, 0.00016050000000000092, 0.00015966599999999928, 0.00016030499999999948, 0.00015933300000000108, 0.00015915300000000215, 0.00015898599999999985, 0.00016000000000000042, 0.00015949999999999992, 0.0001596810000000018, 0.00015949999999999992, 0.00015965299999999918, 0.00015966700000000222, 0.00016033300000000208, 0.00016000000000000042, 0.00016066699999999975, 0.00015983299999999812, 0.0001595139999999995]</msg>
<status status="PASS" starttime="20201112 10:15:10.092" endtime="20201112 10:15:10.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.087" endtime="20201112 10:15:10.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.097" endtime="20201112 10:15:10.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:10.101" endtime="20201112 10:15:10.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.099" endtime="20201112 10:15:10.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.096" endtime="20201112 10:15:10.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.722" endtime="20201112 10:15:10.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:09.721" endtime="20201112 10:15:10.122"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.131" endtime="20201112 10:15:10.153"></status>
</kw>
<msg timestamp="20201112 10:15:10.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.129" endtime="20201112 10:15:10.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.155" endtime="20201112 10:15:10.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.157" endtime="20201112 10:15:10.159"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.127" endtime="20201112 10:15:10.160"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.124" endtime="20201112 10:15:10.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.167" endtime="20201112 10:15:10.455"></status>
</kw>
<msg timestamp="20201112 10:15:10.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02281975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022980986, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:10.165" endtime="20201112 10:15:10.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02281975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022980986, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:10.459" endtime="20201112 10:15:10.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.467" endtime="20201112 10:15:10.469"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.162" endtime="20201112 10:15:10.469"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.161" endtime="20201112 10:15:10.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:10.474" level="INFO">${RESULT} = [{'time': 0.022980986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016123599999999863, 'source_diff': 0.00016123599999999863}, {'time': 0.023157014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:10.471" endtime="20201112 10:15:10.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:10.488" level="INFO">${ACCURACY} = {'time': [0.022980986, 0.023157014, 0.023327042, 0.023499056, 0.023673056, 0.023849083, 0.024023097, 0.024195125, 0.024363139, 0.024529167, 0.024701181, 0.024869208, 0.025037236, 0.025211236, 0.025387...</msg>
<status status="PASS" starttime="20201112 10:15:10.475" endtime="20201112 10:15:10.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.493" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 10:15:10.492" endtime="20201112 10:15:10.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.495" level="INFO">VALUE: [0.00016123599999999863, 0.00016133299999999962, 0.00016234799999999966, 0.00016118099999999982, 0.000161320000000003, 0.00016133299999999962, 0.00016181900000000055, 0.00016133300000000309, 0.00016166699999999729, 0.00016100000000000142, 0.00016080599999999945, 0.00016098600000000185, 0.00016150000000000192, 0.00016075000000000117, 0.00016216699999999779, 0.00016149999999999845, 0.00016190300000000143, 0.00016249999999999945, 0.00016215199999999874, 0.00016233299999999715, 0.00016215300000000168, 0.00016100000000000142, 0.00016166600000000128, 0.00016232000000000052, 0.00016116600000000078, 0.00016084700000000215, 0.00016199999999999895, 0.00016151399999999802, 0.00016265300000000218, 0.00016134700000000265, 0.00016249999999999945, 0.00016215299999999822, 0.00016116700000000025, 0.00016112500000000154, 0.00016162500000000204, 0.00016116699999999679, 0.00016133299999999962, 0.00016231900000000105, 0.00016133299999999962, 0.00016200000000000242, 0.00016163900000000161, 0.000161014000000001, 0.00016251300000000302, 0.00016154200000000063, 0.0001607499999999977, 0.00016244400000000117, 0.00016168100000000032, 0.00016208399999999984, 0.00016151300000000202, 0.00016098600000000185]</msg>
<status status="PASS" starttime="20201112 10:15:10.494" endtime="20201112 10:15:10.496"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.489" endtime="20201112 10:15:10.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.499" endtime="20201112 10:15:10.500"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:10.503" endtime="20201112 10:15:10.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.501" endtime="20201112 10:15:10.523"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.497" endtime="20201112 10:15:10.523"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.123" endtime="20201112 10:15:10.524"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.122" endtime="20201112 10:15:10.524"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.533" endtime="20201112 10:15:10.555"></status>
</kw>
<msg timestamp="20201112 10:15:10.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.531" endtime="20201112 10:15:10.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.557" endtime="20201112 10:15:10.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.560" endtime="20201112 10:15:10.561"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.528" endtime="20201112 10:15:10.562"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.526" endtime="20201112 10:15:10.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.569" endtime="20201112 10:15:10.856"></status>
</kw>
<msg timestamp="20201112 10:15:10.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022861833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023024903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.567" endtime="20201112 10:15:10.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022861833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023024903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.861" endtime="20201112 10:15:10.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.869" endtime="20201112 10:15:10.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.565" endtime="20201112 10:15:10.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.563" endtime="20201112 10:15:10.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:10.876" level="INFO">${RESULT} = [{'time': 0.023024903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001630699999999978, 'source_diff': 0.0001630699999999978}, {'time': 0.023196986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:10.872" endtime="20201112 10:15:10.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:10.889" level="INFO">${ACCURACY} = {'time': [0.023024903, 0.023196986, 0.023368972, 0.023544972, 0.023721014, 0.023899014, 0.024071069, 0.024247056, 0.024421069, 0.024597083, 0.024771153, 0.024941139, 0.025113139, 0.025291167, 0.025465...</msg>
<status status="PASS" starttime="20201112 10:15:10.877" endtime="20201112 10:15:10.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.894" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 10:15:10.893" endtime="20201112 10:15:10.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.897" level="INFO">VALUE: [0.0001630699999999978, 0.00016386099999999779, 0.00016361099999999754, 0.00016400000000000095, 0.00016347199999999784, 0.00016333299999999815, 0.000163708000000002, 0.00016400000000000095, 0.00016279099999999894, 0.00016333299999999815, 0.00016387500000000083, 0.00016334700000000119, 0.00016381999999999855, 0.00016348600000000088, 0.00016413900000000065, 0.00016468000000000038, 0.00016431899999999958, 0.0001632089999999975, 0.00016306899999999833, 0.0001634720000000013, 0.00016394500000000214, 0.00016363800000000067, 0.00016316700000000225, 0.00016416700000000325, 0.00016450000000000145, 0.00016284800000000016, 0.00016315299999999922, 0.00016299999999999995, 0.00016419399999999945, 0.0001632370000000001, 0.00016400000000000095, 0.00016450000000000145, 0.00016351400000000002, 0.00016331999999999805, 0.00016362500000000058, 0.00016365299999999972, 0.0001639859999999979, 0.00016344500000000164, 0.00016350000000000045, 0.00016466700000000029, 0.00016281900000000155, 0.00016295800000000124, 0.00016366699999999929, 0.00016451400000000102, 0.00016351400000000002, 0.00016334700000000119, 0.00016334699999999772, 0.00016447199999999884, 0.00016366699999999929, 0.0001634439999999987]</msg>
<status status="PASS" starttime="20201112 10:15:10.895" endtime="20201112 10:15:10.903"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.890" endtime="20201112 10:15:10.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.906" endtime="20201112 10:15:10.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:10.910" endtime="20201112 10:15:10.929"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.908" endtime="20201112 10:15:10.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.904" endtime="20201112 10:15:10.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.525" endtime="20201112 10:15:10.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.524" endtime="20201112 10:15:10.931"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.940" endtime="20201112 10:15:10.963"></status>
</kw>
<msg timestamp="20201112 10:15:10.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.938" endtime="20201112 10:15:10.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:10.965" endtime="20201112 10:15:10.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.967" endtime="20201112 10:15:10.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.936" endtime="20201112 10:15:10.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.933" endtime="20201112 10:15:10.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.977" endtime="20201112 10:15:11.265"></status>
</kw>
<msg timestamp="20201112 10:15:11.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022823431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022988361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.975" endtime="20201112 10:15:11.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022823431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022988361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.270" endtime="20201112 10:15:11.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.278" endtime="20201112 10:15:11.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.972" endtime="20201112 10:15:11.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.971" endtime="20201112 10:15:11.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:11.285" level="INFO">${RESULT} = [{'time': 0.022988361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016492999999999716, 'source_diff': 0.00016492999999999716}, {'time': 0.023168361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:11.282" endtime="20201112 10:15:11.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:11.299" level="INFO">${ACCURACY} = {'time': [0.022988361, 0.023168361, 0.023346389, 0.023522417, 0.023698472, 0.023870444, 0.024050472, 0.024226486, 0.024400514, 0.024574528, 0.024750556, 0.024922569, 0.025094583, 0.025270639, 0.025446...</msg>
<status status="PASS" starttime="20201112 10:15:11.286" endtime="20201112 10:15:11.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.303" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 10:15:11.302" endtime="20201112 10:15:11.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.306" level="INFO">VALUE: [0.00016492999999999716, 0.00016529199999999744, 0.00016483299999999965, 0.00016483399999999912, 0.00016548600000000288, 0.00016533300000000015, 0.00016633300000000115, 0.0001649859999999989, 0.00016516700000000079, 0.0001662920000000019, 0.00016483399999999912, 0.00016483299999999965, 0.00016481900000000008, 0.00016534699999999972, 0.00016581900000000108, 0.0001664860000000004, 0.00016566700000000129, 0.00016565199999999877, 0.0001653890000000019, 0.00016649999999999998, 0.00016504200000000066, 0.0001653890000000019, 0.00016652700000000312, 0.00016649999999999998, 0.00016552799999999812, 0.00016616599999999884, 0.00016668100000000186, 0.0001665280000000026, 0.00016633400000000062, 0.00016501300000000205, 0.00016647200000000084, 0.00016666699999999882, 0.00016530600000000048, 0.00016633300000000115, 0.00016666699999999882, 0.00016565299999999825, 0.00016483299999999965, 0.0001653189999999971, 0.00016499999999999848, 0.00016563900000000215, 0.00016518100000000036, 0.00016563899999999868, 0.00016584699999999675, 0.00016601400000000252, 0.00016599999999999948, 0.00016481900000000008, 0.00016601399999999905, 0.00016616700000000179, 0.00016611199999999604, 0.00016634699999999725]</msg>
<status status="PASS" starttime="20201112 10:15:11.304" endtime="20201112 10:15:11.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.300" endtime="20201112 10:15:11.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.310" endtime="20201112 10:15:11.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:11.313" endtime="20201112 10:15:11.333"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.312" endtime="20201112 10:15:11.333"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.308" endtime="20201112 10:15:11.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.932" endtime="20201112 10:15:11.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.931" endtime="20201112 10:15:11.334"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.343" endtime="20201112 10:15:11.366"></status>
</kw>
<msg timestamp="20201112 10:15:11.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.342" endtime="20201112 10:15:11.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.367" endtime="20201112 10:15:11.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.370" endtime="20201112 10:15:11.372"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.339" endtime="20201112 10:15:11.372"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.337" endtime="20201112 10:15:11.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.379" endtime="20201112 10:15:11.667"></status>
</kw>
<msg timestamp="20201112 10:15:11.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022625472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022792889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.378" endtime="20201112 10:15:11.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022625472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022792889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.671" endtime="20201112 10:15:11.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.679" endtime="20201112 10:15:11.681"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.375" endtime="20201112 10:15:11.681"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.373" endtime="20201112 10:15:11.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:11.686" level="INFO">${RESULT} = [{'time': 0.022792889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016741699999999957, 'source_diff': 0.00016741699999999957}, {'time': 0.022970903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:11.683" endtime="20201112 10:15:11.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:11.700" level="INFO">${ACCURACY} = {'time': [0.022792889, 0.022970903, 0.023142917, 0.023322958, 0.023502986, 0.023683, 0.023865028, 0.024045042, 0.024227042, 0.024401083, 0.024583153, 0.024757111, 0.024935125, 0.025115153, 0.025289181...</msg>
<status status="PASS" starttime="20201112 10:15:11.687" endtime="20201112 10:15:11.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.704" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 10:15:11.703" endtime="20201112 10:15:11.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.707" level="INFO">VALUE: [0.00016741699999999957, 0.00016833399999999915, 0.00016715299999999975, 0.00016751400000000055, 0.0001676799999999999, 0.0001669860000000009, 0.00016800000000000148, 0.00016801399999999758, 0.00016745900000000175, 0.00016866600000000134, 0.00016734699999999825, 0.00016783299999999918, 0.00016833299999999968, 0.00016847200000000284, 0.00016700000000000048, 0.0001671799999999994, 0.00016684700000000122, 0.00016784699999999875, 0.00016733300000000215, 0.00016783399999999865, 0.00016700000000000048, 0.00016697200000000134, 0.0001685559999999968, 0.00016765300000000025, 0.0001684999999999985, 0.0001669860000000009, 0.00016715299999999975, 0.00016684699999999775, 0.00016833299999999968, 0.00016801400000000105, 0.00016868099999999692, 0.00016851400000000155, 0.0001674860000000014, 0.00016763900000000068, 0.00016784699999999875, 0.0001684999999999985, 0.0001674860000000014, 0.00016833300000000315, 0.00016866700000000082, 0.00016866700000000082, 0.00016850000000000198, 0.00016748599999999794, 0.00016716699999999932, 0.00016847199999999937, 0.00016733400000000162, 0.00016766699999999982, 0.00016779100000000047, 0.00016833399999999915, 0.00016765300000000372, 0.0001668189999999986]</msg>
<status status="PASS" starttime="20201112 10:15:11.706" endtime="20201112 10:15:11.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.701" endtime="20201112 10:15:11.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.711" endtime="20201112 10:15:11.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:11.714" endtime="20201112 10:15:11.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.713" endtime="20201112 10:15:11.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.709" endtime="20201112 10:15:11.735"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.335" endtime="20201112 10:15:11.735"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.335" endtime="20201112 10:15:11.735"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.744" endtime="20201112 10:15:11.767"></status>
</kw>
<msg timestamp="20201112 10:15:11.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.743" endtime="20201112 10:15:11.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:11.769" endtime="20201112 10:15:11.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.772" endtime="20201112 10:15:11.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.740" endtime="20201112 10:15:11.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.738" endtime="20201112 10:15:11.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.781" endtime="20201112 10:15:12.068"></status>
</kw>
<msg timestamp="20201112 10:15:12.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022686889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022855792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.780" endtime="20201112 10:15:12.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022686889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022855792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.072" endtime="20201112 10:15:12.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.080" endtime="20201112 10:15:12.082"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.777" endtime="20201112 10:15:12.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.775" endtime="20201112 10:15:12.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:12.087" level="INFO">${RESULT} = [{'time': 0.022855792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001689030000000015, 'source_diff': 0.0001689030000000015}, {'time': 0.023035819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:12.084" endtime="20201112 10:15:12.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:12.101" level="INFO">${ACCURACY} = {'time': [0.022855792, 0.023035819, 0.023209833, 0.023385847, 0.023559889, 0.023735889, 0.023911903, 0.024093931, 0.024271944, 0.024447986, 0.024627986, 0.024806014, 0.024990042, 0.025172069, 0.025354...</msg>
<status status="PASS" starttime="20201112 10:15:12.088" endtime="20201112 10:15:12.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.106" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 10:15:12.105" endtime="20201112 10:15:12.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.108" level="INFO">VALUE: [0.0001689030000000015, 0.0001705000000000005, 0.0001696389999999992, 0.00016966600000000234, 0.00016984700000000075, 0.00016966699999999835, 0.00016882000000000008, 0.00017015299999999928, 0.0001688190000000006, 0.00016934700000000025, 0.00017048600000000094, 0.00017016700000000232, 0.0001694999999999995, 0.00016934699999999678, 0.0001701939999999985, 0.00016900000000000248, 0.0001688190000000006, 0.00017066699999999935, 0.0001705000000000005, 0.00017016699999999885, 0.00016931899999999764, 0.00017, 0.00016950000000000298, 0.00017, 0.00017066700000000282, 0.00016983400000000065, 0.00017036100000000082, 0.00016916599999999837, 0.00016934700000000025, 0.00016993100000000164, 0.00016983400000000065, 0.00017065299999999978, 0.00016901399999999858, 0.00016902800000000162, 0.00016988899999999946, 0.0001705000000000005, 0.0001692779999999984, 0.00016966700000000182, 0.00016951399999999908, 0.00016983300000000118, 0.00016926399999999883, 0.00016984700000000075, 0.00016915300000000175, 0.0001694999999999995, 0.0001691389999999987, 0.00017016600000000284, 0.00016965300000000225, 0.00017033400000000115, 0.00017049999999999704, 0.00016916700000000479]</msg>
<status status="PASS" starttime="20201112 10:15:12.107" endtime="20201112 10:15:12.109"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.102" endtime="20201112 10:15:12.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.112" endtime="20201112 10:15:12.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:12.116" endtime="20201112 10:15:12.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.114" endtime="20201112 10:15:12.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.110" endtime="20201112 10:15:12.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.736" endtime="20201112 10:15:12.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.736" endtime="20201112 10:15:12.137"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.146" endtime="20201112 10:15:12.168"></status>
</kw>
<msg timestamp="20201112 10:15:12.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.144" endtime="20201112 10:15:12.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.170" endtime="20201112 10:15:12.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.173" endtime="20201112 10:15:12.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.141" endtime="20201112 10:15:12.175"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.139" endtime="20201112 10:15:12.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.182" endtime="20201112 10:15:12.469"></status>
</kw>
<msg timestamp="20201112 10:15:12.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022722792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022894042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.180" endtime="20201112 10:15:12.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022722792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022894042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.473" endtime="20201112 10:15:12.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.481" endtime="20201112 10:15:12.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.178" endtime="20201112 10:15:12.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.176" endtime="20201112 10:15:12.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:12.488" level="INFO">${RESULT} = [{'time': 0.022894042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017125000000000126, 'source_diff': 0.00017125000000000126}, {'time': 0.023072056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:12.485" endtime="20201112 10:15:12.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:12.502" level="INFO">${ACCURACY} = {'time': [0.022894042, 0.023072056, 0.023248083, 0.023430125, 0.023608125, 0.023784139, 0.023964208, 0.024142194, 0.024328208, 0.024506222, 0.024686236, 0.024862292, 0.025042278, 0.025222306, 0.025408...</msg>
<status status="PASS" starttime="20201112 10:15:12.489" endtime="20201112 10:15:12.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.507" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 10:15:12.505" endtime="20201112 10:15:12.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.509" level="INFO">VALUE: [0.00017125000000000126, 0.00017233399999999968, 0.00017131899999999964, 0.00017168099999999992, 0.00017166700000000035, 0.0001713329999999992, 0.00017104100000000025, 0.0001716659999999974, 0.0001715000000000015, 0.0001708190000000026, 0.00017081899999999914, 0.00017186100000000232, 0.0001718199999999996, 0.00017098700000000092, 0.0001718049999999971, 0.0001708329999999987, 0.00017081899999999914, 0.0001713329999999992, 0.00017130599999999954, 0.00017266700000000135, 0.00017198599999999897, 0.00017199999999999854, 0.0001726529999999983, 0.00017148599999999847, 0.000171000000000001, 0.00017099999999999754, 0.0001721940000000005, 0.00017131899999999964, 0.0001718329999999997, 0.00017249999999999904, 0.00017133400000000215, 0.00017116699999999985, 0.00017145799999999933, 0.0001716390000000012, 0.0001709719999999984, 0.00017248599999999947, 0.00017083399999999818, 0.00017199999999999854, 0.0001723330000000002, 0.00017163899999999774, 0.00017118099999999942, 0.00017131899999999964, 0.000171000000000001, 0.0001718620000000018, 0.0001708329999999987, 0.00017248599999999947, 0.00017202800000000115, 0.0001725139999999986, 0.00017234800000000272, 0.00017131999999999564]</msg>
<status status="PASS" starttime="20201112 10:15:12.508" endtime="20201112 10:15:12.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.503" endtime="20201112 10:15:12.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.513" endtime="20201112 10:15:12.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:12.516" endtime="20201112 10:15:12.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.515" endtime="20201112 10:15:12.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.511" endtime="20201112 10:15:12.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.137" endtime="20201112 10:15:12.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.137" endtime="20201112 10:15:12.537"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.546" endtime="20201112 10:15:12.570"></status>
</kw>
<msg timestamp="20201112 10:15:12.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.545" endtime="20201112 10:15:12.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.572" endtime="20201112 10:15:12.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.574" endtime="20201112 10:15:12.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.542" endtime="20201112 10:15:12.577"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.540" endtime="20201112 10:15:12.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.584" endtime="20201112 10:15:12.872"></status>
</kw>
<msg timestamp="20201112 10:15:12.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023026153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023198917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.582" endtime="20201112 10:15:12.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023026153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023198917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.876" endtime="20201112 10:15:12.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.885" endtime="20201112 10:15:12.886"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.580" endtime="20201112 10:15:12.887"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.578" endtime="20201112 10:15:12.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:12.891" level="INFO">${RESULT} = [{'time': 0.023198917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017276399999999886, 'source_diff': 0.00017276399999999886}, {'time': 0.023378944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:12.888" endtime="20201112 10:15:12.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:12.905" level="INFO">${ACCURACY} = {'time': [0.023198917, 0.023378944, 0.023564944, 0.023746972, 0.023925, 0.024111028, 0.024295028, 0.024477069, 0.024661069, 0.024849097, 0.025037125, 0.025223153, 0.025409153, 0.025591181, 0.025773194...</msg>
<status status="PASS" starttime="20201112 10:15:12.892" endtime="20201112 10:15:12.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.910" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 10:15:12.909" endtime="20201112 10:15:12.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.912" level="INFO">VALUE: [0.00017276399999999886, 0.0001731659999999989, 0.00017299999999999954, 0.00017315300000000228, 0.0001733469999999973, 0.0001735139999999996, 0.00017398600000000097, 0.00017350000000000004, 0.00017316600000000237, 0.0001744720000000019, 0.00017416699999999938, 0.00017334700000000078, 0.00017431999999999864, 0.0001733200000000011, 0.00017313799999999976, 0.00017350000000000004, 0.00017465299999999684, 0.00017466699999999988, 0.00017416699999999938, 0.0001729590000000003, 0.00017290300000000203, 0.00017372199999999768, 0.0001731110000000001, 0.0001740140000000001, 0.00017298599999999997, 0.00017283400000000018, 0.00017399999999999707, 0.0001733330000000012, 0.00017298599999999997, 0.00017330600000000154, 0.00017368100000000192, 0.00017472199999999868, 0.0001736659999999994, 0.000172791000000002, 0.00017322300000000013, 0.0001746530000000003, 0.00017466699999999988, 0.00017348700000000342, 0.00017366600000000287, 0.0001743330000000022, 0.00017350000000000004, 0.00017334700000000078, 0.00017449999999999757, 0.00017383400000000118, 0.00017331900000000164, 0.00017316599999999543, 0.00017348600000000047, 0.00017298599999999997, 0.0001733339999999972, 0.00017463800000000473]</msg>
<status status="PASS" starttime="20201112 10:15:12.911" endtime="20201112 10:15:12.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.906" endtime="20201112 10:15:12.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.916" endtime="20201112 10:15:12.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:12.920" endtime="20201112 10:15:12.939"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.918" endtime="20201112 10:15:12.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.914" endtime="20201112 10:15:12.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.538" endtime="20201112 10:15:12.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.538" endtime="20201112 10:15:12.941"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.950" endtime="20201112 10:15:12.972"></status>
</kw>
<msg timestamp="20201112 10:15:12.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.948" endtime="20201112 10:15:12.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:12.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:12.974" endtime="20201112 10:15:12.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.977" endtime="20201112 10:15:12.978"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.945" endtime="20201112 10:15:12.979"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.943" endtime="20201112 10:15:12.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:12.986" endtime="20201112 10:15:13.274"></status>
</kw>
<msg timestamp="20201112 10:15:13.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022926833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023103083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:12.985" endtime="20201112 10:15:13.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022926833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023103083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.278" endtime="20201112 10:15:13.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.286" endtime="20201112 10:15:13.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.982" endtime="20201112 10:15:13.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.980" endtime="20201112 10:15:13.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:13.293" level="INFO">${RESULT} = [{'time': 0.023103083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017624999999999932, 'source_diff': 0.00017624999999999932}, {'time': 0.023289111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:13.290" endtime="20201112 10:15:13.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:13.307" level="INFO">${ACCURACY} = {'time': [0.023103083, 0.023289111, 0.023471139, 0.023655194, 0.023843167, 0.024025181, 0.024207208, 0.024389222, 0.02457325, 0.024753278, 0.024935319, 0.025123319, 0.025309333, 0.025497361, 0.0256833...</msg>
<status status="PASS" starttime="20201112 10:15:13.294" endtime="20201112 10:15:13.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.312" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 10:15:13.310" endtime="20201112 10:15:13.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.314" level="INFO">VALUE: [0.00017624999999999932, 0.00017616700000000138, 0.0001751669999999969, 0.00017654100000000228, 0.00017599999999999907, 0.00017598699999999898, 0.00017531900000000017, 0.00017665299999999884, 0.00017650000000000304, 0.00017500000000000154, 0.00017519400000000004, 0.00017548600000000247, 0.00017549999999999857, 0.00017499999999999807, 0.00017550000000000204, 0.0001761669999999979, 0.00017582000000000014, 0.0001756660000000014, 0.00017551399999999814, 0.00017533299999999974, 0.00017545799999999986, 0.00017501399999999764, 0.0001765270000000027, 0.00017649999999999957, 0.0001765140000000026, 0.00017583300000000024, 0.00017638799999999955, 0.00017533400000000268, 0.00017649999999999957, 0.00017579099999999806, 0.00017615199999999887, 0.00017649999999999957, 0.00017618100000000095, 0.00017666700000000188, 0.00017531999999999964, 0.00017583300000000024, 0.00017502800000000068, 0.0001750829999999995, 0.00017601399999999864, 0.00017605499999999788, 0.00017648699999999948, 0.00017665199999999937, 0.00017604200000000125, 0.00017652799999999871, 0.00017568099999999698, 0.00017602800000000168, 0.00017501300000000164, 0.00017650000000000304, 0.00017559699999999956, 0.0001761669999999979]</msg>
<status status="PASS" starttime="20201112 10:15:13.313" endtime="20201112 10:15:13.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.308" endtime="20201112 10:15:13.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.318" endtime="20201112 10:15:13.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:13.321" endtime="20201112 10:15:13.341"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.320" endtime="20201112 10:15:13.341"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.316" endtime="20201112 10:15:13.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.942" endtime="20201112 10:15:13.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:12.941" endtime="20201112 10:15:13.342"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.351" endtime="20201112 10:15:13.375"></status>
</kw>
<msg timestamp="20201112 10:15:13.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.350" endtime="20201112 10:15:13.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.376" endtime="20201112 10:15:13.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.379" endtime="20201112 10:15:13.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.347" endtime="20201112 10:15:13.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.345" endtime="20201112 10:15:13.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.388" endtime="20201112 10:15:13.676"></status>
</kw>
<msg timestamp="20201112 10:15:13.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022658014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.387" endtime="20201112 10:15:13.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022658014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.680" endtime="20201112 10:15:13.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.688" endtime="20201112 10:15:13.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.384" endtime="20201112 10:15:13.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.382" endtime="20201112 10:15:13.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:13.695" level="INFO">${RESULT} = [{'time': 0.022835944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017792999999999976, 'source_diff': 0.00017792999999999976}, {'time': 0.023020028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:13.692" endtime="20201112 10:15:13.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:13.709" level="INFO">${ACCURACY} = {'time': [0.022835944, 0.023020028, 0.023209972, 0.023396014, 0.023588014, 0.023776056, 0.023964069, 0.024156083, 0.024346097, 0.024532125, 0.024722153, 0.024912167, 0.025100236, 0.025288208, 0.025470...</msg>
<status status="PASS" starttime="20201112 10:15:13.696" endtime="20201112 10:15:13.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.713" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 10:15:13.712" endtime="20201112 10:15:13.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.716" level="INFO">VALUE: [0.00017792999999999976, 0.00017773600000000125, 0.00017833299999999927, 0.00017701399999999964, 0.0001781669999999999, 0.00017701399999999964, 0.0001786800000000005, 0.0001781389999999973, 0.00017815300000000034, 0.0001779999999999976, 0.00017850000000000157, 0.0001771669999999989, 0.00017820800000000261, 0.00017780499999999963, 0.00017677799999999896, 0.0001773340000000012, 0.00017701399999999964, 0.00017865300000000084, 0.00017768000000000297, 0.000177486000000001, 0.0001784999999999981, 0.00017798599999999803, 0.00017815300000000034, 0.00017751300000000067, 0.0001781519999999974, 0.00017736100000000088, 0.00017805599999999935, 0.00017752700000000024, 0.0001774999999999971, 0.00017815300000000034, 0.000177486000000001, 0.00017783299999999877, 0.00017701300000000017, 0.00017831999999999917, 0.00017865299999999737, 0.00017748700000000048, 0.00017715200000000333, 0.00017815299999999687, 0.00017801400000000064, 0.00017750000000000057, 0.0001771669999999989, 0.0001785129999999982, 0.00017783299999999877, 0.00017847199999999896, 0.0001774999999999971, 0.00017845800000000286, 0.00017718100000000542, 0.00017715299999999934, 0.0001773470000000013, 0.00017715299999999934]</msg>
<status status="PASS" starttime="20201112 10:15:13.715" endtime="20201112 10:15:13.717"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.710" endtime="20201112 10:15:13.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.720" endtime="20201112 10:15:13.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:13.723" endtime="20201112 10:15:13.743"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.722" endtime="20201112 10:15:13.743"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.718" endtime="20201112 10:15:13.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.343" endtime="20201112 10:15:13.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.343" endtime="20201112 10:15:13.744"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.753" endtime="20201112 10:15:13.776"></status>
</kw>
<msg timestamp="20201112 10:15:13.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.752" endtime="20201112 10:15:13.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:13.778" endtime="20201112 10:15:13.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.780" endtime="20201112 10:15:13.782"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.749" endtime="20201112 10:15:13.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.747" endtime="20201112 10:15:13.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.790" endtime="20201112 10:15:14.077"></status>
</kw>
<msg timestamp="20201112 10:15:14.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022741292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022920306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.788" endtime="20201112 10:15:14.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022741292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022920306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.082" endtime="20201112 10:15:14.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.090" endtime="20201112 10:15:14.091"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.786" endtime="20201112 10:15:14.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.784" endtime="20201112 10:15:14.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:14.097" level="INFO">${RESULT} = [{'time': 0.022920306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017901400000000164, 'source_diff': 0.00017901400000000164}, {'time': 0.023114333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:14.093" endtime="20201112 10:15:14.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:14.110" level="INFO">${ACCURACY} = {'time': [0.022920306, 0.023114333, 0.023298361, 0.023486375, 0.023674403, 0.023864417, 0.024052472, 0.024246472, 0.024440486, 0.0246345, 0.024822528, 0.025010556, 0.025198569, 0.025386597, 0.02557861...</msg>
<status status="PASS" starttime="20201112 10:15:14.098" endtime="20201112 10:15:14.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.115" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 10:15:14.114" endtime="20201112 10:15:14.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.118" level="INFO">VALUE: [0.00017901400000000164, 0.00017966600000000194, 0.00017883299999999977, 0.0001801670000000019, 0.00017898599999999903, 0.00017881999999999967, 0.00017984699999999687, 0.00017980500000000163, 0.0001799999999999996, 0.0001801389999999993, 0.00017883399999999924, 0.00018011199999999963, 0.00017883299999999977, 0.00017883299999999977, 0.00018048600000000053, 0.0001801670000000019, 0.0001789999999999986, 0.0001799869999999995, 0.00017997200000000046, 0.00018016599999999897, 0.00017904200000000078, 0.0001806670000000024, 0.00017965300000000184, 0.0001796800000000015, 0.00017933300000000027, 0.00017883299999999977, 0.0001803329999999978, 0.000179486000000003, 0.00018001400000000264, 0.000180180000000002, 0.0001794999999999991, 0.0001799999999999996, 0.00018001400000000264, 0.00018062499999999676, 0.00017898599999999903, 0.0001788190000000002, 0.00018031899999999823, 0.00017883299999999977, 0.00017984699999999687, 0.00018051399999999967, 0.00018030500000000213, 0.00017973599999999978, 0.0001798190000000012, 0.00017938899999999855, 0.00018034700000000084, 0.0001798199999999972, 0.0001803199999999977, 0.00017931900000000417, 0.0001798470000000038, 0.0001794999999999991]</msg>
<status status="PASS" starttime="20201112 10:15:14.116" endtime="20201112 10:15:14.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.111" endtime="20201112 10:15:14.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.121" endtime="20201112 10:15:14.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:14.125" endtime="20201112 10:15:14.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.123" endtime="20201112 10:15:14.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.120" endtime="20201112 10:15:14.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.745" endtime="20201112 10:15:14.146"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.745" endtime="20201112 10:15:14.146"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.155" endtime="20201112 10:15:14.178"></status>
</kw>
<msg timestamp="20201112 10:15:14.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.153" endtime="20201112 10:15:14.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.180" endtime="20201112 10:15:14.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.183" endtime="20201112 10:15:14.184"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.151" endtime="20201112 10:15:14.185"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.148" endtime="20201112 10:15:14.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.192" endtime="20201112 10:15:14.480"></status>
</kw>
<msg timestamp="20201112 10:15:14.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022903486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023084403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.190" endtime="20201112 10:15:14.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022903486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023084403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.484" endtime="20201112 10:15:14.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.493" endtime="20201112 10:15:14.494"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.188" endtime="20201112 10:15:14.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.186" endtime="20201112 10:15:14.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:14.500" level="INFO">${RESULT} = [{'time': 0.023084403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001809169999999992, 'source_diff': 0.0001809169999999992}, {'time': 0.023280417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:14.496" endtime="20201112 10:15:14.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:14.513" level="INFO">${ACCURACY} = {'time': [0.023084403, 0.023280417, 0.023468444, 0.023662458, 0.023850486, 0.0240365, 0.024224528, 0.024414556, 0.024602569, 0.024792597, 0.024984625, 0.025172708, 0.025362653, 0.025552681, 0.02574472...</msg>
<status status="PASS" starttime="20201112 10:15:14.501" endtime="20201112 10:15:14.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.518" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 10:15:14.517" endtime="20201112 10:15:14.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.521" level="INFO">VALUE: [0.0001809169999999992, 0.00018147300000000144, 0.0001810000000000006, 0.0001823329999999998, 0.00018181899999999973, 0.00018081899999999873, 0.0001823199999999997, 0.0001810000000000006, 0.00018166600000000047, 0.0001808329999999983, 0.0001813329999999988, 0.0001815269999999973, 0.00018183399999999877, 0.0001818199999999992, 0.0001810000000000006, 0.00018184699999999887, 0.00018166699999999994, 0.00018148599999999807, 0.00018166699999999994, 0.00018251299999999873, 0.00018198599999999857, 0.00018116699999999944, 0.00018101400000000017, 0.00018199999999999814, 0.00018233399999999927, 0.00018151400000000067, 0.00018148600000000153, 0.0001818329999999993, 0.00018266700000000094, 0.00018082000000000167, 0.000182665999999998, 0.00018249999999999864, 0.0001820000000000016, 0.00018115299999999987, 0.0001818329999999993, 0.00018151400000000067, 0.0001811939999999991, 0.00018116599999999997, 0.000182181, 0.00018166699999999994, 0.0001826810000000005, 0.00018270800000000018, 0.00018249999999999864, 0.00018083300000000177, 0.00018251400000000167, 0.0001814580000000024, 0.00018183399999999877, 0.00018134799999999784, 0.000182665999999998, 0.0001823329999999998]</msg>
<status status="PASS" starttime="20201112 10:15:14.519" endtime="20201112 10:15:14.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.514" endtime="20201112 10:15:14.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.524" endtime="20201112 10:15:14.526"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:14.528" endtime="20201112 10:15:14.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.526" endtime="20201112 10:15:14.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.523" endtime="20201112 10:15:14.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.147" endtime="20201112 10:15:14.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.146" endtime="20201112 10:15:14.549"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.558" endtime="20201112 10:15:14.582"></status>
</kw>
<msg timestamp="20201112 10:15:14.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.556" endtime="20201112 10:15:14.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.583" endtime="20201112 10:15:14.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.586" endtime="20201112 10:15:14.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.554" endtime="20201112 10:15:14.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.551" endtime="20201112 10:15:14.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.595" endtime="20201112 10:15:14.882"></status>
</kw>
<msg timestamp="20201112 10:15:14.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023144875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023328139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.594" endtime="20201112 10:15:14.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023144875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023328139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.887" endtime="20201112 10:15:14.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.895" endtime="20201112 10:15:14.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.591" endtime="20201112 10:15:14.897"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.589" endtime="20201112 10:15:14.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:14.902" level="INFO">${RESULT} = [{'time': 0.023328139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018326400000000242, 'source_diff': 0.00018326400000000242}, {'time': 0.023520181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:14.898" endtime="20201112 10:15:14.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:14.916" level="INFO">${ACCURACY} = {'time': [0.023328139, 0.023520181, 0.023712181, 0.023904208, 0.024102222, 0.024300236, 0.024496264, 0.024688292, 0.024880306, 0.025072333, 0.025268347, 0.025464389, 0.025662403, 0.025850417, 0.026040...</msg>
<status status="PASS" starttime="20201112 10:15:14.903" endtime="20201112 10:15:14.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.920" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 10:15:14.919" endtime="20201112 10:15:14.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.923" level="INFO">VALUE: [0.00018326400000000242, 0.00018352800000000224, 0.00018381999999999774, 0.00018317999999999807, 0.00018431899999999876, 0.0001846529999999999, 0.0001833330000000008, 0.00018366700000000194, 0.00018316700000000144, 0.00018365199999999943, 0.0001838330000000013, 0.00018284699999999987, 0.00018329200000000156, 0.00018316700000000144, 0.00018374999999999989, 0.00018400000000000014, 0.000182874999999999, 0.00018365300000000237, 0.0001828200000000002, 0.0001830000000000026, 0.00018299999999999914, 0.00018331900000000123, 0.0001835139999999992, 0.00018383299999999783, 0.00018450000000000064, 0.00018283399999999977, 0.00018376399999999946, 0.00018318000000000154, 0.00018426399999999996, 0.00018348600000000007, 0.00018384800000000034, 0.00018465200000000043, 0.00018315199999999893, 0.00018368099999999804, 0.0001841949999999981, 0.00018434799999999738, 0.00018349999999999964, 0.00018400000000000014, 0.0001830000000000026, 0.00018284699999999987, 0.00018380599999999817, 0.0001840139999999997, 0.00018299999999999914, 0.0001833330000000008, 0.00018417999999999907, 0.00018366699999999847, 0.00018347200000000397, 0.00018297300000000294, 0.000184262999999997, 0.000183665999999999]</msg>
<status status="PASS" starttime="20201112 10:15:14.922" endtime="20201112 10:15:14.924"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.916" endtime="20201112 10:15:14.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.927" endtime="20201112 10:15:14.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:14.930" endtime="20201112 10:15:14.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.929" endtime="20201112 10:15:14.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.925" endtime="20201112 10:15:14.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.550" endtime="20201112 10:15:14.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.549" endtime="20201112 10:15:14.951"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.960" endtime="20201112 10:15:14.983"></status>
</kw>
<msg timestamp="20201112 10:15:14.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.959" endtime="20201112 10:15:14.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:14.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:14.985" endtime="20201112 10:15:14.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.988" endtime="20201112 10:15:14.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.956" endtime="20201112 10:15:14.990"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.954" endtime="20201112 10:15:14.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:14.997" endtime="20201112 10:15:15.311"></status>
</kw>
<msg timestamp="20201112 10:15:15.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022675194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:14.995" endtime="20201112 10:15:15.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022675194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022861111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.315" endtime="20201112 10:15:15.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.323" endtime="20201112 10:15:15.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.993" endtime="20201112 10:15:15.326"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.991" endtime="20201112 10:15:15.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:15.330" level="INFO">${RESULT} = [{'time': 0.022861111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018591700000000072, 'source_diff': 0.00018591700000000072}, {'time': 0.023057139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:15.327" endtime="20201112 10:15:15.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:15.344" level="INFO">${ACCURACY} = {'time': [0.022861111, 0.023057139, 0.023251153, 0.023445181, 0.023645208, 0.023843222, 0.02404325, 0.024237264, 0.024429292, 0.024625319, 0.024825347, 0.025015361, 0.025215389, 0.025411403, 0.0256054...</msg>
<status status="PASS" starttime="20201112 10:15:15.331" endtime="20201112 10:15:15.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.349" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 10:15:15.348" endtime="20201112 10:15:15.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.351" level="INFO">VALUE: [0.00018591700000000072, 0.00018533299999999933, 0.0001851530000000004, 0.00018581999999999974, 0.0001865140000000022, 0.00018600000000000214, 0.0001854859999999986, 0.00018559700000000262, 0.0001848339999999983, 0.0001853469999999989, 0.00018668000000000157, 0.00018500000000000114, 0.0001855140000000012, 0.00018516699999999997, 0.0001861669999999975, 0.0001861660000000015, 0.00018616599999999803, 0.0001853750000000015, 0.00018599999999999867, 0.00018548600000000207, 0.00018550000000000164, 0.00018588900000000158, 0.00018636099999999947, 0.00018518099999999954, 0.00018599999999999867, 0.00018584799999999888, 0.00018649999999999917, 0.00018549999999999817, 0.0001848469999999984, 0.0001850140000000007, 0.00018599999999999867, 0.0001861669999999975, 0.00018650000000000264, 0.00018516699999999997, 0.00018618100000000054, 0.00018568100000000004, 0.00018499999999999767, 0.000184875000000001, 0.00018666599999999853, 0.0001851530000000004, 0.00018597199999999953, 0.0001847919999999996, 0.00018648700000000254, 0.00018507000000000245, 0.00018484699999999493, 0.00018584700000000287, 0.00018554200000000381, 0.00018483400000000177, 0.00018623599999999935, 0.00018662499999999582]</msg>
<status status="PASS" starttime="20201112 10:15:15.350" endtime="20201112 10:15:15.352"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.345" endtime="20201112 10:15:15.353"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.355" endtime="20201112 10:15:15.356"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:15.359" endtime="20201112 10:15:15.378"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.357" endtime="20201112 10:15:15.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.353" endtime="20201112 10:15:15.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.952" endtime="20201112 10:15:15.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:14.952" endtime="20201112 10:15:15.380"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.389" endtime="20201112 10:15:15.413"></status>
</kw>
<msg timestamp="20201112 10:15:15.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.387" endtime="20201112 10:15:15.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.414" endtime="20201112 10:15:15.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.417" endtime="20201112 10:15:15.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.384" endtime="20201112 10:15:15.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.382" endtime="20201112 10:15:15.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.426" endtime="20201112 10:15:15.713"></status>
</kw>
<msg timestamp="20201112 10:15:15.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023255514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023442944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.425" endtime="20201112 10:15:15.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023255514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023442944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.717" endtime="20201112 10:15:15.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.725" endtime="20201112 10:15:15.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.422" endtime="20201112 10:15:15.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.420" endtime="20201112 10:15:15.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:15.732" level="INFO">${RESULT} = [{'time': 0.023442944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018742999999999885, 'source_diff': 0.00018742999999999885}, {'time': 0.023636944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:15.729" endtime="20201112 10:15:15.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:15.746" level="INFO">${ACCURACY} = {'time': [0.023442944, 0.023636944, 0.023833, 0.024027, 0.024229014, 0.024423097, 0.024619056, 0.024821139, 0.025023181, 0.025217125, 0.025415181, 0.025611194, 0.025809194, 0.026011222, 0.026203236, 0...</msg>
<status status="PASS" starttime="20201112 10:15:15.733" endtime="20201112 10:15:15.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.751" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 10:15:15.750" endtime="20201112 10:15:15.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.753" level="INFO">VALUE: [0.00018742999999999885, 0.00018733300000000133, 0.0001870279999999988, 0.00018850000000000117, 0.00018863900000000086, 0.00018772200000000128, 0.0001881669999999995, 0.00018804199999999938, 0.0001878890000000001, 0.0001878059999999987, 0.00018869499999999914, 0.0001871379999999999, 0.00018850000000000117, 0.00018811100000000122, 0.0001878470000000014, 0.00018851400000000074, 0.00018750000000000017, 0.0001872920000000021, 0.00018783299999999836, 0.0001879440000000024, 0.00018719499999999764, 0.00018815299999999993, 0.00018815299999999993, 0.00018866600000000053, 0.00018800000000000067, 0.000187666999999999, 0.00018683300000000083, 0.00018786100000000097, 0.000188569000000003, 0.00018866600000000053, 0.00018766599999999953, 0.00018699999999999967, 0.00018680600000000117, 0.00018734800000000038, 0.00018701399999999924, 0.00018783300000000183, 0.00018699999999999967, 0.00018818099999999907, 0.00018851400000000074, 0.00018756899999999854, 0.0001886519999999975, 0.00018684699999999693, 0.00018816699999999603, 0.00018866700000000347, 0.00018816700000000297, 0.00018697200000000053, 0.0001878189999999988, 0.0001878189999999988, 0.00018683399999999684, 0.00018734800000000384]</msg>
<status status="PASS" starttime="20201112 10:15:15.752" endtime="20201112 10:15:15.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.747" endtime="20201112 10:15:15.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.757" endtime="20201112 10:15:15.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:15.761" endtime="20201112 10:15:15.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.759" endtime="20201112 10:15:15.781"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.755" endtime="20201112 10:15:15.781"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.381" endtime="20201112 10:15:15.781"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.380" endtime="20201112 10:15:15.782"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.791" endtime="20201112 10:15:15.815"></status>
</kw>
<msg timestamp="20201112 10:15:15.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.789" endtime="20201112 10:15:15.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:15.816" endtime="20201112 10:15:15.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.819" endtime="20201112 10:15:15.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.786" endtime="20201112 10:15:15.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.784" endtime="20201112 10:15:15.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.828" endtime="20201112 10:15:16.116"></status>
</kw>
<msg timestamp="20201112 10:15:16.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023093861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023283111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.827" endtime="20201112 10:15:16.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023093861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023283111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:16.120" endtime="20201112 10:15:16.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.128" endtime="20201112 10:15:16.130"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.824" endtime="20201112 10:15:16.131"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.822" endtime="20201112 10:15:16.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:16.135" level="INFO">${RESULT} = [{'time': 0.023283111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018924999999999845, 'source_diff': 0.00018924999999999845}, {'time': 0.023481125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:16.132" endtime="20201112 10:15:16.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:16.149" level="INFO">${ACCURACY} = {'time': [0.023283111, 0.023481125, 0.023675153, 0.023879181, 0.024073194, 0.024275236, 0.024475264, 0.024677278, 0.024881361, 0.025083333, 0.025283333, 0.025483361, 0.025683389, 0.025887403, 0.026087...</msg>
<status status="PASS" starttime="20201112 10:15:16.136" endtime="20201112 10:15:16.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.154" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 10:15:16.153" endtime="20201112 10:15:16.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.156" level="INFO">VALUE: [0.00018924999999999845, 0.00018883299999999936, 0.00018933399999999934, 0.0001894869999999986, 0.0001894999999999987, 0.00019067999999999863, 0.00019034700000000043, 0.0001904999999999997, 0.0001903890000000026, 0.0001891800000000006, 0.0001894860000000026, 0.00019016699999999803, 0.00018984699999999993, 0.00019048600000000013, 0.00019033400000000034, 0.0001906519999999995, 0.00019066599999999906, 0.0001899999999999992, 0.0001899999999999992, 0.00018966699999999753, 0.00019048600000000013, 0.00018916600000000103, 0.00018950000000000217, 0.00018933299999999986, 0.00018968100000000057, 0.00019067999999999863, 0.00018987499999999907, 0.00018883299999999936, 0.0001888189999999998, 0.0001889449999999994, 0.00019000000000000267, 0.00018951400000000174, 0.00018930500000000072, 0.00019066699999999853, 0.00018886100000000197, 0.00018931999999999977, 0.00019067999999999863, 0.00018984699999999993, 0.00018901400000000124, 0.00019050000000000317, 0.0001893329999999964, 0.00018900000000000167, 0.00018901400000000124, 0.00018950000000000217, 0.00018883299999999936, 0.00019033300000000086, 0.00019051400000000274, 0.0001901660000000055, 0.00018949999999999523, 0.0001888609999999985]</msg>
<status status="PASS" starttime="20201112 10:15:16.155" endtime="20201112 10:15:16.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.150" endtime="20201112 10:15:16.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.166" endtime="20201112 10:15:16.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:16.170" endtime="20201112 10:15:16.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.168" endtime="20201112 10:15:16.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.164" endtime="20201112 10:15:16.191"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.783" endtime="20201112 10:15:16.191"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.782" endtime="20201112 10:15:16.191"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.200" endtime="20201112 10:15:16.225"></status>
</kw>
<msg timestamp="20201112 10:15:16.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.198" endtime="20201112 10:15:16.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.227" endtime="20201112 10:15:16.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.229" endtime="20201112 10:15:16.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.196" endtime="20201112 10:15:16.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.194" endtime="20201112 10:15:16.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.239" endtime="20201112 10:15:16.526"></status>
</kw>
<msg timestamp="20201112 10:15:16.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02323625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023427111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:16.237" endtime="20201112 10:15:16.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02323625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023427111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:16.531" endtime="20201112 10:15:16.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.539" endtime="20201112 10:15:16.541"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.234" endtime="20201112 10:15:16.541"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.233" endtime="20201112 10:15:16.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:16.546" level="INFO">${RESULT} = [{'time': 0.023427111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001908610000000005, 'source_diff': 0.0001908610000000005}, {'time': 0.023627139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:16.542" endtime="20201112 10:15:16.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:16.560" level="INFO">${ACCURACY} = {'time': [0.023427111, 0.023627139, 0.023827181, 0.024031181, 0.024231236, 0.024437236, 0.024633264, 0.024831278, 0.025027306, 0.025225375, 0.025427347, 0.025629375, 0.025833389, 0.026037431, 0.026243...</msg>
<status status="PASS" starttime="20201112 10:15:16.547" endtime="20201112 10:15:16.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.564" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 10:15:16.563" endtime="20201112 10:15:16.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.567" level="INFO">VALUE: [0.0001908610000000005, 0.00019165299999999996, 0.00019083400000000084, 0.00019199999999999773, 0.0001918329999999989, 0.00019148600000000113, 0.00019084699999999746, 0.00019133399999999787, 0.0001911809999999986, 0.0001922220000000023, 0.00019216600000000056, 0.0001922780000000006, 0.0001919719999999986, 0.00019083400000000084, 0.0001920000000000012, 0.0001926659999999976, 0.00019143000000000285, 0.000191667000000003, 0.00019148599999999766, 0.0001926659999999976, 0.00019133300000000186, 0.0001912779999999996, 0.00019262499999999835, 0.00019132000000000177, 0.00019183399999999837, 0.00019097200000000106, 0.00019116599999999956, 0.00019148600000000113, 0.00019115300000000293, 0.00019176400000000052, 0.00019166699999999953, 0.00019081899999999832, 0.0001925000000000017, 0.00019165299999999996, 0.00019248599999999866, 0.00019147300000000103, 0.0001913329999999984, 0.0001908329999999979, 0.00019151400000000027, 0.00019197200000000206, 0.00019215300000000046, 0.00019134700000000143, 0.00019198599999999816, 0.00019249999999999823, 0.00019111100000000075, 0.00019115299999999946, 0.00019183400000000184, 0.00019166600000000006, 0.00019098599999999716, 0.00019199999999999773]</msg>
<status status="PASS" starttime="20201112 10:15:16.565" endtime="20201112 10:15:16.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.561" endtime="20201112 10:15:16.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.571" endtime="20201112 10:15:16.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:16.574" endtime="20201112 10:15:16.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.573" endtime="20201112 10:15:16.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.569" endtime="20201112 10:15:16.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.192" endtime="20201112 10:15:16.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.191" endtime="20201112 10:15:16.595"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.604" endtime="20201112 10:15:16.629"></status>
</kw>
<msg timestamp="20201112 10:15:16.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.603" endtime="20201112 10:15:16.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:16.631" endtime="20201112 10:15:16.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.633" endtime="20201112 10:15:16.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.600" endtime="20201112 10:15:16.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.598" endtime="20201112 10:15:16.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.643" endtime="20201112 10:15:16.930"></status>
</kw>
<msg timestamp="20201112 10:15:16.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023022069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023214764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:16.641" endtime="20201112 10:15:16.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023022069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023214764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:16.934" endtime="20201112 10:15:16.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.943" endtime="20201112 10:15:16.944"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.638" endtime="20201112 10:15:16.945"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.637" endtime="20201112 10:15:16.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:16.950" level="INFO">${RESULT} = [{'time': 0.023214764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00019269499999999967, 'source_diff': 0.00019269499999999967}, {'time': 0.023420778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:16.946" endtime="20201112 10:15:16.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:16.963" level="INFO">${ACCURACY} = {'time': [0.023214764, 0.023420778, 0.023628806, 0.023832833, 0.024030861, 0.024234875, 0.024436931, 0.024638917, 0.024844958, 0.025047, 0.025245, 0.025449014, 0.025655056, 0.025859111, 0.026063111, 0...</msg>
<status status="PASS" starttime="20201112 10:15:16.951" endtime="20201112 10:15:16.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.968" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 10:15:16.967" endtime="20201112 10:15:16.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.971" level="INFO">VALUE: [0.00019269499999999967, 0.0001933200000000003, 0.00019366699999999806, 0.0001944720000000011, 0.00019366700000000153, 0.0001938330000000009, 0.0001928619999999985, 0.00019383400000000037, 0.00019301400000000177, 0.00019402799999999887, 0.00019301400000000177, 0.00019294499999999992, 0.00019384799999999994, 0.0001930420000000009, 0.0001938330000000009, 0.00019431899999999835, 0.00019343099999999738, 0.0001929719999999996, 0.00019467999999999916, 0.00019380499999999828, 0.00019299999999999873, 0.0001933330000000004, 0.000193152999999998, 0.00019448700000000013, 0.00019366600000000206, 0.00019366600000000206, 0.00019399999999999973, 0.00019448600000000066, 0.00019384799999999994, 0.00019433299999999792, 0.0001930139999999983, 0.0001936810000000011, 0.00019348599999999966, 0.0001933480000000029, 0.00019433299999999792, 0.00019450000000000023, 0.00019299999999999873, 0.0001928329999999999, 0.00019299999999999873, 0.00019349999999999923, 0.00019316600000000156, 0.00019343000000000138, 0.00019316700000000103, 0.0001938339999999969, 0.00019399999999999973, 0.0001933339999999964, 0.00019431899999999835, 0.000192846999999996, 0.00019351400000000574, 0.00019431999999999783]</msg>
<status status="PASS" starttime="20201112 10:15:16.969" endtime="20201112 10:15:16.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.964" endtime="20201112 10:15:16.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.974" endtime="20201112 10:15:16.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:16.978" endtime="20201112 10:15:16.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.976" endtime="20201112 10:15:16.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.973" endtime="20201112 10:15:16.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.596" endtime="20201112 10:15:16.999"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.595" endtime="20201112 10:15:16.999"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.008" endtime="20201112 10:15:17.033"></status>
</kw>
<msg timestamp="20201112 10:15:17.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.007" endtime="20201112 10:15:17.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.035" endtime="20201112 10:15:17.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.037" endtime="20201112 10:15:17.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.004" endtime="20201112 10:15:17.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.002" endtime="20201112 10:15:17.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.047" endtime="20201112 10:15:17.335"></status>
</kw>
<msg timestamp="20201112 10:15:17.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023306014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023502444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.045" endtime="20201112 10:15:17.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023306014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023502444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.339" endtime="20201112 10:15:17.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.347" endtime="20201112 10:15:17.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.043" endtime="20201112 10:15:17.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.041" endtime="20201112 10:15:17.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:17.354" level="INFO">${RESULT} = [{'time': 0.023502444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001964300000000009, 'source_diff': 0.0001964300000000009}, {'time': 0.023706458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:17.351" endtime="20201112 10:15:17.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:17.368" level="INFO">${ACCURACY} = {'time': [0.023502444, 0.023706458, 0.023906472, 0.0241105, 0.024312528, 0.024520542, 0.024728597, 0.024928597, 0.025134639, 0.025336694, 0.025544667, 0.025748694, 0.025950708, 0.026154736, 0.02635876...</msg>
<status status="PASS" starttime="20201112 10:15:17.355" endtime="20201112 10:15:17.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.373" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 10:15:17.372" endtime="20201112 10:15:17.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.375" level="INFO">VALUE: [0.0001964300000000009, 0.00019508299999999867, 0.0001956660000000006, 0.00019566700000000006, 0.0001953339999999984, 0.000196153000000001, 0.00019619400000000023, 0.00019500000000000073, 0.0001960140000000013, 0.0001948880000000007, 0.00019663899999999845, 0.0001956660000000006, 0.0001949859999999977, 0.00019566700000000006, 0.000195153, 0.00019550000000000123, 0.00019551299999999786, 0.00019549999999999776, 0.00019517999999999966, 0.00019633299999999992, 0.0001966530000000015, 0.00019630600000000026, 0.00019481900000000232, 0.00019533299999999892, 0.00019568099999999963, 0.0001966530000000015, 0.00019533400000000187, 0.0001960140000000013, 0.00019600000000000173, 0.00019600000000000173, 0.0001963469999999995, 0.00019534799999999797, 0.0001948339999999979, 0.0001953750000000011, 0.00019630600000000026, 0.00019633299999999992, 0.0001953339999999984, 0.00019616700000000056, 0.0001958330000000029, 0.00019516600000000356, 0.00019648599999999572, 0.00019481999999999833, 0.0001956669999999966, 0.0001951669999999961, 0.00019550000000000123, 0.0001963469999999995, 0.00019615300000000446, 0.00019600000000000173, 0.00019565299999999702, 0.0001951799999999962]</msg>
<status status="PASS" starttime="20201112 10:15:17.374" endtime="20201112 10:15:17.376"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.369" endtime="20201112 10:15:17.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.379" endtime="20201112 10:15:17.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:17.383" endtime="20201112 10:15:17.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.381" endtime="20201112 10:15:17.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.377" endtime="20201112 10:15:17.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.000" endtime="20201112 10:15:17.404"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.999" endtime="20201112 10:15:17.404"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.413" endtime="20201112 10:15:17.438"></status>
</kw>
<msg timestamp="20201112 10:15:17.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.411" endtime="20201112 10:15:17.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.439" endtime="20201112 10:15:17.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.442" endtime="20201112 10:15:17.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.408" endtime="20201112 10:15:17.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.406" endtime="20201112 10:15:17.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.451" endtime="20201112 10:15:17.739"></status>
</kw>
<msg timestamp="20201112 10:15:17.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023022486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023220194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.450" endtime="20201112 10:15:17.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023022486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023220194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.743" endtime="20201112 10:15:17.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.751" endtime="20201112 10:15:17.753"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.447" endtime="20201112 10:15:17.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.445" endtime="20201112 10:15:17.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:17.758" level="INFO">${RESULT} = [{'time': 0.023220194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00019770799999999783, 'source_diff': 0.00019770799999999783}, {'time': 0.023424222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:17.755" endtime="20201112 10:15:17.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:17.772" level="INFO">${ACCURACY} = {'time': [0.023220194, 0.023424222, 0.023628236, 0.023836264, 0.024046292, 0.024256347, 0.024458333, 0.024668361, 0.024872417, 0.025084417, 0.025292444, 0.025502458, 0.025708472, 0.0259145, 0.02612454...</msg>
<status status="PASS" starttime="20201112 10:15:17.759" endtime="20201112 10:15:17.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.777" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 10:15:17.776" endtime="20201112 10:15:17.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.779" level="INFO">VALUE: [0.00019770799999999783, 0.00019865300000000002, 0.00019683300000000042, 0.00019783299999999795, 0.0001983340000000014, 0.00019837500000000063, 0.00019784699999999752, 0.00019749999999999976, 0.00019854199999999947, 0.00019766700000000206, 0.00019851300000000086, 0.00019800000000000026, 0.00019766599999999912, 0.00019733300000000092, 0.00019684799999999947, 0.00019701399999999883, 0.0001974300000000019, 0.00019800000000000026, 0.00019745800000000105, 0.00019834699999999802, 0.0001968339999999999, 0.00019866600000000012, 0.00019686099999999956, 0.00019872299999999787, 0.0001984999999999973, 0.00019831999999999836, 0.00019701299999999936, 0.00019766599999999912, 0.00019850000000000076, 0.000197153000000002, 0.00019699999999999926, 0.00019716700000000156, 0.00019801399999999983, 0.00019759699999999727, 0.00019733300000000092, 0.0001987089999999983, 0.0001976530000000025, 0.00019865200000000055, 0.0001980279999999994, 0.00019749999999999976, 0.00019677800000000162, 0.0001981669999999991, 0.00019816599999999962, 0.00019848599999999772, 0.00019865300000000002, 0.0001971810000000046, 0.0001974999999999963, 0.0001969869999999957, 0.00019815200000000005, 0.00019798599999999722]</msg>
<status status="PASS" starttime="20201112 10:15:17.778" endtime="20201112 10:15:17.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.773" endtime="20201112 10:15:17.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.783" endtime="20201112 10:15:17.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:17.787" endtime="20201112 10:15:17.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.785" endtime="20201112 10:15:17.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.781" endtime="20201112 10:15:17.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.405" endtime="20201112 10:15:17.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.404" endtime="20201112 10:15:17.808"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.817" endtime="20201112 10:15:17.841"></status>
</kw>
<msg timestamp="20201112 10:15:17.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.815" endtime="20201112 10:15:17.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:17.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:17.843" endtime="20201112 10:15:17.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.845" endtime="20201112 10:15:17.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.812" endtime="20201112 10:15:17.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.810" endtime="20201112 10:15:17.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:17.855" endtime="20201112 10:15:18.143"></status>
</kw>
<msg timestamp="20201112 10:15:18.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022717778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022918333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:17.853" endtime="20201112 10:15:18.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022717778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022918333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.147" endtime="20201112 10:15:18.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.155" endtime="20201112 10:15:18.157"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.850" endtime="20201112 10:15:18.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.848" endtime="20201112 10:15:18.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:18.162" level="INFO">${RESULT} = [{'time': 0.022918333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0002005549999999981, 'source_diff': 0.0002005549999999981}, {'time': 0.023128375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:15:18.159" endtime="20201112 10:15:18.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:18.176" level="INFO">${ACCURACY} = {'time': [0.022918333, 0.023128375, 0.023334361, 0.023548403, 0.023756417, 0.023962444, 0.0241765, 0.024384486, 0.024596514, 0.024804528, 0.025014556, 0.025218597, 0.025428625, 0.025640639, 0.02585065...</msg>
<status status="PASS" starttime="20201112 10:15:18.163" endtime="20201112 10:15:18.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.181" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 10:15:18.180" endtime="20201112 10:15:18.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.183" level="INFO">VALUE: [0.0002005549999999981, 0.00020002799999999793, 0.00020000000000000226, 0.00020018100000000066, 0.0001989999999999978, 0.0001999999999999988, 0.00019954200000000047, 0.0002001670000000011, 0.0001999999999999988, 0.00019948599999999872, 0.00019915300000000052, 0.00019951399999999786, 0.00019951400000000133, 0.00019879199999999972, 0.00019909700000000224, 0.00019901300000000136, 0.00020033300000000046, 0.00019979099999999778, 0.0001996670000000006, 0.0002007220000000004, 0.00020027800000000165, 0.00019966600000000112, 0.00020016600000000162, 0.0002004999999999993, 0.00019968100000000016, 0.00020044499999999701, 0.00019933299999999946, 0.00019984699999999953, 0.00019883299999999896, 0.00020070800000000083, 0.0001989999999999978, 0.0001996800000000007, 0.00020066600000000212, 0.00019883299999999896, 0.0002001670000000011, 0.00019933399999999893, 0.0001998060000000003, 0.00019922200000000237, 0.00019951400000000133, 0.00020018100000000066, 0.0001996809999999967, 0.0001993340000000024, 0.00019933300000000292, 0.00019986099999999563, 0.0001996670000000006, 0.0002001670000000011, 0.0002001670000000011, 0.00019983300000000342, 0.00019916600000000062, 0.00020063900000000245]</msg>
<status status="PASS" starttime="20201112 10:15:18.182" endtime="20201112 10:15:18.184"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.177" endtime="20201112 10:15:18.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.187" endtime="20201112 10:15:18.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:18.191" endtime="20201112 10:15:18.210"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.189" endtime="20201112 10:15:18.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.185" endtime="20201112 10:15:18.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.808" endtime="20201112 10:15:18.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:17.808" endtime="20201112 10:15:18.212"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.221" endtime="20201112 10:15:18.245"></status>
</kw>
<msg timestamp="20201112 10:15:18.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.219" endtime="20201112 10:15:18.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.247" endtime="20201112 10:15:18.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.249" endtime="20201112 10:15:18.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.216" endtime="20201112 10:15:18.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.214" endtime="20201112 10:15:18.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.259" endtime="20201112 10:15:18.546"></status>
</kw>
<msg timestamp="20201112 10:15:18.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023126181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023327931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.257" endtime="20201112 10:15:18.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023126181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023327931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.550" endtime="20201112 10:15:18.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.559" endtime="20201112 10:15:18.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.254" endtime="20201112 10:15:18.561"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.253" endtime="20201112 10:15:18.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:18.566" level="INFO">${RESULT} = [{'time': 0.023327931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020175000000000054, 'source_diff': 0.00020175000000000054}, {'time': 0.023538, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:18.562" endtime="20201112 10:15:18.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:18.579" level="INFO">${ACCURACY} = {'time': [0.023327931, 0.023538, 0.023745972, 0.023959986, 0.024168014, 0.024374056, 0.024584056, 0.024794083, 0.025010111, 0.025216125, 0.025424167, 0.025634181, 0.025848208, 0.026060222, 0.026266264...</msg>
<status status="PASS" starttime="20201112 10:15:18.567" endtime="20201112 10:15:18.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.584" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 10:15:18.583" endtime="20201112 10:15:18.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.587" level="INFO">VALUE: [0.00020175000000000054, 0.00020222199999999843, 0.00020148600000000072, 0.00020266700000000012, 0.00020095800000000108, 0.0002015280000000029, 0.00020116699999999862, 0.00020266600000000065, 0.00020191700000000284, 0.00020083299999999749, 0.0002013480000000005, 0.00020215300000000005, 0.00020081900000000139, 0.00020233300000000246, 0.00020134700000000103, 0.0002025000000000013, 0.0002020000000000008, 0.00020183300000000196, 0.00020217999999999972, 0.00020133300000000146, 0.00020148600000000072, 0.00020249999999999782, 0.00020247199999999868, 0.0002012090000000008, 0.0002026809999999997, 0.00020083299999999749, 0.00020184799999999753, 0.00020131900000000189, 0.00020133299999999799, 0.00020133299999999799, 0.00020149999999999682, 0.00020183400000000143, 0.0002009869999999997, 0.00020170899999999783, 0.00020151399999999986, 0.0002016809999999987, 0.0002011809999999982, 0.00020237500000000117, 0.00020083300000000442, 0.00020083300000000442, 0.00020086099999999663, 0.00020234799999999803, 0.00020237500000000463, 0.00020267999999999675, 0.00020267999999999675, 0.0002015000000000003, 0.00020201400000000036, 0.00020215300000000352, 0.0002025000000000013, 0.00020151399999999986]</msg>
<status status="PASS" starttime="20201112 10:15:18.585" endtime="20201112 10:15:18.587"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.580" endtime="20201112 10:15:18.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.590" endtime="20201112 10:15:18.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:18.594" endtime="20201112 10:15:18.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.592" endtime="20201112 10:15:18.614"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.589" endtime="20201112 10:15:18.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.212" endtime="20201112 10:15:18.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.212" endtime="20201112 10:15:18.615"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.624" endtime="20201112 10:15:18.649"></status>
</kw>
<msg timestamp="20201112 10:15:18.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.623" endtime="20201112 10:15:18.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:18.650" endtime="20201112 10:15:18.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.653" endtime="20201112 10:15:18.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.620" endtime="20201112 10:15:18.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.618" endtime="20201112 10:15:18.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.662" endtime="20201112 10:15:18.949"></status>
</kw>
<msg timestamp="20201112 10:15:18.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02296875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023172819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:18.661" endtime="20201112 10:15:18.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02296875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023172819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:18.954" endtime="20201112 10:15:18.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.962" endtime="20201112 10:15:18.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.658" endtime="20201112 10:15:18.964"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.656" endtime="20201112 10:15:18.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:18.969" level="INFO">${RESULT} = [{'time': 0.023172819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020406900000000117, 'source_diff': 0.00020406900000000117}, {'time': 0.023382861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:18.965" endtime="20201112 10:15:18.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:18.982" level="INFO">${ACCURACY} = {'time': [0.023172819, 0.023382861, 0.023592875, 0.023808903, 0.024026917, 0.024242944, 0.024458986, 0.024675014, 0.024893014, 0.025111042, 0.025327069, 0.025545139, 0.025763125, 0.025973153, 0.026191...</msg>
<status status="PASS" starttime="20201112 10:15:18.970" endtime="20201112 10:15:18.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.987" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 10:15:18.986" endtime="20201112 10:15:18.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.990" level="INFO">VALUE: [0.00020406900000000117, 0.00020468000000000222, 0.00020416699999999816, 0.00020418099999999773, 0.00020365299999999809, 0.00020333299999999999, 0.0002030139999999979, 0.00020333299999999999, 0.00020433300000000099, 0.00020380600000000082, 0.00020298600000000222, 0.00020419500000000076, 0.0002040000000000028, 0.00020468099999999823, 0.0002040000000000028, 0.00020449999999999982, 0.00020299999999999832, 0.00020468099999999823, 0.00020402799999999846, 0.00020399999999999932, 0.00020399999999999932, 0.00020462499999999995, 0.0002036810000000007, 0.00020298599999999875, 0.0002040139999999989, 0.00020449999999999982, 0.00020398600000000322, 0.000203542000000001, 0.00020363900000000199, 0.00020433400000000046, 0.00020383300000000049, 0.00020384700000000006, 0.00020316600000000115, 0.00020279200000000025, 0.00020402800000000193, 0.0002033749999999987, 0.00020349999999999882, 0.00020466599999999918, 0.00020365300000000156, 0.00020433400000000046, 0.00020354100000000153, 0.00020384700000000006, 0.00020398599999999628, 0.0002040000000000028, 0.00020283299999999949, 0.00020283399999999896, 0.0002035000000000023, 0.00020434700000000056, 0.00020418100000000466, 0.00020333299999999999]</msg>
<status status="PASS" starttime="20201112 10:15:18.988" endtime="20201112 10:15:18.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.983" endtime="20201112 10:15:18.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.993" endtime="20201112 10:15:18.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:18.997" endtime="20201112 10:15:19.016"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.995" endtime="20201112 10:15:19.017"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.992" endtime="20201112 10:15:19.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.616" endtime="20201112 10:15:19.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.615" endtime="20201112 10:15:19.018"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.027" endtime="20201112 10:15:19.052"></status>
</kw>
<msg timestamp="20201112 10:15:19.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.026" endtime="20201112 10:15:19.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.054" endtime="20201112 10:15:19.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.056" endtime="20201112 10:15:19.058"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.023" endtime="20201112 10:15:19.058"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.021" endtime="20201112 10:15:19.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.065" endtime="20201112 10:15:19.354"></status>
</kw>
<msg timestamp="20201112 10:15:19.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022910319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023116069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:19.064" endtime="20201112 10:15:19.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022910319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023116069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:19.359" endtime="20201112 10:15:19.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.367" endtime="20201112 10:15:19.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.061" endtime="20201112 10:15:19.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.059" endtime="20201112 10:15:19.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:19.374" level="INFO">${RESULT} = [{'time': 0.023116069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020575000000000107, 'source_diff': 0.00020575000000000107}, {'time': 0.023330111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:19.371" endtime="20201112 10:15:19.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:19.388" level="INFO">${ACCURACY} = {'time': [0.023116069, 0.023330111, 0.023544125, 0.023754139, 0.023968167, 0.024188194, 0.024404236, 0.024620236, 0.024840264, 0.025050306, 0.025264333, 0.025476347, 0.025688361, 0.025900389, 0.026114...</msg>
<status status="PASS" starttime="20201112 10:15:19.375" endtime="20201112 10:15:19.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.393" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 10:15:19.392" endtime="20201112 10:15:19.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.395" level="INFO">VALUE: [0.00020575000000000107, 0.00020668000000000075, 0.00020594399999999957, 0.00020498600000000075, 0.00020481999999999792, 0.00020633299999999952, 0.00020569399999999932, 0.00020533299999999852, 0.00020631999999999942, 0.0002050139999999999, 0.00020567999999999975, 0.00020633299999999952, 0.00020550000000000082, 0.00020599999999999785, 0.00020558299999999877, 0.00020601299999999795, 0.00020649999999999835, 0.00020563900000000052, 0.00020566699999999966, 0.00020666700000000066, 0.00020631999999999942, 0.0002056520000000006, 0.00020649999999999835, 0.00020534700000000156, 0.00020666699999999719, 0.00020533400000000146, 0.00020516599999999968, 0.0002057079999999989, 0.00020583299999999902, 0.00020520800000000186, 0.0002062499999999981, 0.0002060140000000009, 0.0002050139999999999, 0.00020550000000000082, 0.00020550000000000082, 0.00020484700000000106, 0.00020554199999999953, 0.00020566699999999966, 0.00020595799999999567, 0.0002055000000000043, 0.00020649999999999835, 0.00020551399999999692, 0.0002050000000000038, 0.00020568099999999923, 0.00020483400000000096, 0.00020633399999999552, 0.0002050000000000038, 0.00020633299999999605, 0.00020631899999999648, 0.0002058750000000012]</msg>
<status status="PASS" starttime="20201112 10:15:19.394" endtime="20201112 10:15:19.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.389" endtime="20201112 10:15:19.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.399" endtime="20201112 10:15:19.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:19.403" endtime="20201112 10:15:19.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.401" endtime="20201112 10:15:19.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.397" endtime="20201112 10:15:19.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.019" endtime="20201112 10:15:19.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.018" endtime="20201112 10:15:19.424"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.433" endtime="20201112 10:15:19.457"></status>
</kw>
<msg timestamp="20201112 10:15:19.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.431" endtime="20201112 10:15:19.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.459" endtime="20201112 10:15:19.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.461" endtime="20201112 10:15:19.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.428" endtime="20201112 10:15:19.464"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.426" endtime="20201112 10:15:19.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.471" endtime="20201112 10:15:19.758"></status>
</kw>
<msg timestamp="20201112 10:15:19.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022719, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022925931, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:19.469" endtime="20201112 10:15:19.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022719, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022925931, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:15:19.762" endtime="20201112 10:15:19.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.771" endtime="20201112 10:15:19.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.466" endtime="20201112 10:15:19.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.465" endtime="20201112 10:15:19.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:19.777" level="INFO">${RESULT} = [{'time': 0.022925931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020693100000000048, 'source_diff': 0.00020693100000000048}, {'time': 0.023141944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:19.774" endtime="20201112 10:15:19.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:19.791" level="INFO">${ACCURACY} = {'time': [0.022925931, 0.023141944, 0.02336, 0.023573986, 0.023790014, 0.024006056, 0.024224097, 0.024436083, 0.024654125, 0.024872153, 0.025094167, 0.025312194, 0.025528208, 0.025742236, 0.025958264,...</msg>
<status status="PASS" starttime="20201112 10:15:19.778" endtime="20201112 10:15:19.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.796" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 10:15:19.795" endtime="20201112 10:15:19.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.798" level="INFO">VALUE: [0.00020693100000000048, 0.00020681900000000045, 0.00020820799999999792, 0.00020800000000000332, 0.00020833300000000152, 0.00020816700000000216, 0.0002075409999999986, 0.00020749999999999935, 0.00020766699999999819, 0.0002068469999999996, 0.00020745900000000012, 0.0002083470000000011, 0.00020716600000000168, 0.00020813900000000302, 0.00020816700000000216, 0.00020818099999999826, 0.00020848700000000026, 0.00020766600000000218, 0.00020683300000000002, 0.0002086669999999992, 0.00020813899999999955, 0.0002086669999999992, 0.0002076659999999987, 0.0002086669999999992, 0.0002085560000000021, 0.00020816699999999869, 0.0002068339999999995, 0.00020731899999999748, 0.00020818100000000173, 0.0002076950000000008, 0.00020766700000000166, 0.00020776399999999917, 0.0002081110000000004, 0.00020700000000000232, 0.00020783300000000102, 0.00020851399999999992, 0.00020799999999999985, 0.00020799999999999985, 0.00020704200000000103, 0.00020850000000000035, 0.00020683399999999602, 0.00020816700000000216, 0.00020844400000000207, 0.00020718000000000125, 0.0002086950000000018, 0.0002081950000000013, 0.0002085699999999982, 0.00020866600000000318, 0.00020768000000000175, 0.00020748599999999978]</msg>
<status status="PASS" starttime="20201112 10:15:19.797" endtime="20201112 10:15:19.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.792" endtime="20201112 10:15:19.800"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.802" endtime="20201112 10:15:19.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:19.806" endtime="20201112 10:15:19.825"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.804" endtime="20201112 10:15:19.826"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.801" endtime="20201112 10:15:19.826"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.425" endtime="20201112 10:15:19.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.424" endtime="20201112 10:15:19.827"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.836" endtime="20201112 10:15:19.861"></status>
</kw>
<msg timestamp="20201112 10:15:19.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.834" endtime="20201112 10:15:19.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:19.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:19.862" endtime="20201112 10:15:19.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.865" endtime="20201112 10:15:19.867"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.832" endtime="20201112 10:15:19.867"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.829" endtime="20201112 10:15:19.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:19.874" endtime="20201112 10:15:20.161"></status>
</kw>
<msg timestamp="20201112 10:15:20.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023101014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023310611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:19.873" endtime="20201112 10:15:20.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023101014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023310611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.166" endtime="20201112 10:15:20.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.174" endtime="20201112 10:15:20.176"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.870" endtime="20201112 10:15:20.176"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.868" endtime="20201112 10:15:20.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:20.181" level="INFO">${RESULT} = [{'time': 0.023310611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00020959699999999887, 'source_diff': 0.00020959699999999887}, {'time': 0.023530625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:20.177" endtime="20201112 10:15:20.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:20.195" level="INFO">${ACCURACY} = {'time': [0.023310611, 0.023530625, 0.023746653, 0.023970667, 0.024186708, 0.024404722, 0.02462475, 0.024848792, 0.025070806, 0.025286833, 0.025508847, 0.025726875, 0.025946903, 0.026168944, 0.0263909...</msg>
<status status="PASS" starttime="20201112 10:15:20.182" endtime="20201112 10:15:20.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.199" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 10:15:20.198" endtime="20201112 10:15:20.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.202" level="INFO">VALUE: [0.00020959699999999887, 0.00021015300000000112, 0.00020968099999999976, 0.00021033399999999952, 0.00020983299999999955, 0.00020983299999999955, 0.00021050000000000235, 0.00021018100000000026, 0.00021050000000000235, 0.0002098470000000026, 0.0002101660000000012, 0.00021031900000000048, 0.00021000000000000185, 0.0002103609999999992, 0.00021001399999999795, 0.00020983299999999955, 0.00020899999999999738, 0.00020933399999999852, 0.00020931999999999895, 0.00021033300000000005, 0.00020884699999999812, 0.00020950000000000135, 0.00020931999999999895, 0.000209334000000002, 0.00021001399999999795, 0.00020916599999999674, 0.0002099440000000001, 0.0002094309999999995, 0.00020883399999999802, 0.00021050000000000235, 0.00020968000000000028, 0.0002087919999999993, 0.00020884800000000106, 0.00021065300000000162, 0.00020881900000000245, 0.00021065299999999815, 0.00020899999999999738, 0.0002089859999999978, 0.00021063899999999858, 0.00021016599999999774, 0.00020920900000000187, 0.00020981999999999945, 0.00020951400000000092, 0.00020997300000000219, 0.0002101520000000051, 0.00021016699999999722, 0.0002102920000000008, 0.00020933399999999852, 0.00021066699999999772, 0.00020983299999999955]</msg>
<status status="PASS" starttime="20201112 10:15:20.200" endtime="20201112 10:15:20.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.195" endtime="20201112 10:15:20.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.206" endtime="20201112 10:15:20.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:20.209" endtime="20201112 10:15:20.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.208" endtime="20201112 10:15:20.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.204" endtime="20201112 10:15:20.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.828" endtime="20201112 10:15:20.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:19.827" endtime="20201112 10:15:20.230"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.239" endtime="20201112 10:15:20.264"></status>
</kw>
<msg timestamp="20201112 10:15:20.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:20.238" endtime="20201112 10:15:20.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:20.266" endtime="20201112 10:15:20.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.268" endtime="20201112 10:15:20.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.235" endtime="20201112 10:15:20.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.233" endtime="20201112 10:15:20.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.277" endtime="20201112 10:15:20.565"></status>
</kw>
<msg timestamp="20201112 10:15:20.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022870903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023082931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.276" endtime="20201112 10:15:20.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022870903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023082931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.569" endtime="20201112 10:15:20.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.577" endtime="20201112 10:15:20.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.273" endtime="20201112 10:15:20.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.271" endtime="20201112 10:15:20.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:20.584" level="INFO">${RESULT} = [{'time': 0.023082931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00021202799999999952, 'source_diff': 0.00021202799999999952}, {'time': 0.023300944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:20.581" endtime="20201112 10:15:20.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:20.598" level="INFO">${ACCURACY} = {'time': [0.023082931, 0.023300944, 0.023526958, 0.023745014, 0.023965083, 0.024189042, 0.024413097, 0.024637097, 0.024857181, 0.025081139, 0.025301236, 0.025519194, 0.025737222, 0.025957264, 0.026179...</msg>
<status status="PASS" starttime="20201112 10:15:20.585" endtime="20201112 10:15:20.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.603" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 10:15:20.601" endtime="20201112 10:15:20.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.605" level="INFO">VALUE: [0.00021202799999999952, 0.00021151299999999998, 0.00021250000000000088, 0.00021269499999999886, 0.00021223600000000106, 0.00021183400000000102, 0.00021169400000000185, 0.00021266600000000024, 0.00021172300000000047, 0.00021266699999999972, 0.00021273600000000156, 0.00021197199999999777, 0.00021133300000000105, 0.00021169500000000133, 0.00021118100000000126, 0.00021183400000000102, 0.0002118050000000024, 0.00021118000000000178, 0.00021265300000000015, 0.00021186099999999722, 0.00021251400000000045, 0.00021118000000000178, 0.00021229100000000334, 0.00021133299999999758, 0.00021181999999999798, 0.00021084700000000012, 0.0002123610000000012, 0.00021118000000000178, 0.00021250000000000088, 0.00021251400000000045, 0.00021099999999999938, 0.0002119860000000008, 0.0002123610000000012, 0.0002124999999999974, 0.00021265300000000015, 0.00021133400000000052, 0.00021086100000000316, 0.0002125419999999996, 0.00021198599999999734, 0.00021245899999999818, 0.00021201300000000395, 0.00021251400000000392, 0.00021166700000000566, 0.00021184700000000112, 0.0002116809999999983, 0.00021182000000000145, 0.00021266600000000024, 0.00021216699999999922, 0.00021166700000000566, 0.00021204099999999615]</msg>
<status status="PASS" starttime="20201112 10:15:20.604" endtime="20201112 10:15:20.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.599" endtime="20201112 10:15:20.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.609" endtime="20201112 10:15:20.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:20.612" endtime="20201112 10:15:20.632"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.611" endtime="20201112 10:15:20.632"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.607" endtime="20201112 10:15:20.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.231" endtime="20201112 10:15:20.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.231" endtime="20201112 10:15:20.633"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.642" endtime="20201112 10:15:20.667"></status>
</kw>
<msg timestamp="20201112 10:15:20.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:20.641" endtime="20201112 10:15:20.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:20.669" endtime="20201112 10:15:20.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.672" endtime="20201112 10:15:20.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.638" endtime="20201112 10:15:20.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.636" endtime="20201112 10:15:20.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.681" endtime="20201112 10:15:20.970"></status>
</kw>
<msg timestamp="20201112 10:15:20.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022742403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022956889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.679" endtime="20201112 10:15:20.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:20.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022742403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022956889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:20.974" endtime="20201112 10:15:20.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:20.983" endtime="20201112 10:15:20.984"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.677" endtime="20201112 10:15:20.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.675" endtime="20201112 10:15:20.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:20.989" level="INFO">${RESULT} = [{'time': 0.022956889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00021448599999999984, 'source_diff': 0.00021448599999999984}, {'time': 0.023174847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:20.986" endtime="20201112 10:15:20.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:21.049" level="INFO">${ACCURACY} = {'time': [0.022956889, 0.023174847, 0.023398889, 0.023624917, 0.023852958, 0.024080972, 0.024304986, 0.024527014, 0.024749056, 0.024971069, 0.025193083, 0.025417167, 0.025641139, 0.025867153, 0.026089...</msg>
<status status="PASS" starttime="20201112 10:15:20.990" endtime="20201112 10:15:21.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.053" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 10:15:21.052" endtime="20201112 10:15:21.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.056" level="INFO">VALUE: [0.00021448599999999984, 0.00021316599999999727, 0.00021351399999999798, 0.0002139999999999989, 0.00021401400000000195, 0.00021416599999999827, 0.00021433300000000058, 0.00021466699999999825, 0.0002144999999999994, 0.000213012999999998, 0.00021458300000000083, 0.0002145420000000016, 0.00021301400000000095, 0.00021432000000000048, 0.00021318000000000031, 0.00021466599999999877, 0.000214723, 0.00021329200000000034, 0.00021320799999999945, 0.00021468000000000181, 0.00021466599999999877, 0.0002141810000000008, 0.00021352800000000102, 0.00021432000000000048, 0.00021383300000000008, 0.00021401399999999848, 0.00021401399999999848, 0.00021366700000000072, 0.00021282000000000245, 0.00021333299999999958, 0.00021316600000000074, 0.00021283300000000255, 0.00021283399999999855, 0.00021406900000000076, 0.00021388899999999836, 0.0002138749999999988, 0.0002146810000000013, 0.0002127640000000007, 0.00021334700000000262, 0.00021350000000000535, 0.00021334700000000262, 0.00021366700000000072, 0.0002136810000000003, 0.00021334700000000262, 0.00021362499999999507, 0.00021468000000000181, 0.00021298600000000528, 0.00021416700000000122, 0.00021282000000000245, 0.0002128329999999956]</msg>
<status status="PASS" starttime="20201112 10:15:21.055" endtime="20201112 10:15:21.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.050" endtime="20201112 10:15:21.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.060" endtime="20201112 10:15:21.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:21.063" endtime="20201112 10:15:21.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.062" endtime="20201112 10:15:21.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.058" endtime="20201112 10:15:21.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.634" endtime="20201112 10:15:21.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:20.634" endtime="20201112 10:15:21.084"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.094" endtime="20201112 10:15:21.118"></status>
</kw>
<msg timestamp="20201112 10:15:21.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:21.092" endtime="20201112 10:15:21.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:21.120" endtime="20201112 10:15:21.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.123" endtime="20201112 10:15:21.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.089" endtime="20201112 10:15:21.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.087" endtime="20201112 10:15:21.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.132" endtime="20201112 10:15:21.419"></status>
</kw>
<msg timestamp="20201112 10:15:21.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02327925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023494986, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:21.130" endtime="20201112 10:15:21.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02327925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023494986, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:15:21.423" endtime="20201112 10:15:21.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.431" endtime="20201112 10:15:21.433"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.128" endtime="20201112 10:15:21.433"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.126" endtime="20201112 10:15:21.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:21.438" level="INFO">${RESULT} = [{'time': 0.023494986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00021573599999999762, 'source_diff': 0.00021573599999999762}, {'time': 0.023717, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:15:21.435" endtime="20201112 10:15:21.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:21.452" level="INFO">${ACCURACY} = {'time': [0.023494986, 0.023717, 0.023939028, 0.024163069, 0.024391097, 0.024615097, 0.024835125, 0.025055167, 0.025277181, 0.025505208, 0.025733236, 0.025955278, 0.026177278, 0.026405333, 0.026629375...</msg>
<status status="PASS" starttime="20201112 10:15:21.439" endtime="20201112 10:15:21.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.457" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 10:15:21.455" endtime="20201112 10:15:21.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.459" level="INFO">VALUE: [0.00021573599999999762, 0.00021566699999999925, 0.00021616699999999975, 0.00021569399999999891, 0.00021552799999999955, 0.0002166659999999973, 0.00021566699999999925, 0.00021586100000000122, 0.00021533399999999758, 0.0002149999999999999, 0.00021584699999999818, 0.00021584699999999818, 0.0002161529999999967, 0.00021536100000000072, 0.00021604199999999962, 0.0002158329999999986, 0.00021516699999999875, 0.00021652799999999708, 0.00021601299999999754, 0.0002158329999999986, 0.00021648599999999837, 0.00021547300000000075, 0.00021568099999999882, 0.00021516600000000274, 0.00021619399999999941, 0.00021598599999999787, 0.00021570799999999848, 0.0002149589999999972, 0.00021549999999999694, 0.00021581899999999904, 0.00021565299999999968, 0.00021547299999999728, 0.00021570799999999848, 0.0002151519999999997, 0.00021566599999999977, 0.000216319000000003, 0.00021483399999999708, 0.0002160000000000009, 0.00021531899999999854, 0.00021667999999999688, 0.0002156109999999975, 0.00021616700000000322, 0.00021648700000000132, 0.00021649999999999447, 0.0002148329999999976, 0.0002163329999999991, 0.0002150979999999969, 0.00021586099999999775, 0.00021552799999999955, 0.0002166109999999985]</msg>
<status status="PASS" starttime="20201112 10:15:21.458" endtime="20201112 10:15:21.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.453" endtime="20201112 10:15:21.467"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.469" endtime="20201112 10:15:21.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:21.473" endtime="20201112 10:15:21.492"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.471" endtime="20201112 10:15:21.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.467" endtime="20201112 10:15:21.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.085" endtime="20201112 10:15:21.494"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.085" endtime="20201112 10:15:21.494"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.504" endtime="20201112 10:15:21.530"></status>
</kw>
<msg timestamp="20201112 10:15:21.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:21.502" endtime="20201112 10:15:21.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:21.531" endtime="20201112 10:15:21.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.534" endtime="20201112 10:15:21.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.499" endtime="20201112 10:15:21.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.496" endtime="20201112 10:15:21.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.543" endtime="20201112 10:15:21.827"></status>
</kw>
<msg timestamp="20201112 10:15:21.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023684875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023903292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:21.542" endtime="20201112 10:15:21.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023684875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023903292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:21.832" endtime="20201112 10:15:21.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.840" endtime="20201112 10:15:21.842"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.539" endtime="20201112 10:15:21.842"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.537" endtime="20201112 10:15:21.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:21.847" level="INFO">${RESULT} = [{'time': 0.023903292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00021841699999999853, 'source_diff': 0.00021841699999999853}, {'time': 0.024127319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:21.843" endtime="20201112 10:15:21.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:21.861" level="INFO">${ACCURACY} = {'time': [0.023903292, 0.024127319, 0.024355347, 0.024587375, 0.024815417, 0.025039417, 0.025269444, 0.025499472, 0.025729514, 0.025955528, 0.026187556, 0.026409611, 0.026637653, 0.026867639, 0.027091...</msg>
<status status="PASS" starttime="20201112 10:15:21.848" endtime="20201112 10:15:21.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.865" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 10:15:21.864" endtime="20201112 10:15:21.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.868" level="INFO">VALUE: [0.00021841699999999853, 0.0002168329999999996, 0.00021731900000000054, 0.00021748600000000284, 0.00021698599999999887, 0.00021849999999999994, 0.00021749999999999894, 0.00021699999999999844, 0.00021784700000000018, 0.00021816699999999828, 0.0002178200000000005, 0.00021702800000000105, 0.00021786099999999975, 0.00021831999999999754, 0.00021766700000000125, 0.00021749999999999894, 0.00021816600000000227, 0.00021731900000000054, 0.00021698599999999887, 0.0002170269999999981, 0.0002182499999999997, 0.00021817999999999838, 0.00021684700000000265, 0.00021716699999999728, 0.00021799999999999944, 0.00021748599999999937, 0.00021833299999999764, 0.00021866700000000225, 0.00021768100000000082, 0.00021699999999999844, 0.00021738900000000186, 0.00021817999999999838, 0.0002178330000000006, 0.0002171529999999977, 0.00021755599999999375, 0.0002179859999999964, 0.00021816699999999828, 0.0002171529999999977, 0.00021750000000000241, 0.00021867999999999888, 0.00021693000000000406, 0.00021827799999999536, 0.00021818099999999785, 0.00021783400000000008, 0.00021830499999999503, 0.00021747199999999633, 0.0002186810000000053, 0.00021868099999999835, 0.00021766700000000472, 0.00021734699999999968]</msg>
<status status="PASS" starttime="20201112 10:15:21.866" endtime="20201112 10:15:21.869"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.862" endtime="20201112 10:15:21.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.872" endtime="20201112 10:15:21.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:21.875" endtime="20201112 10:15:21.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.874" endtime="20201112 10:15:21.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.870" endtime="20201112 10:15:21.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.495" endtime="20201112 10:15:21.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.494" endtime="20201112 10:15:21.896"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.905" endtime="20201112 10:15:21.932"></status>
</kw>
<msg timestamp="20201112 10:15:21.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:21.904" endtime="20201112 10:15:21.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:21.933" endtime="20201112 10:15:21.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.936" endtime="20201112 10:15:21.938"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.901" endtime="20201112 10:15:21.938"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.899" endtime="20201112 10:15:21.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.945" endtime="20201112 10:15:22.231"></status>
</kw>
<msg timestamp="20201112 10:15:22.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023696528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023916597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:21.944" endtime="20201112 10:15:22.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023696528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023916597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:22.236" endtime="20201112 10:15:22.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.244" endtime="20201112 10:15:22.246"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.941" endtime="20201112 10:15:22.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.939" endtime="20201112 10:15:22.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:22.252" level="INFO">${RESULT} = [{'time': 0.023916597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00022006899999999982, 'source_diff': 0.00022006899999999982}, {'time': 0.024150625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:22.248" endtime="20201112 10:15:22.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:22.266" level="INFO">${ACCURACY} = {'time': [0.023916597, 0.024150625, 0.024382653, 0.024608667, 0.024840708, 0.025070722, 0.025302764, 0.025532778, 0.025762806, 0.025992833, 0.026220861, 0.026452903, 0.026676931, 0.026910944, 0.027136...</msg>
<status status="PASS" starttime="20201112 10:15:22.253" endtime="20201112 10:15:22.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.271" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 10:15:22.270" endtime="20201112 10:15:22.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.274" level="INFO">VALUE: [0.00022006899999999982, 0.0002193469999999982, 0.00021934700000000168, 0.00021898600000000087, 0.00021879099999999943, 0.00022049999999999847, 0.00022001399999999754, 0.00022016700000000028, 0.00021966699999999978, 0.00021965200000000074, 0.00021915300000000318, 0.00022019499999999942, 0.0002196950000000024, 0.0002196660000000003, 0.00022018000000000038, 0.00022034700000000268, 0.00021968099999999935, 0.0002192919999999994, 0.0002204859999999989, 0.00022066599999999784, 0.0002191529999999997, 0.00022051400000000151, 0.0002193469999999982, 0.00021917999999999938, 0.00021900000000000044, 0.00021883299999999814, 0.00021983400000000208, 0.00021933400000000158, 0.00021884700000000118, 0.00022016700000000028, 0.0002194859999999979, 0.00022034799999999868, 0.00021951400000000051, 0.0002200560000000032, 0.00022068100000000035, 0.00022000000000000491, 0.00021902700000000358, 0.0002188330000000016, 0.0002191659999999998, 0.00021951399999999704, 0.00021999999999999797, 0.00021887500000000032, 0.00021919399999999895, 0.00021916699999999928, 0.00021918099999999885, 0.00021886100000000075, 0.00021916699999999928, 0.00021915200000000024, 0.0002198330000000026, 0.00021949999999999747]</msg>
<status status="PASS" starttime="20201112 10:15:22.272" endtime="20201112 10:15:22.274"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.267" endtime="20201112 10:15:22.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.277" endtime="20201112 10:15:22.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:22.281" endtime="20201112 10:15:22.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.279" endtime="20201112 10:15:22.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.276" endtime="20201112 10:15:22.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.897" endtime="20201112 10:15:22.302"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.897" endtime="20201112 10:15:22.302"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.311" endtime="20201112 10:15:22.337"></status>
</kw>
<msg timestamp="20201112 10:15:22.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.309" endtime="20201112 10:15:22.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:22.339" endtime="20201112 10:15:22.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.342" endtime="20201112 10:15:22.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.307" endtime="20201112 10:15:22.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.304" endtime="20201112 10:15:22.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.351" endtime="20201112 10:15:22.638"></status>
</kw>
<msg timestamp="20201112 10:15:22.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023233639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023455097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:22.350" endtime="20201112 10:15:22.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023233639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023455097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:22.642" endtime="20201112 10:15:22.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.651" endtime="20201112 10:15:22.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.347" endtime="20201112 10:15:22.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.345" endtime="20201112 10:15:22.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:22.657" level="INFO">${RESULT} = [{'time': 0.023455097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00022145800000000077, 'source_diff': 0.00022145800000000077}, {'time': 0.023687111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:15:22.654" endtime="20201112 10:15:22.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:15:22.672" level="INFO">${ACCURACY} = {'time': [0.023455097, 0.023687111, 0.023921139, 0.024155167, 0.024385194, 0.024617208, 0.024845236, 0.025073292, 0.025307306, 0.025541319, 0.025777347, 0.026009389, 0.026245403, 0.026479431, 0.026713...</msg>
<status status="PASS" starttime="20201112 10:15:22.658" endtime="20201112 10:15:22.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.677" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 10:15:22.676" endtime="20201112 10:15:22.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.679" level="INFO">VALUE: [0.00022145800000000077, 0.00022133300000000064, 0.00022216700000000228, 0.00022134800000000315, 0.00022101299999999907, 0.00022199999999999998, 0.00022199999999999998, 0.00022169500000000092, 0.00022216700000000228, 0.00022247200000000134, 0.0002214859999999999, 0.00022250000000000048, 0.0002216530000000022, 0.00022133400000000011, 0.0002219860000000004, 0.00022219399999999848, 0.00022215299999999924, 0.00022147300000000328, 0.00022082000000000004, 0.00022186100000000028, 0.00022268100000000235, 0.00022150000000000294, 0.00022168100000000135, 0.0002224029999999995, 0.0002208469999999997, 0.00022099999999999898, 0.00022229199999999893, 0.0002213470000000002, 0.00022268000000000288, 0.0002211669999999978, 0.0002208469999999997, 0.00022172200000000059, 0.00022099999999999898, 0.00022115199999999877, 0.00022186100000000375, 0.00022182000000000451, 0.00022166700000000178, 0.00022126299999999932, 0.00022107000000000376, 0.00022083299999999667, 0.00022116700000000128, 0.00022166700000000178, 0.0002213189999999976, 0.0002223330000000051, 0.00022152799999999861, 0.00022099999999999898, 0.00022083400000000308, 0.00022197200000000084, 0.00022243000000000263, 0.00022213900000000314]</msg>
<status status="PASS" starttime="20201112 10:15:22.678" endtime="20201112 10:15:22.680"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.673" endtime="20201112 10:15:22.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:22.683" endtime="20201112 10:15:22.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:22.687" endtime="20201112 10:15:22.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.685" endtime="20201112 10:15:22.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.681" endtime="20201112 10:15:22.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.303" endtime="20201112 10:15:22.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.302" endtime="20201112 10:15:22.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.638" endtime="20201112 10:15:22.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:22.717" endtime="20201112 10:15:22.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.715" endtime="20201112 10:15:22.737"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.713" endtime="20201112 10:15:22.737"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:42.563" endtime="20201112 10:15:22.737" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:14:00.713" endtime="20201112 10:15:22.743"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:15:22.799" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:15:22.807" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:15:23.903" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:15:22.798" endtime="20201112 10:15:23.904"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.906" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:15:23.905" endtime="20201112 10:15:23.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.797" endtime="20201112 10:15:23.907"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:23.910" endtime="20201112 10:15:24.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.908" endtime="20201112 10:15:24.098"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.110" endtime="20201112 10:15:24.130"></status>
</kw>
<msg timestamp="20201112 10:15:24.130" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['in(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f0...</msg>
<status status="PASS" starttime="20201112 10:15:24.109" endtime="20201112 10:15:24.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.133" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['in(): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f0...</msg>
<status status="PASS" starttime="20201112 10:15:24.131" endtime="20201112 10:15:24.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.137" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:15:24.134" endtime="20201112 10:15:24.137"></status>
</kw>
<status status="FAIL" starttime="20201112 10:15:24.106" endtime="20201112 10:15:24.138"></status>
</kw>
<status status="FAIL" starttime="20201112 10:15:24.104" endtime="20201112 10:15:24.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.103" endtime="20201112 10:15:24.139"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:15:24.143" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:15:24.142" endtime="20201112 10:15:24.143"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.140" endtime="20201112 10:15:24.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.102" endtime="20201112 10:15:24.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.101" endtime="20201112 10:15:24.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.145" endtime="20201112 10:15:24.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.100" endtime="20201112 10:15:24.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.148" endtime="20201112 10:15:24.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.098" endtime="20201112 10:15:24.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:22.795" endtime="20201112 10:15:24.151"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:24.157" endtime="20201112 10:15:24.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.156" endtime="20201112 10:15:24.177"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.191" endtime="20201112 10:15:24.211"></status>
</kw>
<msg timestamp="20201112 10:15:24.211" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.189" endtime="20201112 10:15:24.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.214" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:15:24.212" endtime="20201112 10:15:24.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:15:24.217" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:15:24.215" endtime="20201112 10:15:24.217"></status>
</kw>
<status status="FAIL" starttime="20201112 10:15:24.186" endtime="20201112 10:15:24.218"></status>
</kw>
<status status="FAIL" starttime="20201112 10:15:24.184" endtime="20201112 10:15:24.219"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.183" endtime="20201112 10:15:24.219"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:15:24.223" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:15:24.222" endtime="20201112 10:15:24.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.220" endtime="20201112 10:15:24.225"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.182" endtime="20201112 10:15:24.225"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.181" endtime="20201112 10:15:24.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.226" endtime="20201112 10:15:24.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.180" endtime="20201112 10:15:24.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.178" endtime="20201112 10:15:24.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.154" endtime="20201112 10:15:24.229"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:24.233" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.241" endtime="20201112 10:15:28.350"></status>
</kw>
<msg timestamp="20201112 10:15:28.351" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 191842, 'wakeups': [201848, 211848, 221848, 231848, 241848, 251848, 26...</msg>
<status status="PASS" starttime="20201112 10:15:24.239" endtime="20201112 10:15:28.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.358" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 191842, 'wakeups': [201848, 211848, 221848, 231848, 241848, 251848, 26...</msg>
<status status="PASS" starttime="20201112 10:15:28.354" endtime="20201112 10:15:28.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.361" endtime="20201112 10:15:28.363"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.237" endtime="20201112 10:15:28.364"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.235" endtime="20201112 10:15:28.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:28.367" level="INFO">${RESULT} = {'start-time': 191842, 'timer-count': 1, 'wakeups': [201848, 211848, 221848, 231848, 241848, 251848, 261848, 271848, 281848, 291848, 301848, 311848, 321848, 331848, 341848, 351848, 361848, 371848, 381...</msg>
<status status="PASS" starttime="20201112 10:15:28.365" endtime="20201112 10:15:28.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.372" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:28.371" endtime="20201112 10:15:28.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.374" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:28.373" endtime="20201112 10:15:28.374"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.368" endtime="20201112 10:15:28.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.379" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:28.378" endtime="20201112 10:15:28.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.381" level="INFO">VALUE: 191842</msg>
<status status="PASS" starttime="20201112 10:15:28.380" endtime="20201112 10:15:28.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.375" endtime="20201112 10:15:28.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.386" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:28.385" endtime="20201112 10:15:28.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.388" level="INFO">VALUE: [201848, 211848, 221848, 231848, 241848, 251848, 261848, 271848, 281848, 291848, 301848, 311848, 321848, 331848, 341848, 351848, 361848, 371848, 381848, 391848, 401848, 411848, 421848, 431848, 441848, 451848, 461848, 471848, 481848, 491848, 501848, 511848, 521848, 531848, 541848, 551848, 561848, 571848, 581848, 591848, 601848, 611848, 621848, 631848, 641848, 651848, 661848, 671848, 681848, 691848, 701848, 711848, 721848, 731848, 741848, 751848, 761848, 771848, 781848, 791848, 801848, 811848, 821848, 831848, 841848, 851848, 861848, 871848, 881848, 891848, 901848, 911848, 921848, 931848, 941848, 951848, 961848, 971848, 981848, 991848, 1001848, 1011848, 1021848, 1031848, 1041848, 1051848, 1061848, 1071848, 1081848, 1091848, 1101848, 1111848, 1121848, 1131848, 1141848, 1151848, 1161848, 1171848, 1181848, 1191848]</msg>
<status status="PASS" starttime="20201112 10:15:28.387" endtime="20201112 10:15:28.389"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.383" endtime="20201112 10:15:28.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.396" endtime="20201112 10:15:28.693"></status>
</kw>
<msg timestamp="20201112 10:15:28.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074242125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.094257069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.395" endtime="20201112 10:15:28.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074242125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.094257069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.697" endtime="20201112 10:15:28.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.705" endtime="20201112 10:15:28.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.392" endtime="20201112 10:15:28.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.390" endtime="20201112 10:15:28.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:28.733" level="INFO">${RESULT} = {'time': [0.074242125, 0.094257069, 0.114259431, 0.134261722, 0.154264069, 0.174266264, 0.194268625, 0.214270861, 0.234273236, 0.254275472, 0.274277819, 0.294280056, 0.314282417, 0.334284667, 0.354287...</msg>
<status status="PASS" starttime="20201112 10:15:28.709" endtime="20201112 10:15:28.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.738" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:28.737" endtime="20201112 10:15:28.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.740" level="INFO">VALUE: 0.074242125</msg>
<status status="PASS" starttime="20201112 10:15:28.739" endtime="20201112 10:15:28.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.734" endtime="20201112 10:15:28.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.746" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:28.744" endtime="20201112 10:15:28.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.748" level="INFO">VALUE: [0.094257069, 0.114259431, 0.134261722, 0.154264069, 0.174266264, 0.194268625, 0.214270861, 0.234273236, 0.254275472, 0.274277819, 0.294280056, 0.314282417, 0.334284667, 0.354287028, 0.37428925, 0.394291639, 0.414293861, 0.434296222, 0.454298514, 0.474300833, 0.494303083, 0.5143055, 0.534307653, 0.554310028, 0.574312264, 0.594314625, 0.614316861, 0.634319222, 0.654321458, 0.674323819, 0.694326083, 0.714328444, 0.734330694, 0.754333056, 0.774335278, 0.794337639, 0.814339861, 0.834342222, 0.854344472, 0.874346833, 0.894349069, 0.914351431, 0.934353681, 0.954356028, 0.974358278, 0.994360653, 1.014362931, 1.034365264, 1.054367472, 1.074369875, 1.094372153, 1.114374431, 1.134376681, 1.154379042, 1.174381278, 1.194383639, 1.214385875, 1.23438825, 1.254390472, 1.274392861, 1.294395069, 1.314397444, 1.334399694, 1.354402056, 1.374404278, 1.394406639, 1.414408889, 1.434411236, 1.454413472, 1.474415847, 1.494418083, 1.514420458, 1.534422681, 1.554425042, 1.574427292, 1.594429639, 1.614431875, 1.634434264, 1.654436486, 1.674438847, 1.694441125, 1.714443444, 1.734445681, 1.754448042, 1.774450292, 1.794452653, 1.814454944, 1.83445725, 1.854459486, 1.874461875, 1.894464083, 1.914466472, 1.934468708, 1.954471056, 1.974473306, 1.994475694, 2.014477958, 2.034480264, 2.0544825, 2.074484875] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:28.747" endtime="20201112 10:15:28.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.741" endtime="20201112 10:15:28.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.752" endtime="20201112 10:15:28.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:28.756" endtime="20201112 10:15:28.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.754" endtime="20201112 10:15:28.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.750" endtime="20201112 10:15:28.777"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.233" endtime="20201112 10:15:28.777"></status>
</kw>
<msg timestamp="20201112 10:15:28.777" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.786" endtime="20201112 10:15:32.905"></status>
</kw>
<msg timestamp="20201112 10:15:32.907" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2464593, 'wakeups': [2474599, 2484599, 2494599, 2504599, 2514599, 2524...</msg>
<status status="PASS" starttime="20201112 10:15:28.784" endtime="20201112 10:15:32.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.913" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2464593, 'wakeups': [2474599, 2484599, 2494599, 2504599, 2514599, 2524...</msg>
<status status="PASS" starttime="20201112 10:15:32.909" endtime="20201112 10:15:32.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.916" endtime="20201112 10:15:32.919"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.781" endtime="20201112 10:15:32.920"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.779" endtime="20201112 10:15:32.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:32.924" level="INFO">${RESULT} = {'start-time': 2464593, 'timer-count': 1, 'wakeups': [2474599, 2484599, 2494599, 2504599, 2514599, 2524599, 2534599, 2544599, 2554599, 2564599, 2574599, 2584599, 2594599, 2604599, 2614599, 2624599, 26...</msg>
<status status="PASS" starttime="20201112 10:15:32.922" endtime="20201112 10:15:32.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.929" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:32.927" endtime="20201112 10:15:32.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.931" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:32.930" endtime="20201112 10:15:32.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.925" endtime="20201112 10:15:32.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.936" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:32.935" endtime="20201112 10:15:32.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.938" level="INFO">VALUE: 2464593</msg>
<status status="PASS" starttime="20201112 10:15:32.937" endtime="20201112 10:15:32.939"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.932" endtime="20201112 10:15:32.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.943" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:32.942" endtime="20201112 10:15:32.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:32.946" level="INFO">VALUE: [2474599, 2484599, 2494599, 2504599, 2514599, 2524599, 2534599, 2544599, 2554599, 2564599, 2574599, 2584599, 2594599, 2604599, 2614599, 2624599, 2634599, 2644599, 2654599, 2664599, 2674599, 2684599, 2694599, 2704599, 2714599, 2724599, 2734599, 2744599, 2754599, 2764599, 2774599, 2784599, 2794599, 2804599, 2814599, 2824599, 2834599, 2844599, 2854599, 2864599, 2874599, 2884599, 2894599, 2904599, 2914599, 2924599, 2934599, 2944599, 2954599, 2964599, 2974599, 2984599, 2994599, 3004599, 3014599, 3024599, 3034599, 3044599, 3054599, 3064599, 3074599, 3084599, 3094599, 3104599, 3114599, 3124599, 3134599, 3144599, 3154599, 3164599, 3174599, 3184599, 3194599, 3204599, 3214599, 3224599, 3234599, 3244599, 3254599, 3264599, 3274599, 3284599, 3294599, 3304599, 3314599, 3324599, 3334599, 3344599, 3354599, 3364599, 3374599, 3384599, 3394599, 3404599, 3414599, 3424599, 3434599, 3444599, 3454599, 3464599]</msg>
<status status="PASS" starttime="20201112 10:15:32.945" endtime="20201112 10:15:32.946"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.940" endtime="20201112 10:15:32.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:32.953" endtime="20201112 10:15:33.246"></status>
</kw>
<msg timestamp="20201112 10:15:33.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020903681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040918653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:32.952" endtime="20201112 10:15:33.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020903681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040918653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:33.250" endtime="20201112 10:15:33.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.258" endtime="20201112 10:15:33.259"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.949" endtime="20201112 10:15:33.260"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:32.947" endtime="20201112 10:15:33.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:33.287" level="INFO">${RESULT} = {'time': [0.020903681, 0.040918653, 0.060921014, 0.08092325, 0.100925597, 0.120927847, 0.140930194, 0.160932417, 0.180934778, 0.200937014, 0.220939375, 0.240941625, 0.260943972, 0.280946208, 0.3009485...</msg>
<status status="PASS" starttime="20201112 10:15:33.261" endtime="20201112 10:15:33.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.292" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:33.291" endtime="20201112 10:15:33.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.294" level="INFO">VALUE: 0.020903681</msg>
<status status="PASS" starttime="20201112 10:15:33.293" endtime="20201112 10:15:33.294"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.288" endtime="20201112 10:15:33.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.299" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:33.298" endtime="20201112 10:15:33.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.302" level="INFO">VALUE: [0.040918653, 0.060921014, 0.08092325, 0.100925597, 0.120927847, 0.140930194, 0.160932417, 0.180934778, 0.200937014, 0.220939375, 0.240941625, 0.260943972, 0.280946208, 0.300948556, 0.320950833, 0.340953153, 0.360955403, 0.38095775, 0.40096, 0.420962347, 0.440964569, 0.460966972, 0.480969167, 0.500971528, 0.520973778, 0.540976139, 0.560978361, 0.580980722, 0.600983014, 0.620985319, 0.640987542, 0.660989903, 0.680992139, 0.700994528, 0.720996736, 0.740999111, 0.761001375, 0.781003694, 0.801005917, 0.821008278, 0.841010514, 0.861012875, 0.881015181, 0.901017472, 0.921019708, 0.941022069, 0.961024319, 0.981026667, 1.001028889, 1.021031264, 1.041033486, 1.061035847, 1.081038125, 1.101040444, 1.121042694, 1.141045042, 1.161047292, 1.181049653, 1.201051903, 1.221054222, 1.241056458, 1.261058819, 1.281061069, 1.301063417, 1.321065653, 1.341068014, 1.361070292, 1.381072625, 1.401074847, 1.421077194, 1.441079444, 1.461081806, 1.481084097, 1.501086389, 1.521088625, 1.541090986, 1.561093222, 1.581095597, 1.601097819, 1.621100167, 1.641102403, 1.661104764, 1.681107014, 1.701109361, 1.721111639, 1.741113958, 1.761116208, 1.781118556, 1.801120792, 1.821123167, 1.841125389, 1.861127736, 1.881129972, 1.901132333, 1.921134597, 1.941136944, 1.961139167, 1.981141528, 2.001143764, 2.021146125] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:33.301" endtime="20201112 10:15:33.302"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.295" endtime="20201112 10:15:33.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.305" endtime="20201112 10:15:33.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:33.309" endtime="20201112 10:15:33.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.307" endtime="20201112 10:15:33.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.304" endtime="20201112 10:15:33.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.778" endtime="20201112 10:15:33.330"></status>
</kw>
<msg timestamp="20201112 10:15:33.330" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.338" endtime="20201112 10:15:37.457"></status>
</kw>
<msg timestamp="20201112 10:15:37.459" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 4740473, 'wakeups': [4750479, 4760479, 4770479, 4780479, 4790479, 4800...</msg>
<status status="PASS" starttime="20201112 10:15:33.337" endtime="20201112 10:15:37.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.465" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 4740473, 'wakeups': [4750479, 4760479, 4770479, 4780479, 4790479, 4800...</msg>
<status status="PASS" starttime="20201112 10:15:37.461" endtime="20201112 10:15:37.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.467" endtime="20201112 10:15:37.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.334" endtime="20201112 10:15:37.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.332" endtime="20201112 10:15:37.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:37.479" level="INFO">${RESULT} = {'start-time': 4740473, 'timer-count': 1, 'wakeups': [4750479, 4760479, 4770479, 4780479, 4790479, 4800479, 4810479, 4820479, 4830479, 4840479, 4850479, 4860479, 4870479, 4880479, 4890479, 4900479, 49...</msg>
<status status="PASS" starttime="20201112 10:15:37.475" endtime="20201112 10:15:37.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.484" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:37.483" endtime="20201112 10:15:37.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.486" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:37.485" endtime="20201112 10:15:37.486"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.480" endtime="20201112 10:15:37.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.492" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:37.490" endtime="20201112 10:15:37.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.494" level="INFO">VALUE: 4740473</msg>
<status status="PASS" starttime="20201112 10:15:37.493" endtime="20201112 10:15:37.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.487" endtime="20201112 10:15:37.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.499" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:37.498" endtime="20201112 10:15:37.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.502" level="INFO">VALUE: [4750479, 4760479, 4770479, 4780479, 4790479, 4800479, 4810479, 4820479, 4830479, 4840479, 4850479, 4860479, 4870479, 4880479, 4890479, 4900479, 4910479, 4920479, 4930479, 4940479, 4950479, 4960479, 4970479, 4980479, 4990479, 5000479, 5010479, 5020479, 5030479, 5040479, 5050479, 5060479, 5070479, 5080479, 5090479, 5100479, 5110479, 5120479, 5130479, 5140479, 5150479, 5160479, 5170479, 5180479, 5190479, 5200479, 5210479, 5220479, 5230479, 5240479, 5250479, 5260479, 5270479, 5280479, 5290479, 5300479, 5310479, 5320479, 5330479, 5340479, 5350479, 5360479, 5370479, 5380479, 5390479, 5400479, 5410479, 5420479, 5430479, 5440479, 5450479, 5460479, 5470479, 5480479, 5490479, 5500479, 5510479, 5520479, 5530479, 5540479, 5550479, 5560479, 5570479, 5580479, 5590479, 5600479, 5610479, 5620479, 5630479, 5640479, 5650479, 5660479, 5670479, 5680479, 5690479, 5700479, 5710479, 5720479, 5730479, 5740479]</msg>
<status status="PASS" starttime="20201112 10:15:37.501" endtime="20201112 10:15:37.502"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.496" endtime="20201112 10:15:37.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.510" endtime="20201112 10:15:37.802"></status>
</kw>
<msg timestamp="20201112 10:15:37.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020060972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040076611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:37.508" endtime="20201112 10:15:37.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020060972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040076611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:37.806" endtime="20201112 10:15:37.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.813" endtime="20201112 10:15:37.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.506" endtime="20201112 10:15:37.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.503" endtime="20201112 10:15:37.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:37.841" level="INFO">${RESULT} = {'time': [0.020060972, 0.040076611, 0.060078958, 0.080081194, 0.100083556, 0.120085764, 0.140088125, 0.160090361, 0.180092722, 0.200094931, 0.220097306, 0.240099528, 0.260101889, 0.280104125, 0.300106...</msg>
<status status="PASS" starttime="20201112 10:15:37.817" endtime="20201112 10:15:37.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.846" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:37.845" endtime="20201112 10:15:37.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.848" level="INFO">VALUE: 0.020060972</msg>
<status status="PASS" starttime="20201112 10:15:37.847" endtime="20201112 10:15:37.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.842" endtime="20201112 10:15:37.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.854" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:37.852" endtime="20201112 10:15:37.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:37.856" level="INFO">VALUE: [0.040076611, 0.060078958, 0.080081194, 0.100083556, 0.120085764, 0.140088125, 0.160090361, 0.180092722, 0.200094931, 0.220097306, 0.240099528, 0.260101889, 0.280104125, 0.300106486, 0.320108694, 0.340111069, 0.360113278, 0.380115639, 0.400117889, 0.420120222, 0.440122458, 0.460124833, 0.480127042, 0.500129403, 0.520131625, 0.540134, 0.560136222, 0.580138569, 0.600140819, 0.620143167, 0.640145389, 0.660147792, 0.680149972, 0.700152361, 0.720154569, 0.740156917, 0.760159208, 0.780161528, 0.800163736, 0.820166097, 0.840168389, 0.860170736, 0.880172917, 0.900175347, 0.9201775, 0.940179861, 0.960182083, 0.980184458, 1.000186681, 1.020189028, 1.040191278, 1.060193625, 1.080195861, 1.100198208, 1.120200444, 1.140202792, 1.160205028, 1.180207389, 1.200209625, 1.220211986, 1.240214264, 1.260216569, 1.280218819, 1.300221153, 1.320223389, 1.340225764, 1.360227972, 1.380230333, 1.400232569, 1.420234958, 1.440237139, 1.460239514, 1.480241736, 1.500244083, 1.520246319, 1.540248722, 1.560250903, 1.580253292, 1.6002555, 1.620257847, 1.640260097, 1.660262444, 1.680264667, 1.700267028, 1.720269306, 1.740271639, 1.760273861, 1.780276208, 1.800278431, 1.820280792, 1.840283028, 1.860285389, 1.880287611, 1.900290014, 1.920292194, 1.940294556, 1.960296792, 1.980299167, 2.000301389, 2.020303736] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:37.855" endtime="20201112 10:15:37.857"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.849" endtime="20201112 10:15:37.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.860" endtime="20201112 10:15:37.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:37.863" endtime="20201112 10:15:37.883"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.862" endtime="20201112 10:15:37.883"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.858" endtime="20201112 10:15:37.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.331" endtime="20201112 10:15:37.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.231" endtime="20201112 10:15:37.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.230" endtime="20201112 10:15:37.885"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:37.887" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:37.896" endtime="20201112 10:15:41.999"></status>
</kw>
<msg timestamp="20201112 10:15:41.999" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 7019226, 'wakeups': [7029238, 7039238, 7049238, 7059238, 7069238, 7079...</msg>
<status status="PASS" starttime="20201112 10:15:37.894" endtime="20201112 10:15:42.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.002" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 7019226, 'wakeups': [7029238, 7039238, 7049238, 7059238, 7069238, 7079...</msg>
<status status="PASS" starttime="20201112 10:15:42.000" endtime="20201112 10:15:42.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.003" endtime="20201112 10:15:42.005"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.891" endtime="20201112 10:15:42.006"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.889" endtime="20201112 10:15:42.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:42.009" level="INFO">${RESULT} = {'start-time': 7019226, 'timer-count': 2, 'wakeups': [7029238, 7039238, 7049238, 7059238, 7069238, 7079238, 7089238, 7099238, 7109238, 7119238, 7129238, 7139238, 7149238, 7159238, 7169238, 7179238, 71...</msg>
<status status="PASS" starttime="20201112 10:15:42.007" endtime="20201112 10:15:42.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.013" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:42.012" endtime="20201112 10:15:42.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.015" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:42.014" endtime="20201112 10:15:42.016"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.010" endtime="20201112 10:15:42.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.021" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:42.019" endtime="20201112 10:15:42.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.023" level="INFO">VALUE: 7019226</msg>
<status status="PASS" starttime="20201112 10:15:42.022" endtime="20201112 10:15:42.023"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.017" endtime="20201112 10:15:42.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.028" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:42.027" endtime="20201112 10:15:42.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.030" level="INFO">VALUE: [7029238, 7039238, 7049238, 7059238, 7069238, 7079238, 7089238, 7099238, 7109238, 7119238, 7129238, 7139238, 7149238, 7159238, 7169238, 7179238, 7189238, 7199238, 7209238, 7219238, 7229238, 7239238, 7249238, 7259238, 7269238, 7279238, 7289238, 7299238, 7309238, 7319238, 7329238, 7339238, 7349238, 7359238, 7369238, 7379238, 7389238, 7399238, 7409238, 7419238, 7429238, 7439238, 7449238, 7459238, 7469238, 7479238, 7489238, 7499238, 7509238, 7519238, 7529238, 7539238, 7549238, 7559238, 7569238, 7579238, 7589238, 7599238, 7609238, 7619238, 7629238, 7639238, 7649238, 7659238, 7669238, 7679238, 7689238, 7699238, 7709238, 7719238, 7729238, 7739238, 7749238, 7759238, 7769238, 7779238, 7789238, 7799238, 7809238, 7819238, 7829238, 7839238, 7849238, 7859238, 7869238, 7879238, 7889238, 7899238, 7909238, 7919238, 7929238, 7939238, 7949238, 7959238, 7969238, 7979238, 7989238, 7999238, 8009238, 8019238]</msg>
<status status="PASS" starttime="20201112 10:15:42.029" endtime="20201112 10:15:42.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.024" endtime="20201112 10:15:42.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.038" endtime="20201112 10:15:42.331"></status>
</kw>
<msg timestamp="20201112 10:15:42.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023163306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043189958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:42.036" endtime="20201112 10:15:42.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023163306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043189958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:42.335" endtime="20201112 10:15:42.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.342" endtime="20201112 10:15:42.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.033" endtime="20201112 10:15:42.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.032" endtime="20201112 10:15:42.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:42.372" level="INFO">${RESULT} = {'time': [0.023163306, 0.043189958, 0.063192306, 0.083194528, 0.103196875, 0.123199097, 0.143201444, 0.163203694, 0.183206028, 0.203208264, 0.223210597, 0.243212833, 0.263215181, 0.283217417, 0.303219...</msg>
<status status="PASS" starttime="20201112 10:15:42.346" endtime="20201112 10:15:42.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.376" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:42.375" endtime="20201112 10:15:42.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.378" level="INFO">VALUE: 0.023163306</msg>
<status status="PASS" starttime="20201112 10:15:42.377" endtime="20201112 10:15:42.379"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.373" endtime="20201112 10:15:42.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.384" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:42.383" endtime="20201112 10:15:42.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:42.386" level="INFO">VALUE: [0.043189958, 0.063192306, 0.083194528, 0.103196875, 0.123199097, 0.143201444, 0.163203694, 0.183206028, 0.203208264, 0.223210597, 0.243212833, 0.263215181, 0.283217417, 0.303219764, 0.323221986, 0.343224347, 0.363226569, 0.383228931, 0.403231167, 0.423233583, 0.443235722, 0.463238083, 0.483240306, 0.503242667, 0.523244889, 0.543247236, 0.5632495, 0.583251889, 0.603254042, 0.623256403, 0.643258625, 0.663260986, 0.683263208, 0.703265556, 0.723267806, 0.743270139, 0.763272375, 0.78327475, 0.803276944, 0.823279292, 0.843281569, 0.863283889, 0.883286111, 0.903288458, 0.923290708, 0.943293042, 0.963295278, 0.983297625, 1.003299861, 1.023302194, 1.043304431, 1.063306778, 1.083309, 1.103311361, 1.123313583, 1.143315931, 1.163318222, 1.183320528, 1.203322833, 1.223325097, 1.243327319, 1.263329681, 1.283331903, 1.303334264, 1.323336486, 1.343338833, 1.363341056, 1.383343417, 1.403345639, 1.423348, 1.443350222, 1.463352569, 1.483354819, 1.503357167, 1.523359389, 1.54336175, 1.563363958, 1.583366333, 1.603368569, 1.623370889, 1.643373125, 1.663375486, 1.683377722, 1.703380056, 1.723382292, 1.743384639, 1.763386861, 1.783389222, 1.8033915, 1.823393792, 1.843396028, 1.863398375, 1.883400597, 1.903402958, 1.923405181, 1.943407583, 1.963409764, 1.983412139, 2.003414361, 2.023416694] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:42.385" endtime="20201112 10:15:42.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.380" endtime="20201112 10:15:42.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.390" endtime="20201112 10:15:42.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:42.393" endtime="20201112 10:15:42.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.392" endtime="20201112 10:15:42.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.388" endtime="20201112 10:15:42.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.888" endtime="20201112 10:15:42.414"></status>
</kw>
<msg timestamp="20201112 10:15:42.414" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:42.423" endtime="20201112 10:15:46.546"></status>
</kw>
<msg timestamp="20201112 10:15:46.547" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 9282855, 'wakeups': [9292868, 9302867, 9312867, 9322867, 9332867, 9342...</msg>
<status status="PASS" starttime="20201112 10:15:42.421" endtime="20201112 10:15:46.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.550" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 9282855, 'wakeups': [9292868, 9302867, 9312867, 9322867, 9332867, 9342...</msg>
<status status="PASS" starttime="20201112 10:15:46.548" endtime="20201112 10:15:46.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.551" endtime="20201112 10:15:46.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.418" endtime="20201112 10:15:46.554"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.416" endtime="20201112 10:15:46.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:46.557" level="INFO">${RESULT} = {'start-time': 9282855, 'timer-count': 2, 'wakeups': [9292868, 9302867, 9312867, 9322867, 9332867, 9342867, 9352867, 9362867, 9372867, 9382867, 9392867, 9402867, 9412867, 9422867, 9432867, 9442867, 94...</msg>
<status status="PASS" starttime="20201112 10:15:46.555" endtime="20201112 10:15:46.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.562" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:46.561" endtime="20201112 10:15:46.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.564" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:46.563" endtime="20201112 10:15:46.564"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.558" endtime="20201112 10:15:46.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.569" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:46.568" endtime="20201112 10:15:46.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.571" level="INFO">VALUE: 9282855</msg>
<status status="PASS" starttime="20201112 10:15:46.570" endtime="20201112 10:15:46.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.565" endtime="20201112 10:15:46.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.576" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:46.575" endtime="20201112 10:15:46.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.578" level="INFO">VALUE: [9292868, 9302867, 9312867, 9322867, 9332867, 9342867, 9352867, 9362867, 9372867, 9382867, 9392867, 9402867, 9412867, 9422867, 9432867, 9442867, 9452867, 9462867, 9472867, 9482867, 9492867, 9502867, 9512867, 9522867, 9532867, 9542867, 9552867, 9562867, 9572867, 9582867, 9592867, 9602867, 9612867, 9622867, 9632867, 9642867, 9652867, 9662867, 9672867, 9682867, 9692867, 9702867, 9712867, 9722867, 9732867, 9742867, 9752867, 9762867, 9772867, 9782867, 9792867, 9802867, 9812867, 9822867, 9832867, 9842867, 9852867, 9862867, 9872867, 9882867, 9892867, 9902867, 9912867, 9922867, 9932867, 9942867, 9952867, 9962867, 9972867, 9982867, 9992867, 10002867, 10012867, 10022867, 10032867, 10042867, 10052867, 10062867, 10072867, 10082867, 10092867, 10102867, 10112867, 10122867, 10132867, 10142867, 10152867, 10162867, 10172867, 10182867, 10192867, 10202867, 10212867, 10222867, 10232867, 10242867, 10252867, 10262867, 10272867, 10282867]</msg>
<status status="PASS" starttime="20201112 10:15:46.577" endtime="20201112 10:15:46.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.573" endtime="20201112 10:15:46.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.586" endtime="20201112 10:15:46.878"></status>
</kw>
<msg timestamp="20201112 10:15:46.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020614028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040642014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:46.585" endtime="20201112 10:15:46.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020614028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040642014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:46.882" endtime="20201112 10:15:46.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.892" endtime="20201112 10:15:46.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.582" endtime="20201112 10:15:46.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.580" endtime="20201112 10:15:46.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:46.921" level="INFO">${RESULT} = {'time': [0.020614028, 0.040642014, 0.060642361, 0.080644583, 0.100646931, 0.120649153, 0.140651514, 0.160653722, 0.180656069, 0.200658292, 0.220660653, 0.240662861, 0.260665222, 0.280667444, 0.300669...</msg>
<status status="PASS" starttime="20201112 10:15:46.896" endtime="20201112 10:15:46.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.925" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:46.924" endtime="20201112 10:15:46.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.928" level="INFO">VALUE: 0.020614028</msg>
<status status="PASS" starttime="20201112 10:15:46.927" endtime="20201112 10:15:46.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.922" endtime="20201112 10:15:46.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.933" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:46.932" endtime="20201112 10:15:46.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.936" level="INFO">VALUE: [0.040642014, 0.060642361, 0.080644583, 0.100646931, 0.120649153, 0.140651514, 0.160653722, 0.180656069, 0.200658292, 0.220660653, 0.240662861, 0.260665222, 0.280667444, 0.300669833, 0.320672028, 0.340674375, 0.360676597, 0.380678944, 0.400681167, 0.420683528, 0.44068575, 0.460688125, 0.480690333, 0.500692667, 0.520694903, 0.54069725, 0.560699472, 0.580701819, 0.600704056, 0.620706472, 0.640708611, 0.660710958, 0.680713208, 0.700715542, 0.720717764, 0.740720111, 0.760722333, 0.780724708, 0.800726917, 0.820729264, 0.840731486, 0.860733931, 0.880736153, 0.900738431, 0.920740667, 0.940742986, 0.960745236, 0.980747583, 1.000749792, 1.020752194, 1.040754375, 1.060756722, 1.080758944, 1.100761292, 1.120763528, 1.140765889, 1.160768111, 1.180770444, 1.200772667, 1.220775014, 1.24077725, 1.260779597, 1.280781819, 1.300784181, 1.320786389, 1.34078875, 1.360790986, 1.380793333, 1.400795542, 1.420797903, 1.440800139, 1.460802472, 1.480804694, 1.500807056, 1.520809292, 1.540811625, 1.560813917, 1.580816222, 1.600818444, 1.620820778, 1.640823, 1.660825347, 1.680827583, 1.700829931, 1.720832153, 1.740834514, 1.760836736, 1.780839083, 1.800841333, 1.820843653, 1.840845875, 1.860848236, 1.880850486, 1.900852806, 1.920855028, 1.940857417, 1.960859625, 1.980861958, 2.000864194, 2.020866556] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:46.934" endtime="20201112 10:15:46.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.929" endtime="20201112 10:15:46.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.939" endtime="20201112 10:15:46.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:46.943" endtime="20201112 10:15:46.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.941" endtime="20201112 10:15:46.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.937" endtime="20201112 10:15:46.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:42.415" endtime="20201112 10:15:46.964"></status>
</kw>
<msg timestamp="20201112 10:15:46.964" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.972" endtime="20201112 10:15:51.102"></status>
</kw>
<msg timestamp="20201112 10:15:51.104" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11557235, 'wakeups': [11567248, 11577247, 11587247, 11597247, 11607247...</msg>
<status status="PASS" starttime="20201112 10:15:46.971" endtime="20201112 10:15:51.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.108" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11557235, 'wakeups': [11567248, 11577247, 11587247, 11597247, 11607247...</msg>
<status status="PASS" starttime="20201112 10:15:51.106" endtime="20201112 10:15:51.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.109" endtime="20201112 10:15:51.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.968" endtime="20201112 10:15:51.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.966" endtime="20201112 10:15:51.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:51.115" level="INFO">${RESULT} = {'start-time': 11557235, 'timer-count': 2, 'wakeups': [11567248, 11577247, 11587247, 11597247, 11607247, 11617247, 11627247, 11637247, 11647247, 11657247, 11667247, 11677247, 11687247, 11697247, 11707...</msg>
<status status="PASS" starttime="20201112 10:15:51.112" endtime="20201112 10:15:51.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.119" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:51.118" endtime="20201112 10:15:51.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.121" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:51.120" endtime="20201112 10:15:51.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.115" endtime="20201112 10:15:51.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.126" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:51.125" endtime="20201112 10:15:51.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.129" level="INFO">VALUE: 11557235</msg>
<status status="PASS" starttime="20201112 10:15:51.127" endtime="20201112 10:15:51.130"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.122" endtime="20201112 10:15:51.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.135" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:51.134" endtime="20201112 10:15:51.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.137" level="INFO">VALUE: [11567248, 11577247, 11587247, 11597247, 11607247, 11617247, 11627247, 11637247, 11647247, 11657247, 11667247, 11677247, 11687247, 11697247, 11707247, 11717247, 11727247, 11737247, 11747247, 11757247, 11767247, 11777247, 11787247, 11797247, 11807247, 11817247, 11827247, 11837247, 11847247, 11857247, 11867247, 11877247, 11887247, 11897247, 11907247, 11917247, 11927247, 11937247, 11947247, 11957247, 11967247, 11977247, 11987247, 11997247, 12007247, 12017247, 12027247, 12037247, 12047247, 12057247, 12067247, 12077247, 12087247, 12097247, 12107247, 12117247, 12127247, 12137247, 12147247, 12157247, 12167247, 12177247, 12187247, 12197247, 12207247, 12217247, 12227247, 12237247, 12247247, 12257247, 12267247, 12277247, 12287247, 12297247, 12307247, 12317247, 12327247, 12337247, 12347247, 12357247, 12367247, 12377247, 12387247, 12397247, 12407247, 12417247, 12427247, 12437247, 12447247, 12457247, 12467247, 12477247, 12487247, 12497247, 12507247, 12517247, 12527247, 12537247, 12547247, 12557247]</msg>
<status status="PASS" starttime="20201112 10:15:51.136" endtime="20201112 10:15:51.138"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.131" endtime="20201112 10:15:51.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.145" endtime="20201112 10:15:51.437"></status>
</kw>
<msg timestamp="20201112 10:15:51.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019913042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039940375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.143" endtime="20201112 10:15:51.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019913042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039940375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.441" endtime="20201112 10:15:51.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.449" endtime="20201112 10:15:51.451"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.141" endtime="20201112 10:15:51.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.139" endtime="20201112 10:15:51.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:51.478" level="INFO">${RESULT} = {'time': [0.019913042, 0.039940375, 0.059940708, 0.079942931, 0.099945264, 0.1199475, 0.139949819, 0.159952042, 0.179954389, 0.199956611, 0.219958972, 0.239961236, 0.259963528, 0.279965736, 0.29996808...</msg>
<status status="PASS" starttime="20201112 10:15:51.453" endtime="20201112 10:15:51.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.483" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:51.482" endtime="20201112 10:15:51.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.485" level="INFO">VALUE: 0.019913042</msg>
<status status="PASS" starttime="20201112 10:15:51.484" endtime="20201112 10:15:51.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.479" endtime="20201112 10:15:51.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.490" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:51.489" endtime="20201112 10:15:51.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.493" level="INFO">VALUE: [0.039940375, 0.059940708, 0.079942931, 0.099945264, 0.1199475, 0.139949819, 0.159952042, 0.179954389, 0.199956611, 0.219958972, 0.239961236, 0.259963528, 0.279965736, 0.299968083, 0.319970319, 0.339972653, 0.359974875, 0.379977292, 0.399979458, 0.419981792, 0.439984014, 0.459986361, 0.479988583, 0.499990931, 0.519993167, 0.539995542, 0.559997722, 0.580000083, 0.600002278, 0.620004667, 0.640006875, 0.660009194, 0.680011431, 0.700013764, 0.720016028, 0.740018333, 0.760020556, 0.780022903, 0.800025139, 0.820027486, 0.840029708, 0.860032042, 0.880034264, 0.900036625, 0.920038833, 0.940041181, 0.960043417, 0.98004575, 1.000047972, 1.020050333, 1.040052542, 1.060054875, 1.080057097, 1.100059444, 1.120061681, 1.140064014, 1.160066236, 1.180068583, 1.200070806, 1.220073167, 1.240075375, 1.260077736, 1.280079958, 1.300082306, 1.320084514, 1.340086861, 1.360089097, 1.380091431, 1.400093667, 1.420096, 1.440098222, 1.460100583, 1.480102792, 1.500105125, 1.520107361, 1.540109708, 1.560111931, 1.580114264, 1.600116486, 1.620118847, 1.640121056, 1.660123444, 1.680125667, 1.700128069, 1.720130292, 1.740132667, 1.760134917, 1.780137292, 1.800139528, 1.820141917, 1.840144139, 1.860146514, 1.880148806, 1.900151125, 1.920153375, 1.940155778, 1.960157986, 1.980160361, 2.000162611, 2.020164986] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:51.492" endtime="20201112 10:15:51.494"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.486" endtime="20201112 10:15:51.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.497" endtime="20201112 10:15:51.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:51.500" endtime="20201112 10:15:51.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.499" endtime="20201112 10:15:51.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.495" endtime="20201112 10:15:51.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.964" endtime="20201112 10:15:51.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.886" endtime="20201112 10:15:51.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:37.885" endtime="20201112 10:15:51.522"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:51.525" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.533" endtime="20201112 10:15:55.662"></status>
</kw>
<msg timestamp="20201112 10:15:55.664" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 13837487, 'wakeups': [13847507, 13857506, 13867506, 13877506, 13887506...</msg>
<status status="PASS" starttime="20201112 10:15:51.531" endtime="20201112 10:15:55.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.667" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 13837487, 'wakeups': [13847507, 13857506, 13867506, 13877506, 13887506...</msg>
<status status="PASS" starttime="20201112 10:15:55.665" endtime="20201112 10:15:55.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.668" endtime="20201112 10:15:55.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.529" endtime="20201112 10:15:55.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.527" endtime="20201112 10:15:55.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:55.674" level="INFO">${RESULT} = {'start-time': 13837487, 'timer-count': 3, 'wakeups': [13847507, 13857506, 13867506, 13877506, 13887506, 13897506, 13907506, 13917506, 13927506, 13937506, 13947506, 13957506, 13967506, 13977506, 13987...</msg>
<status status="PASS" starttime="20201112 10:15:55.672" endtime="20201112 10:15:55.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.678" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:55.677" endtime="20201112 10:15:55.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.680" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:55.679" endtime="20201112 10:15:55.681"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.675" endtime="20201112 10:15:55.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.686" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:15:55.685" endtime="20201112 10:15:55.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.688" level="INFO">VALUE: 13837487</msg>
<status status="PASS" starttime="20201112 10:15:55.687" endtime="20201112 10:15:55.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.682" endtime="20201112 10:15:55.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.693" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:55.692" endtime="20201112 10:15:55.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:55.695" level="INFO">VALUE: [13847507, 13857506, 13867506, 13877506, 13887506, 13897506, 13907506, 13917506, 13927506, 13937506, 13947506, 13957506, 13967506, 13977506, 13987506, 13997506, 14007506, 14017506, 14027506, 14037506, 14047506, 14057506, 14067506, 14077506, 14087506, 14097506, 14107506, 14117506, 14127506, 14137506, 14147506, 14157506, 14167506, 14177506, 14187506, 14197506, 14207506, 14217506, 14227506, 14237506, 14247506, 14257506, 14267506, 14277506, 14287506, 14297506, 14307506, 14317506, 14327506, 14337506, 14347506, 14357506, 14367506, 14377506, 14387506, 14397506, 14407506, 14417506, 14427506, 14437506, 14447506, 14457506, 14467506, 14477506, 14487506, 14497506, 14507506, 14517506, 14527506, 14537506, 14547506, 14557506, 14567506, 14577506, 14587506, 14597506, 14607506, 14617506, 14627506, 14637506, 14647506, 14657506, 14667506, 14677506, 14687506, 14697506, 14707506, 14717506, 14727506, 14737506, 14747506, 14757506, 14767506, 14777506, 14787506, 14797506, 14807506, 14817506, 14827506, 14837506]</msg>
<status status="PASS" starttime="20201112 10:15:55.694" endtime="20201112 10:15:55.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.689" endtime="20201112 10:15:55.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:55.703" endtime="20201112 10:15:55.996"></status>
</kw>
<msg timestamp="20201112 10:15:55.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022963292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043004806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:55.701" endtime="20201112 10:15:55.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022963292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043004806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.000" endtime="20201112 10:15:56.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.008" endtime="20201112 10:15:56.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.698" endtime="20201112 10:15:56.010"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:55.697" endtime="20201112 10:15:56.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:56.035" level="INFO">${RESULT} = {'time': [0.022963292, 0.043004806, 0.063005139, 0.083007375, 0.103009736, 0.123011972, 0.143014333, 0.163016569, 0.183018917, 0.203021167, 0.223023528, 0.243025778, 0.263028125, 0.283030389, 0.303032...</msg>
<status status="PASS" starttime="20201112 10:15:56.011" endtime="20201112 10:15:56.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.040" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:15:56.039" endtime="20201112 10:15:56.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.042" level="INFO">VALUE: 0.022963292</msg>
<status status="PASS" starttime="20201112 10:15:56.041" endtime="20201112 10:15:56.042"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.036" endtime="20201112 10:15:56.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.047" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:56.046" endtime="20201112 10:15:56.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.050" level="INFO">VALUE: [0.043004806, 0.063005139, 0.083007375, 0.103009736, 0.123011972, 0.143014333, 0.163016569, 0.183018917, 0.203021167, 0.223023528, 0.243025778, 0.263028125, 0.283030389, 0.30303275, 0.323034972, 0.343037333, 0.363039583, 0.383041944, 0.403044181, 0.423046556, 0.443048806, 0.463051167, 0.483053389, 0.503055764, 0.523058, 0.543060361, 0.563062597, 0.583065042, 0.603067222, 0.623069583, 0.643071819, 0.663074181, 0.683076417, 0.703078792, 0.723081028, 0.743083389, 0.763085625, 0.783088, 0.803090236, 0.823092611, 0.843094847, 0.863097222, 0.883099458, 0.903101819, 0.923104056, 0.943106417, 0.963108653, 0.983111028, 1.003113264, 1.023115653, 1.043117931, 1.063120236, 1.083122472, 1.103124833, 1.123127083, 1.143129444, 1.163131681, 1.183134056, 1.203136292, 1.223138653, 1.243140903, 1.263143264, 1.2831455, 1.303147875, 1.323150139, 1.343152472, 1.363154708, 1.383157069, 1.403159319, 1.423161681, 1.443163917, 1.463166292, 1.483168528, 1.503170889, 1.523173125, 1.5431755, 1.56317775, 1.583180097, 1.603182333, 1.623184708, 1.643186944, 1.663189306, 1.683191611, 1.703193917, 1.723196153, 1.743198528, 1.763200764, 1.783203153, 1.803205375, 1.82320775, 1.843209986, 1.863212333, 1.883214569, 1.903216958, 1.92321925, 1.943221556, 1.963223806, 1.983226153, 2.003228389, 2.023230764] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:56.048" endtime="20201112 10:15:56.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.043" endtime="20201112 10:15:56.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.053" endtime="20201112 10:15:56.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:56.056" endtime="20201112 10:15:56.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.055" endtime="20201112 10:15:56.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.051" endtime="20201112 10:15:56.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.525" endtime="20201112 10:15:56.077"></status>
</kw>
<msg timestamp="20201112 10:15:56.077" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.087" endtime="20201112 10:16:00.190"></status>
</kw>
<msg timestamp="20201112 10:16:00.191" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16114368, 'wakeups': [16124388, 16134387, 16144387, 16154387, 16164387...</msg>
<status status="PASS" starttime="20201112 10:15:56.084" endtime="20201112 10:16:00.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.194" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 16114368, 'wakeups': [16124388, 16134387, 16144387, 16154387, 16164387...</msg>
<status status="PASS" starttime="20201112 10:16:00.192" endtime="20201112 10:16:00.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.196" endtime="20201112 10:16:00.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.082" endtime="20201112 10:16:00.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.079" endtime="20201112 10:16:00.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:00.201" level="INFO">${RESULT} = {'start-time': 16114368, 'timer-count': 3, 'wakeups': [16124388, 16134387, 16144387, 16154387, 16164387, 16174387, 16184387, 16194387, 16204387, 16214387, 16224387, 16234387, 16244387, 16254387, 16264...</msg>
<status status="PASS" starttime="20201112 10:16:00.199" endtime="20201112 10:16:00.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.205" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:00.204" endtime="20201112 10:16:00.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.208" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:00.207" endtime="20201112 10:16:00.208"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.202" endtime="20201112 10:16:00.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.213" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:16:00.212" endtime="20201112 10:16:00.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.215" level="INFO">VALUE: 16114368</msg>
<status status="PASS" starttime="20201112 10:16:00.214" endtime="20201112 10:16:00.215"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.209" endtime="20201112 10:16:00.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.220" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:00.219" endtime="20201112 10:16:00.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.222" level="INFO">VALUE: [16124388, 16134387, 16144387, 16154387, 16164387, 16174387, 16184387, 16194387, 16204387, 16214387, 16224387, 16234387, 16244387, 16254387, 16264387, 16274387, 16284387, 16294387, 16304387, 16314387, 16324387, 16334387, 16344387, 16354387, 16364387, 16374387, 16384387, 16394387, 16404387, 16414387, 16424387, 16434387, 16444387, 16454387, 16464387, 16474387, 16484387, 16494387, 16504387, 16514387, 16524387, 16534387, 16544387, 16554387, 16564387, 16574387, 16584387, 16594387, 16604387, 16614387, 16624387, 16634387, 16644387, 16654387, 16664387, 16674387, 16684387, 16694387, 16704387, 16714387, 16724387, 16734387, 16744387, 16754387, 16764387, 16774387, 16784387, 16794387, 16804387, 16814387, 16824387, 16834387, 16844387, 16854387, 16864387, 16874387, 16884387, 16894387, 16904387, 16914387, 16924387, 16934387, 16944387, 16954387, 16964387, 16974387, 16984387, 16994387, 17004387, 17014387, 17024387, 17034387, 17044387, 17054387, 17064387, 17074387, 17084387, 17094387, 17104387, 17114387]</msg>
<status status="PASS" starttime="20201112 10:16:00.221" endtime="20201112 10:16:00.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.216" endtime="20201112 10:16:00.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.230" endtime="20201112 10:16:00.522"></status>
</kw>
<msg timestamp="20201112 10:16:00.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020766681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040808847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:00.228" endtime="20201112 10:16:00.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020766681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040808847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:00.526" endtime="20201112 10:16:00.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.534" endtime="20201112 10:16:00.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.226" endtime="20201112 10:16:00.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.224" endtime="20201112 10:16:00.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:00.563" level="INFO">${RESULT} = {'time': [0.020766681, 0.040808847, 0.060809167, 0.080811389, 0.10081375, 0.120815986, 0.140818361, 0.160820597, 0.180822944, 0.200825194, 0.220827542, 0.240829792, 0.260832153, 0.280834375, 0.3008367...</msg>
<status status="PASS" starttime="20201112 10:16:00.538" endtime="20201112 10:16:00.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.568" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:16:00.567" endtime="20201112 10:16:00.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.570" level="INFO">VALUE: 0.020766681</msg>
<status status="PASS" starttime="20201112 10:16:00.569" endtime="20201112 10:16:00.571"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.564" endtime="20201112 10:16:00.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.576" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:00.575" endtime="20201112 10:16:00.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:00.578" level="INFO">VALUE: [0.040808847, 0.060809167, 0.080811389, 0.10081375, 0.120815986, 0.140818361, 0.160820597, 0.180822944, 0.200825194, 0.220827542, 0.240829792, 0.260832153, 0.280834375, 0.300836778, 0.320838986, 0.340841333, 0.360843569, 0.380845958, 0.400848181, 0.420850528, 0.440852778, 0.460855139, 0.480857361, 0.500859736, 0.520861972, 0.540864333, 0.560866556, 0.580868917, 0.600871153, 0.620873514, 0.64087575, 0.660878111, 0.680880347, 0.700882722, 0.720884972, 0.740887319, 0.760889542, 0.780891944, 0.800894139, 0.8208965, 0.840898736, 0.860901139, 0.880903361, 0.900905722, 0.920907944, 0.940910319, 0.960912542, 0.980914917, 1.000917139, 1.0209195, 1.040921736, 1.060924111, 1.080926333, 1.100928694, 1.120930944, 1.140933292, 1.160935528, 1.180937931, 1.200940125, 1.220942514, 1.240944736, 1.260947097, 1.280949333, 1.300951694, 1.320953931, 1.340956292, 1.360958528, 1.380960903, 1.400963194, 1.420965514, 1.440967722, 1.460970097, 1.480972319, 1.500974694, 1.520976931, 1.540979278, 1.560981528, 1.580983875, 1.600986111, 1.620988486, 1.640990722, 1.660993097, 1.680995389, 1.700997681, 1.720999917, 1.741002278, 1.761004514, 1.781006875, 1.801009194, 1.821011486, 1.841013722, 1.861016069, 1.881018306, 1.901020667, 1.921022903, 1.941025278, 1.961027528, 1.981029875, 2.001032125, 2.021034472] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:00.577" endtime="20201112 10:16:00.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.572" endtime="20201112 10:16:00.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.581" endtime="20201112 10:16:00.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:00.585" endtime="20201112 10:16:00.604"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.583" endtime="20201112 10:16:00.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.580" endtime="20201112 10:16:00.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.078" endtime="20201112 10:16:00.606"></status>
</kw>
<msg timestamp="20201112 10:16:00.606" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:00.614" endtime="20201112 10:16:04.718"></status>
</kw>
<msg timestamp="20201112 10:16:04.719" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18378184, 'wakeups': [18388203, 18398203, 18408203, 18418203, 18428203...</msg>
<status status="PASS" starttime="20201112 10:16:00.613" endtime="20201112 10:16:04.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.722" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18378184, 'wakeups': [18388203, 18398203, 18408203, 18418203, 18428203...</msg>
<status status="PASS" starttime="20201112 10:16:04.720" endtime="20201112 10:16:04.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.723" endtime="20201112 10:16:04.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.610" endtime="20201112 10:16:04.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.608" endtime="20201112 10:16:04.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:04.728" level="INFO">${RESULT} = {'start-time': 18378184, 'timer-count': 3, 'wakeups': [18388203, 18398203, 18408203, 18418203, 18428203, 18438203, 18448203, 18458203, 18468203, 18478203, 18488203, 18498203, 18508203, 18518203, 18528...</msg>
<status status="PASS" starttime="20201112 10:16:04.726" endtime="20201112 10:16:04.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.733" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:04.732" endtime="20201112 10:16:04.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.735" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:04.734" endtime="20201112 10:16:04.735"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.729" endtime="20201112 10:16:04.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.742" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:16:04.740" endtime="20201112 10:16:04.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.744" level="INFO">VALUE: 18378184</msg>
<status status="PASS" starttime="20201112 10:16:04.743" endtime="20201112 10:16:04.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.737" endtime="20201112 10:16:04.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.749" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:04.748" endtime="20201112 10:16:04.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.751" level="INFO">VALUE: [18388203, 18398203, 18408203, 18418203, 18428203, 18438203, 18448203, 18458203, 18468203, 18478203, 18488203, 18498203, 18508203, 18518203, 18528203, 18538203, 18548203, 18558203, 18568203, 18578203, 18588203, 18598203, 18608203, 18618203, 18628203, 18638203, 18648203, 18658203, 18668203, 18678203, 18688203, 18698203, 18708203, 18718203, 18728203, 18738203, 18748203, 18758203, 18768203, 18778203, 18788203, 18798203, 18808203, 18818203, 18828203, 18838203, 18848203, 18858203, 18868203, 18878203, 18888203, 18898203, 18908203, 18918203, 18928203, 18938203, 18948203, 18958203, 18968203, 18978203, 18988203, 18998203, 19008203, 19018203, 19028203, 19038203, 19048203, 19058203, 19068203, 19078203, 19088203, 19098203, 19108203, 19118203, 19128203, 19138203, 19148203, 19158203, 19168203, 19178203, 19188203, 19198203, 19208203, 19218203, 19228203, 19238203, 19248203, 19258203, 19268203, 19278203, 19288203, 19298203, 19308203, 19318203, 19328203, 19338203, 19348203, 19358203, 19368203, 19378203]</msg>
<status status="PASS" starttime="20201112 10:16:04.750" endtime="20201112 10:16:04.752"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.745" endtime="20201112 10:16:04.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.759" endtime="20201112 10:16:05.052"></status>
</kw>
<msg timestamp="20201112 10:16:05.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019904333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039945181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:04.757" endtime="20201112 10:16:05.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019904333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039945181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:05.056" endtime="20201112 10:16:05.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.064" endtime="20201112 10:16:05.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.755" endtime="20201112 10:16:05.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.753" endtime="20201112 10:16:05.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:05.091" level="INFO">${RESULT} = {'time': [0.019904333, 0.039945181, 0.0599475, 0.079949764, 0.099952083, 0.119954319, 0.139956667, 0.159958958, 0.179961278, 0.1999635, 0.219965847, 0.239968097, 0.259970431, 0.27997275, 0.299975028, ...</msg>
<status status="PASS" starttime="20201112 10:16:05.067" endtime="20201112 10:16:05.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.096" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:16:05.095" endtime="20201112 10:16:05.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.098" level="INFO">VALUE: 0.019904333</msg>
<status status="PASS" starttime="20201112 10:16:05.097" endtime="20201112 10:16:05.098"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.092" endtime="20201112 10:16:05.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.104" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:05.102" endtime="20201112 10:16:05.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:05.106" level="INFO">VALUE: [0.039945181, 0.0599475, 0.079949764, 0.099952083, 0.119954319, 0.139956667, 0.159958958, 0.179961278, 0.1999635, 0.219965847, 0.239968097, 0.259970431, 0.27997275, 0.299975028, 0.319977306, 0.339979625, 0.359981875, 0.379984222, 0.399986458, 0.419988806, 0.439991028, 0.459993389, 0.479995625, 0.499998028, 0.520000222, 0.540002569, 0.560004806, 0.580007167, 0.600009389, 0.620011833, 0.640014, 0.660016347, 0.680018569, 0.700020944, 0.720023167, 0.740025528, 0.760027764, 0.780030125, 0.800032361, 0.820034708, 0.840036944, 0.860039306, 0.880041528, 0.900043903, 0.920046125, 0.940048486, 0.960050708, 0.980053125, 1.000055306, 1.020057667, 1.040059931, 1.060062292, 1.080064486, 1.100066847, 1.120069111, 1.1400715, 1.160073667, 1.180076028, 1.20007825, 1.220080625, 1.240082847, 1.260085208, 1.280087431, 1.300089819, 1.320092028, 1.340094389, 1.360096611, 1.380098972, 1.400101208, 1.420103569, 1.440105861, 1.460108153, 1.480110403, 1.50011275, 1.520114986, 1.540117347, 1.560119569, 1.580121931, 1.600124167, 1.620126528, 1.64012875, 1.660131125, 1.680133347, 1.700135708, 1.720137958, 1.740140306, 1.760142528, 1.780144889, 1.800147125, 1.820149486, 1.84015175, 1.860154083, 1.880156306, 1.900158667, 1.920160903, 1.94016325, 1.960165486, 1.980167861, 2.000170083, 2.020172444] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:05.105" endtime="20201112 10:16:05.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.099" endtime="20201112 10:16:05.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.110" endtime="20201112 10:16:05.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:05.114" endtime="20201112 10:16:05.133"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.112" endtime="20201112 10:16:05.134"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.108" endtime="20201112 10:16:05.134"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:00.607" endtime="20201112 10:16:05.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.523" endtime="20201112 10:16:05.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.522" endtime="20201112 10:16:05.135"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:05.138" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:05.146" endtime="20201112 10:16:09.277"></status>
</kw>
<msg timestamp="20201112 10:16:09.279" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 20643876, 'wakeups': [20653903, 20663903, 20673903, 20683903, 20693903...</msg>
<status status="PASS" starttime="20201112 10:16:05.144" endtime="20201112 10:16:09.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.285" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 20643876, 'wakeups': [20653903, 20663903, 20673903, 20683903, 20693903...</msg>
<status status="PASS" starttime="20201112 10:16:09.281" endtime="20201112 10:16:09.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.288" endtime="20201112 10:16:09.291"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.142" endtime="20201112 10:16:09.292"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.140" endtime="20201112 10:16:09.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:09.299" level="INFO">${RESULT} = {'start-time': 20643876, 'timer-count': 4, 'wakeups': [20653903, 20663903, 20673903, 20683903, 20693903, 20703903, 20713903, 20723903, 20733903, 20743903, 20753903, 20763903, 20773903, 20783903, 20793...</msg>
<status status="PASS" starttime="20201112 10:16:09.295" endtime="20201112 10:16:09.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.307" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:09.306" endtime="20201112 10:16:09.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.309" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:09.308" endtime="20201112 10:16:09.309"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.301" endtime="20201112 10:16:09.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.314" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:09.313" endtime="20201112 10:16:09.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.316" level="INFO">VALUE: 20643876</msg>
<status status="PASS" starttime="20201112 10:16:09.315" endtime="20201112 10:16:09.317"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.311" endtime="20201112 10:16:09.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.321" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:09.320" endtime="20201112 10:16:09.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.324" level="INFO">VALUE: [20653903, 20663903, 20673903, 20683903, 20693903, 20703903, 20713903, 20723903, 20733903, 20743903, 20753903, 20763903, 20773903, 20783903, 20793903, 20803903, 20813903, 20823903, 20833903, 20843903, 20853903, 20863903, 20873903, 20883903, 20893903, 20903903, 20913903, 20923903, 20933903, 20943903, 20953903, 20963903, 20973903, 20983903, 20993903, 21003903, 21013903, 21023903, 21033903, 21043903, 21053903, 21063903, 21073903, 21083903, 21093903, 21103903, 21113903, 21123903, 21133903, 21143903, 21153903, 21163903, 21173903, 21183903, 21193903, 21203903, 21213903, 21223903, 21233903, 21243903, 21253903, 21263903, 21273903, 21283903, 21293903, 21303903, 21313903, 21323903, 21333903, 21343903, 21353903, 21363903, 21373903, 21383903, 21393903, 21403903, 21413903, 21423903, 21433903, 21443903, 21453903, 21463903, 21473903, 21483903, 21493903, 21503903, 21513903, 21523903, 21533903, 21543903, 21553903, 21563903, 21573903, 21583903, 21593903, 21603903, 21613903, 21623903, 21633903, 21643903]</msg>
<status status="PASS" starttime="20201112 10:16:09.323" endtime="20201112 10:16:09.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.318" endtime="20201112 10:16:09.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.333" endtime="20201112 10:16:09.626"></status>
</kw>
<msg timestamp="20201112 10:16:09.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022580833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042637778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:09.330" endtime="20201112 10:16:09.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022580833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042637778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:09.630" endtime="20201112 10:16:09.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.638" endtime="20201112 10:16:09.639"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.327" endtime="20201112 10:16:09.640"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.326" endtime="20201112 10:16:09.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:09.666" level="INFO">${RESULT} = {'time': [0.022580833, 0.042637778, 0.062639972, 0.082642181, 0.102644542, 0.122646764, 0.142649111, 0.162651347, 0.182653708, 0.202655986, 0.222658278, 0.2426605, 0.262662861, 0.282665083, 0.30266744...</msg>
<status status="PASS" starttime="20201112 10:16:09.641" endtime="20201112 10:16:09.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.671" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:09.670" endtime="20201112 10:16:09.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.673" level="INFO">VALUE: 0.022580833</msg>
<status status="PASS" starttime="20201112 10:16:09.672" endtime="20201112 10:16:09.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.667" endtime="20201112 10:16:09.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.678" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:09.677" endtime="20201112 10:16:09.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.681" level="INFO">VALUE: [0.042637778, 0.062639972, 0.082642181, 0.102644542, 0.122646764, 0.142649111, 0.162651347, 0.182653708, 0.202655986, 0.222658278, 0.2426605, 0.262662861, 0.282665083, 0.302667444, 0.322669681, 0.342672028, 0.36267425, 0.382676611, 0.402678833, 0.422681194, 0.442683431, 0.462685792, 0.482688028, 0.502690375, 0.522692583, 0.542694958, 0.562697167, 0.582699528, 0.60270175, 0.622704111, 0.642706333, 0.662708708, 0.682710931, 0.702713292, 0.7227155, 0.742717861, 0.762720083, 0.782722444, 0.802724681, 0.822727028, 0.84272925, 0.862731639, 0.882733847, 0.902736208, 0.922738444, 0.942740778, 0.962743014, 0.982745375, 1.002747597, 1.022749958, 1.042752194, 1.062754542, 1.082756764, 1.102759125, 1.122761347, 1.142763694, 1.162765931, 1.182768292, 1.202770514, 1.222772861, 1.242775083, 1.262777472, 1.282779681, 1.302782028, 1.322784264, 1.342786625, 1.362788847, 1.382791194, 1.402793444, 1.422795792, 1.442798056, 1.462800361, 1.482802625, 1.502804958, 1.522807181, 1.542809528, 1.562811764, 1.582814167, 1.602816403, 1.622818708, 1.642820931, 1.662823306, 1.682825514, 1.702827889, 1.722830097, 1.742832458, 1.762834694, 1.782837111, 1.802839264, 1.822841639, 1.842843847, 1.862846208, 1.882848472, 1.902850806, 1.922853056, 1.942855375, 1.962857611, 1.982859958, 2.002862194, 2.022864583] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:09.680" endtime="20201112 10:16:09.681"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.674" endtime="20201112 10:16:09.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.684" endtime="20201112 10:16:09.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:09.687" endtime="20201112 10:16:09.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.686" endtime="20201112 10:16:09.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.682" endtime="20201112 10:16:09.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.138" endtime="20201112 10:16:09.708"></status>
</kw>
<msg timestamp="20201112 10:16:09.708" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.718" endtime="20201112 10:16:13.849"></status>
</kw>
<msg timestamp="20201112 10:16:13.850" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 22930004, 'wakeups': [22940031, 22950031, 22960031, 22970031, 22980031...</msg>
<status status="PASS" starttime="20201112 10:16:09.715" endtime="20201112 10:16:13.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.857" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 22930004, 'wakeups': [22940031, 22950031, 22960031, 22970031, 22980031...</msg>
<status status="PASS" starttime="20201112 10:16:13.853" endtime="20201112 10:16:13.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.859" endtime="20201112 10:16:13.863"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.713" endtime="20201112 10:16:13.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.711" endtime="20201112 10:16:13.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:13.868" level="INFO">${RESULT} = {'start-time': 22930004, 'timer-count': 4, 'wakeups': [22940031, 22950031, 22960031, 22970031, 22980031, 22990031, 23000031, 23010031, 23020031, 23030031, 23040031, 23050031, 23060031, 23070031, 23080...</msg>
<status status="PASS" starttime="20201112 10:16:13.865" endtime="20201112 10:16:13.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.872" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:13.871" endtime="20201112 10:16:13.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.874" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:13.873" endtime="20201112 10:16:13.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.868" endtime="20201112 10:16:13.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.879" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:13.878" endtime="20201112 10:16:13.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.882" level="INFO">VALUE: 22930004</msg>
<status status="PASS" starttime="20201112 10:16:13.881" endtime="20201112 10:16:13.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.876" endtime="20201112 10:16:13.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.887" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:13.886" endtime="20201112 10:16:13.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:13.889" level="INFO">VALUE: [22940031, 22950031, 22960031, 22970031, 22980031, 22990031, 23000031, 23010031, 23020031, 23030031, 23040031, 23050031, 23060031, 23070031, 23080031, 23090031, 23100031, 23110031, 23120031, 23130031, 23140031, 23150031, 23160031, 23170031, 23180031, 23190031, 23200031, 23210031, 23220031, 23230031, 23240031, 23250031, 23260031, 23270031, 23280031, 23290031, 23300031, 23310031, 23320031, 23330031, 23340031, 23350031, 23360031, 23370031, 23380031, 23390031, 23400031, 23410031, 23420031, 23430031, 23440031, 23450031, 23460031, 23470031, 23480031, 23490031, 23500031, 23510031, 23520031, 23530031, 23540031, 23550031, 23560031, 23570031, 23580031, 23590031, 23600031, 23610031, 23620031, 23630031, 23640031, 23650031, 23660031, 23670031, 23680031, 23690031, 23700031, 23710031, 23720031, 23730031, 23740031, 23750031, 23760031, 23770031, 23780031, 23790031, 23800031, 23810031, 23820031, 23830031, 23840031, 23850031, 23860031, 23870031, 23880031, 23890031, 23900031, 23910031, 23920031, 23930031]</msg>
<status status="PASS" starttime="20201112 10:16:13.888" endtime="20201112 10:16:13.889"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.883" endtime="20201112 10:16:13.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:13.897" endtime="20201112 10:16:14.188"></status>
</kw>
<msg timestamp="20201112 10:16:14.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021268056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041324931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:13.895" endtime="20201112 10:16:14.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021268056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041324931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:14.192" endtime="20201112 10:16:14.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.199" endtime="20201112 10:16:14.201"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.892" endtime="20201112 10:16:14.202"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:13.891" endtime="20201112 10:16:14.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:14.228" level="INFO">${RESULT} = {'time': [0.021268056, 0.041324931, 0.061327167, 0.081329403, 0.10133175, 0.121333972, 0.141336306, 0.161338528, 0.181340875, 0.201343097, 0.221345444, 0.241347667, 0.261350042, 0.28135225, 0.30135459...</msg>
<status status="PASS" starttime="20201112 10:16:14.203" endtime="20201112 10:16:14.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.233" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:14.232" endtime="20201112 10:16:14.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.235" level="INFO">VALUE: 0.021268056</msg>
<status status="PASS" starttime="20201112 10:16:14.234" endtime="20201112 10:16:14.235"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.229" endtime="20201112 10:16:14.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.241" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:14.240" endtime="20201112 10:16:14.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:14.243" level="INFO">VALUE: [0.041324931, 0.061327167, 0.081329403, 0.10133175, 0.121333972, 0.141336306, 0.161338528, 0.181340875, 0.201343097, 0.221345444, 0.241347667, 0.261350042, 0.28135225, 0.301354597, 0.321356819, 0.341359208, 0.361361417, 0.381363764, 0.401365972, 0.421368333, 0.441370556, 0.461372903, 0.481375125, 0.501377472, 0.521379722, 0.541382069, 0.561384278, 0.581386625, 0.601388875, 0.621391208, 0.641393444, 0.661395778, 0.681398028, 0.701400375, 0.721402583, 0.741404931, 0.761407153, 0.781409514, 0.80141175, 0.821414083, 0.841416319, 0.861418667, 0.881420903, 0.901423236, 0.921425472, 0.941427819, 0.961430083, 0.981432389, 1.001434625, 1.021436972, 1.041439222, 1.061441542, 1.081443778, 1.101446125, 1.121448361, 1.141450694, 1.161452931, 1.181455278, 1.2014575, 1.221459917, 1.241462097, 1.261464444, 1.281466681, 1.301469014, 1.32147125, 1.341473583, 1.361475819, 1.381478167, 1.401480431, 1.421482736, 1.441484958, 1.461487319, 1.481489542, 1.501491889, 1.521494111, 1.541496486, 1.561498694, 1.581501042, 1.601503278, 1.621505625, 1.641507847, 1.661510194, 1.681512431, 1.701514778, 1.721517028, 1.741519361, 1.761521653, 1.781524, 1.801526153, 1.821528583, 1.841530736, 1.861533111, 1.881535306, 1.901537681, 1.921539889, 1.941542236, 1.961544542, 1.981546819, 2.001549042, 2.021551403] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:14.242" endtime="20201112 10:16:14.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.236" endtime="20201112 10:16:14.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.246" endtime="20201112 10:16:14.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:14.250" endtime="20201112 10:16:14.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.248" endtime="20201112 10:16:14.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.244" endtime="20201112 10:16:14.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.709" endtime="20201112 10:16:14.270"></status>
</kw>
<msg timestamp="20201112 10:16:14.271" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:14.279" endtime="20201112 10:16:18.384"></status>
</kw>
<msg timestamp="20201112 10:16:18.384" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25210381, 'wakeups': [25220409, 25230408, 25240408, 25250408, 25260408...</msg>
<status status="PASS" starttime="20201112 10:16:14.277" endtime="20201112 10:16:18.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.387" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25210381, 'wakeups': [25220409, 25230408, 25240408, 25250408, 25260408...</msg>
<status status="PASS" starttime="20201112 10:16:18.385" endtime="20201112 10:16:18.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.388" endtime="20201112 10:16:18.390"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.275" endtime="20201112 10:16:18.390"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.273" endtime="20201112 10:16:18.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:18.394" level="INFO">${RESULT} = {'start-time': 25210381, 'timer-count': 4, 'wakeups': [25220409, 25230408, 25240408, 25250408, 25260408, 25270408, 25280408, 25290408, 25300408, 25310408, 25320408, 25330408, 25340408, 25350408, 25360...</msg>
<status status="PASS" starttime="20201112 10:16:18.392" endtime="20201112 10:16:18.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.399" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:18.398" endtime="20201112 10:16:18.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.401" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:18.400" endtime="20201112 10:16:18.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.395" endtime="20201112 10:16:18.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.406" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:18.405" endtime="20201112 10:16:18.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.409" level="INFO">VALUE: 25210381</msg>
<status status="PASS" starttime="20201112 10:16:18.407" endtime="20201112 10:16:18.410"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.402" endtime="20201112 10:16:18.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.414" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:18.413" endtime="20201112 10:16:18.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.417" level="INFO">VALUE: [25220409, 25230408, 25240408, 25250408, 25260408, 25270408, 25280408, 25290408, 25300408, 25310408, 25320408, 25330408, 25340408, 25350408, 25360408, 25370408, 25380408, 25390408, 25400408, 25410408, 25420408, 25430408, 25440408, 25450408, 25460408, 25470408, 25480408, 25490408, 25500408, 25510408, 25520408, 25530408, 25540408, 25550408, 25560408, 25570408, 25580408, 25590408, 25600408, 25610408, 25620408, 25630408, 25640408, 25650408, 25660408, 25670408, 25680408, 25690408, 25700408, 25710408, 25720408, 25730408, 25740408, 25750408, 25760408, 25770408, 25780408, 25790408, 25800408, 25810408, 25820408, 25830408, 25840408, 25850408, 25860408, 25870408, 25880408, 25890408, 25900408, 25910408, 25920408, 25930408, 25940408, 25950408, 25960408, 25970408, 25980408, 25990408, 26000408, 26010408, 26020408, 26030408, 26040408, 26050408, 26060408, 26070408, 26080408, 26090408, 26100408, 26110408, 26120408, 26130408, 26140408, 26150408, 26160408, 26170408, 26180408, 26190408, 26200408, 26210408]</msg>
<status status="PASS" starttime="20201112 10:16:18.415" endtime="20201112 10:16:18.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.411" endtime="20201112 10:16:18.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.424" endtime="20201112 10:16:18.716"></status>
</kw>
<msg timestamp="20201112 10:16:18.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019989569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040047097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:18.423" endtime="20201112 10:16:18.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019989569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040047097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:18.720" endtime="20201112 10:16:18.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.728" endtime="20201112 10:16:18.730"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.420" endtime="20201112 10:16:18.730"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.418" endtime="20201112 10:16:18.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:18.756" level="INFO">${RESULT} = {'time': [0.019989569, 0.040047097, 0.060047347, 0.080049556, 0.100051903, 0.120054139, 0.140056514, 0.160058708, 0.180061042, 0.200063264, 0.220065611, 0.240067833, 0.260070194, 0.280072403, 0.300074...</msg>
<status status="PASS" starttime="20201112 10:16:18.731" endtime="20201112 10:16:18.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.761" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:16:18.760" endtime="20201112 10:16:18.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.763" level="INFO">VALUE: 0.019989569</msg>
<status status="PASS" starttime="20201112 10:16:18.762" endtime="20201112 10:16:18.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.757" endtime="20201112 10:16:18.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.768" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:18.767" endtime="20201112 10:16:18.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:18.772" level="INFO">VALUE: [0.040047097, 0.060047347, 0.080049556, 0.100051903, 0.120054139, 0.140056514, 0.160058708, 0.180061042, 0.200063264, 0.220065611, 0.240067833, 0.260070194, 0.280072403, 0.30007475, 0.320076986, 0.340079319, 0.360081611, 0.380083944, 0.400086139, 0.420088458, 0.440090694, 0.460093028, 0.48009525, 0.500097597, 0.520099819, 0.540102167, 0.560104403, 0.58010675, 0.600109042, 0.620111319, 0.640113542, 0.660115889, 0.680118111, 0.700120528, 0.720122681, 0.740125028, 0.76012725, 0.780129611, 0.800131819, 0.820134167, 0.840136389, 0.86013875, 0.880140958, 0.900143306, 0.920145528, 0.940147875, 0.960150111, 0.980152444, 1.000154667, 1.020157014, 1.040159236, 1.060161611, 1.080163806, 1.100166181, 1.120168389, 1.140170736, 1.160172972, 1.180175319, 1.200177542, 1.220179889, 1.240182111, 1.260184444, 1.280186681, 1.300189014, 1.320191236, 1.340193583, 1.360195806, 1.380198153, 1.400200375, 1.420202736, 1.440204944, 1.460207292, 1.480209514, 1.500211889, 1.520214097, 1.540216444, 1.560218667, 1.580221028, 1.600223306, 1.620225583, 1.640227806, 1.660230167, 1.680232375, 1.700234736, 1.720236944, 1.740239292, 1.760241528, 1.780243875, 1.800246097, 1.820248431, 1.840250667, 1.860253014, 1.88025525, 1.900257583, 1.920259806, 1.940262153, 1.960264389, 1.980266722, 2.000268944, 2.020271306] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:18.770" endtime="20201112 10:16:18.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.764" endtime="20201112 10:16:18.773"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.775" endtime="20201112 10:16:18.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:18.779" endtime="20201112 10:16:18.798"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.777" endtime="20201112 10:16:18.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.773" endtime="20201112 10:16:18.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:14.271" endtime="20201112 10:16:18.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.136" endtime="20201112 10:16:18.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:05.135" endtime="20201112 10:16:18.800"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:18.803" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:18.811" endtime="20201112 10:16:22.914"></status>
</kw>
<msg timestamp="20201112 10:16:22.915" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 27476325, 'wakeups': [27486361, 27496360, 27506360, 27516360, 27526360...</msg>
<status status="PASS" starttime="20201112 10:16:18.809" endtime="20201112 10:16:22.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.918" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 27476325, 'wakeups': [27486361, 27496360, 27506360, 27516360, 27526360...</msg>
<status status="PASS" starttime="20201112 10:16:22.916" endtime="20201112 10:16:22.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.919" endtime="20201112 10:16:22.921"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.807" endtime="20201112 10:16:22.921"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.805" endtime="20201112 10:16:22.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:22.925" level="INFO">${RESULT} = {'start-time': 27476325, 'timer-count': 5, 'wakeups': [27486361, 27496360, 27506360, 27516360, 27526360, 27536360, 27546360, 27556360, 27566360, 27576360, 27586360, 27596360, 27606360, 27616360, 27626...</msg>
<status status="PASS" starttime="20201112 10:16:22.923" endtime="20201112 10:16:22.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.929" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:22.928" endtime="20201112 10:16:22.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.931" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:22.930" endtime="20201112 10:16:22.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.925" endtime="20201112 10:16:22.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.936" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:22.935" endtime="20201112 10:16:22.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.938" level="INFO">VALUE: 27476325</msg>
<status status="PASS" starttime="20201112 10:16:22.937" endtime="20201112 10:16:22.939"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.933" endtime="20201112 10:16:22.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.944" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:22.943" endtime="20201112 10:16:22.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:22.946" level="INFO">VALUE: [27486361, 27496360, 27506360, 27516360, 27526360, 27536360, 27546360, 27556360, 27566360, 27576360, 27586360, 27596360, 27606360, 27616360, 27626360, 27636360, 27646360, 27656360, 27666360, 27676360, 27686360, 27696360, 27706360, 27716360, 27726360, 27736360, 27746360, 27756360, 27766360, 27776360, 27786360, 27796360, 27806360, 27816360, 27826360, 27836360, 27846360, 27856360, 27866360, 27876360, 27886360, 27896360, 27906360, 27916360, 27926360, 27936360, 27946360, 27956360, 27966360, 27976360, 27986360, 27996360, 28006360, 28016360, 28026360, 28036360, 28046360, 28056360, 28066360, 28076360, 28086360, 28096360, 28106360, 28116360, 28126360, 28136360, 28146360, 28156360, 28166360, 28176360, 28186360, 28196360, 28206360, 28216360, 28226360, 28236360, 28246360, 28256360, 28266360, 28276360, 28286360, 28296360, 28306360, 28316360, 28326360, 28336360, 28346360, 28356360, 28366360, 28376360, 28386360, 28396360, 28406360, 28416360, 28426360, 28436360, 28446360, 28456360, 28466360, 28476360]</msg>
<status status="PASS" starttime="20201112 10:16:22.945" endtime="20201112 10:16:22.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.940" endtime="20201112 10:16:22.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:22.955" endtime="20201112 10:16:23.248"></status>
</kw>
<msg timestamp="20201112 10:16:23.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022769792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042844306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:22.952" endtime="20201112 10:16:23.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:23.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022769792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042844306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:23.252" endtime="20201112 10:16:23.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:23.259" endtime="20201112 10:16:23.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.950" endtime="20201112 10:16:23.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:22.948" endtime="20201112 10:16:23.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:23.287" level="INFO">${RESULT} = {'time': [0.022769792, 0.042844306, 0.062846389, 0.082848597, 0.102850931, 0.122853153, 0.1428555, 0.162857708, 0.182860069, 0.202862278, 0.222864611, 0.242866833, 0.262869194, 0.282871417, 0.30287375...</msg>
<status status="PASS" starttime="20201112 10:16:23.263" endtime="20201112 10:16:23.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:23.292" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:23.291" endtime="20201112 10:16:23.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:23.294" level="INFO">VALUE: 0.022769792</msg>
<status status="PASS" starttime="20201112 10:16:23.293" endtime="20201112 10:16:23.294"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.288" endtime="20201112 10:16:23.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:23.299" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:23.298" endtime="20201112 10:16:23.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:23.302" level="INFO">VALUE: [0.042844306, 0.062846389, 0.082848597, 0.102850931, 0.122853153, 0.1428555, 0.162857708, 0.182860069, 0.202862278, 0.222864611, 0.242866833, 0.262869194, 0.282871417, 0.30287375, 0.322875958, 0.342878306, 0.362880542, 0.382882875, 0.402885097, 0.4228875, 0.442889639, 0.462892, 0.482894222, 0.502896556, 0.522898778, 0.542901111, 0.562903333, 0.582905694, 0.602907917, 0.622910236, 0.642912458, 0.662914847, 0.682917069, 0.702919375, 0.722921583, 0.742923944, 0.762926167, 0.782928486, 0.802930722, 0.822933069, 0.842935292, 0.862937625, 0.882939847, 0.902942194, 0.922944403, 0.94294675, 0.962948958, 0.982951319, 1.002953528, 1.022955889, 1.042958208, 1.062960514, 1.082962778, 1.102965194, 1.122967361, 1.142969736, 1.162971986, 1.182974347, 1.202976611, 1.222978958, 1.242981264, 1.262983583, 1.282985819, 1.302988278, 1.322990444, 1.342992806, 1.362995056, 1.382997417, 1.402999653, 1.423002042, 1.443004264, 1.463006667, 1.483008931, 1.50301125, 1.523013542, 1.543015861, 1.563018111, 1.583020458, 1.603022694, 1.623025097, 1.643027347, 1.663029694, 1.683031917, 1.703034292, 1.723036528, 1.743038903, 1.763041139, 1.7830435, 1.803045764, 1.823048111, 1.843050375, 1.863052736, 1.883054972, 1.903057333, 1.923059583, 1.943061944, 1.963064194, 1.983066556, 2.003068792, 2.023071167] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:23.301" endtime="20201112 10:16:23.302"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.295" endtime="20201112 10:16:23.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:23.305" endtime="20201112 10:16:23.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:23.309" endtime="20201112 10:16:23.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.307" endtime="20201112 10:16:23.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.303" endtime="20201112 10:16:23.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.803" endtime="20201112 10:16:23.330"></status>
</kw>
<msg timestamp="20201112 10:16:23.330" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:23.339" endtime="20201112 10:16:27.454"></status>
</kw>
<msg timestamp="20201112 10:16:27.454" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 29740392, 'wakeups': [29750428, 29760427, 29770427, 29780427, 29790427...</msg>
<status status="PASS" starttime="20201112 10:16:23.338" endtime="20201112 10:16:27.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.457" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 29740392, 'wakeups': [29750428, 29760427, 29770427, 29780427, 29790427...</msg>
<status status="PASS" starttime="20201112 10:16:27.455" endtime="20201112 10:16:27.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.458" endtime="20201112 10:16:27.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.334" endtime="20201112 10:16:27.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.332" endtime="20201112 10:16:27.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:27.464" level="INFO">${RESULT} = {'start-time': 29740392, 'timer-count': 5, 'wakeups': [29750428, 29760427, 29770427, 29780427, 29790427, 29800427, 29810427, 29820427, 29830427, 29840427, 29850427, 29860427, 29870427, 29880427, 29890...</msg>
<status status="PASS" starttime="20201112 10:16:27.462" endtime="20201112 10:16:27.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.468" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:27.467" endtime="20201112 10:16:27.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.470" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:27.469" endtime="20201112 10:16:27.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.465" endtime="20201112 10:16:27.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.475" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:27.474" endtime="20201112 10:16:27.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.477" level="INFO">VALUE: 29740392</msg>
<status status="PASS" starttime="20201112 10:16:27.476" endtime="20201112 10:16:27.478"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.472" endtime="20201112 10:16:27.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.483" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:27.482" endtime="20201112 10:16:27.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.485" level="INFO">VALUE: [29750428, 29760427, 29770427, 29780427, 29790427, 29800427, 29810427, 29820427, 29830427, 29840427, 29850427, 29860427, 29870427, 29880427, 29890427, 29900427, 29910427, 29920427, 29930427, 29940427, 29950427, 29960427, 29970427, 29980427, 29990427, 30000427, 30010427, 30020427, 30030427, 30040427, 30050427, 30060427, 30070427, 30080427, 30090427, 30100427, 30110427, 30120427, 30130427, 30140427, 30150427, 30160427, 30170427, 30180427, 30190427, 30200427, 30210427, 30220427, 30230427, 30240427, 30250427, 30260427, 30270427, 30280427, 30290427, 30300427, 30310427, 30320427, 30330427, 30340427, 30350427, 30360427, 30370427, 30380427, 30390427, 30400427, 30410427, 30420427, 30430427, 30440427, 30450427, 30460427, 30470427, 30480427, 30490427, 30500427, 30510427, 30520427, 30530427, 30540427, 30550427, 30560427, 30570427, 30580427, 30590427, 30600427, 30610427, 30620427, 30630427, 30640427, 30650427, 30660427, 30670427, 30680427, 30690427, 30700427, 30710427, 30720427, 30730427, 30740427]</msg>
<status status="PASS" starttime="20201112 10:16:27.484" endtime="20201112 10:16:27.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.479" endtime="20201112 10:16:27.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.493" endtime="20201112 10:16:27.786"></status>
</kw>
<msg timestamp="20201112 10:16:27.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020915125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040989542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:27.491" endtime="20201112 10:16:27.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020915125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040989542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:27.790" endtime="20201112 10:16:27.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.797" endtime="20201112 10:16:27.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.488" endtime="20201112 10:16:27.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.486" endtime="20201112 10:16:27.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:27.827" level="INFO">${RESULT} = {'time': [0.020915125, 0.040989542, 0.060991722, 0.080993917, 0.100996278, 0.120998514, 0.141000889, 0.161003125, 0.181005472, 0.201007708, 0.221010069, 0.241012306, 0.261014694, 0.281016903, 0.301019...</msg>
<status status="PASS" starttime="20201112 10:16:27.801" endtime="20201112 10:16:27.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.832" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:27.831" endtime="20201112 10:16:27.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.834" level="INFO">VALUE: 0.020915125</msg>
<status status="PASS" starttime="20201112 10:16:27.833" endtime="20201112 10:16:27.835"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.828" endtime="20201112 10:16:27.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.840" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:27.839" endtime="20201112 10:16:27.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:27.842" level="INFO">VALUE: [0.040989542, 0.060991722, 0.080993917, 0.100996278, 0.120998514, 0.141000889, 0.161003125, 0.181005472, 0.201007708, 0.221010069, 0.241012306, 0.261014694, 0.281016903, 0.301019264, 0.321021514, 0.341023889, 0.361026153, 0.381028486, 0.401030708, 0.421033083, 0.441035347, 0.461037694, 0.481039931, 0.501042292, 0.521044528, 0.541046903, 0.561049125, 0.581051486, 0.601053722, 0.621056139, 0.641058333, 0.661060736, 0.681062944, 0.701065292, 0.721067528, 0.741069903, 0.761072153, 0.781074528, 0.801076736, 0.821079097, 0.841081347, 0.861083708, 0.881085958, 0.901088306, 0.921090556, 0.941092917, 0.961095167, 0.981097542, 1.00109975, 1.021102111, 1.041104403, 1.061106722, 1.081108958, 1.101111347, 1.121113583, 1.141115958, 1.161118167, 1.181120542, 1.201122764, 1.221125139, 1.241127389, 1.26112975, 1.281131972, 1.301134361, 1.321136583, 1.341138944, 1.361141181, 1.381143542, 1.401145778, 1.421148153, 1.441150389, 1.46115275, 1.481154986, 1.501157347, 1.521159583, 1.541161986, 1.561164208, 1.581166625, 1.601168806, 1.621171167, 1.641173417, 1.661175764, 1.681178014, 1.701180361, 1.721182611, 1.741184972, 1.761187208, 1.781189569, 1.801191819, 1.821194181, 1.841196417, 1.861198778, 1.881201042, 1.901203403, 1.921205625, 1.941208, 1.961210236, 1.981212597, 2.001214833, 2.021217194] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:27.841" endtime="20201112 10:16:27.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.836" endtime="20201112 10:16:27.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.845" endtime="20201112 10:16:27.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:27.849" endtime="20201112 10:16:27.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.847" endtime="20201112 10:16:27.869"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.844" endtime="20201112 10:16:27.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:23.331" endtime="20201112 10:16:27.870"></status>
</kw>
<msg timestamp="20201112 10:16:27.870" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:27.878" endtime="20201112 10:16:32.004"></status>
</kw>
<msg timestamp="20201112 10:16:32.005" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 32009828, 'wakeups': [32019864, 32029863, 32039863, 32049863, 32059863...</msg>
<status status="PASS" starttime="20201112 10:16:27.877" endtime="20201112 10:16:32.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.008" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 32009828, 'wakeups': [32019864, 32029863, 32039863, 32049863, 32059863...</msg>
<status status="PASS" starttime="20201112 10:16:32.006" endtime="20201112 10:16:32.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.009" endtime="20201112 10:16:32.011"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.874" endtime="20201112 10:16:32.012"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.872" endtime="20201112 10:16:32.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:32.015" level="INFO">${RESULT} = {'start-time': 32009828, 'timer-count': 5, 'wakeups': [32019864, 32029863, 32039863, 32049863, 32059863, 32069863, 32079863, 32089863, 32099863, 32109863, 32119863, 32129863, 32139863, 32149863, 32159...</msg>
<status status="PASS" starttime="20201112 10:16:32.013" endtime="20201112 10:16:32.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.019" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:32.018" endtime="20201112 10:16:32.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.022" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:32.021" endtime="20201112 10:16:32.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.016" endtime="20201112 10:16:32.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.028" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:32.027" endtime="20201112 10:16:32.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.030" level="INFO">VALUE: 32009828</msg>
<status status="PASS" starttime="20201112 10:16:32.029" endtime="20201112 10:16:32.030"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.023" endtime="20201112 10:16:32.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.035" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:32.034" endtime="20201112 10:16:32.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.037" level="INFO">VALUE: [32019864, 32029863, 32039863, 32049863, 32059863, 32069863, 32079863, 32089863, 32099863, 32109863, 32119863, 32129863, 32139863, 32149863, 32159863, 32169863, 32179863, 32189863, 32199863, 32209863, 32219863, 32229863, 32239863, 32249863, 32259863, 32269863, 32279863, 32289863, 32299863, 32309863, 32319863, 32329863, 32339863, 32349863, 32359863, 32369863, 32379863, 32389863, 32399863, 32409863, 32419863, 32429863, 32439863, 32449863, 32459863, 32469863, 32479863, 32489863, 32499863, 32509863, 32519863, 32529863, 32539863, 32549863, 32559863, 32569863, 32579863, 32589863, 32599863, 32609863, 32619863, 32629863, 32639863, 32649863, 32659863, 32669863, 32679863, 32689863, 32699863, 32709863, 32719863, 32729863, 32739863, 32749863, 32759863, 32769863, 32779863, 32789863, 32799863, 32809863, 32819863, 32829863, 32839863, 32849863, 32859863, 32869863, 32879863, 32889863, 32899863, 32909863, 32919863, 32929863, 32939863, 32949863, 32959863, 32969863, 32979863, 32989863, 32999863, 33009863]</msg>
<status status="PASS" starttime="20201112 10:16:32.036" endtime="20201112 10:16:32.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.032" endtime="20201112 10:16:32.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.045" endtime="20201112 10:16:32.337"></status>
</kw>
<msg timestamp="20201112 10:16:32.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019728028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039802458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:32.044" endtime="20201112 10:16:32.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019728028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039802458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:32.341" endtime="20201112 10:16:32.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.349" endtime="20201112 10:16:32.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.041" endtime="20201112 10:16:32.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.039" endtime="20201112 10:16:32.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:32.377" level="INFO">${RESULT} = {'time': [0.019728028, 0.039802458, 0.059804611, 0.079806833, 0.099809208, 0.119811431, 0.139813778, 0.159816, 0.179818361, 0.199820611, 0.219822972, 0.239825194, 0.259827556, 0.279829792, 0.299832167...</msg>
<status status="PASS" starttime="20201112 10:16:32.353" endtime="20201112 10:16:32.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.382" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:16:32.381" endtime="20201112 10:16:32.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.384" level="INFO">VALUE: 0.019728028</msg>
<status status="PASS" starttime="20201112 10:16:32.383" endtime="20201112 10:16:32.384"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.378" endtime="20201112 10:16:32.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.390" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:32.389" endtime="20201112 10:16:32.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:32.392" level="INFO">VALUE: [0.039802458, 0.059804611, 0.079806833, 0.099809208, 0.119811431, 0.139813778, 0.159816, 0.179818361, 0.199820611, 0.219822972, 0.239825194, 0.259827556, 0.279829792, 0.299832167, 0.319834389, 0.339836764, 0.359839014, 0.379841361, 0.399843583, 0.419845944, 0.439848181, 0.459850542, 0.479852778, 0.499855139, 0.519857403, 0.539859736, 0.559861972, 0.579864347, 0.599866569, 0.619868931, 0.639871153, 0.659873528, 0.679875764, 0.699878125, 0.719880347, 0.739882722, 0.759884944, 0.779887319, 0.799889542, 0.819891917, 0.839894139, 0.8598965, 0.879898736, 0.899901097, 0.919903347, 0.939905694, 0.959907931, 0.979910292, 0.999912528, 1.019914889, 1.039917125, 1.059919486, 1.079921722, 1.099924083, 1.119926319, 1.139928681, 1.159930917, 1.179933292, 1.199935514, 1.219937875, 1.239940139, 1.259942472, 1.279944708, 1.299947069, 1.319949306, 1.339951667, 1.359953903, 1.379956292, 1.3999585, 1.419960861, 1.439963097, 1.459965458, 1.479967694, 1.499970056, 1.519972292, 1.539974653, 1.559976889, 1.579979264, 1.5999815, 1.619983861, 1.639986083, 1.659988458, 1.679990736, 1.699993042, 1.719995278, 1.739997681, 1.759999875, 1.780002292, 1.800004472, 1.820006847, 1.840009125, 1.860011444, 1.880013681, 1.900016042, 1.920018306, 1.940020639, 1.960022875, 1.980025278, 2.000027472, 2.020029833] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:32.391" endtime="20201112 10:16:32.393"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.385" endtime="20201112 10:16:32.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.396" endtime="20201112 10:16:32.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:32.399" endtime="20201112 10:16:32.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.398" endtime="20201112 10:16:32.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.394" endtime="20201112 10:16:32.420"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:27.871" endtime="20201112 10:16:32.420"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.801" endtime="20201112 10:16:32.420"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:18.800" endtime="20201112 10:16:32.421"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:32.423" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:32.432" endtime="20201112 10:16:36.535"></status>
</kw>
<msg timestamp="20201112 10:16:36.536" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 34286457, 'wakeups': [34296504, 34306502, 34316502, 34326502, 34336502...</msg>
<status status="PASS" starttime="20201112 10:16:32.430" endtime="20201112 10:16:36.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:36.539" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 34286457, 'wakeups': [34296504, 34306502, 34316502, 34326502, 34336502...</msg>
<status status="PASS" starttime="20201112 10:16:36.537" endtime="20201112 10:16:36.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:36.540" endtime="20201112 10:16:36.542"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.427" endtime="20201112 10:16:36.542"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.425" endtime="20201112 10:16:36.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:36.545" level="INFO">${RESULT} = {'start-time': 34286457, 'timer-count': 6, 'wakeups': [34296504, 34306502, 34316502, 34326502, 34336502, 34346502, 34356502, 34366502, 34376502, 34386502, 34396502, 34406502, 34416502, 34426502, 34436...</msg>
<status status="PASS" starttime="20201112 10:16:36.543" endtime="20201112 10:16:36.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:36.550" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:36.549" endtime="20201112 10:16:36.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:36.552" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:36.551" endtime="20201112 10:16:36.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.546" endtime="20201112 10:16:36.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:36.557" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:36.556" endtime="20201112 10:16:36.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:36.560" level="INFO">VALUE: 34286457</msg>
<status status="PASS" starttime="20201112 10:16:36.559" endtime="20201112 10:16:36.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.554" endtime="20201112 10:16:36.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:36.565" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:36.564" endtime="20201112 10:16:36.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:36.567" level="INFO">VALUE: [34296504, 34306502, 34316502, 34326502, 34336502, 34346502, 34356502, 34366502, 34376502, 34386502, 34396502, 34406502, 34416502, 34426502, 34436502, 34446502, 34456502, 34466502, 34476502, 34486502, 34496502, 34506502, 34516502, 34526502, 34536502, 34546502, 34556502, 34566502, 34576502, 34586502, 34596502, 34606502, 34616502, 34626502, 34636502, 34646502, 34656502, 34666502, 34676502, 34686502, 34696502, 34706502, 34716502, 34726502, 34736502, 34746502, 34756502, 34766502, 34776502, 34786502, 34796502, 34806502, 34816502, 34826502, 34836502, 34846502, 34856502, 34866502, 34876502, 34886502, 34896502, 34906502, 34916502, 34926502, 34936502, 34946502, 34956502, 34966502, 34976502, 34986502, 34996502, 35006502, 35016502, 35026502, 35036502, 35046502, 35056502, 35066502, 35076502, 35086502, 35096502, 35106502, 35116502, 35126502, 35136502, 35146502, 35156502, 35166502, 35176502, 35186502, 35196502, 35206502, 35216502, 35226502, 35236502, 35246502, 35256502, 35266502, 35276502, 35286502]</msg>
<status status="PASS" starttime="20201112 10:16:36.566" endtime="20201112 10:16:36.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.561" endtime="20201112 10:16:36.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:36.576" endtime="20201112 10:16:36.868"></status>
</kw>
<msg timestamp="20201112 10:16:36.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022765403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042861264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:36.574" endtime="20201112 10:16:36.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:36.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022765403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042861264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:36.872" endtime="20201112 10:16:36.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:36.880" endtime="20201112 10:16:36.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.570" endtime="20201112 10:16:36.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.569" endtime="20201112 10:16:36.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:36.908" level="INFO">${RESULT} = {'time': [0.022765403, 0.042861264, 0.062861208, 0.082863444, 0.102865833, 0.122868042, 0.142870389, 0.162872681, 0.182874958, 0.202877194, 0.222879556, 0.242881819, 0.262884139, 0.282886375, 0.302888...</msg>
<status status="PASS" starttime="20201112 10:16:36.883" endtime="20201112 10:16:36.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:36.912" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:36.911" endtime="20201112 10:16:36.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:36.914" level="INFO">VALUE: 0.022765403</msg>
<status status="PASS" starttime="20201112 10:16:36.913" endtime="20201112 10:16:36.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.908" endtime="20201112 10:16:36.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:36.920" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:36.919" endtime="20201112 10:16:36.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:36.922" level="INFO">VALUE: [0.042861264, 0.062861208, 0.082863444, 0.102865833, 0.122868042, 0.142870389, 0.162872681, 0.182874958, 0.202877194, 0.222879556, 0.242881819, 0.262884139, 0.282886375, 0.302888764, 0.322890972, 0.342893306, 0.362895542, 0.382897903, 0.402900139, 0.4229025, 0.442904722, 0.462907083, 0.482909306, 0.502911667, 0.522913889, 0.54291625, 0.562918542, 0.582920833, 0.602923069, 0.622925417, 0.642927653, 0.662930014, 0.682932236, 0.702934597, 0.722936847, 0.742939181, 0.762941486, 0.782943792, 0.802946014, 0.822948361, 0.842950597, 0.862952944, 0.882955181, 0.902957542, 0.922959764, 0.942962125, 0.962964361, 0.982966708, 1.002968958, 1.022971306, 1.042973528, 1.062975903, 1.082978153, 1.102980472, 1.122982722, 1.142985069, 1.162987292, 1.182989667, 1.202991903, 1.222994264, 1.242996486, 1.262998847, 1.283001056, 1.303003431, 1.323005653, 1.343008014, 1.363010236, 1.383012597, 1.403014847, 1.423017222, 1.443019431, 1.463021778, 1.483024, 1.503026361, 1.523028625, 1.543030958, 1.563033194, 1.583035569, 1.603037778, 1.623040125, 1.643042403, 1.663044722, 1.683046944, 1.703049319, 1.723051583, 1.743053889, 1.763056167, 1.7830585, 1.803060708, 1.823063097, 1.843065375, 1.863067667, 1.883069917, 1.90307225, 1.923074486, 1.943076833, 1.963079069, 1.983081444, 2.003083667, 2.023086014] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:36.921" endtime="20201112 10:16:36.923"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.916" endtime="20201112 10:16:36.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:36.926" endtime="20201112 10:16:36.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:36.930" endtime="20201112 10:16:36.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.928" endtime="20201112 10:16:36.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.924" endtime="20201112 10:16:36.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.424" endtime="20201112 10:16:36.951"></status>
</kw>
<msg timestamp="20201112 10:16:36.951" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:36.961" endtime="20201112 10:16:41.091"></status>
</kw>
<msg timestamp="20201112 10:16:41.092" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 36550836, 'wakeups': [36560883, 36570881, 36580881, 36590881, 36600881...</msg>
<status status="PASS" starttime="20201112 10:16:36.959" endtime="20201112 10:16:41.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.099" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 36550836, 'wakeups': [36560883, 36570881, 36580881, 36590881, 36600881...</msg>
<status status="PASS" starttime="20201112 10:16:41.095" endtime="20201112 10:16:41.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:41.101" endtime="20201112 10:16:41.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.955" endtime="20201112 10:16:41.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.953" endtime="20201112 10:16:41.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:41.113" level="INFO">${RESULT} = {'start-time': 36550836, 'timer-count': 6, 'wakeups': [36560883, 36570881, 36580881, 36590881, 36600881, 36610881, 36620881, 36630881, 36640881, 36650881, 36660881, 36670881, 36680881, 36690881, 36700...</msg>
<status status="PASS" starttime="20201112 10:16:41.108" endtime="20201112 10:16:41.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.122" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:41.120" endtime="20201112 10:16:41.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.124" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:41.123" endtime="20201112 10:16:41.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.115" endtime="20201112 10:16:41.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.129" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:41.128" endtime="20201112 10:16:41.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.131" level="INFO">VALUE: 36550836</msg>
<status status="PASS" starttime="20201112 10:16:41.130" endtime="20201112 10:16:41.131"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.125" endtime="20201112 10:16:41.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.136" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:41.135" endtime="20201112 10:16:41.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.139" level="INFO">VALUE: [36560883, 36570881, 36580881, 36590881, 36600881, 36610881, 36620881, 36630881, 36640881, 36650881, 36660881, 36670881, 36680881, 36690881, 36700881, 36710881, 36720881, 36730881, 36740881, 36750881, 36760881, 36770881, 36780881, 36790881, 36800881, 36810881, 36820881, 36830881, 36840881, 36850881, 36860881, 36870881, 36880881, 36890881, 36900881, 36910881, 36920881, 36930881, 36940881, 36950881, 36960881, 36970881, 36980881, 36990881, 37000881, 37010881, 37020881, 37030881, 37040881, 37050881, 37060881, 37070881, 37080881, 37090881, 37100881, 37110881, 37120881, 37130881, 37140881, 37150881, 37160881, 37170881, 37180881, 37190881, 37200881, 37210881, 37220881, 37230881, 37240881, 37250881, 37260881, 37270881, 37280881, 37290881, 37300881, 37310881, 37320881, 37330881, 37340881, 37350881, 37360881, 37370881, 37380881, 37390881, 37400881, 37410881, 37420881, 37430881, 37440881, 37450881, 37460881, 37470881, 37480881, 37490881, 37500881, 37510881, 37520881, 37530881, 37540881, 37550881]</msg>
<status status="PASS" starttime="20201112 10:16:41.137" endtime="20201112 10:16:41.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.133" endtime="20201112 10:16:41.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:41.147" endtime="20201112 10:16:41.438"></status>
</kw>
<msg timestamp="20201112 10:16:41.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021258403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041354194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:41.145" endtime="20201112 10:16:41.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021258403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041354194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:41.442" endtime="20201112 10:16:41.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:41.449" endtime="20201112 10:16:41.451"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.142" endtime="20201112 10:16:41.452"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.140" endtime="20201112 10:16:41.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:41.478" level="INFO">${RESULT} = {'time': [0.021258403, 0.041354194, 0.061354181, 0.081356417, 0.101358778, 0.121360986, 0.141363347, 0.161365569, 0.181367944, 0.201370153, 0.221372542, 0.24137475, 0.261377097, 0.281379361, 0.3013816...</msg>
<status status="PASS" starttime="20201112 10:16:41.453" endtime="20201112 10:16:41.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.482" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:41.481" endtime="20201112 10:16:41.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.485" level="INFO">VALUE: 0.021258403</msg>
<status status="PASS" starttime="20201112 10:16:41.484" endtime="20201112 10:16:41.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.479" endtime="20201112 10:16:41.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.490" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:41.489" endtime="20201112 10:16:41.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:41.492" level="INFO">VALUE: [0.041354194, 0.061354181, 0.081356417, 0.101358778, 0.121360986, 0.141363347, 0.161365569, 0.181367944, 0.201370153, 0.221372542, 0.24137475, 0.261377097, 0.281379361, 0.301381681, 0.321383889, 0.341386264, 0.361388486, 0.381390833, 0.401393056, 0.421395458, 0.441397639, 0.461400028, 0.481402236, 0.501404569, 0.521406819, 0.541409194, 0.561411403, 0.58141375, 0.601415986, 0.621418333, 0.641420556, 0.661422917, 0.681425125, 0.7014275, 0.721429708, 0.741432069, 0.761434292, 0.781436653, 0.801438875, 0.82144125, 0.841443472, 0.861445833, 0.881448042, 0.901450403, 0.921452625, 0.941454986, 0.961457208, 0.981459569, 1.001461792, 1.021464181, 1.041466389, 1.061468722, 1.081470958, 1.101473306, 1.121475542, 1.141477903, 1.161480125, 1.181482472, 1.201484722, 1.221487069, 1.241489292, 1.261491653, 1.281493875, 1.301496236, 1.321498444, 1.341500806, 1.361503056, 1.381505417, 1.401507611, 1.421509972, 1.441512194, 1.461514556, 1.481516792, 1.501519139, 1.521521375, 1.541523764, 1.561525944, 1.581528306, 1.601530528, 1.621532889, 1.641535111, 1.661537472, 1.681539694, 1.701542056, 1.721544278, 1.741546639, 1.761548861, 1.781551222, 1.801553458, 1.821555806, 1.841558028, 1.861560403, 1.881562611, 1.901564972, 1.921567208, 1.941569569, 1.961571792, 1.981574153, 2.001576375, 2.021578722] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:41.491" endtime="20201112 10:16:41.493"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.486" endtime="20201112 10:16:41.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:41.496" endtime="20201112 10:16:41.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:41.499" endtime="20201112 10:16:41.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.498" endtime="20201112 10:16:41.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.494" endtime="20201112 10:16:41.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:36.951" endtime="20201112 10:16:41.520"></status>
</kw>
<msg timestamp="20201112 10:16:41.520" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:41.529" endtime="20201112 10:16:45.640"></status>
</kw>
<msg timestamp="20201112 10:16:45.640" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38834836, 'wakeups': [38844883, 38854881, 38864881, 38874881, 38884881...</msg>
<status status="PASS" starttime="20201112 10:16:41.527" endtime="20201112 10:16:45.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.644" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38834836, 'wakeups': [38844883, 38854881, 38864881, 38874881, 38884881...</msg>
<status status="PASS" starttime="20201112 10:16:45.642" endtime="20201112 10:16:45.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.645" endtime="20201112 10:16:45.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.524" endtime="20201112 10:16:45.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.522" endtime="20201112 10:16:45.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:45.651" level="INFO">${RESULT} = {'start-time': 38834836, 'timer-count': 6, 'wakeups': [38844883, 38854881, 38864881, 38874881, 38884881, 38894881, 38904881, 38914881, 38924881, 38934881, 38944881, 38954881, 38964881, 38974881, 38984...</msg>
<status status="PASS" starttime="20201112 10:16:45.648" endtime="20201112 10:16:45.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.655" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:45.654" endtime="20201112 10:16:45.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.657" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:45.656" endtime="20201112 10:16:45.657"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.651" endtime="20201112 10:16:45.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.662" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:45.661" endtime="20201112 10:16:45.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.665" level="INFO">VALUE: 38834836</msg>
<status status="PASS" starttime="20201112 10:16:45.664" endtime="20201112 10:16:45.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.658" endtime="20201112 10:16:45.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.671" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:45.669" endtime="20201112 10:16:45.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.673" level="INFO">VALUE: [38844883, 38854881, 38864881, 38874881, 38884881, 38894881, 38904881, 38914881, 38924881, 38934881, 38944881, 38954881, 38964881, 38974881, 38984881, 38994881, 39004881, 39014881, 39024881, 39034881, 39044881, 39054881, 39064881, 39074881, 39084881, 39094881, 39104881, 39114881, 39124881, 39134881, 39144881, 39154881, 39164881, 39174881, 39184881, 39194881, 39204881, 39214881, 39224881, 39234881, 39244881, 39254881, 39264881, 39274881, 39284881, 39294881, 39304881, 39314881, 39324881, 39334881, 39344881, 39354881, 39364881, 39374881, 39384881, 39394881, 39404881, 39414881, 39424881, 39434881, 39444881, 39454881, 39464881, 39474881, 39484881, 39494881, 39504881, 39514881, 39524881, 39534881, 39544881, 39554881, 39564881, 39574881, 39584881, 39594881, 39604881, 39614881, 39624881, 39634881, 39644881, 39654881, 39664881, 39674881, 39684881, 39694881, 39704881, 39714881, 39724881, 39734881, 39744881, 39754881, 39764881, 39774881, 39784881, 39794881, 39804881, 39814881, 39824881, 39834881]</msg>
<status status="PASS" starttime="20201112 10:16:45.672" endtime="20201112 10:16:45.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.667" endtime="20201112 10:16:45.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.681" endtime="20201112 10:16:45.973"></status>
</kw>
<msg timestamp="20201112 10:16:45.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039904847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:45.679" endtime="20201112 10:16:45.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:45.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039904847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:45.977" endtime="20201112 10:16:45.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:45.985" endtime="20201112 10:16:45.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.676" endtime="20201112 10:16:45.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:45.674" endtime="20201112 10:16:45.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:46.013" level="INFO">${RESULT} = {'time': [0.019809694, 0.039904847, 0.059904833, 0.079907056, 0.099909403, 0.119911625, 0.139913972, 0.159916194, 0.179918556, 0.199920778, 0.219923181, 0.239925347, 0.259927736, 0.279929931, 0.299932...</msg>
<status status="PASS" starttime="20201112 10:16:45.988" endtime="20201112 10:16:46.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:46.017" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:16:46.016" endtime="20201112 10:16:46.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:46.020" level="INFO">VALUE: 0.019809694</msg>
<status status="PASS" starttime="20201112 10:16:46.018" endtime="20201112 10:16:46.020"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.014" endtime="20201112 10:16:46.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:46.025" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:46.024" endtime="20201112 10:16:46.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:46.028" level="INFO">VALUE: [0.039904847, 0.059904833, 0.079907056, 0.099909403, 0.119911625, 0.139913972, 0.159916194, 0.179918556, 0.199920778, 0.219923181, 0.239925347, 0.259927736, 0.279929931, 0.299932292, 0.3199345, 0.339936861, 0.359939083, 0.379941431, 0.399943653, 0.419946014, 0.43994825, 0.459950583, 0.479952819, 0.499955167, 0.519957417, 0.539959736, 0.559961972, 0.579964347, 0.599966556, 0.619968903, 0.639971125, 0.659973472, 0.679975722, 0.699978083, 0.719980278, 0.739982639, 0.759984847, 0.779987208, 0.799989444, 0.819991778, 0.839994028, 0.859996375, 0.879998583, 0.900000931, 0.920003167, 0.940005514, 0.960007736, 0.980010097, 1.000012319, 1.020014667, 1.040016931, 1.060019264, 1.080021528, 1.100023819, 1.120026069, 1.140028403, 1.160030639, 1.180032986, 1.200035222, 1.220037556, 1.240039778, 1.260042181, 1.280044361, 1.300046722, 1.320048944, 1.340051306, 1.360053528, 1.380055889, 1.400058097, 1.420060472, 1.440062667, 1.460065028, 1.48006725, 1.500069597, 1.520071819, 1.54007425, 1.560076403, 1.58007875, 1.600081, 1.620083417, 1.640085556, 1.660087917, 1.680090139, 1.700092486, 1.720094708, 1.740097097, 1.760099292, 1.780101639, 1.800103875, 1.820106222, 1.840108444, 1.860110792, 1.880113028, 1.900115375, 1.920117597, 1.940120042, 1.960122181, 1.980124528, 2.000126833, 2.020129111] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:46.027" endtime="20201112 10:16:46.029"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.021" endtime="20201112 10:16:46.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:46.032" endtime="20201112 10:16:46.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:46.035" endtime="20201112 10:16:46.055"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.034" endtime="20201112 10:16:46.055"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.030" endtime="20201112 10:16:46.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:41.521" endtime="20201112 10:16:46.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.422" endtime="20201112 10:16:46.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:32.421" endtime="20201112 10:16:46.056"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:46.059" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:46.067" endtime="20201112 10:16:50.190"></status>
</kw>
<msg timestamp="20201112 10:16:50.191" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 41104090, 'wakeups': [41114146, 41124146, 41134147, 41144147, 41154147...</msg>
<status status="PASS" starttime="20201112 10:16:46.066" endtime="20201112 10:16:50.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.194" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 41104090, 'wakeups': [41114146, 41124146, 41134147, 41144147, 41154147...</msg>
<status status="PASS" starttime="20201112 10:16:50.192" endtime="20201112 10:16:50.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:50.195" endtime="20201112 10:16:50.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.063" endtime="20201112 10:16:50.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.061" endtime="20201112 10:16:50.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:50.201" level="INFO">${RESULT} = {'start-time': 41104090, 'timer-count': 7, 'wakeups': [41114146, 41124146, 41134147, 41144147, 41154147, 41164147, 41174147, 41184147, 41194147, 41204147, 41214147, 41224147, 41234147, 41244147, 41254...</msg>
<status status="PASS" starttime="20201112 10:16:50.198" endtime="20201112 10:16:50.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.214" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:50.212" endtime="20201112 10:16:50.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.216" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:50.215" endtime="20201112 10:16:50.216"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.210" endtime="20201112 10:16:50.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.221" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:50.220" endtime="20201112 10:16:50.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.223" level="INFO">VALUE: 41104090</msg>
<status status="PASS" starttime="20201112 10:16:50.222" endtime="20201112 10:16:50.224"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.218" endtime="20201112 10:16:50.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.228" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:50.227" endtime="20201112 10:16:50.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.230" level="INFO">VALUE: [41114146, 41124146, 41134147, 41144147, 41154147, 41164147, 41174147, 41184147, 41194147, 41204147, 41214147, 41224147, 41234147, 41244147, 41254147, 41264147, 41274147, 41284147, 41294147, 41304147, 41314147, 41324147, 41334147, 41344147, 41354147, 41364147, 41374147, 41384147, 41394147, 41404147, 41414147, 41424147, 41434147, 41444147, 41454147, 41464147, 41474147, 41484147, 41494147, 41504147, 41514147, 41524147, 41534147, 41544147, 41554147, 41564147, 41574147, 41584147, 41594147, 41604147, 41614147, 41624147, 41634147, 41644147, 41654147, 41664147, 41674147, 41684147, 41694147, 41704147, 41714147, 41724147, 41734147, 41744147, 41754147, 41764147, 41774147, 41784147, 41794147, 41804147, 41814147, 41824147, 41834147, 41844147, 41854147, 41864147, 41874147, 41884147, 41894147, 41904147, 41914147, 41924147, 41934147, 41944147, 41954147, 41964147, 41974147, 41984147, 41994147, 42004147, 42014147, 42024147, 42034147, 42044147, 42054147, 42064147, 42074147, 42084147, 42094147, 42104147]</msg>
<status status="PASS" starttime="20201112 10:16:50.229" endtime="20201112 10:16:50.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.225" endtime="20201112 10:16:50.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:50.239" endtime="20201112 10:16:50.531"></status>
</kw>
<msg timestamp="20201112 10:16:50.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042642889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:50.236" endtime="20201112 10:16:50.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042642889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:50.535" endtime="20201112 10:16:50.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:50.543" endtime="20201112 10:16:50.544"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.233" endtime="20201112 10:16:50.545"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.232" endtime="20201112 10:16:50.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:50.569" level="INFO">${RESULT} = {'time': [0.022528319, 0.042642889, 0.062644861, 0.082649069, 0.102651417, 0.122653653, 0.142655986, 0.162658208, 0.182660556, 0.202662764, 0.222665111, 0.242667347, 0.262669681, 0.282671889, 0.302674...</msg>
<status status="PASS" starttime="20201112 10:16:50.546" endtime="20201112 10:16:50.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.574" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:50.573" endtime="20201112 10:16:50.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.576" level="INFO">VALUE: 0.022528319</msg>
<status status="PASS" starttime="20201112 10:16:50.575" endtime="20201112 10:16:50.576"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.570" endtime="20201112 10:16:50.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.581" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:50.580" endtime="20201112 10:16:50.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:50.584" level="INFO">VALUE: [0.042642889, 0.062644861, 0.082649069, 0.102651417, 0.122653653, 0.142655986, 0.162658208, 0.182660556, 0.202662764, 0.222665111, 0.242667347, 0.262669681, 0.282671889, 0.30267425, 0.322676486, 0.342678833, 0.362681042, 0.382683389, 0.402685653, 0.422687958, 0.442690181, 0.462692514, 0.482694736, 0.502697111, 0.522699306, 0.542701653, 0.562703889, 0.582706222, 0.602708486, 0.622710792, 0.642713, 0.662715347, 0.682717583, 0.702719917, 0.722722167, 0.742724486, 0.762726708, 0.782729069, 0.802731292, 0.822733653, 0.842735847, 0.862738194, 0.882740486, 0.902742764, 0.922744986, 0.942747333, 0.962749556, 0.982751917, 1.002754125, 1.022756486, 1.04275875, 1.062761042, 1.082763264, 1.102765667, 1.122767819, 1.142770181, 1.162772403, 1.182774736, 1.202776986, 1.222779319, 1.242781542, 1.262783958, 1.282786097, 1.302788458, 1.322790708, 1.342793028, 1.362795236, 1.382797597, 1.402799819, 1.422802167, 1.442804431, 1.462806722, 1.482808944, 1.502811292, 1.522813542, 1.542815861, 1.562818083, 1.582820431, 1.602822653, 1.622825014, 1.642827236, 1.662829625, 1.682831806, 1.702834139, 1.722836375, 1.742838736, 1.762840931, 1.782843278, 1.802845514, 1.822847847, 1.842850069, 1.862852431, 1.882854639, 1.902856986, 1.922859208, 1.942861569, 1.962863819, 1.982866125, 2.002868347, 2.02287075] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:50.582" endtime="20201112 10:16:50.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.577" endtime="20201112 10:16:50.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:50.587" endtime="20201112 10:16:50.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:50.590" endtime="20201112 10:16:50.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.589" endtime="20201112 10:16:50.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.585" endtime="20201112 10:16:50.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.060" endtime="20201112 10:16:50.611"></status>
</kw>
<msg timestamp="20201112 10:16:50.611" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:50.620" endtime="20201112 10:16:54.740"></status>
</kw>
<msg timestamp="20201112 10:16:54.741" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 43380347, 'wakeups': [43390403, 43400403, 43410404, 43420404, 43430404...</msg>
<status status="PASS" starttime="20201112 10:16:50.618" endtime="20201112 10:16:54.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.745" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 43380347, 'wakeups': [43390403, 43400403, 43410404, 43420404, 43430404...</msg>
<status status="PASS" starttime="20201112 10:16:54.743" endtime="20201112 10:16:54.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:54.746" endtime="20201112 10:16:54.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.615" endtime="20201112 10:16:54.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.613" endtime="20201112 10:16:54.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:54.752" level="INFO">${RESULT} = {'start-time': 43380347, 'timer-count': 7, 'wakeups': [43390403, 43400403, 43410404, 43420404, 43430404, 43440404, 43450404, 43460404, 43470404, 43480404, 43490404, 43500404, 43510404, 43520404, 43530...</msg>
<status status="PASS" starttime="20201112 10:16:54.750" endtime="20201112 10:16:54.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.756" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:54.755" endtime="20201112 10:16:54.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.758" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:54.757" endtime="20201112 10:16:54.758"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:54.753" endtime="20201112 10:16:54.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.763" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:54.762" endtime="20201112 10:16:54.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.765" level="INFO">VALUE: 43380347</msg>
<status status="PASS" starttime="20201112 10:16:54.764" endtime="20201112 10:16:54.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:54.759" endtime="20201112 10:16:54.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.769" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:54.768" endtime="20201112 10:16:54.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:54.777" level="INFO">VALUE: [43390403, 43400403, 43410404, 43420404, 43430404, 43440404, 43450404, 43460404, 43470404, 43480404, 43490404, 43500404, 43510404, 43520404, 43530404, 43540404, 43550404, 43560404, 43570404, 43580404, 43590404, 43600404, 43610404, 43620404, 43630404, 43640404, 43650404, 43660404, 43670404, 43680404, 43690404, 43700404, 43710404, 43720404, 43730404, 43740404, 43750404, 43760404, 43770404, 43780404, 43790404, 43800404, 43810404, 43820404, 43830404, 43840404, 43850404, 43860404, 43870404, 43880404, 43890404, 43900404, 43910404, 43920404, 43930404, 43940404, 43950404, 43960404, 43970404, 43980404, 43990404, 44000404, 44010404, 44020404, 44030404, 44040404, 44050404, 44060404, 44070404, 44080404, 44090404, 44100404, 44110404, 44120404, 44130404, 44140404, 44150404, 44160404, 44170404, 44180404, 44190404, 44200404, 44210404, 44220404, 44230404, 44240404, 44250404, 44260404, 44270404, 44280404, 44290404, 44300404, 44310404, 44320404, 44330404, 44340404, 44350404, 44360404, 44370404, 44380404]</msg>
<status status="PASS" starttime="20201112 10:16:54.775" endtime="20201112 10:16:54.777"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:54.766" endtime="20201112 10:16:54.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:54.784" endtime="20201112 10:16:55.075"></status>
</kw>
<msg timestamp="20201112 10:16:55.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040323542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:54.783" endtime="20201112 10:16:55.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040323542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:55.079" endtime="20201112 10:16:55.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:55.086" endtime="20201112 10:16:55.088"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:54.780" endtime="20201112 10:16:55.088"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:54.778" endtime="20201112 10:16:55.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:55.113" level="INFO">${RESULT} = {'time': [0.020208319, 0.040323542, 0.060325528, 0.080329736, 0.100332069, 0.120334278, 0.140336625, 0.160338917, 0.180341194, 0.200343472, 0.220345736, 0.240347958, 0.260350306, 0.280352542, 0.300354...</msg>
<status status="PASS" starttime="20201112 10:16:55.090" endtime="20201112 10:16:55.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.118" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:55.117" endtime="20201112 10:16:55.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.120" level="INFO">VALUE: 0.020208319</msg>
<status status="PASS" starttime="20201112 10:16:55.119" endtime="20201112 10:16:55.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.114" endtime="20201112 10:16:55.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.125" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:55.124" endtime="20201112 10:16:55.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:55.127" level="INFO">VALUE: [0.040323542, 0.060325528, 0.080329736, 0.100332069, 0.120334278, 0.140336625, 0.160338917, 0.180341194, 0.200343472, 0.220345736, 0.240347958, 0.260350306, 0.280352542, 0.300354861, 0.320357097, 0.340359431, 0.360361653, 0.380364, 0.400366208, 0.420368597, 0.440370819, 0.460373208, 0.480375431, 0.500377806, 0.520380056, 0.540382417, 0.560384653, 0.580387014, 0.600389264, 0.620391625, 0.640393875, 0.66039625, 0.680398472, 0.700400861, 0.720403083, 0.740405444, 0.760407694, 0.780410056, 0.800412292, 0.820414681, 0.840416903, 0.860419264, 0.880421514, 0.900423903, 0.920426125, 0.940428472, 0.960430708, 0.980433083, 1.000435333, 1.020437694, 1.040439917, 1.060442306, 1.080444528, 1.100446889, 1.120449125, 1.1404515, 1.16045375, 1.180456167, 1.200458347, 1.220460708, 1.240462944, 1.260465306, 1.280467611, 1.300469917, 1.320472167, 1.340474514, 1.360476764, 1.380479167, 1.400481361, 1.420483722, 1.440486028, 1.460488333, 1.480490569, 1.500492931, 1.520495208, 1.540497542, 1.560499806, 1.580502153, 1.600504389, 1.62050675, 1.640509014, 1.660511361, 1.680513611, 1.700516, 1.720518222, 1.740520569, 1.760522806, 1.780525181, 1.800527417, 1.820529806, 1.840532014, 1.860534389, 1.880536639, 1.900538986, 1.920541236, 1.940543611, 1.960545847, 1.980548222, 2.000550444, 2.020552806] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:55.126" endtime="20201112 10:16:55.128"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.121" endtime="20201112 10:16:55.128"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:55.130" endtime="20201112 10:16:55.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:55.134" endtime="20201112 10:16:55.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.132" endtime="20201112 10:16:55.154"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.129" endtime="20201112 10:16:55.154"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:50.612" endtime="20201112 10:16:55.155"></status>
</kw>
<msg timestamp="20201112 10:16:55.155" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:55.163" endtime="20201112 10:16:59.283"></status>
</kw>
<msg timestamp="20201112 10:16:59.284" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 45651850, 'wakeups': [45661906, 45671906, 45681907, 45691907, 45701907...</msg>
<status status="PASS" starttime="20201112 10:16:55.162" endtime="20201112 10:16:59.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.290" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 45651850, 'wakeups': [45661906, 45671906, 45681907, 45691907, 45701907...</msg>
<status status="PASS" starttime="20201112 10:16:59.286" endtime="20201112 10:16:59.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:59.292" endtime="20201112 10:16:59.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.159" endtime="20201112 10:16:59.297"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.157" endtime="20201112 10:16:59.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:59.303" level="INFO">${RESULT} = {'start-time': 45651850, 'timer-count': 7, 'wakeups': [45661906, 45671906, 45681907, 45691907, 45701907, 45711907, 45721907, 45731907, 45741907, 45751907, 45761907, 45771907, 45781907, 45791907, 45801...</msg>
<status status="PASS" starttime="20201112 10:16:59.299" endtime="20201112 10:16:59.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.307" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:59.306" endtime="20201112 10:16:59.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.309" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:59.308" endtime="20201112 10:16:59.311"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.304" endtime="20201112 10:16:59.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.315" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:59.314" endtime="20201112 10:16:59.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.317" level="INFO">VALUE: 45651850</msg>
<status status="PASS" starttime="20201112 10:16:59.316" endtime="20201112 10:16:59.317"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.312" endtime="20201112 10:16:59.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.322" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:59.321" endtime="20201112 10:16:59.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.324" level="INFO">VALUE: [45661906, 45671906, 45681907, 45691907, 45701907, 45711907, 45721907, 45731907, 45741907, 45751907, 45761907, 45771907, 45781907, 45791907, 45801907, 45811907, 45821907, 45831907, 45841907, 45851907, 45861907, 45871907, 45881907, 45891907, 45901907, 45911907, 45921907, 45931907, 45941907, 45951907, 45961907, 45971907, 45981907, 45991907, 46001907, 46011907, 46021907, 46031907, 46041907, 46051907, 46061907, 46071907, 46081907, 46091907, 46101907, 46111907, 46121907, 46131907, 46141907, 46151907, 46161907, 46171907, 46181907, 46191907, 46201907, 46211907, 46221907, 46231907, 46241907, 46251907, 46261907, 46271907, 46281907, 46291907, 46301907, 46311907, 46321907, 46331907, 46341907, 46351907, 46361907, 46371907, 46381907, 46391907, 46401907, 46411907, 46421907, 46431907, 46441907, 46451907, 46461907, 46471907, 46481907, 46491907, 46501907, 46511907, 46521907, 46531907, 46541907, 46551907, 46561907, 46571907, 46581907, 46591907, 46601907, 46611907, 46621907, 46631907, 46641907, 46651907]</msg>
<status status="PASS" starttime="20201112 10:16:59.323" endtime="20201112 10:16:59.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.319" endtime="20201112 10:16:59.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:59.331" endtime="20201112 10:16:59.623"></status>
</kw>
<msg timestamp="20201112 10:16:59.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039791403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:59.330" endtime="20201112 10:16:59.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039791403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:59.627" endtime="20201112 10:16:59.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:59.634" endtime="20201112 10:16:59.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.327" endtime="20201112 10:16:59.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.326" endtime="20201112 10:16:59.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:59.661" level="INFO">${RESULT} = {'time': [0.019676153, 0.039791403, 0.059793403, 0.079797625, 0.0998, 0.119802208, 0.139804569, 0.159806806, 0.179809167, 0.199811458, 0.219813778, 0.239816014, 0.259818403, 0.279820611, 0.299822972, ...</msg>
<status status="PASS" starttime="20201112 10:16:59.638" endtime="20201112 10:16:59.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.666" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:16:59.665" endtime="20201112 10:16:59.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.669" level="INFO">VALUE: 0.019676153</msg>
<status status="PASS" starttime="20201112 10:16:59.668" endtime="20201112 10:16:59.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.662" endtime="20201112 10:16:59.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.674" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:59.673" endtime="20201112 10:16:59.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:59.676" level="INFO">VALUE: [0.039791403, 0.059793403, 0.079797625, 0.0998, 0.119802208, 0.139804569, 0.159806806, 0.179809167, 0.199811458, 0.219813778, 0.239816014, 0.259818403, 0.279820611, 0.299822972, 0.319825194, 0.339827597, 0.359829792, 0.379832153, 0.399834431, 0.41983675, 0.439838986, 0.459841347, 0.479843583, 0.499846014, 0.519848194, 0.539850556, 0.559852778, 0.579855139, 0.599857375, 0.619859736, 0.639861972, 0.659864333, 0.679866583, 0.699869014, 0.719871167, 0.739873528, 0.759875764, 0.779878139, 0.799880361, 0.819882722, 0.839884958, 0.859887319, 0.879889556, 0.899891917, 0.919894222, 0.939896528, 0.95989875, 0.979901111, 0.999903361, 1.019905708, 1.039907958, 1.059910306, 1.079912597, 1.099914917, 1.119917139, 1.139919514, 1.15992175, 1.179924097, 1.199926333, 1.219928736, 1.239930944, 1.259933306, 1.279935556, 1.299937903, 1.319940139, 1.3399425, 1.359944736, 1.379947097, 1.399949333, 1.419951708, 1.439953931, 1.459956292, 1.479958556, 1.499960889, 1.519963125, 1.539965486, 1.559967778, 1.579970083, 1.599972319, 1.619974681, 1.639976917, 1.659979292, 1.679981542, 1.699983875, 1.719986125, 1.739988486, 1.759990722, 1.779993069, 1.799995319, 1.819997667, 1.839999903, 1.860002278, 1.8800045, 1.900006889, 1.920009125, 1.940011486, 1.960013708, 1.980016083, 2.000018361, 2.020020667] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:59.675" endtime="20201112 10:16:59.676"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.670" endtime="20201112 10:16:59.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:59.679" endtime="20201112 10:16:59.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:59.682" endtime="20201112 10:16:59.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.681" endtime="20201112 10:16:59.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.677" endtime="20201112 10:16:59.703"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:55.156" endtime="20201112 10:16:59.703"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.058" endtime="20201112 10:16:59.703"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:46.057" endtime="20201112 10:16:59.703"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:59.706" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:59.714" endtime="20201112 10:17:03.821"></status>
</kw>
<msg timestamp="20201112 10:17:03.822" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 47927227, 'wakeups': [47937296, 47947296, 47957296, 47967296, 47977296...</msg>
<status status="PASS" starttime="20201112 10:16:59.712" endtime="20201112 10:17:03.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.825" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 47927227, 'wakeups': [47937296, 47947296, 47957296, 47967296, 47977296...</msg>
<status status="PASS" starttime="20201112 10:17:03.823" endtime="20201112 10:17:03.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:03.826" endtime="20201112 10:17:03.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.710" endtime="20201112 10:17:03.828"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.708" endtime="20201112 10:17:03.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:03.831" level="INFO">${RESULT} = {'start-time': 47927227, 'timer-count': 8, 'wakeups': [47937296, 47947296, 47957296, 47967296, 47977296, 47987296, 47997296, 48007296, 48017296, 48027296, 48037296, 48047296, 48057296, 48067296, 48077...</msg>
<status status="PASS" starttime="20201112 10:17:03.829" endtime="20201112 10:17:03.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.835" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:03.834" endtime="20201112 10:17:03.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.837" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:03.836" endtime="20201112 10:17:03.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.832" endtime="20201112 10:17:03.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.842" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:03.841" endtime="20201112 10:17:03.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.844" level="INFO">VALUE: 47927227</msg>
<status status="PASS" starttime="20201112 10:17:03.843" endtime="20201112 10:17:03.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.839" endtime="20201112 10:17:03.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.849" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:03.848" endtime="20201112 10:17:03.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:03.851" level="INFO">VALUE: [47937296, 47947296, 47957296, 47967296, 47977296, 47987296, 47997296, 48007296, 48017296, 48027296, 48037296, 48047296, 48057296, 48067296, 48077296, 48087296, 48097296, 48107296, 48117296, 48127296, 48137296, 48147296, 48157296, 48167296, 48177296, 48187296, 48197296, 48207296, 48217296, 48227296, 48237296, 48247296, 48257296, 48267296, 48277296, 48287296, 48297296, 48307296, 48317296, 48327296, 48337296, 48347296, 48357296, 48367296, 48377296, 48387296, 48397296, 48407296, 48417296, 48427296, 48437296, 48447296, 48457296, 48467296, 48477296, 48487296, 48497296, 48507296, 48517296, 48527296, 48537296, 48547296, 48557296, 48567296, 48577296, 48587296, 48597296, 48607296, 48617296, 48627296, 48637296, 48647296, 48657296, 48667296, 48677296, 48687296, 48697296, 48707296, 48717296, 48727296, 48737296, 48747296, 48757296, 48767296, 48777296, 48787296, 48797296, 48807296, 48817296, 48827296, 48837296, 48847296, 48857296, 48867296, 48877296, 48887296, 48897296, 48907296, 48917296, 48927296]</msg>
<status status="PASS" starttime="20201112 10:17:03.850" endtime="20201112 10:17:03.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.846" endtime="20201112 10:17:03.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:03.860" endtime="20201112 10:17:04.151"></status>
</kw>
<msg timestamp="20201112 10:17:04.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021887083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042027778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:03.858" endtime="20201112 10:17:04.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:04.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021887083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042027778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:04.155" endtime="20201112 10:17:04.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:04.162" endtime="20201112 10:17:04.164"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.855" endtime="20201112 10:17:04.165"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:03.853" endtime="20201112 10:17:04.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:04.189" level="INFO">${RESULT} = {'time': [0.021887083, 0.042027778, 0.062029444, 0.082031681, 0.102034042, 0.122036333, 0.142038625, 0.162040861, 0.18204325, 0.202045486, 0.222047806, 0.242050056, 0.262052403, 0.282054625, 0.3020570...</msg>
<status status="PASS" starttime="20201112 10:17:04.166" endtime="20201112 10:17:04.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:04.194" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:04.193" endtime="20201112 10:17:04.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:04.196" level="INFO">VALUE: 0.021887083</msg>
<status status="PASS" starttime="20201112 10:17:04.195" endtime="20201112 10:17:04.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:04.190" endtime="20201112 10:17:04.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:04.201" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:04.200" endtime="20201112 10:17:04.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:04.203" level="INFO">VALUE: [0.042027778, 0.062029444, 0.082031681, 0.102034042, 0.122036333, 0.142038625, 0.162040861, 0.18204325, 0.202045486, 0.222047806, 0.242050056, 0.262052403, 0.282054625, 0.302057014, 0.322059236, 0.342061597, 0.362063806, 0.382066167, 0.402068403, 0.422070778, 0.442073, 0.462075361, 0.482077583, 0.502079958, 0.522082181, 0.542084542, 0.562086778, 0.582089125, 0.602091361, 0.622093722, 0.642095958, 0.662098319, 0.682100542, 0.702102903, 0.722105139, 0.7421075, 0.762109736, 0.782112097, 0.802114333, 0.822116681, 0.842118917, 0.862121278, 0.882123528, 0.902125889, 0.922128097, 0.942130458, 0.962132722, 0.982135056, 1.002137292, 1.022139639, 1.042141875, 1.062144236, 1.0821465, 1.102148847, 1.122151069, 1.142153431, 1.162155653, 1.182158014, 1.20216025, 1.222162681, 1.242164889, 1.262167208, 1.282169431, 1.302171792, 1.322174028, 1.342176389, 1.362178611, 1.382180986, 1.402183208, 1.422185569, 1.442187806, 1.462190181, 1.482192389, 1.50219475, 1.522196986, 1.542199417, 1.562201611, 1.582204028, 1.602206181, 1.622208542, 1.642210764, 1.662213125, 1.682215361, 1.702217722, 1.722219958, 1.742222306, 1.762224542, 1.782226903, 1.802229194, 1.822231514, 1.842233736, 1.862236111, 1.882238319, 1.902240681, 1.922242944, 1.942245278, 1.962247514, 1.982249875, 2.002252139, 2.022254472] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:04.202" endtime="20201112 10:17:04.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:04.197" endtime="20201112 10:17:04.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:04.206" endtime="20201112 10:17:04.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:04.210" endtime="20201112 10:17:04.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:04.208" endtime="20201112 10:17:04.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:04.205" endtime="20201112 10:17:04.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.707" endtime="20201112 10:17:04.231"></status>
</kw>
<msg timestamp="20201112 10:17:04.231" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:04.239" endtime="20201112 10:17:08.359"></status>
</kw>
<msg timestamp="20201112 10:17:08.360" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 50189795, 'wakeups': [50199863, 50209864, 50219864, 50229864, 50239864...</msg>
<status status="PASS" starttime="20201112 10:17:04.238" endtime="20201112 10:17:08.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.366" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 50189795, 'wakeups': [50199863, 50209864, 50219864, 50229864, 50239864...</msg>
<status status="PASS" starttime="20201112 10:17:08.362" endtime="20201112 10:17:08.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:08.368" endtime="20201112 10:17:08.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:04.235" endtime="20201112 10:17:08.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:04.233" endtime="20201112 10:17:08.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:08.374" level="INFO">${RESULT} = {'start-time': 50189795, 'timer-count': 8, 'wakeups': [50199863, 50209864, 50219864, 50229864, 50239864, 50249864, 50259864, 50269864, 50279864, 50289864, 50299864, 50309864, 50319864, 50329864, 50339...</msg>
<status status="PASS" starttime="20201112 10:17:08.372" endtime="20201112 10:17:08.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.378" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:08.377" endtime="20201112 10:17:08.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.380" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:08.379" endtime="20201112 10:17:08.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.375" endtime="20201112 10:17:08.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.386" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:08.385" endtime="20201112 10:17:08.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.388" level="INFO">VALUE: 50189795</msg>
<status status="PASS" starttime="20201112 10:17:08.387" endtime="20201112 10:17:08.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.382" endtime="20201112 10:17:08.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.393" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:08.392" endtime="20201112 10:17:08.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.395" level="INFO">VALUE: [50199863, 50209864, 50219864, 50229864, 50239864, 50249864, 50259864, 50269864, 50279864, 50289864, 50299864, 50309864, 50319864, 50329864, 50339864, 50349864, 50359864, 50369864, 50379864, 50389864, 50399864, 50409864, 50419864, 50429864, 50439864, 50449864, 50459864, 50469864, 50479864, 50489864, 50499864, 50509864, 50519864, 50529864, 50539864, 50549864, 50559864, 50569864, 50579864, 50589864, 50599864, 50609864, 50619864, 50629864, 50639864, 50649864, 50659864, 50669864, 50679864, 50689864, 50699864, 50709864, 50719864, 50729864, 50739864, 50749864, 50759864, 50769864, 50779864, 50789864, 50799864, 50809864, 50819864, 50829864, 50839864, 50849864, 50859864, 50869864, 50879864, 50889864, 50899864, 50909864, 50919864, 50929864, 50939864, 50949864, 50959864, 50969864, 50979864, 50989864, 50999864, 51009864, 51019864, 51029864, 51039864, 51049864, 51059864, 51069864, 51079864, 51089864, 51099864, 51109864, 51119864, 51129864, 51139864, 51149864, 51159864, 51169864, 51179864, 51189864]</msg>
<status status="PASS" starttime="20201112 10:17:08.394" endtime="20201112 10:17:08.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.389" endtime="20201112 10:17:08.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:08.402" endtime="20201112 10:17:08.693"></status>
</kw>
<msg timestamp="20201112 10:17:08.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019290514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039428931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:08.400" endtime="20201112 10:17:08.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019290514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039428931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:08.696" endtime="20201112 10:17:08.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:08.704" endtime="20201112 10:17:08.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.398" endtime="20201112 10:17:08.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.396" endtime="20201112 10:17:08.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:08.731" level="INFO">${RESULT} = {'time': [0.019290514, 0.039428931, 0.059433597, 0.079435847, 0.099438181, 0.119440403, 0.13944275, 0.159444986, 0.179447347, 0.199449583, 0.219451917, 0.239454153, 0.2594565, 0.279458736, 0.299461097...</msg>
<status status="PASS" starttime="20201112 10:17:08.707" endtime="20201112 10:17:08.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.736" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:08.735" endtime="20201112 10:17:08.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.738" level="INFO">VALUE: 0.019290514</msg>
<status status="PASS" starttime="20201112 10:17:08.737" endtime="20201112 10:17:08.738"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.732" endtime="20201112 10:17:08.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.743" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:08.742" endtime="20201112 10:17:08.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:08.745" level="INFO">VALUE: [0.039428931, 0.059433597, 0.079435847, 0.099438181, 0.119440403, 0.13944275, 0.159444986, 0.179447347, 0.199449583, 0.219451917, 0.239454153, 0.2594565, 0.279458736, 0.299461097, 0.319463319, 0.339465681, 0.359467903, 0.379470264, 0.399472486, 0.419474861, 0.439477069, 0.459479431, 0.479481736, 0.499484014, 0.51948625, 0.539488597, 0.559490833, 0.579493181, 0.599495417, 0.619497792, 0.6395, 0.659502389, 0.679504625, 0.699506958, 0.719509167, 0.739511542, 0.759513792, 0.779516125, 0.799518347, 0.819520708, 0.839522931, 0.859525306, 0.879527514, 0.899529875, 0.919532097, 0.939534458, 0.959536694, 0.979539042, 0.999541264, 1.019543625, 1.039545861, 1.059548208, 1.079550444, 1.099552819, 1.119555028, 1.139557417, 1.159559625, 1.179561972, 1.199564194, 1.219566556, 1.239568806, 1.259571139, 1.279573389, 1.299575736, 1.319577972, 1.339580306, 1.359582556, 1.379584903, 1.399587125, 1.419589486, 1.439591708, 1.459594069, 1.479596306, 1.499598653, 1.519600889, 1.53960325, 1.559605486, 1.579607819, 1.599610056, 1.619612444, 1.639614639, 1.659617, 1.679619292, 1.699621597, 1.719623819, 1.739626167, 1.759628444, 1.779630778, 1.799633, 1.819635375, 1.839637569, 1.859639944, 1.879642153, 1.899644528, 1.919646736, 1.939649167, 1.959651333, 1.979653694, 1.999655917, 2.019658361] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:08.744" endtime="20201112 10:17:08.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.739" endtime="20201112 10:17:08.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:08.748" endtime="20201112 10:17:08.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:08.752" endtime="20201112 10:17:08.771"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.750" endtime="20201112 10:17:08.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.747" endtime="20201112 10:17:08.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:04.232" endtime="20201112 10:17:08.773"></status>
</kw>
<msg timestamp="20201112 10:17:08.773" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:08.782" endtime="20201112 10:17:12.902"></status>
</kw>
<msg timestamp="20201112 10:17:12.904" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 52461293, 'wakeups': [52471362, 52481362, 52491362, 52501362, 52511362...</msg>
<status status="PASS" starttime="20201112 10:17:08.780" endtime="20201112 10:17:12.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:12.910" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 52461293, 'wakeups': [52471362, 52481362, 52491362, 52501362, 52511362...</msg>
<status status="PASS" starttime="20201112 10:17:12.906" endtime="20201112 10:17:12.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:12.912" endtime="20201112 10:17:12.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.777" endtime="20201112 10:17:12.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.775" endtime="20201112 10:17:12.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:12.924" level="INFO">${RESULT} = {'start-time': 52461293, 'timer-count': 8, 'wakeups': [52471362, 52481362, 52491362, 52501362, 52511362, 52521362, 52531362, 52541362, 52551362, 52561362, 52571362, 52581362, 52591362, 52601362, 52611...</msg>
<status status="PASS" starttime="20201112 10:17:12.920" endtime="20201112 10:17:12.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:12.931" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:12.930" endtime="20201112 10:17:12.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:12.933" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:12.932" endtime="20201112 10:17:12.933"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:12.926" endtime="20201112 10:17:12.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:12.938" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:12.937" endtime="20201112 10:17:12.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:12.940" level="INFO">VALUE: 52461293</msg>
<status status="PASS" starttime="20201112 10:17:12.939" endtime="20201112 10:17:12.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:12.934" endtime="20201112 10:17:12.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:12.945" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:12.944" endtime="20201112 10:17:12.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:12.947" level="INFO">VALUE: [52471362, 52481362, 52491362, 52501362, 52511362, 52521362, 52531362, 52541362, 52551362, 52561362, 52571362, 52581362, 52591362, 52601362, 52611362, 52621362, 52631362, 52641362, 52651362, 52661362, 52671362, 52681362, 52691362, 52701362, 52711362, 52721362, 52731362, 52741362, 52751362, 52761362, 52771362, 52781362, 52791362, 52801362, 52811362, 52821362, 52831362, 52841362, 52851362, 52861362, 52871362, 52881362, 52891362, 52901362, 52911362, 52921362, 52931362, 52941362, 52951362, 52961362, 52971362, 52981362, 52991362, 53001362, 53011362, 53021362, 53031362, 53041362, 53051362, 53061362, 53071362, 53081362, 53091362, 53101362, 53111362, 53121362, 53131362, 53141362, 53151362, 53161362, 53171362, 53181362, 53191362, 53201362, 53211362, 53221362, 53231362, 53241362, 53251362, 53261362, 53271362, 53281362, 53291362, 53301362, 53311362, 53321362, 53331362, 53341362, 53351362, 53361362, 53371362, 53381362, 53391362, 53401362, 53411362, 53421362, 53431362, 53441362, 53451362, 53461362]</msg>
<status status="PASS" starttime="20201112 10:17:12.946" endtime="20201112 10:17:12.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:12.941" endtime="20201112 10:17:12.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:12.955" endtime="20201112 10:17:13.247"></status>
</kw>
<msg timestamp="20201112 10:17:13.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020731431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0408715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:17:12.953" endtime="20201112 10:17:13.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020731431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0408715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:17:13.251" endtime="20201112 10:17:13.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:13.258" endtime="20201112 10:17:13.260"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:12.951" endtime="20201112 10:17:13.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:12.948" endtime="20201112 10:17:13.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:13.286" level="INFO">${RESULT} = {'time': [0.020731431, 0.0408715, 0.060873194, 0.080875403, 0.10087775, 0.120880014, 0.140882347, 0.160884556, 0.180886903, 0.200889125, 0.220891472, 0.240893708, 0.260896056, 0.280898278, 0.300900639...</msg>
<status status="PASS" starttime="20201112 10:17:13.262" endtime="20201112 10:17:13.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.291" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:17:13.290" endtime="20201112 10:17:13.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.293" level="INFO">VALUE: 0.020731431</msg>
<status status="PASS" starttime="20201112 10:17:13.292" endtime="20201112 10:17:13.293"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.287" endtime="20201112 10:17:13.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.298" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:13.297" endtime="20201112 10:17:13.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:13.300" level="INFO">VALUE: [0.0408715, 0.060873194, 0.080875403, 0.10087775, 0.120880014, 0.140882347, 0.160884556, 0.180886903, 0.200889125, 0.220891472, 0.240893708, 0.260896056, 0.280898278, 0.300900639, 0.320902917, 0.340905222, 0.360907444, 0.380909819, 0.400912028, 0.420914375, 0.440916597, 0.460918972, 0.480921181, 0.500923528, 0.52092575, 0.540928111, 0.560930333, 0.580932694, 0.600934903, 0.620937278, 0.640939486, 0.660941847, 0.680944069, 0.700946417, 0.720948639, 0.740951014, 0.760953222, 0.780955597, 0.800957819, 0.820960153, 0.840962375, 0.860964736, 0.880966958, 0.900969333, 0.920971542, 0.940973889, 0.960976153, 0.9809785, 1.000980694, 1.020983069, 1.040985278, 1.060987625, 1.080989931, 1.100992222, 1.120994444, 1.140996792, 1.160999014, 1.181001361, 1.201003583, 1.221005944, 1.241008181, 1.261010542, 1.281012819, 1.301015097, 1.321017333, 1.341019694, 1.361021903, 1.381024264, 1.4010265, 1.421028847, 1.441031069, 1.461033431, 1.481035639, 1.501038, 1.521040236, 1.541042667, 1.561044806, 1.581047153, 1.601049403, 1.621051736, 1.641053972, 1.661056319, 1.681058556, 1.701060889, 1.721063125, 1.741065472, 1.761067694, 1.781070056, 1.801072278, 1.821074639, 1.841076861, 1.861079208, 1.8810815, 1.901083806, 1.921086014, 1.941088375, 1.961090639, 1.981092972, 2.001095181, 2.021097542] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:13.299" endtime="20201112 10:17:13.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.294" endtime="20201112 10:17:13.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:13.303" endtime="20201112 10:17:13.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:13.307" endtime="20201112 10:17:13.326"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.305" endtime="20201112 10:17:13.326"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.302" endtime="20201112 10:17:13.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:08.774" endtime="20201112 10:17:13.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.705" endtime="20201112 10:17:13.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:59.704" endtime="20201112 10:17:13.328"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:17:13.330" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:13.339" endtime="20201112 10:17:17.459"></status>
</kw>
<msg timestamp="20201112 10:17:17.460" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 54739487, 'wakeups': [54749568, 54759568, 54769568, 54779568, 54789568...</msg>
<status status="PASS" starttime="20201112 10:17:13.337" endtime="20201112 10:17:17.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:17.466" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 54739487, 'wakeups': [54749568, 54759568, 54769568, 54779568, 54789568...</msg>
<status status="PASS" starttime="20201112 10:17:17.462" endtime="20201112 10:17:17.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:17.468" endtime="20201112 10:17:17.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.334" endtime="20201112 10:17:17.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.332" endtime="20201112 10:17:17.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:17.479" level="INFO">${RESULT} = {'start-time': 54739487, 'timer-count': 9, 'wakeups': [54749568, 54759568, 54769568, 54779568, 54789568, 54799568, 54809568, 54819568, 54829568, 54839568, 54849568, 54859568, 54869568, 54879568, 54889...</msg>
<status status="PASS" starttime="20201112 10:17:17.475" endtime="20201112 10:17:17.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:17.487" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:17.485" endtime="20201112 10:17:17.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:17.490" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:17.489" endtime="20201112 10:17:17.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.481" endtime="20201112 10:17:17.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:17.496" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:17:17.493" endtime="20201112 10:17:17.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:17.498" level="INFO">VALUE: 54739487</msg>
<status status="PASS" starttime="20201112 10:17:17.497" endtime="20201112 10:17:17.498"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.491" endtime="20201112 10:17:17.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:17.503" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:17.502" endtime="20201112 10:17:17.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:17.505" level="INFO">VALUE: [54749568, 54759568, 54769568, 54779568, 54789568, 54799568, 54809568, 54819568, 54829568, 54839568, 54849568, 54859568, 54869568, 54879568, 54889568, 54899568, 54909568, 54919568, 54929568, 54939568, 54949568, 54959568, 54969568, 54979568, 54989568, 54999568, 55009568, 55019568, 55029568, 55039568, 55049568, 55059568, 55069568, 55079568, 55089568, 55099568, 55109568, 55119568, 55129568, 55139568, 55149568, 55159568, 55169568, 55179568, 55189568, 55199568, 55209568, 55219568, 55229568, 55239568, 55249568, 55259568, 55269568, 55279568, 55289568, 55299568, 55309568, 55319568, 55329568, 55339568, 55349568, 55359568, 55369568, 55379568, 55389568, 55399568, 55409568, 55419568, 55429568, 55439568, 55449568, 55459568, 55469568, 55479568, 55489568, 55499568, 55509568, 55519568, 55529568, 55539568, 55549568, 55559568, 55569568, 55579568, 55589568, 55599568, 55609568, 55619568, 55629568, 55639568, 55649568, 55659568, 55669568, 55679568, 55689568, 55699568, 55709568, 55719568, 55729568, 55739568]</msg>
<status status="PASS" starttime="20201112 10:17:17.504" endtime="20201112 10:17:17.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.499" endtime="20201112 10:17:17.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:17.512" endtime="20201112 10:17:17.804"></status>
</kw>
<msg timestamp="20201112 10:17:17.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022561667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042725611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:17.511" endtime="20201112 10:17:17.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:17.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022561667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042725611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:17.808" endtime="20201112 10:17:17.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:17.816" endtime="20201112 10:17:17.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.508" endtime="20201112 10:17:17.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.506" endtime="20201112 10:17:17.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:17.844" level="INFO">${RESULT} = {'time': [0.022561667, 0.042725611, 0.062728042, 0.08273025, 0.102732597, 0.122734819, 0.142737167, 0.162739403, 0.182741736, 0.202743972, 0.222746306, 0.242748583, 0.262750875, 0.282753097, 0.3027554...</msg>
<status status="PASS" starttime="20201112 10:17:17.820" endtime="20201112 10:17:17.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:17.848" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:17:17.847" endtime="20201112 10:17:17.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:17.850" level="INFO">VALUE: 0.022561667</msg>
<status status="PASS" starttime="20201112 10:17:17.849" endtime="20201112 10:17:17.850"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.844" endtime="20201112 10:17:17.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:17.855" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:17.854" endtime="20201112 10:17:17.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:17.858" level="INFO">VALUE: [0.042725611, 0.062728042, 0.08273025, 0.102732597, 0.122734819, 0.142737167, 0.162739403, 0.182741736, 0.202743972, 0.222746306, 0.242748583, 0.262750875, 0.282753097, 0.302755444, 0.322757667, 0.342760014, 0.36276225, 0.382764611, 0.402766889, 0.422769167, 0.442771389, 0.462773736, 0.482775972, 0.502778306, 0.522780542, 0.542782889, 0.562785097, 0.582787458, 0.602789722, 0.622792111, 0.642794236, 0.662796597, 0.682798819, 0.702801167, 0.722803389, 0.742805736, 0.762808028, 0.782810306, 0.802812528, 0.822814875, 0.842817125, 0.862819458, 0.882821694, 0.902824042, 0.922826264, 0.942828653, 0.962830819, 0.982833167, 1.002835403, 1.022837736, 1.042839972, 1.062842361, 1.082844542, 1.102846889, 1.122849111, 1.142851472, 1.162853681, 1.182856028, 1.202858292, 1.222860611, 1.242862819, 1.262865167, 1.282867417, 1.30286975, 1.322871986, 1.342874333, 1.362876569, 1.382878889, 1.402881125, 1.422883472, 1.442885681, 1.462888042, 1.48289025, 1.502892611, 1.522894833, 1.542897181, 1.562899403, 1.58290175, 1.602903986, 1.622906319, 1.642908542, 1.662910903, 1.682913125, 1.702915472, 1.722917708, 1.742920042, 1.762922264, 1.782924611, 1.802926847, 1.822929181, 1.842931403, 1.862933764, 1.882935986, 1.902938347, 1.922940556, 1.942942903, 1.962945125, 1.982947486, 2.002949708, 2.022952042] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:17.857" endtime="20201112 10:17:17.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.851" endtime="20201112 10:17:17.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:17.861" endtime="20201112 10:17:17.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:17.865" endtime="20201112 10:17:17.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.863" endtime="20201112 10:17:17.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.860" endtime="20201112 10:17:17.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.331" endtime="20201112 10:17:17.885"></status>
</kw>
<msg timestamp="20201112 10:17:17.885" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:17.893" endtime="20201112 10:17:22.013"></status>
</kw>
<msg timestamp="20201112 10:17:22.014" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 57016801, 'wakeups': [57026882, 57036882, 57046882, 57056882, 57066882...</msg>
<status status="PASS" starttime="20201112 10:17:17.892" endtime="20201112 10:17:22.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.020" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 57016801, 'wakeups': [57026882, 57036882, 57046882, 57056882, 57066882...</msg>
<status status="PASS" starttime="20201112 10:17:22.016" endtime="20201112 10:17:22.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:22.022" endtime="20201112 10:17:22.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.889" endtime="20201112 10:17:22.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.887" endtime="20201112 10:17:22.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:22.033" level="INFO">${RESULT} = {'start-time': 57016801, 'timer-count': 9, 'wakeups': [57026882, 57036882, 57046882, 57056882, 57066882, 57076882, 57086882, 57096882, 57106882, 57116882, 57126882, 57136882, 57146882, 57156882, 57166...</msg>
<status status="PASS" starttime="20201112 10:17:22.029" endtime="20201112 10:17:22.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.042" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:22.040" endtime="20201112 10:17:22.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.046" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:22.044" endtime="20201112 10:17:22.047"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.035" endtime="20201112 10:17:22.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.051" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:17:22.050" endtime="20201112 10:17:22.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.053" level="INFO">VALUE: 57016801</msg>
<status status="PASS" starttime="20201112 10:17:22.052" endtime="20201112 10:17:22.054"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.048" endtime="20201112 10:17:22.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.058" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:22.057" endtime="20201112 10:17:22.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.060" level="INFO">VALUE: [57026882, 57036882, 57046882, 57056882, 57066882, 57076882, 57086882, 57096882, 57106882, 57116882, 57126882, 57136882, 57146882, 57156882, 57166882, 57176882, 57186882, 57196882, 57206882, 57216882, 57226882, 57236882, 57246882, 57256882, 57266882, 57276882, 57286882, 57296882, 57306882, 57316882, 57326882, 57336882, 57346882, 57356882, 57366882, 57376882, 57386882, 57396882, 57406882, 57416882, 57426882, 57436882, 57446882, 57456882, 57466882, 57476882, 57486882, 57496882, 57506882, 57516882, 57526882, 57536882, 57546882, 57556882, 57566882, 57576882, 57586882, 57596882, 57606882, 57616882, 57626882, 57636882, 57646882, 57656882, 57666882, 57676882, 57686882, 57696882, 57706882, 57716882, 57726882, 57736882, 57746882, 57756882, 57766882, 57776882, 57786882, 57796882, 57806882, 57816882, 57826882, 57836882, 57846882, 57856882, 57866882, 57876882, 57886882, 57896882, 57906882, 57916882, 57926882, 57936882, 57946882, 57956882, 57966882, 57976882, 57986882, 57996882, 58006882, 58016882]</msg>
<status status="PASS" starttime="20201112 10:17:22.059" endtime="20201112 10:17:22.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.055" endtime="20201112 10:17:22.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:22.068" endtime="20201112 10:17:22.360"></status>
</kw>
<msg timestamp="20201112 10:17:22.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019243861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039407778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:22.066" endtime="20201112 10:17:22.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019243861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039407778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:22.363" endtime="20201112 10:17:22.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:22.371" endtime="20201112 10:17:22.373"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.064" endtime="20201112 10:17:22.373"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.062" endtime="20201112 10:17:22.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:22.397" level="INFO">${RESULT} = {'time': [0.019243861, 0.039407778, 0.059410222, 0.079412431, 0.099414778, 0.119417, 0.139419347, 0.159421542, 0.179423903, 0.199426111, 0.219428458, 0.239430681, 0.259433028, 0.27943525, 0.299437583,...</msg>
<status status="PASS" starttime="20201112 10:17:22.374" endtime="20201112 10:17:22.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.402" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:17:22.401" endtime="20201112 10:17:22.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.404" level="INFO">VALUE: 0.019243861</msg>
<status status="PASS" starttime="20201112 10:17:22.403" endtime="20201112 10:17:22.404"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.398" endtime="20201112 10:17:22.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.409" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:22.408" endtime="20201112 10:17:22.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:22.412" level="INFO">VALUE: [0.039407778, 0.059410222, 0.079412431, 0.099414778, 0.119417, 0.139419347, 0.159421542, 0.179423903, 0.199426111, 0.219428458, 0.239430681, 0.259433028, 0.27943525, 0.299437583, 0.319439806, 0.339442153, 0.359444375, 0.379446708, 0.399448931, 0.419451347, 0.439453542, 0.459455847, 0.479458139, 0.499460431, 0.519462625, 0.539464972, 0.559467194, 0.579469542, 0.599471778, 0.619474111, 0.639476333, 0.659478681, 0.679480889, 0.699483236, 0.719485472, 0.739487806, 0.759490028, 0.779492375, 0.799494597, 0.819496931, 0.839499208, 0.8595015, 0.879503736, 0.899506069, 0.919508333, 0.939510653, 0.959512847, 0.979515194, 0.999517431, 1.019519764, 1.039522, 1.059524361, 1.079526556, 1.099528889, 1.119531111, 1.139533472, 1.159535681, 1.179538056, 1.19954025, 1.219542597, 1.239544819, 1.259547167, 1.279549375, 1.299551722, 1.319553958, 1.339556292, 1.359558528, 1.379560861, 1.399563083, 1.419565431, 1.439567653, 1.459569986, 1.479572208, 1.499574569, 1.519576778, 1.539579194, 1.559581347, 1.579583722, 1.599585917, 1.619588264, 1.639590472, 1.659592833, 1.679595042, 1.699597389, 1.719599611, 1.739601958, 1.759604181, 1.779606556, 1.799608736, 1.819611083, 1.839613319, 1.859615653, 1.879617889, 1.899620222, 1.9196225, 1.939624819, 1.959627028, 1.979629361, 1.999631597, 2.019633944] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:22.411" endtime="20201112 10:17:22.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.405" endtime="20201112 10:17:22.413"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:22.415" endtime="20201112 10:17:22.416"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:22.418" endtime="20201112 10:17:22.437"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.417" endtime="20201112 10:17:22.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.413" endtime="20201112 10:17:22.439"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:17.886" endtime="20201112 10:17:22.439"></status>
</kw>
<msg timestamp="20201112 10:17:22.439" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:22.448" endtime="20201112 10:17:26.568"></status>
</kw>
<msg timestamp="20201112 10:17:26.569" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 59294054, 'wakeups': [59304135, 59314135, 59324135, 59334135, 59344135...</msg>
<status status="PASS" starttime="20201112 10:17:22.445" endtime="20201112 10:17:26.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.575" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 59294054, 'wakeups': [59304135, 59314135, 59324135, 59334135, 59344135...</msg>
<status status="PASS" starttime="20201112 10:17:26.571" endtime="20201112 10:17:26.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:26.577" endtime="20201112 10:17:26.580"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.443" endtime="20201112 10:17:26.581"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.441" endtime="20201112 10:17:26.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:26.588" level="INFO">${RESULT} = {'start-time': 59294054, 'timer-count': 9, 'wakeups': [59304135, 59314135, 59324135, 59334135, 59344135, 59354135, 59364135, 59374135, 59384135, 59394135, 59404135, 59414135, 59424135, 59434135, 59444...</msg>
<status status="PASS" starttime="20201112 10:17:26.584" endtime="20201112 10:17:26.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.596" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:26.594" endtime="20201112 10:17:26.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.600" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:26.598" endtime="20201112 10:17:26.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.590" endtime="20201112 10:17:26.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.608" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:17:26.607" endtime="20201112 10:17:26.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.610" level="INFO">VALUE: 59294054</msg>
<status status="PASS" starttime="20201112 10:17:26.609" endtime="20201112 10:17:26.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.603" endtime="20201112 10:17:26.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.615" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:26.614" endtime="20201112 10:17:26.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.617" level="INFO">VALUE: [59304135, 59314135, 59324135, 59334135, 59344135, 59354135, 59364135, 59374135, 59384135, 59394135, 59404135, 59414135, 59424135, 59434135, 59444135, 59454135, 59464135, 59474135, 59484135, 59494135, 59504135, 59514135, 59524135, 59534135, 59544135, 59554135, 59564135, 59574135, 59584135, 59594135, 59604135, 59614135, 59624135, 59634135, 59644135, 59654135, 59664135, 59674135, 59684135, 59694135, 59704135, 59714135, 59724135, 59734135, 59744135, 59754135, 59764135, 59774135, 59784135, 59794135, 59804135, 59814135, 59824135, 59834135, 59844135, 59854135, 59864135, 59874135, 59884135, 59894135, 59904135, 59914135, 59924135, 59934135, 59944135, 59954135, 59964135, 59974135, 59984135, 59994135, 60004135, 60014135, 60024135, 60034135, 60044135, 60054135, 60064135, 60074135, 60084135, 60094135, 60104135, 60114135, 60124135, 60134135, 60144135, 60154135, 60164135, 60174135, 60184135, 60194135, 60204135, 60214135, 60224135, 60234135, 60244135, 60254135, 60264135, 60274135, 60284135, 60294135]</msg>
<status status="PASS" starttime="20201112 10:17:26.616" endtime="20201112 10:17:26.618"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.611" endtime="20201112 10:17:26.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:26.625" endtime="20201112 10:17:26.915"></status>
</kw>
<msg timestamp="20201112 10:17:26.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020262431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040425708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:26.623" endtime="20201112 10:17:26.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020262431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040425708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:26.919" endtime="20201112 10:17:26.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:26.926" endtime="20201112 10:17:26.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.621" endtime="20201112 10:17:26.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.619" endtime="20201112 10:17:26.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:26.954" level="INFO">${RESULT} = {'time': [0.020262431, 0.040425708, 0.060428167, 0.080430403, 0.100432764, 0.120435, 0.140437375, 0.160439625, 0.180441958, 0.200444194, 0.220446556, 0.240448819, 0.260451181, 0.280453417, 0.300455792...</msg>
<status status="PASS" starttime="20201112 10:17:26.930" endtime="20201112 10:17:26.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.959" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:17:26.958" endtime="20201112 10:17:26.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.961" level="INFO">VALUE: 0.020262431</msg>
<status status="PASS" starttime="20201112 10:17:26.960" endtime="20201112 10:17:26.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.955" endtime="20201112 10:17:26.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.966" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:26.965" endtime="20201112 10:17:26.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:26.968" level="INFO">VALUE: [0.040425708, 0.060428167, 0.080430403, 0.100432764, 0.120435, 0.140437375, 0.160439625, 0.180441958, 0.200444194, 0.220446556, 0.240448819, 0.260451181, 0.280453417, 0.300455792, 0.320458042, 0.340460375, 0.360462625, 0.380464972, 0.400467222, 0.420469583, 0.440471806, 0.460474181, 0.480476431, 0.500478792, 0.520481014, 0.540483417, 0.560485611, 0.580487986, 0.600490222, 0.620492583, 0.640494833, 0.660497181, 0.680499431, 0.700501792, 0.720504056, 0.740506389, 0.760508625, 0.780510986, 0.800513222, 0.820515597, 0.840517833, 0.860520208, 0.880522431, 0.900524792, 0.920527042, 0.940529417, 0.960531639, 0.980534, 1.00053625, 1.020538597, 1.040540861, 1.060543208, 1.080545458, 1.100547806, 1.120550056, 1.140552431, 1.160554667, 1.180557014, 1.200559264, 1.220561611, 1.240563847, 1.260566222, 1.280568472, 1.300570819, 1.320573056, 1.340575444, 1.360577681, 1.380580042, 1.400582278, 1.420584625, 1.440586875, 1.46058925, 1.480591472, 1.500593833, 1.520596069, 1.540598528, 1.560600681, 1.580603042, 1.600605278, 1.620607653, 1.640609889, 1.660612264, 1.680614486, 1.700616861, 1.720619097, 1.740621458, 1.760623694, 1.780626069, 1.800628292, 1.820630722, 1.840632903, 1.860635264, 1.8806375, 1.900639875, 1.920642111, 1.940644472, 1.960646708, 1.980649097, 2.000651319, 2.020653681] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:26.967" endtime="20201112 10:17:26.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.962" endtime="20201112 10:17:26.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:26.971" endtime="20201112 10:17:26.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:26.975" endtime="20201112 10:17:26.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.973" endtime="20201112 10:17:26.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.970" endtime="20201112 10:17:26.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:22.440" endtime="20201112 10:17:26.996"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.329" endtime="20201112 10:17:26.996"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:13.328" endtime="20201112 10:17:26.996"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:17:26.999" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:27.007" endtime="20201112 10:17:31.127"></status>
</kw>
<msg timestamp="20201112 10:17:31.128" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 61573362, 'wakeups': [61583454, 61593455, 61603455, 61613455, 616234...</msg>
<status status="PASS" starttime="20201112 10:17:27.005" endtime="20201112 10:17:31.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:31.134" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 61573362, 'wakeups': [61583454, 61593455, 61603455, 61613455, 616234...</msg>
<status status="PASS" starttime="20201112 10:17:31.130" endtime="20201112 10:17:31.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:31.136" endtime="20201112 10:17:31.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:27.003" endtime="20201112 10:17:31.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:27.001" endtime="20201112 10:17:31.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:31.147" level="INFO">${RESULT} = {'start-time': 61573362, 'timer-count': 10, 'wakeups': [61583454, 61593455, 61603455, 61613455, 61623455, 61633455, 61643455, 61653455, 61663455, 61673455, 61683455, 61693455, 61703455, 61713455, 6172...</msg>
<status status="PASS" starttime="20201112 10:17:31.143" endtime="20201112 10:17:31.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:31.155" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:31.153" endtime="20201112 10:17:31.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:31.159" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:31.157" endtime="20201112 10:17:31.160"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:31.148" endtime="20201112 10:17:31.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:31.168" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:17:31.167" endtime="20201112 10:17:31.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:31.170" level="INFO">VALUE: 61573362</msg>
<status status="PASS" starttime="20201112 10:17:31.169" endtime="20201112 10:17:31.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:31.162" endtime="20201112 10:17:31.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:31.175" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:31.174" endtime="20201112 10:17:31.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:31.177" level="INFO">VALUE: [61583454, 61593455, 61603455, 61613455, 61623455, 61633455, 61643455, 61653455, 61663455, 61673455, 61683455, 61693455, 61703455, 61713455, 61723455, 61733455, 61743455, 61753455, 61763455, 61773455, 61783455, 61793455, 61803455, 61813455, 61823455, 61833455, 61843455, 61853455, 61863455, 61873455, 61883455, 61893455, 61903455, 61913455, 61923455, 61933455, 61943455, 61953455, 61963455, 61973455, 61983455, 61993455, 62003455, 62013455, 62023455, 62033455, 62043455, 62053455, 62063455, 62073455, 62083455, 62093455, 62103455, 62113455, 62123455, 62133455, 62143455, 62153455, 62163455, 62173455, 62183455, 62193455, 62203455, 62213455, 62223455, 62233455, 62243455, 62253455, 62263455, 62273455, 62283455, 62293455, 62303455, 62313455, 62323455, 62333455, 62343455, 62353455, 62363455, 62373455, 62383455, 62393455, 62403455, 62413455, 62423455, 62433455, 62443455, 62453455, 62463455, 62473455, 62483455, 62493455, 62503455, 62513455, 62523455, 62533455, 62543455, 62553455, 62563455, 62573455]</msg>
<status status="PASS" starttime="20201112 10:17:31.176" endtime="20201112 10:17:31.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:31.171" endtime="20201112 10:17:31.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:31.185" endtime="20201112 10:17:31.475"></status>
</kw>
<msg timestamp="20201112 10:17:31.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042311583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:31.183" endtime="20201112 10:17:31.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:31.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042311583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:31.479" endtime="20201112 10:17:31.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:31.486" endtime="20201112 10:17:31.488"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:31.180" endtime="20201112 10:17:31.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:31.178" endtime="20201112 10:17:31.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:31.513" level="INFO">${RESULT} = {'time': [0.022125097, 0.042311583, 0.062316292, 0.082318528, 0.102320889, 0.122323111, 0.142325472, 0.162327708, 0.182330069, 0.202332306, 0.222334667, 0.242336903, 0.26233925, 0.2823415, 0.302343847...</msg>
<status status="PASS" starttime="20201112 10:17:31.490" endtime="20201112 10:17:31.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:31.518" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:17:31.517" endtime="20201112 10:17:31.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:31.520" level="INFO">VALUE: 0.022125097</msg>
<status status="PASS" starttime="20201112 10:17:31.519" endtime="20201112 10:17:31.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:31.514" endtime="20201112 10:17:31.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:31.526" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:31.525" endtime="20201112 10:17:31.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:31.528" level="INFO">VALUE: [0.042311583, 0.062316292, 0.082318528, 0.102320889, 0.122323111, 0.142325472, 0.162327708, 0.182330069, 0.202332306, 0.222334667, 0.242336903, 0.26233925, 0.2823415, 0.302343847, 0.322346083, 0.342348444, 0.362350667, 0.382353042, 0.402355278, 0.422357639, 0.442359861, 0.462362222, 0.482364458, 0.502366819, 0.522369125, 0.542371431, 0.562373653, 0.582376028, 0.60237825, 0.622380597, 0.642382847, 0.662385222, 0.682387486, 0.702389792, 0.722392097, 0.742394417, 0.762396639, 0.782398986, 0.802401222, 0.822403583, 0.842405819, 0.862408181, 0.882410403, 0.902412764, 0.922415, 0.942417375, 0.962419597, 0.982421972, 1.002424236, 1.022426556, 1.042428792, 1.062431167, 1.082433403, 1.10243575, 1.122437986, 1.142440347, 1.162442569, 1.182444931, 1.202447181, 1.222449528, 1.242451764, 1.262454181, 1.282456403, 1.302458792, 1.322460958, 1.342463347, 1.362465569, 1.382467931, 1.402470208, 1.422472569, 1.442474736, 1.462477111, 1.482479333, 1.502481708, 1.522483931, 1.542486306, 1.562488528, 1.582490903, 1.602493181, 1.6224955, 1.642497722, 1.662500083, 1.682502375, 1.702504736, 1.722506903, 1.742509278, 1.7625115, 1.782513861, 1.802516111, 1.822518472, 1.842520708, 1.862523056, 1.882525292, 1.902527667, 1.922529889, 1.942532264, 1.962534528, 1.982536861, 2.002539083, 2.022541444] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:31.527" endtime="20201112 10:17:31.529"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:31.522" endtime="20201112 10:17:31.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:31.531" endtime="20201112 10:17:31.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:31.535" endtime="20201112 10:17:31.554"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:31.533" endtime="20201112 10:17:31.555"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:31.530" endtime="20201112 10:17:31.555"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.999" endtime="20201112 10:17:31.555"></status>
</kw>
<msg timestamp="20201112 10:17:31.556" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:31.564" endtime="20201112 10:17:35.667"></status>
</kw>
<msg timestamp="20201112 10:17:35.668" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 63851798, 'wakeups': [63861891, 63871891, 63881891, 63891891, 639018...</msg>
<status status="PASS" starttime="20201112 10:17:31.562" endtime="20201112 10:17:35.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.671" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 63851798, 'wakeups': [63861891, 63871891, 63881891, 63891891, 639018...</msg>
<status status="PASS" starttime="20201112 10:17:35.669" endtime="20201112 10:17:35.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:35.672" endtime="20201112 10:17:35.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:31.560" endtime="20201112 10:17:35.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:31.558" endtime="20201112 10:17:35.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:35.678" level="INFO">${RESULT} = {'start-time': 63851798, 'timer-count': 10, 'wakeups': [63861891, 63871891, 63881891, 63891891, 63901891, 63911891, 63921891, 63931891, 63941891, 63951891, 63961891, 63971891, 63981891, 63991891, 6400...</msg>
<status status="PASS" starttime="20201112 10:17:35.676" endtime="20201112 10:17:35.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.682" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:35.681" endtime="20201112 10:17:35.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.684" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:35.683" endtime="20201112 10:17:35.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:35.678" endtime="20201112 10:17:35.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.689" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:17:35.688" endtime="20201112 10:17:35.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.691" level="INFO">VALUE: 63851798</msg>
<status status="PASS" starttime="20201112 10:17:35.690" endtime="20201112 10:17:35.691"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:35.685" endtime="20201112 10:17:35.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.696" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:35.695" endtime="20201112 10:17:35.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:35.698" level="INFO">VALUE: [63861891, 63871891, 63881891, 63891891, 63901891, 63911891, 63921891, 63931891, 63941891, 63951891, 63961891, 63971891, 63981891, 63991891, 64001891, 64011891, 64021891, 64031891, 64041891, 64051891, 64061891, 64071891, 64081891, 64091891, 64101891, 64111891, 64121891, 64131891, 64141891, 64151891, 64161891, 64171891, 64181891, 64191891, 64201891, 64211891, 64221891, 64231891, 64241891, 64251891, 64261891, 64271891, 64281891, 64291891, 64301891, 64311891, 64321891, 64331891, 64341891, 64351891, 64361891, 64371891, 64381891, 64391891, 64401891, 64411891, 64421891, 64431891, 64441891, 64451891, 64461891, 64471891, 64481891, 64491891, 64501891, 64511891, 64521891, 64531891, 64541891, 64551891, 64561891, 64571891, 64581891, 64591891, 64601891, 64611891, 64621891, 64631891, 64641891, 64651891, 64661891, 64671891, 64681891, 64691891, 64701891, 64711891, 64721891, 64731891, 64741891, 64751891, 64761891, 64771891, 64781891, 64791891, 64801891, 64811891, 64821891, 64831891, 64841891, 64851891]</msg>
<status status="PASS" starttime="20201112 10:17:35.697" endtime="20201112 10:17:35.698"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:35.692" endtime="20201112 10:17:35.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:35.706" endtime="20201112 10:17:35.996"></status>
</kw>
<msg timestamp="20201112 10:17:35.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019284556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039472361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:35.704" endtime="20201112 10:17:35.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:36.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019284556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039472361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:36.000" endtime="20201112 10:17:36.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:36.008" endtime="20201112 10:17:36.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:35.701" endtime="20201112 10:17:36.010"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:35.699" endtime="20201112 10:17:36.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:36.035" level="INFO">${RESULT} = {'time': [0.019284556, 0.039472361, 0.059475069, 0.079477306, 0.099479653, 0.119481889, 0.139484236, 0.159486472, 0.179488819, 0.199491069, 0.219493403, 0.239495653, 0.259497986, 0.279500236, 0.299502...</msg>
<status status="PASS" starttime="20201112 10:17:36.011" endtime="20201112 10:17:36.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:36.039" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:17:36.038" endtime="20201112 10:17:36.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:36.042" level="INFO">VALUE: 0.019284556</msg>
<status status="PASS" starttime="20201112 10:17:36.041" endtime="20201112 10:17:36.042"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:36.036" endtime="20201112 10:17:36.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:36.047" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:36.046" endtime="20201112 10:17:36.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:36.049" level="INFO">VALUE: [0.039472361, 0.059475069, 0.079477306, 0.099479653, 0.119481889, 0.139484236, 0.159486472, 0.179488819, 0.199491069, 0.219493403, 0.239495653, 0.259497986, 0.279500236, 0.299502597, 0.319504819, 0.339507167, 0.359509403, 0.379511778, 0.399513986, 0.419516333, 0.439518569, 0.459520931, 0.479523167, 0.499525514, 0.51952775, 0.539530111, 0.559532333, 0.579534694, 0.599536931, 0.619539306, 0.6395415, 0.659543861, 0.679546097, 0.699548458, 0.719550681, 0.739553056, 0.759555278, 0.779557625, 0.799559875, 0.819562222, 0.839564444, 0.859566806, 0.879569042, 0.899571403, 0.919573625, 0.939575986, 0.959578208, 0.979580625, 0.999582806, 1.019585153, 1.039587403, 1.059589736, 1.079591972, 1.099594333, 1.119596556, 1.139598917, 1.159601153, 1.1796035, 1.19960575, 1.219608097, 1.239610333, 1.259612681, 1.279614917, 1.299617278, 1.3196195, 1.339621875, 1.359624083, 1.379626444, 1.399628681, 1.419631042, 1.439633278, 1.459635639, 1.479637847, 1.499640264, 1.519642458, 1.539644792, 1.559647028, 1.579649403, 1.599651611, 1.619653986, 1.639656208, 1.659658569, 1.679660792, 1.699663153, 1.719665389, 1.739667736, 1.759669986, 1.779672333, 1.799674556, 1.819676917, 1.839679167, 1.8596815, 1.879683736, 1.899686097, 1.919688319, 1.939690681, 1.959692931, 1.979695278, 1.9996975, 2.019699861] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:36.048" endtime="20201112 10:17:36.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:36.043" endtime="20201112 10:17:36.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:36.052" endtime="20201112 10:17:36.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:36.055" endtime="20201112 10:17:36.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:36.054" endtime="20201112 10:17:36.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:36.050" endtime="20201112 10:17:36.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:31.556" endtime="20201112 10:17:36.076"></status>
</kw>
<msg timestamp="20201112 10:17:36.076" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:36.085" endtime="20201112 10:17:40.205"></status>
</kw>
<msg timestamp="20201112 10:17:40.207" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 66112489, 'wakeups': [66122582, 66132582, 66142582, 66152582, 661625...</msg>
<status status="PASS" starttime="20201112 10:17:36.083" endtime="20201112 10:17:40.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.213" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 66112489, 'wakeups': [66122582, 66132582, 66142582, 66152582, 661625...</msg>
<status status="PASS" starttime="20201112 10:17:40.209" endtime="20201112 10:17:40.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:40.215" endtime="20201112 10:17:40.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:36.080" endtime="20201112 10:17:40.219"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:36.078" endtime="20201112 10:17:40.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:40.226" level="INFO">${RESULT} = {'start-time': 66112489, 'timer-count': 10, 'wakeups': [66122582, 66132582, 66142582, 66152582, 66162582, 66172582, 66182582, 66192582, 66202582, 66212582, 66222582, 66232582, 66242582, 66252582, 6626...</msg>
<status status="PASS" starttime="20201112 10:17:40.222" endtime="20201112 10:17:40.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.233" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:17:40.232" endtime="20201112 10:17:40.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.235" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:17:40.234" endtime="20201112 10:17:40.235"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.228" endtime="20201112 10:17:40.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.240" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:17:40.239" endtime="20201112 10:17:40.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.242" level="INFO">VALUE: 66112489</msg>
<status status="PASS" starttime="20201112 10:17:40.241" endtime="20201112 10:17:40.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.237" endtime="20201112 10:17:40.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.247" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:40.246" endtime="20201112 10:17:40.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.249" level="INFO">VALUE: [66122582, 66132582, 66142582, 66152582, 66162582, 66172582, 66182582, 66192582, 66202582, 66212582, 66222582, 66232582, 66242582, 66252582, 66262582, 66272582, 66282582, 66292582, 66302582, 66312582, 66322582, 66332582, 66342582, 66352582, 66362582, 66372582, 66382582, 66392582, 66402582, 66412582, 66422582, 66432582, 66442582, 66452582, 66462582, 66472582, 66482582, 66492582, 66502582, 66512582, 66522582, 66532582, 66542582, 66552582, 66562582, 66572582, 66582582, 66592582, 66602582, 66612582, 66622582, 66632582, 66642582, 66652582, 66662582, 66672582, 66682582, 66692582, 66702582, 66712582, 66722582, 66732582, 66742582, 66752582, 66762582, 66772582, 66782582, 66792582, 66802582, 66812582, 66822582, 66832582, 66842582, 66852582, 66862582, 66872582, 66882582, 66892582, 66902582, 66912582, 66922582, 66932582, 66942582, 66952582, 66962582, 66972582, 66982582, 66992582, 67002582, 67012582, 67022582, 67032582, 67042582, 67052582, 67062582, 67072582, 67082582, 67092582, 67102582, 67112582]</msg>
<status status="PASS" starttime="20201112 10:17:40.248" endtime="20201112 10:17:40.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.244" endtime="20201112 10:17:40.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:40.257" endtime="20201112 10:17:40.547"></status>
</kw>
<msg timestamp="20201112 10:17:40.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020228958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040416083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:40.255" endtime="20201112 10:17:40.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020228958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040416083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:17:40.550" endtime="20201112 10:17:40.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:40.558" endtime="20201112 10:17:40.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.252" endtime="20201112 10:17:40.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.251" endtime="20201112 10:17:40.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:17:40.585" level="INFO">${RESULT} = {'time': [0.020228958, 0.040416083, 0.060418861, 0.080421014, 0.100423375, 0.120425597, 0.140427944, 0.160430167, 0.180432528, 0.20043475, 0.220437125, 0.240439389, 0.260441681, 0.280443917, 0.3004462...</msg>
<status status="PASS" starttime="20201112 10:17:40.561" endtime="20201112 10:17:40.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.589" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:17:40.588" endtime="20201112 10:17:40.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.592" level="INFO">VALUE: 0.020228958</msg>
<status status="PASS" starttime="20201112 10:17:40.591" endtime="20201112 10:17:40.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.586" endtime="20201112 10:17:40.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.597" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:17:40.596" endtime="20201112 10:17:40.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:17:40.599" level="INFO">VALUE: [0.040416083, 0.060418861, 0.080421014, 0.100423375, 0.120425597, 0.140427944, 0.160430167, 0.180432528, 0.20043475, 0.220437125, 0.240439389, 0.260441681, 0.280443917, 0.300446264, 0.320448486, 0.340450847, 0.360453069, 0.380455444, 0.400457667, 0.420460014, 0.44046225, 0.460464611, 0.480466819, 0.500469194, 0.520471417, 0.54047375, 0.560476, 0.580478389, 0.600480556, 0.620482931, 0.640485139, 0.660487514, 0.680489736, 0.700492097, 0.720494306, 0.740496653, 0.760498903, 0.780501236, 0.800503472, 0.820505819, 0.840508069, 0.860510417, 0.880512694, 0.900515, 0.920517222, 0.940519583, 0.960521792, 0.980524167, 1.000526375, 1.020528722, 1.040530972, 1.060533306, 1.080535542, 1.100537889, 1.120540111, 1.140542472, 1.160544694, 1.180547069, 1.200549292, 1.220551653, 1.240553861, 1.260556236, 1.280558444, 1.300560819, 1.320563042, 1.340565389, 1.360567611, 1.380569972, 1.400572194, 1.420574542, 1.440576778, 1.460579139, 1.480581417, 1.500583708, 1.520585958, 1.540588292, 1.560590583, 1.580592889, 1.600595111, 1.620597486, 1.640599708, 1.660602056, 1.680604264, 1.700606639, 1.720608917, 1.740611222, 1.760613444, 1.780615792, 1.800618028, 1.820620375, 1.840622667, 1.860625014, 1.880627181, 1.900629583, 1.920631764, 1.940634139, 1.960636347, 1.980638722, 2.000640944, 2.020643292] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:17:40.598" endtime="20201112 10:17:40.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.593" endtime="20201112 10:17:40.600"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:17:40.602" endtime="20201112 10:17:40.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:17:40.606" endtime="20201112 10:17:40.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.604" endtime="20201112 10:17:40.626"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:40.601" endtime="20201112 10:17:40.626"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:36.077" endtime="20201112 10:17:40.626"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.997" endtime="20201112 10:17:40.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:17:26.996" endtime="20201112 10:17:40.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.229" endtime="20201112 10:17:40.627"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201112 10:15:24.151" endtime="20201112 10:17:40.628" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:15:22.753" endtime="20201112 10:17:40.631"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201112 10:13:35.630" endtime="20201112 10:17:40.647"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
