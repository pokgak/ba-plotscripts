<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201112 12:42:34.411" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.638" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:42:35.654" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:42:37.575" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:42:35.634" endtime="20201112 12:42:37.576"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.582" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:42:37.578" endtime="20201112 12:42:37.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.631" endtime="20201112 12:42:37.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:37.588" endtime="20201112 12:42:37.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.586" endtime="20201112 12:42:37.921"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.952" endtime="20201112 12:42:37.968"></status>
</kw>
<msg timestamp="20201112 12:42:37.969" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.949" endtime="20201112 12:42:37.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.976" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.972" endtime="20201112 12:42:37.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.983" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:37.978" endtime="20201112 12:42:37.984"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:37.943" endtime="20201112 12:42:37.986"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:37.936" endtime="20201112 12:42:37.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.933" endtime="20201112 12:42:37.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:37.998" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:37.996" endtime="20201112 12:42:37.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.990" endtime="20201112 12:42:37.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.931" endtime="20201112 12:42:38.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.930" endtime="20201112 12:42:38.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.002" endtime="20201112 12:42:38.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.926" endtime="20201112 12:42:38.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.008" endtime="20201112 12:42:38.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.922" endtime="20201112 12:42:38.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.627" endtime="20201112 12:42:38.014"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:38.029" endtime="20201112 12:42:38.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.025" endtime="20201112 12:42:38.052"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.088" endtime="20201112 12:42:38.103"></status>
</kw>
<msg timestamp="20201112 12:42:38.104" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.084" endtime="20201112 12:42:38.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.111" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.106" endtime="20201112 12:42:38.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.117" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:38.113" endtime="20201112 12:42:38.118"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:38.077" endtime="20201112 12:42:38.120"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:38.071" endtime="20201112 12:42:38.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.067" endtime="20201112 12:42:38.122"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:38.130" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:38.129" endtime="20201112 12:42:38.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.124" endtime="20201112 12:42:38.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.065" endtime="20201112 12:42:38.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.062" endtime="20201112 12:42:38.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.133" endtime="20201112 12:42:38.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.058" endtime="20201112 12:42:38.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.054" endtime="20201112 12:42:38.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.023" endtime="20201112 12:42:38.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.158" endtime="20201112 12:42:38.168"></status>
</kw>
<msg timestamp="20201112 12:42:38.170" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.155" endtime="20201112 12:42:38.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.176" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.172" endtime="20201112 12:42:38.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.178" endtime="20201112 12:42:38.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.148" endtime="20201112 12:42:38.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.143" endtime="20201112 12:42:38.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.196" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 12:42:38.194" endtime="20201112 12:42:38.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.201" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 12:42:38.199" endtime="20201112 12:42:38.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.187" endtime="20201112 12:42:38.203"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:38.015" endtime="20201112 12:42:38.205" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:42:34.670" endtime="20201112 12:42:38.212"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.345" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:42:38.360" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:42:40.278" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:42:38.342" endtime="20201112 12:42:40.280"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.285" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:42:40.282" endtime="20201112 12:42:40.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.339" endtime="20201112 12:42:40.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:40.292" endtime="20201112 12:42:40.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.289" endtime="20201112 12:42:40.624"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.653" endtime="20201112 12:42:40.669"></status>
</kw>
<msg timestamp="20201112 12:42:40.670" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.650" endtime="20201112 12:42:40.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.676" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.672" endtime="20201112 12:42:40.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.683" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:40.678" endtime="20201112 12:42:40.683"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:40.643" endtime="20201112 12:42:40.685"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:40.638" endtime="20201112 12:42:40.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.635" endtime="20201112 12:42:40.687"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:40.695" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:40.694" endtime="20201112 12:42:40.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.689" endtime="20201112 12:42:40.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.633" endtime="20201112 12:42:40.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.632" endtime="20201112 12:42:40.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.699" endtime="20201112 12:42:40.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.629" endtime="20201112 12:42:40.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.705" endtime="20201112 12:42:40.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.625" endtime="20201112 12:42:40.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.336" endtime="20201112 12:42:40.711"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:40.725" endtime="20201112 12:42:40.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.721" endtime="20201112 12:42:40.748"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.843" endtime="20201112 12:42:40.858"></status>
</kw>
<msg timestamp="20201112 12:42:40.859" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.840" endtime="20201112 12:42:40.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.867" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.862" endtime="20201112 12:42:40.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.873" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:40.869" endtime="20201112 12:42:40.874"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:40.832" endtime="20201112 12:42:40.875"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:40.826" endtime="20201112 12:42:40.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.761" endtime="20201112 12:42:40.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:40.885" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:40.884" endtime="20201112 12:42:40.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.880" endtime="20201112 12:42:40.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.760" endtime="20201112 12:42:40.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.758" endtime="20201112 12:42:40.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.889" endtime="20201112 12:42:40.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.754" endtime="20201112 12:42:40.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.749" endtime="20201112 12:42:40.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.718" endtime="20201112 12:42:40.896"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 12:42:40.901" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.920" endtime="20201112 12:42:40.931"></status>
</kw>
<msg timestamp="20201112 12:42:40.932" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.917" endtime="20201112 12:42:40.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.938" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.934" endtime="20201112 12:42:40.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.940" endtime="20201112 12:42:40.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.910" endtime="20201112 12:42:40.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.905" endtime="20201112 12:42:40.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.965" endtime="20201112 12:42:41.326"></status>
</kw>
<msg timestamp="20201112 12:42:41.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.185799944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.185800486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:40.961" endtime="20201112 12:42:41.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.185799944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.185800486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.335" endtime="20201112 12:42:41.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.354" endtime="20201112 12:42:41.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.954" endtime="20201112 12:42:41.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.950" endtime="20201112 12:42:41.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.370" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:41.368" endtime="20201112 12:42:41.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.382" level="INFO">VALUE: [{'time': 0.185799944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.185800486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.185809792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.30600000001447e-06, 'source_diff': 9.30600000001447e-06}, {'time': 0.185810264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185817319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055000000005807e-06, 'source_diff': 7.055000000005807e-06}, {'time': 0.185817792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.185824931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999989348e-06, 'source_diff': 7.138999999989348e-06}, {'time': 0.185825403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185831722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3190000000046265e-06, 'source_diff': 6.3190000000046265e-06}, {'time': 0.185832194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185837903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708999999992637e-06, 'source_diff': 5.708999999992637e-06}, {'time': 0.185838375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.18584875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0375000000006906e-05, 'source_diff': 1.0375000000006906e-05}, {'time': 0.185849222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185858361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999991348e-06, 'source_diff': 9.138999999991348e-06}, {'time': 0.185858833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185863264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.185863736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185874556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0819999999994723e-05, 'source_diff': 1.0819999999994723e-05}, {'time': 0.185875028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185883319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.290999999993609e-06, 'source_diff': 8.290999999993609e-06}, {'time': 0.185883792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.185892625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.833000000013635e-06, 'source_diff': 8.833000000013635e-06}, {'time': 0.185893097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185903375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.185903847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185909542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.185910014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185916861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.846999999976511e-06, 'source_diff': 6.846999999976511e-06}, {'time': 0.185917333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185927819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000003992e-05, 'source_diff': 1.0486000000003992e-05}, {'time': 0.185928292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.185938153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.185938625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185943403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.778000000010829e-06, 'source_diff': 4.778000000010829e-06}, {'time': 0.185943875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.18594975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999988528e-06, 'source_diff': 5.874999999988528e-06}, {'time': 0.185950222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185960625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999992169e-05, 'source_diff': 1.0402999999992169e-05}, {'time': 0.185961097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185968472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000003906e-06, 'source_diff': 7.375000000003906e-06}, {'time': 0.185968944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185977333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.185977806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.185982264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4580000000127296e-06, 'source_diff': 4.4580000000127296e-06}, {'time': 0.185982736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.185991542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.185992014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186000319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.30499999998624e-06, 'source_diff': 8.30499999998624e-06}, {'time': 0.186000792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.186005875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0829999999890685e-06, 'source_diff': 5.0829999999890685e-06}, {'time': 0.186006347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186010764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4170000000065546e-06, 'source_diff': 4.4170000000065546e-06}, {'time': 0.186011236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186018389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000009735e-06, 'source_diff': 7.153000000009735e-06}, {'time': 0.186018861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186026319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.457999999987974e-06, 'source_diff': 7.457999999987974e-06}, {'time': 0.186026792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.186037722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0929999999992335e-05, 'source_diff': 1.0929999999992335e-05}, {'time': 0.186038194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186047319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.186047792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.186052972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000021279e-06, 'source_diff': 5.180000000021279e-06}, {'time': 0.186053444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186063625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.186064097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186068639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.186069111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186079292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.186079764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186089139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.37499999997815e-06, 'source_diff': 9.37499999997815e-06}, {'time': 0.186089611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186100069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.045800000001873e-05, 'source_diff': 1.045800000001873e-05}, {'time': 0.186100542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.186106861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3190000000046265e-06, 'source_diff': 6.3190000000046265e-06}, {'time': 0.186107333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186117403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069999999973156e-05, 'source_diff': 1.0069999999973156e-05}, {'time': 0.186117875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186123361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.186123833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186133194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.361000000013275e-06, 'source_diff': 9.361000000013275e-06}, {'time': 0.186133667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.186140597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.929999999988334e-06, 'source_diff': 6.929999999988334e-06}, {'time': 0.186141069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186147292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.186147764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186156375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611000000019464e-06, 'source_diff': 8.611000000019464e-06}, {'time': 0.186156847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.186167458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0611000000021464e-05, 'source_diff': 1.0611000000021464e-05}, {'time': 0.186167931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.186177875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.943999999983966e-06, 'source_diff': 9.943999999983966e-06}, {'time': 0.186178347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186186653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.30600000001347e-06, 'source_diff': 8.30600000001347e-06}, {'time': 0.186187125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186193958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.83299999998388e-06, 'source_diff': 6.83299999998388e-06}, {'time': 0.186194431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.186201597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166000000002892e-06, 'source_diff': 7.166000000002892e-06}, {'time': 0.186202069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.186209639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.570000000012289e-06, 'source_diff': 7.570000000012289e-06}, {'time': 0.186210111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:41.372" endtime="20201112 12:42:41.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.362" endtime="20201112 12:42:41.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:41.443" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:41.388" endtime="20201112 12:42:41.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.452" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:41.450" endtime="20201112 12:42:41.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.461" level="INFO">VALUE: {'sourcetime': [0.185799944, 0.185800486, 0.185809792, 0.185810264, 0.185817319, 0.185817792, 0.185824931, 0.185825403, 0.185831722, 0.185832194, 0.185837903, 0.185838375, 0.18584875, 0.185849222, 0.185858361, 0.185858833, 0.185863264, 0.185863736, 0.185874556, 0.185875028, 0.185883319, 0.185883792, 0.185892625, 0.185893097, 0.185903375, 0.185903847, 0.185909542, 0.185910014, 0.185916861, 0.185917333, 0.185927819, 0.185928292, 0.185938153, 0.185938625, 0.185943403, 0.185943875, 0.18594975, 0.185950222, 0.185960625, 0.185961097, 0.185968472, 0.185968944, 0.185977333, 0.185977806, 0.185982264, 0.185982736, 0.185991542, 0.185992014, 0.186000319, 0.186000792, 0.186005875, 0.186006347, 0.186010764, 0.186011236, 0.186018389, 0.186018861, 0.186026319, 0.186026792, 0.186037722, 0.186038194, 0.186047319, 0.186047792, 0.186052972, 0.186053444, 0.186063625, 0.186064097, 0.186068639, 0.186069111, 0.186079292, 0.186079764, 0.186089139, 0.186089611, 0.186100069, 0.186100542, 0.186106861, 0.186107333, 0.186117403, 0.186117875, 0.186123361, 0.186123833, 0.186133194, 0.186133667, 0.186140597, 0.186141069, 0.186147292, 0.186147764, 0.186156375, 0.186156847, 0.186167458, 0.186167931, 0.186177875, 0.186178347, 0.186186653, 0.186187125, 0.186193958, 0.186194431, 0.186201597, 0.186202069, 0.186209639, 0.186210111], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 5.419999999922709e-07, 9.30600000001447e-06, 4.720000000013602e-07, 7.055000000005807e-06, 4.7300000000083386e-07, 7.138999999989348e-06, 4.720000000013602e-07, 6.3190000000046265e-06, 4.720000000013602e-07, 5.708999999992637e-06, 4.720000000013602e-07, 1.0375000000006906e-05, 4.720000000013602e-07, 9.138999999991348e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 1.0819999999994723e-05, 4.720000000013602e-07, 8.290999999993609e-06, 4.7300000000083386e-07, 8.833000000013635e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 5.695000000000006e-06, 4.720000000013602e-07, 6.846999999976511e-06, 4.720000000013602e-07, 1.0486000000003992e-05, 4.7300000000083386e-07, 9.860999999999898e-06, 4.720000000013602e-07, 4.778000000010829e-06, 4.720000000013602e-07, 5.874999999988528e-06, 4.720000000013602e-07, 1.0402999999992169e-05, 4.720000000013602e-07, 7.375000000003906e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.7300000000083386e-07, 4.4580000000127296e-06, 4.720000000013602e-07, 8.806000000000092e-06, 4.720000000013602e-07, 8.30499999998624e-06, 4.7300000000083386e-07, 5.0829999999890685e-06, 4.720000000013602e-07, 4.4170000000065546e-06, 4.720000000013602e-07, 7.153000000009735e-06, 4.720000000013602e-07, 7.457999999987974e-06, 4.7300000000083386e-07, 1.0929999999992335e-05, 4.720000000013602e-07, 9.124999999998717e-06, 4.7300000000083386e-07, 5.180000000021279e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 9.37499999997815e-06, 4.720000000013602e-07, 1.045800000001873e-05, 4.7300000000083386e-07, 6.3190000000046265e-06, 4.720000000013602e-07, 1.0069999999973156e-05, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 9.361000000013275e-06, 4.7300000000083386e-07, 6.929999999988334e-06, 4.720000000013602e-07, 6.2229999999996455e-06, 4.720000000013602e-07, 8.611000000019464e-06, 4.7199999997360464e-07, 1.0611000000021464e-05, 4.7300000000083386e-07, 9.943999999983966e-06, 4.720000000013602e-07, 8.30600000001347e-06, 4.720000000013602e-07, 6.83299999998388e-06, 4.7300000000083386e-07, 7.166000000002892e-06, 4.720000000013602e-07, 7.570000000012289e-06, 4.720000000013602e-07], 'diff': [0, 5.419999999922709e-07, 9.30600000001447e-06, 4.720000000013602e-07, 7.055000000005807e-06, 4.7300000000083386e-07, 7.138999999989348e-06, 4.720000000013602e-07, 6.3190000000046265e-06, 4.720000000013602e-07, 5.708999999992637e-06, 4.720000000013602e-07, 1.0375000000006906e-05, 4.720000000013602e-07, 9.138999999991348e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 1.0819999999994723e-05, 4.720000000013602e-07, 8.290999999993609e-06, 4.7300000000083386e-07, 8.833000000013635e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 5.695000000000006e-06, 4.720000000013602e-07, 6.846999999976511e-06, 4.720000000013602e-07, 1.0486000000003992e-05, 4.7300000000083386e-07, 9.860999999999898e-06, 4.720000000013602e-07, 4.778000000010829e-06, 4.720000000013602e-07, 5.874999999988528e-06, 4.720000000013602e-07, 1.0402999999992169e-05, 4.720000000013602e-07, 7.375000000003906e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.7300000000083386e-07, 4.4580000000127296e-06, 4.720000000013602e-07, 8.806000000000092e-06, 4.720000000013602e-07, 8.30499999998624e-06, 4.7300000000083386e-07, 5.0829999999890685e-06, 4.720000000013602e-07, 4.4170000000065546e-06, 4.720000000013602e-07, 7.153000000009735e-06, 4.720000000013602e-07, 7.457999999987974e-06, 4.7300000000083386e-07, 1.0929999999992335e-05, 4.720000000013602e-07, 9.124999999998717e-06, 4.7300000000083386e-07, 5.180000000021279e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 9.37499999997815e-06, 4.720000000013602e-07, 1.045800000001873e-05, 4.7300000000083386e-07, 6.3190000000046265e-06, 4.720000000013602e-07, 1.0069999999973156e-05, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 9.361000000013275e-06, 4.7300000000083386e-07, 6.929999999988334e-06, 4.720000000013602e-07, 6.2229999999996455e-06, 4.720000000013602e-07, 8.611000000019464e-06, 4.7199999997360464e-07, 1.0611000000021464e-05, 4.7300000000083386e-07, 9.943999999983966e-06, 4.720000000013602e-07, 8.30600000001347e-06, 4.720000000013602e-07, 6.83299999998388e-06, 4.7300000000083386e-07, 7.166000000002892e-06, 4.720000000013602e-07, 7.570000000012289e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:41.454" endtime="20201112 12:42:41.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.445" endtime="20201112 12:42:41.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:41.475" level="INFO">${RESULT} = [{'time': 0.185800486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.185810264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:41.466" endtime="20201112 12:42:41.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:41.506" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:41.478" endtime="20201112 12:42:41.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.516" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:41.514" endtime="20201112 12:42:41.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.521" level="INFO">VALUE: [5.419999999922709e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:42:41.518" endtime="20201112 12:42:41.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.508" endtime="20201112 12:42:41.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.530" endtime="20201112 12:42:41.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:41.538" endtime="20201112 12:42:41.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.534" endtime="20201112 12:42:41.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.525" endtime="20201112 12:42:41.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.902" endtime="20201112 12:42:41.564"></status>
</kw>
<msg timestamp="20201112 12:42:41.564" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.584" endtime="20201112 12:42:41.596"></status>
</kw>
<msg timestamp="20201112 12:42:41.598" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.581" endtime="20201112 12:42:41.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.604" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.600" endtime="20201112 12:42:41.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.606" endtime="20201112 12:42:41.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.574" endtime="20201112 12:42:41.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.569" endtime="20201112 12:42:41.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.629" endtime="20201112 12:42:41.985"></status>
</kw>
<msg timestamp="20201112 12:42:41.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035908181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035908653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.626" endtime="20201112 12:42:41.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035908181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035908653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.995" endtime="20201112 12:42:42.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.022" endtime="20201112 12:42:42.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.619" endtime="20201112 12:42:42.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.614" endtime="20201112 12:42:42.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.039" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:42.036" endtime="20201112 12:42:42.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.051" level="INFO">VALUE: [{'time': 0.035908181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035908653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035917792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.035918264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035928347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.035928819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035933361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.035933833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035943403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.035943875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035949556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.035950028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035954458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.035954931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035962083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1519999999963835e-06, 'source_diff': 7.1519999999963835e-06}, {'time': 0.035962556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035967417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.035967889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035974417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.035974889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035985597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.035986069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035991542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.035992014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036000153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.036000694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036009819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.036010292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036020472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.036020944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036030514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.036030986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036036569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999996507e-06, 'source_diff': 5.582999999996507e-06}, {'time': 0.036037042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036046181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.036046653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036053292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.036053764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036059597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8329999999967574e-06, 'source_diff': 5.8329999999967574e-06}, {'time': 0.036060069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036068139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.069999999998911e-06, 'source_diff': 8.069999999998911e-06}, {'time': 0.036068611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036078056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444999999996817e-06, 'source_diff': 9.444999999996817e-06}, {'time': 0.036078528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036083389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.036083861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036093847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.036094319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036098875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.55600000000278e-06, 'source_diff': 4.55600000000278e-06}, {'time': 0.036099347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03611025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0903000000006546e-05, 'source_diff': 1.0903000000006546e-05}, {'time': 0.036110722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036119958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.036120431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036124986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5549999999963675e-06, 'source_diff': 4.5549999999963675e-06}, {'time': 0.036125458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036130403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.036130875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036141681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.036142153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036146903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.036147375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036153708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3329999999972575e-06, 'source_diff': 6.3329999999972575e-06}, {'time': 0.036154181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036164042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.036164514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0361725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.036172972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036177278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.03617775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036187306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.556000000000842e-06, 'source_diff': 9.556000000000842e-06}, {'time': 0.036187778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036192972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.036193444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036202347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.903000000004546e-06, 'source_diff': 8.903000000004546e-06}, {'time': 0.036202819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036213625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.036214097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036224611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999996193e-05, 'source_diff': 1.0513999999996193e-05}, {'time': 0.036225083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036233681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.597999999998551e-06, 'source_diff': 8.597999999998551e-06}, {'time': 0.036234153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036241097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.036241569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036246417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.84800000000174e-06, 'source_diff': 4.84800000000174e-06}, {'time': 0.036246889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036255722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.036256194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036264708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.036265181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036274417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.036274889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036279861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.036280333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036290819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000003992e-05, 'source_diff': 1.0486000000003992e-05}, {'time': 0.036291292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036296375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999996007e-06, 'source_diff': 5.082999999996007e-06}, {'time': 0.036296847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036307222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.036307694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:42.041" endtime="20201112 12:42:42.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.030" endtime="20201112 12:42:42.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:42.115" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:42.057" endtime="20201112 12:42:42.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.125" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:42.122" endtime="20201112 12:42:42.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.135" level="INFO">VALUE: {'sourcetime': [0.035908181, 0.035908653, 0.035917792, 0.035918264, 0.035928347, 0.035928819, 0.035933361, 0.035933833, 0.035943403, 0.035943875, 0.035949556, 0.035950028, 0.035954458, 0.035954931, 0.035962083, 0.035962556, 0.035967417, 0.035967889, 0.035974417, 0.035974889, 0.035985597, 0.035986069, 0.035991542, 0.035992014, 0.036000153, 0.036000694, 0.036009819, 0.036010292, 0.036020472, 0.036020944, 0.036030514, 0.036030986, 0.036036569, 0.036037042, 0.036046181, 0.036046653, 0.036053292, 0.036053764, 0.036059597, 0.036060069, 0.036068139, 0.036068611, 0.036078056, 0.036078528, 0.036083389, 0.036083861, 0.036093847, 0.036094319, 0.036098875, 0.036099347, 0.03611025, 0.036110722, 0.036119958, 0.036120431, 0.036124986, 0.036125458, 0.036130403, 0.036130875, 0.036141681, 0.036142153, 0.036146903, 0.036147375, 0.036153708, 0.036154181, 0.036164042, 0.036164514, 0.0361725, 0.036172972, 0.036177278, 0.03617775, 0.036187306, 0.036187778, 0.036192972, 0.036193444, 0.036202347, 0.036202819, 0.036213625, 0.036214097, 0.036224611, 0.036225083, 0.036233681, 0.036234153, 0.036241097, 0.036241569, 0.036246417, 0.036246889, 0.036255722, 0.036256194, 0.036264708, 0.036265181, 0.036274417, 0.036274889, 0.036279861, 0.036280333, 0.036290819, 0.036291292, 0.036296375, 0.036296847, 0.036307222, 0.036307694], 'eventsource_diff': [0, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 9.570000000000412e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 4.429999999999712e-06, 4.7300000000083386e-07, 7.1519999999963835e-06, 4.7300000000083386e-07, 4.861000000001836e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07, 8.138999999997287e-06, 5.409999999997361e-07, 9.124999999998717e-06, 4.7300000000083386e-07, 1.0179999999998524e-05, 4.720000000013602e-07, 9.570000000000412e-06, 4.720000000013602e-07, 5.582999999996507e-06, 4.7300000000083386e-07, 9.138999999998287e-06, 4.720000000013602e-07, 6.639000000002726e-06, 4.720000000013602e-07, 5.8329999999967574e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 4.861000000001836e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.720000000013602e-07, 4.55600000000278e-06, 4.7199999999442133e-07, 1.0903000000006546e-05, 4.7199999999442133e-07, 9.236000000002742e-06, 4.7300000000083386e-07, 4.5549999999963675e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 6.3329999999972575e-06, 4.7300000000083386e-07, 9.860999999999898e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 4.30600000000253e-06, 4.720000000013602e-07, 9.556000000000842e-06, 4.7199999999442133e-07, 5.194000000000032e-06, 4.720000000013602e-07, 8.903000000004546e-06, 4.7199999999442133e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 1.0513999999996193e-05, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 6.944000000001782e-06, 4.720000000013602e-07, 4.84800000000174e-06, 4.7199999999442133e-07, 8.832999999999758e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 4.971999999998922e-06, 4.720000000013602e-07, 1.0486000000003992e-05, 4.7300000000083386e-07, 5.082999999996007e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 9.570000000000412e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 4.429999999999712e-06, 4.7300000000083386e-07, 7.1519999999963835e-06, 4.7300000000083386e-07, 4.861000000001836e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07, 8.138999999997287e-06, 5.409999999997361e-07, 9.124999999998717e-06, 4.7300000000083386e-07, 1.0179999999998524e-05, 4.720000000013602e-07, 9.570000000000412e-06, 4.720000000013602e-07, 5.582999999996507e-06, 4.7300000000083386e-07, 9.138999999998287e-06, 4.720000000013602e-07, 6.639000000002726e-06, 4.720000000013602e-07, 5.8329999999967574e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 4.861000000001836e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.720000000013602e-07, 4.55600000000278e-06, 4.7199999999442133e-07, 1.0903000000006546e-05, 4.7199999999442133e-07, 9.236000000002742e-06, 4.7300000000083386e-07, 4.5549999999963675e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 4.7499999999978115e-06, 4.720000000013602e-07, 6.3329999999972575e-06, 4.7300000000083386e-07, 9.860999999999898e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 4.30600000000253e-06, 4.720000000013602e-07, 9.556000000000842e-06, 4.7199999999442133e-07, 5.194000000000032e-06, 4.720000000013602e-07, 8.903000000004546e-06, 4.7199999999442133e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 1.0513999999996193e-05, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 6.944000000001782e-06, 4.720000000013602e-07, 4.84800000000174e-06, 4.7199999999442133e-07, 8.832999999999758e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 4.971999999998922e-06, 4.720000000013602e-07, 1.0486000000003992e-05, 4.7300000000083386e-07, 5.082999999996007e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:42.127" endtime="20201112 12:42:42.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.117" endtime="20201112 12:42:42.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:42.149" level="INFO">${RESULT} = [{'time': 0.035908653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035918264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:42.140" endtime="20201112 12:42:42.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:42.181" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:42.151" endtime="20201112 12:42:42.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.191" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:42.189" endtime="20201112 12:42:42.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.197" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:42:42.193" endtime="20201112 12:42:42.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.183" endtime="20201112 12:42:42.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.206" endtime="20201112 12:42:42.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:42.214" endtime="20201112 12:42:42.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.210" endtime="20201112 12:42:42.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.201" endtime="20201112 12:42:42.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.565" endtime="20201112 12:42:42.240"></status>
</kw>
<msg timestamp="20201112 12:42:42.241" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.262" endtime="20201112 12:42:42.276"></status>
</kw>
<msg timestamp="20201112 12:42:42.277" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.259" endtime="20201112 12:42:42.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.284" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.279" endtime="20201112 12:42:42.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.286" endtime="20201112 12:42:42.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.250" endtime="20201112 12:42:42.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.245" endtime="20201112 12:42:42.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.310" endtime="20201112 12:42:42.661"></status>
</kw>
<msg timestamp="20201112 12:42:42.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038321167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038321639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.306" endtime="20201112 12:42:42.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038321167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038321639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.670" endtime="20201112 12:42:42.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.689" endtime="20201112 12:42:42.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.299" endtime="20201112 12:42:42.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.294" endtime="20201112 12:42:42.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.706" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:42.704" endtime="20201112 12:42:42.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.717" level="INFO">VALUE: [{'time': 0.038321167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038321639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038330444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.038330917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038338069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152000000003322e-06, 'source_diff': 7.152000000003322e-06}, {'time': 0.038338542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038346111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.038346583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038354889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.30600000000653e-06, 'source_diff': 8.30600000000653e-06}, {'time': 0.038355361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038364917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.556000000000842e-06, 'source_diff': 9.556000000000842e-06}, {'time': 0.038365389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038371653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.038372194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038381528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.038382, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038386306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.038386778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038397583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.080499999999568e-05, 'source_diff': 1.080499999999568e-05}, {'time': 0.038398056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038403639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583000000003446e-06, 'source_diff': 5.583000000003446e-06}, {'time': 0.038404111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038411333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.038411875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038421819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.944000000004782e-06, 'source_diff': 9.944000000004782e-06}, {'time': 0.038422292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038429653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000004336e-06, 'source_diff': 7.361000000004336e-06}, {'time': 0.038430125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038435931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805999999997091e-06, 'source_diff': 5.805999999997091e-06}, {'time': 0.038436403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038445847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.443999999997343e-06, 'source_diff': 9.443999999997343e-06}, {'time': 0.038446319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038452, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.038452472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038461292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.038461764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038466847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999996007e-06, 'source_diff': 5.082999999996007e-06}, {'time': 0.038467319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038476319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.000000000002062e-06, 'source_diff': 9.000000000002062e-06}, {'time': 0.038476861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038485833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999995983e-06, 'source_diff': 8.971999999995983e-06}, {'time': 0.038486306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038494931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.625000000005156e-06, 'source_diff': 8.625000000005156e-06}, {'time': 0.038495403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038503069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666000000003392e-06, 'source_diff': 7.666000000003392e-06}, {'time': 0.038503542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038512694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.151999999998384e-06, 'source_diff': 9.151999999998384e-06}, {'time': 0.038513167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038523, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.833000000000758e-06, 'source_diff': 9.833000000000758e-06}, {'time': 0.038523472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038533972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.038534444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038542333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.888999999997037e-06, 'source_diff': 7.888999999997037e-06}, {'time': 0.038542806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038553208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0401999999999634e-05, 'source_diff': 1.0401999999999634e-05}, {'time': 0.038553681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038560389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.038560861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038569208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.346999999998828e-06, 'source_diff': 8.346999999998828e-06}, {'time': 0.03856975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038576264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.038576736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038587014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.038587486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038595639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000003796e-06, 'source_diff': 8.153000000003796e-06}, {'time': 0.038596181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038600778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.038601319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038605611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999996021e-06, 'source_diff': 4.291999999996021e-06}, {'time': 0.038606083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038612292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.038612764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038620958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999996093e-06, 'source_diff': 8.193999999996093e-06}, {'time': 0.038621431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038632236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805000000002618e-05, 'source_diff': 1.0805000000002618e-05}, {'time': 0.038632708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038642056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347999999999301e-06, 'source_diff': 9.347999999999301e-06}, {'time': 0.038642528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038649778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.03865025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038658444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194000000003032e-06, 'source_diff': 8.194000000003032e-06}, {'time': 0.038658917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038667333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.415999999997203e-06, 'source_diff': 8.415999999997203e-06}, {'time': 0.038667806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038675167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000004336e-06, 'source_diff': 7.361000000004336e-06}, {'time': 0.038675639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038685833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194000000005032e-05, 'source_diff': 1.0194000000005032e-05}, {'time': 0.038686306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038693861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555000000006307e-06, 'source_diff': 7.555000000006307e-06}, {'time': 0.038694333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038700014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.038700486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038706778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.038707319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038712028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.709000000005514e-06, 'source_diff': 4.709000000005514e-06}, {'time': 0.0387125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038723194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694000000005532e-05, 'source_diff': 1.0694000000005532e-05}, {'time': 0.038723667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038730819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1519999999963835e-06, 'source_diff': 7.1519999999963835e-06}, {'time': 0.038731292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:42.708" endtime="20201112 12:42:42.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.698" endtime="20201112 12:42:42.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:42.777" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:42.723" endtime="20201112 12:42:42.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.786" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:42.784" endtime="20201112 12:42:42.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.795" level="INFO">VALUE: {'sourcetime': [0.038321167, 0.038321639, 0.038330444, 0.038330917, 0.038338069, 0.038338542, 0.038346111, 0.038346583, 0.038354889, 0.038355361, 0.038364917, 0.038365389, 0.038371653, 0.038372194, 0.038381528, 0.038382, 0.038386306, 0.038386778, 0.038397583, 0.038398056, 0.038403639, 0.038404111, 0.038411333, 0.038411875, 0.038421819, 0.038422292, 0.038429653, 0.038430125, 0.038435931, 0.038436403, 0.038445847, 0.038446319, 0.038452, 0.038452472, 0.038461292, 0.038461764, 0.038466847, 0.038467319, 0.038476319, 0.038476861, 0.038485833, 0.038486306, 0.038494931, 0.038495403, 0.038503069, 0.038503542, 0.038512694, 0.038513167, 0.038523, 0.038523472, 0.038533972, 0.038534444, 0.038542333, 0.038542806, 0.038553208, 0.038553681, 0.038560389, 0.038560861, 0.038569208, 0.03856975, 0.038576264, 0.038576736, 0.038587014, 0.038587486, 0.038595639, 0.038596181, 0.038600778, 0.038601319, 0.038605611, 0.038606083, 0.038612292, 0.038612764, 0.038620958, 0.038621431, 0.038632236, 0.038632708, 0.038642056, 0.038642528, 0.038649778, 0.03865025, 0.038658444, 0.038658917, 0.038667333, 0.038667806, 0.038675167, 0.038675639, 0.038685833, 0.038686306, 0.038693861, 0.038694333, 0.038700014, 0.038700486, 0.038706778, 0.038707319, 0.038712028, 0.0387125, 0.038723194, 0.038723667, 0.038730819, 0.038731292], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 4.7199999999442133e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 7.152000000003322e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.7199999999442133e-07, 8.30600000000653e-06, 4.7199999999442133e-07, 9.556000000000842e-06, 4.720000000013602e-07, 6.2639999999988816e-06, 5.409999999997361e-07, 9.333999999999731e-06, 4.720000000013602e-07, 4.30600000000253e-06, 4.720000000013602e-07, 1.080499999999568e-05, 4.7300000000083386e-07, 5.583000000003446e-06, 4.7199999999442133e-07, 7.222000000001172e-06, 5.419999999992098e-07, 9.944000000004782e-06, 4.7299999999389497e-07, 7.361000000004336e-06, 4.720000000013602e-07, 5.805999999997091e-06, 4.720000000013602e-07, 9.443999999997343e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 5.082999999996007e-06, 4.720000000013602e-07, 9.000000000002062e-06, 5.419999999992098e-07, 8.971999999995983e-06, 4.7300000000083386e-07, 8.625000000005156e-06, 4.7199999999442133e-07, 7.666000000003392e-06, 4.7300000000083386e-07, 9.151999999998384e-06, 4.7300000000083386e-07, 9.833000000000758e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 7.888999999997037e-06, 4.7300000000083386e-07, 1.0401999999999634e-05, 4.7300000000083386e-07, 6.708000000001102e-06, 4.720000000013602e-07, 8.346999999998828e-06, 5.419999999992098e-07, 6.513999999999132e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.7199999999442133e-07, 8.153000000003796e-06, 5.419999999992098e-07, 4.597000000002016e-06, 5.409999999997361e-07, 4.291999999996021e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 8.193999999996093e-06, 4.7300000000083386e-07, 1.0805000000002618e-05, 4.720000000013602e-07, 9.347999999999301e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7199999999442133e-07, 8.194000000003032e-06, 4.7300000000083386e-07, 8.415999999997203e-06, 4.7300000000083386e-07, 7.361000000004336e-06, 4.7199999999442133e-07, 1.0194000000005032e-05, 4.7299999999389497e-07, 7.555000000006307e-06, 4.7199999999442133e-07, 5.681000000000436e-06, 4.720000000013602e-07, 6.291999999998021e-06, 5.409999999997361e-07, 4.709000000005514e-06, 4.7199999999442133e-07, 1.0694000000005532e-05, 4.7300000000083386e-07, 7.1519999999963835e-06, 4.7300000000083386e-07], 'diff': [0, 4.7199999999442133e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 7.152000000003322e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.7199999999442133e-07, 8.30600000000653e-06, 4.7199999999442133e-07, 9.556000000000842e-06, 4.720000000013602e-07, 6.2639999999988816e-06, 5.409999999997361e-07, 9.333999999999731e-06, 4.720000000013602e-07, 4.30600000000253e-06, 4.720000000013602e-07, 1.080499999999568e-05, 4.7300000000083386e-07, 5.583000000003446e-06, 4.7199999999442133e-07, 7.222000000001172e-06, 5.419999999992098e-07, 9.944000000004782e-06, 4.7299999999389497e-07, 7.361000000004336e-06, 4.720000000013602e-07, 5.805999999997091e-06, 4.720000000013602e-07, 9.443999999997343e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 5.082999999996007e-06, 4.720000000013602e-07, 9.000000000002062e-06, 5.419999999992098e-07, 8.971999999995983e-06, 4.7300000000083386e-07, 8.625000000005156e-06, 4.7199999999442133e-07, 7.666000000003392e-06, 4.7300000000083386e-07, 9.151999999998384e-06, 4.7300000000083386e-07, 9.833000000000758e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 7.888999999997037e-06, 4.7300000000083386e-07, 1.0401999999999634e-05, 4.7300000000083386e-07, 6.708000000001102e-06, 4.720000000013602e-07, 8.346999999998828e-06, 5.419999999992098e-07, 6.513999999999132e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.7199999999442133e-07, 8.153000000003796e-06, 5.419999999992098e-07, 4.597000000002016e-06, 5.409999999997361e-07, 4.291999999996021e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 8.193999999996093e-06, 4.7300000000083386e-07, 1.0805000000002618e-05, 4.720000000013602e-07, 9.347999999999301e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.7199999999442133e-07, 8.194000000003032e-06, 4.7300000000083386e-07, 8.415999999997203e-06, 4.7300000000083386e-07, 7.361000000004336e-06, 4.7199999999442133e-07, 1.0194000000005032e-05, 4.7299999999389497e-07, 7.555000000006307e-06, 4.7199999999442133e-07, 5.681000000000436e-06, 4.720000000013602e-07, 6.291999999998021e-06, 5.409999999997361e-07, 4.709000000005514e-06, 4.7199999999442133e-07, 1.0694000000005532e-05, 4.7300000000083386e-07, 7.1519999999963835e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:42.788" endtime="20201112 12:42:42.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.779" endtime="20201112 12:42:42.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:42.810" level="INFO">${RESULT} = [{'time': 0.038321639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038330917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:42.801" endtime="20201112 12:42:42.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:42.840" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:42.812" endtime="20201112 12:42:42.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.851" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:42.848" endtime="20201112 12:42:42.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.857" level="INFO">VALUE: [4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 12:42:42.854" endtime="20201112 12:42:42.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.842" endtime="20201112 12:42:42.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.865" endtime="20201112 12:42:42.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:42.874" endtime="20201112 12:42:42.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.869" endtime="20201112 12:42:42.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.861" endtime="20201112 12:42:42.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.242" endtime="20201112 12:42:42.899"></status>
</kw>
<msg timestamp="20201112 12:42:42.900" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.919" endtime="20201112 12:42:42.930"></status>
</kw>
<msg timestamp="20201112 12:42:42.931" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.916" endtime="20201112 12:42:42.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.937" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.933" endtime="20201112 12:42:42.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.939" endtime="20201112 12:42:42.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.909" endtime="20201112 12:42:42.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.904" endtime="20201112 12:42:42.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.962" endtime="20201112 12:42:43.299"></status>
</kw>
<msg timestamp="20201112 12:42:43.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035764736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035765208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.959" endtime="20201112 12:42:43.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035764736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035765208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.308" endtime="20201112 12:42:43.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.328" endtime="20201112 12:42:43.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.952" endtime="20201112 12:42:43.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.947" endtime="20201112 12:42:43.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.344" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:43.342" endtime="20201112 12:42:43.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.355" level="INFO">VALUE: [{'time': 0.035764736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035765208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035772875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.035773347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035779153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.80600000000403e-06, 'source_diff': 5.80600000000403e-06}, {'time': 0.035779625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035790319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0693999999998594e-05, 'source_diff': 1.0693999999998594e-05}, {'time': 0.035790792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035797028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.0357975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035807139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.035807611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035818014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.035818486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035826042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.55600000000578e-06, 'source_diff': 7.55600000000578e-06}, {'time': 0.035826514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035837319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805000000002618e-05, 'source_diff': 1.0805000000002618e-05}, {'time': 0.035837792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035843583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}, {'time': 0.035844056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035851833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777000000000478e-06, 'source_diff': 7.777000000000478e-06}, {'time': 0.035852306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035857375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0689999999964375e-06, 'source_diff': 5.0689999999964375e-06}, {'time': 0.035857847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035868764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0916999999999177e-05, 'source_diff': 1.0916999999999177e-05}, {'time': 0.035869236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035877569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.035878042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035883194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152000000001322e-06, 'source_diff': 5.152000000001322e-06}, {'time': 0.035883667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035892486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.035892958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035898236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.035898708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035908069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.035908542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035919347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.080499999999568e-05, 'source_diff': 1.080499999999568e-05}, {'time': 0.035919819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035928333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.035928806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035934278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.03593475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035945139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.035945611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035954333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999995733e-06, 'source_diff': 8.721999999995733e-06}, {'time': 0.035954806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035965083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277000000002978e-05, 'source_diff': 1.0277000000002978e-05}, {'time': 0.035965556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035974903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.035975375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035982722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000004766e-06, 'source_diff': 7.347000000004766e-06}, {'time': 0.035983194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035988153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.035988625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035993167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.035993639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036000694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.036001167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036007694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.526999999999228e-06, 'source_diff': 6.526999999999228e-06}, {'time': 0.036008167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036014486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.318999999997688e-06, 'source_diff': 6.318999999997688e-06}, {'time': 0.036014958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036025597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.036026069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036034667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.597999999998551e-06, 'source_diff': 8.597999999998551e-06}, {'time': 0.036035139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036039583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.036040056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036045528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.036046, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036051597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999996077e-06, 'source_diff': 5.596999999996077e-06}, {'time': 0.036052069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036061958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.0360625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036072681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0181000000004936e-05, 'source_diff': 1.0181000000004936e-05}, {'time': 0.036073153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036080736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5830000000054465e-06, 'source_diff': 7.5830000000054465e-06}, {'time': 0.036081208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036086361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.036086833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036095764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000003686e-06, 'source_diff': 8.931000000003686e-06}, {'time': 0.036096236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036104444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.036104917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036114569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.036115042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036120417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.036120889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036128222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.036128764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036138389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.036138861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036144125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.036144597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036154167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.036154639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036162722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.036163194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036167917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722999999998145e-06, 'source_diff': 4.722999999998145e-06}, {'time': 0.036168458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:43.346" endtime="20201112 12:42:43.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.336" endtime="20201112 12:42:43.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:43.416" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:43.361" endtime="20201112 12:42:43.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.425" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:43.423" endtime="20201112 12:42:43.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.435" level="INFO">VALUE: {'sourcetime': [0.035764736, 0.035765208, 0.035772875, 0.035773347, 0.035779153, 0.035779625, 0.035790319, 0.035790792, 0.035797028, 0.0357975, 0.035807139, 0.035807611, 0.035818014, 0.035818486, 0.035826042, 0.035826514, 0.035837319, 0.035837792, 0.035843583, 0.035844056, 0.035851833, 0.035852306, 0.035857375, 0.035857847, 0.035868764, 0.035869236, 0.035877569, 0.035878042, 0.035883194, 0.035883667, 0.035892486, 0.035892958, 0.035898236, 0.035898708, 0.035908069, 0.035908542, 0.035919347, 0.035919819, 0.035928333, 0.035928806, 0.035934278, 0.03593475, 0.035945139, 0.035945611, 0.035954333, 0.035954806, 0.035965083, 0.035965556, 0.035974903, 0.035975375, 0.035982722, 0.035983194, 0.035988153, 0.035988625, 0.035993167, 0.035993639, 0.036000694, 0.036001167, 0.036007694, 0.036008167, 0.036014486, 0.036014958, 0.036025597, 0.036026069, 0.036034667, 0.036035139, 0.036039583, 0.036040056, 0.036045528, 0.036046, 0.036051597, 0.036052069, 0.036061958, 0.0360625, 0.036072681, 0.036073153, 0.036080736, 0.036081208, 0.036086361, 0.036086833, 0.036095764, 0.036096236, 0.036104444, 0.036104917, 0.036114569, 0.036115042, 0.036120417, 0.036120889, 0.036128222, 0.036128764, 0.036138389, 0.036138861, 0.036144125, 0.036144597, 0.036154167, 0.036154639, 0.036162722, 0.036163194, 0.036167917, 0.036168458], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 4.720000000013602e-07, 7.667000000002866e-06, 4.7199999999442133e-07, 5.80600000000403e-06, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 6.235999999999742e-06, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.7199999999442133e-07, 7.55600000000578e-06, 4.7199999999442133e-07, 1.0805000000002618e-05, 4.7300000000083386e-07, 5.790999999998048e-06, 4.7300000000083386e-07, 7.777000000000478e-06, 4.7300000000083386e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 8.332999999999258e-06, 4.7300000000083386e-07, 5.152000000001322e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 1.080499999999568e-05, 4.720000000013602e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.721999999995733e-06, 4.7300000000083386e-07, 1.0277000000002978e-05, 4.7300000000083386e-07, 9.346999999999828e-06, 4.7199999999442133e-07, 7.347000000004766e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 7.054999999998868e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 6.318999999997688e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 4.443999999999282e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 5.596999999996077e-06, 4.720000000013602e-07, 9.888999999999037e-06, 5.419999999992098e-07, 1.0181000000004936e-05, 4.7199999999442133e-07, 7.5830000000054465e-06, 4.7199999999442133e-07, 5.153000000000796e-06, 4.720000000013602e-07, 8.931000000003686e-06, 4.7199999999442133e-07, 8.208000000002602e-06, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 5.375000000001906e-06, 4.720000000013602e-07, 7.332999999998258e-06, 5.419999999992098e-07, 9.624999999999218e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 9.570000000000412e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 4.722999999998145e-06, 5.409999999997361e-07], 'diff': [0, 4.720000000013602e-07, 7.667000000002866e-06, 4.7199999999442133e-07, 5.80600000000403e-06, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 6.235999999999742e-06, 4.720000000013602e-07, 9.638999999998787e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.7199999999442133e-07, 7.55600000000578e-06, 4.7199999999442133e-07, 1.0805000000002618e-05, 4.7300000000083386e-07, 5.790999999998048e-06, 4.7300000000083386e-07, 7.777000000000478e-06, 4.7300000000083386e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 8.332999999999258e-06, 4.7300000000083386e-07, 5.152000000001322e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.7300000000083386e-07, 1.080499999999568e-05, 4.720000000013602e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.721999999995733e-06, 4.7300000000083386e-07, 1.0277000000002978e-05, 4.7300000000083386e-07, 9.346999999999828e-06, 4.7199999999442133e-07, 7.347000000004766e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 7.054999999998868e-06, 4.7300000000083386e-07, 6.526999999999228e-06, 4.7300000000083386e-07, 6.318999999997688e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 4.443999999999282e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 5.596999999996077e-06, 4.720000000013602e-07, 9.888999999999037e-06, 5.419999999992098e-07, 1.0181000000004936e-05, 4.7199999999442133e-07, 7.5830000000054465e-06, 4.7199999999442133e-07, 5.153000000000796e-06, 4.720000000013602e-07, 8.931000000003686e-06, 4.7199999999442133e-07, 8.208000000002602e-06, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 5.375000000001906e-06, 4.720000000013602e-07, 7.332999999998258e-06, 5.419999999992098e-07, 9.624999999999218e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 9.570000000000412e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 4.722999999998145e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:43.428" endtime="20201112 12:42:43.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.418" endtime="20201112 12:42:43.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:43.449" level="INFO">${RESULT} = [{'time': 0.035765208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035773347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:43.440" endtime="20201112 12:42:43.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:43.479" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:43.451" endtime="20201112 12:42:43.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.489" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:43.487" endtime="20201112 12:42:43.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.494" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201112 12:42:43.491" endtime="20201112 12:42:43.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.481" endtime="20201112 12:42:43.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.503" endtime="20201112 12:42:43.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:43.511" endtime="20201112 12:42:43.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.507" endtime="20201112 12:42:43.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.499" endtime="20201112 12:42:43.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.901" endtime="20201112 12:42:43.537"></status>
</kw>
<msg timestamp="20201112 12:42:43.537" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.557" endtime="20201112 12:42:43.567"></status>
</kw>
<msg timestamp="20201112 12:42:43.568" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.553" endtime="20201112 12:42:43.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.574" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.571" endtime="20201112 12:42:43.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.577" endtime="20201112 12:42:43.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.546" endtime="20201112 12:42:43.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.542" endtime="20201112 12:42:43.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.600" endtime="20201112 12:42:43.939"></status>
</kw>
<msg timestamp="20201112 12:42:43.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035792597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035793069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.596" endtime="20201112 12:42:43.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035792597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035793069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.949" endtime="20201112 12:42:43.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.968" endtime="20201112 12:42:43.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.589" endtime="20201112 12:42:43.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.585" endtime="20201112 12:42:43.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.984" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:43.982" endtime="20201112 12:42:43.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.996" level="INFO">VALUE: [{'time': 0.035792597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035793069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035799056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.987000000005904e-06, 'source_diff': 5.987000000005904e-06}, {'time': 0.035799528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035806736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.208000000001602e-06, 'source_diff': 7.208000000001602e-06}, {'time': 0.035807278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035815875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.035816347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035823611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.035824083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035834486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.035834958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035843458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.035843931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035849417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.035849889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035854333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.035854806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035864333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.52699999999529e-06, 'source_diff': 9.52699999999529e-06}, {'time': 0.035864806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035869764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.035870236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035879694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.457999999996913e-06, 'source_diff': 9.457999999996913e-06}, {'time': 0.035880167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035888986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.035889458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035898861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.035899403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.035906028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.0359065, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035913139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999995787e-06, 'source_diff': 6.638999999995787e-06}, {'time': 0.035913611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035919903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.29200000000496e-06, 'source_diff': 6.29200000000496e-06}, {'time': 0.035920375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035928694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.035929167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035937042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000004406e-06, 'source_diff': 7.875000000004406e-06}, {'time': 0.035937514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035947389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.875000000006406e-06, 'source_diff': 9.875000000006406e-06}, {'time': 0.035947861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035953361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5000000000055005e-06, 'source_diff': 5.5000000000055005e-06}, {'time': 0.035953833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03596275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.917000000004116e-06, 'source_diff': 8.917000000004116e-06}, {'time': 0.035963222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035969083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999995897e-06, 'source_diff': 5.860999999995897e-06}, {'time': 0.035969625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035976125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.035976597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035982694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000003516e-06, 'source_diff': 6.097000000003516e-06}, {'time': 0.035983167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035988042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.874999999994467e-06, 'source_diff': 4.874999999994467e-06}, {'time': 0.035988514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035998056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.035998528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036006111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.036006583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036013917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.333999999997731e-06, 'source_diff': 7.333999999997731e-06}, {'time': 0.036014389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036023958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.036024431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036030208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.776999999998478e-06, 'source_diff': 5.776999999998478e-06}, {'time': 0.036030681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036040667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.036041139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036048917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.036049389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036055389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.036055861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036064264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.036064736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036074708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.971999999996983e-06, 'source_diff': 9.971999999996983e-06}, {'time': 0.036075181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036086, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0819000000002188e-05, 'source_diff': 1.0819000000002188e-05}, {'time': 0.036086472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036092792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319999999997161e-06, 'source_diff': 6.319999999997161e-06}, {'time': 0.036093264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036101653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.036102125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036106972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.036107444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036112819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999994967e-06, 'source_diff': 5.374999999994967e-06}, {'time': 0.036113292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036118875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583000000003446e-06, 'source_diff': 5.583000000003446e-06}, {'time': 0.036119347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0361265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152999999995857e-06, 'source_diff': 7.152999999995857e-06}, {'time': 0.036126972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036136986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.036137528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036143944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.415999999995203e-06, 'source_diff': 6.415999999995203e-06}, {'time': 0.036144417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0361545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.036154972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036163611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.036164083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036168917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.83400000000217e-06, 'source_diff': 4.83400000000217e-06}, {'time': 0.036169389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036177181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.036177653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036185861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.036186333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:43.986" endtime="20201112 12:42:43.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.976" endtime="20201112 12:42:44.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:44.055" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:44.002" endtime="20201112 12:42:44.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.064" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:44.062" endtime="20201112 12:42:44.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.073" level="INFO">VALUE: {'sourcetime': [0.035792597, 0.035793069, 0.035799056, 0.035799528, 0.035806736, 0.035807278, 0.035815875, 0.035816347, 0.035823611, 0.035824083, 0.035834486, 0.035834958, 0.035843458, 0.035843931, 0.035849417, 0.035849889, 0.035854333, 0.035854806, 0.035864333, 0.035864806, 0.035869764, 0.035870236, 0.035879694, 0.035880167, 0.035888986, 0.035889458, 0.035898861, 0.035899403, 0.035906028, 0.0359065, 0.035913139, 0.035913611, 0.035919903, 0.035920375, 0.035928694, 0.035929167, 0.035937042, 0.035937514, 0.035947389, 0.035947861, 0.035953361, 0.035953833, 0.03596275, 0.035963222, 0.035969083, 0.035969625, 0.035976125, 0.035976597, 0.035982694, 0.035983167, 0.035988042, 0.035988514, 0.035998056, 0.035998528, 0.036006111, 0.036006583, 0.036013917, 0.036014389, 0.036023958, 0.036024431, 0.036030208, 0.036030681, 0.036040667, 0.036041139, 0.036048917, 0.036049389, 0.036055389, 0.036055861, 0.036064264, 0.036064736, 0.036074708, 0.036075181, 0.036086, 0.036086472, 0.036092792, 0.036093264, 0.036101653, 0.036102125, 0.036106972, 0.036107444, 0.036112819, 0.036113292, 0.036118875, 0.036119347, 0.0361265, 0.036126972, 0.036136986, 0.036137528, 0.036143944, 0.036144417, 0.0361545, 0.036154972, 0.036163611, 0.036164083, 0.036168917, 0.036169389, 0.036177181, 0.036177653, 0.036185861, 0.036186333], 'eventsource_diff': [0, 4.7199999999442133e-07, 5.987000000005904e-06, 4.7199999999442133e-07, 7.208000000001602e-06, 5.419999999992098e-07, 8.596999999999078e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 8.500000000001562e-06, 4.7300000000083386e-07, 5.485999999998992e-06, 4.720000000013602e-07, 4.443999999999282e-06, 4.7300000000083386e-07, 9.52699999999529e-06, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 9.402999999998107e-06, 5.420000000061487e-07, 6.624999999996217e-06, 4.720000000013602e-07, 6.638999999995787e-06, 4.720000000013602e-07, 6.29200000000496e-06, 4.7199999999442133e-07, 8.318999999999688e-06, 4.7300000000083386e-07, 7.875000000004406e-06, 4.7199999999442133e-07, 9.875000000006406e-06, 4.7199999999442133e-07, 5.5000000000055005e-06, 4.7199999999442133e-07, 8.917000000004116e-06, 4.720000000013602e-07, 5.860999999995897e-06, 5.419999999992098e-07, 6.499999999999562e-06, 4.720000000013602e-07, 6.097000000003516e-06, 4.7300000000083386e-07, 4.874999999994467e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 7.582999999998508e-06, 4.720000000013602e-07, 7.333999999997731e-06, 4.720000000013602e-07, 9.569000000000938e-06, 4.7300000000083386e-07, 5.776999999998478e-06, 4.7300000000083386e-07, 9.985999999996553e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 9.971999999996983e-06, 4.7300000000083386e-07, 1.0819000000002188e-05, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 4.847000000002266e-06, 4.720000000013602e-07, 5.374999999994967e-06, 4.7300000000083386e-07, 5.583000000003446e-06, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 1.0014000000002632e-05, 5.419999999992098e-07, 6.415999999995203e-06, 4.7300000000083386e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 8.638999999997787e-06, 4.720000000013602e-07, 4.83400000000217e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.7199999999442133e-07, 8.208000000002602e-06, 4.720000000013602e-07], 'diff': [0, 4.7199999999442133e-07, 5.987000000005904e-06, 4.7199999999442133e-07, 7.208000000001602e-06, 5.419999999992098e-07, 8.596999999999078e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 8.500000000001562e-06, 4.7300000000083386e-07, 5.485999999998992e-06, 4.720000000013602e-07, 4.443999999999282e-06, 4.7300000000083386e-07, 9.52699999999529e-06, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.7300000000083386e-07, 8.819000000000188e-06, 4.720000000013602e-07, 9.402999999998107e-06, 5.420000000061487e-07, 6.624999999996217e-06, 4.720000000013602e-07, 6.638999999995787e-06, 4.720000000013602e-07, 6.29200000000496e-06, 4.7199999999442133e-07, 8.318999999999688e-06, 4.7300000000083386e-07, 7.875000000004406e-06, 4.7199999999442133e-07, 9.875000000006406e-06, 4.7199999999442133e-07, 5.5000000000055005e-06, 4.7199999999442133e-07, 8.917000000004116e-06, 4.720000000013602e-07, 5.860999999995897e-06, 5.419999999992098e-07, 6.499999999999562e-06, 4.720000000013602e-07, 6.097000000003516e-06, 4.7300000000083386e-07, 4.874999999994467e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.720000000013602e-07, 7.582999999998508e-06, 4.720000000013602e-07, 7.333999999997731e-06, 4.720000000013602e-07, 9.569000000000938e-06, 4.7300000000083386e-07, 5.776999999998478e-06, 4.7300000000083386e-07, 9.985999999996553e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 9.971999999996983e-06, 4.7300000000083386e-07, 1.0819000000002188e-05, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 8.388999999997537e-06, 4.720000000013602e-07, 4.847000000002266e-06, 4.720000000013602e-07, 5.374999999994967e-06, 4.7300000000083386e-07, 5.583000000003446e-06, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 1.0014000000002632e-05, 5.419999999992098e-07, 6.415999999995203e-06, 4.7300000000083386e-07, 1.0083000000001008e-05, 4.720000000013602e-07, 8.638999999997787e-06, 4.720000000013602e-07, 4.83400000000217e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.7199999999442133e-07, 8.208000000002602e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:44.066" endtime="20201112 12:42:44.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.057" endtime="20201112 12:42:44.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:44.088" level="INFO">${RESULT} = [{'time': 0.035793069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035799528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:44.079" endtime="20201112 12:42:44.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:44.119" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:44.090" endtime="20201112 12:42:44.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.129" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:44.126" endtime="20201112 12:42:44.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.134" level="INFO">VALUE: [4.7199999999442133e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:42:44.131" endtime="20201112 12:42:44.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.120" endtime="20201112 12:42:44.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.143" endtime="20201112 12:42:44.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:44.151" endtime="20201112 12:42:44.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.147" endtime="20201112 12:42:44.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.138" endtime="20201112 12:42:44.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.538" endtime="20201112 12:42:44.177"></status>
</kw>
<msg timestamp="20201112 12:42:44.177" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.200" endtime="20201112 12:42:44.210"></status>
</kw>
<msg timestamp="20201112 12:42:44.211" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.196" endtime="20201112 12:42:44.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.217" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.213" endtime="20201112 12:42:44.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.220" endtime="20201112 12:42:44.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.187" endtime="20201112 12:42:44.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.182" endtime="20201112 12:42:44.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.243" endtime="20201112 12:42:44.584"></status>
</kw>
<msg timestamp="20201112 12:42:44.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038751778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03875225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:44.240" endtime="20201112 12:42:44.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038751778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03875225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:44.594" endtime="20201112 12:42:44.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.613" endtime="20201112 12:42:44.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.232" endtime="20201112 12:42:44.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.228" endtime="20201112 12:42:44.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.629" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:44.627" endtime="20201112 12:42:44.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.640" level="INFO">VALUE: [{'time': 0.038751778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03875225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038757417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.038757889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038764097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.038764569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038772778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.209000000002076e-06, 'source_diff': 8.209000000002076e-06}, {'time': 0.03877325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038778306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999996341e-06, 'source_diff': 5.055999999996341e-06}, {'time': 0.038778778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038787194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.415999999997203e-06, 'source_diff': 8.415999999997203e-06}, {'time': 0.038787667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038793042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.038793514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038798153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.038798625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038803958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999996257e-06, 'source_diff': 5.332999999996257e-06}, {'time': 0.0388045, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038811958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.038812431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038821028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.0388215, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038826264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.038826736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038834097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.038834569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038843514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.945000000003256e-06, 'source_diff': 8.945000000003256e-06}, {'time': 0.038843986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038852917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000003686e-06, 'source_diff': 8.931000000003686e-06}, {'time': 0.038853389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038861583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999996093e-06, 'source_diff': 8.193999999996093e-06}, {'time': 0.038862056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038869097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.038869569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038879014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.445000000003756e-06, 'source_diff': 9.445000000003756e-06}, {'time': 0.038879486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038889681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0195000000004506e-05, 'source_diff': 1.0195000000004506e-05}, {'time': 0.038890153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038896347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.038896819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038903042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.038903514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038913528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.038914069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038924361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0291999999995083e-05, 'source_diff': 1.0291999999995083e-05}, {'time': 0.038924833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038935208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.038935681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0389465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0819000000002188e-05, 'source_diff': 1.0819000000002188e-05}, {'time': 0.038946972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038954139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166999999995427e-06, 'source_diff': 7.166999999995427e-06}, {'time': 0.038954611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038959764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.038960236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038967694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.457999999994913e-06, 'source_diff': 7.457999999994913e-06}, {'time': 0.038968167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038977514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.038977986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038982528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.038983, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03899225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.038992722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038999972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.039000444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039009694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.249999999995373e-06, 'source_diff': 9.249999999995373e-06}, {'time': 0.039010167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039020764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.039021236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03902725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.039027722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039033514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.039033986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039040931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.039041403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039051792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.039052264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039060264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.999999999994123e-06, 'source_diff': 7.999999999994123e-06}, {'time': 0.039060736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039066944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.039067417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039077597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.039078069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039082639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.57000000000235e-06, 'source_diff': 4.57000000000235e-06}, {'time': 0.039083111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.0390895, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.039089972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039097542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.039098014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039102694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.039103167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039108208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.040999999997298e-06, 'source_diff': 5.040999999997298e-06}, {'time': 0.039108681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039116569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.887999999997564e-06, 'source_diff': 7.887999999997564e-06}, {'time': 0.039117042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039125417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.375000000004906e-06, 'source_diff': 8.375000000004906e-06}, {'time': 0.039125958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.039130764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999996091e-06, 'source_diff': 4.805999999996091e-06}, {'time': 0.039131236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039137139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.039137611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:44.631" endtime="20201112 12:42:44.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.621" endtime="20201112 12:42:44.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:44.700" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:44.646" endtime="20201112 12:42:44.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.709" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:44.707" endtime="20201112 12:42:44.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.718" level="INFO">VALUE: {'sourcetime': [0.038751778, 0.03875225, 0.038757417, 0.038757889, 0.038764097, 0.038764569, 0.038772778, 0.03877325, 0.038778306, 0.038778778, 0.038787194, 0.038787667, 0.038793042, 0.038793514, 0.038798153, 0.038798625, 0.038803958, 0.0388045, 0.038811958, 0.038812431, 0.038821028, 0.0388215, 0.038826264, 0.038826736, 0.038834097, 0.038834569, 0.038843514, 0.038843986, 0.038852917, 0.038853389, 0.038861583, 0.038862056, 0.038869097, 0.038869569, 0.038879014, 0.038879486, 0.038889681, 0.038890153, 0.038896347, 0.038896819, 0.038903042, 0.038903514, 0.038913528, 0.038914069, 0.038924361, 0.038924833, 0.038935208, 0.038935681, 0.0389465, 0.038946972, 0.038954139, 0.038954611, 0.038959764, 0.038960236, 0.038967694, 0.038968167, 0.038977514, 0.038977986, 0.038982528, 0.038983, 0.03899225, 0.038992722, 0.038999972, 0.039000444, 0.039009694, 0.039010167, 0.039020764, 0.039021236, 0.03902725, 0.039027722, 0.039033514, 0.039033986, 0.039040931, 0.039041403, 0.039051792, 0.039052264, 0.039060264, 0.039060736, 0.039066944, 0.039067417, 0.039077597, 0.039078069, 0.039082639, 0.039083111, 0.0390895, 0.039089972, 0.039097542, 0.039098014, 0.039102694, 0.039103167, 0.039108208, 0.039108681, 0.039116569, 0.039117042, 0.039125417, 0.039125958, 0.039130764, 0.039131236, 0.039137139, 0.039137611], 'eventsource_diff': [0, 4.720000000013602e-07, 5.167000000000366e-06, 4.7199999999442133e-07, 6.208000000000602e-06, 4.720000000013602e-07, 8.209000000002076e-06, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 8.415999999997203e-06, 4.7300000000083386e-07, 5.375000000001906e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 5.332999999996257e-06, 5.419999999992098e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 8.596999999999078e-06, 4.720000000013602e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 8.945000000003256e-06, 4.7199999999442133e-07, 8.931000000003686e-06, 4.720000000013602e-07, 8.193999999996093e-06, 4.7300000000083386e-07, 7.040999999999298e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.7199999999442133e-07, 1.0195000000004506e-05, 4.7199999999442133e-07, 6.194000000001032e-06, 4.720000000013602e-07, 6.2229999999996455e-06, 4.720000000013602e-07, 1.0014000000002632e-05, 5.409999999997361e-07, 1.0291999999995083e-05, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 1.0819000000002188e-05, 4.720000000013602e-07, 7.166999999995427e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.720000000013602e-07, 7.457999999994913e-06, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.7199999999442133e-07, 9.250000000002312e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.720000000013602e-07, 9.249999999995373e-06, 4.7300000000083386e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 7.999999999994123e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.7300000000083386e-07, 1.0179999999998524e-05, 4.720000000013602e-07, 4.57000000000235e-06, 4.7199999999442133e-07, 6.389000000002476e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 4.679999999999962e-06, 4.7300000000083386e-07, 5.040999999997298e-06, 4.7300000000083386e-07, 7.887999999997564e-06, 4.7300000000083386e-07, 8.375000000004906e-06, 5.409999999997361e-07, 4.805999999996091e-06, 4.720000000013602e-07, 5.903000000001546e-06, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 5.167000000000366e-06, 4.7199999999442133e-07, 6.208000000000602e-06, 4.720000000013602e-07, 8.209000000002076e-06, 4.720000000013602e-07, 5.055999999996341e-06, 4.720000000013602e-07, 8.415999999997203e-06, 4.7300000000083386e-07, 5.375000000001906e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 5.332999999996257e-06, 5.419999999992098e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 8.596999999999078e-06, 4.720000000013602e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 7.360999999997397e-06, 4.720000000013602e-07, 8.945000000003256e-06, 4.7199999999442133e-07, 8.931000000003686e-06, 4.720000000013602e-07, 8.193999999996093e-06, 4.7300000000083386e-07, 7.040999999999298e-06, 4.720000000013602e-07, 9.445000000003756e-06, 4.7199999999442133e-07, 1.0195000000004506e-05, 4.7199999999442133e-07, 6.194000000001032e-06, 4.720000000013602e-07, 6.2229999999996455e-06, 4.720000000013602e-07, 1.0014000000002632e-05, 5.409999999997361e-07, 1.0291999999995083e-05, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7300000000083386e-07, 1.0819000000002188e-05, 4.720000000013602e-07, 7.166999999995427e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.720000000013602e-07, 7.457999999994913e-06, 4.7300000000083386e-07, 9.346999999999828e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.7199999999442133e-07, 9.250000000002312e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.720000000013602e-07, 9.249999999995373e-06, 4.7300000000083386e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 7.999999999994123e-06, 4.720000000013602e-07, 6.208000000000602e-06, 4.7300000000083386e-07, 1.0179999999998524e-05, 4.720000000013602e-07, 4.57000000000235e-06, 4.7199999999442133e-07, 6.389000000002476e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 4.679999999999962e-06, 4.7300000000083386e-07, 5.040999999997298e-06, 4.7300000000083386e-07, 7.887999999997564e-06, 4.7300000000083386e-07, 8.375000000004906e-06, 5.409999999997361e-07, 4.805999999996091e-06, 4.720000000013602e-07, 5.903000000001546e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:44.711" endtime="20201112 12:42:44.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.702" endtime="20201112 12:42:44.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:44.732" level="INFO">${RESULT} = [{'time': 0.03875225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038757889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:44.723" endtime="20201112 12:42:44.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:44.763" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:44.734" endtime="20201112 12:42:44.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.774" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:44.771" endtime="20201112 12:42:44.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.780" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:42:44.776" endtime="20201112 12:42:44.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.765" endtime="20201112 12:42:44.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.788" endtime="20201112 12:42:44.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:44.797" endtime="20201112 12:42:44.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.792" endtime="20201112 12:42:44.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.784" endtime="20201112 12:42:44.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.179" endtime="20201112 12:42:44.822"></status>
</kw>
<msg timestamp="20201112 12:42:44.823" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.842" endtime="20201112 12:42:44.852"></status>
</kw>
<msg timestamp="20201112 12:42:44.854" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.839" endtime="20201112 12:42:44.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.860" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.856" endtime="20201112 12:42:44.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.862" endtime="20201112 12:42:44.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.832" endtime="20201112 12:42:44.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.827" endtime="20201112 12:42:44.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.885" endtime="20201112 12:42:45.215"></status>
</kw>
<msg timestamp="20201112 12:42:45.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035474903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035475375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.882" endtime="20201112 12:42:45.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035474903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035475375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.224" endtime="20201112 12:42:45.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.244" endtime="20201112 12:42:45.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.875" endtime="20201112 12:42:45.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.870" endtime="20201112 12:42:45.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.260" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:45.258" endtime="20201112 12:42:45.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.271" level="INFO">VALUE: [{'time': 0.035474903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035475375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035486264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0888999999993099e-05, 'source_diff': 1.0888999999993099e-05}, {'time': 0.035486736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035493958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.222000000001172e-06, 'source_diff': 7.222000000001172e-06}, {'time': 0.0354945, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035500681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.035501153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035510208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.055000000000868e-06, 'source_diff': 9.055000000000868e-06}, {'time': 0.035510681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035515208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.526999999997228e-06, 'source_diff': 4.526999999997228e-06}, {'time': 0.035515681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035524819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.137999999998814e-06, 'source_diff': 9.137999999998814e-06}, {'time': 0.035525292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035533292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.035533764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035542694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.035543167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035551278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.03555175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035558056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.035558528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035563069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5410000000037365e-06, 'source_diff': 4.5410000000037365e-06}, {'time': 0.035563542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035569236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.035569708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035576444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.035576917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035584486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.035584958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035593069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.035593542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035598486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.035598958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035608222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.264000000001882e-06, 'source_diff': 9.264000000001882e-06}, {'time': 0.035608694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035618028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.0356185, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035624403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.035624875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035635722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0847000000001328e-05, 'source_diff': 1.0847000000001328e-05}, {'time': 0.035636194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035646514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0319999999994223e-05, 'source_diff': 1.0319999999994223e-05}, {'time': 0.035647056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.035655236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.179999999996523e-06, 'source_diff': 8.179999999996523e-06}, {'time': 0.035655708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035665611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.035666153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035674125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.035674597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03568325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.652999999997357e-06, 'source_diff': 8.652999999997357e-06}, {'time': 0.035683722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035694083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0361000000000398e-05, 'source_diff': 1.0361000000000398e-05}, {'time': 0.035694556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035702028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.471999999994483e-06, 'source_diff': 7.471999999994483e-06}, {'time': 0.0357025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035710486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.035710958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035716236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.035716708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035724194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.035724667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035732444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777000000000478e-06, 'source_diff': 7.777000000000478e-06}, {'time': 0.035732917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035742306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.035742847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035747278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.03574775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035752069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999995687e-06, 'source_diff': 4.318999999995687e-06}, {'time': 0.035752542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035760514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.035760986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035767736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.035768208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035775153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944999999994317e-06, 'source_diff': 6.944999999994317e-06}, {'time': 0.035775625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035782667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.035783139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035792181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.035792653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035800236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.035800708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035809611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.035810083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035817667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.583999999997981e-06, 'source_diff': 7.583999999997981e-06}, {'time': 0.035818139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035825819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680000000002962e-06, 'source_diff': 7.680000000002962e-06}, {'time': 0.035826292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035834375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.035834847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035839389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.035839861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035847542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}, {'time': 0.035848014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035858611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.035859083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035866986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.902999999996607e-06, 'source_diff': 7.902999999996607e-06}, {'time': 0.035867458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035876889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.431000000004186e-06, 'source_diff': 9.431000000004186e-06}, {'time': 0.035877361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:45.262" endtime="20201112 12:42:45.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.252" endtime="20201112 12:42:45.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:45.333" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:45.277" endtime="20201112 12:42:45.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.342" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:45.340" endtime="20201112 12:42:45.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.351" level="INFO">VALUE: {'sourcetime': [0.035474903, 0.035475375, 0.035486264, 0.035486736, 0.035493958, 0.0354945, 0.035500681, 0.035501153, 0.035510208, 0.035510681, 0.035515208, 0.035515681, 0.035524819, 0.035525292, 0.035533292, 0.035533764, 0.035542694, 0.035543167, 0.035551278, 0.03555175, 0.035558056, 0.035558528, 0.035563069, 0.035563542, 0.035569236, 0.035569708, 0.035576444, 0.035576917, 0.035584486, 0.035584958, 0.035593069, 0.035593542, 0.035598486, 0.035598958, 0.035608222, 0.035608694, 0.035618028, 0.0356185, 0.035624403, 0.035624875, 0.035635722, 0.035636194, 0.035646514, 0.035647056, 0.035655236, 0.035655708, 0.035665611, 0.035666153, 0.035674125, 0.035674597, 0.03568325, 0.035683722, 0.035694083, 0.035694556, 0.035702028, 0.0357025, 0.035710486, 0.035710958, 0.035716236, 0.035716708, 0.035724194, 0.035724667, 0.035732444, 0.035732917, 0.035742306, 0.035742847, 0.035747278, 0.03574775, 0.035752069, 0.035752542, 0.035760514, 0.035760986, 0.035767736, 0.035768208, 0.035775153, 0.035775625, 0.035782667, 0.035783139, 0.035792181, 0.035792653, 0.035800236, 0.035800708, 0.035809611, 0.035810083, 0.035817667, 0.035818139, 0.035825819, 0.035826292, 0.035834375, 0.035834847, 0.035839389, 0.035839861, 0.035847542, 0.035848014, 0.035858611, 0.035859083, 0.035866986, 0.035867458, 0.035876889, 0.035877361], 'eventsource_diff': [0, 4.720000000013602e-07, 1.0888999999993099e-05, 4.720000000013602e-07, 7.222000000001172e-06, 5.419999999992098e-07, 6.181000000000936e-06, 4.720000000013602e-07, 9.055000000000868e-06, 4.7300000000083386e-07, 4.526999999997228e-06, 4.7300000000083386e-07, 9.137999999998814e-06, 4.7300000000083386e-07, 8.000000000001062e-06, 4.720000000013602e-07, 8.929999999997273e-06, 4.7300000000083386e-07, 8.110999999998147e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 4.5410000000037365e-06, 4.7299999999389497e-07, 5.694000000000532e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.7300000000083386e-07, 4.943999999999782e-06, 4.720000000013602e-07, 9.264000000001882e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07, 1.0847000000001328e-05, 4.720000000013602e-07, 1.0319999999994223e-05, 5.420000000061487e-07, 8.179999999996523e-06, 4.720000000013602e-07, 9.902999999998607e-06, 5.419999999992098e-07, 7.972000000001922e-06, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7300000000083386e-07, 7.471999999994483e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 7.486000000000992e-06, 4.7300000000083386e-07, 7.777000000000478e-06, 4.7300000000083386e-07, 9.388999999998537e-06, 5.409999999997361e-07, 4.430999999999186e-06, 4.720000000013602e-07, 4.318999999995687e-06, 4.7300000000083386e-07, 7.972000000001922e-06, 4.720000000013602e-07, 6.749999999999812e-06, 4.720000000013602e-07, 6.944999999994317e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.720000000013602e-07, 7.582999999998508e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 7.583999999997981e-06, 4.720000000013602e-07, 7.680000000002962e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 7.681000000002436e-06, 4.7199999999442133e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 7.902999999996607e-06, 4.720000000013602e-07, 9.431000000004186e-06, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 1.0888999999993099e-05, 4.720000000013602e-07, 7.222000000001172e-06, 5.419999999992098e-07, 6.181000000000936e-06, 4.720000000013602e-07, 9.055000000000868e-06, 4.7300000000083386e-07, 4.526999999997228e-06, 4.7300000000083386e-07, 9.137999999998814e-06, 4.7300000000083386e-07, 8.000000000001062e-06, 4.720000000013602e-07, 8.929999999997273e-06, 4.7300000000083386e-07, 8.110999999998147e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 4.5410000000037365e-06, 4.7299999999389497e-07, 5.694000000000532e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.7300000000083386e-07, 4.943999999999782e-06, 4.720000000013602e-07, 9.264000000001882e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07, 1.0847000000001328e-05, 4.720000000013602e-07, 1.0319999999994223e-05, 5.420000000061487e-07, 8.179999999996523e-06, 4.720000000013602e-07, 9.902999999998607e-06, 5.419999999992098e-07, 7.972000000001922e-06, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 1.0361000000000398e-05, 4.7300000000083386e-07, 7.471999999994483e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 7.486000000000992e-06, 4.7300000000083386e-07, 7.777000000000478e-06, 4.7300000000083386e-07, 9.388999999998537e-06, 5.409999999997361e-07, 4.430999999999186e-06, 4.720000000013602e-07, 4.318999999995687e-06, 4.7300000000083386e-07, 7.972000000001922e-06, 4.720000000013602e-07, 6.749999999999812e-06, 4.720000000013602e-07, 6.944999999994317e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.720000000013602e-07, 7.582999999998508e-06, 4.720000000013602e-07, 8.902999999997607e-06, 4.720000000013602e-07, 7.583999999997981e-06, 4.720000000013602e-07, 7.680000000002962e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 4.541999999996271e-06, 4.720000000013602e-07, 7.681000000002436e-06, 4.7199999999442133e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 7.902999999996607e-06, 4.720000000013602e-07, 9.431000000004186e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:45.344" endtime="20201112 12:42:45.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.335" endtime="20201112 12:42:45.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:45.365" level="INFO">${RESULT} = [{'time': 0.035475375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035486736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:45.357" endtime="20201112 12:42:45.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:45.396" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:45.367" endtime="20201112 12:42:45.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.406" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:45.404" endtime="20201112 12:42:45.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.411" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000061487e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:42:45.408" endtime="20201112 12:42:45.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.398" endtime="20201112 12:42:45.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.420" endtime="20201112 12:42:45.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:45.428" endtime="20201112 12:42:45.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.424" endtime="20201112 12:42:45.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.415" endtime="20201112 12:42:45.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.824" endtime="20201112 12:42:45.454"></status>
</kw>
<msg timestamp="20201112 12:42:45.454" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.474" endtime="20201112 12:42:45.484"></status>
</kw>
<msg timestamp="20201112 12:42:45.485" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.470" endtime="20201112 12:42:45.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.491" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.487" endtime="20201112 12:42:45.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.494" endtime="20201112 12:42:45.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.463" endtime="20201112 12:42:45.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.459" endtime="20201112 12:42:45.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.517" endtime="20201112 12:42:45.856"></status>
</kw>
<msg timestamp="20201112 12:42:45.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035600875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035601347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.513" endtime="20201112 12:42:45.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035600875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035601347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.866" endtime="20201112 12:42:45.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.885" endtime="20201112 12:42:45.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.506" endtime="20201112 12:42:45.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.502" endtime="20201112 12:42:45.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.902" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:45.900" endtime="20201112 12:42:45.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.914" level="INFO">VALUE: [{'time': 0.035600875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035601347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035608181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.83400000000417e-06, 'source_diff': 6.83400000000417e-06}, {'time': 0.035608653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035616111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.035616583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035627486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.035627958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035634694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.035635167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035642056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999996037e-06, 'source_diff': 6.888999999996037e-06}, {'time': 0.035642597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035647139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.035647611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035656014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.035656486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035667181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0694999999998067e-05, 'source_diff': 1.0694999999998067e-05}, {'time': 0.035667653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035676569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.915999999997704e-06, 'source_diff': 8.915999999997704e-06}, {'time': 0.035677042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035684514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.035684986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035694139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.035694611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035701014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.035701486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035712319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0833000000001758e-05, 'source_diff': 1.0833000000001758e-05}, {'time': 0.035712792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035718375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999996507e-06, 'source_diff': 5.582999999996507e-06}, {'time': 0.035718847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035723792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9449999999992555e-06, 'source_diff': 4.9449999999992555e-06}, {'time': 0.035724264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035729431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.035729903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035735389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.035735861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035741792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.035742333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035748556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.035749028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035756167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138999999996287e-06, 'source_diff': 7.138999999996287e-06}, {'time': 0.035756639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035767028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.0357675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035772167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.035772639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035779667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.035780139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035790319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0179999999998524e-05, 'source_diff': 1.0179999999998524e-05}, {'time': 0.035790792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035799722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.035800194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035809556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.361999999998871e-06, 'source_diff': 9.361999999998871e-06}, {'time': 0.035810028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035816444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.416000000002142e-06, 'source_diff': 6.416000000002142e-06}, {'time': 0.035816917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035821556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.035822028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035832639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.035833111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0358435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.035843972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035852167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194999999995567e-06, 'source_diff': 8.194999999995567e-06}, {'time': 0.035852639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035858792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.035859333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035864597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.035865069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035870347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.035870819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035879069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.035879611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035889667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0056000000001342e-05, 'source_diff': 1.0056000000001342e-05}, {'time': 0.035890139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035895333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.035895806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035905236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.429999999997773e-06, 'source_diff': 9.429999999997773e-06}, {'time': 0.035905708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035916111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.035916583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035926347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.763999999995443e-06, 'source_diff': 9.763999999995443e-06}, {'time': 0.035926819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035935014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.035935486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035944514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027999999994263e-06, 'source_diff': 9.027999999994263e-06}, {'time': 0.035944986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035950778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.79200000000446e-06, 'source_diff': 5.79200000000446e-06}, {'time': 0.03595125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035958931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}, {'time': 0.035959403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.035970472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035977431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958999999993887e-06, 'source_diff': 6.958999999993887e-06}, {'time': 0.035977903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0359865, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.035986972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035991736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.76400000000432e-06, 'source_diff': 4.76400000000432e-06}, {'time': 0.035992208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036002694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000003992e-05, 'source_diff': 1.0486000000003992e-05}, {'time': 0.036003167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:45.905" endtime="20201112 12:42:45.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.894" endtime="20201112 12:42:45.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:45.975" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:45.920" endtime="20201112 12:42:45.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.984" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:45.982" endtime="20201112 12:42:45.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.994" level="INFO">VALUE: {'sourcetime': [0.035600875, 0.035601347, 0.035608181, 0.035608653, 0.035616111, 0.035616583, 0.035627486, 0.035627958, 0.035634694, 0.035635167, 0.035642056, 0.035642597, 0.035647139, 0.035647611, 0.035656014, 0.035656486, 0.035667181, 0.035667653, 0.035676569, 0.035677042, 0.035684514, 0.035684986, 0.035694139, 0.035694611, 0.035701014, 0.035701486, 0.035712319, 0.035712792, 0.035718375, 0.035718847, 0.035723792, 0.035724264, 0.035729431, 0.035729903, 0.035735389, 0.035735861, 0.035741792, 0.035742333, 0.035748556, 0.035749028, 0.035756167, 0.035756639, 0.035767028, 0.0357675, 0.035772167, 0.035772639, 0.035779667, 0.035780139, 0.035790319, 0.035790792, 0.035799722, 0.035800194, 0.035809556, 0.035810028, 0.035816444, 0.035816917, 0.035821556, 0.035822028, 0.035832639, 0.035833111, 0.0358435, 0.035843972, 0.035852167, 0.035852639, 0.035858792, 0.035859333, 0.035864597, 0.035865069, 0.035870347, 0.035870819, 0.035879069, 0.035879611, 0.035889667, 0.035890139, 0.035895333, 0.035895806, 0.035905236, 0.035905708, 0.035916111, 0.035916583, 0.035926347, 0.035926819, 0.035935014, 0.035935486, 0.035944514, 0.035944986, 0.035950778, 0.03595125, 0.035958931, 0.035959403, 0.03597, 0.035970472, 0.035977431, 0.035977903, 0.0359865, 0.035986972, 0.035991736, 0.035992208, 0.036002694, 0.036003167], 'eventsource_diff': [0, 4.720000000013602e-07, 6.83400000000417e-06, 4.7199999999442133e-07, 7.458000000001852e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 6.736000000000242e-06, 4.7300000000083386e-07, 6.888999999996037e-06, 5.409999999997361e-07, 4.54200000000321e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 8.915999999997704e-06, 4.7300000000083386e-07, 7.472000000001422e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 6.403000000002046e-06, 4.7199999999442133e-07, 1.0833000000001758e-05, 4.7300000000083386e-07, 5.582999999996507e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 5.931000000000686e-06, 5.409999999997361e-07, 6.2229999999996455e-06, 4.720000000013602e-07, 7.138999999996287e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 4.666999999999866e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 9.361999999998871e-06, 4.720000000013602e-07, 6.416000000002142e-06, 4.7299999999389497e-07, 4.639000000000726e-06, 4.720000000013602e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.194999999995567e-06, 4.720000000013602e-07, 6.153000000001796e-06, 5.409999999997361e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 8.250000000001312e-06, 5.419999999992098e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 9.429999999997773e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 8.195000000002506e-06, 4.720000000013602e-07, 9.027999999994263e-06, 4.720000000013602e-07, 5.79200000000446e-06, 4.7199999999442133e-07, 7.681000000002436e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 6.958999999993887e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 4.76400000000432e-06, 4.7199999999442133e-07, 1.0486000000003992e-05, 4.7300000000083386e-07], 'diff': [0, 4.720000000013602e-07, 6.83400000000417e-06, 4.7199999999442133e-07, 7.458000000001852e-06, 4.720000000013602e-07, 1.0902999999999607e-05, 4.720000000013602e-07, 6.736000000000242e-06, 4.7300000000083386e-07, 6.888999999996037e-06, 5.409999999997361e-07, 4.54200000000321e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 1.0694999999998067e-05, 4.720000000013602e-07, 8.915999999997704e-06, 4.7300000000083386e-07, 7.472000000001422e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 6.403000000002046e-06, 4.7199999999442133e-07, 1.0833000000001758e-05, 4.7300000000083386e-07, 5.582999999996507e-06, 4.720000000013602e-07, 4.9449999999992555e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 5.931000000000686e-06, 5.409999999997361e-07, 6.2229999999996455e-06, 4.720000000013602e-07, 7.138999999996287e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 4.666999999999866e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 1.0179999999998524e-05, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 9.361999999998871e-06, 4.720000000013602e-07, 6.416000000002142e-06, 4.7299999999389497e-07, 4.639000000000726e-06, 4.720000000013602e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.194999999995567e-06, 4.720000000013602e-07, 6.153000000001796e-06, 5.409999999997361e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 8.250000000001312e-06, 5.419999999992098e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 9.429999999997773e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 9.763999999995443e-06, 4.720000000013602e-07, 8.195000000002506e-06, 4.720000000013602e-07, 9.027999999994263e-06, 4.720000000013602e-07, 5.79200000000446e-06, 4.7199999999442133e-07, 7.681000000002436e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 6.958999999993887e-06, 4.720000000013602e-07, 8.596999999999078e-06, 4.720000000013602e-07, 4.76400000000432e-06, 4.7199999999442133e-07, 1.0486000000003992e-05, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:45.987" endtime="20201112 12:42:45.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.977" endtime="20201112 12:42:45.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:46.009" level="INFO">${RESULT} = [{'time': 0.035601347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035608653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:45.999" endtime="20201112 12:42:46.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:46.040" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:46.011" endtime="20201112 12:42:46.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.051" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:46.048" endtime="20201112 12:42:46.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.056" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 12:42:46.053" endtime="20201112 12:42:46.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.042" endtime="20201112 12:42:46.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.065" endtime="20201112 12:42:46.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:46.074" endtime="20201112 12:42:46.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.069" endtime="20201112 12:42:46.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.061" endtime="20201112 12:42:46.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.455" endtime="20201112 12:42:46.100"></status>
</kw>
<msg timestamp="20201112 12:42:46.100" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.123" endtime="20201112 12:42:46.135"></status>
</kw>
<msg timestamp="20201112 12:42:46.137" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.119" endtime="20201112 12:42:46.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.143" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.139" endtime="20201112 12:42:46.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.145" endtime="20201112 12:42:46.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.112" endtime="20201112 12:42:46.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.105" endtime="20201112 12:42:46.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.169" endtime="20201112 12:42:46.524"></status>
</kw>
<msg timestamp="20201112 12:42:46.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039150833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039151306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.166" endtime="20201112 12:42:46.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039150833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039151306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.534" endtime="20201112 12:42:46.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.554" endtime="20201112 12:42:46.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.159" endtime="20201112 12:42:46.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.154" endtime="20201112 12:42:46.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.570" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:46.568" endtime="20201112 12:42:46.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.582" level="INFO">VALUE: [{'time': 0.039150833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039151306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.039155611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305000000003056e-06, 'source_diff': 4.305000000003056e-06}, {'time': 0.039156083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0916999999999177e-05, 'source_diff': 1.0916999999999177e-05}, {'time': 0.039167472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039173472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.039173944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039183083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.039183556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039191542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.039192014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039199153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.039199625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039209597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.971999999996983e-06, 'source_diff': 9.971999999996983e-06}, {'time': 0.039210069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039220583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0514000000003132e-05, 'source_diff': 1.0514000000003132e-05}, {'time': 0.039221056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.039231014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.958000000004352e-06, 'source_diff': 9.958000000004352e-06}, {'time': 0.039231486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039236667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.039237139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039242708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569000000003876e-06, 'source_diff': 5.569000000003876e-06}, {'time': 0.039243181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039250889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.707999999995163e-06, 'source_diff': 7.707999999995163e-06}, {'time': 0.039251361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039256708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.039257181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039266417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.235999999995803e-06, 'source_diff': 9.235999999995803e-06}, {'time': 0.039266889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039273236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.347000000003766e-06, 'source_diff': 6.347000000003766e-06}, {'time': 0.039273708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039283056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347999999999301e-06, 'source_diff': 9.347999999999301e-06}, {'time': 0.039283528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039292861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.039293333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039297764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.039298236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039306847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.039307319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03931625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930999999996747e-06, 'source_diff': 8.930999999996747e-06}, {'time': 0.039316722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039321986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.26400000000482e-06, 'source_diff': 5.26400000000482e-06}, {'time': 0.039322458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039327625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.039328097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039333403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.30600000000353e-06, 'source_diff': 5.30600000000353e-06}, {'time': 0.039333944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.039340569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.039341042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039347986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.039348458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039354458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.039354931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03935925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999995687e-06, 'source_diff': 4.318999999995687e-06}, {'time': 0.039359722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039369375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.039369847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039374806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.039375278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039385694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0415999999999204e-05, 'source_diff': 1.0415999999999204e-05}, {'time': 0.039386167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039395903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.736000000003242e-06, 'source_diff': 9.736000000003242e-06}, {'time': 0.039396375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039407306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0931000000005686e-05, 'source_diff': 1.0931000000005686e-05}, {'time': 0.039407778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039417639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.039418111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039428708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.039429181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039434347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.039434819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039439778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.03944025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039448444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999996093e-06, 'source_diff': 8.193999999996093e-06}, {'time': 0.039448917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039453889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.039454361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039459194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.039459667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.039465375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.039465847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039473403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.039473875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039483958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.039484431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039491278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.03949175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039496903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.039497375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039504861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.039505333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039511639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.30600000000453e-06, 'source_diff': 6.30600000000453e-06}, {'time': 0.039512111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039520722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.039521194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039528972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.039529444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039535764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3200000000041e-06, 'source_diff': 6.3200000000041e-06}, {'time': 0.039536236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:46.573" endtime="20201112 12:42:46.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.562" endtime="20201112 12:42:46.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:46.643" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:46.588" endtime="20201112 12:42:46.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.653" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:46.651" endtime="20201112 12:42:46.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.662" level="INFO">VALUE: {'sourcetime': [0.039150833, 0.039151306, 0.039155611, 0.039156083, 0.039167, 0.039167472, 0.039173472, 0.039173944, 0.039183083, 0.039183556, 0.039191542, 0.039192014, 0.039199153, 0.039199625, 0.039209597, 0.039210069, 0.039220583, 0.039221056, 0.039231014, 0.039231486, 0.039236667, 0.039237139, 0.039242708, 0.039243181, 0.039250889, 0.039251361, 0.039256708, 0.039257181, 0.039266417, 0.039266889, 0.039273236, 0.039273708, 0.039283056, 0.039283528, 0.039292861, 0.039293333, 0.039297764, 0.039298236, 0.039306847, 0.039307319, 0.03931625, 0.039316722, 0.039321986, 0.039322458, 0.039327625, 0.039328097, 0.039333403, 0.039333944, 0.039340569, 0.039341042, 0.039347986, 0.039348458, 0.039354458, 0.039354931, 0.03935925, 0.039359722, 0.039369375, 0.039369847, 0.039374806, 0.039375278, 0.039385694, 0.039386167, 0.039395903, 0.039396375, 0.039407306, 0.039407778, 0.039417639, 0.039418111, 0.039428708, 0.039429181, 0.039434347, 0.039434819, 0.039439778, 0.03944025, 0.039448444, 0.039448917, 0.039453889, 0.039454361, 0.039459194, 0.039459667, 0.039465375, 0.039465847, 0.039473403, 0.039473875, 0.039483958, 0.039484431, 0.039491278, 0.03949175, 0.039496903, 0.039497375, 0.039504861, 0.039505333, 0.039511639, 0.039512111, 0.039520722, 0.039521194, 0.039528972, 0.039529444, 0.039535764, 0.039536236], 'eventsource_diff': [0, 4.7299999999389497e-07, 4.305000000003056e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.7300000000083386e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 7.139000000003226e-06, 4.720000000013602e-07, 9.971999999996983e-06, 4.720000000013602e-07, 1.0514000000003132e-05, 4.7299999999389497e-07, 9.958000000004352e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.7199999999442133e-07, 5.569000000003876e-06, 4.7300000000083386e-07, 7.707999999995163e-06, 4.720000000013602e-07, 5.347000000002766e-06, 4.7300000000083386e-07, 9.235999999995803e-06, 4.720000000013602e-07, 6.347000000003766e-06, 4.7199999999442133e-07, 9.347999999999301e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 5.26400000000482e-06, 4.7199999999442133e-07, 5.167000000000366e-06, 4.720000000013602e-07, 5.30600000000353e-06, 5.409999999997361e-07, 6.624999999996217e-06, 4.7300000000083386e-07, 6.944000000001782e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 4.318999999995687e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 1.0415999999999204e-05, 4.7300000000083386e-07, 9.736000000003242e-06, 4.7199999999442133e-07, 1.0931000000005686e-05, 4.7199999999442133e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7300000000083386e-07, 5.166000000000892e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 8.193999999996093e-06, 4.7300000000083386e-07, 4.971999999998922e-06, 4.720000000013602e-07, 4.833000000002696e-06, 4.7299999999389497e-07, 5.708000000000102e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7300000000083386e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.720000000013602e-07, 7.486000000000992e-06, 4.7199999999442133e-07, 6.30600000000453e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.7199999999442133e-07, 6.3200000000041e-06, 4.720000000013602e-07], 'diff': [0, 4.7299999999389497e-07, 4.305000000003056e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.7300000000083386e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 7.139000000003226e-06, 4.720000000013602e-07, 9.971999999996983e-06, 4.720000000013602e-07, 1.0514000000003132e-05, 4.7299999999389497e-07, 9.958000000004352e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.7199999999442133e-07, 5.569000000003876e-06, 4.7300000000083386e-07, 7.707999999995163e-06, 4.720000000013602e-07, 5.347000000002766e-06, 4.7300000000083386e-07, 9.235999999995803e-06, 4.720000000013602e-07, 6.347000000003766e-06, 4.7199999999442133e-07, 9.347999999999301e-06, 4.720000000013602e-07, 9.333000000000258e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 5.26400000000482e-06, 4.7199999999442133e-07, 5.167000000000366e-06, 4.720000000013602e-07, 5.30600000000353e-06, 5.409999999997361e-07, 6.624999999996217e-06, 4.7300000000083386e-07, 6.944000000001782e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 4.318999999995687e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 1.0415999999999204e-05, 4.7300000000083386e-07, 9.736000000003242e-06, 4.7199999999442133e-07, 1.0931000000005686e-05, 4.7199999999442133e-07, 9.860999999999898e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.7300000000083386e-07, 5.166000000000892e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 8.193999999996093e-06, 4.7300000000083386e-07, 4.971999999998922e-06, 4.720000000013602e-07, 4.833000000002696e-06, 4.7299999999389497e-07, 5.708000000000102e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7300000000083386e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 5.153000000000796e-06, 4.720000000013602e-07, 7.486000000000992e-06, 4.7199999999442133e-07, 6.30600000000453e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.7199999999442133e-07, 6.3200000000041e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:46.655" endtime="20201112 12:42:46.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.645" endtime="20201112 12:42:46.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:46.677" level="INFO">${RESULT} = [{'time': 0.039151306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.039156083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:46.668" endtime="20201112 12:42:46.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:46.708" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:46.679" endtime="20201112 12:42:46.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.720" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:46.716" endtime="20201112 12:42:46.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.726" level="INFO">VALUE: [4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:42:46.722" endtime="20201112 12:42:46.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.710" endtime="20201112 12:42:46.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.735" endtime="20201112 12:42:46.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:46.743" endtime="20201112 12:42:46.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.739" endtime="20201112 12:42:46.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.730" endtime="20201112 12:42:46.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.101" endtime="20201112 12:42:46.769"></status>
</kw>
<msg timestamp="20201112 12:42:46.770" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.790" endtime="20201112 12:42:46.804"></status>
</kw>
<msg timestamp="20201112 12:42:46.805" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.787" endtime="20201112 12:42:46.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.811" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.807" endtime="20201112 12:42:46.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.814" endtime="20201112 12:42:46.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.779" endtime="20201112 12:42:46.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.775" endtime="20201112 12:42:46.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.837" endtime="20201112 12:42:47.193"></status>
</kw>
<msg timestamp="20201112 12:42:47.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037113472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037113944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.834" endtime="20201112 12:42:47.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037113472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037113944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.203" endtime="20201112 12:42:47.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.222" endtime="20201112 12:42:47.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.827" endtime="20201112 12:42:47.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.822" endtime="20201112 12:42:47.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.239" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:47.237" endtime="20201112 12:42:47.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.251" level="INFO">VALUE: [{'time': 0.037113472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037113944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037119208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.037119681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037126778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0969999999975775e-06, 'source_diff': 7.0969999999975775e-06}, {'time': 0.037127319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037133819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.037134292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037141542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.037142014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037147083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0689999999964375e-06, 'source_diff': 5.0689999999964375e-06}, {'time': 0.037147556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037156486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930000000004212e-06, 'source_diff': 8.930000000004212e-06}, {'time': 0.037156958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037163278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3200000000041e-06, 'source_diff': 6.3200000000041e-06}, {'time': 0.03716375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037171542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.037172014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03718, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.985999999994553e-06, 'source_diff': 7.985999999994553e-06}, {'time': 0.037180472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037191403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0930999999998747e-05, 'source_diff': 1.0930999999998747e-05}, {'time': 0.037191875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037196819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.037197292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037205375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.037205847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037210958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.0372115, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037219167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999995927e-06, 'source_diff': 7.666999999995927e-06}, {'time': 0.037219639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037223958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.037224431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037230736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.037231208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037237014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805999999997091e-06, 'source_diff': 5.805999999997091e-06}, {'time': 0.037237486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037244444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.037244917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037252472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.037252944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037262208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.263999999994943e-06, 'source_diff': 9.263999999994943e-06}, {'time': 0.037262681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037272847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0165999999998954e-05, 'source_diff': 1.0165999999998954e-05}, {'time': 0.037273319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037278069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.037278542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037288333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.791000000002048e-06, 'source_diff': 9.791000000002048e-06}, {'time': 0.037288806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037297208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.401999999997634e-06, 'source_diff': 8.401999999997634e-06}, {'time': 0.037297681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037307222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.541000000001798e-06, 'source_diff': 9.541000000001798e-06}, {'time': 0.037307694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037312958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.037313431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037319347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.916000000001642e-06, 'source_diff': 5.916000000001642e-06}, {'time': 0.037319819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037325389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.57000000000335e-06, 'source_diff': 5.57000000000335e-06}, {'time': 0.037325861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037330528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.037331, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037338028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.0373385, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037349, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0500000000003562e-05, 'source_diff': 1.0500000000003562e-05}, {'time': 0.037349472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037355597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999995717e-06, 'source_diff': 6.124999999995717e-06}, {'time': 0.037356069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03736175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.037362222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037371167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.944999999996317e-06, 'source_diff': 8.944999999996317e-06}, {'time': 0.037371639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037381083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444000000004282e-06, 'source_diff': 9.444000000004282e-06}, {'time': 0.037381556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037387778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.03738825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037394875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.037395347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037401667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319999999997161e-06, 'source_diff': 6.319999999997161e-06}, {'time': 0.037402139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037412847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.037413319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037423153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.834000000000231e-06, 'source_diff': 9.834000000000231e-06}, {'time': 0.037423694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037432292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.597999999998551e-06, 'source_diff': 8.597999999998551e-06}, {'time': 0.037432764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037437083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.037437556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037441889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.037442361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037451181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.037451653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037461722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}, {'time': 0.037462194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037472042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847999999999801e-06, 'source_diff': 9.847999999999801e-06}, {'time': 0.037472514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037481028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.0374815, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037487208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.037487681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037495653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.971999999994983e-06, 'source_diff': 7.971999999994983e-06}, {'time': 0.037496125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:47.242" endtime="20201112 12:42:47.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.231" endtime="20201112 12:42:47.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:47.315" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:47.257" endtime="20201112 12:42:47.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.324" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:47.322" endtime="20201112 12:42:47.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.334" level="INFO">VALUE: {'sourcetime': [0.037113472, 0.037113944, 0.037119208, 0.037119681, 0.037126778, 0.037127319, 0.037133819, 0.037134292, 0.037141542, 0.037142014, 0.037147083, 0.037147556, 0.037156486, 0.037156958, 0.037163278, 0.03716375, 0.037171542, 0.037172014, 0.03718, 0.037180472, 0.037191403, 0.037191875, 0.037196819, 0.037197292, 0.037205375, 0.037205847, 0.037210958, 0.0372115, 0.037219167, 0.037219639, 0.037223958, 0.037224431, 0.037230736, 0.037231208, 0.037237014, 0.037237486, 0.037244444, 0.037244917, 0.037252472, 0.037252944, 0.037262208, 0.037262681, 0.037272847, 0.037273319, 0.037278069, 0.037278542, 0.037288333, 0.037288806, 0.037297208, 0.037297681, 0.037307222, 0.037307694, 0.037312958, 0.037313431, 0.037319347, 0.037319819, 0.037325389, 0.037325861, 0.037330528, 0.037331, 0.037338028, 0.0373385, 0.037349, 0.037349472, 0.037355597, 0.037356069, 0.03736175, 0.037362222, 0.037371167, 0.037371639, 0.037381083, 0.037381556, 0.037387778, 0.03738825, 0.037394875, 0.037395347, 0.037401667, 0.037402139, 0.037412847, 0.037413319, 0.037423153, 0.037423694, 0.037432292, 0.037432764, 0.037437083, 0.037437556, 0.037441889, 0.037442361, 0.037451181, 0.037451653, 0.037461722, 0.037462194, 0.037472042, 0.037472514, 0.037481028, 0.0374815, 0.037487208, 0.037487681, 0.037495653, 0.037496125], 'eventsource_diff': [0, 4.720000000013602e-07, 5.2639999999978815e-06, 4.7300000000083386e-07, 7.0969999999975775e-06, 5.409999999997361e-07, 6.499999999999562e-06, 4.7300000000083386e-07, 7.250000000000312e-06, 4.720000000013602e-07, 5.0689999999964375e-06, 4.7300000000083386e-07, 8.930000000004212e-06, 4.7199999999442133e-07, 6.3200000000041e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 7.985999999994553e-06, 4.720000000013602e-07, 1.0930999999998747e-05, 4.720000000013602e-07, 4.943999999999782e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 5.111000000002086e-06, 5.419999999992098e-07, 7.666999999995927e-06, 4.720000000013602e-07, 4.319000000002626e-06, 4.7300000000083386e-07, 6.304999999998118e-06, 4.720000000013602e-07, 5.805999999997091e-06, 4.720000000013602e-07, 6.958000000001352e-06, 4.7300000000083386e-07, 7.554999999999368e-06, 4.720000000013602e-07, 9.263999999994943e-06, 4.7300000000083386e-07, 1.0165999999998954e-05, 4.720000000013602e-07, 4.7499999999978115e-06, 4.7300000000083386e-07, 9.791000000002048e-06, 4.7300000000083386e-07, 8.401999999997634e-06, 4.7300000000083386e-07, 9.541000000001798e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.7300000000083386e-07, 5.916000000001642e-06, 4.7199999999442133e-07, 5.57000000000335e-06, 4.720000000013602e-07, 4.666999999999866e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.7199999999442133e-07, 1.0500000000003562e-05, 4.720000000013602e-07, 6.124999999995717e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 8.944999999996317e-06, 4.720000000013602e-07, 9.444000000004282e-06, 4.7300000000083386e-07, 6.222000000000172e-06, 4.7199999999442133e-07, 6.625000000003156e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 9.834000000000231e-06, 5.409999999997361e-07, 8.597999999998551e-06, 4.720000000013602e-07, 4.319000000002626e-06, 4.7299999999389497e-07, 4.333000000002196e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7199999999442133e-07, 9.847999999999801e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.720000000013602e-07, 5.708000000000102e-06, 4.7300000000083386e-07, 7.971999999994983e-06, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 5.2639999999978815e-06, 4.7300000000083386e-07, 7.0969999999975775e-06, 5.409999999997361e-07, 6.499999999999562e-06, 4.7300000000083386e-07, 7.250000000000312e-06, 4.720000000013602e-07, 5.0689999999964375e-06, 4.7300000000083386e-07, 8.930000000004212e-06, 4.7199999999442133e-07, 6.3200000000041e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 7.985999999994553e-06, 4.720000000013602e-07, 1.0930999999998747e-05, 4.720000000013602e-07, 4.943999999999782e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 5.111000000002086e-06, 5.419999999992098e-07, 7.666999999995927e-06, 4.720000000013602e-07, 4.319000000002626e-06, 4.7300000000083386e-07, 6.304999999998118e-06, 4.720000000013602e-07, 5.805999999997091e-06, 4.720000000013602e-07, 6.958000000001352e-06, 4.7300000000083386e-07, 7.554999999999368e-06, 4.720000000013602e-07, 9.263999999994943e-06, 4.7300000000083386e-07, 1.0165999999998954e-05, 4.720000000013602e-07, 4.7499999999978115e-06, 4.7300000000083386e-07, 9.791000000002048e-06, 4.7300000000083386e-07, 8.401999999997634e-06, 4.7300000000083386e-07, 9.541000000001798e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.7300000000083386e-07, 5.916000000001642e-06, 4.7199999999442133e-07, 5.57000000000335e-06, 4.720000000013602e-07, 4.666999999999866e-06, 4.720000000013602e-07, 7.0279999999992016e-06, 4.7199999999442133e-07, 1.0500000000003562e-05, 4.720000000013602e-07, 6.124999999995717e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 8.944999999996317e-06, 4.720000000013602e-07, 9.444000000004282e-06, 4.7300000000083386e-07, 6.222000000000172e-06, 4.7199999999442133e-07, 6.625000000003156e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 9.834000000000231e-06, 5.409999999997361e-07, 8.597999999998551e-06, 4.720000000013602e-07, 4.319000000002626e-06, 4.7299999999389497e-07, 4.333000000002196e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 1.0069000000001438e-05, 4.7199999999442133e-07, 9.847999999999801e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.720000000013602e-07, 5.708000000000102e-06, 4.7300000000083386e-07, 7.971999999994983e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:47.327" endtime="20201112 12:42:47.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.317" endtime="20201112 12:42:47.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:47.348" level="INFO">${RESULT} = [{'time': 0.037113944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037119681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:47.339" endtime="20201112 12:42:47.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:47.380" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:47.350" endtime="20201112 12:42:47.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.390" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:47.388" endtime="20201112 12:42:47.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.396" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:42:47.392" endtime="20201112 12:42:47.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.382" endtime="20201112 12:42:47.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.405" endtime="20201112 12:42:47.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:47.413" endtime="20201112 12:42:47.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.409" endtime="20201112 12:42:47.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.400" endtime="20201112 12:42:47.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.771" endtime="20201112 12:42:47.439"></status>
</kw>
<msg timestamp="20201112 12:42:47.440" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.460" endtime="20201112 12:42:47.472"></status>
</kw>
<msg timestamp="20201112 12:42:47.474" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.456" endtime="20201112 12:42:47.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.480" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.476" endtime="20201112 12:42:47.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.482" endtime="20201112 12:42:47.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.449" endtime="20201112 12:42:47.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.444" endtime="20201112 12:42:47.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.506" endtime="20201112 12:42:47.863"></status>
</kw>
<msg timestamp="20201112 12:42:47.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036878236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036878708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.503" endtime="20201112 12:42:47.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036878236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036878708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.873" endtime="20201112 12:42:47.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.892" endtime="20201112 12:42:47.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.495" endtime="20201112 12:42:47.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.491" endtime="20201112 12:42:47.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.909" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:47.907" endtime="20201112 12:42:47.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.921" level="INFO">VALUE: [{'time': 0.036878236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036878708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036888694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.036889167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036897667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.036898139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03690375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999995647e-06, 'source_diff': 5.610999999995647e-06}, {'time': 0.036904222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036909583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.036910056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036916806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.750000000006751e-06, 'source_diff': 6.750000000006751e-06}, {'time': 0.036917278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036923778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.03692425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036934347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0097000000000578e-05, 'source_diff': 1.0097000000000578e-05}, {'time': 0.036934819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036944986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.036945458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036950667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.036951139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036957528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.036958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036966, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.036966472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036973708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.036974181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036980597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.415999999995203e-06, 'source_diff': 6.415999999995203e-06}, {'time': 0.036981069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036985708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.036986181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036991347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.036991819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036998139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319999999997161e-06, 'source_diff': 6.319999999997161e-06}, {'time': 0.036998611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037007847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.236000000002742e-06, 'source_diff': 9.236000000002742e-06}, {'time': 0.037008319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037018, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.681000000004436e-06, 'source_diff': 9.681000000004436e-06}, {'time': 0.037018472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037028111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.639000000005726e-06, 'source_diff': 9.639000000005726e-06}, {'time': 0.037028583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037034181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.59800000000249e-06, 'source_diff': 5.59800000000249e-06}, {'time': 0.037034653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037040944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.037041417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037046944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.526999999998228e-06, 'source_diff': 5.526999999998228e-06}, {'time': 0.037047486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037053792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.30600000000453e-06, 'source_diff': 6.30600000000453e-06}, {'time': 0.037054264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037062667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.037063139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037069986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.037070458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037080542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0084000000000481e-05, 'source_diff': 1.0084000000000481e-05}, {'time': 0.037081014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037086069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0549999999968676e-06, 'source_diff': 5.0549999999968676e-06}, {'time': 0.037086542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037097472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0929999999999274e-05, 'source_diff': 1.0929999999999274e-05}, {'time': 0.037097944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037108014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.037108486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037115222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.037115694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037122528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.83400000000417e-06, 'source_diff': 6.83400000000417e-06}, {'time': 0.037123, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037132556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555999999993903e-06, 'source_diff': 9.555999999993903e-06}, {'time': 0.037133028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037137486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.037137958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037144431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4729999999998955e-06, 'source_diff': 6.4729999999998955e-06}, {'time': 0.037144972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037151667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.037152139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037156458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.037156931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037166472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.541000000001798e-06, 'source_diff': 9.541000000001798e-06}, {'time': 0.037166944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037175875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930999999996747e-06, 'source_diff': 8.930999999996747e-06}, {'time': 0.037176347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037181569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.037182111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037191333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.222000000003172e-06, 'source_diff': 9.222000000003172e-06}, {'time': 0.037191806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037201583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.777000000002478e-06, 'source_diff': 9.777000000002478e-06}, {'time': 0.037202056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037210569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.513000000001658e-06, 'source_diff': 8.513000000001658e-06}, {'time': 0.037211042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037215694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.037216167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037224681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.037225153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037233847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694000000003532e-06, 'source_diff': 8.694000000003532e-06}, {'time': 0.037234319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037244931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0612000000000121e-05, 'source_diff': 1.0612000000000121e-05}, {'time': 0.037245403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037252653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.249999999993373e-06, 'source_diff': 7.249999999993373e-06}, {'time': 0.037253125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037259861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.037260333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03726775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.417000000002616e-06, 'source_diff': 7.417000000002616e-06}, {'time': 0.037268292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:47.912" endtime="20201112 12:42:47.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.901" endtime="20201112 12:42:47.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:47.982" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:47.927" endtime="20201112 12:42:47.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.992" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:47.989" endtime="20201112 12:42:47.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.001" level="INFO">VALUE: {'sourcetime': [0.036878236, 0.036878708, 0.036888694, 0.036889167, 0.036897667, 0.036898139, 0.03690375, 0.036904222, 0.036909583, 0.036910056, 0.036916806, 0.036917278, 0.036923778, 0.03692425, 0.036934347, 0.036934819, 0.036944986, 0.036945458, 0.036950667, 0.036951139, 0.036957528, 0.036958, 0.036966, 0.036966472, 0.036973708, 0.036974181, 0.036980597, 0.036981069, 0.036985708, 0.036986181, 0.036991347, 0.036991819, 0.036998139, 0.036998611, 0.037007847, 0.037008319, 0.037018, 0.037018472, 0.037028111, 0.037028583, 0.037034181, 0.037034653, 0.037040944, 0.037041417, 0.037046944, 0.037047486, 0.037053792, 0.037054264, 0.037062667, 0.037063139, 0.037069986, 0.037070458, 0.037080542, 0.037081014, 0.037086069, 0.037086542, 0.037097472, 0.037097944, 0.037108014, 0.037108486, 0.037115222, 0.037115694, 0.037122528, 0.037123, 0.037132556, 0.037133028, 0.037137486, 0.037137958, 0.037144431, 0.037144972, 0.037151667, 0.037152139, 0.037156458, 0.037156931, 0.037166472, 0.037166944, 0.037175875, 0.037176347, 0.037181569, 0.037182111, 0.037191333, 0.037191806, 0.037201583, 0.037202056, 0.037210569, 0.037211042, 0.037215694, 0.037216167, 0.037224681, 0.037225153, 0.037233847, 0.037234319, 0.037244931, 0.037245403, 0.037252653, 0.037253125, 0.037259861, 0.037260333, 0.03726775, 0.037268292], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 4.720000000013602e-07, 9.985999999996553e-06, 4.7300000000083386e-07, 8.500000000001562e-06, 4.720000000013602e-07, 5.610999999995647e-06, 4.720000000013602e-07, 5.361000000002336e-06, 4.7299999999389497e-07, 6.750000000006751e-06, 4.7199999999442133e-07, 6.499999999999562e-06, 4.720000000013602e-07, 1.0097000000000578e-05, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 5.2089999999990755e-06, 4.720000000013602e-07, 6.389000000002476e-06, 4.7199999999442133e-07, 8.000000000001062e-06, 4.720000000013602e-07, 7.236000000000742e-06, 4.7300000000083386e-07, 6.415999999995203e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.7300000000083386e-07, 5.166000000000892e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 9.681000000004436e-06, 4.7199999999442133e-07, 9.639000000005726e-06, 4.7199999999442133e-07, 5.59800000000249e-06, 4.720000000013602e-07, 6.290999999998548e-06, 4.7300000000083386e-07, 5.526999999998228e-06, 5.419999999992098e-07, 6.30600000000453e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 5.0549999999968676e-06, 4.7300000000083386e-07, 1.0929999999999274e-05, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 6.736000000000242e-06, 4.7199999999442133e-07, 6.83400000000417e-06, 4.720000000013602e-07, 9.555999999993903e-06, 4.720000000013602e-07, 4.457999999998852e-06, 4.720000000013602e-07, 6.4729999999998955e-06, 5.409999999997361e-07, 6.695000000001006e-06, 4.720000000013602e-07, 4.319000000002626e-06, 4.7299999999389497e-07, 9.541000000001798e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 5.221999999999172e-06, 5.419999999992098e-07, 9.222000000003172e-06, 4.7300000000083386e-07, 9.777000000002478e-06, 4.7299999999389497e-07, 8.513000000001658e-06, 4.7300000000083386e-07, 4.652000000000822e-06, 4.7300000000083386e-07, 8.514000000001132e-06, 4.7199999999442133e-07, 8.694000000003532e-06, 4.720000000013602e-07, 1.0612000000000121e-05, 4.720000000013602e-07, 7.249999999993373e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.720000000013602e-07, 7.417000000002616e-06, 5.419999999992098e-07], 'diff': [0, 4.720000000013602e-07, 9.985999999996553e-06, 4.7300000000083386e-07, 8.500000000001562e-06, 4.720000000013602e-07, 5.610999999995647e-06, 4.720000000013602e-07, 5.361000000002336e-06, 4.7299999999389497e-07, 6.750000000006751e-06, 4.7199999999442133e-07, 6.499999999999562e-06, 4.720000000013602e-07, 1.0097000000000578e-05, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 5.2089999999990755e-06, 4.720000000013602e-07, 6.389000000002476e-06, 4.7199999999442133e-07, 8.000000000001062e-06, 4.720000000013602e-07, 7.236000000000742e-06, 4.7300000000083386e-07, 6.415999999995203e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.7300000000083386e-07, 5.166000000000892e-06, 4.720000000013602e-07, 6.319999999997161e-06, 4.720000000013602e-07, 9.236000000002742e-06, 4.7199999999442133e-07, 9.681000000004436e-06, 4.7199999999442133e-07, 9.639000000005726e-06, 4.7199999999442133e-07, 5.59800000000249e-06, 4.720000000013602e-07, 6.290999999998548e-06, 4.7300000000083386e-07, 5.526999999998228e-06, 5.419999999992098e-07, 6.30600000000453e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.720000000013602e-07, 5.0549999999968676e-06, 4.7300000000083386e-07, 1.0929999999999274e-05, 4.720000000013602e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 6.736000000000242e-06, 4.7199999999442133e-07, 6.83400000000417e-06, 4.720000000013602e-07, 9.555999999993903e-06, 4.720000000013602e-07, 4.457999999998852e-06, 4.720000000013602e-07, 6.4729999999998955e-06, 5.409999999997361e-07, 6.695000000001006e-06, 4.720000000013602e-07, 4.319000000002626e-06, 4.7299999999389497e-07, 9.541000000001798e-06, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 5.221999999999172e-06, 5.419999999992098e-07, 9.222000000003172e-06, 4.7300000000083386e-07, 9.777000000002478e-06, 4.7299999999389497e-07, 8.513000000001658e-06, 4.7300000000083386e-07, 4.652000000000822e-06, 4.7300000000083386e-07, 8.514000000001132e-06, 4.7199999999442133e-07, 8.694000000003532e-06, 4.720000000013602e-07, 1.0612000000000121e-05, 4.720000000013602e-07, 7.249999999993373e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.720000000013602e-07, 7.417000000002616e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:47.994" endtime="20201112 12:42:48.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.984" endtime="20201112 12:42:48.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:48.016" level="INFO">${RESULT} = [{'time': 0.036878708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036889167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:48.007" endtime="20201112 12:42:48.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:48.047" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:48.018" endtime="20201112 12:42:48.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.058" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:48.055" endtime="20201112 12:42:48.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.063" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201112 12:42:48.060" endtime="20201112 12:42:48.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.049" endtime="20201112 12:42:48.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.072" endtime="20201112 12:42:48.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:48.081" endtime="20201112 12:42:48.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.076" endtime="20201112 12:42:48.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.067" endtime="20201112 12:42:48.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.441" endtime="20201112 12:42:48.106"></status>
</kw>
<msg timestamp="20201112 12:42:48.107" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.129" endtime="20201112 12:42:48.142"></status>
</kw>
<msg timestamp="20201112 12:42:48.143" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.125" endtime="20201112 12:42:48.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.150" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.146" endtime="20201112 12:42:48.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.152" endtime="20201112 12:42:48.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.116" endtime="20201112 12:42:48.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.112" endtime="20201112 12:42:48.159"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.176" endtime="20201112 12:42:48.538"></status>
</kw>
<msg timestamp="20201112 12:42:48.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038470681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038471153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.173" endtime="20201112 12:42:48.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038470681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038471153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.547" endtime="20201112 12:42:48.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.567" endtime="20201112 12:42:48.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.165" endtime="20201112 12:42:48.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.160" endtime="20201112 12:42:48.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.584" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:48.582" endtime="20201112 12:42:48.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.596" level="INFO">VALUE: [{'time': 0.038470681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038471153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038479861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999996163e-06, 'source_diff': 8.707999999996163e-06}, {'time': 0.038480333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038489153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.038489625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038498875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.038499347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038508389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041999999993833e-06, 'source_diff': 9.041999999993833e-06}, {'time': 0.038508861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038515194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333000000004196e-06, 'source_diff': 6.333000000004196e-06}, {'time': 0.038515667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038526583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0915999999999704e-05, 'source_diff': 1.0915999999999704e-05}, {'time': 0.038527056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.0385345, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.444000000002282e-06, 'source_diff': 7.444000000002282e-06}, {'time': 0.038534972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038541194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.038541667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038551028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.0385515, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038559042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.038559514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0385675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.985999999994553e-06, 'source_diff': 7.985999999994553e-06}, {'time': 0.038567972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038574069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000003516e-06, 'source_diff': 6.097000000003516e-06}, {'time': 0.038574542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038585278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0735999999997303e-05, 'source_diff': 1.0735999999997303e-05}, {'time': 0.03858575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03859625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.038596722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038606472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.038606944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03861325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.30600000000453e-06, 'source_diff': 6.30600000000453e-06}, {'time': 0.038613722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038620986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.038621458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038626417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.959000000005764e-06, 'source_diff': 4.959000000005764e-06}, {'time': 0.038626889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038631944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0550000000038064e-06, 'source_diff': 5.0550000000038064e-06}, {'time': 0.038632417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038639375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.957999999994413e-06, 'source_diff': 6.957999999994413e-06}, {'time': 0.038639847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038650333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000003992e-05, 'source_diff': 1.0486000000003992e-05}, {'time': 0.038650806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038656194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.387999999995063e-06, 'source_diff': 5.387999999995063e-06}, {'time': 0.038656667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038665278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.03866575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038672083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333000000004196e-06, 'source_diff': 6.333000000004196e-06}, {'time': 0.038672556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038678653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000003516e-06, 'source_diff': 6.097000000003516e-06}, {'time': 0.038679125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038687319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999996093e-06, 'source_diff': 8.193999999996093e-06}, {'time': 0.038687792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038696403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.038696875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038702681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.80600000000403e-06, 'source_diff': 5.80600000000403e-06}, {'time': 0.038703153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038710528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000003906e-06, 'source_diff': 7.375000000003906e-06}, {'time': 0.038711, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038718458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.457999999994913e-06, 'source_diff': 7.457999999994913e-06}, {'time': 0.038718931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038725778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000004266e-06, 'source_diff': 6.847000000004266e-06}, {'time': 0.03872625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038732347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000003516e-06, 'source_diff': 6.097000000003516e-06}, {'time': 0.038732819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038737986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.038738458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038744667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.038745139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038754139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.000000000002062e-06, 'source_diff': 9.000000000002062e-06}, {'time': 0.038754681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038763361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680000000003962e-06, 'source_diff': 8.680000000003962e-06}, {'time': 0.038763833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038771708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000004406e-06, 'source_diff': 7.875000000004406e-06}, {'time': 0.038772181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038778806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.624999999996217e-06, 'source_diff': 6.624999999996217e-06}, {'time': 0.038779278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038789583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0305000000002118e-05, 'source_diff': 1.0305000000002118e-05}, {'time': 0.038790056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038797542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.485999999994053e-06, 'source_diff': 7.485999999994053e-06}, {'time': 0.038798083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038804861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7780000000058904e-06, 'source_diff': 6.7780000000058904e-06}, {'time': 0.038805403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038812861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.457999999994913e-06, 'source_diff': 7.457999999994913e-06}, {'time': 0.038813333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038819444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.038819917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03883075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0832999999994819e-05, 'source_diff': 1.0832999999994819e-05}, {'time': 0.038831222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038841889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0666999999998927e-05, 'source_diff': 1.0666999999998927e-05}, {'time': 0.038842361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038848903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.038849375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038858194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.038858667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038863097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.038863569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038868889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319999999996161e-06, 'source_diff': 5.319999999996161e-06}, {'time': 0.038869431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:48.586" endtime="20201112 12:42:48.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.576" endtime="20201112 12:42:48.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:48.658" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:48.602" endtime="20201112 12:42:48.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.668" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:48.666" endtime="20201112 12:42:48.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.677" level="INFO">VALUE: {'sourcetime': [0.038470681, 0.038471153, 0.038479861, 0.038480333, 0.038489153, 0.038489625, 0.038498875, 0.038499347, 0.038508389, 0.038508861, 0.038515194, 0.038515667, 0.038526583, 0.038527056, 0.0385345, 0.038534972, 0.038541194, 0.038541667, 0.038551028, 0.0385515, 0.038559042, 0.038559514, 0.0385675, 0.038567972, 0.038574069, 0.038574542, 0.038585278, 0.03858575, 0.03859625, 0.038596722, 0.038606472, 0.038606944, 0.03861325, 0.038613722, 0.038620986, 0.038621458, 0.038626417, 0.038626889, 0.038631944, 0.038632417, 0.038639375, 0.038639847, 0.038650333, 0.038650806, 0.038656194, 0.038656667, 0.038665278, 0.03866575, 0.038672083, 0.038672556, 0.038678653, 0.038679125, 0.038687319, 0.038687792, 0.038696403, 0.038696875, 0.038702681, 0.038703153, 0.038710528, 0.038711, 0.038718458, 0.038718931, 0.038725778, 0.03872625, 0.038732347, 0.038732819, 0.038737986, 0.038738458, 0.038744667, 0.038745139, 0.038754139, 0.038754681, 0.038763361, 0.038763833, 0.038771708, 0.038772181, 0.038778806, 0.038779278, 0.038789583, 0.038790056, 0.038797542, 0.038798083, 0.038804861, 0.038805403, 0.038812861, 0.038813333, 0.038819444, 0.038819917, 0.03883075, 0.038831222, 0.038841889, 0.038842361, 0.038848903, 0.038849375, 0.038858194, 0.038858667, 0.038863097, 0.038863569, 0.038868889, 0.038869431], 'eventsource_diff': [0, 4.720000000013602e-07, 8.707999999996163e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 9.250000000002312e-06, 4.720000000013602e-07, 9.041999999993833e-06, 4.720000000013602e-07, 6.333000000004196e-06, 4.7300000000083386e-07, 1.0915999999999704e-05, 4.7299999999389497e-07, 7.444000000002282e-06, 4.720000000013602e-07, 6.222000000000172e-06, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 7.985999999994553e-06, 4.720000000013602e-07, 6.097000000003516e-06, 4.7300000000083386e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 9.750000000002812e-06, 4.7199999999442133e-07, 6.30600000000453e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.7199999999442133e-07, 4.959000000005764e-06, 4.7199999999442133e-07, 5.0550000000038064e-06, 4.7300000000083386e-07, 6.957999999994413e-06, 4.720000000013602e-07, 1.0486000000003992e-05, 4.7300000000083386e-07, 5.387999999995063e-06, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 6.333000000004196e-06, 4.7299999999389497e-07, 6.097000000003516e-06, 4.720000000013602e-07, 8.193999999996093e-06, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 5.80600000000403e-06, 4.7199999999442133e-07, 7.375000000003906e-06, 4.720000000013602e-07, 7.457999999994913e-06, 4.7300000000083386e-07, 6.847000000004266e-06, 4.7199999999442133e-07, 6.097000000003516e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.7199999999442133e-07, 9.000000000002062e-06, 5.419999999992098e-07, 8.680000000003962e-06, 4.7199999999442133e-07, 7.875000000004406e-06, 4.7300000000083386e-07, 6.624999999996217e-06, 4.720000000013602e-07, 1.0305000000002118e-05, 4.7300000000083386e-07, 7.485999999994053e-06, 5.409999999997361e-07, 6.7780000000058904e-06, 5.419999999992098e-07, 7.457999999994913e-06, 4.720000000013602e-07, 6.111000000003086e-06, 4.7300000000083386e-07, 1.0832999999994819e-05, 4.720000000013602e-07, 1.0666999999998927e-05, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.720000000013602e-07, 5.319999999996161e-06, 5.420000000061487e-07], 'diff': [0, 4.720000000013602e-07, 8.707999999996163e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 9.250000000002312e-06, 4.720000000013602e-07, 9.041999999993833e-06, 4.720000000013602e-07, 6.333000000004196e-06, 4.7300000000083386e-07, 1.0915999999999704e-05, 4.7299999999389497e-07, 7.444000000002282e-06, 4.720000000013602e-07, 6.222000000000172e-06, 4.7300000000083386e-07, 9.360999999999398e-06, 4.720000000013602e-07, 7.5419999999992715e-06, 4.720000000013602e-07, 7.985999999994553e-06, 4.720000000013602e-07, 6.097000000003516e-06, 4.7300000000083386e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 9.750000000002812e-06, 4.7199999999442133e-07, 6.30600000000453e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.7199999999442133e-07, 4.959000000005764e-06, 4.7199999999442133e-07, 5.0550000000038064e-06, 4.7300000000083386e-07, 6.957999999994413e-06, 4.720000000013602e-07, 1.0486000000003992e-05, 4.7300000000083386e-07, 5.387999999995063e-06, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 6.333000000004196e-06, 4.7299999999389497e-07, 6.097000000003516e-06, 4.720000000013602e-07, 8.193999999996093e-06, 4.7300000000083386e-07, 8.610999999998648e-06, 4.720000000013602e-07, 5.80600000000403e-06, 4.7199999999442133e-07, 7.375000000003906e-06, 4.720000000013602e-07, 7.457999999994913e-06, 4.7300000000083386e-07, 6.847000000004266e-06, 4.7199999999442133e-07, 6.097000000003516e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.7199999999442133e-07, 9.000000000002062e-06, 5.419999999992098e-07, 8.680000000003962e-06, 4.7199999999442133e-07, 7.875000000004406e-06, 4.7300000000083386e-07, 6.624999999996217e-06, 4.720000000013602e-07, 1.0305000000002118e-05, 4.7300000000083386e-07, 7.485999999994053e-06, 5.409999999997361e-07, 6.7780000000058904e-06, 5.419999999992098e-07, 7.457999999994913e-06, 4.720000000013602e-07, 6.111000000003086e-06, 4.7300000000083386e-07, 1.0832999999994819e-05, 4.720000000013602e-07, 1.0666999999998927e-05, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 4.429999999999712e-06, 4.720000000013602e-07, 5.319999999996161e-06, 5.420000000061487e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:48.670" endtime="20201112 12:42:48.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.660" endtime="20201112 12:42:48.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:48.692" level="INFO">${RESULT} = [{'time': 0.038471153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038480333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:48.683" endtime="20201112 12:42:48.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:48.724" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:48.694" endtime="20201112 12:42:48.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.735" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:48.732" endtime="20201112 12:42:48.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.740" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.420000000061487e-07]</msg>
<status status="PASS" starttime="20201112 12:42:48.737" endtime="20201112 12:42:48.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.726" endtime="20201112 12:42:48.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.749" endtime="20201112 12:42:48.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:48.758" endtime="20201112 12:42:48.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.753" endtime="20201112 12:42:48.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.744" endtime="20201112 12:42:48.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.108" endtime="20201112 12:42:48.784"></status>
</kw>
<msg timestamp="20201112 12:42:48.784" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.804" endtime="20201112 12:42:48.818"></status>
</kw>
<msg timestamp="20201112 12:42:48.819" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.801" endtime="20201112 12:42:48.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.825" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.821" endtime="20201112 12:42:48.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.828" endtime="20201112 12:42:48.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.794" endtime="20201112 12:42:48.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.789" endtime="20201112 12:42:48.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.852" endtime="20201112 12:42:49.212"></status>
</kw>
<msg timestamp="20201112 12:42:49.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037030528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037031, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:48.848" endtime="20201112 12:42:49.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037030528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037031, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:49.222" endtime="20201112 12:42:49.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.242" endtime="20201112 12:42:49.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.841" endtime="20201112 12:42:49.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.836" endtime="20201112 12:42:49.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.258" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:49.256" endtime="20201112 12:42:49.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.270" level="INFO">VALUE: [{'time': 0.037030528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037031, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037036111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999995147e-06, 'source_diff': 5.110999999995147e-06}, {'time': 0.037036653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.037044306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999996357e-06, 'source_diff': 7.652999999996357e-06}, {'time': 0.037044778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037050056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.037050528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037058306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.037058778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037069292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999996193e-05, 'source_diff': 1.0513999999996193e-05}, {'time': 0.037069764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037076375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.611000000003586e-06, 'source_diff': 6.611000000003586e-06}, {'time': 0.037076847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037081806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.037082278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037087542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.037088014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037094958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.943999999994843e-06, 'source_diff': 6.943999999994843e-06}, {'time': 0.037095431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037103514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.037103986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037114792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.037115264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037123167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.902999999996607e-06, 'source_diff': 7.902999999996607e-06}, {'time': 0.037123639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037128597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.037129069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037137792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.723000000002146e-06, 'source_diff': 8.723000000002146e-06}, {'time': 0.037138264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037147611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.037148083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037155542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.459000000001326e-06, 'source_diff': 7.459000000001326e-06}, {'time': 0.037156014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037166403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.037166875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037175819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.943999999996843e-06, 'source_diff': 8.943999999996843e-06}, {'time': 0.037176292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037184583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.291000000000548e-06, 'source_diff': 8.291000000000548e-06}, {'time': 0.037185056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037191264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.037191736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037199306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.037199778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037206319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.540999999998798e-06, 'source_diff': 6.540999999998798e-06}, {'time': 0.037206792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037214889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.037215361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037222708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.037223181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037227736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5549999999963675e-06, 'source_diff': 4.5549999999963675e-06}, {'time': 0.037228208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037236292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.083999999998481e-06, 'source_diff': 8.083999999998481e-06}, {'time': 0.037236764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037242139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.037242611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037248111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.037248583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037255806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2230000000006456e-06, 'source_diff': 7.2230000000006456e-06}, {'time': 0.037256278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037261764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.486000000005931e-06, 'source_diff': 5.486000000005931e-06}, {'time': 0.037262236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037270764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.037271236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037278486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.037278958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037284958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.037285431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037295917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0485999999997053e-05, 'source_diff': 1.0485999999997053e-05}, {'time': 0.037296389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037305958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.037306431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037313792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.037314264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037324556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0292000000002022e-05, 'source_diff': 1.0292000000002022e-05}, {'time': 0.037325028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037333014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.985999999994553e-06, 'source_diff': 7.985999999994553e-06}, {'time': 0.037333486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037342736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.037343208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037353597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.037354069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037360833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7640000000063205e-06, 'source_diff': 6.7640000000063205e-06}, {'time': 0.037361306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037371569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0263000000003408e-05, 'source_diff': 1.0263000000003408e-05}, {'time': 0.037372042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037377319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.276999999997978e-06, 'source_diff': 5.276999999997978e-06}, {'time': 0.037377792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037386736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.943999999996843e-06, 'source_diff': 8.943999999996843e-06}, {'time': 0.037387208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037396667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.459000000003326e-06, 'source_diff': 9.459000000003326e-06}, {'time': 0.037397139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037402306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.037402778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037411875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.037412417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.037422583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0165999999998954e-05, 'source_diff': 1.0165999999998954e-05}, {'time': 0.037423056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037429917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.860999999996897e-06, 'source_diff': 6.860999999996897e-06}, {'time': 0.037430389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:49.261" endtime="20201112 12:42:49.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.250" endtime="20201112 12:42:49.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:49.332" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:49.276" endtime="20201112 12:42:49.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.343" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:49.340" endtime="20201112 12:42:49.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.352" level="INFO">VALUE: {'sourcetime': [0.037030528, 0.037031, 0.037036111, 0.037036653, 0.037044306, 0.037044778, 0.037050056, 0.037050528, 0.037058306, 0.037058778, 0.037069292, 0.037069764, 0.037076375, 0.037076847, 0.037081806, 0.037082278, 0.037087542, 0.037088014, 0.037094958, 0.037095431, 0.037103514, 0.037103986, 0.037114792, 0.037115264, 0.037123167, 0.037123639, 0.037128597, 0.037129069, 0.037137792, 0.037138264, 0.037147611, 0.037148083, 0.037155542, 0.037156014, 0.037166403, 0.037166875, 0.037175819, 0.037176292, 0.037184583, 0.037185056, 0.037191264, 0.037191736, 0.037199306, 0.037199778, 0.037206319, 0.037206792, 0.037214889, 0.037215361, 0.037222708, 0.037223181, 0.037227736, 0.037228208, 0.037236292, 0.037236764, 0.037242139, 0.037242611, 0.037248111, 0.037248583, 0.037255806, 0.037256278, 0.037261764, 0.037262236, 0.037270764, 0.037271236, 0.037278486, 0.037278958, 0.037284958, 0.037285431, 0.037295917, 0.037296389, 0.037305958, 0.037306431, 0.037313792, 0.037314264, 0.037324556, 0.037325028, 0.037333014, 0.037333486, 0.037342736, 0.037343208, 0.037353597, 0.037354069, 0.037360833, 0.037361306, 0.037371569, 0.037372042, 0.037377319, 0.037377792, 0.037386736, 0.037387208, 0.037396667, 0.037397139, 0.037402306, 0.037402778, 0.037411875, 0.037412417, 0.037422583, 0.037423056, 0.037429917, 0.037430389], 'eventsource_diff': [0, 4.720000000013602e-07, 5.110999999995147e-06, 5.420000000061487e-07, 7.652999999996357e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 1.0513999999996193e-05, 4.720000000013602e-07, 6.611000000003586e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 6.943999999994843e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 7.902999999996607e-06, 4.720000000013602e-07, 4.957999999999352e-06, 4.720000000013602e-07, 8.723000000002146e-06, 4.7199999999442133e-07, 9.346999999999828e-06, 4.720000000013602e-07, 7.459000000001326e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.943999999996843e-06, 4.7300000000083386e-07, 8.291000000000548e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 6.540999999998798e-06, 4.7300000000083386e-07, 8.096999999998578e-06, 4.720000000013602e-07, 7.3469999999978275e-06, 4.7300000000083386e-07, 4.5549999999963675e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.720000000013602e-07, 7.2230000000006456e-06, 4.7199999999442133e-07, 5.486000000005931e-06, 4.7199999999442133e-07, 8.528000000000702e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 9.569000000000938e-06, 4.7300000000083386e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 7.985999999994553e-06, 4.720000000013602e-07, 9.250000000002312e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7199999999442133e-07, 6.7640000000063205e-06, 4.7299999999389497e-07, 1.0263000000003408e-05, 4.7300000000083386e-07, 5.276999999997978e-06, 4.7300000000083386e-07, 8.943999999996843e-06, 4.720000000013602e-07, 9.459000000003326e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.7199999999442133e-07, 9.096999999999578e-06, 5.420000000061487e-07, 1.0165999999998954e-05, 4.7300000000083386e-07, 6.860999999996897e-06, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 5.110999999995147e-06, 5.420000000061487e-07, 7.652999999996357e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 1.0513999999996193e-05, 4.720000000013602e-07, 6.611000000003586e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 6.943999999994843e-06, 4.7300000000083386e-07, 8.082999999999008e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.720000000013602e-07, 7.902999999996607e-06, 4.720000000013602e-07, 4.957999999999352e-06, 4.720000000013602e-07, 8.723000000002146e-06, 4.7199999999442133e-07, 9.346999999999828e-06, 4.720000000013602e-07, 7.459000000001326e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.943999999996843e-06, 4.7300000000083386e-07, 8.291000000000548e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 6.540999999998798e-06, 4.7300000000083386e-07, 8.096999999998578e-06, 4.720000000013602e-07, 7.3469999999978275e-06, 4.7300000000083386e-07, 4.5549999999963675e-06, 4.720000000013602e-07, 8.083999999998481e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.720000000013602e-07, 7.2230000000006456e-06, 4.7199999999442133e-07, 5.486000000005931e-06, 4.7199999999442133e-07, 8.528000000000702e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 9.569000000000938e-06, 4.7300000000083386e-07, 7.360999999997397e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 7.985999999994553e-06, 4.720000000013602e-07, 9.250000000002312e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7199999999442133e-07, 6.7640000000063205e-06, 4.7299999999389497e-07, 1.0263000000003408e-05, 4.7300000000083386e-07, 5.276999999997978e-06, 4.7300000000083386e-07, 8.943999999996843e-06, 4.720000000013602e-07, 9.459000000003326e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.7199999999442133e-07, 9.096999999999578e-06, 5.420000000061487e-07, 1.0165999999998954e-05, 4.7300000000083386e-07, 6.860999999996897e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:49.345" endtime="20201112 12:42:49.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.334" endtime="20201112 12:42:49.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:49.368" level="INFO">${RESULT} = [{'time': 0.037031, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037036653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:42:49.358" endtime="20201112 12:42:49.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:49.399" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:49.370" endtime="20201112 12:42:49.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.410" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:49.408" endtime="20201112 12:42:49.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.416" level="INFO">VALUE: [4.720000000013602e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.420000000061487e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:42:49.413" endtime="20201112 12:42:49.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.401" endtime="20201112 12:42:49.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.425" endtime="20201112 12:42:49.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:49.433" endtime="20201112 12:42:49.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.429" endtime="20201112 12:42:49.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.420" endtime="20201112 12:42:49.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.785" endtime="20201112 12:42:49.459"></status>
</kw>
<msg timestamp="20201112 12:42:49.460" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.480" endtime="20201112 12:42:49.494"></status>
</kw>
<msg timestamp="20201112 12:42:49.495" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.477" endtime="20201112 12:42:49.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.501" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.497" endtime="20201112 12:42:49.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.503" endtime="20201112 12:42:49.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.469" endtime="20201112 12:42:49.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.464" endtime="20201112 12:42:49.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.529" endtime="20201112 12:42:49.880"></status>
</kw>
<msg timestamp="20201112 12:42:49.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036990375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036990847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.526" endtime="20201112 12:42:49.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036990375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036990847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.890" endtime="20201112 12:42:49.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.910" endtime="20201112 12:42:49.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.516" endtime="20201112 12:42:49.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.512" endtime="20201112 12:42:49.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.927" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:49.924" endtime="20201112 12:42:49.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.938" level="INFO">VALUE: [{'time': 0.036990375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036990847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037000194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.037000667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037007611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.037008083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037016278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.03701675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037022778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.03702325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037033931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0680999999998497e-05, 'source_diff': 1.0680999999998497e-05}, {'time': 0.037034403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037043139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.037043611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037052736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.125000000005656e-06, 'source_diff': 9.125000000005656e-06}, {'time': 0.037053208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037058597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.037059069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037065181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.11200000000256e-06, 'source_diff': 6.11200000000256e-06}, {'time': 0.037065653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037075111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.458000000003852e-06, 'source_diff': 9.458000000003852e-06}, {'time': 0.037075583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037081667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083999999996481e-06, 'source_diff': 6.083999999996481e-06}, {'time': 0.037082139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037086694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555000000003306e-06, 'source_diff': 4.555000000003306e-06}, {'time': 0.037087167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037097667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0500000000003562e-05, 'source_diff': 1.0500000000003562e-05}, {'time': 0.037098139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037103931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.037104403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037115361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0957999999998413e-05, 'source_diff': 1.0957999999998413e-05}, {'time': 0.037115903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037126694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0791000000003048e-05, 'source_diff': 1.0791000000003048e-05}, {'time': 0.037127167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037136097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.037136569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037143833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.037144306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037155125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0818999999995249e-05, 'source_diff': 1.0818999999995249e-05}, {'time': 0.037155597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037165694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0097000000000578e-05, 'source_diff': 1.0097000000000578e-05}, {'time': 0.037166167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037172875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.037173347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037178778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.037179319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037185306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.986999999998965e-06, 'source_diff': 5.986999999998965e-06}, {'time': 0.037185778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037190083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3049999999961175e-06, 'source_diff': 4.3049999999961175e-06}, {'time': 0.037190556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037197403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.037197875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037202319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.037202792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037211292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.037211764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037219972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.207999999995663e-06, 'source_diff': 8.207999999995663e-06}, {'time': 0.037220444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037229153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.709000000002576e-06, 'source_diff': 8.709000000002576e-06}, {'time': 0.037229625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037239917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0291999999995083e-05, 'source_diff': 1.0291999999995083e-05}, {'time': 0.037240389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037248042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.653000000003296e-06, 'source_diff': 7.653000000003296e-06}, {'time': 0.037248514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037254875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.360999999996397e-06, 'source_diff': 6.360999999996397e-06}, {'time': 0.037255417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037263639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.222000000002172e-06, 'source_diff': 8.222000000002172e-06}, {'time': 0.037264181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.03727425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}, {'time': 0.037274722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037281361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999995787e-06, 'source_diff': 6.638999999995787e-06}, {'time': 0.037281833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037290958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.037291431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03729975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.037300222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037309764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.037310236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037317278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.04200000000571e-06, 'source_diff': 7.04200000000571e-06}, {'time': 0.03731775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037326264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.037326736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0373365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.037336972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037347792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0819999999994723e-05, 'source_diff': 1.0819999999994723e-05}, {'time': 0.037348264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037355194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.930000000002212e-06, 'source_diff': 6.930000000002212e-06}, {'time': 0.037355667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037362514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.037362986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037373792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0806000000002092e-05, 'source_diff': 1.0806000000002092e-05}, {'time': 0.037374264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037383931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.667000000004866e-06, 'source_diff': 9.667000000004866e-06}, {'time': 0.037384403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037390403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0000000000060005e-06, 'source_diff': 6.0000000000060005e-06}, {'time': 0.037390875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037398236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000004336e-06, 'source_diff': 7.361000000004336e-06}, {'time': 0.037398708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037408792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0084000000000481e-05, 'source_diff': 1.0084000000000481e-05}, {'time': 0.037409264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:49.929" endtime="20201112 12:42:49.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.918" endtime="20201112 12:42:49.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:50.000" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:49.944" endtime="20201112 12:42:50.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.009" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:50.007" endtime="20201112 12:42:50.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.019" level="INFO">VALUE: {'sourcetime': [0.036990375, 0.036990847, 0.037000194, 0.037000667, 0.037007611, 0.037008083, 0.037016278, 0.03701675, 0.037022778, 0.03702325, 0.037033931, 0.037034403, 0.037043139, 0.037043611, 0.037052736, 0.037053208, 0.037058597, 0.037059069, 0.037065181, 0.037065653, 0.037075111, 0.037075583, 0.037081667, 0.037082139, 0.037086694, 0.037087167, 0.037097667, 0.037098139, 0.037103931, 0.037104403, 0.037115361, 0.037115903, 0.037126694, 0.037127167, 0.037136097, 0.037136569, 0.037143833, 0.037144306, 0.037155125, 0.037155597, 0.037165694, 0.037166167, 0.037172875, 0.037173347, 0.037178778, 0.037179319, 0.037185306, 0.037185778, 0.037190083, 0.037190556, 0.037197403, 0.037197875, 0.037202319, 0.037202792, 0.037211292, 0.037211764, 0.037219972, 0.037220444, 0.037229153, 0.037229625, 0.037239917, 0.037240389, 0.037248042, 0.037248514, 0.037254875, 0.037255417, 0.037263639, 0.037264181, 0.03727425, 0.037274722, 0.037281361, 0.037281833, 0.037290958, 0.037291431, 0.03729975, 0.037300222, 0.037309764, 0.037310236, 0.037317278, 0.03731775, 0.037326264, 0.037326736, 0.0373365, 0.037336972, 0.037347792, 0.037348264, 0.037355194, 0.037355667, 0.037362514, 0.037362986, 0.037373792, 0.037374264, 0.037383931, 0.037384403, 0.037390403, 0.037390875, 0.037398236, 0.037398708, 0.037408792, 0.037409264], 'eventsource_diff': [0, 4.720000000013602e-07, 9.346999999999828e-06, 4.7300000000083386e-07, 6.944000000001782e-06, 4.7199999999442133e-07, 8.195000000002506e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 1.0680999999998497e-05, 4.720000000013602e-07, 8.736000000002242e-06, 4.7199999999442133e-07, 9.125000000005656e-06, 4.7199999999442133e-07, 5.389000000001476e-06, 4.720000000013602e-07, 6.11200000000256e-06, 4.7199999999442133e-07, 9.458000000003852e-06, 4.720000000013602e-07, 6.083999999996481e-06, 4.720000000013602e-07, 4.555000000003306e-06, 4.7299999999389497e-07, 1.0500000000003562e-05, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 1.0957999999998413e-05, 5.419999999992098e-07, 1.0791000000003048e-05, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.7300000000083386e-07, 1.0818999999995249e-05, 4.720000000013602e-07, 1.0097000000000578e-05, 4.7300000000083386e-07, 6.708000000001102e-06, 4.720000000013602e-07, 5.431000000000186e-06, 5.409999999997361e-07, 5.986999999998965e-06, 4.720000000013602e-07, 4.3049999999961175e-06, 4.7300000000083386e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 4.443999999999282e-06, 4.7300000000083386e-07, 8.500000000001562e-06, 4.720000000013602e-07, 8.207999999995663e-06, 4.720000000013602e-07, 8.709000000002576e-06, 4.720000000013602e-07, 1.0291999999995083e-05, 4.720000000013602e-07, 7.653000000003296e-06, 4.720000000013602e-07, 6.360999999996397e-06, 5.419999999992098e-07, 8.222000000002172e-06, 5.419999999992098e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 6.638999999995787e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.7300000000083386e-07, 8.318999999999688e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.7199999999442133e-07, 7.04200000000571e-06, 4.7199999999442133e-07, 8.514000000001132e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 1.0819999999994723e-05, 4.720000000013602e-07, 6.930000000002212e-06, 4.7300000000083386e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.7199999999442133e-07, 9.667000000004866e-06, 4.7199999999442133e-07, 6.0000000000060005e-06, 4.7199999999442133e-07, 7.361000000004336e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.7199999999442133e-07], 'diff': [0, 4.720000000013602e-07, 9.346999999999828e-06, 4.7300000000083386e-07, 6.944000000001782e-06, 4.7199999999442133e-07, 8.195000000002506e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 1.0680999999998497e-05, 4.720000000013602e-07, 8.736000000002242e-06, 4.7199999999442133e-07, 9.125000000005656e-06, 4.7199999999442133e-07, 5.389000000001476e-06, 4.720000000013602e-07, 6.11200000000256e-06, 4.7199999999442133e-07, 9.458000000003852e-06, 4.720000000013602e-07, 6.083999999996481e-06, 4.720000000013602e-07, 4.555000000003306e-06, 4.7299999999389497e-07, 1.0500000000003562e-05, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 1.0957999999998413e-05, 5.419999999992098e-07, 1.0791000000003048e-05, 4.7300000000083386e-07, 8.929999999997273e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.7300000000083386e-07, 1.0818999999995249e-05, 4.720000000013602e-07, 1.0097000000000578e-05, 4.7300000000083386e-07, 6.708000000001102e-06, 4.720000000013602e-07, 5.431000000000186e-06, 5.409999999997361e-07, 5.986999999998965e-06, 4.720000000013602e-07, 4.3049999999961175e-06, 4.7300000000083386e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 4.443999999999282e-06, 4.7300000000083386e-07, 8.500000000001562e-06, 4.720000000013602e-07, 8.207999999995663e-06, 4.720000000013602e-07, 8.709000000002576e-06, 4.720000000013602e-07, 1.0291999999995083e-05, 4.720000000013602e-07, 7.653000000003296e-06, 4.720000000013602e-07, 6.360999999996397e-06, 5.419999999992098e-07, 8.222000000002172e-06, 5.419999999992098e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 6.638999999995787e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.7300000000083386e-07, 8.318999999999688e-06, 4.720000000013602e-07, 9.542000000001272e-06, 4.7199999999442133e-07, 7.04200000000571e-06, 4.7199999999442133e-07, 8.514000000001132e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 1.0819999999994723e-05, 4.720000000013602e-07, 6.930000000002212e-06, 4.7300000000083386e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 1.0806000000002092e-05, 4.7199999999442133e-07, 9.667000000004866e-06, 4.7199999999442133e-07, 6.0000000000060005e-06, 4.7199999999442133e-07, 7.361000000004336e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.7199999999442133e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:50.012" endtime="20201112 12:42:50.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.002" endtime="20201112 12:42:50.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:50.033" level="INFO">${RESULT} = [{'time': 0.036990847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037000667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:50.024" endtime="20201112 12:42:50.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:50.065" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:50.035" endtime="20201112 12:42:50.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.075" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:50.073" endtime="20201112 12:42:50.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.081" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201112 12:42:50.078" endtime="20201112 12:42:50.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.067" endtime="20201112 12:42:50.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.090" endtime="20201112 12:42:50.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.100" endtime="20201112 12:42:50.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.094" endtime="20201112 12:42:50.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.085" endtime="20201112 12:42:50.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.461" endtime="20201112 12:42:50.126"></status>
</kw>
<msg timestamp="20201112 12:42:50.126" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.146" endtime="20201112 12:42:50.159"></status>
</kw>
<msg timestamp="20201112 12:42:50.160" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.143" endtime="20201112 12:42:50.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.166" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.162" endtime="20201112 12:42:50.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.169" endtime="20201112 12:42:50.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.136" endtime="20201112 12:42:50.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.131" endtime="20201112 12:42:50.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.193" endtime="20201112 12:42:50.546"></status>
</kw>
<msg timestamp="20201112 12:42:50.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036800181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036800722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.189" endtime="20201112 12:42:50.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036800181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036800722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.556" endtime="20201112 12:42:50.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.576" endtime="20201112 12:42:50.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.182" endtime="20201112 12:42:50.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.177" endtime="20201112 12:42:50.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.592" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:50.590" endtime="20201112 12:42:50.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.604" level="INFO">VALUE: [{'time': 0.036800181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036800722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036806736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.036807208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036815611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.036816083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036823028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.0368235, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036828611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999995147e-06, 'source_diff': 5.110999999995147e-06}, {'time': 0.036829153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.036834417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.036834889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036841528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999995787e-06, 'source_diff': 6.638999999995787e-06}, {'time': 0.036842, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036849778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.03685025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036861125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.036861667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036867125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.036867597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036878306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0708999999997637e-05, 'source_diff': 1.0708999999997637e-05}, {'time': 0.036878778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036887083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.036887556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036895764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.207999999995663e-06, 'source_diff': 8.207999999995663e-06}, {'time': 0.036896236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036904125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.889000000003976e-06, 'source_diff': 7.889000000003976e-06}, {'time': 0.036904597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036912889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.036913361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036920514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.036920986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036928778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.03692925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036939375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0125000000006656e-05, 'source_diff': 1.0125000000006656e-05}, {'time': 0.036939917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036948847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.929999999997273e-06, 'source_diff': 8.929999999997273e-06}, {'time': 0.036949319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036957611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.036958083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036968556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0472999999996957e-05, 'source_diff': 1.0472999999996957e-05}, {'time': 0.036969097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036976083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.036976625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036981458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.036981931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036992833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902000000000134e-05, 'source_diff': 1.0902000000000134e-05}, {'time': 0.036993306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036998278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972000000005861e-06, 'source_diff': 4.972000000005861e-06}, {'time': 0.03699875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037008806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0056000000001342e-05, 'source_diff': 1.0056000000001342e-05}, {'time': 0.037009278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037016889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.6109999999976474e-06, 'source_diff': 7.6109999999976474e-06}, {'time': 0.037017361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037022292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.037022764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037027819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0549999999968676e-06, 'source_diff': 5.0549999999968676e-06}, {'time': 0.037028292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037038056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.037038528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037045042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.037045514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037054347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.037054819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.037065472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037076097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.037076569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037086736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0167000000005366e-05, 'source_diff': 1.0167000000005366e-05}, {'time': 0.037087208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037091667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.458999999998325e-06, 'source_diff': 4.458999999998325e-06}, {'time': 0.037092139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037098639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.037099111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037107542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.431000000003186e-06, 'source_diff': 8.431000000003186e-06}, {'time': 0.037108014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037114736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.037115208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037123306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.09800000000499e-06, 'source_diff': 8.09800000000499e-06}, {'time': 0.037123778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037133444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.665999999998454e-06, 'source_diff': 9.665999999998454e-06}, {'time': 0.037133917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037144208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.029099999999561e-05, 'source_diff': 1.029099999999561e-05}, {'time': 0.037144681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037155264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0583000000001508e-05, 'source_diff': 1.0583000000001508e-05}, {'time': 0.037155736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037161653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.037162125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037167903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.77800000000489e-06, 'source_diff': 5.77800000000489e-06}, {'time': 0.037168375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037176708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.333000000006197e-06, 'source_diff': 8.333000000006197e-06}, {'time': 0.037177181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037185708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527000000001228e-06, 'source_diff': 8.527000000001228e-06}, {'time': 0.03718625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037190694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.444000000006221e-06, 'source_diff': 4.444000000006221e-06}, {'time': 0.037191167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037198847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680000000002962e-06, 'source_diff': 7.680000000002962e-06}, {'time': 0.037199319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037208653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.037209125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:50.595" endtime="20201112 12:42:50.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.584" endtime="20201112 12:42:50.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:50.668" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:50.610" endtime="20201112 12:42:50.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.677" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:50.675" endtime="20201112 12:42:50.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.686" level="INFO">VALUE: {'sourcetime': [0.036800181, 0.036800722, 0.036806736, 0.036807208, 0.036815611, 0.036816083, 0.036823028, 0.0368235, 0.036828611, 0.036829153, 0.036834417, 0.036834889, 0.036841528, 0.036842, 0.036849778, 0.03685025, 0.036861125, 0.036861667, 0.036867125, 0.036867597, 0.036878306, 0.036878778, 0.036887083, 0.036887556, 0.036895764, 0.036896236, 0.036904125, 0.036904597, 0.036912889, 0.036913361, 0.036920514, 0.036920986, 0.036928778, 0.03692925, 0.036939375, 0.036939917, 0.036948847, 0.036949319, 0.036957611, 0.036958083, 0.036968556, 0.036969097, 0.036976083, 0.036976625, 0.036981458, 0.036981931, 0.036992833, 0.036993306, 0.036998278, 0.03699875, 0.037008806, 0.037009278, 0.037016889, 0.037017361, 0.037022292, 0.037022764, 0.037027819, 0.037028292, 0.037038056, 0.037038528, 0.037045042, 0.037045514, 0.037054347, 0.037054819, 0.037065, 0.037065472, 0.037076097, 0.037076569, 0.037086736, 0.037087208, 0.037091667, 0.037092139, 0.037098639, 0.037099111, 0.037107542, 0.037108014, 0.037114736, 0.037115208, 0.037123306, 0.037123778, 0.037133444, 0.037133917, 0.037144208, 0.037144681, 0.037155264, 0.037155736, 0.037161653, 0.037162125, 0.037167903, 0.037168375, 0.037176708, 0.037177181, 0.037185708, 0.03718625, 0.037190694, 0.037191167, 0.037198847, 0.037199319, 0.037208653, 0.037209125], 'eventsource_diff': [0, 5.409999999997361e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 5.110999999995147e-06, 5.420000000061487e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 6.638999999995787e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 1.0875000000000468e-05, 5.419999999992098e-07, 5.457999999999852e-06, 4.720000000013602e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 8.305000000000118e-06, 4.7300000000083386e-07, 8.207999999995663e-06, 4.720000000013602e-07, 7.889000000003976e-06, 4.7199999999442133e-07, 8.292000000000022e-06, 4.720000000013602e-07, 7.153000000002796e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.7199999999442133e-07, 1.0125000000006656e-05, 5.419999999992098e-07, 8.929999999997273e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.0472999999996957e-05, 5.409999999997361e-07, 6.986000000000492e-06, 5.419999999992098e-07, 4.833000000002696e-06, 4.7300000000083386e-07, 1.0902000000000134e-05, 4.7299999999389497e-07, 4.972000000005861e-06, 4.7199999999442133e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 7.6109999999976474e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.720000000013602e-07, 5.0549999999968676e-06, 4.7300000000083386e-07, 9.764000000002382e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 8.832999999999758e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 1.0625000000000218e-05, 4.7199999999442133e-07, 1.0167000000005366e-05, 4.720000000013602e-07, 4.458999999998325e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.7199999999442133e-07, 8.431000000003186e-06, 4.720000000013602e-07, 6.722000000000672e-06, 4.7199999999442133e-07, 8.09800000000499e-06, 4.720000000013602e-07, 9.665999999998454e-06, 4.7300000000083386e-07, 1.029099999999561e-05, 4.7300000000083386e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 5.917000000001116e-06, 4.7199999999442133e-07, 5.77800000000489e-06, 4.7199999999442133e-07, 8.333000000006197e-06, 4.7299999999389497e-07, 8.527000000001228e-06, 5.419999999992098e-07, 4.444000000006221e-06, 4.7299999999389497e-07, 7.680000000002962e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07], 'diff': [0, 5.409999999997361e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 8.402999999997107e-06, 4.720000000013602e-07, 6.945000000001256e-06, 4.720000000013602e-07, 5.110999999995147e-06, 5.420000000061487e-07, 5.2639999999978815e-06, 4.720000000013602e-07, 6.638999999995787e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 1.0875000000000468e-05, 5.419999999992098e-07, 5.457999999999852e-06, 4.720000000013602e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 8.305000000000118e-06, 4.7300000000083386e-07, 8.207999999995663e-06, 4.720000000013602e-07, 7.889000000003976e-06, 4.7199999999442133e-07, 8.292000000000022e-06, 4.720000000013602e-07, 7.153000000002796e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.7199999999442133e-07, 1.0125000000006656e-05, 5.419999999992098e-07, 8.929999999997273e-06, 4.720000000013602e-07, 8.292000000000022e-06, 4.720000000013602e-07, 1.0472999999996957e-05, 5.409999999997361e-07, 6.986000000000492e-06, 5.419999999992098e-07, 4.833000000002696e-06, 4.7300000000083386e-07, 1.0902000000000134e-05, 4.7299999999389497e-07, 4.972000000005861e-06, 4.7199999999442133e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 7.6109999999976474e-06, 4.720000000013602e-07, 4.930999999999686e-06, 4.720000000013602e-07, 5.0549999999968676e-06, 4.7300000000083386e-07, 9.764000000002382e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 8.832999999999758e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 1.0625000000000218e-05, 4.7199999999442133e-07, 1.0167000000005366e-05, 4.720000000013602e-07, 4.458999999998325e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.7199999999442133e-07, 8.431000000003186e-06, 4.720000000013602e-07, 6.722000000000672e-06, 4.7199999999442133e-07, 8.09800000000499e-06, 4.720000000013602e-07, 9.665999999998454e-06, 4.7300000000083386e-07, 1.029099999999561e-05, 4.7300000000083386e-07, 1.0583000000001508e-05, 4.720000000013602e-07, 5.917000000001116e-06, 4.7199999999442133e-07, 5.77800000000489e-06, 4.7199999999442133e-07, 8.333000000006197e-06, 4.7299999999389497e-07, 8.527000000001228e-06, 5.419999999992098e-07, 4.444000000006221e-06, 4.7299999999389497e-07, 7.680000000002962e-06, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:50.679" endtime="20201112 12:42:50.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.669" endtime="20201112 12:42:50.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:50.701" level="INFO">${RESULT} = [{'time': 0.036800722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036807208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:50.692" endtime="20201112 12:42:50.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:50.732" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:50.703" endtime="20201112 12:42:50.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.743" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:50.741" endtime="20201112 12:42:50.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.748" level="INFO">VALUE: [5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 5.419999999992098e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:42:50.745" endtime="20201112 12:42:50.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.734" endtime="20201112 12:42:50.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.758" endtime="20201112 12:42:50.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.766" endtime="20201112 12:42:50.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.762" endtime="20201112 12:42:50.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.753" endtime="20201112 12:42:50.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.127" endtime="20201112 12:42:50.792"></status>
</kw>
<msg timestamp="20201112 12:42:50.793" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.813" endtime="20201112 12:42:50.825"></status>
</kw>
<msg timestamp="20201112 12:42:50.826" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.809" endtime="20201112 12:42:50.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.833" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.829" endtime="20201112 12:42:50.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.835" endtime="20201112 12:42:50.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.802" endtime="20201112 12:42:50.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.797" endtime="20201112 12:42:50.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.859" endtime="20201112 12:42:51.210"></status>
</kw>
<msg timestamp="20201112 12:42:51.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036691403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036691875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.855" endtime="20201112 12:42:51.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036691403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036691875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.220" endtime="20201112 12:42:51.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.240" endtime="20201112 12:42:51.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.848" endtime="20201112 12:42:51.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.843" endtime="20201112 12:42:51.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.256" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:51.254" endtime="20201112 12:42:51.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.268" level="INFO">VALUE: [{'time': 0.036691403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036691875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036696653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.77800000000389e-06, 'source_diff': 4.77800000000389e-06}, {'time': 0.036697125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036704958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.833000000005697e-06, 'source_diff': 7.833000000005697e-06}, {'time': 0.0367055, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036715125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.036715597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036725042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444999999996817e-06, 'source_diff': 9.444999999996817e-06}, {'time': 0.036725514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036732681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.036733153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036741861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708000000003102e-06, 'source_diff': 8.708000000003102e-06}, {'time': 0.036742333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036750125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.036750597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036759111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.513999999994193e-06, 'source_diff': 8.513999999994193e-06}, {'time': 0.036759583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036770194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.036770667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036776653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.036777125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036785, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.036785472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036790639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.036791111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036797111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.036797583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036805042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.459000000001326e-06, 'source_diff': 7.459000000001326e-06}, {'time': 0.036805514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036810792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.27800000000439e-06, 'source_diff': 5.27800000000439e-06}, {'time': 0.036811264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036815694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.036816167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036822153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.986000000006431e-06, 'source_diff': 5.986000000006431e-06}, {'time': 0.036822625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036829139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.036829681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.036836167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.036836639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036843472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8330000000046964e-06, 'source_diff': 6.8330000000046964e-06}, {'time': 0.036843944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036851194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.249999999993373e-06, 'source_diff': 7.249999999993373e-06}, {'time': 0.036851667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036857778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.03685825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036869069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0818999999995249e-05, 'source_diff': 1.0818999999995249e-05}, {'time': 0.036869542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036873847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305000000003056e-06, 'source_diff': 4.305000000003056e-06}, {'time': 0.036874319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036882319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.999999999994123e-06, 'source_diff': 7.999999999994123e-06}, {'time': 0.036882792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036893181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.036893653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036902153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.036902625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036912083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.457999999996913e-06, 'source_diff': 9.457999999996913e-06}, {'time': 0.036912556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036919708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152000000003322e-06, 'source_diff': 7.152000000003322e-06}, {'time': 0.036920181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036926486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.036926958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036931931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972999999998395e-06, 'source_diff': 4.972999999998395e-06}, {'time': 0.036932403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036942778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0374999999999968e-05, 'source_diff': 1.0374999999999968e-05}, {'time': 0.03694325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036949472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.036949944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036958458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.036958931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036966917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.036967389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036974958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.036975431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036982486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.036982958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036991986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.027999999994263e-06, 'source_diff': 9.027999999994263e-06}, {'time': 0.036992458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037001278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.03700175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037008486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.037008958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037015597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999995787e-06, 'source_diff': 6.638999999995787e-06}, {'time': 0.037016069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037023222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.037023694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037029292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.597999999995551e-06, 'source_diff': 5.597999999995551e-06}, {'time': 0.037029764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03704025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0485999999997053e-05, 'source_diff': 1.0485999999997053e-05}, {'time': 0.037040722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037049458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.037049931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037059986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0055000000001868e-05, 'source_diff': 1.0055000000001868e-05}, {'time': 0.037060458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037067514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.05600000000528e-06, 'source_diff': 7.05600000000528e-06}, {'time': 0.037067986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037074528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.54200000000521e-06, 'source_diff': 6.54200000000521e-06}, {'time': 0.037075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037083917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.917000000004116e-06, 'source_diff': 8.917000000004116e-06}, {'time': 0.037084389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:51.259" endtime="20201112 12:42:51.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.248" endtime="20201112 12:42:51.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:51.330" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:51.274" endtime="20201112 12:42:51.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.339" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:51.337" endtime="20201112 12:42:51.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.349" level="INFO">VALUE: {'sourcetime': [0.036691403, 0.036691875, 0.036696653, 0.036697125, 0.036704958, 0.0367055, 0.036715125, 0.036715597, 0.036725042, 0.036725514, 0.036732681, 0.036733153, 0.036741861, 0.036742333, 0.036750125, 0.036750597, 0.036759111, 0.036759583, 0.036770194, 0.036770667, 0.036776653, 0.036777125, 0.036785, 0.036785472, 0.036790639, 0.036791111, 0.036797111, 0.036797583, 0.036805042, 0.036805514, 0.036810792, 0.036811264, 0.036815694, 0.036816167, 0.036822153, 0.036822625, 0.036829139, 0.036829681, 0.036836167, 0.036836639, 0.036843472, 0.036843944, 0.036851194, 0.036851667, 0.036857778, 0.03685825, 0.036869069, 0.036869542, 0.036873847, 0.036874319, 0.036882319, 0.036882792, 0.036893181, 0.036893653, 0.036902153, 0.036902625, 0.036912083, 0.036912556, 0.036919708, 0.036920181, 0.036926486, 0.036926958, 0.036931931, 0.036932403, 0.036942778, 0.03694325, 0.036949472, 0.036949944, 0.036958458, 0.036958931, 0.036966917, 0.036967389, 0.036974958, 0.036975431, 0.036982486, 0.036982958, 0.036991986, 0.036992458, 0.037001278, 0.03700175, 0.037008486, 0.037008958, 0.037015597, 0.037016069, 0.037023222, 0.037023694, 0.037029292, 0.037029764, 0.03704025, 0.037040722, 0.037049458, 0.037049931, 0.037059986, 0.037060458, 0.037067514, 0.037067986, 0.037074528, 0.037075, 0.037083917, 0.037084389], 'eventsource_diff': [0, 4.720000000013602e-07, 4.77800000000389e-06, 4.7199999999442133e-07, 7.833000000005697e-06, 5.419999999992098e-07, 9.624999999999218e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 7.167000000002366e-06, 4.7199999999442133e-07, 8.708000000003102e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 8.513999999994193e-06, 4.720000000013602e-07, 1.0611000000000648e-05, 4.7300000000083386e-07, 5.985999999999492e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 7.459000000001326e-06, 4.7199999999442133e-07, 5.27800000000439e-06, 4.720000000013602e-07, 4.429999999999712e-06, 4.7299999999389497e-07, 5.986000000006431e-06, 4.7199999999442133e-07, 6.513999999999132e-06, 5.420000000061487e-07, 6.485999999999992e-06, 4.7199999999442133e-07, 6.8330000000046964e-06, 4.720000000013602e-07, 7.249999999993373e-06, 4.7300000000083386e-07, 6.111000000003086e-06, 4.720000000013602e-07, 1.0818999999995249e-05, 4.7300000000083386e-07, 4.305000000003056e-06, 4.720000000013602e-07, 7.999999999994123e-06, 4.7300000000083386e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.7300000000083386e-07, 7.152000000003322e-06, 4.7300000000083386e-07, 6.304999999998118e-06, 4.720000000013602e-07, 4.972999999998395e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7199999999442133e-07, 6.222000000000172e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 7.986000000001492e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.7300000000083386e-07, 7.054999999998868e-06, 4.720000000013602e-07, 9.027999999994263e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.638999999995787e-06, 4.720000000013602e-07, 7.153000000002796e-06, 4.720000000013602e-07, 5.597999999995551e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 8.736000000002242e-06, 4.7300000000083386e-07, 1.0055000000001868e-05, 4.7199999999442133e-07, 7.05600000000528e-06, 4.7199999999442133e-07, 6.54200000000521e-06, 4.7199999999442133e-07, 8.917000000004116e-06, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 4.77800000000389e-06, 4.7199999999442133e-07, 7.833000000005697e-06, 5.419999999992098e-07, 9.624999999999218e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 7.167000000002366e-06, 4.7199999999442133e-07, 8.708000000003102e-06, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 8.513999999994193e-06, 4.720000000013602e-07, 1.0611000000000648e-05, 4.7300000000083386e-07, 5.985999999999492e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.720000000013602e-07, 5.167000000000366e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 7.459000000001326e-06, 4.7199999999442133e-07, 5.27800000000439e-06, 4.720000000013602e-07, 4.429999999999712e-06, 4.7299999999389497e-07, 5.986000000006431e-06, 4.7199999999442133e-07, 6.513999999999132e-06, 5.420000000061487e-07, 6.485999999999992e-06, 4.7199999999442133e-07, 6.8330000000046964e-06, 4.720000000013602e-07, 7.249999999993373e-06, 4.7300000000083386e-07, 6.111000000003086e-06, 4.720000000013602e-07, 1.0818999999995249e-05, 4.7300000000083386e-07, 4.305000000003056e-06, 4.720000000013602e-07, 7.999999999994123e-06, 4.7300000000083386e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.7300000000083386e-07, 7.152000000003322e-06, 4.7300000000083386e-07, 6.304999999998118e-06, 4.720000000013602e-07, 4.972999999998395e-06, 4.720000000013602e-07, 1.0374999999999968e-05, 4.7199999999442133e-07, 6.222000000000172e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7300000000083386e-07, 7.986000000001492e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.7300000000083386e-07, 7.054999999998868e-06, 4.720000000013602e-07, 9.027999999994263e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.638999999995787e-06, 4.720000000013602e-07, 7.153000000002796e-06, 4.720000000013602e-07, 5.597999999995551e-06, 4.720000000013602e-07, 1.0485999999997053e-05, 4.720000000013602e-07, 8.736000000002242e-06, 4.7300000000083386e-07, 1.0055000000001868e-05, 4.7199999999442133e-07, 7.05600000000528e-06, 4.7199999999442133e-07, 6.54200000000521e-06, 4.7199999999442133e-07, 8.917000000004116e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:51.342" endtime="20201112 12:42:51.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.332" endtime="20201112 12:42:51.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:51.363" level="INFO">${RESULT} = [{'time': 0.036691875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036697125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:51.354" endtime="20201112 12:42:51.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:51.394" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:51.365" endtime="20201112 12:42:51.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.406" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:51.403" endtime="20201112 12:42:51.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.411" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 5.420000000061487e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:42:51.408" endtime="20201112 12:42:51.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.397" endtime="20201112 12:42:51.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.421" endtime="20201112 12:42:51.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:51.430" endtime="20201112 12:42:51.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.425" endtime="20201112 12:42:51.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.416" endtime="20201112 12:42:51.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.794" endtime="20201112 12:42:51.456"></status>
</kw>
<msg timestamp="20201112 12:42:51.457" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.479" endtime="20201112 12:42:51.491"></status>
</kw>
<msg timestamp="20201112 12:42:51.492" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.475" endtime="20201112 12:42:51.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.499" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.495" endtime="20201112 12:42:51.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.501" endtime="20201112 12:42:51.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.466" endtime="20201112 12:42:51.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.462" endtime="20201112 12:42:51.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.525" endtime="20201112 12:42:51.877"></status>
</kw>
<msg timestamp="20201112 12:42:51.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038533028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0385335, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:51.522" endtime="20201112 12:42:51.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038533028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0385335, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:51.886" endtime="20201112 12:42:51.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.906" endtime="20201112 12:42:51.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.514" endtime="20201112 12:42:51.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.510" endtime="20201112 12:42:51.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.923" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:51.921" endtime="20201112 12:42:51.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.935" level="INFO">VALUE: [{'time': 0.038533028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0385335, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038540806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.038541347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038551958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.038552431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03856, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.038560472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038567833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000004336e-06, 'source_diff': 7.361000000004336e-06}, {'time': 0.038568306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038577653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.347000000006767e-06, 'source_diff': 9.347000000006767e-06}, {'time': 0.038578125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038583625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5000000000055005e-06, 'source_diff': 5.5000000000055005e-06}, {'time': 0.038584097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038592903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.038593375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038600014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.038600486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0386055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.038606042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038612958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.916000000002642e-06, 'source_diff': 6.916000000002642e-06}, {'time': 0.038613431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038623306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.875000000006406e-06, 'source_diff': 9.875000000006406e-06}, {'time': 0.038623778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038632292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.038632764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038639819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.038640292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038647181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.038647722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038654556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833999999997231e-06, 'source_diff': 6.833999999997231e-06}, {'time': 0.038655028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038665417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.038665889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038673167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.038673639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038684333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0693999999998594e-05, 'source_diff': 1.0693999999998594e-05}, {'time': 0.038684806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038692792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.985999999994553e-06, 'source_diff': 7.985999999994553e-06}, {'time': 0.038693264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038701986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.038702458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038712528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.038713, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038718278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.27800000000439e-06, 'source_diff': 5.27800000000439e-06}, {'time': 0.03871875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038725292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.038725764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038736042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277999999995513e-05, 'source_diff': 1.0277999999995513e-05}, {'time': 0.038736514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038742625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.038743097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038747639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.038748111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03875675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.038757222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038765847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.038766319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038773875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.038774347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038782667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.319999999999161e-06, 'source_diff': 8.319999999999161e-06}, {'time': 0.038783139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038789569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.430000000001712e-06, 'source_diff': 6.430000000001712e-06}, {'time': 0.038790042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038799167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.125000000005656e-06, 'source_diff': 9.125000000005656e-06}, {'time': 0.038799639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038805958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3190000000046265e-06, 'source_diff': 6.3190000000046265e-06}, {'time': 0.038806431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038811069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.637999999994313e-06, 'source_diff': 4.637999999994313e-06}, {'time': 0.038811542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038820278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.03882075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038829875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.038830347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038839069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999995733e-06, 'source_diff': 8.721999999995733e-06}, {'time': 0.038839542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038847639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.097000000005516e-06, 'source_diff': 8.097000000005516e-06}, {'time': 0.038848111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038855097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.038855639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.038861472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038866111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.038866583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038876097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.513999999995193e-06, 'source_diff': 9.513999999995193e-06}, {'time': 0.038876639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038884722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.038885194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038891194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.038891667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038898097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.430000000001712e-06, 'source_diff': 6.430000000001712e-06}, {'time': 0.038898569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038903833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.038904306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038914917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.038915389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038924417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.038924889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038930278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.03893075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:51.925" endtime="20201112 12:42:51.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.915" endtime="20201112 12:42:51.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:51.997" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:51.941" endtime="20201112 12:42:51.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.007" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:52.005" endtime="20201112 12:42:52.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.016" level="INFO">VALUE: {'sourcetime': [0.038533028, 0.0385335, 0.038540806, 0.038541347, 0.038551958, 0.038552431, 0.03856, 0.038560472, 0.038567833, 0.038568306, 0.038577653, 0.038578125, 0.038583625, 0.038584097, 0.038592903, 0.038593375, 0.038600014, 0.038600486, 0.0386055, 0.038606042, 0.038612958, 0.038613431, 0.038623306, 0.038623778, 0.038632292, 0.038632764, 0.038639819, 0.038640292, 0.038647181, 0.038647722, 0.038654556, 0.038655028, 0.038665417, 0.038665889, 0.038673167, 0.038673639, 0.038684333, 0.038684806, 0.038692792, 0.038693264, 0.038701986, 0.038702458, 0.038712528, 0.038713, 0.038718278, 0.03871875, 0.038725292, 0.038725764, 0.038736042, 0.038736514, 0.038742625, 0.038743097, 0.038747639, 0.038748111, 0.03875675, 0.038757222, 0.038765847, 0.038766319, 0.038773875, 0.038774347, 0.038782667, 0.038783139, 0.038789569, 0.038790042, 0.038799167, 0.038799639, 0.038805958, 0.038806431, 0.038811069, 0.038811542, 0.038820278, 0.03882075, 0.038829875, 0.038830347, 0.038839069, 0.038839542, 0.038847639, 0.038848111, 0.038855097, 0.038855639, 0.038861, 0.038861472, 0.038866111, 0.038866583, 0.038876097, 0.038876639, 0.038884722, 0.038885194, 0.038891194, 0.038891667, 0.038898097, 0.038898569, 0.038903833, 0.038904306, 0.038914917, 0.038915389, 0.038924417, 0.038924889, 0.038930278, 0.03893075], 'eventsource_diff': [0, 4.720000000013602e-07, 7.305999999998591e-06, 5.409999999997361e-07, 1.0611000000000648e-05, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 7.361000000004336e-06, 4.7299999999389497e-07, 9.347000000006767e-06, 4.7199999999442133e-07, 5.5000000000055005e-06, 4.7199999999442133e-07, 8.806000000000092e-06, 4.720000000013602e-07, 6.639000000002726e-06, 4.720000000013602e-07, 5.0139999999976315e-06, 5.419999999992098e-07, 6.916000000002642e-06, 4.7299999999389497e-07, 9.875000000006406e-06, 4.7199999999442133e-07, 8.514000000001132e-06, 4.720000000013602e-07, 7.054999999998868e-06, 4.7300000000083386e-07, 6.889000000002976e-06, 5.409999999997361e-07, 6.833999999997231e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 7.985999999994553e-06, 4.720000000013602e-07, 8.722000000002672e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.7199999999442133e-07, 5.27800000000439e-06, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 6.111000000003086e-06, 4.7199999999442133e-07, 4.54200000000321e-06, 4.720000000013602e-07, 8.638999999997787e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 8.319999999999161e-06, 4.720000000013602e-07, 6.430000000001712e-06, 4.7299999999389497e-07, 9.125000000005656e-06, 4.7199999999442133e-07, 6.3190000000046265e-06, 4.7300000000083386e-07, 4.637999999994313e-06, 4.7300000000083386e-07, 8.736000000002242e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 8.721999999995733e-06, 4.7300000000083386e-07, 8.097000000005516e-06, 4.7199999999442133e-07, 6.986000000000492e-06, 5.419999999992098e-07, 5.361000000002336e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 9.513999999995193e-06, 5.419999999992098e-07, 8.082999999999008e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 6.430000000001712e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.7300000000083386e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 9.028000000001202e-06, 4.7199999999442133e-07, 5.389000000001476e-06, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 7.305999999998591e-06, 5.409999999997361e-07, 1.0611000000000648e-05, 4.7300000000083386e-07, 7.568999999998938e-06, 4.720000000013602e-07, 7.361000000004336e-06, 4.7299999999389497e-07, 9.347000000006767e-06, 4.7199999999442133e-07, 5.5000000000055005e-06, 4.7199999999442133e-07, 8.806000000000092e-06, 4.720000000013602e-07, 6.639000000002726e-06, 4.720000000013602e-07, 5.0139999999976315e-06, 5.419999999992098e-07, 6.916000000002642e-06, 4.7299999999389497e-07, 9.875000000006406e-06, 4.7199999999442133e-07, 8.514000000001132e-06, 4.720000000013602e-07, 7.054999999998868e-06, 4.7300000000083386e-07, 6.889000000002976e-06, 5.409999999997361e-07, 6.833999999997231e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 1.0693999999998594e-05, 4.7300000000083386e-07, 7.985999999994553e-06, 4.720000000013602e-07, 8.722000000002672e-06, 4.720000000013602e-07, 1.0070000000000912e-05, 4.7199999999442133e-07, 5.27800000000439e-06, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 6.111000000003086e-06, 4.7199999999442133e-07, 4.54200000000321e-06, 4.720000000013602e-07, 8.638999999997787e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 8.319999999999161e-06, 4.720000000013602e-07, 6.430000000001712e-06, 4.7299999999389497e-07, 9.125000000005656e-06, 4.7199999999442133e-07, 6.3190000000046265e-06, 4.7300000000083386e-07, 4.637999999994313e-06, 4.7300000000083386e-07, 8.736000000002242e-06, 4.720000000013602e-07, 9.124999999998717e-06, 4.720000000013602e-07, 8.721999999995733e-06, 4.7300000000083386e-07, 8.097000000005516e-06, 4.7199999999442133e-07, 6.986000000000492e-06, 5.419999999992098e-07, 5.361000000002336e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 9.513999999995193e-06, 5.419999999992098e-07, 8.082999999999008e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.7300000000083386e-07, 6.430000000001712e-06, 4.720000000013602e-07, 5.2639999999978815e-06, 4.7300000000083386e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 9.028000000001202e-06, 4.7199999999442133e-07, 5.389000000001476e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:52.009" endtime="20201112 12:42:52.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.999" endtime="20201112 12:42:52.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:52.031" level="INFO">${RESULT} = [{'time': 0.0385335, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038541347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:52.022" endtime="20201112 12:42:52.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:52.063" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:52.033" endtime="20201112 12:42:52.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.074" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:52.071" endtime="20201112 12:42:52.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.079" level="INFO">VALUE: [4.720000000013602e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:42:52.076" endtime="20201112 12:42:52.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.065" endtime="20201112 12:42:52.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.088" endtime="20201112 12:42:52.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:52.096" endtime="20201112 12:42:52.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.092" endtime="20201112 12:42:52.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.083" endtime="20201112 12:42:52.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.458" endtime="20201112 12:42:52.123"></status>
</kw>
<msg timestamp="20201112 12:42:52.123" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.144" endtime="20201112 12:42:52.157"></status>
</kw>
<msg timestamp="20201112 12:42:52.158" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.141" endtime="20201112 12:42:52.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.165" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.160" endtime="20201112 12:42:52.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.167" endtime="20201112 12:42:52.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.133" endtime="20201112 12:42:52.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.128" endtime="20201112 12:42:52.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.191" endtime="20201112 12:42:52.538"></status>
</kw>
<msg timestamp="20201112 12:42:52.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038073375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038073847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.188" endtime="20201112 12:42:52.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038073375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038073847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.547" endtime="20201112 12:42:52.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.567" endtime="20201112 12:42:52.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.181" endtime="20201112 12:42:52.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.175" endtime="20201112 12:42:52.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.584" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:52.582" endtime="20201112 12:42:52.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.596" level="INFO">VALUE: [{'time': 0.038073375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038073847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038080583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.038081056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038088931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.038089403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038099278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.03809975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038107, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.038107472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038117875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.038118347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038125917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.57000000000535e-06, 'source_diff': 7.57000000000535e-06}, {'time': 0.038126389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038134069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680000000002962e-06, 'source_diff': 7.680000000002962e-06}, {'time': 0.038134542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038140014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.038140486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038147764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.038148236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03815675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.038157222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038163, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.77800000000489e-06, 'source_diff': 5.77800000000489e-06}, {'time': 0.038163472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038171056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.58400000000492e-06, 'source_diff': 7.58400000000492e-06}, {'time': 0.038171528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038179306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.038179778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038185694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.916000000001642e-06, 'source_diff': 5.916000000001642e-06}, {'time': 0.038186167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038194472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.038194944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038199681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736999999997715e-06, 'source_diff': 4.736999999997715e-06}, {'time': 0.038200153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038207611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.038208083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038217861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.778000000001952e-06, 'source_diff': 9.778000000001952e-06}, {'time': 0.038218333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038227778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.444999999996817e-06, 'source_diff': 9.444999999996817e-06}, {'time': 0.03822825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038237181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000003686e-06, 'source_diff': 8.931000000003686e-06}, {'time': 0.038237653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038245222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.038245694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038255681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.987000000002966e-06, 'source_diff': 9.987000000002966e-06}, {'time': 0.038256153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038263611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.038264083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038270097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0140000000055704e-06, 'source_diff': 6.0140000000055704e-06}, {'time': 0.038270569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038277208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.038277681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038283486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.804999999997618e-06, 'source_diff': 5.804999999997618e-06}, {'time': 0.038283958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038292972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.038293444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038300292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847999999996801e-06, 'source_diff': 6.847999999996801e-06}, {'time': 0.038300764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03830625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.038306722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038311167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.038311639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038320778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.03832125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038328931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999995497e-06, 'source_diff': 7.680999999995497e-06}, {'time': 0.038329403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038339167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.038339639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038348778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.03834925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038356819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.038357292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038361931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.038362403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038369458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.038369931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038380861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0929999999999274e-05, 'source_diff': 1.0929999999999274e-05}, {'time': 0.038381333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038387333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0000000000060005e-06, 'source_diff': 6.0000000000060005e-06}, {'time': 0.038387806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.038392514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.708000000006041e-06, 'source_diff': 4.708000000006041e-06}, {'time': 0.038393056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038397236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.038397708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03840475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.038405222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038414264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041999999993833e-06, 'source_diff': 9.041999999993833e-06}, {'time': 0.038414736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038422736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.038423208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038427653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.038428125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03843275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.038433222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038443, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.777999999995013e-06, 'source_diff': 9.777999999995013e-06}, {'time': 0.038443472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03844875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.038449222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038458694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.472000000003422e-06, 'source_diff': 9.472000000003422e-06}, {'time': 0.038459167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:52.586" endtime="20201112 12:42:52.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.576" endtime="20201112 12:42:52.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:52.658" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:52.602" endtime="20201112 12:42:52.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.667" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:52.665" endtime="20201112 12:42:52.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.677" level="INFO">VALUE: {'sourcetime': [0.038073375, 0.038073847, 0.038080583, 0.038081056, 0.038088931, 0.038089403, 0.038099278, 0.03809975, 0.038107, 0.038107472, 0.038117875, 0.038118347, 0.038125917, 0.038126389, 0.038134069, 0.038134542, 0.038140014, 0.038140486, 0.038147764, 0.038148236, 0.03815675, 0.038157222, 0.038163, 0.038163472, 0.038171056, 0.038171528, 0.038179306, 0.038179778, 0.038185694, 0.038186167, 0.038194472, 0.038194944, 0.038199681, 0.038200153, 0.038207611, 0.038208083, 0.038217861, 0.038218333, 0.038227778, 0.03822825, 0.038237181, 0.038237653, 0.038245222, 0.038245694, 0.038255681, 0.038256153, 0.038263611, 0.038264083, 0.038270097, 0.038270569, 0.038277208, 0.038277681, 0.038283486, 0.038283958, 0.038292972, 0.038293444, 0.038300292, 0.038300764, 0.03830625, 0.038306722, 0.038311167, 0.038311639, 0.038320778, 0.03832125, 0.038328931, 0.038329403, 0.038339167, 0.038339639, 0.038348778, 0.03834925, 0.038356819, 0.038357292, 0.038361931, 0.038362403, 0.038369458, 0.038369931, 0.038380861, 0.038381333, 0.038387333, 0.038387806, 0.038392514, 0.038393056, 0.038397236, 0.038397708, 0.03840475, 0.038405222, 0.038414264, 0.038414736, 0.038422736, 0.038423208, 0.038427653, 0.038428125, 0.03843275, 0.038433222, 0.038443, 0.038443472, 0.03844875, 0.038449222, 0.038458694, 0.038459167], 'eventsource_diff': [0, 4.720000000013602e-07, 6.736000000000242e-06, 4.7300000000083386e-07, 7.874999999997467e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.7199999999442133e-07, 7.57000000000535e-06, 4.7199999999442133e-07, 7.680000000002962e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7199999999442133e-07, 5.77800000000489e-06, 4.7199999999442133e-07, 7.58400000000492e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.7199999999442133e-07, 5.916000000001642e-06, 4.7300000000083386e-07, 8.305000000000118e-06, 4.720000000013602e-07, 4.736999999997715e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.7199999999442133e-07, 9.778000000001952e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 8.931000000003686e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.7199999999442133e-07, 9.987000000002966e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.7199999999442133e-07, 6.0140000000055704e-06, 4.7199999999442133e-07, 6.639000000002726e-06, 4.7300000000083386e-07, 5.804999999997618e-06, 4.720000000013602e-07, 9.014000000001632e-06, 4.720000000013602e-07, 6.847999999996801e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.680999999995497e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.7300000000083386e-07, 4.639000000000726e-06, 4.720000000013602e-07, 7.054999999998868e-06, 4.7300000000083386e-07, 1.0929999999999274e-05, 4.7199999999442133e-07, 6.0000000000060005e-06, 4.7299999999389497e-07, 4.708000000006041e-06, 5.419999999992098e-07, 4.179999999999462e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.041999999993833e-06, 4.720000000013602e-07, 8.000000000001062e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 4.625000000001156e-06, 4.720000000013602e-07, 9.777999999995013e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 9.472000000003422e-06, 4.7300000000083386e-07], 'diff': [0, 4.720000000013602e-07, 6.736000000000242e-06, 4.7300000000083386e-07, 7.874999999997467e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 7.250000000000312e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.7199999999442133e-07, 7.57000000000535e-06, 4.7199999999442133e-07, 7.680000000002962e-06, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 8.514000000001132e-06, 4.7199999999442133e-07, 5.77800000000489e-06, 4.7199999999442133e-07, 7.58400000000492e-06, 4.720000000013602e-07, 7.777999999999952e-06, 4.7199999999442133e-07, 5.916000000001642e-06, 4.7300000000083386e-07, 8.305000000000118e-06, 4.720000000013602e-07, 4.736999999997715e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.7199999999442133e-07, 9.778000000001952e-06, 4.720000000013602e-07, 9.444999999996817e-06, 4.720000000013602e-07, 8.931000000003686e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.7199999999442133e-07, 9.987000000002966e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.7199999999442133e-07, 6.0140000000055704e-06, 4.7199999999442133e-07, 6.639000000002726e-06, 4.7300000000083386e-07, 5.804999999997618e-06, 4.720000000013602e-07, 9.014000000001632e-06, 4.720000000013602e-07, 6.847999999996801e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.680999999995497e-06, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.7300000000083386e-07, 4.639000000000726e-06, 4.720000000013602e-07, 7.054999999998868e-06, 4.7300000000083386e-07, 1.0929999999999274e-05, 4.7199999999442133e-07, 6.0000000000060005e-06, 4.7299999999389497e-07, 4.708000000006041e-06, 5.419999999992098e-07, 4.179999999999462e-06, 4.720000000013602e-07, 7.0419999999987715e-06, 4.720000000013602e-07, 9.041999999993833e-06, 4.720000000013602e-07, 8.000000000001062e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 4.625000000001156e-06, 4.720000000013602e-07, 9.777999999995013e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 9.472000000003422e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:52.670" endtime="20201112 12:42:52.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.660" endtime="20201112 12:42:52.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:52.692" level="INFO">${RESULT} = [{'time': 0.038073847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038081056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:52.682" endtime="20201112 12:42:52.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:52.723" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:52.694" endtime="20201112 12:42:52.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.734" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:52.732" endtime="20201112 12:42:52.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.740" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 12:42:52.736" endtime="20201112 12:42:52.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.725" endtime="20201112 12:42:52.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.749" endtime="20201112 12:42:52.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:52.757" endtime="20201112 12:42:52.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.753" endtime="20201112 12:42:52.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.744" endtime="20201112 12:42:52.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.124" endtime="20201112 12:42:52.783"></status>
</kw>
<msg timestamp="20201112 12:42:52.783" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.804" endtime="20201112 12:42:52.816"></status>
</kw>
<msg timestamp="20201112 12:42:52.817" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.800" endtime="20201112 12:42:52.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.824" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.820" endtime="20201112 12:42:52.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.826" endtime="20201112 12:42:52.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.793" endtime="20201112 12:42:52.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.788" endtime="20201112 12:42:52.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.852" endtime="20201112 12:42:53.206"></status>
</kw>
<msg timestamp="20201112 12:42:53.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036716944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036717417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.848" endtime="20201112 12:42:53.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036716944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036717417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.215" endtime="20201112 12:42:53.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.235" endtime="20201112 12:42:53.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.839" endtime="20201112 12:42:53.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.834" endtime="20201112 12:42:53.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.252" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:53.250" endtime="20201112 12:42:53.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.264" level="INFO">VALUE: [{'time': 0.036716944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036717417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036728125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.036728597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036737528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930999999996747e-06, 'source_diff': 8.930999999996747e-06}, {'time': 0.036738, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036748917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0916999999999177e-05, 'source_diff': 1.0916999999999177e-05}, {'time': 0.036749389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036757278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.888999999997037e-06, 'source_diff': 7.888999999997037e-06}, {'time': 0.03675775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036765208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.036765681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036776486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.080499999999568e-05, 'source_diff': 1.080499999999568e-05}, {'time': 0.036776958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036784944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.036785417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036791319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.902000000002072e-06, 'source_diff': 5.902000000002072e-06}, {'time': 0.036791792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036796319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000004167e-06, 'source_diff': 4.527000000004167e-06}, {'time': 0.036796792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03680425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.457999999994913e-06, 'source_diff': 7.457999999994913e-06}, {'time': 0.036804722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036812431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.709000000001576e-06, 'source_diff': 7.709000000001576e-06}, {'time': 0.036812903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036818361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.036818833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036827444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.036827917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036837736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.036838278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036843111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999995757e-06, 'source_diff': 4.832999999995757e-06}, {'time': 0.036843583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036852222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.036852764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.036859597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.036860069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03687025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.036870722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036881528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805999999995153e-05, 'source_diff': 1.0805999999995153e-05}, {'time': 0.036882, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036892917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0916999999999177e-05, 'source_diff': 1.0916999999999177e-05}, {'time': 0.036893389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036904194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805000000002618e-05, 'source_diff': 1.0805000000002618e-05}, {'time': 0.036904667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036914444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.77699999999554e-06, 'source_diff': 9.77699999999554e-06}, {'time': 0.036914917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036922153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.236000000000742e-06, 'source_diff': 7.236000000000742e-06}, {'time': 0.036922625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036929889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.036930361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036940333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.971999999996983e-06, 'source_diff': 9.971999999996983e-06}, {'time': 0.036940806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036950264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.457999999996913e-06, 'source_diff': 9.457999999996913e-06}, {'time': 0.036950736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036959667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.931000000003686e-06, 'source_diff': 8.931000000003686e-06}, {'time': 0.036960139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036970139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.999999999996123e-06, 'source_diff': 9.999999999996123e-06}, {'time': 0.036970681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036978361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680000000002962e-06, 'source_diff': 7.680000000002962e-06}, {'time': 0.036978833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036985444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.610999999996647e-06, 'source_diff': 6.610999999996647e-06}, {'time': 0.036985917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03699225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3329999999972575e-06, 'source_diff': 6.3329999999972575e-06}, {'time': 0.036992722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037001528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.037002, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037009583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.037010056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037017847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791000000000048e-06, 'source_diff': 7.791000000000048e-06}, {'time': 0.037018319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037022611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999996021e-06, 'source_diff': 4.291999999996021e-06}, {'time': 0.037023083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037027625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.037028097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037032861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.037033333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037038806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.037039278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037049694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0415999999999204e-05, 'source_diff': 1.0415999999999204e-05}, {'time': 0.037050236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.03705675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.037057222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037061681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.458999999998325e-06, 'source_diff': 4.458999999998325e-06}, {'time': 0.037062153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037072111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.957999999997413e-06, 'source_diff': 9.957999999997413e-06}, {'time': 0.037072583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037080694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.037081167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037085583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.037086056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037090375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.037090847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037101153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0305999999994653e-05, 'source_diff': 1.0305999999994653e-05}, {'time': 0.037101625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037111472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.847000000000328e-06, 'source_diff': 9.847000000000328e-06}, {'time': 0.037111944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037119514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.037119986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037126819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.037127292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:53.254" endtime="20201112 12:42:53.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.244" endtime="20201112 12:42:53.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:53.325" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:53.270" endtime="20201112 12:42:53.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.334" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:53.332" endtime="20201112 12:42:53.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.344" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.036716944, 0.036717417, 0.036728125, 0.036728597, 0.036737528, 0.036738, 0.036748917, 0.036749389, 0.036757278, 0.03675775, 0.036765208, 0.036765681, 0.036776486, 0.036776958, 0.036784944, 0.036785417, 0.036791319, 0.036791792, 0.036796319, 0.036796792, 0.03680425, 0.036804722, 0.036812431, 0.036812903, 0.036818361, 0.036818833, 0.036827444, 0.036827917, 0.036837736, 0.036838278, 0.036843111, 0.036843583, 0.036852222, 0.036852764, 0.036859597, 0.036860069, 0.03687025, 0.036870722, 0.036881528, 0.036882, 0.036892917, 0.036893389, 0.036904194, 0.036904667, 0.036914444, 0.036914917, 0.036922153, 0.036922625, 0.036929889, 0.036930361, 0.036940333, 0.036940806, 0.036950264, 0.036950736, 0.036959667, 0.036960139, 0.036970139, 0.036970681, 0.036978361, 0.036978833, 0.036985444, 0.036985917, 0.03699225, 0.036992722, 0.037001528, 0.037002, 0.037009583, 0.037010056, 0.037017847, 0.037018319, 0.037022611, 0.037023083, 0.037027625, 0.037028097, 0.037032861, 0.037033333, 0.037038806, 0.037039278, 0.037049694, 0.037050236, 0.03705675, 0.037057222, 0.037061681, 0.037062153, 0.037072111, 0.037072583, 0.037080694, 0.037081167, 0.037085583, 0.037086056, 0.037090375, 0.037090847, 0.037101153, 0.037101625, 0.037111472, 0.037111944, 0.037119514, 0.037119986, 0.037126819, 0.037127292], 'eventsource_diff': [0, 4.7300000000083386e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 7.888999999997037e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 1.080499999999568e-05, 4.720000000013602e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 5.902000000002072e-06, 4.7299999999389497e-07, 4.527000000004167e-06, 4.7300000000083386e-07, 7.457999999994913e-06, 4.720000000013602e-07, 7.709000000001576e-06, 4.720000000013602e-07, 5.457999999999852e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.7300000000083386e-07, 9.819000000001188e-06, 5.419999999992098e-07, 4.832999999995757e-06, 4.720000000013602e-07, 8.638999999997787e-06, 5.420000000061487e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 1.0805999999995153e-05, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 1.0805000000002618e-05, 4.7300000000083386e-07, 9.77699999999554e-06, 4.7300000000083386e-07, 7.236000000000742e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 9.971999999996983e-06, 4.7300000000083386e-07, 9.457999999996913e-06, 4.720000000013602e-07, 8.931000000003686e-06, 4.720000000013602e-07, 9.999999999996123e-06, 5.419999999992098e-07, 7.680000000002962e-06, 4.720000000013602e-07, 6.610999999996647e-06, 4.7300000000083386e-07, 6.3329999999972575e-06, 4.720000000013602e-07, 8.806000000000092e-06, 4.720000000013602e-07, 7.582999999998508e-06, 4.7300000000083386e-07, 7.791000000000048e-06, 4.720000000013602e-07, 4.291999999996021e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.720000000013602e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07, 1.0415999999999204e-05, 5.419999999992098e-07, 6.513999999999132e-06, 4.720000000013602e-07, 4.458999999998325e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.7300000000083386e-07, 4.416000000000142e-06, 4.7300000000083386e-07, 4.319000000002626e-06, 4.720000000013602e-07, 1.0305999999994653e-05, 4.720000000013602e-07, 9.847000000000328e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.7300000000083386e-07], 'diff': [0, 4.7300000000083386e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 7.888999999997037e-06, 4.720000000013602e-07, 7.458000000001852e-06, 4.7300000000083386e-07, 1.080499999999568e-05, 4.720000000013602e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 5.902000000002072e-06, 4.7299999999389497e-07, 4.527000000004167e-06, 4.7300000000083386e-07, 7.457999999994913e-06, 4.720000000013602e-07, 7.709000000001576e-06, 4.720000000013602e-07, 5.457999999999852e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.7300000000083386e-07, 9.819000000001188e-06, 5.419999999992098e-07, 4.832999999995757e-06, 4.720000000013602e-07, 8.638999999997787e-06, 5.420000000061487e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 1.0805999999995153e-05, 4.720000000013602e-07, 1.0916999999999177e-05, 4.720000000013602e-07, 1.0805000000002618e-05, 4.7300000000083386e-07, 9.77699999999554e-06, 4.7300000000083386e-07, 7.236000000000742e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 9.971999999996983e-06, 4.7300000000083386e-07, 9.457999999996913e-06, 4.720000000013602e-07, 8.931000000003686e-06, 4.720000000013602e-07, 9.999999999996123e-06, 5.419999999992098e-07, 7.680000000002962e-06, 4.720000000013602e-07, 6.610999999996647e-06, 4.7300000000083386e-07, 6.3329999999972575e-06, 4.720000000013602e-07, 8.806000000000092e-06, 4.720000000013602e-07, 7.582999999998508e-06, 4.7300000000083386e-07, 7.791000000000048e-06, 4.720000000013602e-07, 4.291999999996021e-06, 4.720000000013602e-07, 4.54200000000321e-06, 4.720000000013602e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 5.472999999998895e-06, 4.720000000013602e-07, 1.0415999999999204e-05, 5.419999999992098e-07, 6.513999999999132e-06, 4.720000000013602e-07, 4.458999999998325e-06, 4.720000000013602e-07, 9.957999999997413e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.7300000000083386e-07, 4.416000000000142e-06, 4.7300000000083386e-07, 4.319000000002626e-06, 4.720000000013602e-07, 1.0305999999994653e-05, 4.720000000013602e-07, 9.847000000000328e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.7300000000083386e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:53.336" endtime="20201112 12:42:53.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.327" endtime="20201112 12:42:53.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:53.358" level="INFO">${RESULT} = [{'time': 0.036717417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036728597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:53.349" endtime="20201112 12:42:53.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:53.389" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:53.360" endtime="20201112 12:42:53.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.400" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:53.398" endtime="20201112 12:42:53.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.406" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201112 12:42:53.403" endtime="20201112 12:42:53.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.391" endtime="20201112 12:42:53.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.415" endtime="20201112 12:42:53.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:53.425" endtime="20201112 12:42:53.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.419" endtime="20201112 12:42:53.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.410" endtime="20201112 12:42:53.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.785" endtime="20201112 12:42:53.451"></status>
</kw>
<msg timestamp="20201112 12:42:53.451" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.474" endtime="20201112 12:42:53.488"></status>
</kw>
<msg timestamp="20201112 12:42:53.489" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.469" endtime="20201112 12:42:53.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.496" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.491" endtime="20201112 12:42:53.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.498" endtime="20201112 12:42:53.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.461" endtime="20201112 12:42:53.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.456" endtime="20201112 12:42:53.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.522" endtime="20201112 12:42:53.873"></status>
</kw>
<msg timestamp="20201112 12:42:53.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039799903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039800375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.519" endtime="20201112 12:42:53.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039799903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039800375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.884" endtime="20201112 12:42:53.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.906" endtime="20201112 12:42:53.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.511" endtime="20201112 12:42:53.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.506" endtime="20201112 12:42:53.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.923" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:53.920" endtime="20201112 12:42:53.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.934" level="INFO">VALUE: [{'time': 0.039799903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039800375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039808875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.039809347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039819528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180999999997997e-05, 'source_diff': 1.0180999999997997e-05}, {'time': 0.03982, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039828931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930999999996747e-06, 'source_diff': 8.930999999996747e-06}, {'time': 0.039829403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039836972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.039837444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039843458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.039843931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039854319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388000000000064e-05, 'source_diff': 1.0388000000000064e-05}, {'time': 0.039854792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039865514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0721999999997733e-05, 'source_diff': 1.0721999999997733e-05}, {'time': 0.039865986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039871667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.039872139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039876722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.039877264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.039882639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999994967e-06, 'source_diff': 5.374999999994967e-06}, {'time': 0.039883111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0398935, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.039893972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039900181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.039900653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039910306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.039910778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039917931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152999999995857e-06, 'source_diff': 7.152999999995857e-06}, {'time': 0.039918403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039924306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.039924778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039930264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.039930736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039935167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.039935639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039942583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.943999999994843e-06, 'source_diff': 6.943999999994843e-06}, {'time': 0.039943056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039950528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.039951, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039957417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.039957889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039968694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.080499999999568e-05, 'source_diff': 1.080499999999568e-05}, {'time': 0.039969167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.039973486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.039973958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.039982486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.039982958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039987375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.039987847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039998069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0221999999997233e-05, 'source_diff': 1.0221999999997233e-05}, {'time': 0.039998542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.040003361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.819000000003126e-06, 'source_diff': 4.819000000003126e-06}, {'time': 0.040003833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.040012972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.040013444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.040019236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.040019708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.040024361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.040024833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.040035222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0388999999999537e-05, 'source_diff': 1.0388999999999537e-05}, {'time': 0.040035694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.040040542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.84800000000174e-06, 'source_diff': 4.84800000000174e-06}, {'time': 0.040041014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.040048486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.040048958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.040057611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.652999999997357e-06, 'source_diff': 8.652999999997357e-06}, {'time': 0.040058153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.040062931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.77800000000389e-06, 'source_diff': 4.77800000000389e-06}, {'time': 0.040063472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.040068236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.040068708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.040078514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.040079056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.040083681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.040084153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.040092486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.040092958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.04010325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0292000000002022e-05, 'source_diff': 1.0292000000002022e-05}, {'time': 0.040103722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.040109806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083999999996481e-06, 'source_diff': 6.083999999996481e-06}, {'time': 0.040110278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.040118167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.889000000003976e-06, 'source_diff': 7.889000000003976e-06}, {'time': 0.040118639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.040125986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.347000000004766e-06, 'source_diff': 7.347000000004766e-06}, {'time': 0.040126458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.040133, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.54200000000521e-06, 'source_diff': 6.54200000000521e-06}, {'time': 0.040133472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.040140111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999995787e-06, 'source_diff': 6.638999999995787e-06}, {'time': 0.040140583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.040148, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.417000000002616e-06, 'source_diff': 7.417000000002616e-06}, {'time': 0.040148542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.04015525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.040155722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.040165167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.445000000003756e-06, 'source_diff': 9.445000000003756e-06}, {'time': 0.040165639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.040172472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.040172944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.040179056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111999999995621e-06, 'source_diff': 6.111999999995621e-06}, {'time': 0.040179528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:53.925" endtime="20201112 12:42:53.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.914" endtime="20201112 12:42:53.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:53.998" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:53.940" endtime="20201112 12:42:53.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.008" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:54.005" endtime="20201112 12:42:54.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.017" level="INFO">VALUE: {'sourcetime': [0.039799903, 0.039800375, 0.039808875, 0.039809347, 0.039819528, 0.03982, 0.039828931, 0.039829403, 0.039836972, 0.039837444, 0.039843458, 0.039843931, 0.039854319, 0.039854792, 0.039865514, 0.039865986, 0.039871667, 0.039872139, 0.039876722, 0.039877264, 0.039882639, 0.039883111, 0.0398935, 0.039893972, 0.039900181, 0.039900653, 0.039910306, 0.039910778, 0.039917931, 0.039918403, 0.039924306, 0.039924778, 0.039930264, 0.039930736, 0.039935167, 0.039935639, 0.039942583, 0.039943056, 0.039950528, 0.039951, 0.039957417, 0.039957889, 0.039968694, 0.039969167, 0.039973486, 0.039973958, 0.039982486, 0.039982958, 0.039987375, 0.039987847, 0.039998069, 0.039998542, 0.040003361, 0.040003833, 0.040012972, 0.040013444, 0.040019236, 0.040019708, 0.040024361, 0.040024833, 0.040035222, 0.040035694, 0.040040542, 0.040041014, 0.040048486, 0.040048958, 0.040057611, 0.040058153, 0.040062931, 0.040063472, 0.040068236, 0.040068708, 0.040078514, 0.040079056, 0.040083681, 0.040084153, 0.040092486, 0.040092958, 0.04010325, 0.040103722, 0.040109806, 0.040110278, 0.040118167, 0.040118639, 0.040125986, 0.040126458, 0.040133, 0.040133472, 0.040140111, 0.040140583, 0.040148, 0.040148542, 0.04015525, 0.040155722, 0.040165167, 0.040165639, 0.040172472, 0.040172944, 0.040179056, 0.040179528], 'eventsource_diff': [0, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.7300000000083386e-07, 1.0388000000000064e-05, 4.7300000000083386e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 4.583000000002446e-06, 5.419999999992098e-07, 5.374999999994967e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 5.903000000001546e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 6.943999999994843e-06, 4.7300000000083386e-07, 7.472000000001422e-06, 4.720000000013602e-07, 6.417000000001616e-06, 4.720000000013602e-07, 1.080499999999568e-05, 4.7300000000083386e-07, 4.319000000002626e-06, 4.7199999999442133e-07, 8.528000000000702e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 1.0221999999997233e-05, 4.7300000000083386e-07, 4.819000000003126e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7199999999442133e-07, 4.84800000000174e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.720000000013602e-07, 8.652999999997357e-06, 5.419999999992098e-07, 4.77800000000389e-06, 5.409999999997361e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 9.806000000001092e-06, 5.419999999992098e-07, 4.625000000001156e-06, 4.7199999999442133e-07, 8.332999999999258e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 6.083999999996481e-06, 4.720000000013602e-07, 7.889000000003976e-06, 4.7199999999442133e-07, 7.347000000004766e-06, 4.7199999999442133e-07, 6.54200000000521e-06, 4.720000000013602e-07, 6.638999999995787e-06, 4.720000000013602e-07, 7.417000000002616e-06, 5.419999999992098e-07, 6.708000000001102e-06, 4.7199999999442133e-07, 9.445000000003756e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 6.111999999995621e-06, 4.720000000013602e-07], 'diff': [0, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 1.0180999999997997e-05, 4.720000000013602e-07, 8.930999999996747e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.7300000000083386e-07, 1.0388000000000064e-05, 4.7300000000083386e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 4.583000000002446e-06, 5.419999999992098e-07, 5.374999999994967e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.720000000013602e-07, 6.2090000000000756e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 7.152999999995857e-06, 4.720000000013602e-07, 5.903000000001546e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 6.943999999994843e-06, 4.7300000000083386e-07, 7.472000000001422e-06, 4.720000000013602e-07, 6.417000000001616e-06, 4.720000000013602e-07, 1.080499999999568e-05, 4.7300000000083386e-07, 4.319000000002626e-06, 4.7199999999442133e-07, 8.528000000000702e-06, 4.720000000013602e-07, 4.416999999999616e-06, 4.720000000013602e-07, 1.0221999999997233e-05, 4.7300000000083386e-07, 4.819000000003126e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 5.791999999997521e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.720000000013602e-07, 1.0388999999999537e-05, 4.7199999999442133e-07, 4.84800000000174e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.720000000013602e-07, 8.652999999997357e-06, 5.419999999992098e-07, 4.77800000000389e-06, 5.409999999997361e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 9.806000000001092e-06, 5.419999999992098e-07, 4.625000000001156e-06, 4.7199999999442133e-07, 8.332999999999258e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 6.083999999996481e-06, 4.720000000013602e-07, 7.889000000003976e-06, 4.7199999999442133e-07, 7.347000000004766e-06, 4.7199999999442133e-07, 6.54200000000521e-06, 4.720000000013602e-07, 6.638999999995787e-06, 4.720000000013602e-07, 7.417000000002616e-06, 5.419999999992098e-07, 6.708000000001102e-06, 4.7199999999442133e-07, 9.445000000003756e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 6.111999999995621e-06, 4.720000000013602e-07]}</msg>
<status status="PASS" starttime="20201112 12:42:54.010" endtime="20201112 12:42:54.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.000" endtime="20201112 12:42:54.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:54.032" level="INFO">${RESULT} = [{'time': 0.039800375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.039809347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:54.023" endtime="20201112 12:42:54.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:54.063" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:54.034" endtime="20201112 12:42:54.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.073" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:54.071" endtime="20201112 12:42:54.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.079" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 5.409999999997361e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201112 12:42:54.076" endtime="20201112 12:42:54.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.065" endtime="20201112 12:42:54.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.089" endtime="20201112 12:42:54.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.098" endtime="20201112 12:42:54.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.093" endtime="20201112 12:42:54.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.083" endtime="20201112 12:42:54.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.453" endtime="20201112 12:42:54.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.899" endtime="20201112 12:42:54.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.136" endtime="20201112 12:42:54.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.131" endtime="20201112 12:42:54.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.129" endtime="20201112 12:42:54.160"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:40.712" endtime="20201112 12:42:54.162" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.182" endtime="20201112 12:42:54.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.178" endtime="20201112 12:42:54.206"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.242" endtime="20201112 12:42:54.261"></status>
</kw>
<msg timestamp="20201112 12:42:54.262" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.238" endtime="20201112 12:42:54.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.269" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.264" endtime="20201112 12:42:54.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.276" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:54.272" endtime="20201112 12:42:54.277"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:54.229" endtime="20201112 12:42:54.279"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:54.222" endtime="20201112 12:42:54.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.220" endtime="20201112 12:42:54.281"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:54.289" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:54.288" endtime="20201112 12:42:54.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.283" endtime="20201112 12:42:54.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.218" endtime="20201112 12:42:54.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.216" endtime="20201112 12:42:54.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.293" endtime="20201112 12:42:54.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.212" endtime="20201112 12:42:54.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.207" endtime="20201112 12:42:54.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.175" endtime="20201112 12:42:54.300"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 12:42:54.305" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.325" endtime="20201112 12:42:54.340"></status>
</kw>
<msg timestamp="20201112 12:42:54.341" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.322" endtime="20201112 12:42:54.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.347" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.343" endtime="20201112 12:42:54.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.349" endtime="20201112 12:42:54.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.315" endtime="20201112 12:42:54.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.310" endtime="20201112 12:42:54.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.374" endtime="20201112 12:42:54.736"></status>
</kw>
<msg timestamp="20201112 12:42:54.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134208472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134217986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.370" endtime="20201112 12:42:54.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134208472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134217986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.745" endtime="20201112 12:42:54.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.765" endtime="20201112 12:42:54.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.363" endtime="20201112 12:42:54.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.358" endtime="20201112 12:42:54.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:54.782" level="INFO">${RESULT} = [{'time': 0.134217986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.51400000001601e-06, 'source_diff': 9.51400000001601e-06}, {'time': 0.134231889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:54.773" endtime="20201112 12:42:54.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:54.815" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:54.784" endtime="20201112 12:42:54.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.827" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:54.824" endtime="20201112 12:42:54.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.832" level="INFO">VALUE: [9.51400000001601e-06, 9.069999999999911e-06, 8.750000000001812e-06, 9.055000000007807e-06, 8.736000000009181e-06, 9.097999999985174e-06, 9.26400000000882e-06, 9.555999999993903e-06, 9.069000000000438e-06, 9.249999999988434e-06, 9.763999999995443e-06, 9.111000000006086e-06, 9.223000000002646e-06, 8.722999999988268e-06, 8.750000000001812e-06, 9.56899999998706e-06, 8.72200000001655e-06, 8.915999999997704e-06, 9.249999999988434e-06, 9.04099999998742e-06, 8.902000000005073e-06, 9.083000000020824e-06, 9.402999999991168e-06, 9.26400000000882e-06, 9.542000000001272e-06, 9.291999999994083e-06, 9.417000000011555e-06, 9.582999999979691e-06, 9.58400000000692e-06, 9.417000000011555e-06, 8.875000000019284e-06, 9.415999999984326e-06, 9.25000000001619e-06, 9.084000000020298e-06, 9.401999999991695e-06, 9.555999999993903e-06, 8.721999999988794e-06, 9.054999999980051e-06, 9.25000000001619e-06, 9.124999999998717e-06, 8.903000000004546e-06, 9.069999999999911e-06, 9.223000000002646e-06, 8.93000000001809e-06, 9.389000000026293e-06, 9.499999999995623e-06, 9.249999999988434e-06, 9.569000000014816e-06, 9.43099999997643e-06, 9.069000000000438e-06]</msg>
<status status="PASS" starttime="20201112 12:42:54.829" endtime="20201112 12:42:54.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.818" endtime="20201112 12:42:54.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.841" endtime="20201112 12:42:54.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.850" endtime="20201112 12:42:54.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.845" endtime="20201112 12:42:54.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.836" endtime="20201112 12:42:54.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.306" endtime="20201112 12:42:54.876"></status>
</kw>
<msg timestamp="20201112 12:42:54.876" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.896" endtime="20201112 12:42:54.910"></status>
</kw>
<msg timestamp="20201112 12:42:54.911" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.893" endtime="20201112 12:42:54.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.918" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.914" endtime="20201112 12:42:54.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.920" endtime="20201112 12:42:54.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.886" endtime="20201112 12:42:54.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.881" endtime="20201112 12:42:54.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.944" endtime="20201112 12:42:55.294"></status>
</kw>
<msg timestamp="20201112 12:42:55.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037338139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037347042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.941" endtime="20201112 12:42:55.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037338139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037347042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.303" endtime="20201112 12:42:55.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.322" endtime="20201112 12:42:55.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.933" endtime="20201112 12:42:55.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.928" endtime="20201112 12:42:55.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:55.340" level="INFO">${RESULT} = [{'time': 0.037347042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.037366056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:55.331" endtime="20201112 12:42:55.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:55.373" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:55.343" endtime="20201112 12:42:55.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.384" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:55.381" endtime="20201112 12:42:55.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.389" level="INFO">VALUE: [8.902999999997607e-06, 9.570000000000412e-06, 9.069000000000438e-06, 9.416999999997677e-06, 8.750000000001812e-06, 9.083000000000008e-06, 8.736000000002242e-06, 8.764000000001382e-06, 9.417000000004616e-06, 9.569000000000938e-06, 9.069000000000438e-06, 8.736000000002242e-06, 9.583999999999981e-06, 9.554999999994429e-06, 9.207999999996663e-06, 9.069999999999911e-06, 9.569000000000938e-06, 9.236000000002742e-06, 9.388999999998537e-06, 8.750000000001812e-06, 8.917000000004116e-06, 9.083000000000008e-06, 8.722000000002672e-06, 9.569000000000938e-06, 9.583000000000508e-06, 8.750000000001812e-06, 9.583000000000508e-06, 8.915999999997704e-06, 8.722000000002672e-06, 9.402999999998107e-06, 8.722999999995207e-06, 9.416999999997677e-06, 9.416999999997677e-06, 9.027999999994263e-06, 9.264000000001882e-06, 8.902999999997607e-06, 9.236000000002742e-06, 9.236000000002742e-06, 8.750000000001812e-06, 8.764000000001382e-06, 9.403000000005046e-06, 9.069999999999911e-06, 8.917000000004116e-06, 9.069000000000438e-06, 8.721999999995733e-06, 9.570000000000412e-06, 9.402999999998107e-06, 9.264000000001882e-06, 9.069000000000438e-06, 8.736000000002242e-06]</msg>
<status status="PASS" starttime="20201112 12:42:55.386" endtime="20201112 12:42:55.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.375" endtime="20201112 12:42:55.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.398" endtime="20201112 12:42:55.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:55.407" endtime="20201112 12:42:55.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.402" endtime="20201112 12:42:55.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.393" endtime="20201112 12:42:55.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.878" endtime="20201112 12:42:55.433"></status>
</kw>
<msg timestamp="20201112 12:42:55.433" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.453" endtime="20201112 12:42:55.467"></status>
</kw>
<msg timestamp="20201112 12:42:55.468" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.450" endtime="20201112 12:42:55.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.474" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.470" endtime="20201112 12:42:55.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.477" endtime="20201112 12:42:55.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.442" endtime="20201112 12:42:55.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.438" endtime="20201112 12:42:55.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.501" endtime="20201112 12:42:55.850"></status>
</kw>
<msg timestamp="20201112 12:42:55.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037146542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037155458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.498" endtime="20201112 12:42:55.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037146542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037155458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.860" endtime="20201112 12:42:55.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.879" endtime="20201112 12:42:55.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.490" endtime="20201112 12:42:55.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.485" endtime="20201112 12:42:55.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:55.898" level="INFO">${RESULT} = [{'time': 0.037155458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.916000000004642e-06, 'source_diff': 8.916000000004642e-06}, {'time': 0.037175667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:55.888" endtime="20201112 12:42:55.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:55.932" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:55.900" endtime="20201112 12:42:55.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.942" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:55.940" endtime="20201112 12:42:55.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.948" level="INFO">VALUE: [8.916000000004642e-06, 9.417000000004616e-06, 9.264000000001882e-06, 8.874999999998467e-06, 9.042000000000772e-06, 9.569000000000938e-06, 8.736000000002242e-06, 8.917000000004116e-06, 8.903000000004546e-06, 9.236000000002742e-06, 9.264000000001882e-06, 9.388999999998537e-06, 9.361000000006336e-06, 9.236000000002742e-06, 9.570000000000412e-06, 9.569000000000938e-06, 9.402999999998107e-06, 9.360999999999398e-06, 9.541000000001798e-06, 8.750000000001812e-06, 9.570000000000412e-06, 9.514000000002132e-06, 8.931000000003686e-06, 9.236000000002742e-06, 9.416999999997677e-06, 9.250000000002312e-06, 9.430999999997247e-06, 9.236000000002742e-06, 9.237000000002216e-06, 9.083000000000008e-06, 9.569000000000938e-06, 9.458999999996387e-06, 9.069999999999911e-06, 9.735999999996303e-06, 8.903000000004546e-06, 9.069000000000438e-06, 9.583000000000508e-06, 9.417000000004616e-06, 9.556000000000842e-06, 9.527000000002228e-06, 9.083000000000008e-06, 8.902000000005073e-06, 9.236000000002742e-06, 9.417000000004616e-06, 9.415999999998204e-06, 9.236000000002742e-06, 8.736000000002242e-06, 9.429999999997773e-06, 8.735999999995303e-06, 9.249999999995373e-06]</msg>
<status status="PASS" starttime="20201112 12:42:55.944" endtime="20201112 12:42:55.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.934" endtime="20201112 12:42:55.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.957" endtime="20201112 12:42:55.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:55.965" endtime="20201112 12:42:55.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.961" endtime="20201112 12:42:55.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.952" endtime="20201112 12:42:55.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.434" endtime="20201112 12:42:55.991"></status>
</kw>
<msg timestamp="20201112 12:42:55.991" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.012" endtime="20201112 12:42:56.026"></status>
</kw>
<msg timestamp="20201112 12:42:56.027" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.008" endtime="20201112 12:42:56.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.033" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.029" endtime="20201112 12:42:56.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.035" endtime="20201112 12:42:56.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.001" endtime="20201112 12:42:56.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.996" endtime="20201112 12:42:56.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.059" endtime="20201112 12:42:56.409"></status>
</kw>
<msg timestamp="20201112 12:42:56.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037408417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037417694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.056" endtime="20201112 12:42:56.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037408417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037417694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.418" endtime="20201112 12:42:56.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.438" endtime="20201112 12:42:56.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.048" endtime="20201112 12:42:56.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.044" endtime="20201112 12:42:56.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:56.456" level="INFO">${RESULT} = [{'time': 0.037417694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.277000000001978e-06, 'source_diff': 9.277000000001978e-06}, {'time': 0.037431597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:56.447" endtime="20201112 12:42:56.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:56.488" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:56.458" endtime="20201112 12:42:56.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.499" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:56.495" endtime="20201112 12:42:56.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.505" level="INFO">VALUE: [9.277000000001978e-06, 9.402999999998107e-06, 9.569000000000938e-06, 9.387999999999064e-06, 9.610999999999648e-06, 9.250000000002312e-06, 8.958999999995887e-06, 9.083000000000008e-06, 9.402999999998107e-06, 9.250000000002312e-06, 9.555000000001368e-06, 9.431000000004186e-06, 9.583000000000508e-06, 9.069000000000438e-06, 9.236000000002742e-06, 9.583000000000508e-06, 8.889000000004976e-06, 8.903000000004546e-06, 9.541000000001798e-06, 9.069000000000438e-06, 9.555000000001368e-06, 9.388999999998537e-06, 9.277000000001978e-06, 9.416999999997677e-06, 9.569000000000938e-06, 8.889000000004976e-06, 9.583000000000508e-06, 8.943999999996843e-06, 8.707999999996163e-06, 9.764000000002382e-06, 9.569000000000938e-06, 9.569000000000938e-06, 8.887999999998564e-06, 8.903000000004546e-06, 8.680999999996497e-06, 9.096999999999578e-06, 9.250000000002312e-06, 9.041000000001298e-06, 8.901999999998134e-06, 8.916999999997177e-06, 8.735999999995303e-06, 9.416999999997677e-06, 8.736000000002242e-06, 9.583999999999981e-06, 9.513999999995193e-06, 9.583999999999981e-06, 9.569000000000938e-06, 9.402999999998107e-06, 9.583000000000508e-06, 8.888999999998037e-06]</msg>
<status status="PASS" starttime="20201112 12:42:56.502" endtime="20201112 12:42:56.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.489" endtime="20201112 12:42:56.507"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.514" endtime="20201112 12:42:56.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:56.522" endtime="20201112 12:42:56.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.518" endtime="20201112 12:42:56.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.509" endtime="20201112 12:42:56.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.992" endtime="20201112 12:42:56.548"></status>
</kw>
<msg timestamp="20201112 12:42:56.548" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.569" endtime="20201112 12:42:56.584"></status>
</kw>
<msg timestamp="20201112 12:42:56.585" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.565" endtime="20201112 12:42:56.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.591" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.587" endtime="20201112 12:42:56.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.594" endtime="20201112 12:42:56.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.558" endtime="20201112 12:42:56.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.553" endtime="20201112 12:42:56.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.618" endtime="20201112 12:42:56.969"></status>
</kw>
<msg timestamp="20201112 12:42:56.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038313222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038322292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.615" endtime="20201112 12:42:56.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038313222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038322292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.979" endtime="20201112 12:42:56.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.999" endtime="20201112 12:42:57.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.607" endtime="20201112 12:42:57.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.602" endtime="20201112 12:42:57.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:57.017" level="INFO">${RESULT} = [{'time': 0.038322292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.069999999999911e-06, 'source_diff': 9.069999999999911e-06}, {'time': 0.038338417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:57.008" endtime="20201112 12:42:57.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:57.048" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:57.019" endtime="20201112 12:42:57.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.059" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:57.056" endtime="20201112 12:42:57.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.064" level="INFO">VALUE: [9.069999999999911e-06, 9.402999999998107e-06, 9.250000000002312e-06, 9.709000000003576e-06, 9.096999999999578e-06, 9.416999999997677e-06, 9.568999999993999e-06, 9.444999999996817e-06, 9.096999999999578e-06, 9.069999999999911e-06, 9.222000000003172e-06, 9.083000000000008e-06, 9.264000000001882e-06, 9.570000000000412e-06, 9.415999999998204e-06, 9.08400000000642e-06, 8.860999999998898e-06, 9.069000000000438e-06, 8.736000000002242e-06, 9.388999999998537e-06, 9.056000000000342e-06, 9.236000000002742e-06, 9.415999999998204e-06, 8.888999999998037e-06, 9.250000000002312e-06, 9.124999999998717e-06, 9.235999999995803e-06, 9.764000000002382e-06, 9.083999999999481e-06, 8.901999999998134e-06, 8.902999999997607e-06, 8.888999999998037e-06, 9.415999999998204e-06, 9.165999999997954e-06, 9.402999999998107e-06, 8.722000000002672e-06, 9.264000000001882e-06, 9.569000000000938e-06, 9.056000000000342e-06, 8.957999999996413e-06, 8.708000000003102e-06, 8.749999999994873e-06, 9.583000000000508e-06, 9.069000000000438e-06, 8.737000000001716e-06, 8.861000000005836e-06, 9.083999999999481e-06, 9.235999999995803e-06, 9.264000000001882e-06, 9.415999999998204e-06]</msg>
<status status="PASS" starttime="20201112 12:42:57.061" endtime="20201112 12:42:57.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.050" endtime="20201112 12:42:57.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.074" endtime="20201112 12:42:57.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:57.083" endtime="20201112 12:42:57.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.079" endtime="20201112 12:42:57.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.069" endtime="20201112 12:42:57.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.550" endtime="20201112 12:42:57.109"></status>
</kw>
<msg timestamp="20201112 12:42:57.110" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.130" endtime="20201112 12:42:57.144"></status>
</kw>
<msg timestamp="20201112 12:42:57.145" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.126" endtime="20201112 12:42:57.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.151" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.147" endtime="20201112 12:42:57.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.153" endtime="20201112 12:42:57.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.119" endtime="20201112 12:42:57.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.114" endtime="20201112 12:42:57.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.180" endtime="20201112 12:42:57.531"></status>
</kw>
<msg timestamp="20201112 12:42:57.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037394111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037403194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.175" endtime="20201112 12:42:57.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037394111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037403194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.541" endtime="20201112 12:42:57.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.560" endtime="20201112 12:42:57.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.168" endtime="20201112 12:42:57.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.162" endtime="20201112 12:42:57.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:57.578" level="INFO">${RESULT} = [{'time': 0.037403194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.037422181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:57.568" endtime="20201112 12:42:57.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:57.610" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:57.580" endtime="20201112 12:42:57.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.621" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:57.618" endtime="20201112 12:42:57.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.627" level="INFO">VALUE: [9.083000000000008e-06, 9.208999999996137e-06, 8.917000000004116e-06, 9.264000000001882e-06, 9.388999999998537e-06, 9.097999999999051e-06, 9.235999999995803e-06, 9.250000000002312e-06, 9.083999999999481e-06, 9.402999999998107e-06, 8.915999999997704e-06, 9.069999999999911e-06, 8.903000000004546e-06, 8.749999999994873e-06, 9.569000000000938e-06, 8.723000000002146e-06, 8.749999999994873e-06, 8.916999999997177e-06, 9.055000000000868e-06, 8.917000000004116e-06, 9.333999999999731e-06, 8.736000000002242e-06, 9.069999999999911e-06, 8.722000000002672e-06, 9.583999999999981e-06, 9.208000000003602e-06, 9.249999999995373e-06, 8.750000000001812e-06, 9.055000000000868e-06, 9.416999999997677e-06, 9.278000000001452e-06, 8.694999999996067e-06, 9.069999999999911e-06, 8.791000000001048e-06, 9.430999999997247e-06, 9.402999999998107e-06, 8.888999999998037e-06, 8.930999999996747e-06, 8.957999999996413e-06, 9.235999999995803e-06, 9.069999999999911e-06, 8.832999999999758e-06, 9.416999999997677e-06, 8.929999999997273e-06, 9.402999999998107e-06, 8.750000000001812e-06, 9.083999999999481e-06, 8.750000000001812e-06, 8.874999999998467e-06, 8.888999999998037e-06]</msg>
<status status="PASS" starttime="20201112 12:42:57.623" endtime="20201112 12:42:57.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.612" endtime="20201112 12:42:57.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.636" endtime="20201112 12:42:57.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:57.644" endtime="20201112 12:42:57.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.640" endtime="20201112 12:42:57.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.631" endtime="20201112 12:42:57.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.111" endtime="20201112 12:42:57.671"></status>
</kw>
<msg timestamp="20201112 12:42:57.672" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.692" endtime="20201112 12:42:57.706"></status>
</kw>
<msg timestamp="20201112 12:42:57.708" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.689" endtime="20201112 12:42:57.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.714" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.710" endtime="20201112 12:42:57.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.716" endtime="20201112 12:42:57.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.682" endtime="20201112 12:42:57.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.677" endtime="20201112 12:42:57.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.741" endtime="20201112 12:42:58.091"></status>
</kw>
<msg timestamp="20201112 12:42:58.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037509194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03751875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:57.737" endtime="20201112 12:42:58.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037509194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03751875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:58.100" endtime="20201112 12:42:58.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.119" endtime="20201112 12:42:58.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.730" endtime="20201112 12:42:58.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.725" endtime="20201112 12:42:58.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:58.137" level="INFO">${RESULT} = [{'time': 0.03751875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.555999999993903e-06, 'source_diff': 9.555999999993903e-06}, {'time': 0.037532806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:58.128" endtime="20201112 12:42:58.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:58.170" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:58.139" endtime="20201112 12:42:58.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.180" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:58.178" endtime="20201112 12:42:58.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.186" level="INFO">VALUE: [9.555999999993903e-06, 9.417000000004616e-06, 9.249999999995373e-06, 9.556000000000842e-06, 8.819000000000188e-06, 9.417000000004616e-06, 9.08400000000642e-06, 9.166999999997427e-06, 8.861000000005836e-06, 9.583999999999981e-06, 9.249999999995373e-06, 8.902999999997607e-06, 8.721999999995733e-06, 9.250000000002312e-06, 9.570000000000412e-06, 9.401999999998634e-06, 9.402999999998107e-06, 9.597000000000078e-06, 8.832999999999758e-06, 8.750000000001812e-06, 9.083999999999481e-06, 8.750000000001812e-06, 9.069999999999911e-06, 9.083000000000008e-06, 9.403000000005046e-06, 9.402999999998107e-06, 8.860999999998898e-06, 9.069999999999911e-06, 9.388999999998537e-06, 9.250000000002312e-06, 9.597000000000078e-06, 9.124999999998717e-06, 9.583000000000508e-06, 9.221999999996233e-06, 9.250000000002312e-06, 8.874999999998467e-06, 8.999999999995123e-06, 8.749999999994873e-06, 9.069999999999911e-06, 9.250000000002312e-06, 9.597000000000078e-06, 8.958000000003352e-06, 9.415999999998204e-06, 8.735999999995303e-06, 8.750000000001812e-06, 9.069999999999911e-06, 9.292000000001022e-06, 9.416999999997677e-06, 9.583000000000508e-06, 9.443999999997343e-06]</msg>
<status status="PASS" starttime="20201112 12:42:58.183" endtime="20201112 12:42:58.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.171" endtime="20201112 12:42:58.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.195" endtime="20201112 12:42:58.198"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.204" endtime="20201112 12:42:58.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.199" endtime="20201112 12:42:58.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.190" endtime="20201112 12:42:58.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.673" endtime="20201112 12:42:58.230"></status>
</kw>
<msg timestamp="20201112 12:42:58.230" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.252" endtime="20201112 12:42:58.266"></status>
</kw>
<msg timestamp="20201112 12:42:58.267" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.249" endtime="20201112 12:42:58.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.274" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.269" endtime="20201112 12:42:58.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.277" endtime="20201112 12:42:58.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.241" endtime="20201112 12:42:58.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.235" endtime="20201112 12:42:58.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.301" endtime="20201112 12:42:58.649"></status>
</kw>
<msg timestamp="20201112 12:42:58.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039056264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039065833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.297" endtime="20201112 12:42:58.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039056264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039065833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.659" endtime="20201112 12:42:58.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.678" endtime="20201112 12:42:58.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.290" endtime="20201112 12:42:58.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.285" endtime="20201112 12:42:58.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:58.696" level="INFO">${RESULT} = [{'time': 0.039065833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.039079847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:58.687" endtime="20201112 12:42:58.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:58.727" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:58.698" endtime="20201112 12:42:58.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.738" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:58.735" endtime="20201112 12:42:58.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.744" level="INFO">VALUE: [9.569000000000938e-06, 9.069000000000438e-06, 9.236000000002742e-06, 8.888999999998037e-06, 9.083000000000008e-06, 8.735999999995303e-06, 9.097999999999051e-06, 9.236000000002742e-06, 9.570000000000412e-06, 9.388999999998537e-06, 8.750000000001812e-06, 8.736000000002242e-06, 8.736000000002242e-06, 9.416999999997677e-06, 9.388999999998537e-06, 9.569000000000938e-06, 9.417000000004616e-06, 9.346999999999828e-06, 8.902999999997607e-06, 9.402000000005573e-06, 8.874999999998467e-06, 8.736000000002242e-06, 9.236000000002742e-06, 9.235999999995803e-06, 9.069000000000438e-06, 8.916999999997177e-06, 9.236000000002742e-06, 8.943999999996843e-06, 8.819999999999661e-06, 8.833999999999231e-06, 9.597000000000078e-06, 9.277000000001978e-06, 9.388999999998537e-06, 9.069999999999911e-06, 8.695000000003006e-06, 8.750000000001812e-06, 8.930000000004212e-06, 8.860999999998898e-06, 9.389000000005476e-06, 9.569000000000938e-06, 8.736000000002242e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.207999999996663e-06, 9.597999999999551e-06, 9.583000000000508e-06, 9.570000000000412e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.736000000002242e-06]</msg>
<status status="PASS" starttime="20201112 12:42:58.740" endtime="20201112 12:42:58.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.729" endtime="20201112 12:42:58.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.752" endtime="20201112 12:42:58.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.761" endtime="20201112 12:42:58.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.756" endtime="20201112 12:42:58.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.748" endtime="20201112 12:42:58.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.231" endtime="20201112 12:42:58.787"></status>
</kw>
<msg timestamp="20201112 12:42:58.787" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.808" endtime="20201112 12:42:58.822"></status>
</kw>
<msg timestamp="20201112 12:42:58.824" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.804" endtime="20201112 12:42:58.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.830" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.826" endtime="20201112 12:42:58.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.832" endtime="20201112 12:42:58.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.797" endtime="20201112 12:42:58.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.792" endtime="20201112 12:42:58.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.858" endtime="20201112 12:42:59.206"></status>
</kw>
<msg timestamp="20201112 12:42:59.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038074556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038083292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.854" endtime="20201112 12:42:59.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038074556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038083292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.216" endtime="20201112 12:42:59.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.235" endtime="20201112 12:42:59.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.847" endtime="20201112 12:42:59.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.842" endtime="20201112 12:42:59.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:59.253" level="INFO">${RESULT} = [{'time': 0.038083292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.735999999995303e-06, 'source_diff': 8.735999999995303e-06}, {'time': 0.038098347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:59.243" endtime="20201112 12:42:59.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:59.284" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:59.255" endtime="20201112 12:42:59.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.294" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:59.292" endtime="20201112 12:42:59.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.300" level="INFO">VALUE: [8.735999999995303e-06, 8.749999999994873e-06, 9.124999999998717e-06, 9.055000000000868e-06, 9.402999999998107e-06, 9.583999999999981e-06, 9.235999999995803e-06, 9.236000000002742e-06, 9.374999999998967e-06, 9.568999999993999e-06, 9.570000000000412e-06, 9.222000000003172e-06, 9.388999999998537e-06, 9.556000000000842e-06, 8.889000000004976e-06, 9.014000000001632e-06, 9.333999999999731e-06, 9.583000000000508e-06, 9.388999999998537e-06, 8.666000000004392e-06, 9.402999999998107e-06, 8.722000000002672e-06, 9.236000000002742e-06, 9.555000000001368e-06, 9.736000000003242e-06, 8.749999999994873e-06, 8.860999999998898e-06, 9.277000000001978e-06, 9.429999999997773e-06, 8.903000000004546e-06, 8.750000000001812e-06, 9.221999999996233e-06, 9.222000000003172e-06, 9.250000000002312e-06, 8.902999999997607e-06, 8.721999999995733e-06, 9.264000000001882e-06, 9.096999999999578e-06, 9.568999999993999e-06, 8.901999999998134e-06, 9.083000000000008e-06, 8.929999999997273e-06, 9.236000000002742e-06, 9.569000000000938e-06, 8.930000000004212e-06, 8.860999999998898e-06, 9.569000000000938e-06, 9.069000000000438e-06, 9.569000000000938e-06, 9.235999999995803e-06]</msg>
<status status="PASS" starttime="20201112 12:42:59.297" endtime="20201112 12:42:59.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.286" endtime="20201112 12:42:59.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.309" endtime="20201112 12:42:59.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:59.317" endtime="20201112 12:42:59.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.313" endtime="20201112 12:42:59.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.304" endtime="20201112 12:42:59.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.789" endtime="20201112 12:42:59.343"></status>
</kw>
<msg timestamp="20201112 12:42:59.344" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.365" endtime="20201112 12:42:59.379"></status>
</kw>
<msg timestamp="20201112 12:42:59.380" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.361" endtime="20201112 12:42:59.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.386" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.382" endtime="20201112 12:42:59.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.389" endtime="20201112 12:42:59.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.354" endtime="20201112 12:42:59.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.348" endtime="20201112 12:42:59.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.414" endtime="20201112 12:42:59.765"></status>
</kw>
<msg timestamp="20201112 12:42:59.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038136722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038145458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.411" endtime="20201112 12:42:59.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038136722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038145458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.775" endtime="20201112 12:42:59.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.794" endtime="20201112 12:42:59.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.402" endtime="20201112 12:42:59.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.397" endtime="20201112 12:42:59.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:59.812" level="INFO">${RESULT} = [{'time': 0.038145458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.038159472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:59.803" endtime="20201112 12:42:59.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:59.843" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:59.814" endtime="20201112 12:42:59.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.853" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:59.851" endtime="20201112 12:42:59.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.859" level="INFO">VALUE: [8.736000000002242e-06, 8.722000000002672e-06, 9.570000000000412e-06, 9.570000000000412e-06, 9.597000000000078e-06, 8.902999999997607e-06, 9.597000000000078e-06, 9.235999999995803e-06, 9.069000000000438e-06, 8.792000000000522e-06, 8.915999999997704e-06, 9.401999999998634e-06, 8.750000000001812e-06, 8.902999999997607e-06, 9.083000000000008e-06, 9.499999999995623e-06, 9.583999999999981e-06, 9.068999999993499e-06, 9.597000000000078e-06, 9.610999999999648e-06, 9.237000000002216e-06, 9.555000000001368e-06, 9.236000000002742e-06, 9.570000000000412e-06, 8.902999999997607e-06, 9.402999999998107e-06, 9.388999999998537e-06, 9.152999999997857e-06, 8.764000000001382e-06, 9.056000000000342e-06, 8.957999999996413e-06, 8.902000000005073e-06, 9.402999999998107e-06, 9.221999999996233e-06, 9.415999999998204e-06, 9.750000000002812e-06, 9.250000000002312e-06, 9.360999999999398e-06, 9.069000000000438e-06, 9.403000000005046e-06, 9.250000000002312e-06, 9.237000000002216e-06, 9.069999999999911e-06, 9.319000000000688e-06, 9.237000000002216e-06, 9.652999999998357e-06, 8.901999999998134e-06, 9.236000000002742e-06, 9.264000000001882e-06, 9.264000000001882e-06]</msg>
<status status="PASS" starttime="20201112 12:42:59.856" endtime="20201112 12:42:59.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.845" endtime="20201112 12:42:59.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.868" endtime="20201112 12:42:59.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:59.876" endtime="20201112 12:42:59.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.872" endtime="20201112 12:42:59.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.863" endtime="20201112 12:42:59.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.345" endtime="20201112 12:42:59.903"></status>
</kw>
<msg timestamp="20201112 12:42:59.904" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.924" endtime="20201112 12:42:59.938"></status>
</kw>
<msg timestamp="20201112 12:42:59.939" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.920" endtime="20201112 12:42:59.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.945" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.941" endtime="20201112 12:42:59.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.948" endtime="20201112 12:42:59.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.913" endtime="20201112 12:42:59.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.908" endtime="20201112 12:42:59.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.971" endtime="20201112 12:43:00.324"></status>
</kw>
<msg timestamp="20201112 12:43:00.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037434292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037443403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.968" endtime="20201112 12:43:00.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037434292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037443403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.334" endtime="20201112 12:43:00.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.353" endtime="20201112 12:43:00.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.961" endtime="20201112 12:43:00.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.956" endtime="20201112 12:43:00.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:00.371" level="INFO">${RESULT} = [{'time': 0.037443403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.110999999999148e-06, 'source_diff': 9.110999999999148e-06}, {'time': 0.037459333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:00.362" endtime="20201112 12:43:00.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:43:00.404" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:00.373" endtime="20201112 12:43:00.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.415" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:43:00.412" endtime="20201112 12:43:00.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.420" level="INFO">VALUE: [9.110999999999148e-06, 9.249999999995373e-06, 8.750000000001812e-06, 8.902999999997607e-06, 9.249999999995373e-06, 9.624999999999218e-06, 9.583999999999981e-06, 9.249999999995373e-06, 9.056000000000342e-06, 9.429999999997773e-06, 8.722000000002672e-06, 8.721999999995733e-06, 8.901999999998134e-06, 9.417000000004616e-06, 9.264000000001882e-06, 9.583999999999981e-06, 9.056000000000342e-06, 9.069000000000438e-06, 9.583999999999981e-06, 9.416999999997677e-06, 8.902999999997607e-06, 9.236000000002742e-06, 9.222999999995707e-06, 9.236000000002742e-06, 9.236000000002742e-06, 8.764000000001382e-06, 9.583999999999981e-06, 9.624999999999218e-06, 8.749999999994873e-06, 8.749999999994873e-06, 9.236000000002742e-06, 9.402999999998107e-06, 9.237000000002216e-06, 9.221999999996233e-06, 8.750000000001812e-06, 9.471999999996483e-06, 9.402999999998107e-06, 8.916000000004642e-06, 9.236000000002742e-06, 9.083000000000008e-06, 9.249999999995373e-06, 8.902999999997607e-06, 9.221999999996233e-06, 8.750000000001812e-06, 9.235999999995803e-06, 9.430999999997247e-06, 8.735999999995303e-06, 9.124999999998717e-06, 9.402999999998107e-06, 9.570000000000412e-06]</msg>
<status status="PASS" starttime="20201112 12:43:00.417" endtime="20201112 12:43:00.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.406" endtime="20201112 12:43:00.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.430" endtime="20201112 12:43:00.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:00.439" endtime="20201112 12:43:00.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.434" endtime="20201112 12:43:00.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.425" endtime="20201112 12:43:00.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.905" endtime="20201112 12:43:00.464"></status>
</kw>
<msg timestamp="20201112 12:43:00.465" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.485" endtime="20201112 12:43:00.499"></status>
</kw>
<msg timestamp="20201112 12:43:00.501" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.482" endtime="20201112 12:43:00.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.507" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.503" endtime="20201112 12:43:00.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.509" endtime="20201112 12:43:00.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.474" endtime="20201112 12:43:00.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.470" endtime="20201112 12:43:00.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.533" endtime="20201112 12:43:00.885"></status>
</kw>
<msg timestamp="20201112 12:43:00.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037399736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037408972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.530" endtime="20201112 12:43:00.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037399736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037408972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.895" endtime="20201112 12:43:00.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.914" endtime="20201112 12:43:00.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.522" endtime="20201112 12:43:00.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.517" endtime="20201112 12:43:00.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:00.932" level="INFO">${RESULT} = [{'time': 0.037408972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.235999999995803e-06, 'source_diff': 9.235999999995803e-06}, {'time': 0.037427111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:00.923" endtime="20201112 12:43:00.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:43:00.965" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:00.934" endtime="20201112 12:43:00.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.975" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:43:00.973" endtime="20201112 12:43:00.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.981" level="INFO">VALUE: [9.235999999995803e-06, 8.916999999997177e-06, 9.250000000002312e-06, 8.930000000004212e-06, 9.416999999997677e-06, 9.541000000001798e-06, 8.916999999997177e-06, 8.749999999994873e-06, 9.569000000000938e-06, 9.277000000001978e-06, 8.917000000004116e-06, 9.249999999995373e-06, 9.583999999999981e-06, 9.306000000000592e-06, 9.402999999998107e-06, 9.236000000002742e-06, 9.083000000000008e-06, 9.346999999999828e-06, 8.943999999996843e-06, 9.083999999999481e-06, 9.402999999998107e-06, 8.889000000004976e-06, 9.416999999997677e-06, 9.415999999998204e-06, 9.417000000004616e-06, 8.860999999998898e-06, 9.402999999998107e-06, 8.901999999998134e-06, 9.083000000000008e-06, 9.069999999999911e-06, 9.222000000003172e-06, 9.583000000000508e-06, 9.624999999999218e-06, 9.415999999998204e-06, 9.610999999999648e-06, 9.235999999995803e-06, 9.069000000000438e-06, 8.915999999997704e-06, 9.235999999995803e-06, 9.583999999999981e-06, 8.76299999999497e-06, 9.499999999995623e-06, 9.583999999999981e-06, 9.749999999995873e-06, 8.930999999996747e-06, 8.929999999997273e-06, 8.735999999995303e-06, 8.736000000002242e-06, 9.237000000002216e-06, 8.735999999995303e-06]</msg>
<status status="PASS" starttime="20201112 12:43:00.977" endtime="20201112 12:43:00.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.967" endtime="20201112 12:43:00.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.990" endtime="20201112 12:43:00.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:00.999" endtime="20201112 12:43:01.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.994" endtime="20201112 12:43:01.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.986" endtime="20201112 12:43:01.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.466" endtime="20201112 12:43:01.025"></status>
</kw>
<msg timestamp="20201112 12:43:01.025" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.046" endtime="20201112 12:43:01.060"></status>
</kw>
<msg timestamp="20201112 12:43:01.061" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.042" endtime="20201112 12:43:01.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.067" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.063" endtime="20201112 12:43:01.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.070" endtime="20201112 12:43:01.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.035" endtime="20201112 12:43:01.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.030" endtime="20201112 12:43:01.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.093" endtime="20201112 12:43:01.465"></status>
</kw>
<msg timestamp="20201112 12:43:01.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037358889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037367625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.090" endtime="20201112 12:43:01.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037358889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037367625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.474" endtime="20201112 12:43:01.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.493" endtime="20201112 12:43:01.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.083" endtime="20201112 12:43:01.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.078" endtime="20201112 12:43:01.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:01.511" level="INFO">${RESULT} = [{'time': 0.037367625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.037382653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:01.502" endtime="20201112 12:43:01.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:43:01.544" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:01.513" endtime="20201112 12:43:01.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.554" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:43:01.552" endtime="20201112 12:43:01.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.560" level="INFO">VALUE: [8.736000000002242e-06, 9.570000000000412e-06, 8.958000000003352e-06, 9.223000000002646e-06, 8.902999999997607e-06, 9.388999999998537e-06, 8.860999999998898e-06, 9.069999999999911e-06, 9.569000000000938e-06, 8.792000000000522e-06, 9.527999999994763e-06, 9.417000000004616e-06, 8.929999999997273e-06, 9.139000000005226e-06, 9.401999999998634e-06, 9.249999999995373e-06, 8.778000000000952e-06, 9.055000000000868e-06, 9.264000000001882e-06, 9.583999999999981e-06, 9.069999999999911e-06, 9.415999999998204e-06, 9.583000000000508e-06, 9.236000000002742e-06, 9.597000000000078e-06, 9.583000000000508e-06, 9.556000000000842e-06, 8.750000000001812e-06, 9.402999999998107e-06, 9.249999999995373e-06, 9.01299999999522e-06, 8.750000000001812e-06, 9.195000000003506e-06, 9.250000000002312e-06, 9.583999999999981e-06, 9.083000000000008e-06, 9.069000000000438e-06, 9.582999999993569e-06, 9.735999999996303e-06, 8.902999999997607e-06, 8.902999999997607e-06, 9.083000000000008e-06, 8.902999999997607e-06, 9.402999999998107e-06, 9.555000000001368e-06, 9.402999999998107e-06, 9.416999999997677e-06, 9.249999999995373e-06, 9.069999999999911e-06, 9.374999999998967e-06]</msg>
<status status="PASS" starttime="20201112 12:43:01.556" endtime="20201112 12:43:01.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.546" endtime="20201112 12:43:01.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.569" endtime="20201112 12:43:01.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:01.578" endtime="20201112 12:43:01.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.573" endtime="20201112 12:43:01.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.565" endtime="20201112 12:43:01.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.027" endtime="20201112 12:43:01.604"></status>
</kw>
<msg timestamp="20201112 12:43:01.604" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.625" endtime="20201112 12:43:01.640"></status>
</kw>
<msg timestamp="20201112 12:43:01.641" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.621" endtime="20201112 12:43:01.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.647" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.643" endtime="20201112 12:43:01.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.650" endtime="20201112 12:43:01.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.614" endtime="20201112 12:43:01.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.609" endtime="20201112 12:43:01.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.673" endtime="20201112 12:43:02.037"></status>
</kw>
<msg timestamp="20201112 12:43:02.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037452431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037461833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.670" endtime="20201112 12:43:02.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037452431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037461833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.046" endtime="20201112 12:43:02.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.065" endtime="20201112 12:43:02.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.663" endtime="20201112 12:43:02.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.658" endtime="20201112 12:43:02.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:02.083" level="INFO">${RESULT} = [{'time': 0.037461833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.401999999998634e-06, 'source_diff': 9.401999999998634e-06}, {'time': 0.037475917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:02.074" endtime="20201112 12:43:02.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:43:02.116" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:02.085" endtime="20201112 12:43:02.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.126" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:43:02.124" endtime="20201112 12:43:02.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.132" level="INFO">VALUE: [9.401999999998634e-06, 9.570000000000412e-06, 9.055000000000868e-06, 8.903000000004546e-06, 8.931000000003686e-06, 9.415999999998204e-06, 9.624999999999218e-06, 9.388999999998537e-06, 8.916000000004642e-06, 9.500000000002562e-06, 9.569000000000938e-06, 9.083000000000008e-06, 9.458000000003852e-06, 9.415999999998204e-06, 9.237000000002216e-06, 9.499999999995623e-06, 9.069999999999911e-06, 9.069000000000438e-06, 8.957999999996413e-06, 9.208000000003602e-06, 9.556000000000842e-06, 9.570000000000412e-06, 9.277999999994513e-06, 8.958999999995887e-06, 9.569000000000938e-06, 9.236000000002742e-06, 9.236000000002742e-06, 8.903000000004546e-06, 9.583000000000508e-06, 9.08400000000642e-06, 9.403000000005046e-06, 9.083000000000008e-06, 9.403000000005046e-06, 9.236000000002742e-06, 8.930999999996747e-06, 8.750000000001812e-06, 9.237000000002216e-06, 9.610999999999648e-06, 8.902999999997607e-06, 9.249999999995373e-06, 8.721999999995733e-06, 8.750000000001812e-06, 9.624999999999218e-06, 9.388999999998537e-06, 9.069999999999911e-06, 8.749999999994873e-06, 8.889000000004976e-06, 9.569000000000938e-06, 9.235999999995803e-06, 9.402999999998107e-06]</msg>
<status status="PASS" starttime="20201112 12:43:02.129" endtime="20201112 12:43:02.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.118" endtime="20201112 12:43:02.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.141" endtime="20201112 12:43:02.144"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:02.150" endtime="20201112 12:43:02.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.145" endtime="20201112 12:43:02.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.137" endtime="20201112 12:43:02.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.606" endtime="20201112 12:43:02.176"></status>
</kw>
<msg timestamp="20201112 12:43:02.176" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.197" endtime="20201112 12:43:02.210"></status>
</kw>
<msg timestamp="20201112 12:43:02.211" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.193" endtime="20201112 12:43:02.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.218" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.214" endtime="20201112 12:43:02.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.220" endtime="20201112 12:43:02.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.186" endtime="20201112 12:43:02.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.181" endtime="20201112 12:43:02.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.244" endtime="20201112 12:43:02.579"></status>
</kw>
<msg timestamp="20201112 12:43:02.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038586181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038595583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.241" endtime="20201112 12:43:02.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038586181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038595583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.588" endtime="20201112 12:43:02.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.608" endtime="20201112 12:43:02.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.234" endtime="20201112 12:43:02.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.229" endtime="20201112 12:43:02.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:02.625" level="INFO">${RESULT} = [{'time': 0.038595583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402000000005573e-06, 'source_diff': 9.402000000005573e-06}, {'time': 0.038613681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:02.616" endtime="20201112 12:43:02.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:43:02.657" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:02.627" endtime="20201112 12:43:02.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.669" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:43:02.666" endtime="20201112 12:43:02.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.674" level="INFO">VALUE: [9.402000000005573e-06, 8.763999999994443e-06, 9.069000000000438e-06, 9.069999999999911e-06, 9.306000000000592e-06, 9.736000000003242e-06, 8.736000000002242e-06, 8.750000000001812e-06, 9.402999999998107e-06, 9.000000000002062e-06, 8.737000000001716e-06, 9.236999999995277e-06, 9.569000000000938e-06, 9.569999999993473e-06, 9.416999999997677e-06, 9.346999999999828e-06, 9.250000000002312e-06, 9.235999999995803e-06, 8.736000000002242e-06, 9.402999999998107e-06, 9.569000000000938e-06, 9.083999999999481e-06, 9.208000000003602e-06, 9.569000000000938e-06, 8.749999999994873e-06, 9.402999999998107e-06, 9.583999999999981e-06, 9.250000000002312e-06, 9.401999999998634e-06, 9.083999999999481e-06, 9.263999999994943e-06, 8.735999999995303e-06, 9.069999999999911e-06, 8.902999999997607e-06, 9.416999999997677e-06, 8.916000000004642e-06, 9.569000000000938e-06, 8.735999999995303e-06, 9.569000000000938e-06, 9.181000000003936e-06, 9.124999999998717e-06, 9.556000000000842e-06, 9.388000000006003e-06, 8.903000000004546e-06, 9.417000000004616e-06, 8.917000000004116e-06, 9.069000000000438e-06, 9.416999999997677e-06, 9.236000000002742e-06, 8.736000000002242e-06]</msg>
<status status="PASS" starttime="20201112 12:43:02.671" endtime="20201112 12:43:02.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.659" endtime="20201112 12:43:02.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.683" endtime="20201112 12:43:02.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:02.692" endtime="20201112 12:43:02.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.687" endtime="20201112 12:43:02.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.679" endtime="20201112 12:43:02.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.178" endtime="20201112 12:43:02.717"></status>
</kw>
<msg timestamp="20201112 12:43:02.717" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.737" endtime="20201112 12:43:02.749"></status>
</kw>
<msg timestamp="20201112 12:43:02.750" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.734" endtime="20201112 12:43:02.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.756" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.752" endtime="20201112 12:43:02.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.759" endtime="20201112 12:43:02.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.726" endtime="20201112 12:43:02.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.722" endtime="20201112 12:43:02.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.783" endtime="20201112 12:43:03.134"></status>
</kw>
<msg timestamp="20201112 12:43:03.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03620175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036211, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:43:02.780" endtime="20201112 12:43:03.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03620175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036211, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:43:03.144" endtime="20201112 12:43:03.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.163" endtime="20201112 12:43:03.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.772" endtime="20201112 12:43:03.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.767" endtime="20201112 12:43:03.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:03.181" level="INFO">${RESULT} = [{'time': 0.036211, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.036227083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:43:03.172" endtime="20201112 12:43:03.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:43:03.213" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:03.183" endtime="20201112 12:43:03.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.223" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:43:03.221" endtime="20201112 12:43:03.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.230" level="INFO">VALUE: [9.250000000002312e-06, 8.943999999996843e-06, 9.569000000000938e-06, 9.083000000000008e-06, 9.416999999997677e-06, 9.583999999999981e-06, 9.583000000000508e-06, 9.236000000002742e-06, 9.014000000001632e-06, 9.429999999997773e-06, 9.069000000000438e-06, 9.222000000003172e-06, 9.597000000000078e-06, 9.096999999999578e-06, 9.041000000001298e-06, 9.236000000002742e-06, 8.901999999998134e-06, 9.069999999999911e-06, 9.430000000004712e-06, 9.096999999999578e-06, 8.902999999997607e-06, 8.887999999998564e-06, 9.416999999997677e-06, 9.569999999993473e-06, 8.985999999995553e-06, 8.888999999998037e-06, 8.888999999998037e-06, 9.570000000000412e-06, 9.791999999994583e-06, 9.583999999999981e-06, 9.110999999999148e-06, 9.069000000000438e-06, 9.401999999998634e-06, 9.249999999995373e-06, 9.388999999998537e-06, 9.403000000005046e-06, 9.069999999999911e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.958999999995887e-06, 9.569000000000938e-06, 9.235999999995803e-06, 8.723000000002146e-06, 9.638999999998787e-06, 9.416999999997677e-06, 8.903000000004546e-06, 8.764000000001382e-06, 8.916999999997177e-06, 9.221999999996233e-06, 9.222000000003172e-06]</msg>
<status status="PASS" starttime="20201112 12:43:03.225" endtime="20201112 12:43:03.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.214" endtime="20201112 12:43:03.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.240" endtime="20201112 12:43:03.242"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:03.248" endtime="20201112 12:43:03.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.244" endtime="20201112 12:43:03.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.235" endtime="20201112 12:43:03.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.719" endtime="20201112 12:43:03.274"></status>
</kw>
<msg timestamp="20201112 12:43:03.275" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.295" endtime="20201112 12:43:03.309"></status>
</kw>
<msg timestamp="20201112 12:43:03.310" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.291" endtime="20201112 12:43:03.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.316" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.312" endtime="20201112 12:43:03.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.319" endtime="20201112 12:43:03.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.284" endtime="20201112 12:43:03.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.279" endtime="20201112 12:43:03.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.342" endtime="20201112 12:43:03.693"></status>
</kw>
<msg timestamp="20201112 12:43:03.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037476958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037486528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.339" endtime="20201112 12:43:03.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037476958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037486528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.702" endtime="20201112 12:43:03.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.721" endtime="20201112 12:43:03.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.332" endtime="20201112 12:43:03.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.327" endtime="20201112 12:43:03.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:03.739" level="INFO">${RESULT} = [{'time': 0.037486528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.037501583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:03.730" endtime="20201112 12:43:03.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:43:03.771" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:03.741" endtime="20201112 12:43:03.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.781" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:43:03.779" endtime="20201112 12:43:03.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.787" level="INFO">VALUE: [9.570000000000412e-06, 9.583000000000508e-06, 9.402999999998107e-06, 8.916999999997177e-06, 9.665999999998454e-06, 9.415999999998204e-06, 9.569000000000938e-06, 8.903000000004546e-06, 8.749999999994873e-06, 9.638999999998787e-06, 9.415999999998204e-06, 9.597000000000078e-06, 9.236000000002742e-06, 9.069000000000438e-06, 8.902999999997607e-06, 9.402999999998107e-06, 9.110999999999148e-06, 9.083000000000008e-06, 9.416999999997677e-06, 8.916999999997177e-06, 9.069999999999911e-06, 9.570000000000412e-06, 9.083000000000008e-06, 9.583000000000508e-06, 8.736000000002242e-06, 9.402999999998107e-06, 9.222000000003172e-06, 9.430999999997247e-06, 9.235999999995803e-06, 9.264000000001882e-06, 9.542000000001272e-06, 9.583000000000508e-06, 8.736000000002242e-06, 9.069000000000438e-06, 8.750000000001812e-06, 9.264000000001882e-06, 9.402999999998107e-06, 9.069000000000438e-06, 9.069000000000438e-06, 8.750000000001812e-06, 9.236000000002742e-06, 9.236000000002742e-06, 9.415999999998204e-06, 8.736000000002242e-06, 9.083999999999481e-06, 8.903000000004546e-06, 9.054999999993929e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.096999999999578e-06]</msg>
<status status="PASS" starttime="20201112 12:43:03.783" endtime="20201112 12:43:03.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.773" endtime="20201112 12:43:03.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.797" endtime="20201112 12:43:03.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:03.807" endtime="20201112 12:43:03.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.803" endtime="20201112 12:43:03.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.792" endtime="20201112 12:43:03.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.276" endtime="20201112 12:43:03.834"></status>
</kw>
<msg timestamp="20201112 12:43:03.834" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.854" endtime="20201112 12:43:03.868"></status>
</kw>
<msg timestamp="20201112 12:43:03.870" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.851" endtime="20201112 12:43:03.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.876" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.872" endtime="20201112 12:43:03.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.878" endtime="20201112 12:43:03.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.844" endtime="20201112 12:43:03.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.839" endtime="20201112 12:43:03.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.902" endtime="20201112 12:43:04.252"></status>
</kw>
<msg timestamp="20201112 12:43:04.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037567097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037575847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.899" endtime="20201112 12:43:04.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037567097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037575847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.262" endtime="20201112 12:43:04.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.281" endtime="20201112 12:43:04.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.891" endtime="20201112 12:43:04.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.886" endtime="20201112 12:43:04.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:04.298" level="INFO">${RESULT} = [{'time': 0.037575847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.037591944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:04.289" endtime="20201112 12:43:04.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:43:04.330" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:04.300" endtime="20201112 12:43:04.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.340" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:43:04.338" endtime="20201112 12:43:04.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.346" level="INFO">VALUE: [8.750000000001812e-06, 9.069000000000438e-06, 9.570000000000412e-06, 8.903000000004546e-06, 8.750000000001812e-06, 9.416999999997677e-06, 9.430000000004712e-06, 9.221999999996233e-06, 8.735999999995303e-06, 9.069999999999911e-06, 9.568999999993999e-06, 9.583000000000508e-06, 9.237000000002216e-06, 9.583000000000508e-06, 8.902999999997607e-06, 9.236000000002742e-06, 9.083000000000008e-06, 9.583999999999981e-06, 8.917000000004116e-06, 9.749999999995873e-06, 9.069000000000438e-06, 9.333000000000258e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.236000000002742e-06, 9.569000000000938e-06, 9.235999999995803e-06, 9.263000000002408e-06, 9.083000000000008e-06, 9.360999999999398e-06, 8.736000000002242e-06, 9.236000000002742e-06, 9.389000000005476e-06, 9.569000000000938e-06, 9.054999999993929e-06, 9.083999999999481e-06, 8.721999999995733e-06, 9.583000000000508e-06, 9.402999999998107e-06, 9.388999999998537e-06, 8.736000000002242e-06, 9.401999999998634e-06, 9.069000000000438e-06, 9.555000000001368e-06, 9.069000000000438e-06, 9.597000000000078e-06, 8.806000000000092e-06, 8.915999999997704e-06, 8.889000000004976e-06, 9.069999999999911e-06]</msg>
<status status="PASS" starttime="20201112 12:43:04.342" endtime="20201112 12:43:04.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.332" endtime="20201112 12:43:04.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.355" endtime="20201112 12:43:04.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:04.364" endtime="20201112 12:43:04.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.359" endtime="20201112 12:43:04.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.351" endtime="20201112 12:43:04.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.835" endtime="20201112 12:43:04.391"></status>
</kw>
<msg timestamp="20201112 12:43:04.392" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.412" endtime="20201112 12:43:04.426"></status>
</kw>
<msg timestamp="20201112 12:43:04.427" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.408" endtime="20201112 12:43:04.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.433" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.429" endtime="20201112 12:43:04.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.435" endtime="20201112 12:43:04.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.401" endtime="20201112 12:43:04.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.396" endtime="20201112 12:43:04.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.459" endtime="20201112 12:43:04.809"></status>
</kw>
<msg timestamp="20201112 12:43:04.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037493542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037502792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.456" endtime="20201112 12:43:04.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037493542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037502792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.819" endtime="20201112 12:43:04.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.838" endtime="20201112 12:43:04.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.448" endtime="20201112 12:43:04.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.444" endtime="20201112 12:43:04.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:04.857" level="INFO">${RESULT} = [{'time': 0.037502792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.037519833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:04.848" endtime="20201112 12:43:04.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:43:04.891" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:04.859" endtime="20201112 12:43:04.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.901" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:43:04.899" endtime="20201112 12:43:04.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.907" level="INFO">VALUE: [9.250000000002312e-06, 9.597000000000078e-06, 9.569000000000938e-06, 9.570000000000412e-06, 9.417000000004616e-06, 9.083999999999481e-06, 9.083000000000008e-06, 9.583999999999981e-06, 8.723000000002146e-06, 9.402000000005573e-06, 9.028000000001202e-06, 9.570000000000412e-06, 9.570000000000412e-06, 9.042000000000772e-06, 9.236000000002742e-06, 8.792000000000522e-06, 9.055000000000868e-06, 9.402999999998107e-06, 8.764000000001382e-06, 8.750000000001812e-06, 9.069000000000438e-06, 9.569000000000938e-06, 9.401999999998634e-06, 9.415999999998204e-06, 9.236000000002742e-06, 9.402999999998107e-06, 9.430999999997247e-06, 9.069000000000438e-06, 9.416999999997677e-06, 8.901999999998134e-06, 9.236000000002742e-06, 9.236000000002742e-06, 9.764000000002382e-06, 9.527000000002228e-06, 9.250000000002312e-06, 9.415999999998204e-06, 8.764000000001382e-06, 9.207999999996663e-06, 8.736000000002242e-06, 9.556000000000842e-06, 9.541000000001798e-06, 8.736000000002242e-06, 9.583999999999981e-06, 8.916999999997177e-06, 9.209000000003076e-06, 9.069000000000438e-06, 8.721999999995733e-06, 9.443999999997343e-06, 9.235999999995803e-06, 8.930999999996747e-06]</msg>
<status status="PASS" starttime="20201112 12:43:04.904" endtime="20201112 12:43:04.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.893" endtime="20201112 12:43:04.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.917" endtime="20201112 12:43:04.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:04.925" endtime="20201112 12:43:04.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.921" endtime="20201112 12:43:04.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.912" endtime="20201112 12:43:04.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.393" endtime="20201112 12:43:04.951"></status>
</kw>
<msg timestamp="20201112 12:43:04.951" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.973" endtime="20201112 12:43:04.987"></status>
</kw>
<msg timestamp="20201112 12:43:04.988" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.970" endtime="20201112 12:43:04.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.995" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.991" endtime="20201112 12:43:04.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.997" endtime="20201112 12:43:05.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.962" endtime="20201112 12:43:05.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.956" endtime="20201112 12:43:05.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.021" endtime="20201112 12:43:05.370"></status>
</kw>
<msg timestamp="20201112 12:43:05.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039049028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039057931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.018" endtime="20201112 12:43:05.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039049028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039057931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.379" endtime="20201112 12:43:05.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.398" endtime="20201112 12:43:05.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.010" endtime="20201112 12:43:05.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.006" endtime="20201112 12:43:05.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:05.416" level="INFO">${RESULT} = [{'time': 0.039057931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.039074958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:05.407" endtime="20201112 12:43:05.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:43:05.447" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:05.418" endtime="20201112 12:43:05.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.458" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:43:05.455" endtime="20201112 12:43:05.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.463" level="INFO">VALUE: [8.902999999997607e-06, 8.651999999997884e-06, 8.902999999997607e-06, 9.056000000000342e-06, 9.401999999998634e-06, 9.402999999998107e-06, 8.722000000002672e-06, 9.597000000000078e-06, 9.569000000000938e-06, 9.209000000003076e-06, 8.944000000003782e-06, 9.083999999999481e-06, 9.069000000000438e-06, 8.902000000005073e-06, 9.096999999999578e-06, 9.083999999999481e-06, 9.570000000000412e-06, 9.570000000000412e-06, 8.915999999997704e-06, 8.737000000001716e-06, 9.541000000001798e-06, 9.430000000004712e-06, 9.583000000000508e-06, 9.637999999999314e-06, 9.236000000002742e-06, 8.722000000002672e-06, 9.069000000000438e-06, 9.346999999999828e-06, 8.735999999995303e-06, 8.902000000005073e-06, 8.707999999996163e-06, 8.888999999998037e-06, 9.402999999998107e-06, 9.402999999998107e-06, 9.069999999999911e-06, 9.236000000002742e-06, 8.902999999997607e-06, 9.236000000002742e-06, 9.083000000000008e-06, 9.360999999999398e-06, 9.042000000000772e-06, 9.124999999998717e-06, 9.583000000000508e-06, 8.693999999996593e-06, 9.069999999999911e-06, 8.750000000001812e-06, 9.056000000000342e-06, 9.264000000001882e-06, 9.570000000000412e-06, 9.069000000000438e-06]</msg>
<status status="PASS" starttime="20201112 12:43:05.460" endtime="20201112 12:43:05.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.449" endtime="20201112 12:43:05.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.473" endtime="20201112 12:43:05.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:05.481" endtime="20201112 12:43:05.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.477" endtime="20201112 12:43:05.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.468" endtime="20201112 12:43:05.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.953" endtime="20201112 12:43:05.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.303" endtime="20201112 12:43:05.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:05.519" endtime="20201112 12:43:05.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.515" endtime="20201112 12:43:05.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.512" endtime="20201112 12:43:05.544"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:54.169" endtime="20201112 12:43:05.545" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:05.566" endtime="20201112 12:43:05.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.562" endtime="20201112 12:43:05.590"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.625" endtime="20201112 12:43:05.645"></status>
</kw>
<msg timestamp="20201112 12:43:05.646" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.622" endtime="20201112 12:43:05.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.653" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.648" endtime="20201112 12:43:05.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.659" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:43:05.655" endtime="20201112 12:43:05.660"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:05.614" endtime="20201112 12:43:05.662"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:05.608" endtime="20201112 12:43:05.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.605" endtime="20201112 12:43:05.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:43:05.672" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:43:05.671" endtime="20201112 12:43:05.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.666" endtime="20201112 12:43:05.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.603" endtime="20201112 12:43:05.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.601" endtime="20201112 12:43:05.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.676" endtime="20201112 12:43:05.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.595" endtime="20201112 12:43:05.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.591" endtime="20201112 12:43:05.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.559" endtime="20201112 12:43:05.683"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.707" endtime="20201112 12:43:05.733"></status>
</kw>
<msg timestamp="20201112 12:43:05.734" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.704" endtime="20201112 12:43:05.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.741" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.737" endtime="20201112 12:43:05.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.743" endtime="20201112 12:43:05.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.697" endtime="20201112 12:43:05.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.691" endtime="20201112 12:43:05.750"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.755" endtime="20201112 12:43:05.759"></status>
</kw>
<msg timestamp="20201112 12:43:05.760" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:43:05.752" endtime="20201112 12:43:05.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.771" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:43:05.768" endtime="20201112 12:43:05.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.775" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:43:05.773" endtime="20201112 12:43:05.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.762" endtime="20201112 12:43:05.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.789" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:43:05.785" endtime="20201112 12:43:05.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.794" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:43:05.792" endtime="20201112 12:43:05.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.779" endtime="20201112 12:43:05.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.813" endtime="20201112 12:43:06.185"></status>
</kw>
<msg timestamp="20201112 12:43:06.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134091819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134107208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.810" endtime="20201112 12:43:06.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134091819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134107208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.195" endtime="20201112 12:43:06.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.214" endtime="20201112 12:43:06.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.803" endtime="20201112 12:43:06.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.798" endtime="20201112 12:43:06.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:06.232" level="INFO">${RESULT} = [{'time': 0.134107208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5389000000004538e-05, 'source_diff': 1.5389000000004538e-05}, {'time': 0.134132181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:06.223" endtime="20201112 12:43:06.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:43:06.263" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:06.234" endtime="20201112 12:43:06.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.275" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 12:43:06.272" endtime="20201112 12:43:06.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.281" level="INFO">VALUE: [1.5389000000004538e-05, 1.47369999999869e-05, 1.5471999999988606e-05, 1.4957999999981597e-05, 1.561099999999871e-05, 1.540299999999717e-05, 1.556899999999306e-05, 1.4764000000000443e-05, 1.5277999999979697e-05, 1.5124999999976962e-05, 1.561099999999871e-05, 1.5375000000011907e-05, 1.543099999998243e-05, 1.561099999999871e-05, 1.4972000000001984e-05, 1.5791999999986706e-05, 1.5278000000007452e-05, 1.5444000000003344e-05, 1.4791000000013987e-05, 1.547200000001636e-05, 1.4944000000016722e-05, 1.527700000000798e-05, 1.4943999999988966e-05, 1.5111000000012087e-05, 1.5278000000007452e-05, 1.5111000000012087e-05, 1.4792000000013461e-05, 1.509800000001893e-05, 1.5263999999987066e-05, 1.488899999999016e-05, 1.4792000000013461e-05, 1.5263999999987066e-05, 1.477800000002083e-05, 1.4957999999981597e-05, 1.527700000000798e-05, 1.545899999999545e-05, 1.4971999999974228e-05, 1.5598000000005552e-05, 1.4958000000009353e-05, 1.4861000000004898e-05, 1.4972000000001984e-05, 1.5292000000000083e-05, 1.5278000000007452e-05, 1.494499999998844e-05, 1.4791999999985705e-05, 1.5277999999979697e-05, 1.5292000000000083e-05, 1.5278000000007452e-05, 1.5111000000012087e-05, 1.4930999999995809e-05]</msg>
<status status="PASS" starttime="20201112 12:43:06.278" endtime="20201112 12:43:06.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.265" endtime="20201112 12:43:06.283"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.290" endtime="20201112 12:43:06.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:06.298" endtime="20201112 12:43:06.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.294" endtime="20201112 12:43:06.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.285" endtime="20201112 12:43:06.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.686" endtime="20201112 12:43:06.325"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:43:05.552" endtime="20201112 12:43:06.328" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:06.349" endtime="20201112 12:43:06.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.345" endtime="20201112 12:43:06.373"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.408" endtime="20201112 12:43:06.430"></status>
</kw>
<msg timestamp="20201112 12:43:06.431" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.405" endtime="20201112 12:43:06.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.437" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.433" endtime="20201112 12:43:06.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.444" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:43:06.440" endtime="20201112 12:43:06.445"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:06.397" endtime="20201112 12:43:06.446"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:06.389" endtime="20201112 12:43:06.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.387" endtime="20201112 12:43:06.449"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:43:06.457" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:43:06.455" endtime="20201112 12:43:06.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.451" endtime="20201112 12:43:06.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.385" endtime="20201112 12:43:06.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.383" endtime="20201112 12:43:06.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.460" endtime="20201112 12:43:06.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.379" endtime="20201112 12:43:06.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.374" endtime="20201112 12:43:06.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.342" endtime="20201112 12:43:06.468"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.493" endtime="20201112 12:43:06.594"></status>
</kw>
<msg timestamp="20201112 12:43:06.595" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.489" endtime="20201112 12:43:06.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.602" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.597" endtime="20201112 12:43:06.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.604" endtime="20201112 12:43:06.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.482" endtime="20201112 12:43:06.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.475" endtime="20201112 12:43:06.611"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.615" endtime="20201112 12:43:06.620"></status>
</kw>
<msg timestamp="20201112 12:43:06.621" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:43:06.613" endtime="20201112 12:43:06.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.631" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:43:06.629" endtime="20201112 12:43:06.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.636" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:43:06.634" endtime="20201112 12:43:06.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.623" endtime="20201112 12:43:06.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.648" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:43:06.646" endtime="20201112 12:43:06.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.653" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:43:06.650" endtime="20201112 12:43:06.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.640" endtime="20201112 12:43:06.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.674" endtime="20201112 12:43:07.048"></status>
</kw>
<msg timestamp="20201112 12:43:07.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136938653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136985736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.668" endtime="20201112 12:43:07.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136938653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136985736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.057" endtime="20201112 12:43:07.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.076" endtime="20201112 12:43:07.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.661" endtime="20201112 12:43:07.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.656" endtime="20201112 12:43:07.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:07.094" level="INFO">${RESULT} = [{'time': 0.136985736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.708300000000332e-05, 'source_diff': 4.708300000000332e-05}, {'time': 0.138491819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:07.084" endtime="20201112 12:43:07.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:43:07.125" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:07.096" endtime="20201112 12:43:07.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.137" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 12:43:07.135" endtime="20201112 12:43:07.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.143" level="INFO">VALUE: [4.708300000000332e-05, 4.6679999999993393e-05, 4.6333999999981224e-05, 4.698599999999886e-05, 4.679199999998995e-05, 4.6639000000014974e-05, 4.636099999999477e-05, 4.694399999999321e-05, 4.6791000000018235e-05, 4.697200000000623e-05, 4.699999999999149e-05, 4.663899999998722e-05, 4.701400000001188e-05, 4.6319000000016874e-05, 4.6931000000000056e-05, 4.694400000002097e-05, 4.6805999999982584e-05, 4.612499999998021e-05, 4.698599999999886e-05, 4.611099999998758e-05, 4.643000000001396e-05, 4.652800000001789e-05, 4.6667000000000236e-05, 4.681899999997574e-05, 4.683299999999613e-05, 4.65139999999975e-05, 4.6653000000007605e-05, 4.6819999999975215e-05, 4.633299999998175e-05, 4.6139000000000596e-05, 4.630599999999596e-05, 4.705599999998977e-05, 4.65139999999975e-05, 4.630599999999596e-05, 4.6167000000013614e-05, 4.684699999998876e-05, 4.702800000000451e-05, 4.665299999997985e-05, 4.7013999999984124e-05, 4.708300000000332e-05, 4.6389000000007785e-05, 4.665299999997985e-05, 4.6347000000002136e-05, 4.6167000000013614e-05, 4.6611000000001956e-05, 4.652799999999013e-05, 4.650000000000487e-05, 4.6653000000007605e-05, 4.6179999999979016e-05, 4.699999999999149e-05]</msg>
<status status="PASS" starttime="20201112 12:43:07.139" endtime="20201112 12:43:07.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.127" endtime="20201112 12:43:07.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.152" endtime="20201112 12:43:07.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:07.160" endtime="20201112 12:43:07.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.156" endtime="20201112 12:43:07.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.147" endtime="20201112 12:43:07.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.470" endtime="20201112 12:43:07.186"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:43:06.335" endtime="20201112 12:43:07.189" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:07.209" endtime="20201112 12:43:07.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.206" endtime="20201112 12:43:07.233"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.273" endtime="20201112 12:43:07.294"></status>
</kw>
<msg timestamp="20201112 12:43:07.295" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.266" endtime="20201112 12:43:07.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.302" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.297" endtime="20201112 12:43:07.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.308" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:43:07.304" endtime="20201112 12:43:07.309"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:07.258" endtime="20201112 12:43:07.311"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:07.252" endtime="20201112 12:43:07.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.249" endtime="20201112 12:43:07.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:43:07.321" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:43:07.320" endtime="20201112 12:43:07.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.315" endtime="20201112 12:43:07.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.247" endtime="20201112 12:43:07.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.245" endtime="20201112 12:43:07.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.325" endtime="20201112 12:43:07.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.240" endtime="20201112 12:43:07.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.235" endtime="20201112 12:43:07.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.203" endtime="20201112 12:43:07.333"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.357" endtime="20201112 12:43:07.622"></status>
</kw>
<msg timestamp="20201112 12:43:07.623" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.353" endtime="20201112 12:43:07.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.630" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.626" endtime="20201112 12:43:07.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.632" endtime="20201112 12:43:07.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.346" endtime="20201112 12:43:07.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.340" endtime="20201112 12:43:07.639"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.644" endtime="20201112 12:43:07.648"></status>
</kw>
<msg timestamp="20201112 12:43:07.650" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:43:07.641" endtime="20201112 12:43:07.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.660" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:43:07.658" endtime="20201112 12:43:07.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.664" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:43:07.662" endtime="20201112 12:43:07.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.651" endtime="20201112 12:43:07.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.676" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:43:07.674" endtime="20201112 12:43:07.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.681" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:43:07.679" endtime="20201112 12:43:07.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.668" endtime="20201112 12:43:07.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.700" endtime="20201112 12:43:08.058"></status>
</kw>
<msg timestamp="20201112 12:43:08.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143370583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143452931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.697" endtime="20201112 12:43:08.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143370583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143452931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.067" endtime="20201112 12:43:08.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.085" endtime="20201112 12:43:08.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.690" endtime="20201112 12:43:08.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.685" endtime="20201112 12:43:08.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:08.103" level="INFO">${RESULT} = [{'time': 0.143452931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.234800000000986e-05, 'source_diff': 8.234800000000986e-05}, {'time': 0.148291319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:08.094" endtime="20201112 12:43:08.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:43:08.137" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:08.106" endtime="20201112 12:43:08.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.148" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 12:43:08.146" endtime="20201112 12:43:08.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.154" level="INFO">VALUE: [8.234800000000986e-05, 8.165200000001538e-05, 8.148599999999173e-05, 8.17919999999972e-05, 8.150000000001212e-05, 8.150000000001212e-05, 8.127799999999019e-05, 8.194400000000046e-05, 8.152799999999738e-05, 8.163899999999447e-05, 8.097300000001195e-05, 8.198599999997835e-05, 8.13200000000236e-05, 8.130500000000374e-05, 8.095800000001985e-05, 8.165300000001485e-05, 8.177800000000457e-05, 8.130600000000321e-05, 8.113899999998009e-05, 8.113800000000837e-05, 8.183300000000338e-05, 8.163899999999447e-05, 8.184700000002376e-05, 8.148600000001949e-05, 8.097200000001248e-05, 8.127800000001795e-05, 8.144500000001331e-05, 8.095800000001985e-05, 8.148600000001949e-05, 8.179099999999773e-05, 8.099999999999774e-05, 8.111100000002258e-05, 8.116599999996588e-05, 8.133300000001675e-05, 8.183299999997562e-05, 8.168100000000011e-05, 8.174999999999155e-05, 8.130600000000321e-05, 8.098600000000511e-05, 8.130600000000321e-05, 8.180600000001759e-05, 8.098600000000511e-05, 8.134699999995387e-05, 8.166699999995197e-05, 8.099999999999774e-05, 8.113799999998061e-05, 8.097200000001248e-05, 8.133400000004398e-05, 8.130499999997598e-05, 8.095800000001985e-05]</msg>
<status status="PASS" starttime="20201112 12:43:08.151" endtime="20201112 12:43:08.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.139" endtime="20201112 12:43:08.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.163" endtime="20201112 12:43:08.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.171" endtime="20201112 12:43:08.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.167" endtime="20201112 12:43:08.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.158" endtime="20201112 12:43:08.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.335" endtime="20201112 12:43:08.197"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:43:07.196" endtime="20201112 12:43:08.200" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.221" endtime="20201112 12:43:08.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.217" endtime="20201112 12:43:08.245"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.278" endtime="20201112 12:43:08.298"></status>
</kw>
<msg timestamp="20201112 12:43:08.299" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.275" endtime="20201112 12:43:08.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.306" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.302" endtime="20201112 12:43:08.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.314" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:43:08.308" endtime="20201112 12:43:08.315"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:08.268" endtime="20201112 12:43:08.317"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:08.261" endtime="20201112 12:43:08.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.258" endtime="20201112 12:43:08.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:43:08.327" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:43:08.326" endtime="20201112 12:43:08.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.321" endtime="20201112 12:43:08.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.257" endtime="20201112 12:43:08.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.255" endtime="20201112 12:43:08.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.331" endtime="20201112 12:43:08.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.251" endtime="20201112 12:43:08.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.246" endtime="20201112 12:43:08.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.214" endtime="20201112 12:43:08.339"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.363" endtime="20201112 12:43:08.389"></status>
</kw>
<msg timestamp="20201112 12:43:08.390" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.360" endtime="20201112 12:43:08.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.397" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.393" endtime="20201112 12:43:08.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.399" endtime="20201112 12:43:08.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.352" endtime="20201112 12:43:08.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.346" endtime="20201112 12:43:08.406"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.411" endtime="20201112 12:43:08.415"></status>
</kw>
<msg timestamp="20201112 12:43:08.416" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:43:08.408" endtime="20201112 12:43:08.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.427" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:43:08.424" endtime="20201112 12:43:08.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.431" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:43:08.429" endtime="20201112 12:43:08.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.418" endtime="20201112 12:43:08.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.443" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:43:08.441" endtime="20201112 12:43:08.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.448" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:43:08.446" endtime="20201112 12:43:08.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.435" endtime="20201112 12:43:08.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.467" endtime="20201112 12:43:08.830"></status>
</kw>
<msg timestamp="20201112 12:43:08.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134192847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134194347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.464" endtime="20201112 12:43:08.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134192847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134194347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.840" endtime="20201112 12:43:08.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.859" endtime="20201112 12:43:08.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.457" endtime="20201112 12:43:08.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.452" endtime="20201112 12:43:08.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:08.878" level="INFO">${RESULT} = [{'time': 0.134194347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999876223e-06, 'source_diff': 1.4999999999876223e-06}, {'time': 0.134216792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:08.868" endtime="20201112 12:43:08.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:43:08.910" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:08.880" endtime="20201112 12:43:08.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.922" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 12:43:08.919" endtime="20201112 12:43:08.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.927" level="INFO">VALUE: [1.4999999999876223e-06, 1.4449999999888163e-06, 1.5700000000062886e-06, 1.514000000008009e-06, 1.5420000000210266e-06, 1.52800000000064e-06, 1.4999999999876223e-06, 1.4999999999876223e-06, 1.5139999999802534e-06, 1.5409999999937973e-06, 1.486000000022747e-06, 1.514000000008009e-06, 1.5409999999937973e-06, 1.500000000015378e-06, 1.4999999999876223e-06, 1.5139999999802534e-06, 1.4999999999876223e-06, 1.5270000000011663e-06, 1.5420000000210266e-06, 1.4720000000023603e-06, 1.569999999978533e-06, 1.4999999999876223e-06, 1.514000000008009e-06, 1.52800000000064e-06, 1.5409999999937973e-06, 1.514000000008009e-06, 1.500000000015378e-06, 1.4859999999949913e-06, 1.5130000000085353e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.582999999999446e-06, 1.555000000014184e-06, 1.4720000000023603e-06, 1.5139999999802534e-06, 1.4720000000023603e-06, 1.5270000000011663e-06, 1.5409999999937973e-06, 1.4999999999876223e-06, 1.5130000000085353e-06, 1.4859999999949913e-06, 1.500000000015378e-06, 1.4999999999876223e-06, 1.4999999999876223e-06, 1.5139999999802534e-06, 1.486999999994465e-06, 1.5139999999802534e-06, 1.514000000008009e-06, 1.4580000000097293e-06, 1.4720000000023603e-06]</msg>
<status status="PASS" starttime="20201112 12:43:08.924" endtime="20201112 12:43:08.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.912" endtime="20201112 12:43:08.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.936" endtime="20201112 12:43:08.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.945" endtime="20201112 12:43:08.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.941" endtime="20201112 12:43:08.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.932" endtime="20201112 12:43:08.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.341" endtime="20201112 12:43:08.971"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:43:08.207" endtime="20201112 12:43:08.974" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.995" endtime="20201112 12:43:09.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.992" endtime="20201112 12:43:09.019"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.052" endtime="20201112 12:43:09.069"></status>
</kw>
<msg timestamp="20201112 12:43:09.070" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.048" endtime="20201112 12:43:09.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.076" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.072" endtime="20201112 12:43:09.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.084" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:43:09.079" endtime="20201112 12:43:09.085"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:09.041" endtime="20201112 12:43:09.087"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:09.035" endtime="20201112 12:43:09.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.032" endtime="20201112 12:43:09.090"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:43:09.097" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:43:09.096" endtime="20201112 12:43:09.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.091" endtime="20201112 12:43:09.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.030" endtime="20201112 12:43:09.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.029" endtime="20201112 12:43:09.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.101" endtime="20201112 12:43:09.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.025" endtime="20201112 12:43:09.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.020" endtime="20201112 12:43:09.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.989" endtime="20201112 12:43:09.108"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.132" endtime="20201112 12:43:09.231"></status>
</kw>
<msg timestamp="20201112 12:43:09.232" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.129" endtime="20201112 12:43:09.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.238" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.234" endtime="20201112 12:43:09.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.241" endtime="20201112 12:43:09.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.121" endtime="20201112 12:43:09.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.115" endtime="20201112 12:43:09.248"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.252" endtime="20201112 12:43:09.257"></status>
</kw>
<msg timestamp="20201112 12:43:09.258" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:43:09.249" endtime="20201112 12:43:09.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.267" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:43:09.265" endtime="20201112 12:43:09.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.272" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:43:09.270" endtime="20201112 12:43:09.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.259" endtime="20201112 12:43:09.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.284" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:43:09.281" endtime="20201112 12:43:09.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.288" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:43:09.286" endtime="20201112 12:43:09.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.275" endtime="20201112 12:43:09.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.308" endtime="20201112 12:43:09.666"></status>
</kw>
<msg timestamp="20201112 12:43:09.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130260639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130273417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.305" endtime="20201112 12:43:09.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130260639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130273417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.676" endtime="20201112 12:43:09.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.694" endtime="20201112 12:43:09.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.296" endtime="20201112 12:43:09.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.292" endtime="20201112 12:43:09.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:09.712" level="INFO">${RESULT} = [{'time': 0.130273417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2777999999991074e-05, 'source_diff': 1.2777999999991074e-05}, {'time': 0.131786042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:09.703" endtime="20201112 12:43:09.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:43:09.744" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:09.714" endtime="20201112 12:43:09.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.755" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 12:43:09.753" endtime="20201112 12:43:09.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.760" level="INFO">VALUE: [1.2777999999991074e-05, 1.2777999999991074e-05, 1.269499999997925e-05, 1.2805000000004618e-05, 1.2777999999991074e-05, 1.2763999999998443e-05, 1.281899999999725e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.27769999999916e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.2790999999984232e-05, 1.2763999999998443e-05, 1.2790999999984232e-05, 1.2749999999978057e-05, 1.2791999999983705e-05, 1.2777999999991074e-05, 1.27769999999916e-05, 1.2791000000011987e-05, 1.2763999999998443e-05, 1.27769999999916e-05, 1.2763999999998443e-05, 1.2750000000005812e-05, 1.2806000000004092e-05, 1.2792000000011461e-05, 1.2763999999998443e-05, 1.2805000000004618e-05, 1.2777999999991074e-05, 1.281899999999725e-05, 1.277800000001883e-05, 1.2763999999998443e-05, 1.2777999999991074e-05, 1.2763999999998443e-05, 1.2763999999998443e-05, 1.27769999999916e-05, 1.2777999999991074e-05, 1.2750000000005812e-05, 1.277800000001883e-05, 1.2792000000011461e-05, 1.2777999999991074e-05, 1.2763999999998443e-05, 1.276299999999897e-05, 1.2791000000011987e-05, 1.2763999999998443e-05, 1.2694000000007533e-05, 1.27769999999916e-05, 1.2763999999998443e-05, 1.2791999999983705e-05]</msg>
<status status="PASS" starttime="20201112 12:43:09.757" endtime="20201112 12:43:09.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.745" endtime="20201112 12:43:09.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.769" endtime="20201112 12:43:09.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:09.777" endtime="20201112 12:43:09.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.773" endtime="20201112 12:43:09.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.764" endtime="20201112 12:43:09.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.111" endtime="20201112 12:43:09.803"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:43:08.981" endtime="20201112 12:43:09.806" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:09.829" endtime="20201112 12:43:09.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.825" endtime="20201112 12:43:09.852"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.885" endtime="20201112 12:43:09.908"></status>
</kw>
<msg timestamp="20201112 12:43:09.909" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.882" endtime="20201112 12:43:09.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.915" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.911" endtime="20201112 12:43:09.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.922" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:43:09.918" endtime="20201112 12:43:09.923"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:09.874" endtime="20201112 12:43:09.925"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:09.868" endtime="20201112 12:43:09.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.865" endtime="20201112 12:43:09.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:43:09.935" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:43:09.933" endtime="20201112 12:43:09.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.929" endtime="20201112 12:43:09.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.864" endtime="20201112 12:43:09.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.862" endtime="20201112 12:43:09.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.938" endtime="20201112 12:43:09.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.858" endtime="20201112 12:43:09.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.854" endtime="20201112 12:43:09.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.822" endtime="20201112 12:43:09.945"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.969" endtime="20201112 12:43:10.236"></status>
</kw>
<msg timestamp="20201112 12:43:10.237" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.966" endtime="20201112 12:43:10.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.243" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.239" endtime="20201112 12:43:10.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.245" endtime="20201112 12:43:10.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.959" endtime="20201112 12:43:10.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.953" endtime="20201112 12:43:10.252"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.256" endtime="20201112 12:43:10.261"></status>
</kw>
<msg timestamp="20201112 12:43:10.262" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:43:10.254" endtime="20201112 12:43:10.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.272" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:43:10.270" endtime="20201112 12:43:10.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.276" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:43:10.274" endtime="20201112 12:43:10.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.264" endtime="20201112 12:43:10.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.288" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:43:10.286" endtime="20201112 12:43:10.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.292" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:43:10.290" endtime="20201112 12:43:10.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.280" endtime="20201112 12:43:10.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.311" endtime="20201112 12:43:10.663"></status>
</kw>
<msg timestamp="20201112 12:43:10.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1370995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137123778, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:10.308" endtime="20201112 12:43:10.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.1370995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137123778, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:10.673" endtime="20201112 12:43:10.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.691" endtime="20201112 12:43:10.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.300" endtime="20201112 12:43:10.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.296" endtime="20201112 12:43:10.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:10.708" level="INFO">${RESULT} = [{'time': 0.137123778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4277999999988698e-05, 'source_diff': 2.4277999999988698e-05}, {'time': 0.141993431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:10.699" endtime="20201112 12:43:10.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:43:10.740" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:10.710" endtime="20201112 12:43:10.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.751" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 12:43:10.749" endtime="20201112 12:43:10.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.757" level="INFO">VALUE: [2.4277999999988698e-05, 2.4263999999996066e-05, 2.4263999999996066e-05, 2.424999999997568e-05, 2.4263999999996066e-05, 2.427700000001698e-05, 2.4180000000012525e-05, 2.4263999999996066e-05, 2.4263999999996066e-05, 2.419500000000463e-05, 2.4277999999988698e-05, 2.4276999999989224e-05, 2.4277999999988698e-05, 2.426300000002435e-05, 2.4263999999996066e-05, 2.4263999999996066e-05, 2.4263999999996066e-05, 2.4236000000010804e-05, 2.41939999999774e-05, 2.4236999999982523e-05, 2.4250000000003435e-05, 2.4278000000016453e-05, 2.4276999999989224e-05, 2.4277999999988698e-05, 2.429200000003684e-05, 2.4263999999996066e-05, 2.429199999998133e-05, 2.4264000000051578e-05, 2.427800000004421e-05, 2.4263999999996066e-05, 2.427800000004421e-05, 2.429200000003684e-05, 2.427700000001698e-05, 2.41939999999774e-05, 2.4263999999996066e-05, 2.4263999999996066e-05, 2.4250000000003435e-05, 2.4263999999996066e-05, 2.4250000000003435e-05, 2.4250000000003435e-05, 2.427700000001698e-05, 2.4250000000003435e-05, 2.4277999999988698e-05, 2.429100000000961e-05, 2.4250000000003435e-05, 2.4318999999994872e-05, 2.426300000002435e-05, 2.4222000000018173e-05, 2.427800000004421e-05, 2.4264000000051578e-05]</msg>
<status status="PASS" starttime="20201112 12:43:10.754" endtime="20201112 12:43:10.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.742" endtime="20201112 12:43:10.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.765" endtime="20201112 12:43:10.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:10.774" endtime="20201112 12:43:10.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.769" endtime="20201112 12:43:10.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.761" endtime="20201112 12:43:10.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.948" endtime="20201112 12:43:10.799"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:43:09.815" endtime="20201112 12:43:10.802" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:42:38.226" endtime="20201112 12:43:10.823"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.993" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:43:11.009" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:43:12.944" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:43:10.990" endtime="20201112 12:43:12.945"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.950" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:43:12.947" endtime="20201112 12:43:12.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.987" endtime="20201112 12:43:12.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:12.957" endtime="20201112 12:43:13.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.954" endtime="20201112 12:43:13.289"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.319" endtime="20201112 12:43:13.335"></status>
</kw>
<msg timestamp="20201112 12:43:13.336" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.316" endtime="20201112 12:43:13.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.342" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.338" endtime="20201112 12:43:13.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.349" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:43:13.345" endtime="20201112 12:43:13.350"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:13.310" endtime="20201112 12:43:13.352"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:13.304" endtime="20201112 12:43:13.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.301" endtime="20201112 12:43:13.354"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:43:13.362" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:43:13.360" endtime="20201112 12:43:13.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.356" endtime="20201112 12:43:13.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.299" endtime="20201112 12:43:13.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.297" endtime="20201112 12:43:13.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.365" endtime="20201112 12:43:13.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.294" endtime="20201112 12:43:13.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.372" endtime="20201112 12:43:13.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.290" endtime="20201112 12:43:13.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.984" endtime="20201112 12:43:13.378"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:13.395" endtime="20201112 12:43:13.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.391" endtime="20201112 12:43:13.418"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.451" endtime="20201112 12:43:13.467"></status>
</kw>
<msg timestamp="20201112 12:43:13.468" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.448" endtime="20201112 12:43:13.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.475" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.470" endtime="20201112 12:43:13.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.481" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:43:13.477" endtime="20201112 12:43:13.482"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:13.441" endtime="20201112 12:43:13.484"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:13.434" endtime="20201112 12:43:13.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.432" endtime="20201112 12:43:13.486"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:43:13.495" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:43:13.494" endtime="20201112 12:43:13.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.488" endtime="20201112 12:43:13.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.430" endtime="20201112 12:43:13.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.428" endtime="20201112 12:43:13.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.499" endtime="20201112 12:43:13.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.424" endtime="20201112 12:43:13.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.420" endtime="20201112 12:43:13.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.386" endtime="20201112 12:43:13.506"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.532" endtime="20201112 12:43:13.547"></status>
</kw>
<msg timestamp="20201112 12:43:13.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.529" endtime="20201112 12:43:13.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.551" endtime="20201112 12:43:13.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.558" endtime="20201112 12:43:13.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.521" endtime="20201112 12:43:13.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.515" endtime="20201112 12:43:13.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.583" endtime="20201112 12:43:13.942"></status>
</kw>
<msg timestamp="20201112 12:43:13.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128760375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128776431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.580" endtime="20201112 12:43:13.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128760375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128776431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.952" endtime="20201112 12:43:13.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.972" endtime="20201112 12:43:13.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.571" endtime="20201112 12:43:13.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.566" endtime="20201112 12:43:13.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:13.990" level="INFO">${RESULT} = [{'time': 0.128776431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6055999999986525e-05, 'source_diff': 1.6055999999986525e-05}, {'time': 0.128802458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:13.981" endtime="20201112 12:43:13.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:14.021" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:13.992" endtime="20201112 12:43:14.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.032" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 12:43:14.030" endtime="20201112 12:43:14.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.038" level="INFO">VALUE: [1.6055999999986525e-05, 1.5721999999995795e-05, 1.606900000000744e-05, 1.608300000000007e-05, 1.590299999998379e-05, 1.6556000000000903e-05, 1.5750000000008813e-05, 1.6054999999987052e-05, 1.5735999999988426e-05, 1.6389000000005538e-05, 1.587499999999853e-05, 1.6389000000005538e-05, 1.5903000000011547e-05, 1.6611999999999183e-05, 1.640299999999817e-05, 1.5708000000003164e-05, 1.6208000000017542e-05, 1.657000000002129e-05, 1.6237000000002277e-05, 1.5764000000001444e-05, 1.5887999999991687e-05, 1.5750000000008813e-05, 1.5903000000011547e-05, 1.6221999999982417e-05, 1.590299999998379e-05, 1.6278000000008452e-05, 1.5749999999981057e-05, 1.6070000000006912e-05, 1.5721999999995795e-05, 1.625000000002319e-05, 1.6054999999987052e-05, 1.6028000000001263e-05, 1.604099999999442e-05, 1.6583000000014447e-05, 1.6027999999973508e-05, 1.590299999998379e-05, 1.5708000000003164e-05, 1.572299999999527e-05, 1.6236000000002804e-05, 1.5721999999995795e-05, 1.573600000001618e-05, 1.6471999999989606e-05, 1.587499999999853e-05, 1.655500000000143e-05, 1.6598000000006552e-05, 1.6166000000011893e-05, 1.5916000000004704e-05, 1.6389000000005538e-05, 1.6070000000006912e-05, 1.6556000000000903e-05]</msg>
<status status="PASS" starttime="20201112 12:43:14.035" endtime="20201112 12:43:14.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.023" endtime="20201112 12:43:14.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.048" endtime="20201112 12:43:14.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:14.056" endtime="20201112 12:43:14.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.052" endtime="20201112 12:43:14.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.043" endtime="20201112 12:43:14.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.511" endtime="20201112 12:43:14.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.509" endtime="20201112 12:43:14.082"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.105" endtime="20201112 12:43:14.120"></status>
</kw>
<msg timestamp="20201112 12:43:14.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.102" endtime="20201112 12:43:14.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.123" endtime="20201112 12:43:14.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.132" endtime="20201112 12:43:14.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.095" endtime="20201112 12:43:14.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.089" endtime="20201112 12:43:14.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.157" endtime="20201112 12:43:14.512"></status>
</kw>
<msg timestamp="20201112 12:43:14.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040521042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040537472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.153" endtime="20201112 12:43:14.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040521042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040537472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.522" endtime="20201112 12:43:14.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.541" endtime="20201112 12:43:14.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.146" endtime="20201112 12:43:14.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.141" endtime="20201112 12:43:14.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:14.558" level="INFO">${RESULT} = [{'time': 0.040537472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6429999999997835e-05, 'source_diff': 1.6429999999997835e-05}, {'time': 0.040563528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:14.549" endtime="20201112 12:43:14.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:14.590" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:14.560" endtime="20201112 12:43:14.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.602" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 12:43:14.599" endtime="20201112 12:43:14.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.607" level="INFO">VALUE: [1.6429999999997835e-05, 1.6069999999999973e-05, 1.6221999999996295e-05, 1.655499999999449e-05, 1.5665999999997515e-05, 1.637499999999903e-05, 1.5889000000005038e-05, 1.586099999999896e-05, 1.637499999999903e-05, 1.5707999999996225e-05, 1.63889999999986e-05, 1.5735999999995365e-05, 1.60690000000005e-05, 1.608300000000007e-05, 1.6041999999993894e-05, 1.6486000000003054e-05, 1.6555999999993964e-05, 1.60690000000005e-05, 1.661099999999971e-05, 1.63889999999986e-05, 1.6209000000003138e-05, 1.5721999999995795e-05, 1.6222000000003234e-05, 1.6221999999996295e-05, 1.5723000000002207e-05, 1.6222000000003234e-05, 1.6097999999999113e-05, 1.6542000000001333e-05, 1.6223000000002707e-05, 1.640299999999817e-05, 1.63889999999986e-05, 1.58889999999981e-05, 1.6389000000005538e-05, 1.6221999999996295e-05, 1.5888000000005564e-05, 1.652700000000229e-05, 1.605500000000093e-05, 1.6221999999996295e-05, 1.6457999999996975e-05, 1.5778000000001013e-05, 1.662499999999928e-05, 1.6222000000003234e-05, 1.640299999999817e-05, 1.6389000000005538e-05, 1.659700000000014e-05, 1.6042000000000833e-05, 1.6208000000003664e-05, 1.5722000000002734e-05, 1.60690000000005e-05, 1.5903000000004608e-05]</msg>
<status status="PASS" starttime="20201112 12:43:14.604" endtime="20201112 12:43:14.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.591" endtime="20201112 12:43:14.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.616" endtime="20201112 12:43:14.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:14.625" endtime="20201112 12:43:14.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.620" endtime="20201112 12:43:14.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.612" endtime="20201112 12:43:14.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.084" endtime="20201112 12:43:14.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.083" endtime="20201112 12:43:14.650"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.673" endtime="20201112 12:43:14.687"></status>
</kw>
<msg timestamp="20201112 12:43:14.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.670" endtime="20201112 12:43:14.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.691" endtime="20201112 12:43:14.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.697" endtime="20201112 12:43:14.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.662" endtime="20201112 12:43:14.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.657" endtime="20201112 12:43:14.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.720" endtime="20201112 12:43:15.061"></status>
</kw>
<msg timestamp="20201112 12:43:15.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039856181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039872514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.716" endtime="20201112 12:43:15.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039856181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039872514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.071" endtime="20201112 12:43:15.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.090" endtime="20201112 12:43:15.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.709" endtime="20201112 12:43:15.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.705" endtime="20201112 12:43:15.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:15.109" level="INFO">${RESULT} = [{'time': 0.039872514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.633300000000032e-05, 'source_diff': 1.633300000000032e-05}, {'time': 0.039898639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:15.100" endtime="20201112 12:43:15.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:15.140" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:15.111" endtime="20201112 12:43:15.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.151" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 12:43:15.149" endtime="20201112 12:43:15.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.157" level="INFO">VALUE: [1.633300000000032e-05, 1.640299999999817e-05, 1.601300000000222e-05, 1.6569000000001e-05, 1.58889999999981e-05, 1.5722000000002734e-05, 1.587499999999853e-05, 1.5736000000002304e-05, 1.5887999999998625e-05, 1.63889999999986e-05, 1.5722000000002734e-05, 1.5819999999999723e-05, 1.6263999999995005e-05, 1.5723000000002207e-05, 1.6389000000005538e-05, 1.5889000000005038e-05, 1.6401999999998695e-05, 1.637499999999903e-05, 1.6042000000000833e-05, 1.6389000000005538e-05, 1.6042000000000833e-05, 1.6514000000002194e-05, 1.6569000000001e-05, 1.60690000000005e-05, 1.62089999999962e-05, 1.5750000000001874e-05, 1.637499999999903e-05, 1.5723000000002207e-05, 1.6443999999997405e-05, 1.587499999999853e-05, 1.655500000000143e-05, 1.604100000000136e-05, 1.605499999999399e-05, 1.6556000000000903e-05, 1.5708000000003164e-05, 1.586099999999896e-05, 1.602700000000179e-05, 1.6401999999998695e-05, 1.590299999999767e-05, 1.5901999999998195e-05, 1.604100000000136e-05, 1.5721999999995795e-05, 1.58889999999981e-05, 1.58889999999981e-05, 1.5707999999996225e-05, 1.640299999999817e-05, 1.605500000000093e-05, 1.6181000000003998e-05, 1.6541999999994395e-05, 1.6069999999999973e-05]</msg>
<status status="PASS" starttime="20201112 12:43:15.153" endtime="20201112 12:43:15.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.142" endtime="20201112 12:43:15.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.175" endtime="20201112 12:43:15.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:15.184" endtime="20201112 12:43:15.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.180" endtime="20201112 12:43:15.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.171" endtime="20201112 12:43:15.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.652" endtime="20201112 12:43:15.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.651" endtime="20201112 12:43:15.211"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.233" endtime="20201112 12:43:15.249"></status>
</kw>
<msg timestamp="20201112 12:43:15.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.230" endtime="20201112 12:43:15.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.253" endtime="20201112 12:43:15.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.259" endtime="20201112 12:43:15.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.223" endtime="20201112 12:43:15.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.217" endtime="20201112 12:43:15.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.282" endtime="20201112 12:43:15.633"></status>
</kw>
<msg timestamp="20201112 12:43:15.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040326958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040342833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.279" endtime="20201112 12:43:15.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040326958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040342833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.642" endtime="20201112 12:43:15.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.661" endtime="20201112 12:43:15.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.271" endtime="20201112 12:43:15.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.267" endtime="20201112 12:43:15.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:15.680" level="INFO">${RESULT} = [{'time': 0.040342833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.587499999999853e-05, 'source_diff': 1.587499999999853e-05}, {'time': 0.040367944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:15.671" endtime="20201112 12:43:15.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:15.710" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:15.682" endtime="20201112 12:43:15.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.721" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 12:43:15.719" endtime="20201112 12:43:15.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.726" level="INFO">VALUE: [1.587499999999853e-05, 1.655500000000143e-05, 1.634699999999989e-05, 1.63889999999986e-05, 1.6042000000000833e-05, 1.6542000000001333e-05, 1.5721999999995795e-05, 1.5681000000003498e-05, 1.63889999999986e-05, 1.640299999999817e-05, 1.63889999999986e-05, 1.6056000000000403e-05, 1.622299999999577e-05, 1.58889999999981e-05, 1.6056000000000403e-05, 1.644499999999688e-05, 1.590299999999767e-05, 1.590299999999767e-05, 1.63889999999986e-05, 1.5707999999996225e-05, 1.5722000000002734e-05, 1.5749999999994935e-05, 1.655500000000143e-05, 1.584699999999939e-05, 1.5722000000002734e-05, 1.5945000000003318e-05, 1.6208000000003664e-05, 1.5651999999997945e-05, 1.60690000000005e-05, 1.5736000000002304e-05, 1.5915999999997765e-05, 1.6569000000001e-05, 1.6556000000000903e-05, 1.5652000000004884e-05, 1.5653000000004358e-05, 1.655500000000143e-05, 1.63889999999986e-05, 1.58889999999981e-05, 1.6513999999995255e-05, 1.6041999999993894e-05, 1.6222000000003234e-05, 1.608300000000007e-05, 1.654100000000186e-05, 1.5709000000002638e-05, 1.6111000000006148e-05, 1.6389000000005538e-05, 1.58889999999981e-05, 1.6597999999999613e-05, 1.6223000000002707e-05, 1.6584000000000043e-05]</msg>
<status status="PASS" starttime="20201112 12:43:15.723" endtime="20201112 12:43:15.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.712" endtime="20201112 12:43:15.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.736" endtime="20201112 12:43:15.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:15.744" endtime="20201112 12:43:15.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.740" endtime="20201112 12:43:15.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.731" endtime="20201112 12:43:15.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.213" endtime="20201112 12:43:15.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.212" endtime="20201112 12:43:15.770"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.794" endtime="20201112 12:43:15.809"></status>
</kw>
<msg timestamp="20201112 12:43:15.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.789" endtime="20201112 12:43:15.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.812" endtime="20201112 12:43:15.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.818" endtime="20201112 12:43:15.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.782" endtime="20201112 12:43:15.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.777" endtime="20201112 12:43:15.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.841" endtime="20201112 12:43:16.178"></status>
</kw>
<msg timestamp="20201112 12:43:16.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041631056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041647097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.838" endtime="20201112 12:43:16.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041631056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041647097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.188" endtime="20201112 12:43:16.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.206" endtime="20201112 12:43:16.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.831" endtime="20201112 12:43:16.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.826" endtime="20201112 12:43:16.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:16.226" level="INFO">${RESULT} = [{'time': 0.041647097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.604100000000136e-05, 'source_diff': 1.604100000000136e-05}, {'time': 0.041670222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:16.217" endtime="20201112 12:43:16.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:16.256" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:16.228" endtime="20201112 12:43:16.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.267" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 12:43:16.265" endtime="20201112 12:43:16.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.273" level="INFO">VALUE: [1.604100000000136e-05, 1.6236000000002804e-05, 1.605500000000093e-05, 1.637499999999903e-05, 1.587499999999853e-05, 1.5889000000005038e-05, 1.5721999999995795e-05, 1.658300000000057e-05, 1.5875000000005468e-05, 1.6556000000000903e-05, 1.6222000000003234e-05, 1.5721999999995795e-05, 1.640299999999817e-05, 1.584699999999939e-05, 1.637499999999903e-05, 1.654100000000186e-05, 1.593099999999681e-05, 1.5889000000005038e-05, 1.6417000000004678e-05, 1.6194000000004094e-05, 1.5695000000003068e-05, 1.6221999999996295e-05, 1.6347999999999363e-05, 1.6570000000000473e-05, 1.60690000000005e-05, 1.637499999999903e-05, 1.5707999999996225e-05, 1.6556000000000903e-05, 1.58889999999981e-05, 1.6556000000000903e-05, 1.63889999999986e-05, 1.622299999999577e-05, 1.63889999999986e-05, 1.6221999999996295e-05, 1.5736000000002304e-05, 1.6137999999998875e-05, 1.640299999999817e-05, 1.587499999999853e-05, 1.58889999999981e-05, 1.62089999999962e-05, 1.5888000000005564e-05, 1.654099999999492e-05, 1.604100000000136e-05, 1.6222000000003234e-05, 1.6542000000001333e-05, 1.6209000000003138e-05, 1.6555999999993964e-05, 1.641699999999774e-05, 1.631899999999381e-05, 1.5875000000005468e-05]</msg>
<status status="PASS" starttime="20201112 12:43:16.270" endtime="20201112 12:43:16.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.258" endtime="20201112 12:43:16.276"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.282" endtime="20201112 12:43:16.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:16.290" endtime="20201112 12:43:16.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.286" endtime="20201112 12:43:16.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.278" endtime="20201112 12:43:16.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.772" endtime="20201112 12:43:16.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.771" endtime="20201112 12:43:16.316"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.339" endtime="20201112 12:43:16.353"></status>
</kw>
<msg timestamp="20201112 12:43:16.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.335" endtime="20201112 12:43:16.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.356" endtime="20201112 12:43:16.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.363" endtime="20201112 12:43:16.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.328" endtime="20201112 12:43:16.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.323" endtime="20201112 12:43:16.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.386" endtime="20201112 12:43:16.723"></status>
</kw>
<msg timestamp="20201112 12:43:16.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039820722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03983675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:16.383" endtime="20201112 12:43:16.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039820722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03983675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:16.732" endtime="20201112 12:43:16.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.751" endtime="20201112 12:43:16.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.376" endtime="20201112 12:43:16.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.371" endtime="20201112 12:43:16.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:16.770" level="INFO">${RESULT} = [{'time': 0.03983675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6027999999994325e-05, 'source_diff': 1.6027999999994325e-05}, {'time': 0.039858694, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:43:16.762" endtime="20201112 12:43:16.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:16.803" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:16.772" endtime="20201112 12:43:16.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.814" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 12:43:16.811" endtime="20201112 12:43:16.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.819" level="INFO">VALUE: [1.6027999999994325e-05, 1.587499999999853e-05, 1.605500000000093e-05, 1.5889000000005038e-05, 1.6235999999995865e-05, 1.5722000000002734e-05, 1.587499999999853e-05, 1.655500000000143e-05, 1.58889999999981e-05, 1.6542000000001333e-05, 1.655500000000143e-05, 1.640299999999817e-05, 1.58889999999981e-05, 1.62089999999962e-05, 1.634699999999989e-05, 1.5889000000005038e-05, 1.6208000000003664e-05, 1.572299999999527e-05, 1.6056000000000403e-05, 1.58889999999981e-05, 1.5973000000002457e-05, 1.6221999999996295e-05, 1.5707999999996225e-05, 1.58889999999981e-05, 1.63889999999986e-05, 1.5916000000004704e-05, 1.5972000000002984e-05, 1.5721999999995795e-05, 1.5887999999998625e-05, 1.655500000000143e-05, 1.608300000000007e-05, 1.5861000000005898e-05, 1.587499999999853e-05, 1.5722000000002734e-05, 1.6056000000000403e-05, 1.640299999999817e-05, 1.6389000000005538e-05, 1.5736000000002304e-05, 1.6235999999995865e-05, 1.58889999999981e-05, 1.6056000000000403e-05, 1.5737000000001777e-05, 1.5722000000002734e-05, 1.654099999999492e-05, 1.6570000000000473e-05, 1.6222000000003234e-05, 1.6221999999996295e-05, 1.5833999999999293e-05, 1.6263999999995005e-05, 1.6222000000003234e-05]</msg>
<status status="PASS" starttime="20201112 12:43:16.816" endtime="20201112 12:43:16.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.805" endtime="20201112 12:43:16.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.828" endtime="20201112 12:43:16.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:16.837" endtime="20201112 12:43:16.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.832" endtime="20201112 12:43:16.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.824" endtime="20201112 12:43:16.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.319" endtime="20201112 12:43:16.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.317" endtime="20201112 12:43:16.862"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.885" endtime="20201112 12:43:16.899"></status>
</kw>
<msg timestamp="20201112 12:43:16.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.881" endtime="20201112 12:43:16.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.902" endtime="20201112 12:43:16.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.908" endtime="20201112 12:43:16.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.874" endtime="20201112 12:43:16.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.869" endtime="20201112 12:43:16.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.932" endtime="20201112 12:43:17.270"></status>
</kw>
<msg timestamp="20201112 12:43:17.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039642847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039658556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.928" endtime="20201112 12:43:17.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039642847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039658556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.280" endtime="20201112 12:43:17.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.298" endtime="20201112 12:43:17.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.921" endtime="20201112 12:43:17.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.916" endtime="20201112 12:43:17.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:17.316" level="INFO">${RESULT} = [{'time': 0.039658556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.57089999999957e-05, 'source_diff': 1.57089999999957e-05}, {'time': 0.039686569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:17.307" endtime="20201112 12:43:17.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:17.347" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:17.318" endtime="20201112 12:43:17.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.358" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 12:43:17.356" endtime="20201112 12:43:17.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.363" level="INFO">VALUE: [1.57089999999957e-05, 1.6207999999996725e-05, 1.6056000000000403e-05, 1.590299999999767e-05, 1.605499999999399e-05, 1.5736000000002304e-05, 1.606899999999356e-05, 1.6207999999996725e-05, 1.6209000000003138e-05, 1.6042000000000833e-05, 1.584699999999939e-05, 1.5736000000002304e-05, 1.637499999999903e-05, 1.6570000000000473e-05, 1.6528000000001764e-05, 1.6042000000000833e-05, 1.618099999999706e-05, 1.6056000000000403e-05, 1.5749999999994935e-05, 1.6403000000005108e-05, 1.637499999999903e-05, 1.590299999999767e-05, 1.5889000000005038e-05, 1.6306000000000653e-05, 1.6028000000001263e-05, 1.655499999999449e-05, 1.5721999999995795e-05, 1.5721999999995795e-05, 1.6208000000003664e-05, 1.58889999999981e-05, 1.5694000000003594e-05, 1.655500000000143e-05, 1.5722000000002734e-05, 1.5709000000002638e-05, 1.58889999999981e-05, 1.6208000000003664e-05, 1.636099999999946e-05, 1.6236000000002804e-05, 1.6223000000002707e-05, 1.6083999999999543e-05, 1.5764000000001444e-05, 1.6208000000003664e-05, 1.655500000000143e-05, 1.655500000000143e-05, 1.6056000000000403e-05, 1.5708000000003164e-05, 1.633300000000032e-05, 1.57089999999957e-05, 1.6250000000002374e-05, 1.5708000000003164e-05]</msg>
<status status="PASS" starttime="20201112 12:43:17.360" endtime="20201112 12:43:17.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.349" endtime="20201112 12:43:17.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.373" endtime="20201112 12:43:17.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:17.381" endtime="20201112 12:43:17.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.376" endtime="20201112 12:43:17.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.368" endtime="20201112 12:43:17.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.864" endtime="20201112 12:43:17.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.863" endtime="20201112 12:43:17.407"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.429" endtime="20201112 12:43:17.445"></status>
</kw>
<msg timestamp="20201112 12:43:17.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.426" endtime="20201112 12:43:17.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.449" endtime="20201112 12:43:17.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.455" endtime="20201112 12:43:17.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.419" endtime="20201112 12:43:17.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.413" endtime="20201112 12:43:17.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.478" endtime="20201112 12:43:17.826"></status>
</kw>
<msg timestamp="20201112 12:43:17.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039682694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039705444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.475" endtime="20201112 12:43:17.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039682694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039705444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.835" endtime="20201112 12:43:17.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.855" endtime="20201112 12:43:17.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.468" endtime="20201112 12:43:17.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.463" endtime="20201112 12:43:17.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:17.873" level="INFO">${RESULT} = [{'time': 0.039705444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2750000000001935e-05, 'source_diff': 2.2750000000001935e-05}, {'time': 0.039736597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:17.864" endtime="20201112 12:43:17.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:17.904" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:17.875" endtime="20201112 12:43:17.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.915" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 12:43:17.913" endtime="20201112 12:43:17.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.921" level="INFO">VALUE: [2.2750000000001935e-05, 2.3415999999998327e-05, 2.2736000000002365e-05, 2.3249999999995496e-05, 2.340299999999823e-05, 2.343099999999737e-05, 2.3570000000000535e-05, 2.2764000000001505e-05, 2.3527999999994886e-05, 2.3250000000002435e-05, 2.269500000000313e-05, 2.3028000000001325e-05, 2.2707999999996287e-05, 2.3443999999997467e-05, 2.2735999999995427e-05, 2.3236000000002865e-05, 2.2901999999998257e-05, 2.2736000000002365e-05, 2.340299999999823e-05, 2.286099999999902e-05, 2.288899999999816e-05, 2.29169999999973e-05, 2.3568999999994122e-05, 2.3042000000000895e-05, 2.3111999999998745e-05, 2.3263999999995066e-05, 2.29169999999973e-05, 2.273700000000184e-05, 2.3499999999995747e-05, 2.3596999999993262e-05, 2.29169999999973e-05, 2.306900000000056e-05, 2.3097999999999175e-05, 2.269499999999619e-05, 2.29169999999973e-05, 2.3083999999999605e-05, 2.3083999999999605e-05, 2.291700000000424e-05, 2.291700000000424e-05, 2.269500000000313e-05, 2.338899999999866e-05, 2.3083999999999605e-05, 2.32369999999954e-05, 2.3457999999997037e-05, 2.341700000000474e-05, 2.2750000000001935e-05, 2.3235999999995927e-05, 2.3584000000000105e-05, 2.3415999999998327e-05, 2.2721999999995857e-05]</msg>
<status status="PASS" starttime="20201112 12:43:17.917" endtime="20201112 12:43:17.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.906" endtime="20201112 12:43:17.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.930" endtime="20201112 12:43:17.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:17.938" endtime="20201112 12:43:17.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.934" endtime="20201112 12:43:17.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.925" endtime="20201112 12:43:17.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.409" endtime="20201112 12:43:17.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.408" endtime="20201112 12:43:17.964"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.987" endtime="20201112 12:43:18.003"></status>
</kw>
<msg timestamp="20201112 12:43:18.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.983" endtime="20201112 12:43:18.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.007" endtime="20201112 12:43:18.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.013" endtime="20201112 12:43:18.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.976" endtime="20201112 12:43:18.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.971" endtime="20201112 12:43:18.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.036" endtime="20201112 12:43:18.386"></status>
</kw>
<msg timestamp="20201112 12:43:18.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0401515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040174583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:18.033" endtime="20201112 12:43:18.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0401515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040174583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:18.395" endtime="20201112 12:43:18.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.414" endtime="20201112 12:43:18.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.026" endtime="20201112 12:43:18.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.021" endtime="20201112 12:43:18.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:18.431" level="INFO">${RESULT} = [{'time': 0.040174583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.308300000000013e-05, 'source_diff': 2.308300000000013e-05}, {'time': 0.040202681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:18.422" endtime="20201112 12:43:18.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:18.462" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:18.433" endtime="20201112 12:43:18.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.473" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 12:43:18.471" endtime="20201112 12:43:18.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.478" level="INFO">VALUE: [2.308300000000013e-05, 2.290299999999773e-05, 2.343099999999737e-05, 2.305500000000099e-05, 2.3056000000000465e-05, 2.323700000000234e-05, 2.3056000000000465e-05, 2.3250000000002435e-05, 2.2764000000001505e-05, 2.3236000000002865e-05, 2.306900000000056e-05, 2.3570000000000535e-05, 2.3570000000000535e-05, 2.2735999999995427e-05, 2.308300000000013e-05, 2.2958000000003476e-05, 2.2750000000001935e-05, 2.2915999999997827e-05, 2.2750000000001935e-05, 2.3542000000001395e-05, 2.340299999999823e-05, 2.290299999999773e-05, 2.293099999999687e-05, 2.308300000000013e-05, 2.337499999999909e-05, 2.3250000000002435e-05, 2.3264000000002005e-05, 2.290299999999773e-05, 2.3570000000000535e-05, 2.315299999999798e-05, 2.2722000000002796e-05, 2.3472000000003546e-05, 2.340299999999823e-05, 2.3235999999995927e-05, 2.2707999999996287e-05, 2.290299999999773e-05, 2.3236000000002865e-05, 2.3097999999999175e-05, 2.3250000000002435e-05, 2.340300000000517e-05, 2.34169999999978e-05, 2.2819999999999785e-05, 2.306900000000056e-05, 2.344500000000388e-05, 2.294500000000338e-05, 2.2749999999994996e-05, 2.2916000000004766e-05, 2.3570000000000535e-05, 2.3584000000000105e-05, 2.2750000000001935e-05]</msg>
<status status="PASS" starttime="20201112 12:43:18.475" endtime="20201112 12:43:18.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.464" endtime="20201112 12:43:18.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.492" endtime="20201112 12:43:18.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:18.500" endtime="20201112 12:43:18.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.496" endtime="20201112 12:43:18.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.488" endtime="20201112 12:43:18.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.966" endtime="20201112 12:43:18.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.965" endtime="20201112 12:43:18.526"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.549" endtime="20201112 12:43:18.566"></status>
</kw>
<msg timestamp="20201112 12:43:18.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.546" endtime="20201112 12:43:18.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.569" endtime="20201112 12:43:18.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.575" endtime="20201112 12:43:18.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.539" endtime="20201112 12:43:18.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.533" endtime="20201112 12:43:18.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.599" endtime="20201112 12:43:18.948"></status>
</kw>
<msg timestamp="20201112 12:43:18.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040175431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040198514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.595" endtime="20201112 12:43:18.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040175431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040198514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.957" endtime="20201112 12:43:18.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.976" endtime="20201112 12:43:18.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.588" endtime="20201112 12:43:18.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.583" endtime="20201112 12:43:18.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:18.993" level="INFO">${RESULT} = [{'time': 0.040198514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.308300000000013e-05, 'source_diff': 2.308300000000013e-05}, {'time': 0.040227556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:18.984" endtime="20201112 12:43:18.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:19.024" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:18.995" endtime="20201112 12:43:19.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.037" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 12:43:19.032" endtime="20201112 12:43:19.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.043" level="INFO">VALUE: [2.308300000000013e-05, 2.287499999999859e-05, 2.3250000000002435e-05, 2.3540999999994983e-05, 2.294499999999644e-05, 2.306900000000056e-05, 2.340299999999823e-05, 2.2750000000001935e-05, 2.3570000000000535e-05, 2.306900000000056e-05, 2.337499999999909e-05, 2.3236000000002865e-05, 2.305500000000099e-05, 2.306900000000056e-05, 2.358300000000063e-05, 2.270899999999576e-05, 2.284699999999945e-05, 2.337499999999909e-05, 2.3249999999995496e-05, 2.27369999999949e-05, 2.2901999999998257e-05, 2.306900000000056e-05, 2.338899999999866e-05, 2.3415999999998327e-05, 2.288899999999816e-05, 2.3556000000000965e-05, 2.293099999999687e-05, 2.3486000000003115e-05, 2.3568999999994122e-05, 2.356900000000106e-05, 2.305500000000099e-05, 2.2750000000001935e-05, 2.3083999999999605e-05, 2.352700000000235e-05, 2.3250000000002435e-05, 2.2736000000002365e-05, 2.3084000000006544e-05, 2.355500000000149e-05, 2.2915999999997827e-05, 2.340299999999823e-05, 2.3568999999994122e-05, 2.3486000000003115e-05, 2.284699999999945e-05, 2.29169999999973e-05, 2.3485999999996177e-05, 2.308300000000013e-05, 2.34169999999978e-05, 2.2736000000002365e-05, 2.340300000000517e-05, 2.3250000000002435e-05]</msg>
<status status="PASS" starttime="20201112 12:43:19.040" endtime="20201112 12:43:19.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.025" endtime="20201112 12:43:19.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.052" endtime="20201112 12:43:19.055"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:19.061" endtime="20201112 12:43:19.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.056" endtime="20201112 12:43:19.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.048" endtime="20201112 12:43:19.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.529" endtime="20201112 12:43:19.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.528" endtime="20201112 12:43:19.087"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.109" endtime="20201112 12:43:19.126"></status>
</kw>
<msg timestamp="20201112 12:43:19.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.106" endtime="20201112 12:43:19.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.129" endtime="20201112 12:43:19.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.135" endtime="20201112 12:43:19.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.099" endtime="20201112 12:43:19.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.093" endtime="20201112 12:43:19.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.158" endtime="20201112 12:43:19.509"></status>
</kw>
<msg timestamp="20201112 12:43:19.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040185778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040209208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.155" endtime="20201112 12:43:19.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040185778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040209208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.518" endtime="20201112 12:43:19.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.537" endtime="20201112 12:43:19.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.148" endtime="20201112 12:43:19.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.143" endtime="20201112 12:43:19.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:19.554" level="INFO">${RESULT} = [{'time': 0.040209208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3430000000004836e-05, 'source_diff': 2.3430000000004836e-05}, {'time': 0.040243292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:19.545" endtime="20201112 12:43:19.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:19.585" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:19.556" endtime="20201112 12:43:19.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.596" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 12:43:19.593" endtime="20201112 12:43:19.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.601" level="INFO">VALUE: [2.3430000000004836e-05, 2.322300000000277e-05, 2.2736000000002365e-05, 2.358300000000063e-05, 2.284699999999945e-05, 2.340299999999823e-05, 2.273700000000184e-05, 2.306900000000056e-05, 2.308300000000013e-05, 2.295900000000295e-05, 2.29169999999973e-05, 2.3250000000002435e-05, 2.2916000000004766e-05, 2.2736000000002365e-05, 2.3528000000001825e-05, 2.306900000000056e-05, 2.283299999999988e-05, 2.293100000000381e-05, 2.355500000000149e-05, 2.358300000000063e-05, 2.3570000000000535e-05, 2.28890000000051e-05, 2.2736000000002365e-05, 2.273700000000184e-05, 2.2721999999995857e-05, 2.340299999999823e-05, 2.312500000000578e-05, 2.3250000000002435e-05, 2.3250000000002435e-05, 2.326300000000253e-05, 2.3430000000004836e-05, 2.340299999999823e-05, 2.358300000000063e-05, 2.2750000000001935e-05, 2.28890000000051e-05, 2.3207999999996787e-05, 2.290299999999773e-05, 2.2750000000001935e-05, 2.3250000000002435e-05, 2.308300000000013e-05, 2.269499999999619e-05, 2.361099999999977e-05, 2.3596999999993262e-05, 2.358300000000063e-05, 2.2736000000002365e-05, 2.3568999999994122e-05, 2.3542000000001395e-05, 2.290299999999773e-05, 2.340299999999823e-05, 2.29169999999973e-05]</msg>
<status status="PASS" starttime="20201112 12:43:19.598" endtime="20201112 12:43:19.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.587" endtime="20201112 12:43:19.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.611" endtime="20201112 12:43:19.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:19.620" endtime="20201112 12:43:19.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.614" endtime="20201112 12:43:19.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.606" endtime="20201112 12:43:19.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.089" endtime="20201112 12:43:19.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.088" endtime="20201112 12:43:19.646"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.669" endtime="20201112 12:43:19.686"></status>
</kw>
<msg timestamp="20201112 12:43:19.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.665" endtime="20201112 12:43:19.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.689" endtime="20201112 12:43:19.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.695" endtime="20201112 12:43:19.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.658" endtime="20201112 12:43:19.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.653" endtime="20201112 12:43:19.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.718" endtime="20201112 12:43:20.068"></status>
</kw>
<msg timestamp="20201112 12:43:20.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040284361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040307431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.715" endtime="20201112 12:43:20.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040284361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040307431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.077" endtime="20201112 12:43:20.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.096" endtime="20201112 12:43:20.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.708" endtime="20201112 12:43:20.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.703" endtime="20201112 12:43:20.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:20.113" level="INFO">${RESULT} = [{'time': 0.040307431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3070000000000035e-05, 'source_diff': 2.3070000000000035e-05}, {'time': 0.040340458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:20.104" endtime="20201112 12:43:20.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:20.143" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:20.115" endtime="20201112 12:43:20.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.154" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 12:43:20.152" endtime="20201112 12:43:20.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.159" level="INFO">VALUE: [2.3070000000000035e-05, 2.3430000000004836e-05, 2.340299999999823e-05, 2.308300000000013e-05, 2.3068999999993622e-05, 2.291700000000424e-05, 2.3236000000002865e-05, 2.2736000000002365e-05, 2.30969999999997e-05, 2.290299999999773e-05, 2.3541999999994456e-05, 2.3263999999995066e-05, 2.308300000000013e-05, 2.3597999999999675e-05, 2.2735999999995427e-05, 2.3485999999996177e-05, 2.2901999999998257e-05, 2.291700000000424e-05, 2.3278000000001575e-05, 2.305500000000099e-05, 2.323700000000234e-05, 2.272299999999533e-05, 2.291700000000424e-05, 2.35970000000002e-05, 2.29169999999973e-05, 2.306900000000056e-05, 2.3083999999999605e-05, 2.361099999999977e-05, 2.340299999999823e-05, 2.2749999999994996e-05, 2.2749999999994996e-05, 2.337499999999909e-05, 2.308300000000013e-05, 2.3083999999999605e-05, 2.288899999999816e-05, 2.340299999999823e-05, 2.343099999999737e-05, 2.3250000000002435e-05, 2.356900000000106e-05, 2.2929999999997397e-05, 2.272300000000227e-05, 2.34169999999978e-05, 2.3499999999995747e-05, 2.311099999999927e-05, 2.341700000000474e-05, 2.3597999999999675e-05, 2.2666000000004516e-05, 2.3415999999998327e-05, 2.2750000000001935e-05, 2.291700000000424e-05]</msg>
<status status="PASS" starttime="20201112 12:43:20.156" endtime="20201112 12:43:20.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.145" endtime="20201112 12:43:20.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.169" endtime="20201112 12:43:20.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:20.177" endtime="20201112 12:43:20.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.173" endtime="20201112 12:43:20.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.164" endtime="20201112 12:43:20.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.648" endtime="20201112 12:43:20.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.647" endtime="20201112 12:43:20.204"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.227" endtime="20201112 12:43:20.243"></status>
</kw>
<msg timestamp="20201112 12:43:20.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.224" endtime="20201112 12:43:20.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.247" endtime="20201112 12:43:20.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.253" endtime="20201112 12:43:20.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.216" endtime="20201112 12:43:20.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.211" endtime="20201112 12:43:20.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.276" endtime="20201112 12:43:20.625"></status>
</kw>
<msg timestamp="20201112 12:43:20.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040274639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040297708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.273" endtime="20201112 12:43:20.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040274639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040297708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.635" endtime="20201112 12:43:20.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.653" endtime="20201112 12:43:20.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.266" endtime="20201112 12:43:20.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.261" endtime="20201112 12:43:20.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:20.670" level="INFO">${RESULT} = [{'time': 0.040297708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.306900000000056e-05, 'source_diff': 2.306900000000056e-05}, {'time': 0.04032675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:20.661" endtime="20201112 12:43:20.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:20.700" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:20.672" endtime="20201112 12:43:20.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.711" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 12:43:20.709" endtime="20201112 12:43:20.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.717" level="INFO">VALUE: [2.306900000000056e-05, 2.306900000000056e-05, 2.337500000000603e-05, 2.316700000000449e-05, 2.340299999999823e-05, 2.2736000000002365e-05, 2.3582999999993692e-05, 2.3250000000002435e-05, 2.2916000000004766e-05, 2.330500000000124e-05, 2.308300000000013e-05, 2.341700000000474e-05, 2.34169999999978e-05, 2.3221999999996357e-05, 2.34169999999978e-05, 2.2943999999996967e-05, 2.27369999999949e-05, 2.2749999999994996e-05, 2.343100000000431e-05, 2.29169999999973e-05, 2.2887999999998687e-05, 2.363899999999891e-05, 2.2708000000003226e-05, 2.308300000000013e-05, 2.291700000000424e-05, 2.35970000000002e-05, 2.3250000000002435e-05, 2.2750000000001935e-05, 2.280500000000074e-05, 2.290299999999773e-05, 2.27770000000016e-05, 2.2750000000001935e-05, 2.293100000000381e-05, 2.3250000000002435e-05, 2.2750000000001935e-05, 2.361099999999977e-05, 2.297299999999558e-05, 2.2916000000004766e-05, 2.320899999999626e-05, 2.290300000000467e-05, 2.291700000000424e-05, 2.3415999999998327e-05, 2.291700000000424e-05, 2.293100000000381e-05, 2.340299999999823e-05, 2.2736000000002365e-05, 2.308300000000013e-05, 2.306900000000056e-05, 2.293100000000381e-05, 2.3430000000004836e-05]</msg>
<status status="PASS" starttime="20201112 12:43:20.713" endtime="20201112 12:43:20.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.702" endtime="20201112 12:43:20.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.726" endtime="20201112 12:43:20.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:20.734" endtime="20201112 12:43:20.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.730" endtime="20201112 12:43:20.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.722" endtime="20201112 12:43:20.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.206" endtime="20201112 12:43:20.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.205" endtime="20201112 12:43:20.760"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.784" endtime="20201112 12:43:20.799"></status>
</kw>
<msg timestamp="20201112 12:43:20.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.781" endtime="20201112 12:43:20.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.802" endtime="20201112 12:43:20.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.809" endtime="20201112 12:43:20.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.774" endtime="20201112 12:43:20.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.766" endtime="20201112 12:43:20.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.832" endtime="20201112 12:43:21.167"></status>
</kw>
<msg timestamp="20201112 12:43:21.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041506944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041529708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.828" endtime="20201112 12:43:21.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041506944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041529708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.176" endtime="20201112 12:43:21.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.195" endtime="20201112 12:43:21.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.821" endtime="20201112 12:43:21.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.817" endtime="20201112 12:43:21.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:21.212" level="INFO">${RESULT} = [{'time': 0.041529708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2764000000001505e-05, 'source_diff': 2.2764000000001505e-05}, {'time': 0.041562833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:21.203" endtime="20201112 12:43:21.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:21.242" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:21.214" endtime="20201112 12:43:21.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.253" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 12:43:21.251" endtime="20201112 12:43:21.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.258" level="INFO">VALUE: [2.2764000000001505e-05, 2.2915999999997827e-05, 2.3250000000002435e-05, 2.302700000000185e-05, 2.3236000000002865e-05, 2.340299999999823e-05, 2.358300000000063e-05, 2.3068999999993622e-05, 2.2749999999994996e-05, 2.3070000000000035e-05, 2.2750000000001935e-05, 2.3249999999995496e-05, 2.358300000000063e-05, 2.2750000000001935e-05, 2.3401999999998757e-05, 2.3250000000002435e-05, 2.341700000000474e-05, 2.3249999999995496e-05, 2.295899999999601e-05, 2.3430000000004836e-05, 2.3249999999995496e-05, 2.340299999999823e-05, 2.2750000000001935e-05, 2.3250000000002435e-05, 2.272299999999533e-05, 2.338899999999866e-05, 2.2750000000001935e-05, 2.2750000000001935e-05, 2.308300000000013e-05, 2.340299999999823e-05, 2.2915999999997827e-05, 2.3596999999993262e-05, 2.2916000000004766e-05, 2.2915999999997827e-05, 2.308300000000013e-05, 2.363899999999891e-05, 2.3070000000000035e-05, 2.293099999999687e-05, 2.3570000000000535e-05, 2.3264000000002005e-05, 2.356900000000106e-05, 2.358300000000063e-05, 2.34169999999978e-05, 2.3263999999995066e-05, 2.340299999999823e-05, 2.341700000000474e-05, 2.33890000000056e-05, 2.3264000000002005e-05, 2.29169999999973e-05, 2.3014000000001755e-05]</msg>
<status status="PASS" starttime="20201112 12:43:21.255" endtime="20201112 12:43:21.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.244" endtime="20201112 12:43:21.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.268" endtime="20201112 12:43:21.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:21.276" endtime="20201112 12:43:21.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.272" endtime="20201112 12:43:21.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.263" endtime="20201112 12:43:21.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.762" endtime="20201112 12:43:21.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.761" endtime="20201112 12:43:21.302"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.325" endtime="20201112 12:43:21.342"></status>
</kw>
<msg timestamp="20201112 12:43:21.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.321" endtime="20201112 12:43:21.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.345" endtime="20201112 12:43:21.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.351" endtime="20201112 12:43:21.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.314" endtime="20201112 12:43:21.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.309" endtime="20201112 12:43:21.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.375" endtime="20201112 12:43:21.712"></status>
</kw>
<msg timestamp="20201112 12:43:21.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040259389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040289819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.372" endtime="20201112 12:43:21.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040259389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040289819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.722" endtime="20201112 12:43:21.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.741" endtime="20201112 12:43:21.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.365" endtime="20201112 12:43:21.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.360" endtime="20201112 12:43:21.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:21.758" level="INFO">${RESULT} = [{'time': 0.040289819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.042999999999796e-05, 'source_diff': 3.042999999999796e-05}, {'time': 0.040326917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:21.749" endtime="20201112 12:43:21.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:21.788" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:21.760" endtime="20201112 12:43:21.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.799" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 12:43:21.797" endtime="20201112 12:43:21.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.805" level="INFO">VALUE: [3.042999999999796e-05, 3.0110999999999333e-05, 2.9972000000003107e-05, 3.0264000000002067e-05, 3.0111999999998806e-05, 2.9930999999996932e-05, 3.056900000000112e-05, 3.0444999999997002e-05, 3.04579999999971e-05, 3.05700000000006e-05, 3.052800000000189e-05, 2.9916999999997362e-05, 2.9930999999996932e-05, 3.0444000000004467e-05, 2.994399999999703e-05, 3.0096999999999763e-05, 3.044399999999753e-05, 3.0070000000000097e-05, 3.0194000000004217e-05, 2.990199999999832e-05, 2.9750000000001997e-05, 3.0305000000001303e-05, 3.0264000000002067e-05, 3.020799999999685e-05, 3.0292000000001207e-05, 3.0278000000001637e-05, 3.061099999999983e-05, 3.0208999999996322e-05, 3.0083999999999667e-05, 3.0597999999999737e-05, 3.061099999999983e-05, 3.044399999999753e-05, 3.015199999999857e-05, 3.058300000000069e-05, 3.0096999999999763e-05, 2.9778000000001137e-05, 2.9749999999995058e-05, 2.9764000000001567e-05, 3.037500000000609e-05, 3.0264000000002067e-05, 3.0388999999998723e-05, 3.0096999999999763e-05, 3.061099999999983e-05, 3.0249999999995558e-05, 3.0458999999996572e-05, 2.991599999999789e-05, 2.9750000000001997e-05, 3.061099999999983e-05, 3.0597999999999737e-05, 2.9944000000003967e-05]</msg>
<status status="PASS" starttime="20201112 12:43:21.802" endtime="20201112 12:43:21.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.790" endtime="20201112 12:43:21.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.814" endtime="20201112 12:43:21.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:21.822" endtime="20201112 12:43:21.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.818" endtime="20201112 12:43:21.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.810" endtime="20201112 12:43:21.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.304" endtime="20201112 12:43:21.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.303" endtime="20201112 12:43:21.848"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.871" endtime="20201112 12:43:21.886"></status>
</kw>
<msg timestamp="20201112 12:43:21.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.867" endtime="20201112 12:43:21.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.889" endtime="20201112 12:43:21.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.895" endtime="20201112 12:43:21.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.860" endtime="20201112 12:43:21.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.855" endtime="20201112 12:43:21.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.920" endtime="20201112 12:43:22.258"></status>
</kw>
<msg timestamp="20201112 12:43:22.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039958403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039988667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.917" endtime="20201112 12:43:22.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039958403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039988667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.268" endtime="20201112 12:43:22.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.286" endtime="20201112 12:43:22.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.908" endtime="20201112 12:43:22.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.904" endtime="20201112 12:43:22.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:22.304" level="INFO">${RESULT} = [{'time': 0.039988667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0263999999995128e-05, 'source_diff': 3.0263999999995128e-05}, {'time': 0.040024917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:22.295" endtime="20201112 12:43:22.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:22.334" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:22.306" endtime="20201112 12:43:22.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.345" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 12:43:22.343" endtime="20201112 12:43:22.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.351" level="INFO">VALUE: [3.0263999999995128e-05, 3.0597999999999737e-05, 3.044500000000394e-05, 3.042999999999796e-05, 2.9778000000001137e-05, 3.0110999999999333e-05, 3.0416999999997862e-05, 3.06249999999994e-05, 3.061099999999983e-05, 2.9764000000001567e-05, 3.0110999999999333e-05, 3.0416999999997862e-05, 3.0124999999998903e-05, 3.0056000000000527e-05, 2.9791000000001233e-05, 2.9930999999996932e-05, 2.9930999999996932e-05, 3.0083999999999667e-05, 2.9930999999996932e-05, 3.059700000000026e-05, 3.0278000000001637e-05, 3.0083000000000193e-05, 3.0096999999999763e-05, 3.0416000000005328e-05, 2.992999999999746e-05, 3.0097999999999236e-05, 2.9944999999996502e-05, 2.9832999999999943e-05, 2.9832999999999943e-05, 3.0111999999998806e-05, 2.994399999999703e-05, 3.0278000000001637e-05, 2.9764000000001567e-05, 3.0110999999999333e-05, 3.059700000000026e-05, 3.0208999999996322e-05, 2.9750000000001997e-05, 3.0097999999999236e-05, 3.0278000000001637e-05, 3.0458999999996572e-05, 3.044500000000394e-05, 3.06249999999994e-05, 3.0110999999999333e-05, 3.058300000000069e-05, 2.9778000000001137e-05, 3.040199999999882e-05, 3.0250000000002497e-05, 3.012500000000584e-05, 2.9750000000001997e-05, 3.0263999999995128e-05]</msg>
<status status="PASS" starttime="20201112 12:43:22.347" endtime="20201112 12:43:22.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.336" endtime="20201112 12:43:22.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.360" endtime="20201112 12:43:22.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:22.368" endtime="20201112 12:43:22.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.364" endtime="20201112 12:43:22.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.355" endtime="20201112 12:43:22.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.850" endtime="20201112 12:43:22.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.849" endtime="20201112 12:43:22.395"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.419" endtime="20201112 12:43:22.436"></status>
</kw>
<msg timestamp="20201112 12:43:22.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.415" endtime="20201112 12:43:22.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.440" endtime="20201112 12:43:22.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.446" endtime="20201112 12:43:22.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.408" endtime="20201112 12:43:22.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.402" endtime="20201112 12:43:22.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.469" endtime="20201112 12:43:22.820"></status>
</kw>
<msg timestamp="20201112 12:43:22.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042291569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042321875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.466" endtime="20201112 12:43:22.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042291569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042321875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.829" endtime="20201112 12:43:22.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.848" endtime="20201112 12:43:22.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.459" endtime="20201112 12:43:22.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.454" endtime="20201112 12:43:22.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:22.865" level="INFO">${RESULT} = [{'time': 0.042321875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0306000000000777e-05, 'source_diff': 3.0306000000000777e-05}, {'time': 0.042360069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:22.856" endtime="20201112 12:43:22.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:22.895" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:22.867" endtime="20201112 12:43:22.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.906" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 12:43:22.904" endtime="20201112 12:43:22.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.912" level="INFO">VALUE: [3.0306000000000777e-05, 3.0069000000000623e-05, 3.042999999999796e-05, 2.9763999999994628e-05, 2.9750000000001997e-05, 3.0013999999994878e-05, 2.9763999999994628e-05, 3.0416999999997862e-05, 3.0584000000000167e-05, 3.0277999999994698e-05, 3.0096999999999763e-05, 3.0499999999995808e-05, 2.9750000000001997e-05, 3.0137999999999e-05, 3.044500000000394e-05, 3.0292000000001207e-05, 2.99170000000043e-05, 2.9944000000003967e-05, 3.0430000000004898e-05, 3.0222000000003357e-05, 3.061099999999983e-05, 3.0096999999999763e-05, 2.9944999999996502e-05, 2.9805000000000803e-05, 2.9944999999996502e-05, 3.0097999999999236e-05, 2.9764000000001567e-05, 3.062500000000634e-05, 3.061099999999983e-05, 3.059700000000026e-05, 2.9972000000003107e-05, 2.9958999999996072e-05, 3.0096999999999763e-05, 2.9819999999999847e-05, 3.061099999999983e-05, 3.061099999999983e-05, 3.0083000000000193e-05, 3.047199999999667e-05, 3.0277000000002163e-05, 3.0278000000001637e-05, 2.9777000000001663e-05, 3.0458000000004037e-05, 2.99579999999966e-05, 2.994399999999703e-05, 3.0250000000002497e-05, 2.9778000000001137e-05, 2.993100000000387e-05, 2.9778000000001137e-05, 3.0138999999998473e-05, 2.994500000000344e-05]</msg>
<status status="PASS" starttime="20201112 12:43:22.909" endtime="20201112 12:43:22.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.897" endtime="20201112 12:43:22.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.921" endtime="20201112 12:43:22.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:22.929" endtime="20201112 12:43:22.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.925" endtime="20201112 12:43:22.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.917" endtime="20201112 12:43:22.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.397" endtime="20201112 12:43:22.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.396" endtime="20201112 12:43:22.955"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.978" endtime="20201112 12:43:22.993"></status>
</kw>
<msg timestamp="20201112 12:43:22.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.974" endtime="20201112 12:43:22.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.996" endtime="20201112 12:43:23.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.003" endtime="20201112 12:43:23.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.967" endtime="20201112 12:43:23.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.962" endtime="20201112 12:43:23.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.026" endtime="20201112 12:43:23.363"></status>
</kw>
<msg timestamp="20201112 12:43:23.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040066333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040096069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.023" endtime="20201112 12:43:23.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040066333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040096069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.372" endtime="20201112 12:43:23.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.391" endtime="20201112 12:43:23.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.016" endtime="20201112 12:43:23.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.011" endtime="20201112 12:43:23.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:23.408" level="INFO">${RESULT} = [{'time': 0.040096069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9735999999995488e-05, 'source_diff': 2.9735999999995488e-05}, {'time': 0.040134111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:23.399" endtime="20201112 12:43:23.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:23.438" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:23.410" endtime="20201112 12:43:23.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.450" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 12:43:23.447" endtime="20201112 12:43:23.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.456" level="INFO">VALUE: [2.9735999999995488e-05, 3.0333000000000443e-05, 3.048599999999624e-05, 3.0262999999995654e-05, 2.9944999999996502e-05, 2.990199999999832e-05, 3.059700000000026e-05, 3.059700000000026e-05, 2.9694000000003717e-05, 2.992999999999746e-05, 2.970799999999635e-05, 3.042999999999796e-05, 3.06249999999994e-05, 3.0416000000005328e-05, 3.0430999999997432e-05, 2.9916999999997362e-05, 3.0347000000000013e-05, 2.9750000000001997e-05, 3.0430999999997432e-05, 2.9764000000001567e-05, 3.042999999999796e-05, 3.056900000000112e-05, 3.0250000000002497e-05, 2.9736000000002427e-05, 3.0249999999995558e-05, 3.058300000000069e-05, 3.041599999999839e-05, 3.0041999999994018e-05, 3.041599999999839e-05, 2.9750000000001997e-05, 2.9736000000002427e-05, 3.015199999999857e-05, 3.0597999999999737e-05, 3.0472999999996142e-05, 3.0083000000000193e-05, 2.9763000000002093e-05, 3.040300000000523e-05, 3.0250000000002497e-05, 3.022199999999642e-05, 3.0249999999995558e-05, 3.058300000000069e-05, 2.9916999999997362e-05, 3.0083999999999667e-05, 3.019399999999728e-05, 3.0320000000000347e-05, 2.9846999999999513e-05, 3.063899999999897e-05, 3.043100000000437e-05, 2.991599999999789e-05, 2.9791000000001233e-05]</msg>
<status status="PASS" starttime="20201112 12:43:23.452" endtime="20201112 12:43:23.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.440" endtime="20201112 12:43:23.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.465" endtime="20201112 12:43:23.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:23.473" endtime="20201112 12:43:23.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.469" endtime="20201112 12:43:23.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.461" endtime="20201112 12:43:23.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.957" endtime="20201112 12:43:23.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.956" endtime="20201112 12:43:23.499"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.522" endtime="20201112 12:43:23.537"></status>
</kw>
<msg timestamp="20201112 12:43:23.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.519" endtime="20201112 12:43:23.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.541" endtime="20201112 12:43:23.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.547" endtime="20201112 12:43:23.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.511" endtime="20201112 12:43:23.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.506" endtime="20201112 12:43:23.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.570" endtime="20201112 12:43:23.906"></status>
</kw>
<msg timestamp="20201112 12:43:23.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040149069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040179347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.567" endtime="20201112 12:43:23.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040149069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040179347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.916" endtime="20201112 12:43:23.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.934" endtime="20201112 12:43:23.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.559" endtime="20201112 12:43:23.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.555" endtime="20201112 12:43:23.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:23.955" level="INFO">${RESULT} = [{'time': 0.040179347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0277999999994698e-05, 'source_diff': 3.0277999999994698e-05}, {'time': 0.040221528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:23.946" endtime="20201112 12:43:23.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:23.985" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:23.957" endtime="20201112 12:43:23.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.996" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 12:43:23.994" endtime="20201112 12:43:23.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.002" level="INFO">VALUE: [3.0277999999994698e-05, 3.061099999999983e-05, 3.0250000000002497e-05, 3.019500000000369e-05, 3.0472999999996142e-05, 2.9764000000001567e-05, 3.0472000000003607e-05, 3.0249999999995558e-05, 3.0277999999994698e-05, 2.9750000000001997e-05, 2.9778000000001137e-05, 3.042999999999796e-05, 2.9778000000001137e-05, 3.061099999999983e-05, 3.063899999999897e-05, 3.0320000000000347e-05, 3.066700000000505e-05, 3.0277000000002163e-05, 3.0110999999999333e-05, 3.0388999999998723e-05, 3.0277000000002163e-05, 3.042999999999796e-05, 3.0458000000004037e-05, 2.9958999999996072e-05, 3.0069000000000623e-05, 3.0249999999995558e-05, 2.9750000000001997e-05, 3.0277000000002163e-05, 3.0250000000002497e-05, 3.044500000000394e-05, 3.058300000000069e-05, 2.9958999999996072e-05, 3.0374999999999153e-05, 3.061099999999983e-05, 3.042999999999796e-05, 2.9930000000004398e-05, 2.9777999999994198e-05, 3.0486000000003177e-05, 2.9778000000001137e-05, 2.9791000000001233e-05, 3.0584000000000167e-05, 2.99170000000043e-05, 3.0249999999995558e-05, 3.0055000000001053e-05, 2.9762999999995154e-05, 2.9944000000003967e-05, 2.9930999999996932e-05, 3.04579999999971e-05, 3.0597999999999737e-05, 3.041599999999839e-05]</msg>
<status status="PASS" starttime="20201112 12:43:23.998" endtime="20201112 12:43:24.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.987" endtime="20201112 12:43:24.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.011" endtime="20201112 12:43:24.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:24.019" endtime="20201112 12:43:24.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.015" endtime="20201112 12:43:24.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.006" endtime="20201112 12:43:24.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.501" endtime="20201112 12:43:24.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.500" endtime="20201112 12:43:24.045"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.068" endtime="20201112 12:43:24.083"></status>
</kw>
<msg timestamp="20201112 12:43:24.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.064" endtime="20201112 12:43:24.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.086" endtime="20201112 12:43:24.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.093" endtime="20201112 12:43:24.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.057" endtime="20201112 12:43:24.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.052" endtime="20201112 12:43:24.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.116" endtime="20201112 12:43:24.452"></status>
</kw>
<msg timestamp="20201112 12:43:24.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040191514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040222111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.112" endtime="20201112 12:43:24.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040191514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040222111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.461" endtime="20201112 12:43:24.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.480" endtime="20201112 12:43:24.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.105" endtime="20201112 12:43:24.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.101" endtime="20201112 12:43:24.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:24.500" level="INFO">${RESULT} = [{'time': 0.040222111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.059700000000026e-05, 'source_diff': 3.059700000000026e-05}, {'time': 0.040261264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:24.491" endtime="20201112 12:43:24.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:24.530" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:24.502" endtime="20201112 12:43:24.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.541" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 12:43:24.538" endtime="20201112 12:43:24.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.546" level="INFO">VALUE: [3.059700000000026e-05, 2.9778000000001137e-05, 3.0097999999999236e-05, 3.0264000000002067e-05, 3.0597999999999737e-05, 3.0277999999994698e-05, 2.99579999999966e-05, 3.040199999999882e-05, 3.061099999999983e-05, 3.05700000000006e-05, 2.9791000000001233e-05, 2.9874999999998653e-05, 2.994500000000344e-05, 3.0597999999999737e-05, 3.0110999999999333e-05, 3.0263999999995128e-05, 2.9764000000001567e-05, 2.9764000000001567e-05, 3.042999999999796e-05, 2.9762999999995154e-05, 2.9749999999995058e-05, 3.04170000000048e-05, 2.9916999999997362e-05, 3.059700000000026e-05, 2.992999999999746e-05, 2.99579999999966e-05, 3.04170000000048e-05, 3.0138999999998473e-05, 3.0430999999997432e-05, 3.059700000000026e-05, 2.9778000000001137e-05, 3.0500000000002747e-05, 2.9749999999995058e-05, 3.05700000000006e-05, 3.042999999999796e-05, 3.0263999999995128e-05, 3.061099999999983e-05, 3.044399999999753e-05, 2.9916999999997362e-05, 2.99170000000043e-05, 3.0083000000000193e-05, 3.043100000000437e-05, 2.9749999999995058e-05, 2.9708000000003287e-05, 3.061099999999983e-05, 2.9750000000001997e-05, 3.042999999999796e-05, 2.9708000000003287e-05, 3.042999999999796e-05, 3.0096999999999763e-05]</msg>
<status status="PASS" starttime="20201112 12:43:24.543" endtime="20201112 12:43:24.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.532" endtime="20201112 12:43:24.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.556" endtime="20201112 12:43:24.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:24.564" endtime="20201112 12:43:24.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.560" endtime="20201112 12:43:24.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.551" endtime="20201112 12:43:24.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.047" endtime="20201112 12:43:24.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.046" endtime="20201112 12:43:24.590"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.612" endtime="20201112 12:43:24.628"></status>
</kw>
<msg timestamp="20201112 12:43:24.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.609" endtime="20201112 12:43:24.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.631" endtime="20201112 12:43:24.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.637" endtime="20201112 12:43:24.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.602" endtime="20201112 12:43:24.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.596" endtime="20201112 12:43:24.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.660" endtime="20201112 12:43:24.997"></status>
</kw>
<msg timestamp="20201112 12:43:25.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040122208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040152153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.657" endtime="20201112 12:43:25.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040122208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040152153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:25.006" endtime="20201112 12:43:25.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.025" endtime="20201112 12:43:25.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.650" endtime="20201112 12:43:25.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.645" endtime="20201112 12:43:25.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:25.044" level="INFO">${RESULT} = [{'time': 0.040152153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.994500000000344e-05, 'source_diff': 2.994500000000344e-05}, {'time': 0.040188208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:25.035" endtime="20201112 12:43:25.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:25.074" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:25.046" endtime="20201112 12:43:25.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.085" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 12:43:25.083" endtime="20201112 12:43:25.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.090" level="INFO">VALUE: [2.994500000000344e-05, 3.0430000000004898e-05, 3.0014000000001817e-05, 3.04579999999971e-05, 2.991599999999789e-05, 3.0444999999997002e-05, 3.0416999999997862e-05, 2.9944000000003967e-05, 3.0249999999995558e-05, 3.059700000000026e-05, 2.991599999999789e-05, 3.047300000000308e-05, 3.06249999999994e-05, 2.9930000000004398e-05, 3.0124999999998903e-05, 2.9792000000000707e-05, 2.99170000000043e-05, 3.0264000000002067e-05, 3.061099999999983e-05, 3.0264000000002067e-05, 3.0264000000002067e-05, 3.0263999999995128e-05, 2.9819999999999847e-05, 3.043100000000437e-05, 2.9778000000001137e-05, 3.061099999999983e-05, 2.9763999999994628e-05, 2.9749999999995058e-05, 2.9916999999997362e-05, 3.061099999999983e-05, 3.0083000000000193e-05, 2.969500000000319e-05, 3.044399999999753e-05, 3.04170000000048e-05, 3.061099999999983e-05, 2.994399999999703e-05, 3.0083000000000193e-05, 3.0291000000001733e-05, 3.0402999999998293e-05, 3.0444999999997002e-05, 3.0110999999999333e-05, 3.044399999999753e-05, 3.059700000000026e-05, 3.0083000000000193e-05, 2.9791000000001233e-05, 2.9694000000003717e-05, 3.061099999999983e-05, 2.9764000000001567e-05, 2.9764000000001567e-05, 3.023599999999599e-05]</msg>
<status status="PASS" starttime="20201112 12:43:25.087" endtime="20201112 12:43:25.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.076" endtime="20201112 12:43:25.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.100" endtime="20201112 12:43:25.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:25.108" endtime="20201112 12:43:25.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.103" endtime="20201112 12:43:25.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.095" endtime="20201112 12:43:25.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.592" endtime="20201112 12:43:25.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.591" endtime="20201112 12:43:25.134"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.156" endtime="20201112 12:43:25.172"></status>
</kw>
<msg timestamp="20201112 12:43:25.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.153" endtime="20201112 12:43:25.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.175" endtime="20201112 12:43:25.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.181" endtime="20201112 12:43:25.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.146" endtime="20201112 12:43:25.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.140" endtime="20201112 12:43:25.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.204" endtime="20201112 12:43:25.541"></status>
</kw>
<msg timestamp="20201112 12:43:25.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039808958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039845736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:25.201" endtime="20201112 12:43:25.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039808958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039845736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:25.550" endtime="20201112 12:43:25.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.569" endtime="20201112 12:43:25.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.194" endtime="20201112 12:43:25.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.189" endtime="20201112 12:43:25.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:25.588" level="INFO">${RESULT} = [{'time': 0.039845736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.67780000000012e-05, 'source_diff': 3.67780000000012e-05}, {'time': 0.03989275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:43:25.579" endtime="20201112 12:43:25.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:25.618" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:25.590" endtime="20201112 12:43:25.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.629" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 12:43:25.626" endtime="20201112 12:43:25.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.634" level="INFO">VALUE: [3.67780000000012e-05, 3.676399999999469e-05, 3.732000000000041e-05, 3.67780000000012e-05, 3.7110999999999394e-05, 3.747199999999673e-05, 3.674999999999512e-05, 3.7096999999999825e-05, 3.67780000000012e-05, 3.672199999999598e-05, 3.744400000000453e-05, 3.69580000000036e-05, 3.694400000000403e-05, 3.679200000000077e-05, 3.76250000000064e-05, 3.72780000000017e-05, 3.695799999999666e-05, 3.763900000000597e-05, 3.745900000000357e-05, 3.7124999999998964e-05, 3.7277000000002225e-05, 3.7360999999999644e-05, 3.7110999999999394e-05, 3.679200000000077e-05, 3.7012999999995466e-05, 3.698600000000274e-05, 3.67780000000012e-05, 3.747199999999673e-05, 3.67780000000012e-05, 3.6804999999993926e-05, 3.6930999999996994e-05, 3.67780000000012e-05, 3.67780000000012e-05, 3.7291000000001795e-05, 3.7638999999999034e-05, 3.71250000000059e-05, 3.7610999999999895e-05, 3.742999999999802e-05, 3.7110999999999394e-05, 3.695799999999666e-05, 3.6805000000000865e-05, 3.7277000000002225e-05, 3.730600000000084e-05, 3.7472999999996204e-05, 3.699999999999537e-05, 3.6805000000000865e-05, 3.6791000000001295e-05, 3.7652999999998604e-05, 3.7277000000002225e-05, 3.71250000000059e-05]</msg>
<status status="PASS" starttime="20201112 12:43:25.631" endtime="20201112 12:43:25.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.619" endtime="20201112 12:43:25.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.643" endtime="20201112 12:43:25.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:25.652" endtime="20201112 12:43:25.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.647" endtime="20201112 12:43:25.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.639" endtime="20201112 12:43:25.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.136" endtime="20201112 12:43:25.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.135" endtime="20201112 12:43:25.678"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.700" endtime="20201112 12:43:25.716"></status>
</kw>
<msg timestamp="20201112 12:43:25.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.697" endtime="20201112 12:43:25.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.719" endtime="20201112 12:43:25.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.725" endtime="20201112 12:43:25.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.690" endtime="20201112 12:43:25.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.684" endtime="20201112 12:43:25.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.748" endtime="20201112 12:43:26.085"></status>
</kw>
<msg timestamp="20201112 12:43:26.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0401915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040228611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:25.745" endtime="20201112 12:43:26.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0401915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040228611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:26.094" endtime="20201112 12:43:26.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.113" endtime="20201112 12:43:26.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.738" endtime="20201112 12:43:26.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.733" endtime="20201112 12:43:26.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:26.133" level="INFO">${RESULT} = [{'time': 0.040228611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7110999999999394e-05, 'source_diff': 3.7110999999999394e-05}, {'time': 0.040277639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:26.124" endtime="20201112 12:43:26.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:26.163" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:26.135" endtime="20201112 12:43:26.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.174" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 12:43:26.172" endtime="20201112 12:43:26.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.180" level="INFO">VALUE: [3.7110999999999394e-05, 3.7444999999997064e-05, 3.675000000000206e-05, 3.713900000000547e-05, 3.729200000000127e-05, 3.694399999999709e-05, 3.7110999999999394e-05, 3.708399999999973e-05, 3.7124999999998964e-05, 3.7638999999999034e-05, 3.7416999999997924e-05, 3.6763000000002155e-05, 3.7597000000000325e-05, 3.7624999999999464e-05, 3.6790999999994356e-05, 3.69580000000036e-05, 3.7610999999999895e-05, 3.6804999999993926e-05, 3.6790999999994356e-05, 3.7124999999998964e-05, 3.6805000000000865e-05, 3.691599999999795e-05, 3.7110999999999394e-05, 3.7610999999999895e-05, 3.7597000000000325e-05, 3.7610999999999895e-05, 3.7624999999999464e-05, 3.7610999999999895e-05, 3.7458999999996634e-05, 3.7430999999997494e-05, 3.695799999999666e-05, 3.765300000000554e-05, 3.729200000000127e-05, 3.694399999999709e-05, 3.747199999999673e-05, 3.7318999999993996e-05, 3.6762999999995216e-05, 3.679200000000077e-05, 3.693100000000393e-05, 3.677799999999426e-05, 3.725000000000256e-05, 3.7305000000001365e-05, 3.744400000000453e-05, 3.6791000000001295e-05, 3.7624999999999464e-05, 3.7624999999999464e-05, 3.69450000000035e-05, 3.67780000000012e-05, 3.69580000000036e-05, 3.7624999999999464e-05]</msg>
<status status="PASS" starttime="20201112 12:43:26.176" endtime="20201112 12:43:26.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.165" endtime="20201112 12:43:26.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.189" endtime="20201112 12:43:26.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:26.197" endtime="20201112 12:43:26.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.193" endtime="20201112 12:43:26.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.184" endtime="20201112 12:43:26.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.680" endtime="20201112 12:43:26.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.679" endtime="20201112 12:43:26.223"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.245" endtime="20201112 12:43:26.262"></status>
</kw>
<msg timestamp="20201112 12:43:26.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.242" endtime="20201112 12:43:26.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.265" endtime="20201112 12:43:26.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.271" endtime="20201112 12:43:26.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.235" endtime="20201112 12:43:26.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.229" endtime="20201112 12:43:26.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.294" endtime="20201112 12:43:26.643"></status>
</kw>
<msg timestamp="20201112 12:43:26.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039896208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039933819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.291" endtime="20201112 12:43:26.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039896208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039933819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.652" endtime="20201112 12:43:26.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.670" endtime="20201112 12:43:26.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.284" endtime="20201112 12:43:26.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.279" endtime="20201112 12:43:26.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:26.689" level="INFO">${RESULT} = [{'time': 0.039933819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7610999999999895e-05, 'source_diff': 3.7610999999999895e-05}, {'time': 0.039976069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:26.680" endtime="20201112 12:43:26.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:26.719" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:26.691" endtime="20201112 12:43:26.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.730" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 12:43:26.728" endtime="20201112 12:43:26.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.736" level="INFO">VALUE: [3.7610999999999895e-05, 3.694400000000403e-05, 3.679200000000077e-05, 3.763799999999956e-05, 3.690300000000479e-05, 3.7624999999999464e-05, 3.694399999999709e-05, 3.744399999999759e-05, 3.6804999999993926e-05, 3.740199999999888e-05, 3.697200000000317e-05, 3.7597000000000325e-05, 3.69580000000036e-05, 3.7319000000000935e-05, 3.7624999999999464e-05, 3.680600000000034e-05, 3.7124999999998964e-05, 3.7262999999995716e-05, 3.6916999999997424e-05, 3.7333000000000505e-05, 3.6791000000001295e-05, 3.67780000000012e-05, 3.7624999999999464e-05, 3.7638999999999034e-05, 3.69580000000036e-05, 3.711199999999887e-05, 3.684799999999905e-05, 3.74580000000041e-05, 3.695900000000307e-05, 3.694400000000403e-05, 3.6819000000000435e-05, 3.69580000000036e-05, 3.729200000000127e-05, 3.713799999999906e-05, 3.7096999999999825e-05, 3.748600000000324e-05, 3.7388999999998784e-05, 3.729200000000127e-05, 3.729200000000127e-05, 3.7347000000000075e-05, 3.6944999999996564e-05, 3.7610999999999895e-05, 3.7083000000000255e-05, 3.67780000000012e-05, 3.695799999999666e-05, 3.679200000000077e-05, 3.694399999999709e-05, 3.7624999999999464e-05, 3.6916999999997424e-05, 3.7110999999999394e-05]</msg>
<status status="PASS" starttime="20201112 12:43:26.733" endtime="20201112 12:43:26.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.721" endtime="20201112 12:43:26.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.745" endtime="20201112 12:43:26.748"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:26.753" endtime="20201112 12:43:26.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.749" endtime="20201112 12:43:26.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.741" endtime="20201112 12:43:26.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.225" endtime="20201112 12:43:26.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.224" endtime="20201112 12:43:26.780"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.802" endtime="20201112 12:43:26.819"></status>
</kw>
<msg timestamp="20201112 12:43:26.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.799" endtime="20201112 12:43:26.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.823" endtime="20201112 12:43:26.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.829" endtime="20201112 12:43:26.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.792" endtime="20201112 12:43:26.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.786" endtime="20201112 12:43:26.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.852" endtime="20201112 12:43:27.200"></status>
</kw>
<msg timestamp="20201112 12:43:27.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040216125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040252944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.849" endtime="20201112 12:43:27.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040216125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040252944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.210" endtime="20201112 12:43:27.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.228" endtime="20201112 12:43:27.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.842" endtime="20201112 12:43:27.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.837" endtime="20201112 12:43:27.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:27.247" level="INFO">${RESULT} = [{'time': 0.040252944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6819000000000435e-05, 'source_diff': 3.6819000000000435e-05}, {'time': 0.040298056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:27.238" endtime="20201112 12:43:27.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:27.277" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:27.249" endtime="20201112 12:43:27.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.288" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 12:43:27.286" endtime="20201112 12:43:27.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.293" level="INFO">VALUE: [3.6819000000000435e-05, 3.7638999999999034e-05, 3.769400000000478e-05, 3.692999999999752e-05, 3.744400000000453e-05, 3.672200000000292e-05, 3.6777000000001725e-05, 3.674999999999512e-05, 3.724999999999562e-05, 3.751400000000238e-05, 3.747200000000367e-05, 3.74580000000041e-05, 3.7458999999996634e-05, 3.69580000000036e-05, 3.75979999999998e-05, 3.72780000000017e-05, 3.730600000000084e-05, 3.747300000000314e-05, 3.69580000000036e-05, 3.675000000000206e-05, 3.7290999999994856e-05, 3.7444999999997064e-05, 3.680600000000034e-05, 3.729200000000127e-05, 3.7444999999997064e-05, 3.747200000000367e-05, 3.747300000000314e-05, 3.69580000000036e-05, 3.747199999999673e-05, 3.7096999999999825e-05, 3.723599999999605e-05, 3.729199999999433e-05, 3.763900000000597e-05, 3.742999999999802e-05, 3.676400000000163e-05, 3.708399999999973e-05, 3.74580000000041e-05, 3.695799999999666e-05, 3.7277000000002225e-05, 3.708399999999973e-05, 3.7110999999999394e-05, 3.7110999999999394e-05, 3.680600000000034e-05, 3.74580000000041e-05, 3.69580000000036e-05, 3.732000000000041e-05, 3.7374999999999214e-05, 3.763799999999956e-05, 3.747300000000314e-05, 3.7610999999999895e-05]</msg>
<status status="PASS" starttime="20201112 12:43:27.290" endtime="20201112 12:43:27.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.279" endtime="20201112 12:43:27.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.303" endtime="20201112 12:43:27.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:27.311" endtime="20201112 12:43:27.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.307" endtime="20201112 12:43:27.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.298" endtime="20201112 12:43:27.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.782" endtime="20201112 12:43:27.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.780" endtime="20201112 12:43:27.337"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.359" endtime="20201112 12:43:27.375"></status>
</kw>
<msg timestamp="20201112 12:43:27.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.356" endtime="20201112 12:43:27.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.378" endtime="20201112 12:43:27.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.385" endtime="20201112 12:43:27.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.349" endtime="20201112 12:43:27.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.343" endtime="20201112 12:43:27.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.408" endtime="20201112 12:43:27.746"></status>
</kw>
<msg timestamp="20201112 12:43:27.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039895389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039932528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.405" endtime="20201112 12:43:27.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039895389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039932528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.755" endtime="20201112 12:43:27.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.773" endtime="20201112 12:43:27.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.397" endtime="20201112 12:43:27.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.393" endtime="20201112 12:43:27.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:27.793" level="INFO">${RESULT} = [{'time': 0.039932528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7138999999998534e-05, 'source_diff': 3.7138999999998534e-05}, {'time': 0.039980708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:27.784" endtime="20201112 12:43:27.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:27.823" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:27.795" endtime="20201112 12:43:27.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.834" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 12:43:27.831" endtime="20201112 12:43:27.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.839" level="INFO">VALUE: [3.7138999999998534e-05, 3.7638999999999034e-05, 3.7124999999998964e-05, 3.747300000000314e-05, 3.7610999999999895e-05, 3.747200000000367e-05, 3.745900000000357e-05, 3.7569000000001185e-05, 3.7333000000000505e-05, 3.695799999999666e-05, 3.7124999999998964e-05, 3.7291000000001795e-05, 3.7110999999999394e-05, 3.711199999999887e-05, 3.6791000000001295e-05, 3.7110999999999394e-05, 3.7124999999998964e-05, 3.7110999999999394e-05, 3.7360999999999644e-05, 3.7555000000001615e-05, 3.7291000000001795e-05, 3.7124999999998964e-05, 3.7445000000004e-05, 3.69580000000036e-05, 3.695799999999666e-05, 3.7444999999997064e-05, 3.7638999999999034e-05, 3.693000000000446e-05, 3.742999999999802e-05, 3.7624999999999464e-05, 3.7638999999999034e-05, 3.693100000000393e-05, 3.729199999999433e-05, 3.7305000000001365e-05, 3.76380000000065e-05, 3.7597000000000325e-05, 3.732000000000041e-05, 3.7138999999998534e-05, 3.7291000000001795e-05, 3.745799999999716e-05, 3.729200000000127e-05, 3.750000000000281e-05, 3.7430999999997494e-05, 3.7333000000000505e-05, 3.676400000000163e-05, 3.695900000000307e-05, 3.743000000000496e-05, 3.697300000000264e-05, 3.730600000000084e-05, 3.7124999999998964e-05]</msg>
<status status="PASS" starttime="20201112 12:43:27.836" endtime="20201112 12:43:27.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.824" endtime="20201112 12:43:27.842"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.849" endtime="20201112 12:43:27.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:27.857" endtime="20201112 12:43:27.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.852" endtime="20201112 12:43:27.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.844" endtime="20201112 12:43:27.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.339" endtime="20201112 12:43:27.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.338" endtime="20201112 12:43:27.883"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.905" endtime="20201112 12:43:27.921"></status>
</kw>
<msg timestamp="20201112 12:43:27.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.902" endtime="20201112 12:43:27.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.924" endtime="20201112 12:43:27.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.930" endtime="20201112 12:43:27.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.895" endtime="20201112 12:43:27.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.889" endtime="20201112 12:43:27.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.953" endtime="20201112 12:43:28.289"></status>
</kw>
<msg timestamp="20201112 12:43:28.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039955583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039992708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.950" endtime="20201112 12:43:28.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039955583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039992708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:28.298" endtime="20201112 12:43:28.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.317" endtime="20201112 12:43:28.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.943" endtime="20201112 12:43:28.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.938" endtime="20201112 12:43:28.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:28.338" level="INFO">${RESULT} = [{'time': 0.039992708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7124999999998964e-05, 'source_diff': 3.7124999999998964e-05}, {'time': 0.040034931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:28.329" endtime="20201112 12:43:28.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:28.368" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:28.340" endtime="20201112 12:43:28.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.379" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 12:43:28.376" endtime="20201112 12:43:28.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.384" level="INFO">VALUE: [3.7124999999998964e-05, 3.680600000000034e-05, 3.752799999999501e-05, 3.67780000000012e-05, 3.7305000000001365e-05, 3.67780000000012e-05, 3.724999999999562e-05, 3.744399999999759e-05, 3.7291000000001795e-05, 3.676400000000163e-05, 3.7638999999999034e-05, 3.7124999999998964e-05, 3.716700000000461e-05, 3.7638999999999034e-05, 3.67780000000012e-05, 3.673600000000249e-05, 3.763799999999956e-05, 3.679200000000077e-05, 3.730600000000084e-05, 3.7110999999999394e-05, 3.7305000000001365e-05, 3.697199999999623e-05, 3.74859999999963e-05, 3.729200000000127e-05, 3.6791000000001295e-05, 3.7638999999999034e-05, 3.7291000000001795e-05, 3.729199999999433e-05, 3.681999999999991e-05, 3.7610999999999895e-05, 3.6804999999993926e-05, 3.7416999999997924e-05, 3.676400000000163e-05, 3.747199999999673e-05, 3.7638999999999034e-05, 3.729200000000127e-05, 3.7305000000001365e-05, 3.695799999999666e-05, 3.7472999999996204e-05, 3.7624999999999464e-05, 3.679200000000077e-05, 3.730600000000084e-05, 3.7638999999999034e-05, 3.7138999999998534e-05, 3.697199999999623e-05, 3.726400000000213e-05, 3.7638999999999034e-05, 3.7652999999998604e-05, 3.694399999999709e-05, 3.679199999999383e-05]</msg>
<status status="PASS" starttime="20201112 12:43:28.381" endtime="20201112 12:43:28.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.369" endtime="20201112 12:43:28.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.393" endtime="20201112 12:43:28.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:28.402" endtime="20201112 12:43:28.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.397" endtime="20201112 12:43:28.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.389" endtime="20201112 12:43:28.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.885" endtime="20201112 12:43:28.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.883" endtime="20201112 12:43:28.427"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.450" endtime="20201112 12:43:28.465"></status>
</kw>
<msg timestamp="20201112 12:43:28.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.446" endtime="20201112 12:43:28.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.469" endtime="20201112 12:43:28.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.475" endtime="20201112 12:43:28.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.439" endtime="20201112 12:43:28.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.434" endtime="20201112 12:43:28.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.498" endtime="20201112 12:43:28.834"></status>
</kw>
<msg timestamp="20201112 12:43:28.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039850542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039887486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:28.495" endtime="20201112 12:43:28.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039850542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039887486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:28.844" endtime="20201112 12:43:28.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.862" endtime="20201112 12:43:28.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.488" endtime="20201112 12:43:28.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.483" endtime="20201112 12:43:28.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:28.881" level="INFO">${RESULT} = [{'time': 0.039887486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.694399999999709e-05, 'source_diff': 3.694399999999709e-05}, {'time': 0.039930694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:28.872" endtime="20201112 12:43:28.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:28.911" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:28.883" endtime="20201112 12:43:28.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.922" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 12:43:28.920" endtime="20201112 12:43:28.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.928" level="INFO">VALUE: [3.694399999999709e-05, 3.74580000000041e-05, 3.7430999999997494e-05, 3.71659999999982e-05, 3.748600000000324e-05, 3.7124999999998964e-05, 3.7276999999995286e-05, 3.7610999999999895e-05, 3.680600000000034e-05, 3.755600000000109e-05, 3.7124999999998964e-05, 3.7124999999998964e-05, 3.6930999999996994e-05, 3.67780000000012e-05, 3.761199999999937e-05, 3.67780000000012e-05, 3.681999999999991e-05, 3.680600000000034e-05, 3.7124999999998964e-05, 3.672199999999598e-05, 3.7083000000000255e-05, 3.7110999999999394e-05, 3.7458999999996634e-05, 3.7444999999997064e-05, 3.747300000000314e-05, 3.725000000000256e-05, 3.745799999999716e-05, 3.7291000000001795e-05, 3.694400000000403e-05, 3.730600000000084e-05, 3.6791000000001295e-05, 3.757000000000066e-05, 3.7638999999999034e-05, 3.742999999999802e-05, 3.691599999999795e-05, 3.694399999999709e-05, 3.7291000000001795e-05, 3.7124999999998964e-05, 3.7610999999999895e-05, 3.6944999999996564e-05, 3.7083000000000255e-05, 3.7445000000004e-05, 3.7291000000001795e-05, 3.747199999999673e-05, 3.690300000000479e-05, 3.692999999999752e-05, 3.67780000000012e-05, 3.711199999999887e-05, 3.730600000000084e-05, 3.697199999999623e-05]</msg>
<status status="PASS" starttime="20201112 12:43:28.924" endtime="20201112 12:43:28.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.913" endtime="20201112 12:43:28.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.937" endtime="20201112 12:43:28.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:28.945" endtime="20201112 12:43:28.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.941" endtime="20201112 12:43:28.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.932" endtime="20201112 12:43:28.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.429" endtime="20201112 12:43:28.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.428" endtime="20201112 12:43:28.971"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.993" endtime="20201112 12:43:29.009"></status>
</kw>
<msg timestamp="20201112 12:43:29.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.990" endtime="20201112 12:43:29.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:29.013" endtime="20201112 12:43:29.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.019" endtime="20201112 12:43:29.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.983" endtime="20201112 12:43:29.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.977" endtime="20201112 12:43:29.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.042" endtime="20201112 12:43:29.378"></status>
</kw>
<msg timestamp="20201112 12:43:29.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039865083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03990975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:29.039" endtime="20201112 12:43:29.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039865083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03990975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:29.387" endtime="20201112 12:43:29.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.406" endtime="20201112 12:43:29.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.032" endtime="20201112 12:43:29.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.027" endtime="20201112 12:43:29.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:29.425" level="INFO">${RESULT} = [{'time': 0.03990975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4666999999998236e-05, 'source_diff': 4.4666999999998236e-05}, {'time': 0.039960972, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:43:29.416" endtime="20201112 12:43:29.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:29.455" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:29.427" endtime="20201112 12:43:29.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.466" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 12:43:29.463" endtime="20201112 12:43:29.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.471" level="INFO">VALUE: [4.4666999999998236e-05, 4.4138999999998596e-05, 4.432000000000047e-05, 4.448599999999636e-05, 4.4681000000004745e-05, 4.3987000000002274e-05, 4.4459000000003635e-05, 4.4624999999999526e-05, 4.4624999999999526e-05, 4.397200000000323e-05, 4.398599999999586e-05, 4.4487000000002774e-05, 4.381999999999997e-05, 4.38060000000004e-05, 4.4166999999997736e-05, 4.4459000000003635e-05, 4.470799999999747e-05, 4.395799999999672e-05, 4.463799999999962e-05, 4.4139000000005535e-05, 4.38060000000004e-05, 4.399999999999543e-05, 4.4624999999999526e-05, 4.381999999999997e-05, 4.3959000000003134e-05, 4.4194999999996876e-05, 4.4166999999997736e-05, 4.4666999999998236e-05, 4.46660000000057e-05, 4.431899999999406e-05, 4.41660000000052e-05, 4.44860000000033e-05, 4.448599999999636e-05, 4.4638999999999096e-05, 4.4194999999996876e-05, 4.4124999999999026e-05, 4.45139999999955e-05, 4.445799999999722e-05, 4.398599999999586e-05, 4.4152999999998166e-05, 4.4458999999996696e-05, 4.4083000000000316e-05, 4.4473000000003204e-05, 4.400000000000237e-05, 4.413800000000606e-05, 4.4333000000000566e-05, 4.395799999999672e-05, 4.434799999999961e-05, 4.3874999999998776e-05, 4.448599999999636e-05]</msg>
<status status="PASS" starttime="20201112 12:43:29.468" endtime="20201112 12:43:29.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.457" endtime="20201112 12:43:29.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.485" endtime="20201112 12:43:29.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:29.493" endtime="20201112 12:43:29.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.488" endtime="20201112 12:43:29.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.480" endtime="20201112 12:43:29.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.973" endtime="20201112 12:43:29.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.972" endtime="20201112 12:43:29.519"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.541" endtime="20201112 12:43:29.558"></status>
</kw>
<msg timestamp="20201112 12:43:29.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:29.538" endtime="20201112 12:43:29.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:29.561" endtime="20201112 12:43:29.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.567" endtime="20201112 12:43:29.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.531" endtime="20201112 12:43:29.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.525" endtime="20201112 12:43:29.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.590" endtime="20201112 12:43:29.928"></status>
</kw>
<msg timestamp="20201112 12:43:29.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040033861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040082736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:29.587" endtime="20201112 12:43:29.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040033861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040082736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:29.937" endtime="20201112 12:43:29.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.955" endtime="20201112 12:43:29.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.580" endtime="20201112 12:43:29.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.575" endtime="20201112 12:43:29.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:29.974" level="INFO">${RESULT} = [{'time': 0.040082736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8875000000003777e-05, 'source_diff': 4.8875000000003777e-05}, {'time': 0.040149875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:29.965" endtime="20201112 12:43:29.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:30.004" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:29.976" endtime="20201112 12:43:30.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.015" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 12:43:30.013" endtime="20201112 12:43:30.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.021" level="INFO">VALUE: [4.8875000000003777e-05, 4.898600000000086e-05, 4.8901999999996504e-05, 4.893099999999512e-05, 4.9014e-05, 4.936099999999777e-05, 4.897199999999435e-05, 4.8625000000003527e-05, 4.9403000000003416e-05, 4.9195000000001876e-05, 4.927799999999982e-05, 4.8917000000002486e-05, 4.9193999999995464e-05, 4.926400000000025e-05, 4.955599999999921e-05, 4.88060000000054e-05, 4.900000000000043e-05, 4.9445000000002126e-05, 4.9014e-05, 4.894400000000215e-05, 4.870800000000147e-05, 4.898599999999392e-05, 4.865299999999573e-05, 4.911100000000446e-05, 4.937499999999734e-05, 4.881899999999856e-05, 4.879099999999942e-05, 4.961099999999802e-05, 4.925000000000068e-05, 4.959699999999845e-05, 4.923600000000111e-05, 4.933299999999863e-05, 4.883299999999813e-05, 4.8667000000002236e-05, 4.877800000000626e-05, 4.918099999999537e-05, 4.8737000000000086e-05, 4.893099999999512e-05, 4.952800000000007e-05, 4.876399999999975e-05, 4.958399999999835e-05, 4.865299999999573e-05, 4.959699999999845e-05, 4.883300000000507e-05, 4.868000000000233e-05, 4.8987000000000336e-05, 4.95140000000005e-05, 4.8625000000003527e-05, 4.959700000000539e-05, 4.879199999999889e-05]</msg>
<status status="PASS" starttime="20201112 12:43:30.018" endtime="20201112 12:43:30.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.006" endtime="20201112 12:43:30.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.030" endtime="20201112 12:43:30.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:30.038" endtime="20201112 12:43:30.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.034" endtime="20201112 12:43:30.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.025" endtime="20201112 12:43:30.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.521" endtime="20201112 12:43:30.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.519" endtime="20201112 12:43:30.064"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.087" endtime="20201112 12:43:30.104"></status>
</kw>
<msg timestamp="20201112 12:43:30.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:30.083" endtime="20201112 12:43:30.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:30.107" endtime="20201112 12:43:30.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.113" endtime="20201112 12:43:30.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.076" endtime="20201112 12:43:30.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.071" endtime="20201112 12:43:30.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.136" endtime="20201112 12:43:30.475"></status>
</kw>
<msg timestamp="20201112 12:43:30.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040011639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040062069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:30.133" endtime="20201112 12:43:30.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040011639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040062069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:30.484" endtime="20201112 12:43:30.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.503" endtime="20201112 12:43:30.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.126" endtime="20201112 12:43:30.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.121" endtime="20201112 12:43:30.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:30.523" level="INFO">${RESULT} = [{'time': 0.040062069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0429999999997144e-05, 'source_diff': 5.0429999999997144e-05}, {'time': 0.040131306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:30.514" endtime="20201112 12:43:30.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:30.553" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:30.525" endtime="20201112 12:43:30.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.564" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 12:43:30.562" endtime="20201112 12:43:30.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.569" level="INFO">VALUE: [5.0429999999997144e-05, 4.979199999999989e-05, 5.009699999999895e-05, 5.0431000000003556e-05, 5.062499999999859e-05, 4.986099999999827e-05, 5.004200000000014e-05, 4.9625000000004527e-05, 5.0429999999997144e-05, 4.970899999999501e-05, 5.026399999999431e-05, 5.008299999999938e-05, 5.026400000000125e-05, 4.981999999999903e-05, 4.979199999999989e-05, 4.995800000000272e-05, 5.034799999999867e-05, 5.050000000000193e-05, 5.008299999999938e-05, 4.983299999999913e-05, 5.026400000000125e-05, 4.9679999999996394e-05, 4.962499999999759e-05, 4.9709000000001946e-05, 4.962499999999759e-05, 5.008299999999938e-05, 4.990200000000444e-05, 5.011099999999852e-05, 5.011100000000546e-05, 4.999999999999449e-05, 4.975000000000118e-05, 4.975000000000118e-05, 5.058399999999935e-05, 4.975000000000118e-05, 5.0235999999995173e-05, 4.981899999999956e-05, 4.98339999999986e-05, 5.01669999999968e-05, 4.96940000000029e-05, 5.0443999999996714e-05, 5.059700000000639e-05, 5.036100000000571e-05, 4.958300000000582e-05, 5.020899999999551e-05, 4.956899999999931e-05, 4.980599999999946e-05, 5.025000000000168e-05, 5.033300000000657e-05, 4.990200000000444e-05, 5.002699999999416e-05]</msg>
<status status="PASS" starttime="20201112 12:43:30.566" endtime="20201112 12:43:30.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.555" endtime="20201112 12:43:30.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.579" endtime="20201112 12:43:30.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:30.587" endtime="20201112 12:43:30.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.583" endtime="20201112 12:43:30.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.574" endtime="20201112 12:43:30.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.066" endtime="20201112 12:43:30.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.065" endtime="20201112 12:43:30.613"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.636" endtime="20201112 12:43:30.653"></status>
</kw>
<msg timestamp="20201112 12:43:30.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:30.632" endtime="20201112 12:43:30.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:30.656" endtime="20201112 12:43:30.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.663" endtime="20201112 12:43:30.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.625" endtime="20201112 12:43:30.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.620" endtime="20201112 12:43:30.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.687" endtime="20201112 12:43:31.024"></status>
</kw>
<msg timestamp="20201112 12:43:31.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040037875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040088597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:30.684" endtime="20201112 12:43:31.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040037875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040088597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:31.033" endtime="20201112 12:43:31.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.052" endtime="20201112 12:43:31.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.676" endtime="20201112 12:43:31.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.671" endtime="20201112 12:43:31.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:31.071" level="INFO">${RESULT} = [{'time': 0.040088597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0721999999996104e-05, 'source_diff': 5.0721999999996104e-05}, {'time': 0.040161847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:31.062" endtime="20201112 12:43:31.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:31.101" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:31.073" endtime="20201112 12:43:31.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.112" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 12:43:31.110" endtime="20201112 12:43:31.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.117" level="INFO">VALUE: [5.0721999999996104e-05, 5.129100000000192e-05, 5.159700000000045e-05, 5.13470000000002e-05, 5.081900000000056e-05, 5.111099999999952e-05, 5.13340000000001e-05, 5.105500000000124e-05, 5.0943999999997214e-05, 5.0709000000002946e-05, 5.13470000000002e-05, 5.0737000000002086e-05, 5.091699999999755e-05, 5.0681000000003806e-05, 5.083300000000013e-05, 5.0735999999995673e-05, 5.145899999999676e-05, 5.0721999999996104e-05, 5.1485999999996424e-05, 5.143000000000508e-05, 5.0931000000004056e-05, 5.125000000000268e-05, 5.082000000000003e-05, 5.088899999999841e-05, 5.077800000000132e-05, 5.130599999999402e-05, 5.100000000000243e-05, 5.11940000000044e-05, 5.1443999999997714e-05, 5.06669999999973e-05, 5.159700000000045e-05, 5.105600000000071e-05, 5.100000000000243e-05, 5.086100000000621e-05, 5.087499999999884e-05, 5.079100000000142e-05, 5.162500000000653e-05, 5.1221999999996604e-05, 5.0681000000003806e-05, 5.094400000000415e-05, 5.122200000000354e-05, 5.088899999999841e-05, 5.097200000000329e-05, 5.109699999999995e-05, 5.1443999999997714e-05, 5.132000000000053e-05, 5.091699999999755e-05, 5.1221999999996604e-05, 5.073600000000261e-05, 5.107000000000028e-05]</msg>
<status status="PASS" starttime="20201112 12:43:31.114" endtime="20201112 12:43:31.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.103" endtime="20201112 12:43:31.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.126" endtime="20201112 12:43:31.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:31.135" endtime="20201112 12:43:31.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.130" endtime="20201112 12:43:31.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.122" endtime="20201112 12:43:31.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.615" endtime="20201112 12:43:31.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.614" endtime="20201112 12:43:31.161"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.183" endtime="20201112 12:43:31.200"></status>
</kw>
<msg timestamp="20201112 12:43:31.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.180" endtime="20201112 12:43:31.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.203" endtime="20201112 12:43:31.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.209" endtime="20201112 12:43:31.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.172" endtime="20201112 12:43:31.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.167" endtime="20201112 12:43:31.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.232" endtime="20201112 12:43:31.569"></status>
</kw>
<msg timestamp="20201112 12:43:31.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039825722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039878361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:31.229" endtime="20201112 12:43:31.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039825722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039878361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:31.578" endtime="20201112 12:43:31.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.597" endtime="20201112 12:43:31.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.222" endtime="20201112 12:43:31.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.218" endtime="20201112 12:43:31.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:31.616" level="INFO">${RESULT} = [{'time': 0.039878361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.263900000000016e-05, 'source_diff': 5.263900000000016e-05}, {'time': 0.039948542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:31.607" endtime="20201112 12:43:31.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:31.646" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:31.618" endtime="20201112 12:43:31.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.656" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 12:43:31.654" endtime="20201112 12:43:31.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.662" level="INFO">VALUE: [5.263900000000016e-05, 5.1999999999996493e-05, 5.237500000000034e-05, 5.26669999999993e-05, 5.2415999999999574e-05, 5.184800000000017e-05, 5.231999999999459e-05, 5.240300000000642e-05, 5.195800000000472e-05, 5.2235999999997174e-05, 5.1959000000004196e-05, 5.182000000000103e-05, 5.23470000000012e-05, 5.261100000000102e-05, 5.173600000000361e-05, 5.1709000000003946e-05, 5.2165999999999324e-05, 5.244499999999819e-05, 5.176399999999581e-05, 5.1929999999998644e-05, 5.252799999999613e-05, 5.180600000000146e-05, 5.1985999999996924e-05, 5.1735999999996674e-05, 5.186100000000027e-05, 5.1957999999997784e-05, 5.215299999999923e-05, 5.21669999999988e-05, 5.169499999999744e-05, 5.170899999999701e-05, 5.254100000000317e-05, 5.2223000000004016e-05, 5.162499999999959e-05, 5.255500000000274e-05, 5.212500000000009e-05, 5.244499999999819e-05, 5.2415999999999574e-05, 5.202800000000257e-05, 5.21669999999988e-05, 5.250000000000393e-05, 5.229200000000239e-05, 5.241699999999905e-05, 5.231899999999512e-05, 5.187499999999984e-05, 5.188899999999941e-05, 5.187499999999984e-05, 5.1735999999996674e-05, 5.176399999999581e-05, 5.250000000000393e-05, 5.1915999999999074e-05]</msg>
<status status="PASS" starttime="20201112 12:43:31.659" endtime="20201112 12:43:31.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.648" endtime="20201112 12:43:31.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.671" endtime="20201112 12:43:31.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:31.680" endtime="20201112 12:43:31.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.675" endtime="20201112 12:43:31.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.667" endtime="20201112 12:43:31.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.163" endtime="20201112 12:43:31.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.161" endtime="20201112 12:43:31.706"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.730" endtime="20201112 12:43:31.749"></status>
</kw>
<msg timestamp="20201112 12:43:31.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.726" endtime="20201112 12:43:31.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.752" endtime="20201112 12:43:31.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.758" endtime="20201112 12:43:31.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.719" endtime="20201112 12:43:31.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.713" endtime="20201112 12:43:31.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.781" endtime="20201112 12:43:32.130"></status>
</kw>
<msg timestamp="20201112 12:43:32.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041675333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041728333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:31.778" endtime="20201112 12:43:32.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041675333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041728333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:32.139" endtime="20201112 12:43:32.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.158" endtime="20201112 12:43:32.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.771" endtime="20201112 12:43:32.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.766" endtime="20201112 12:43:32.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:32.176" level="INFO">${RESULT} = [{'time': 0.041728333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2999999999997494e-05, 'source_diff': 5.2999999999997494e-05}, {'time': 0.041798569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:32.168" endtime="20201112 12:43:32.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:32.207" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:32.179" endtime="20201112 12:43:32.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.218" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 12:43:32.215" endtime="20201112 12:43:32.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.223" level="INFO">VALUE: [5.2999999999997494e-05, 5.2957999999998784e-05, 5.3513999999997564e-05, 5.340300000000048e-05, 5.3235999999998174e-05, 5.300000000000443e-05, 5.300000000000443e-05, 5.273600000000461e-05, 5.3457999999999284e-05, 5.2929999999999644e-05, 5.294499999999869e-05, 5.358300000000288e-05, 5.279099999999648e-05, 5.286100000000127e-05, 5.281899999999562e-05, 5.28340000000016e-05, 5.351299999999809e-05, 5.3485999999998424e-05, 5.329100000000392e-05, 5.357000000000278e-05, 5.3152000000000754e-05, 5.300000000000443e-05, 5.2638000000000684e-05, 5.322299999999808e-05, 5.308300000000238e-05, 5.273600000000461e-05, 5.2749999999997244e-05, 5.333399999999516e-05, 5.311199999999405e-05, 5.338899999999397e-05, 5.28749999999939e-05, 5.3499999999997994e-05, 5.28470000000017e-05, 5.355500000000374e-05, 5.336200000000124e-05, 5.312500000000109e-05, 5.277800000000332e-05, 5.2985999999997924e-05, 5.313900000000066e-05, 5.358400000000235e-05, 5.327800000000382e-05, 5.304099999999673e-05, 5.2985999999997924e-05, 5.2695000000005376e-05, 5.262500000000059e-05, 5.311100000000152e-05, 5.340300000000048e-05, 5.2943999999999214e-05, 5.263900000000016e-05, 5.2929999999999644e-05]</msg>
<status status="PASS" starttime="20201112 12:43:32.220" endtime="20201112 12:43:32.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.208" endtime="20201112 12:43:32.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.232" endtime="20201112 12:43:32.235"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:32.241" endtime="20201112 12:43:32.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.236" endtime="20201112 12:43:32.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.228" endtime="20201112 12:43:32.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.708" endtime="20201112 12:43:32.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.707" endtime="20201112 12:43:32.267"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.289" endtime="20201112 12:43:32.308"></status>
</kw>
<msg timestamp="20201112 12:43:32.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.286" endtime="20201112 12:43:32.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.311" endtime="20201112 12:43:32.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.318" endtime="20201112 12:43:32.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.279" endtime="20201112 12:43:32.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.273" endtime="20201112 12:43:32.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.341" endtime="20201112 12:43:32.691"></status>
</kw>
<msg timestamp="20201112 12:43:32.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040272472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040326319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:32.337" endtime="20201112 12:43:32.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040272472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040326319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:32.700" endtime="20201112 12:43:32.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.719" endtime="20201112 12:43:32.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.330" endtime="20201112 12:43:32.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.326" endtime="20201112 12:43:32.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:32.741" level="INFO">${RESULT} = [{'time': 0.040326319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.38470000000027e-05, 'source_diff': 5.38470000000027e-05}, {'time': 0.040402569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:32.731" endtime="20201112 12:43:32.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:32.771" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:32.743" endtime="20201112 12:43:32.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.782" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 12:43:32.780" endtime="20201112 12:43:32.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.788" level="INFO">VALUE: [5.38470000000027e-05, 5.4180000000000894e-05, 5.4485999999999424e-05, 5.463899999999522e-05, 5.455599999999727e-05, 5.413900000000166e-05, 5.429100000000492e-05, 5.4249999999998744e-05, 5.3707999999999534e-05, 5.45140000000055e-05, 5.427700000000535e-05, 5.461200000000249e-05, 5.4027999999997633e-05, 5.39869999999984e-05, 5.387500000000184e-05, 5.381999999999609e-05, 5.36670000000003e-05, 5.381899999999662e-05, 5.409699999999601e-05, 5.393100000000012e-05, 5.3957999999999784e-05, 5.4541999999997703e-05, 5.376400000000475e-05, 5.404200000000414e-05, 5.404099999999773e-05, 5.3902000000001504e-05, 5.407000000000328e-05, 5.368099999999987e-05, 5.383399999999566e-05, 5.4527999999998134e-05, 5.455600000000421e-05, 5.4235999999999174e-05, 5.4499999999998994e-05, 5.433300000000363e-05, 5.3957999999999784e-05, 5.429099999999798e-05, 5.409700000000295e-05, 5.4235999999999174e-05, 5.406900000000381e-05, 5.4527999999998134e-05, 5.459700000000345e-05, 5.3944000000000214e-05, 5.38470000000027e-05, 5.4430000000001144e-05, 5.3721999999999104e-05, 5.4444000000000714e-05, 5.4471999999999854e-05, 5.3957999999999784e-05, 5.363900000000116e-05, 5.4208000000000034e-05]</msg>
<status status="PASS" starttime="20201112 12:43:32.785" endtime="20201112 12:43:32.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.773" endtime="20201112 12:43:32.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.797" endtime="20201112 12:43:32.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:32.805" endtime="20201112 12:43:32.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.801" endtime="20201112 12:43:32.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.793" endtime="20201112 12:43:32.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.269" endtime="20201112 12:43:32.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.268" endtime="20201112 12:43:32.831"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.854" endtime="20201112 12:43:32.871"></status>
</kw>
<msg timestamp="20201112 12:43:32.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.850" endtime="20201112 12:43:32.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.874" endtime="20201112 12:43:32.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.880" endtime="20201112 12:43:32.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.843" endtime="20201112 12:43:32.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.838" endtime="20201112 12:43:32.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.903" endtime="20201112 12:43:33.241"></status>
</kw>
<msg timestamp="20201112 12:43:33.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039765556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039821139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:32.900" endtime="20201112 12:43:33.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039765556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039821139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.250" endtime="20201112 12:43:33.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.269" endtime="20201112 12:43:33.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.893" endtime="20201112 12:43:33.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.888" endtime="20201112 12:43:33.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:33.288" level="INFO">${RESULT} = [{'time': 0.039821139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.558299999999794e-05, 'source_diff': 5.558299999999794e-05}, {'time': 0.039896361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:33.279" endtime="20201112 12:43:33.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:33.318" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:33.290" endtime="20201112 12:43:33.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.329" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 12:43:33.327" endtime="20201112 12:43:33.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.334" level="INFO">VALUE: [5.558299999999794e-05, 5.5291999999998453e-05, 5.4915999999995135e-05, 5.5430000000002144e-05, 5.48749999999959e-05, 5.506999999999734e-05, 5.512500000000309e-05, 5.554099999999923e-05, 5.561100000000402e-05, 5.481999999999709e-05, 5.5499999999999994e-05, 5.5541999999998704e-05, 5.500000000000643e-05, 5.55549999999988e-05, 5.540299999999554e-05, 5.477699999999891e-05, 5.530499999999855e-05, 5.54869999999999e-05, 5.494500000000069e-05, 5.540299999999554e-05, 5.536099999999683e-05, 5.538899999999597e-05, 5.477699999999891e-05, 5.4958000000000784e-05, 5.5430000000002144e-05, 5.53470000000042e-05, 5.5236000000000174e-05, 5.5027999999998634e-05, 5.4999999999999494e-05, 5.504099999999873e-05, 5.4679999999994455e-05, 5.554100000000617e-05, 5.479200000000489e-05, 5.561200000000349e-05, 5.483300000000413e-05, 5.488900000000241e-05, 5.5499999999999994e-05, 5.518100000000137e-05, 5.5277999999998884e-05, 5.5249999999999744e-05, 5.4957999999993845e-05, 5.480599999999752e-05, 5.515299999999529e-05, 5.5014000000006e-05, 5.48749999999959e-05, 5.534699999999726e-05, 5.5222000000000604e-05, 5.5263999999999314e-05, 5.468099999999393e-05, 5.4652000000002254e-05]</msg>
<status status="PASS" starttime="20201112 12:43:33.331" endtime="20201112 12:43:33.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.320" endtime="20201112 12:43:33.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.344" endtime="20201112 12:43:33.346"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:33.352" endtime="20201112 12:43:33.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.348" endtime="20201112 12:43:33.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.339" endtime="20201112 12:43:33.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.833" endtime="20201112 12:43:33.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.832" endtime="20201112 12:43:33.378"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.401" endtime="20201112 12:43:33.418"></status>
</kw>
<msg timestamp="20201112 12:43:33.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:33.398" endtime="20201112 12:43:33.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:33.422" endtime="20201112 12:43:33.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.428" endtime="20201112 12:43:33.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.391" endtime="20201112 12:43:33.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.385" endtime="20201112 12:43:33.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.453" endtime="20201112 12:43:33.803"></status>
</kw>
<msg timestamp="20201112 12:43:33.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040987347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041043792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.450" endtime="20201112 12:43:33.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040987347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041043792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.813" endtime="20201112 12:43:33.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.834" endtime="20201112 12:43:33.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.443" endtime="20201112 12:43:33.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.438" endtime="20201112 12:43:33.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:33.855" level="INFO">${RESULT} = [{'time': 0.041043792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.644500000000219e-05, 'source_diff': 5.644500000000219e-05}, {'time': 0.041118056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:33.846" endtime="20201112 12:43:33.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:33.886" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:33.857" endtime="20201112 12:43:33.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.898" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 12:43:33.896" endtime="20201112 12:43:33.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.904" level="INFO">VALUE: [5.644500000000219e-05, 5.606999999999834e-05, 5.5791999999998954e-05, 5.634699999999826e-05, 5.608399999999791e-05, 5.5929999999995705e-05, 5.586100000000427e-05, 5.637500000000434e-05, 5.6291999999999454e-05, 5.593099999999518e-05, 5.5972000000001354e-05, 5.5972000000001354e-05, 5.568100000000187e-05, 5.645900000000176e-05, 5.661099999999808e-05, 5.5777999999999384e-05, 5.6485999999994485e-05, 5.6528000000000134e-05, 5.5791999999998954e-05, 5.643100000000262e-05, 5.656899999999937e-05, 5.5986000000000924e-05, 5.662500000000459e-05, 5.588900000000341e-05, 5.633300000000563e-05, 5.581899999999862e-05, 5.661099999999808e-05, 5.5791999999998954e-05, 5.570900000000101e-05, 5.563900000000316e-05, 5.5972000000001354e-05, 5.608299999999844e-05, 5.6250000000000744e-05, 5.6458000000002284e-05, 5.613899999999672e-05, 5.659699999999851e-05, 5.5915999999996135e-05, 5.6401999999997066e-05, 5.661099999999808e-05, 5.6250000000000744e-05, 5.573700000000015e-05, 5.656899999999937e-05, 5.5763999999999814e-05, 5.6250000000000744e-05, 5.6500000000000994e-05, 5.644500000000219e-05, 5.641700000000305e-05, 5.6027999999999634e-05, 5.6041999999999204e-05, 5.6486000000001424e-05]</msg>
<status status="PASS" starttime="20201112 12:43:33.901" endtime="20201112 12:43:33.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.888" endtime="20201112 12:43:33.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.913" endtime="20201112 12:43:33.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:33.922" endtime="20201112 12:43:33.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.918" endtime="20201112 12:43:33.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.909" endtime="20201112 12:43:33.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.381" endtime="20201112 12:43:33.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.379" endtime="20201112 12:43:33.949"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.972" endtime="20201112 12:43:33.991"></status>
</kw>
<msg timestamp="20201112 12:43:33.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:33.968" endtime="20201112 12:43:33.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:33.995" endtime="20201112 12:43:33.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.001" endtime="20201112 12:43:34.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.961" endtime="20201112 12:43:34.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.955" endtime="20201112 12:43:34.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.026" endtime="20201112 12:43:34.378"></status>
</kw>
<msg timestamp="20201112 12:43:34.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041028069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041085153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.022" endtime="20201112 12:43:34.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041028069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041085153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.388" endtime="20201112 12:43:34.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.407" endtime="20201112 12:43:34.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.014" endtime="20201112 12:43:34.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.009" endtime="20201112 12:43:34.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:34.426" level="INFO">${RESULT} = [{'time': 0.041085153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7083999999998913e-05, 'source_diff': 5.7083999999998913e-05}, {'time': 0.041162375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:34.417" endtime="20201112 12:43:34.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:34.457" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:34.428" endtime="20201112 12:43:34.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.469" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 12:43:34.466" endtime="20201112 12:43:34.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.474" level="INFO">VALUE: [5.7083999999998913e-05, 5.741700000000405e-05, 5.7028000000000634e-05, 5.744499999999625e-05, 5.711099999999858e-05, 5.693099999999618e-05, 5.691699999999661e-05, 5.761099999999908e-05, 5.713900000000466e-05, 5.7486000000002424e-05, 5.709699999999901e-05, 5.711099999999858e-05, 5.763900000000516e-05, 5.691699999999661e-05, 5.73749999999984e-05, 5.6694000000002964e-05, 5.7514000000001564e-05, 5.7028000000000634e-05, 5.722300000000208e-05, 5.713899999999772e-05, 5.662499999999765e-05, 5.6777999999993445e-05, 5.690299999999704e-05, 5.681899999999962e-05, 5.665300000000373e-05, 5.706899999999987e-05, 5.668099999999593e-05, 5.6750000000001244e-05, 5.7500000000001994e-05, 5.686099999999833e-05, 5.716699999999686e-05, 5.762499999999865e-05, 5.6901999999997566e-05, 5.701300000000159e-05, 5.7401999999998066e-05, 5.761099999999908e-05, 5.7069999999999343e-05, 5.7055999999999774e-05, 5.6778000000000384e-05, 5.684799999999823e-05, 5.7250000000001744e-05, 5.690299999999704e-05, 5.7458000000003284e-05, 5.7028000000000634e-05, 5.759699999999951e-05, 5.688900000000441e-05, 5.711100000000552e-05, 5.745900000000276e-05, 5.7264000000001314e-05, 5.7528000000001134e-05]</msg>
<status status="PASS" starttime="20201112 12:43:34.471" endtime="20201112 12:43:34.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.459" endtime="20201112 12:43:34.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.489" endtime="20201112 12:43:34.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:34.498" endtime="20201112 12:43:34.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.493" endtime="20201112 12:43:34.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.484" endtime="20201112 12:43:34.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.951" endtime="20201112 12:43:34.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.949" endtime="20201112 12:43:34.524"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.547" endtime="20201112 12:43:34.567"></status>
</kw>
<msg timestamp="20201112 12:43:34.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:34.544" endtime="20201112 12:43:34.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:34.570" endtime="20201112 12:43:34.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.577" endtime="20201112 12:43:34.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.536" endtime="20201112 12:43:34.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.530" endtime="20201112 12:43:34.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.601" endtime="20201112 12:43:34.950"></status>
</kw>
<msg timestamp="20201112 12:43:34.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041318903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041377403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.597" endtime="20201112 12:43:34.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041318903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041377403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.960" endtime="20201112 12:43:34.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.979" endtime="20201112 12:43:34.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.590" endtime="20201112 12:43:34.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.585" endtime="20201112 12:43:34.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:35.000" level="INFO">${RESULT} = [{'time': 0.041377403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8500000000002994e-05, 'source_diff': 5.8500000000002994e-05}, {'time': 0.041455639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:34.991" endtime="20201112 12:43:35.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:35.031" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:35.002" endtime="20201112 12:43:35.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.042" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 12:43:35.040" endtime="20201112 12:43:35.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.047" level="INFO">VALUE: [5.8500000000002994e-05, 5.8042000000001204e-05, 5.8000000000002494e-05, 5.816699999999786e-05, 5.7750000000002244e-05, 5.858300000000094e-05, 5.8500000000002994e-05, 5.8014000000002064e-05, 5.81670000000048e-05, 5.780500000000105e-05, 5.836099999999983e-05, 5.811099999999958e-05, 5.7930000000004644e-05, 5.859700000000051e-05, 5.7651999999998316e-05, 5.804100000000173e-05, 5.855499999999486e-05, 5.790299999999804e-05, 5.818100000000437e-05, 5.818099999999743e-05, 5.8542000000001704e-05, 5.794499999999675e-05, 5.7943999999997275e-05, 5.786099999999933e-05, 5.7679999999997456e-05, 5.783300000000019e-05, 5.7778000000001384e-05, 5.8458000000004284e-05, 5.786099999999933e-05, 5.845900000000376e-05, 5.7693999999997025e-05, 5.8556000000001274e-05, 5.8193999999997525e-05, 5.80550000000013e-05, 5.763899999999822e-05, 5.7763999999994875e-05, 5.8249999999995805e-05, 5.7680000000004394e-05, 5.8097999999999483e-05, 5.797299999999589e-05, 5.8014000000002064e-05, 5.8306000000001024e-05, 5.78749999999989e-05, 5.8458000000004284e-05, 5.8499999999996055e-05, 5.8514000000002564e-05, 5.804100000000173e-05, 5.784799999999923e-05, 5.7750000000002244e-05, 5.833300000000069e-05]</msg>
<status status="PASS" starttime="20201112 12:43:35.044" endtime="20201112 12:43:35.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.032" endtime="20201112 12:43:35.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.057" endtime="20201112 12:43:35.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:35.065" endtime="20201112 12:43:35.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.061" endtime="20201112 12:43:35.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.052" endtime="20201112 12:43:35.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.526" endtime="20201112 12:43:35.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.525" endtime="20201112 12:43:35.091"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.114" endtime="20201112 12:43:35.131"></status>
</kw>
<msg timestamp="20201112 12:43:35.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:35.111" endtime="20201112 12:43:35.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:35.135" endtime="20201112 12:43:35.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.141" endtime="20201112 12:43:35.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.103" endtime="20201112 12:43:35.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.098" endtime="20201112 12:43:35.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.165" endtime="20201112 12:43:35.505"></status>
</kw>
<msg timestamp="20201112 12:43:35.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040539694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040599347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:35.161" endtime="20201112 12:43:35.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040539694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040599347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:35.515" endtime="20201112 12:43:35.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.534" endtime="20201112 12:43:35.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.154" endtime="20201112 12:43:35.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.150" endtime="20201112 12:43:35.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:35.553" level="INFO">${RESULT} = [{'time': 0.040599347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.965299999999979e-05, 'source_diff': 5.965299999999979e-05}, {'time': 0.040679569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:35.544" endtime="20201112 12:43:35.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:35.584" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:35.555" endtime="20201112 12:43:35.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.595" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 12:43:35.592" endtime="20201112 12:43:35.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.600" level="INFO">VALUE: [5.965299999999979e-05, 5.9193999999998526e-05, 5.9264000000003314e-05, 5.947300000000433e-05, 5.8972000000004354e-05, 5.886100000000033e-05, 5.913899999999972e-05, 5.904099999999579e-05, 5.8971999999997415e-05, 5.8778000000002384e-05, 5.931899999999518e-05, 5.945899999999782e-05, 5.962500000000065e-05, 5.936100000000083e-05, 5.9528000000003134e-05, 5.956899999999543e-05, 5.8972000000004354e-05, 5.9070000000001344e-05, 5.940299999999954e-05, 5.927700000000341e-05, 5.904099999999579e-05, 5.880500000000205e-05, 5.8930000000005645e-05, 5.9179999999998956e-05, 5.966699999999936e-05, 5.9319999999994655e-05, 5.9514000000003564e-05, 5.8929999999998706e-05, 5.911100000000058e-05, 5.933300000000169e-05, 5.934700000000126e-05, 5.931900000000212e-05, 5.8820000000001094e-05, 5.8805999999994585e-05, 5.9500000000003994e-05, 5.8834000000000664e-05, 5.936100000000083e-05, 5.9542000000002704e-05, 5.9485999999997485e-05, 5.8971999999997415e-05, 5.9457999999998346e-05, 5.962500000000065e-05, 5.894500000000469e-05, 5.9207999999998095e-05, 5.9513999999996625e-05, 5.9263999999996375e-05, 5.9556000000002274e-05, 5.8708000000004534e-05, 5.8943999999998276e-05, 5.9542000000002704e-05]</msg>
<status status="PASS" starttime="20201112 12:43:35.597" endtime="20201112 12:43:35.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.585" endtime="20201112 12:43:35.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.610" endtime="20201112 12:43:35.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:35.618" endtime="20201112 12:43:35.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.614" endtime="20201112 12:43:35.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.605" endtime="20201112 12:43:35.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.093" endtime="20201112 12:43:35.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.092" endtime="20201112 12:43:35.644"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.668" endtime="20201112 12:43:35.685"></status>
</kw>
<msg timestamp="20201112 12:43:35.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:35.664" endtime="20201112 12:43:35.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:35.689" endtime="20201112 12:43:35.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.695" endtime="20201112 12:43:35.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.657" endtime="20201112 12:43:35.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.651" endtime="20201112 12:43:35.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.719" endtime="20201112 12:43:36.075"></status>
</kw>
<msg timestamp="20201112 12:43:36.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040987778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041048264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:35.715" endtime="20201112 12:43:36.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040987778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041048264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:36.085" endtime="20201112 12:43:36.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.104" endtime="20201112 12:43:36.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.708" endtime="20201112 12:43:36.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.703" endtime="20201112 12:43:36.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:36.123" level="INFO">${RESULT} = [{'time': 0.041048264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0485999999998485e-05, 'source_diff': 6.0485999999998485e-05}, {'time': 0.041131514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:36.114" endtime="20201112 12:43:36.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:36.154" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:36.125" endtime="20201112 12:43:36.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.165" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 12:43:36.163" endtime="20201112 12:43:36.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.171" level="INFO">VALUE: [6.0485999999998485e-05, 6.040300000000054e-05, 5.98750000000009e-05, 6.05550000000038e-05, 6.016699999999986e-05, 6.0027999999996695e-05, 6.0207999999999096e-05, 6.034699999999532e-05, 5.986099999999439e-05, 6.055499999999686e-05, 6.0152000000000816e-05, 5.991699999999961e-05, 6.011100000000158e-05, 6.0070000000002344e-05, 6.0569999999995905e-05, 6.016699999999986e-05, 5.98750000000009e-05, 6.0041999999996265e-05, 6.0291999999996515e-05, 5.9985999999997985e-05, 6.061100000000208e-05, 5.9763999999996875e-05, 6.0348000000001734e-05, 5.972300000000458e-05, 5.988900000000047e-05, 6.063900000000122e-05, 6.0443999999999776e-05, 5.963900000000022e-05, 5.9722000000005104e-05, 6.0556000000003274e-05, 6.041700000000011e-05, 5.9721999999998165e-05, 6.034700000000226e-05, 6.055499999999686e-05, 5.981900000000262e-05, 6.009700000000201e-05, 6.047299999999839e-05, 6.013900000000072e-05, 6.043099999999968e-05, 6.0513999999997625e-05, 6.056900000000337e-05, 5.981900000000262e-05, 5.9735999999997735e-05, 5.963900000000022e-05, 6.029100000000398e-05, 5.9777999999996445e-05, 5.9957999999998846e-05, 5.980500000000305e-05, 5.969500000000544e-05, 6.056900000000337e-05]</msg>
<status status="PASS" starttime="20201112 12:43:36.168" endtime="20201112 12:43:36.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.156" endtime="20201112 12:43:36.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.181" endtime="20201112 12:43:36.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:36.189" endtime="20201112 12:43:36.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.185" endtime="20201112 12:43:36.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.176" endtime="20201112 12:43:36.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.647" endtime="20201112 12:43:36.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.645" endtime="20201112 12:43:36.215"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.239" endtime="20201112 12:43:36.259"></status>
</kw>
<msg timestamp="20201112 12:43:36.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:36.235" endtime="20201112 12:43:36.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:36.262" endtime="20201112 12:43:36.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.269" endtime="20201112 12:43:36.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.228" endtime="20201112 12:43:36.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.222" endtime="20201112 12:43:36.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.293" endtime="20201112 12:43:36.644"></status>
</kw>
<msg timestamp="20201112 12:43:36.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041327417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041388833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:36.289" endtime="20201112 12:43:36.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041327417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041388833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:36.653" endtime="20201112 12:43:36.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.672" endtime="20201112 12:43:36.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.282" endtime="20201112 12:43:36.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.277" endtime="20201112 12:43:36.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:36.692" level="INFO">${RESULT} = [{'time': 0.041388833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.141600000000164e-05, 'source_diff': 6.141600000000164e-05}, {'time': 0.041473125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:36.683" endtime="20201112 12:43:36.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:36.723" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:36.694" endtime="20201112 12:43:36.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.734" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 12:43:36.732" endtime="20201112 12:43:36.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.740" level="INFO">VALUE: [6.141600000000164e-05, 6.159699999999657e-05, 6.119400000000053e-05, 6.0820000000003094e-05, 6.073699999999821e-05, 6.155599999999734e-05, 6.115300000000129e-05, 6.08750000000019e-05, 6.161199999999561e-05, 6.08750000000019e-05, 6.0750000000005244e-05, 6.145800000000035e-05, 6.090300000000104e-05, 6.119400000000053e-05, 6.086100000000233e-05, 6.084699999999582e-05, 6.081899999999668e-05, 6.1000000000005494e-05, 6.0749999999998305e-05, 6.12080000000001e-05, 6.123600000000617e-05, 6.145800000000035e-05, 6.163900000000222e-05, 6.0735999999998735e-05, 6.0721999999999166e-05, 6.143100000000068e-05, 6.144400000000078e-05, 6.066699999999342e-05, 6.12080000000001e-05, 6.10829999999965e-05, 6.127799999999795e-05, 6.090300000000104e-05, 6.140200000000207e-05, 6.131899999999718e-05, 6.10829999999965e-05, 6.165299999999485e-05, 6.0999999999998555e-05, 6.155600000000427e-05, 6.0834000000002664e-05, 6.104099999999779e-05, 6.129199999999752e-05, 6.159700000000351e-05, 6.122199999999967e-05, 6.108300000000344e-05, 6.161099999999614e-05, 6.134699999999632e-05, 6.131900000000412e-05, 6.163899999999528e-05, 6.093100000000018e-05, 6.0999999999998555e-05]</msg>
<status status="PASS" starttime="20201112 12:43:36.736" endtime="20201112 12:43:36.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.725" endtime="20201112 12:43:36.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.749" endtime="20201112 12:43:36.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:36.758" endtime="20201112 12:43:36.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.753" endtime="20201112 12:43:36.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.745" endtime="20201112 12:43:36.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.218" endtime="20201112 12:43:36.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.216" endtime="20201112 12:43:36.784"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.807" endtime="20201112 12:43:36.827"></status>
</kw>
<msg timestamp="20201112 12:43:36.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:36.804" endtime="20201112 12:43:36.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:36.831" endtime="20201112 12:43:36.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.837" endtime="20201112 12:43:36.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.797" endtime="20201112 12:43:36.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.791" endtime="20201112 12:43:36.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.862" endtime="20201112 12:43:37.214"></status>
</kw>
<msg timestamp="20201112 12:43:37.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041281125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041343167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:36.858" endtime="20201112 12:43:37.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041281125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041343167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:37.224" endtime="20201112 12:43:37.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.243" endtime="20201112 12:43:37.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.850" endtime="20201112 12:43:37.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.846" endtime="20201112 12:43:37.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:37.264" level="INFO">${RESULT} = [{'time': 0.041343167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.204199999999827e-05, 'source_diff': 6.204199999999827e-05}, {'time': 0.041423417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:37.255" endtime="20201112 12:43:37.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:37.372" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:37.266" endtime="20201112 12:43:37.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.383" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 12:43:37.381" endtime="20201112 12:43:37.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.389" level="INFO">VALUE: [6.204199999999827e-05, 6.245899999999388e-05, 6.243100000000168e-05, 6.261099999999714e-05, 6.22080000000011e-05, 6.229199999999852e-05, 6.223600000000024e-05, 6.168100000000093e-05, 6.23200000000046e-05, 6.248699999999996e-05, 6.17629999999994e-05, 6.17499999999993e-05, 6.20550000000053e-05, 6.202699999999922e-05, 6.169400000000103e-05, 6.25279999999992e-05, 6.17499999999993e-05, 6.202800000000563e-05, 6.199999999999956e-05, 6.186100000000333e-05, 6.245900000000082e-05, 6.250000000000006e-05, 6.169400000000103e-05, 6.241699999999517e-05, 6.19029999999951e-05, 6.215299999999535e-05, 6.226399999999938e-05, 6.177699999999897e-05, 6.227799999999895e-05, 6.165300000000179e-05, 6.186199999999586e-05, 6.194499999999381e-05, 6.19300000000017e-05, 6.204199999999827e-05, 6.2582999999998e-05, 6.243100000000168e-05, 6.240300000000254e-05, 6.20279999999987e-05, 6.270799999999466e-05, 6.211099999999664e-05, 6.261099999999714e-05, 6.176399999999888e-05, 6.197200000000042e-05, 6.241700000000211e-05, 6.181999999999716e-05, 6.20699999999974e-05, 6.181899999999768e-05, 6.215299999999535e-05, 6.213900000000272e-05, 6.17080000000006e-05]</msg>
<status status="PASS" starttime="20201112 12:43:37.385" endtime="20201112 12:43:37.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.374" endtime="20201112 12:43:37.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.398" endtime="20201112 12:43:37.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:37.407" endtime="20201112 12:43:37.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.402" endtime="20201112 12:43:37.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.394" endtime="20201112 12:43:37.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.786" endtime="20201112 12:43:37.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.785" endtime="20201112 12:43:37.433"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.458" endtime="20201112 12:43:37.478"></status>
</kw>
<msg timestamp="20201112 12:43:37.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:37.453" endtime="20201112 12:43:37.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:37.481" endtime="20201112 12:43:37.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.488" endtime="20201112 12:43:37.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.446" endtime="20201112 12:43:37.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.440" endtime="20201112 12:43:37.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.512" endtime="20201112 12:43:37.861"></status>
</kw>
<msg timestamp="20201112 12:43:37.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042593403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042656569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:37.508" endtime="20201112 12:43:37.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042593403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042656569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:37.870" endtime="20201112 12:43:37.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.890" endtime="20201112 12:43:37.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.501" endtime="20201112 12:43:37.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.496" endtime="20201112 12:43:37.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:37.908" level="INFO">${RESULT} = [{'time': 0.042656569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.316599999999645e-05, 'source_diff': 6.316599999999645e-05}, {'time': 0.042738806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:37.899" endtime="20201112 12:43:37.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:37.940" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:37.911" endtime="20201112 12:43:37.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.951" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 12:43:37.949" endtime="20201112 12:43:37.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.957" level="INFO">VALUE: [6.316599999999645e-05, 6.341699999999617e-05, 6.295799999999491e-05, 6.323600000000124e-05, 6.322200000000167e-05, 6.308300000000544e-05, 6.309699999999807e-05, 6.277799999999945e-05, 6.345799999999541e-05, 6.366699999999642e-05, 6.272200000000117e-05, 6.295800000000185e-05, 6.299999999999362e-05, 6.315300000000329e-05, 6.272200000000117e-05, 6.298600000000099e-05, 6.340300000000354e-05, 6.318100000000243e-05, 6.366699999999642e-05, 6.323699999999377e-05, 6.29159999999962e-05, 6.361099999999814e-05, 6.305499999999936e-05, 6.351400000000063e-05, 6.306899999999893e-05, 6.366700000000336e-05, 6.32500000000008e-05, 6.265300000000279e-05, 6.345900000000182e-05, 6.345799999999541e-05, 6.345800000000235e-05, 6.337499999999746e-05, 6.334699999999832e-05, 6.26950000000015e-05, 6.362500000000465e-05, 6.343100000000268e-05, 6.301400000000013e-05, 6.27500000000003e-05, 6.30829999999985e-05, 6.284699999999782e-05, 6.279099999999954e-05, 6.345800000000235e-05, 6.312500000000415e-05, 6.312500000000415e-05, 6.276399999999988e-05, 6.327799999999995e-05, 6.290300000000304e-05, 6.345800000000235e-05, 6.330599999999909e-05, 6.300000000000056e-05]</msg>
<status status="PASS" starttime="20201112 12:43:37.954" endtime="20201112 12:43:37.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.942" endtime="20201112 12:43:37.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.967" endtime="20201112 12:43:37.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:37.975" endtime="20201112 12:43:37.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.971" endtime="20201112 12:43:37.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.962" endtime="20201112 12:43:38.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.435" endtime="20201112 12:43:38.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.434" endtime="20201112 12:43:38.002"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.024" endtime="20201112 12:43:38.046"></status>
</kw>
<msg timestamp="20201112 12:43:38.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:38.021" endtime="20201112 12:43:38.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:38.050" endtime="20201112 12:43:38.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.056" endtime="20201112 12:43:38.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.014" endtime="20201112 12:43:38.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.008" endtime="20201112 12:43:38.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.080" endtime="20201112 12:43:38.428"></status>
</kw>
<msg timestamp="20201112 12:43:38.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042670431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042735056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:38.076" endtime="20201112 12:43:38.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042670431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042735056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:38.438" endtime="20201112 12:43:38.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.457" endtime="20201112 12:43:38.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.069" endtime="20201112 12:43:38.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.064" endtime="20201112 12:43:38.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:38.475" level="INFO">${RESULT} = [{'time': 0.042735056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.462499999999871e-05, 'source_diff': 6.462499999999871e-05}, {'time': 0.042817319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:38.465" endtime="20201112 12:43:38.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:38.506" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:38.477" endtime="20201112 12:43:38.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.517" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 12:43:38.515" endtime="20201112 12:43:38.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.522" level="INFO">VALUE: [6.462499999999871e-05, 6.405500000000036e-05, 6.4583e-05, 6.431900000000018e-05, 6.438899999999803e-05, 6.372200000000217e-05, 6.380600000000652e-05, 6.40280000000007e-05, 6.461099999999914e-05, 6.465199999999838e-05, 6.405500000000036e-05, 6.447299999999545e-05, 6.444500000000325e-05, 6.405599999999984e-05, 6.448600000000249e-05, 6.419399999999659e-05, 6.459699999999957e-05, 6.427800000000095e-05, 6.366700000000336e-05, 6.386099999999839e-05, 6.420799999999616e-05, 6.368099999999599e-05, 6.377800000000045e-05, 6.398600000000199e-05, 6.430500000000061e-05, 6.38750000000049e-05, 6.368000000000346e-05, 6.4583e-05, 6.388899999999753e-05, 6.40280000000007e-05, 6.434699999999932e-05, 6.376399999999394e-05, 6.413899999999778e-05, 6.434700000000626e-05, 6.443099999999674e-05, 6.447200000000292e-05, 6.434699999999932e-05, 6.394400000000328e-05, 6.450000000000206e-05, 6.461099999999914e-05, 6.39029999999971e-05, 6.411100000000558e-05, 6.390300000000404e-05, 6.397300000000189e-05, 6.400000000000156e-05, 6.426399999999444e-05, 6.438899999999803e-05, 6.395900000000232e-05, 6.381999999999916e-05, 6.381899999999968e-05]</msg>
<status status="PASS" starttime="20201112 12:43:38.519" endtime="20201112 12:43:38.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.508" endtime="20201112 12:43:38.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.532" endtime="20201112 12:43:38.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:38.541" endtime="20201112 12:43:38.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.536" endtime="20201112 12:43:38.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.528" endtime="20201112 12:43:38.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.004" endtime="20201112 12:43:38.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.002" endtime="20201112 12:43:38.567"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.590" endtime="20201112 12:43:38.610"></status>
</kw>
<msg timestamp="20201112 12:43:38.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:38.586" endtime="20201112 12:43:38.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:38.614" endtime="20201112 12:43:38.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.620" endtime="20201112 12:43:38.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.579" endtime="20201112 12:43:38.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.573" endtime="20201112 12:43:38.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.645" endtime="20201112 12:43:38.997"></status>
</kw>
<msg timestamp="20201112 12:43:39.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041122319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04118775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:38.642" endtime="20201112 12:43:39.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041122319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04118775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:39.007" endtime="20201112 12:43:39.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.026" endtime="20201112 12:43:39.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.633" endtime="20201112 12:43:39.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.628" endtime="20201112 12:43:39.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:39.044" level="INFO">${RESULT} = [{'time': 0.04118775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.543100000000468e-05, 'source_diff': 6.543100000000468e-05}, {'time': 0.041272, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201112 12:43:39.035" endtime="20201112 12:43:39.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:39.075" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:39.046" endtime="20201112 12:43:39.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.087" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 12:43:39.084" endtime="20201112 12:43:39.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.092" level="INFO">VALUE: [6.543100000000468e-05, 6.512500000000615e-05, 6.488799999999906e-05, 6.512499999999921e-05, 6.495900000000332e-05, 6.527800000000195e-05, 6.552699999999578e-05, 6.533300000000075e-05, 6.559700000000057e-05, 6.476399999999494e-05, 6.559700000000057e-05, 6.468099999999699e-05, 6.549999999999612e-05, 6.529199999999458e-05, 6.484699999999982e-05, 6.466700000000436e-05, 6.54159999999987e-05, 6.465299999999785e-05, 6.524999999999587e-05, 6.532000000000066e-05, 6.48479999999993e-05, 6.472199999999623e-05, 6.530600000000109e-05, 6.5195000000004e-05, 6.531999999999372e-05, 6.572199999999723e-05, 6.491600000000514e-05, 6.484699999999982e-05, 6.527700000000247e-05, 6.484699999999982e-05, 6.470799999999666e-05, 6.504199999999433e-05, 6.550000000000306e-05, 6.515299999999835e-05, 6.511199999999912e-05, 6.548700000000296e-05, 6.497199999999648e-05, 6.540300000000554e-05, 6.538899999999903e-05, 6.53479999999998e-05, 6.5583000000001e-05, 6.506900000000093e-05, 6.469399999999709e-05, 6.501399999999519e-05, 6.484699999999982e-05, 6.473600000000274e-05, 6.566699999999842e-05, 6.532000000000066e-05, 6.483399999999973e-05, 6.566699999999842e-05]</msg>
<status status="PASS" starttime="20201112 12:43:39.089" endtime="20201112 12:43:39.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.077" endtime="20201112 12:43:39.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.102" endtime="20201112 12:43:39.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:39.110" endtime="20201112 12:43:39.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.106" endtime="20201112 12:43:39.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.097" endtime="20201112 12:43:39.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.569" endtime="20201112 12:43:39.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.568" endtime="20201112 12:43:39.137"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.160" endtime="20201112 12:43:39.180"></status>
</kw>
<msg timestamp="20201112 12:43:39.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:39.156" endtime="20201112 12:43:39.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:39.184" endtime="20201112 12:43:39.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.190" endtime="20201112 12:43:39.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.149" endtime="20201112 12:43:39.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.143" endtime="20201112 12:43:39.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.214" endtime="20201112 12:43:39.566"></status>
</kw>
<msg timestamp="20201112 12:43:39.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041427458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041493417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:39.211" endtime="20201112 12:43:39.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041427458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041493417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:39.576" endtime="20201112 12:43:39.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.595" endtime="20201112 12:43:39.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.203" endtime="20201112 12:43:39.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.199" endtime="20201112 12:43:39.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:39.613" level="INFO">${RESULT} = [{'time': 0.041493417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.595899999999738e-05, 'source_diff': 6.595899999999738e-05}, {'time': 0.041579694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:39.604" endtime="20201112 12:43:39.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:39.646" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:39.615" endtime="20201112 12:43:39.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.657" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 12:43:39.655" endtime="20201112 12:43:39.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.663" level="INFO">VALUE: [6.595899999999738e-05, 6.577700000000297e-05, 6.612500000000021e-05, 6.633300000000175e-05, 6.654200000000277e-05, 6.663900000000028e-05, 6.658400000000148e-05, 6.57500000000033e-05, 6.606900000000193e-05, 6.586100000000039e-05, 6.655600000000234e-05, 6.581900000000168e-05, 6.566599999999895e-05, 6.588899999999953e-05, 6.638900000000003e-05, 6.586100000000039e-05, 6.598700000000346e-05, 6.64159999999997e-05, 6.609700000000107e-05, 6.629200000000252e-05, 6.613899999999978e-05, 6.597300000000389e-05, 6.601399999999619e-05, 6.668099999999899e-05, 6.598599999999705e-05, 6.641699999999917e-05, 6.633399999999429e-05, 6.572200000000417e-05, 6.655500000000286e-05, 6.634700000000132e-05, 6.602799999999576e-05, 6.648600000000449e-05, 6.58480000000003e-05, 6.588899999999953e-05, 6.611100000000064e-05, 6.61109999999937e-05, 6.619399999999859e-05, 6.655499999999592e-05, 6.60700000000014e-05, 6.648599999999755e-05, 6.605600000000184e-05, 6.666599999999995e-05, 6.565200000000632e-05, 6.631900000000218e-05, 6.576400000000288e-05, 6.663900000000028e-05, 6.665299999999985e-05, 6.609800000000055e-05, 6.637500000000046e-05, 6.65280000000032e-05]</msg>
<status status="PASS" starttime="20201112 12:43:39.660" endtime="20201112 12:43:39.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.648" endtime="20201112 12:43:39.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.677" endtime="20201112 12:43:39.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:39.685" endtime="20201112 12:43:39.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.681" endtime="20201112 12:43:39.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.672" endtime="20201112 12:43:39.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.139" endtime="20201112 12:43:39.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.138" endtime="20201112 12:43:39.711"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.734" endtime="20201112 12:43:39.754"></status>
</kw>
<msg timestamp="20201112 12:43:39.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:39.731" endtime="20201112 12:43:39.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:39.758" endtime="20201112 12:43:39.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.764" endtime="20201112 12:43:39.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.724" endtime="20201112 12:43:39.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.718" endtime="20201112 12:43:39.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.788" endtime="20201112 12:43:40.141"></status>
</kw>
<msg timestamp="20201112 12:43:40.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040997167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041064681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:39.785" endtime="20201112 12:43:40.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040997167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041064681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:40.151" endtime="20201112 12:43:40.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.170" endtime="20201112 12:43:40.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.777" endtime="20201112 12:43:40.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.773" endtime="20201112 12:43:40.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:40.188" level="INFO">${RESULT} = [{'time': 0.041064681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.751399999999769e-05, 'source_diff': 6.751399999999769e-05}, {'time': 0.041153986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:40.179" endtime="20201112 12:43:40.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:40.219" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:40.190" endtime="20201112 12:43:40.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.230" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 12:43:40.228" endtime="20201112 12:43:40.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.236" level="INFO">VALUE: [6.751399999999769e-05, 6.681899999999574e-05, 6.67500000000043e-05, 6.759700000000257e-05, 6.71109999999947e-05, 6.680600000000259e-05, 6.732000000000266e-05, 6.716699999999992e-05, 6.718000000000002e-05, 6.744499999999931e-05, 6.72909999999971e-05, 6.755499999999692e-05, 6.688900000000053e-05, 6.733400000000223e-05, 6.736099999999495e-05, 6.768000000000052e-05, 6.67500000000043e-05, 6.713899999999384e-05, 6.75280000000042e-05, 6.679199999999608e-05, 6.744499999999931e-05, 6.702700000000422e-05, 6.713900000000078e-05, 6.737500000000146e-05, 6.762499999999477e-05, 6.687500000000096e-05, 6.670899999999813e-05, 6.695799999999891e-05, 6.690200000000063e-05, 6.761100000000214e-05, 6.75280000000042e-05, 6.730600000000309e-05, 6.67359999999978e-05, 6.687500000000096e-05, 6.698600000000499e-05, 6.67359999999978e-05, 6.720799999999916e-05, 6.669399999999909e-05, 6.687500000000096e-05, 6.745799999999941e-05, 6.670799999999866e-05, 6.730599999999615e-05, 6.699999999999762e-05, 6.756900000000343e-05, 6.736100000000189e-05, 6.737500000000146e-05, 6.697199999999848e-05, 6.680599999999565e-05, 6.722200000000567e-05, 6.711100000000164e-05]</msg>
<status status="PASS" starttime="20201112 12:43:40.232" endtime="20201112 12:43:40.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.221" endtime="20201112 12:43:40.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.245" endtime="20201112 12:43:40.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:40.254" endtime="20201112 12:43:40.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.249" endtime="20201112 12:43:40.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.241" endtime="20201112 12:43:40.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.713" endtime="20201112 12:43:40.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.712" endtime="20201112 12:43:40.280"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.303" endtime="20201112 12:43:40.324"></status>
</kw>
<msg timestamp="20201112 12:43:40.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:40.300" endtime="20201112 12:43:40.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:40.327" endtime="20201112 12:43:40.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.334" endtime="20201112 12:43:40.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.293" endtime="20201112 12:43:40.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.287" endtime="20201112 12:43:40.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.357" endtime="20201112 12:43:40.709"></status>
</kw>
<msg timestamp="20201112 12:43:40.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041133847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041201833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:40.354" endtime="20201112 12:43:40.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041133847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041201833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:40.719" endtime="20201112 12:43:40.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.738" endtime="20201112 12:43:40.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.347" endtime="20201112 12:43:40.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.342" endtime="20201112 12:43:40.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:40.757" level="INFO">${RESULT} = [{'time': 0.041201833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.798599999999905e-05, 'source_diff': 6.798599999999905e-05}, {'time': 0.041291111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:40.748" endtime="20201112 12:43:40.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:40.788" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:40.759" endtime="20201112 12:43:40.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.800" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 12:43:40.797" endtime="20201112 12:43:40.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.805" level="INFO">VALUE: [6.798599999999905e-05, 6.794400000000034e-05, 6.779199999999708e-05, 6.788899999999459e-05, 6.780600000000359e-05, 6.774999999999837e-05, 6.824999999999887e-05, 6.798600000000599e-05, 6.769499999999956e-05, 6.830599999999715e-05, 6.852799999999826e-05, 6.845800000000041e-05, 6.77500000000053e-05, 6.791700000000067e-05, 6.876399999999894e-05, 6.82359999999993e-05, 6.802799999999776e-05, 6.862500000000271e-05, 6.862499999999577e-05, 6.866600000000195e-05, 6.855499999999792e-05, 6.829199999999758e-05, 6.829199999999758e-05, 6.830500000000461e-05, 6.805600000000384e-05, 6.776400000000488e-05, 6.84030000000016e-05, 6.863799999999587e-05, 6.781899999999674e-05, 6.812500000000221e-05, 6.832000000000366e-05, 6.781999999999622e-05, 6.838900000000203e-05, 6.791700000000067e-05, 6.830600000000409e-05, 6.779199999999708e-05, 6.855499999999792e-05, 6.844400000000084e-05, 6.772199999999923e-05, 6.847199999999998e-05, 6.801399999999819e-05, 6.806999999999647e-05, 6.774999999999837e-05, 6.804200000000427e-05, 6.799999999999862e-05, 6.801399999999819e-05, 6.827799999999801e-05, 6.806999999999647e-05, 6.79030000000011e-05, 6.819400000000059e-05]</msg>
<status status="PASS" starttime="20201112 12:43:40.802" endtime="20201112 12:43:40.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.790" endtime="20201112 12:43:40.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.815" endtime="20201112 12:43:40.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:40.823" endtime="20201112 12:43:40.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.819" endtime="20201112 12:43:40.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.810" endtime="20201112 12:43:40.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.282" endtime="20201112 12:43:40.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.281" endtime="20201112 12:43:40.850"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.873" endtime="20201112 12:43:40.894"></status>
</kw>
<msg timestamp="20201112 12:43:40.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:40.870" endtime="20201112 12:43:40.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:40.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:40.897" endtime="20201112 12:43:40.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.903" endtime="20201112 12:43:40.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.862" endtime="20201112 12:43:40.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.856" endtime="20201112 12:43:40.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:40.927" endtime="20201112 12:43:41.278"></status>
</kw>
<msg timestamp="20201112 12:43:41.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041496347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041565278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:40.924" endtime="20201112 12:43:41.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041496347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041565278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:41.288" endtime="20201112 12:43:41.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.307" endtime="20201112 12:43:41.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.916" endtime="20201112 12:43:41.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.912" endtime="20201112 12:43:41.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:41.326" level="INFO">${RESULT} = [{'time': 0.041565278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.89309999999943e-05, 'source_diff': 6.89309999999943e-05}, {'time': 0.041657514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:41.317" endtime="20201112 12:43:41.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:41.357" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:41.329" endtime="20201112 12:43:41.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.369" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 12:43:41.366" endtime="20201112 12:43:41.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.374" level="INFO">VALUE: [6.89309999999943e-05, 6.913900000000278e-05, 6.945900000000088e-05, 6.920900000000063e-05, 6.90700000000044e-05, 6.924999999999987e-05, 6.876399999999894e-05, 6.913900000000278e-05, 6.91109999999967e-05, 6.948600000000055e-05, 6.880600000000459e-05, 6.898700000000646e-05, 6.872199999999329e-05, 6.950000000000012e-05, 6.966599999999601e-05, 6.922200000000073e-05, 6.886099999999645e-05, 6.92230000000002e-05, 6.966699999999548e-05, 6.944400000000184e-05, 6.947300000000045e-05, 6.937500000000346e-05, 6.905500000000536e-05, 6.888900000000253e-05, 6.91109999999967e-05, 6.887499999999602e-05, 6.918100000000149e-05, 6.918099999999455e-05, 6.926299999999996e-05, 6.909699999999713e-05, 6.922200000000073e-05, 6.915300000000235e-05, 6.87359999999998e-05, 6.951399999999969e-05, 6.934699999999738e-05, 6.887499999999602e-05, 6.962499999999677e-05, 6.897200000000048e-05, 6.904099999999885e-05, 6.952799999999926e-05, 6.904099999999885e-05, 6.901299999999971e-05, 6.931900000000518e-05, 6.89030000000021e-05, 6.958399999999754e-05, 6.905499999999842e-05, 6.887500000000296e-05, 6.945799999999447e-05, 6.869400000000109e-05, 6.908399999999704e-05]</msg>
<status status="PASS" starttime="20201112 12:43:41.371" endtime="20201112 12:43:41.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.359" endtime="20201112 12:43:41.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.384" endtime="20201112 12:43:41.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:41.392" endtime="20201112 12:43:41.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.388" endtime="20201112 12:43:41.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.379" endtime="20201112 12:43:41.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.852" endtime="20201112 12:43:41.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:40.851" endtime="20201112 12:43:41.419"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.442" endtime="20201112 12:43:41.462"></status>
</kw>
<msg timestamp="20201112 12:43:41.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:41.438" endtime="20201112 12:43:41.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:41.466" endtime="20201112 12:43:41.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.472" endtime="20201112 12:43:41.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.431" endtime="20201112 12:43:41.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.425" endtime="20201112 12:43:41.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.496" endtime="20201112 12:43:41.847"></status>
</kw>
<msg timestamp="20201112 12:43:41.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04112475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041195361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:41.492" endtime="20201112 12:43:41.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04112475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041195361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:41.857" endtime="20201112 12:43:41.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.876" endtime="20201112 12:43:41.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.485" endtime="20201112 12:43:41.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.480" endtime="20201112 12:43:41.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:41.896" level="INFO">${RESULT} = [{'time': 0.041195361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.06109999999982e-05, 'source_diff': 7.06109999999982e-05}, {'time': 0.041288667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:41.887" endtime="20201112 12:43:41.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:41.930" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:41.898" endtime="20201112 12:43:41.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.941" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 12:43:41.939" endtime="20201112 12:43:41.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.946" level="INFO">VALUE: [7.06109999999982e-05, 6.994500000000181e-05, 7.026400000000044e-05, 6.986100000000439e-05, 7.037499999999752e-05, 6.977799999999951e-05, 7.002700000000028e-05, 7.012500000000421e-05, 6.976399999999994e-05, 7.052800000000026e-05, 7.058399999999854e-05, 7.02910000000001e-05, 7.062500000000471e-05, 7.012499999999727e-05, 6.980599999999865e-05, 7.063899999999734e-05, 7.031899999999924e-05, 6.972200000000123e-05, 6.987499999999702e-05, 7.054199999999983e-05, 7.06109999999982e-05, 7.038900000000403e-05, 7.052800000000026e-05, 7.047300000000145e-05, 7.036099999999795e-05, 7.051399999999375e-05, 7.048700000000102e-05, 7.05689999999995e-05, 7.04439999999959e-05, 7.037499999999752e-05, 7.015299999999641e-05, 7.027700000000053e-05, 6.976399999999994e-05, 7.051400000000069e-05, 7.054199999999983e-05, 6.981900000000568e-05, 7.062499999999777e-05, 7.013899999999684e-05, 7.040299999999666e-05, 6.977799999999951e-05, 6.990299999999616e-05, 7.013799999999737e-05, 7.058299999999906e-05, 6.980599999999865e-05, 6.973599999999386e-05, 6.977800000000645e-05, 6.983400000000473e-05, 6.977799999999951e-05, 7.019400000000259e-05, 7.005499999999942e-05]</msg>
<status status="PASS" starttime="20201112 12:43:41.943" endtime="20201112 12:43:41.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.932" endtime="20201112 12:43:41.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.956" endtime="20201112 12:43:41.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:41.965" endtime="20201112 12:43:41.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.960" endtime="20201112 12:43:41.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.951" endtime="20201112 12:43:41.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.421" endtime="20201112 12:43:41.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.420" endtime="20201112 12:43:41.991"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.014" endtime="20201112 12:43:42.035"></status>
</kw>
<msg timestamp="20201112 12:43:42.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:42.011" endtime="20201112 12:43:42.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:42.039" endtime="20201112 12:43:42.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.045" endtime="20201112 12:43:42.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.003" endtime="20201112 12:43:42.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.997" endtime="20201112 12:43:42.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.070" endtime="20201112 12:43:42.421"></status>
</kw>
<msg timestamp="20201112 12:43:42.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041402875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04147375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:42.066" endtime="20201112 12:43:42.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041402875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04147375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:42.431" endtime="20201112 12:43:42.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.450" endtime="20201112 12:43:42.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.059" endtime="20201112 12:43:42.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.054" endtime="20201112 12:43:42.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:42.468" level="INFO">${RESULT} = [{'time': 0.04147375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.087499999999802e-05, 'source_diff': 7.087499999999802e-05}, {'time': 0.041568014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:42.459" endtime="20201112 12:43:42.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:42.501" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:42.470" endtime="20201112 12:43:42.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.512" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 12:43:42.509" endtime="20201112 12:43:42.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.517" level="INFO">VALUE: [7.087499999999802e-05, 7.070800000000266e-05, 7.102800000000076e-05, 7.117999999999708e-05, 7.148600000000255e-05, 7.134699999999938e-05, 7.131999999999972e-05, 7.120899999999569e-05, 7.136099999999895e-05, 7.155500000000092e-05, 7.066599999999701e-05, 7.168000000000452e-05, 7.163900000000528e-05, 7.147199999999604e-05, 7.090199999999769e-05, 7.101400000000119e-05, 7.147200000000298e-05, 7.07360000000018e-05, 7.137499999999852e-05, 7.126400000000144e-05, 7.172200000000323e-05, 7.115299999999741e-05, 7.136199999999843e-05, 7.088799999999812e-05, 7.086100000000539e-05, 7.15560000000004e-05, 7.142999999999733e-05, 7.09160000000042e-05, 7.102800000000076e-05, 7.083299999999931e-05, 7.07230000000017e-05, 7.10559999999999e-05, 7.08480000000053e-05, 7.104100000000085e-05, 7.070799999999572e-05, 7.081899999999974e-05, 7.166599999999801e-05, 7.16109999999992e-05, 7.124999999999493e-05, 7.099999999999468e-05, 7.14030000000046e-05, 7.145800000000341e-05, 7.159799999999911e-05, 7.098600000000205e-05, 7.147199999999604e-05, 7.158300000000006e-05, 7.083299999999931e-05, 7.163899999999834e-05, 7.156999999999997e-05, 7.126400000000144e-05]</msg>
<status status="PASS" starttime="20201112 12:43:42.514" endtime="20201112 12:43:42.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.502" endtime="20201112 12:43:42.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.528" endtime="20201112 12:43:42.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:42.536" endtime="20201112 12:43:42.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.532" endtime="20201112 12:43:42.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.523" endtime="20201112 12:43:42.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.993" endtime="20201112 12:43:42.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.992" endtime="20201112 12:43:42.562"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.585" endtime="20201112 12:43:42.606"></status>
</kw>
<msg timestamp="20201112 12:43:42.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:42.582" endtime="20201112 12:43:42.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:42.610" endtime="20201112 12:43:42.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.616" endtime="20201112 12:43:42.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.575" endtime="20201112 12:43:42.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.569" endtime="20201112 12:43:42.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.640" endtime="20201112 12:43:42.993"></status>
</kw>
<msg timestamp="20201112 12:43:43.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041114014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041185917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:42.636" endtime="20201112 12:43:43.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041114014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041185917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:43.003" endtime="20201112 12:43:43.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.022" endtime="20201112 12:43:43.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.629" endtime="20201112 12:43:43.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.624" endtime="20201112 12:43:43.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:43.040" level="INFO">${RESULT} = [{'time': 0.041185917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.19030000000051e-05, 'source_diff': 7.19030000000051e-05}, {'time': 0.041276181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:43.031" endtime="20201112 12:43:43.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:43.073" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:43.042" endtime="20201112 12:43:43.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.085" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 12:43:43.082" endtime="20201112 12:43:43.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.091" level="INFO">VALUE: [7.19030000000051e-05, 7.22230000000032e-05, 7.262499999999977e-05, 7.194400000000434e-05, 7.254200000000183e-05, 7.244500000000431e-05, 7.194500000000381e-05, 7.183399999999979e-05, 7.207000000000047e-05, 7.205500000000142e-05, 7.208300000000056e-05, 7.244400000000484e-05, 7.191700000000467e-05, 7.247199999999704e-05, 7.226400000000244e-05, 7.208400000000004e-05, 7.241699999999823e-05, 7.190299999999816e-05, 7.213799999999937e-05, 7.212500000000621e-05, 7.176400000000194e-05, 7.232000000000072e-05, 7.206899999999405e-05, 7.245899999999694e-05, 7.24309999999978e-05, 7.231900000000124e-05, 7.245799999999747e-05, 7.198600000000305e-05, 7.268100000000499e-05, 7.236099999999995e-05, 7.26110000000002e-05, 7.237499999999952e-05, 7.188899999999859e-05, 7.247200000000398e-05, 7.177800000000151e-05, 7.180600000000065e-05, 7.218000000000502e-05, 7.187499999999902e-05, 7.263899999999934e-05, 7.209700000000013e-05, 7.222200000000373e-05, 7.190200000000563e-05, 7.226400000000244e-05, 7.19030000000051e-05, 7.223599999999636e-05, 7.241699999999823e-05, 7.257000000000097e-05, 7.248700000000302e-05, 7.205500000000142e-05, 7.249999999999618e-05]</msg>
<status status="PASS" starttime="20201112 12:43:43.087" endtime="20201112 12:43:43.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.075" endtime="20201112 12:43:43.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.100" endtime="20201112 12:43:43.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:43.109" endtime="20201112 12:43:43.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.104" endtime="20201112 12:43:43.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.096" endtime="20201112 12:43:43.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.564" endtime="20201112 12:43:43.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.563" endtime="20201112 12:43:43.135"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.158" endtime="20201112 12:43:43.179"></status>
</kw>
<msg timestamp="20201112 12:43:43.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:43.155" endtime="20201112 12:43:43.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:43.183" endtime="20201112 12:43:43.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.189" endtime="20201112 12:43:43.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.148" endtime="20201112 12:43:43.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.142" endtime="20201112 12:43:43.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.213" endtime="20201112 12:43:43.565"></status>
</kw>
<msg timestamp="20201112 12:43:43.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041345972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041419097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:43.209" endtime="20201112 12:43:43.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041345972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041419097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:43.575" endtime="20201112 12:43:43.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.594" endtime="20201112 12:43:43.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.202" endtime="20201112 12:43:43.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.197" endtime="20201112 12:43:43.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:43.612" level="INFO">${RESULT} = [{'time': 0.041419097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.312500000000027e-05, 'source_diff': 7.312500000000027e-05}, {'time': 0.041513375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:43.603" endtime="20201112 12:43:43.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:43.645" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:43.614" endtime="20201112 12:43:43.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.656" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 12:43:43.654" endtime="20201112 12:43:43.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.662" level="INFO">VALUE: [7.312500000000027e-05, 7.295799999999797e-05, 7.372200000000523e-05, 7.313899999999984e-05, 7.27360000000038e-05, 7.369499999999862e-05, 7.298700000000352e-05, 7.340299999999966e-05, 7.309700000000113e-05, 7.286100000000045e-05, 7.351400000000369e-05, 7.341699999999923e-05, 7.30560000000019e-05, 7.35690000000025e-05, 7.322200000000473e-05, 7.320799999999822e-05, 7.275000000000337e-05, 7.367999999999958e-05, 7.304100000000285e-05, 7.308300000000156e-05, 7.359700000000163e-05, 7.337500000000052e-05, 7.284699999999394e-05, 7.333300000000181e-05, 7.279200000000208e-05, 7.34439999999989e-05, 7.363900000000034e-05, 7.331900000000224e-05, 7.284699999999394e-05, 7.369399999999915e-05, 7.305599999999496e-05, 7.35690000000025e-05, 7.32639999999965e-05, 7.287500000000002e-05, 7.281900000000174e-05, 7.35969999999947e-05, 7.365299999999991e-05, 7.345899999999794e-05, 7.298600000000405e-05, 7.362500000000077e-05, 7.330500000000267e-05, 7.315300000000635e-05, 7.352799999999632e-05, 7.368100000000599e-05, 7.359800000000111e-05, 7.273599999999686e-05, 7.329200000000258e-05, 7.347200000000498e-05, 7.31110000000007e-05, 7.320800000000516e-05]</msg>
<status status="PASS" starttime="20201112 12:43:43.658" endtime="20201112 12:43:43.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.647" endtime="20201112 12:43:43.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.671" endtime="20201112 12:43:43.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:43.680" endtime="20201112 12:43:43.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.675" endtime="20201112 12:43:43.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.666" endtime="20201112 12:43:43.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.137" endtime="20201112 12:43:43.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.136" endtime="20201112 12:43:43.706"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.729" endtime="20201112 12:43:43.750"></status>
</kw>
<msg timestamp="20201112 12:43:43.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:43.726" endtime="20201112 12:43:43.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:43.753" endtime="20201112 12:43:43.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.760" endtime="20201112 12:43:43.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.718" endtime="20201112 12:43:43.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.712" endtime="20201112 12:43:43.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.783" endtime="20201112 12:43:44.135"></status>
</kw>
<msg timestamp="20201112 12:43:44.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041225625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041299694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:43.780" endtime="20201112 12:43:44.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041225625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041299694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:44.144" endtime="20201112 12:43:44.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.164" endtime="20201112 12:43:44.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.773" endtime="20201112 12:43:44.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.768" endtime="20201112 12:43:44.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:44.182" level="INFO">${RESULT} = [{'time': 0.041299694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.406899999999605e-05, 'source_diff': 7.406899999999605e-05}, {'time': 0.041395986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:44.172" endtime="20201112 12:43:44.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:44.216" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:44.184" endtime="20201112 12:43:44.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.227" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 12:43:44.225" endtime="20201112 12:43:44.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.233" level="INFO">VALUE: [7.406899999999605e-05, 7.44439999999999e-05, 7.461099999999526e-05, 7.448599999999861e-05, 7.419399999999965e-05, 7.39309999999993e-05, 7.376400000000394e-05, 7.461099999999526e-05, 7.384700000000188e-05, 7.372199999999829e-05, 7.424999999999793e-05, 7.429199999999664e-05, 7.420799999999922e-05, 7.413900000000084e-05, 7.416699999999998e-05, 7.449999999999818e-05, 7.409700000000213e-05, 7.447200000000598e-05, 7.40560000000029e-05, 7.377800000000351e-05, 7.388900000000059e-05, 7.39309999999993e-05, 7.440200000000119e-05, 7.422199999999879e-05, 7.420799999999922e-05, 7.40969999999952e-05, 7.425000000000487e-05, 7.408299999999562e-05, 7.399999999999768e-05, 7.465300000000091e-05, 7.373599999999786e-05, 7.391699999999973e-05, 7.405500000000342e-05, 7.397200000000548e-05, 7.405499999999648e-05, 7.437500000000152e-05, 7.425000000000487e-05, 7.413900000000084e-05, 7.395799999999897e-05, 7.386099999999451e-05, 7.429099999999716e-05, 7.422199999999879e-05, 7.383400000000179e-05, 7.430500000000367e-05, 7.409700000000213e-05, 7.441700000000023e-05, 7.437500000000152e-05, 7.449999999999818e-05, 7.399999999999768e-05, 7.468000000000058e-05]</msg>
<status status="PASS" starttime="20201112 12:43:44.230" endtime="20201112 12:43:44.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.218" endtime="20201112 12:43:44.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.243" endtime="20201112 12:43:44.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:44.251" endtime="20201112 12:43:44.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.247" endtime="20201112 12:43:44.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.238" endtime="20201112 12:43:44.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.708" endtime="20201112 12:43:44.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.707" endtime="20201112 12:43:44.277"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.300" endtime="20201112 12:43:44.321"></status>
</kw>
<msg timestamp="20201112 12:43:44.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:44.297" endtime="20201112 12:43:44.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:44.324" endtime="20201112 12:43:44.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.331" endtime="20201112 12:43:44.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.290" endtime="20201112 12:43:44.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.284" endtime="20201112 12:43:44.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.354" endtime="20201112 12:43:44.704"></status>
</kw>
<msg timestamp="20201112 12:43:44.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040988694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041064097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:44.351" endtime="20201112 12:43:44.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040988694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041064097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:44.714" endtime="20201112 12:43:44.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.733" endtime="20201112 12:43:44.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.344" endtime="20201112 12:43:44.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.339" endtime="20201112 12:43:44.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:44.751" level="INFO">${RESULT} = [{'time': 0.041064097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.540300000000166e-05, 'source_diff': 7.540300000000166e-05}, {'time': 0.041160417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:44.742" endtime="20201112 12:43:44.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:44.783" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:44.753" endtime="20201112 12:43:44.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.795" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 12:43:44.792" endtime="20201112 12:43:44.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.801" level="INFO">VALUE: [7.540300000000166e-05, 7.540299999999472e-05, 7.554200000000483e-05, 7.536100000000295e-05, 7.465200000000144e-05, 7.558299999999712e-05, 7.568100000000105e-05, 7.558400000000354e-05, 7.483299999999637e-05, 7.558400000000354e-05, 7.530600000000415e-05, 7.479199999999714e-05, 7.488899999999465e-05, 7.534799999999592e-05, 7.511099999999576e-05, 7.519500000000012e-05, 7.481900000000374e-05, 7.497199999999954e-05, 7.53890000000021e-05, 7.497299999999901e-05, 7.55969999999967e-05, 7.493000000000083e-05, 7.477800000000451e-05, 7.524999999999893e-05, 7.502800000000476e-05, 7.505599999999696e-05, 7.47769999999981e-05, 7.523599999999936e-05, 7.499999999999868e-05, 7.559799999999617e-05, 7.488900000000159e-05, 7.519400000000065e-05, 7.513900000000184e-05, 7.487499999999508e-05, 7.53189999999973e-05, 7.474999999999843e-05, 7.570800000000072e-05, 7.552799999999832e-05, 7.520899999999969e-05, 7.492999999999389e-05, 7.533300000000381e-05, 7.472299999999876e-05, 7.50969999999962e-05, 7.484699999999594e-05, 7.532000000000372e-05, 7.473699999999833e-05, 7.502799999999782e-05, 7.504199999999739e-05, 7.518000000000108e-05, 7.483299999999637e-05]</msg>
<status status="PASS" starttime="20201112 12:43:44.798" endtime="20201112 12:43:44.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.785" endtime="20201112 12:43:44.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.816" endtime="20201112 12:43:44.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:44.825" endtime="20201112 12:43:44.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.820" endtime="20201112 12:43:44.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.812" endtime="20201112 12:43:44.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.280" endtime="20201112 12:43:44.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.278" endtime="20201112 12:43:44.851"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.874" endtime="20201112 12:43:44.895"></status>
</kw>
<msg timestamp="20201112 12:43:44.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:44.871" endtime="20201112 12:43:44.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:44.898" endtime="20201112 12:43:44.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.905" endtime="20201112 12:43:44.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.864" endtime="20201112 12:43:44.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.858" endtime="20201112 12:43:44.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.929" endtime="20201112 12:43:45.282"></status>
</kw>
<msg timestamp="20201112 12:43:45.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041512333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041588236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:44.925" endtime="20201112 12:43:45.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041512333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041588236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:45.292" endtime="20201112 12:43:45.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.311" endtime="20201112 12:43:45.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.918" endtime="20201112 12:43:45.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.913" endtime="20201112 12:43:45.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:45.329" level="INFO">${RESULT} = [{'time': 0.041588236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.590300000000216e-05, 'source_diff': 7.590300000000216e-05}, {'time': 0.041688556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:45.320" endtime="20201112 12:43:45.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:45.360" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:45.331" endtime="20201112 12:43:45.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.372" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 12:43:45.369" endtime="20201112 12:43:45.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.377" level="INFO">VALUE: [7.590300000000216e-05, 7.662500000000377e-05, 7.629199999999864e-05, 7.652799999999932e-05, 7.590300000000216e-05, 7.643000000000233e-05, 7.670799999999478e-05, 7.655599999999846e-05, 7.656899999999855e-05, 7.669400000000215e-05, 7.670799999999478e-05, 7.6151999999996e-05, 7.615300000000241e-05, 7.634799999999692e-05, 7.627799999999907e-05, 7.651399999999975e-05, 7.62639999999995e-05, 7.604199999999839e-05, 7.595800000000097e-05, 7.665299999999597e-05, 7.66110000000042e-05, 7.599999999999968e-05, 7.629099999999917e-05, 7.640300000000266e-05, 7.581900000000474e-05, 7.656999999999803e-05, 7.579099999999866e-05, 7.618100000000155e-05, 7.637499999999658e-05, 7.601399999999925e-05, 7.677799999999957e-05, 7.645799999999453e-05, 7.622200000000079e-05, 7.611099999999676e-05, 7.617999999999514e-05, 7.584700000000388e-05, 7.657000000000497e-05, 7.60839999999971e-05, 7.601399999999925e-05, 7.59440000000014e-05, 7.599999999999968e-05, 7.658299999999812e-05, 7.641600000000276e-05, 7.608300000000456e-05, 7.586100000000345e-05, 7.654199999999889e-05, 7.583300000000431e-05, 7.615300000000241e-05, 7.590300000000216e-05, 7.607000000000447e-05]</msg>
<status status="PASS" starttime="20201112 12:43:45.374" endtime="20201112 12:43:45.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.362" endtime="20201112 12:43:45.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.388" endtime="20201112 12:43:45.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:45.397" endtime="20201112 12:43:45.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.392" endtime="20201112 12:43:45.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.383" endtime="20201112 12:43:45.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.853" endtime="20201112 12:43:45.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.852" endtime="20201112 12:43:45.423"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.446" endtime="20201112 12:43:45.467"></status>
</kw>
<msg timestamp="20201112 12:43:45.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:45.443" endtime="20201112 12:43:45.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:45.471" endtime="20201112 12:43:45.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.477" endtime="20201112 12:43:45.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.436" endtime="20201112 12:43:45.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.430" endtime="20201112 12:43:45.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.501" endtime="20201112 12:43:45.852"></status>
</kw>
<msg timestamp="20201112 12:43:45.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041114722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041191639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:45.497" endtime="20201112 12:43:45.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041114722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041191639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:45.861" endtime="20201112 12:43:45.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.881" endtime="20201112 12:43:45.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.490" endtime="20201112 12:43:45.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.485" endtime="20201112 12:43:45.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:45.898" level="INFO">${RESULT} = [{'time': 0.041191639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.691700000000273e-05, 'source_diff': 7.691700000000273e-05}, {'time': 0.041290944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:45.889" endtime="20201112 12:43:45.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:45.930" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:45.901" endtime="20201112 12:43:45.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.941" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 12:43:45.939" endtime="20201112 12:43:45.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.947" level="INFO">VALUE: [7.691700000000273e-05, 7.71110000000047e-05, 7.75969999999987e-05, 7.741599999999682e-05, 7.709700000000513e-05, 7.711099999999776e-05, 7.762500000000477e-05, 7.704199999999939e-05, 7.750000000000118e-05, 7.723599999999442e-05, 7.770900000000219e-05, 7.704199999999939e-05, 7.712500000000427e-05, 7.755599999999946e-05, 7.773600000000186e-05, 7.750000000000118e-05, 7.701400000000025e-05, 7.719399999999571e-05, 7.748600000000161e-05, 7.750000000000118e-05, 7.754199999999989e-05, 7.677799999999957e-05, 7.725000000000093e-05, 7.745800000000247e-05, 7.673600000000086e-05, 7.712500000000427e-05, 7.698600000000111e-05, 7.736099999999801e-05, 7.741700000000323e-05, 7.676300000000053e-05, 7.755499999999999e-05, 7.697200000000154e-05, 7.744399999999596e-05, 7.765299999999697e-05, 7.677800000000651e-05, 7.744499999999543e-05, 7.715200000000394e-05, 7.688800000000412e-05, 7.697300000000101e-05, 7.72640000000005e-05, 7.736100000000495e-05, 7.691600000000326e-05, 7.69169999999958e-05, 7.716699999999604e-05, 7.683299999999837e-05, 7.672200000000129e-05, 7.732000000000572e-05, 7.698600000000111e-05, 7.765300000000391e-05, 7.766700000000348e-05]</msg>
<status status="PASS" starttime="20201112 12:43:45.943" endtime="20201112 12:43:45.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.932" endtime="20201112 12:43:45.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.956" endtime="20201112 12:43:45.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:45.966" endtime="20201112 12:43:45.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.962" endtime="20201112 12:43:45.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.952" endtime="20201112 12:43:45.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.425" endtime="20201112 12:43:45.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.424" endtime="20201112 12:43:45.993"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.016" endtime="20201112 12:43:46.037"></status>
</kw>
<msg timestamp="20201112 12:43:46.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:46.013" endtime="20201112 12:43:46.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:46.040" endtime="20201112 12:43:46.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.047" endtime="20201112 12:43:46.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.005" endtime="20201112 12:43:46.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.999" endtime="20201112 12:43:46.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.071" endtime="20201112 12:43:46.422"></status>
</kw>
<msg timestamp="20201112 12:43:46.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041358042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041435806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:46.067" endtime="20201112 12:43:46.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041358042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041435806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:46.432" endtime="20201112 12:43:46.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.451" endtime="20201112 12:43:46.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.060" endtime="20201112 12:43:46.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.055" endtime="20201112 12:43:46.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:46.469" level="INFO">${RESULT} = [{'time': 0.041435806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.7764000000001e-05, 'source_diff': 7.7764000000001e-05}, {'time': 0.041533125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201112 12:43:46.459" endtime="20201112 12:43:46.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:46.502" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:46.471" endtime="20201112 12:43:46.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.513" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 12:43:46.511" endtime="20201112 12:43:46.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.519" level="INFO">VALUE: [7.7764000000001e-05, 7.801399999999431e-05, 7.779100000000067e-05, 7.795800000000297e-05, 7.836100000000595e-05, 7.86519999999985e-05, 7.806900000000006e-05, 7.769399999999621e-05, 7.770799999999578e-05, 7.8458999999996e-05, 7.817999999999714e-05, 7.787499999999808e-05, 7.833299999999987e-05, 7.85839999999996e-05, 7.800000000000168e-05, 7.83190000000003e-05, 7.866599999999807e-05, 7.772200000000229e-05, 7.794500000000287e-05, 7.790199999999775e-05, 7.801400000000125e-05, 7.815299999999747e-05, 7.829200000000064e-05, 7.86389999999984e-05, 7.829200000000064e-05, 7.83190000000003e-05, 7.794399999999646e-05, 7.830500000000074e-05, 7.770800000000272e-05, 7.836099999999901e-05, 7.777800000000057e-05, 7.823600000000236e-05, 7.866700000000448e-05, 7.867999999999764e-05, 7.784699999999894e-05, 7.790299999999722e-05, 7.83190000000003e-05, 7.84310000000038e-05, 7.791599999999732e-05, 7.780599999999971e-05, 7.858300000000012e-05, 7.780599999999971e-05, 7.805500000000049e-05, 7.856900000000056e-05, 7.773600000000186e-05, 7.806999999999953e-05, 7.81110000000057e-05, 7.856900000000056e-05, 7.836099999999901e-05, 7.766700000000348e-05]</msg>
<status status="PASS" starttime="20201112 12:43:46.516" endtime="20201112 12:43:46.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.504" endtime="20201112 12:43:46.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.529" endtime="20201112 12:43:46.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:46.537" endtime="20201112 12:43:46.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.533" endtime="20201112 12:43:46.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.524" endtime="20201112 12:43:46.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.995" endtime="20201112 12:43:46.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.994" endtime="20201112 12:43:46.565"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.588" endtime="20201112 12:43:46.609"></status>
</kw>
<msg timestamp="20201112 12:43:46.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:46.584" endtime="20201112 12:43:46.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:46.612" endtime="20201112 12:43:46.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.619" endtime="20201112 12:43:46.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.577" endtime="20201112 12:43:46.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.571" endtime="20201112 12:43:46.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.642" endtime="20201112 12:43:46.994"></status>
</kw>
<msg timestamp="20201112 12:43:47.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042533097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042612361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:46.639" endtime="20201112 12:43:47.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042533097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042612361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:47.003" endtime="20201112 12:43:47.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.023" endtime="20201112 12:43:47.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.632" endtime="20201112 12:43:47.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.627" endtime="20201112 12:43:47.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:47.041" level="INFO">${RESULT} = [{'time': 0.042612361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.92640000000025e-05, 'source_diff': 7.92640000000025e-05}, {'time': 0.042709597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:47.031" endtime="20201112 12:43:47.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:47.072" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:47.043" endtime="20201112 12:43:47.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.083" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 12:43:47.081" endtime="20201112 12:43:47.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.089" level="INFO">VALUE: [7.92640000000025e-05, 7.877800000000157e-05, 7.89589999999965e-05, 7.954099999999548e-05, 7.96389999999994e-05, 7.895799999999703e-05, 7.936100000000001e-05, 7.89169999999978e-05, 7.908300000000063e-05, 7.916699999999804e-05, 7.901400000000225e-05, 7.911099999999976e-05, 7.879200000000114e-05, 7.955599999999452e-05, 7.948600000000361e-05, 7.968100000000505e-05, 7.891599999999832e-05, 7.890299999999822e-05, 7.945799999999753e-05, 7.892999999999789e-05, 7.936199999999949e-05, 7.879200000000114e-05, 7.961100000000026e-05, 7.965299999999897e-05, 7.89169999999978e-05, 7.957000000000103e-05, 7.958300000000113e-05, 7.884699999999994e-05, 7.89719999999966e-05, 7.89440000000044e-05, 7.95840000000006e-05, 7.888899999999865e-05, 7.886099999999951e-05, 7.940299999999872e-05, 7.89589999999965e-05, 7.936100000000001e-05, 7.965299999999897e-05, 7.966700000000548e-05, 7.93190000000013e-05, 7.923599999999642e-05, 7.901299999999584e-05, 7.900000000000268e-05, 7.890300000000516e-05, 7.880600000000071e-05, 7.952800000000232e-05, 7.918099999999761e-05, 7.91389999999989e-05, 7.893099999999736e-05, 7.90970000000002e-05, 7.952700000000285e-05]</msg>
<status status="PASS" starttime="20201112 12:43:47.085" endtime="20201112 12:43:47.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.074" endtime="20201112 12:43:47.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.098" endtime="20201112 12:43:47.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:47.107" endtime="20201112 12:43:47.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.102" endtime="20201112 12:43:47.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.094" endtime="20201112 12:43:47.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.567" endtime="20201112 12:43:47.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.566" endtime="20201112 12:43:47.133"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.158" endtime="20201112 12:43:47.179"></status>
</kw>
<msg timestamp="20201112 12:43:47.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:47.154" endtime="20201112 12:43:47.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:47.182" endtime="20201112 12:43:47.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.189" endtime="20201112 12:43:47.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.147" endtime="20201112 12:43:47.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.139" endtime="20201112 12:43:47.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.214" endtime="20201112 12:43:47.564"></status>
</kw>
<msg timestamp="20201112 12:43:47.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042726653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042806708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:47.211" endtime="20201112 12:43:47.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042726653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042806708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:47.574" endtime="20201112 12:43:47.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.593" endtime="20201112 12:43:47.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.203" endtime="20201112 12:43:47.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.198" endtime="20201112 12:43:47.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:47.612" level="INFO">${RESULT} = [{'time': 0.042806708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.005499999999555e-05, 'source_diff': 8.005499999999555e-05}, {'time': 0.042905028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:47.603" endtime="20201112 12:43:47.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:47.643" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:47.614" endtime="20201112 12:43:47.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.654" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 12:43:47.652" endtime="20201112 12:43:47.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.660" level="INFO">VALUE: [8.005499999999555e-05, 8.037500000000058e-05, 8.033300000000188e-05, 7.983300000000138e-05, 8.00970000000012e-05, 8.06390000000004e-05, 8.033300000000188e-05, 8.051400000000375e-05, 8.055500000000299e-05, 8.06390000000004e-05, 7.993000000000583e-05, 8.062500000000083e-05, 8.022200000000479e-05, 8.037500000000058e-05, 8.051399999999681e-05, 8.048599999999767e-05, 7.987500000000008e-05, 8.056900000000256e-05, 7.987500000000008e-05, 8.000000000000368e-05, 8.055499999999605e-05, 8.02919999999957e-05, 8.061100000000126e-05, 7.998600000000411e-05, 8.077800000000357e-05, 8.034700000000145e-05, 7.99169999999988e-05, 8.061100000000126e-05, 8.016700000000598e-05, 8.024999999999699e-05, 7.994399999999846e-05, 7.986100000000051e-05, 8.007000000000153e-05, 8.015299999999947e-05, 8.052700000000385e-05, 7.995799999999803e-05, 8.056900000000256e-05, 8.022200000000479e-05, 8.04169999999993e-05, 7.980600000000171e-05, 8.07770000000041e-05, 8.054099999999648e-05, 8.06390000000004e-05, 8.055600000000246e-05, 8.029100000000317e-05, 8.009699999999426e-05, 7.994500000000487e-05, 8.030500000000274e-05, 8.038900000000015e-05, 7.983299999999444e-05]</msg>
<status status="PASS" starttime="20201112 12:43:47.657" endtime="20201112 12:43:47.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.645" endtime="20201112 12:43:47.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.670" endtime="20201112 12:43:47.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:47.678" endtime="20201112 12:43:47.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.673" endtime="20201112 12:43:47.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.665" endtime="20201112 12:43:47.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.135" endtime="20201112 12:43:47.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.134" endtime="20201112 12:43:47.704"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.728" endtime="20201112 12:43:47.749"></status>
</kw>
<msg timestamp="20201112 12:43:47.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:47.724" endtime="20201112 12:43:47.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:47.752" endtime="20201112 12:43:47.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.759" endtime="20201112 12:43:47.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.717" endtime="20201112 12:43:47.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.711" endtime="20201112 12:43:47.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.784" endtime="20201112 12:43:48.136"></status>
</kw>
<msg timestamp="20201112 12:43:48.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041299333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041380361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:47.781" endtime="20201112 12:43:48.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041299333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041380361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:48.146" endtime="20201112 12:43:48.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.165" endtime="20201112 12:43:48.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.773" endtime="20201112 12:43:48.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.768" endtime="20201112 12:43:48.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:48.183" level="INFO">${RESULT} = [{'time': 0.041380361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.102799999999688e-05, 'source_diff': 8.102799999999688e-05}, {'time': 0.041479625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:48.173" endtime="20201112 12:43:48.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:48.214" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:48.185" endtime="20201112 12:43:48.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.226" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 12:43:48.223" endtime="20201112 12:43:48.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.232" level="INFO">VALUE: [8.102799999999688e-05, 8.116700000000004e-05, 8.136099999999508e-05, 8.154200000000389e-05, 8.072199999999835e-05, 8.127799999999713e-05, 8.086099999999458e-05, 8.151400000000475e-05, 8.138799999999474e-05, 8.073599999999792e-05, 8.115300000000047e-05, 8.10970000000022e-05, 8.15970000000027e-05, 8.119399999999971e-05, 8.075000000000443e-05, 8.136100000000202e-05, 8.14170000000003e-05, 8.118099999999961e-05, 8.077799999999663e-05, 8.083299999999544e-05, 8.147200000000604e-05, 8.166599999999413e-05, 8.143099999999986e-05, 8.119499999999918e-05, 8.158299999999619e-05, 8.083400000000185e-05, 8.07369999999974e-05, 8.145799999999953e-05, 8.151399999999781e-05, 8.133300000000288e-05, 8.148599999999867e-05, 8.158300000000313e-05, 8.111099999999483e-05, 8.095799999999903e-05, 8.101400000000425e-05, 8.122299999999832e-05, 8.163899999999447e-05, 8.070799999999878e-05, 8.152799999999738e-05, 8.101300000000478e-05, 8.159699999999576e-05, 8.155599999999652e-05, 8.129100000000417e-05, 8.083300000000238e-05, 8.134700000000245e-05, 8.155500000000399e-05, 8.172199999999935e-05, 8.169400000000021e-05, 8.093099999999936e-05, 8.097200000000554e-05]</msg>
<status status="PASS" starttime="20201112 12:43:48.228" endtime="20201112 12:43:48.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.216" endtime="20201112 12:43:48.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.242" endtime="20201112 12:43:48.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:48.251" endtime="20201112 12:43:48.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.246" endtime="20201112 12:43:48.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.237" endtime="20201112 12:43:48.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.706" endtime="20201112 12:43:48.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.705" endtime="20201112 12:43:48.278"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.301" endtime="20201112 12:43:48.322"></status>
</kw>
<msg timestamp="20201112 12:43:48.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:48.297" endtime="20201112 12:43:48.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:48.325" endtime="20201112 12:43:48.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.332" endtime="20201112 12:43:48.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.290" endtime="20201112 12:43:48.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.284" endtime="20201112 12:43:48.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.357" endtime="20201112 12:43:48.708"></status>
</kw>
<msg timestamp="20201112 12:43:48.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041250847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041332764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:48.354" endtime="20201112 12:43:48.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041250847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041332764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:48.718" endtime="20201112 12:43:48.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.737" endtime="20201112 12:43:48.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.345" endtime="20201112 12:43:48.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.340" endtime="20201112 12:43:48.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:48.755" level="INFO">${RESULT} = [{'time': 0.041332764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.19170000000008e-05, 'source_diff': 8.19170000000008e-05}, {'time': 0.041433111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:48.745" endtime="20201112 12:43:48.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:48.788" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:48.757" endtime="20201112 12:43:48.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.799" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 12:43:48.797" endtime="20201112 12:43:48.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.805" level="INFO">VALUE: [8.19170000000008e-05, 8.274999999999949e-05, 8.277800000000557e-05, 8.276299999999959e-05, 8.265299999999504e-05, 8.187500000000208e-05, 8.187499999999515e-05, 8.222300000000626e-05, 8.272200000000035e-05, 8.244400000000096e-05, 8.265300000000197e-05, 8.182000000000328e-05, 8.258300000000413e-05, 8.184700000000295e-05, 8.201399999999831e-05, 8.222199999999985e-05, 8.219500000000018e-05, 8.237499999999565e-05, 8.262500000000284e-05, 8.270900000000025e-05, 8.177799999999763e-05, 8.245800000000053e-05, 8.206899999999712e-05, 8.222199999999985e-05, 8.186100000000252e-05, 8.255599999999752e-05, 8.18049999999973e-05, 8.258299999999719e-05, 8.272200000000035e-05, 8.26390000000024e-05, 8.256899999999762e-05, 8.238900000000215e-05, 8.188900000000165e-05, 8.244400000000096e-05, 8.224999999999899e-05, 8.247299999999957e-05, 8.19170000000008e-05, 8.195800000000003e-05, 8.238899999999522e-05, 8.180599999999677e-05, 8.201399999999831e-05, 8.177799999999763e-05, 8.24720000000001e-05, 8.18049999999973e-05, 8.176399999999806e-05, 8.212500000000234e-05, 8.265299999999504e-05, 8.201299999999884e-05, 8.25970000000037e-05, 8.262500000000284e-05]</msg>
<status status="PASS" starttime="20201112 12:43:48.802" endtime="20201112 12:43:48.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.790" endtime="20201112 12:43:48.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.814" endtime="20201112 12:43:48.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:48.823" endtime="20201112 12:43:48.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.818" endtime="20201112 12:43:48.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.810" endtime="20201112 12:43:48.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.280" endtime="20201112 12:43:48.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.279" endtime="20201112 12:43:48.849"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.872" endtime="20201112 12:43:48.893"></status>
</kw>
<msg timestamp="20201112 12:43:48.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:48.869" endtime="20201112 12:43:48.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:48.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:48.897" endtime="20201112 12:43:48.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.903" endtime="20201112 12:43:48.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.862" endtime="20201112 12:43:48.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.856" endtime="20201112 12:43:48.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:48.927" endtime="20201112 12:43:49.281"></status>
</kw>
<msg timestamp="20201112 12:43:49.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041249389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041332667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:48.924" endtime="20201112 12:43:49.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041249389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041332667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:49.291" endtime="20201112 12:43:49.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.310" endtime="20201112 12:43:49.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.916" endtime="20201112 12:43:49.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.911" endtime="20201112 12:43:49.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:49.328" level="INFO">${RESULT} = [{'time': 0.041332667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.327799999999913e-05, 'source_diff': 8.327799999999913e-05}, {'time': 0.041433931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:49.319" endtime="20201112 12:43:49.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:49.359" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:49.330" endtime="20201112 12:43:49.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.370" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 12:43:49.368" endtime="20201112 12:43:49.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.376" level="INFO">VALUE: [8.327799999999913e-05, 8.297300000000007e-05, 8.352799999999938e-05, 8.36249999999969e-05, 8.323600000000042e-05, 8.36390000000034e-05, 8.281999999999734e-05, 8.361100000000427e-05, 8.295800000000103e-05, 8.283299999999744e-05, 8.29170000000018e-05, 8.359800000000417e-05, 8.2846999999997e-05, 8.356899999999862e-05, 8.294399999999452e-05, 8.29720000000006e-05, 8.337499999999665e-05, 8.312500000000334e-05, 8.323600000000042e-05, 8.302799999999888e-05, 8.324999999999999e-05, 8.338799999999674e-05, 8.304099999999898e-05, 8.315300000000247e-05, 8.299999999999974e-05, 8.290199999999581e-05, 8.2846999999997e-05, 8.276399999999906e-05, 8.31669999999951e-05, 8.327799999999913e-05, 8.33469999999975e-05, 8.301399999999931e-05, 8.322200000000085e-05, 8.29590000000005e-05, 8.319499999999425e-05, 8.311099999999683e-05, 8.2846999999997e-05, 8.287500000000309e-05, 8.36249999999969e-05, 8.355599999999852e-05, 8.318000000000214e-05, 8.290300000000222e-05, 8.357000000000503e-05, 8.306899999999812e-05, 8.36390000000034e-05, 8.337500000000359e-05, 8.311099999999683e-05, 8.283299999999744e-05, 8.337500000000359e-05, 8.36390000000034e-05]</msg>
<status status="PASS" starttime="20201112 12:43:49.373" endtime="20201112 12:43:49.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.361" endtime="20201112 12:43:49.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.386" endtime="20201112 12:43:49.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:49.394" endtime="20201112 12:43:49.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.390" endtime="20201112 12:43:49.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.381" endtime="20201112 12:43:49.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.851" endtime="20201112 12:43:49.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:48.850" endtime="20201112 12:43:49.421"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.444" endtime="20201112 12:43:49.465"></status>
</kw>
<msg timestamp="20201112 12:43:49.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:49.440" endtime="20201112 12:43:49.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:49.468" endtime="20201112 12:43:49.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.475" endtime="20201112 12:43:49.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.433" endtime="20201112 12:43:49.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.427" endtime="20201112 12:43:49.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.499" endtime="20201112 12:43:49.852"></status>
</kw>
<msg timestamp="20201112 12:43:49.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041141819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041226028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:49.495" endtime="20201112 12:43:49.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041141819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041226028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:49.862" endtime="20201112 12:43:49.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.881" endtime="20201112 12:43:49.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.488" endtime="20201112 12:43:49.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.483" endtime="20201112 12:43:49.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:49.899" level="INFO">${RESULT} = [{'time': 0.041226028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.420899999999482e-05, 'source_diff': 8.420899999999482e-05}, {'time': 0.041331347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:49.890" endtime="20201112 12:43:49.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:49.930" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:49.901" endtime="20201112 12:43:49.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.941" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 12:43:49.939" endtime="20201112 12:43:49.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.947" level="INFO">VALUE: [8.420899999999482e-05, 8.448599999999473e-05, 8.452800000000038e-05, 8.456899999999962e-05, 8.436099999999808e-05, 8.402799999999988e-05, 8.427700000000066e-05, 8.404099999999998e-05, 8.415299999999654e-05, 8.442999999999645e-05, 8.456899999999962e-05, 8.409699999999826e-05, 8.401400000000031e-05, 8.463899999999747e-05, 8.390199999999681e-05, 8.395799999999509e-05, 8.405599999999902e-05, 8.445800000000253e-05, 8.466700000000354e-05, 8.37370000000004e-05, 8.370799999999484e-05, 8.41799999999962e-05, 8.420799999999534e-05, 8.39170000000028e-05, 8.372200000000135e-05, 8.388899999999672e-05, 8.468100000000311e-05, 8.373600000000092e-05, 8.395800000000203e-05, 8.423599999999448e-05, 8.38190000000058e-05, 8.447199999999516e-05, 8.436100000000502e-05, 8.456999999999909e-05, 8.433299999999894e-05, 8.39720000000016e-05, 8.46249999999979e-05, 8.413899999999697e-05, 8.470899999999532e-05, 8.376400000000006e-05, 8.425000000000099e-05, 8.46249999999979e-05, 8.390300000000323e-05, 8.466600000000407e-05, 8.411099999999783e-05, 8.455600000000646e-05, 8.42919999999997e-05, 8.455599999999952e-05, 8.437500000000459e-05, 8.452800000000038e-05]</msg>
<status status="PASS" starttime="20201112 12:43:49.944" endtime="20201112 12:43:49.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.932" endtime="20201112 12:43:49.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.962" endtime="20201112 12:43:49.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:49.971" endtime="20201112 12:43:49.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.966" endtime="20201112 12:43:49.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.958" endtime="20201112 12:43:49.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.423" endtime="20201112 12:43:49.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.422" endtime="20201112 12:43:49.997"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.020" endtime="20201112 12:43:50.042"></status>
</kw>
<msg timestamp="20201112 12:43:50.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:50.017" endtime="20201112 12:43:50.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:50.045" endtime="20201112 12:43:50.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.051" endtime="20201112 12:43:50.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.010" endtime="20201112 12:43:50.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.004" endtime="20201112 12:43:50.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.075" endtime="20201112 12:43:50.428"></status>
</kw>
<msg timestamp="20201112 12:43:50.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041317681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041403292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:50.072" endtime="20201112 12:43:50.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041317681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041403292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:50.437" endtime="20201112 12:43:50.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.457" endtime="20201112 12:43:50.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.064" endtime="20201112 12:43:50.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.060" endtime="20201112 12:43:50.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:50.476" level="INFO">${RESULT} = [{'time': 0.041403292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.561099999999933e-05, 'source_diff': 8.561099999999933e-05}, {'time': 0.041506625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:50.467" endtime="20201112 12:43:50.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:50.507" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:50.478" endtime="20201112 12:43:50.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.518" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 12:43:50.516" endtime="20201112 12:43:50.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.524" level="INFO">VALUE: [8.561099999999933e-05, 8.483299999999944e-05, 8.483399999999891e-05, 8.56249999999989e-05, 8.472200000000235e-05, 8.563799999999899e-05, 8.570899999999632e-05, 8.498600000000217e-05, 8.547300000000257e-05, 8.555500000000105e-05, 8.486099999999858e-05, 8.56799999999977e-05, 8.51249999999984e-05, 8.570800000000378e-05, 8.570799999999684e-05, 8.552800000000138e-05, 8.540299999999779e-05, 8.473600000000192e-05, 8.537499999999865e-05, 8.488899999999772e-05, 8.520900000000275e-05, 8.505500000000055e-05, 8.518099999999668e-05, 8.548599999999573e-05, 8.475000000000149e-05, 8.519399999999677e-05, 8.525000000000199e-05, 8.548599999999573e-05, 8.526400000000156e-05, 8.572200000000335e-05, 8.538900000000516e-05, 8.51669999999971e-05, 8.519399999999677e-05, 8.523599999999548e-05, 8.54720000000031e-05, 8.52920000000007e-05, 8.495799999999609e-05, 8.494500000000293e-05, 8.533299999999994e-05, 8.53469999999995e-05, 8.516599999999763e-05, 8.508299999999969e-05, 8.515299999999754e-05, 8.513899999999797e-05, 8.493099999999643e-05, 8.513899999999797e-05, 8.56669999999976e-05, 8.474999999999455e-05, 8.488899999999772e-05, 8.533299999999994e-05]</msg>
<status status="PASS" starttime="20201112 12:43:50.521" endtime="20201112 12:43:50.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.509" endtime="20201112 12:43:50.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.534" endtime="20201112 12:43:50.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:50.542" endtime="20201112 12:43:50.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.538" endtime="20201112 12:43:50.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.529" endtime="20201112 12:43:50.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.999" endtime="20201112 12:43:50.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.998" endtime="20201112 12:43:50.569"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.592" endtime="20201112 12:43:50.613"></status>
</kw>
<msg timestamp="20201112 12:43:50.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:50.589" endtime="20201112 12:43:50.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:50.617" endtime="20201112 12:43:50.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.623" endtime="20201112 12:43:50.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.581" endtime="20201112 12:43:50.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.575" endtime="20201112 12:43:50.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.647" endtime="20201112 12:43:51.002"></status>
</kw>
<msg timestamp="20201112 12:43:51.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041382833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041468861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:50.644" endtime="20201112 12:43:51.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041382833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041468861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:51.012" endtime="20201112 12:43:51.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.031" endtime="20201112 12:43:51.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.636" endtime="20201112 12:43:51.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.631" endtime="20201112 12:43:51.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:51.050" level="INFO">${RESULT} = [{'time': 0.041468861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.602800000000188e-05, 'source_diff': 8.602800000000188e-05}, {'time': 0.041578208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:51.041" endtime="20201112 12:43:51.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:51.084" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:51.052" endtime="20201112 12:43:51.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.095" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 12:43:51.093" endtime="20201112 12:43:51.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.101" level="INFO">VALUE: [8.602800000000188e-05, 8.602699999999547e-05, 8.615299999999854e-05, 8.59999999999958e-05, 8.638899999999922e-05, 8.616700000000505e-05, 8.588899999999872e-05, 8.59720000000036e-05, 8.611099999999983e-05, 8.613899999999897e-05, 8.600000000000274e-05, 8.650000000000324e-05, 8.636100000000008e-05, 8.637499999999965e-05, 8.661100000000033e-05, 8.601400000000231e-05, 8.619499999999725e-05, 8.602800000000188e-05, 8.615299999999854e-05, 8.619399999999777e-05, 8.601400000000231e-05, 8.611200000000624e-05, 8.61249999999994e-05, 8.61669999999981e-05, 8.643099999999793e-05, 8.606900000000112e-05, 8.625000000000299e-05, 8.644400000000496e-05, 8.611099999999983e-05, 8.620800000000428e-05, 8.648599999999673e-05, 8.641699999999836e-05, 8.64999999999963e-05, 8.645799999999759e-05, 8.606899999999418e-05, 8.598599999999623e-05, 8.594500000000393e-05, 8.59170000000048e-05, 8.572199999999641e-05, 8.607000000000059e-05, 8.633300000000094e-05, 8.586099999999958e-05, 8.673600000000392e-05, 8.620800000000428e-05, 8.61669999999981e-05, 8.636100000000008e-05, 8.626400000000256e-05, 8.59170000000048e-05, 8.670799999999784e-05, 8.622200000000385e-05]</msg>
<status status="PASS" starttime="20201112 12:43:51.097" endtime="20201112 12:43:51.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.086" endtime="20201112 12:43:51.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.110" endtime="20201112 12:43:51.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:51.119" endtime="20201112 12:43:51.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.114" endtime="20201112 12:43:51.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.106" endtime="20201112 12:43:51.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.571" endtime="20201112 12:43:51.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.569" endtime="20201112 12:43:51.145"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.169" endtime="20201112 12:43:51.190"></status>
</kw>
<msg timestamp="20201112 12:43:51.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:51.165" endtime="20201112 12:43:51.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:51.193" endtime="20201112 12:43:51.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.200" endtime="20201112 12:43:51.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.158" endtime="20201112 12:43:51.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.152" endtime="20201112 12:43:51.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.224" endtime="20201112 12:43:51.575"></status>
</kw>
<msg timestamp="20201112 12:43:51.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041661861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041749361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:51.220" endtime="20201112 12:43:51.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041661861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041749361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:51.585" endtime="20201112 12:43:51.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.604" endtime="20201112 12:43:51.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.213" endtime="20201112 12:43:51.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.208" endtime="20201112 12:43:51.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:51.622" level="INFO">${RESULT} = [{'time': 0.041749361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.74999999999973e-05, 'source_diff': 8.74999999999973e-05}, {'time': 0.041859681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:51.613" endtime="20201112 12:43:51.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:51.655" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:51.624" endtime="20201112 12:43:51.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.666" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 12:43:51.664" endtime="20201112 12:43:51.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.671" level="INFO">VALUE: [8.74999999999973e-05, 8.741699999999936e-05, 8.672200000000435e-05, 8.768100000000612e-05, 8.711100000000083e-05, 8.752799999999644e-05, 8.722299999999739e-05, 8.72920000000027e-05, 8.69999999999968e-05, 8.738900000000022e-05, 8.740299999999979e-05, 8.709800000000073e-05, 8.745800000000553e-05, 8.701400000000331e-05, 8.769399999999927e-05, 8.74449999999985e-05, 8.722199999999791e-05, 8.736100000000108e-05, 8.698599999999723e-05, 8.730599999999533e-05, 8.670799999999784e-05, 8.677800000000263e-05, 8.742999999999945e-05, 8.69170000000058e-05, 8.713800000000049e-05, 8.719500000000519e-05, 8.769399999999927e-05, 8.718099999999868e-05, 8.686100000000058e-05, 8.741699999999936e-05, 8.702699999999647e-05, 8.722199999999791e-05, 8.718099999999868e-05, 8.677799999999569e-05, 8.695799999999809e-05, 8.74999999999973e-05, 8.692999999999895e-05, 8.747199999999816e-05, 8.713899999999997e-05, 8.736100000000108e-05, 8.700000000000374e-05, 8.704200000000245e-05, 8.69999999999968e-05, 8.768099999999918e-05, 8.686200000000005e-05, 8.73470000000015e-05, 8.743000000000639e-05, 8.676400000000306e-05, 8.740200000000031e-05, 8.723600000000442e-05]</msg>
<status status="PASS" starttime="20201112 12:43:51.668" endtime="20201112 12:43:51.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.657" endtime="20201112 12:43:51.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.681" endtime="20201112 12:43:51.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:51.690" endtime="20201112 12:43:51.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.685" endtime="20201112 12:43:51.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.677" endtime="20201112 12:43:51.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.148" endtime="20201112 12:43:51.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.146" endtime="20201112 12:43:51.716"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.739" endtime="20201112 12:43:51.761"></status>
</kw>
<msg timestamp="20201112 12:43:51.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:51.736" endtime="20201112 12:43:51.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:51.764" endtime="20201112 12:43:51.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.771" endtime="20201112 12:43:51.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.729" endtime="20201112 12:43:51.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.723" endtime="20201112 12:43:51.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.795" endtime="20201112 12:43:52.145"></status>
</kw>
<msg timestamp="20201112 12:43:52.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041287264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041375292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:51.791" endtime="20201112 12:43:52.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041287264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041375292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:52.155" endtime="20201112 12:43:52.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.174" endtime="20201112 12:43:52.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.784" endtime="20201112 12:43:52.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.779" endtime="20201112 12:43:52.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:52.192" level="INFO">${RESULT} = [{'time': 0.041375292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.802800000000388e-05, 'source_diff': 8.802800000000388e-05}, {'time': 0.041485625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:52.183" endtime="20201112 12:43:52.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:52.225" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:52.194" endtime="20201112 12:43:52.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.236" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 12:43:52.234" endtime="20201112 12:43:52.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.242" level="INFO">VALUE: [8.802800000000388e-05, 8.862499999999496e-05, 8.791699999999986e-05, 8.800000000000474e-05, 8.826399999999762e-05, 8.798600000000517e-05, 8.780499999999636e-05, 8.873699999999846e-05, 8.780599999999583e-05, 8.848599999999873e-05, 8.86250000000019e-05, 8.809699999999532e-05, 8.837499999999471e-05, 8.820799999999934e-05, 8.843000000000045e-05, 8.793099999999943e-05, 8.822300000000532e-05, 8.787500000000115e-05, 8.86120000000018e-05, 8.798599999999823e-05, 8.805499999999661e-05, 8.809799999999479e-05, 8.811100000000183e-05, 8.801300000000484e-05, 8.841600000000088e-05, 8.826399999999762e-05, 8.818099999999968e-05, 8.787500000000115e-05, 8.824999999999805e-05, 8.823600000000542e-05, 8.847299999999864e-05, 8.81250000000014e-05, 8.824999999999805e-05, 8.836200000000155e-05, 8.795899999999857e-05, 8.851399999999787e-05, 8.826400000000456e-05, 8.801399999999737e-05, 8.782000000000234e-05, 8.859700000000276e-05, 8.81670000000001e-05, 8.777800000000363e-05, 8.809700000000226e-05, 8.863899999999453e-05, 8.86670000000006e-05, 8.816600000000063e-05, 8.826400000000456e-05, 8.787500000000115e-05, 8.808299999999575e-05, 8.777799999999669e-05]</msg>
<status status="PASS" starttime="20201112 12:43:52.238" endtime="20201112 12:43:52.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.227" endtime="20201112 12:43:52.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.251" endtime="20201112 12:43:52.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:52.260" endtime="20201112 12:43:52.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.255" endtime="20201112 12:43:52.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.247" endtime="20201112 12:43:52.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.718" endtime="20201112 12:43:52.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.717" endtime="20201112 12:43:52.286"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.309" endtime="20201112 12:43:52.331"></status>
</kw>
<msg timestamp="20201112 12:43:52.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:52.306" endtime="20201112 12:43:52.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:52.334" endtime="20201112 12:43:52.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.340" endtime="20201112 12:43:52.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.298" endtime="20201112 12:43:52.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.293" endtime="20201112 12:43:52.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.365" endtime="20201112 12:43:52.716"></status>
</kw>
<msg timestamp="20201112 12:43:52.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041299153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041388694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:52.362" endtime="20201112 12:43:52.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041299153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041388694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:52.726" endtime="20201112 12:43:52.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.745" endtime="20201112 12:43:52.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.354" endtime="20201112 12:43:52.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.349" endtime="20201112 12:43:52.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:52.763" level="INFO">${RESULT} = [{'time': 0.041388694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.954099999999854e-05, 'source_diff': 8.954099999999854e-05}, {'time': 0.041498042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:52.754" endtime="20201112 12:43:52.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:52.796" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:52.765" endtime="20201112 12:43:52.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.807" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 12:43:52.805" endtime="20201112 12:43:52.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.813" level="INFO">VALUE: [8.954099999999854e-05, 8.895899999999957e-05, 8.959699999999682e-05, 8.968100000000118e-05, 8.970800000000084e-05, 8.893100000000043e-05, 8.92920000000047e-05, 8.890300000000129e-05, 8.872299999999889e-05, 8.94450000000005e-05, 8.952799999999844e-05, 8.886100000000258e-05, 8.922199999999991e-05, 8.96659999999952e-05, 8.951399999999887e-05, 8.947200000000016e-05, 8.936100000000308e-05, 8.872199999999941e-05, 8.924999999999905e-05, 8.919400000000077e-05, 8.912499999999546e-05, 8.906999999999665e-05, 8.879100000000473e-05, 8.891700000000086e-05, 8.970800000000084e-05, 8.940300000000179e-05, 8.954099999999854e-05, 8.886100000000258e-05, 8.920800000000034e-05, 8.876399999999812e-05, 8.926400000000556e-05, 8.905599999999708e-05, 8.961099999999639e-05, 8.956899999999768e-05, 8.879100000000473e-05, 8.870799999999984e-05, 8.948599999999973e-05, 8.888900000000172e-05, 8.87920000000042e-05, 8.906899999999718e-05, 8.957000000000409e-05, 8.969400000000127e-05, 8.888900000000172e-05, 8.931899999999743e-05, 8.943100000000093e-05, 8.865300000000104e-05, 8.936099999999614e-05, 8.930600000000427e-05, 8.961099999999639e-05, 8.887500000000215e-05]</msg>
<status status="PASS" starttime="20201112 12:43:52.809" endtime="20201112 12:43:52.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.798" endtime="20201112 12:43:52.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.822" endtime="20201112 12:43:52.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:52.831" endtime="20201112 12:43:52.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.826" endtime="20201112 12:43:52.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.818" endtime="20201112 12:43:52.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.288" endtime="20201112 12:43:52.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.287" endtime="20201112 12:43:52.857"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.880" endtime="20201112 12:43:52.901"></status>
</kw>
<msg timestamp="20201112 12:43:52.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:52.877" endtime="20201112 12:43:52.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:52.905" endtime="20201112 12:43:52.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.911" endtime="20201112 12:43:52.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.869" endtime="20201112 12:43:52.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.863" endtime="20201112 12:43:52.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.935" endtime="20201112 12:43:53.285"></status>
</kw>
<msg timestamp="20201112 12:43:53.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041090556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041180903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:52.932" endtime="20201112 12:43:53.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041090556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041180903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:53.295" endtime="20201112 12:43:53.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.314" endtime="20201112 12:43:53.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.924" endtime="20201112 12:43:53.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.919" endtime="20201112 12:43:53.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:53.332" level="INFO">${RESULT} = [{'time': 0.041180903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.034699999999757e-05, 'source_diff': 9.034699999999757e-05}, {'time': 0.041290208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:53.323" endtime="20201112 12:43:53.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:53.366" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:53.334" endtime="20201112 12:43:53.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.378" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 12:43:53.375" endtime="20201112 12:43:53.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.383" level="INFO">VALUE: [9.034699999999757e-05, 8.988900000000272e-05, 9.054199999999901e-05, 9.007000000000459e-05, 9.055599999999858e-05, 8.990300000000229e-05, 9.027799999999919e-05, 8.998600000000023e-05, 8.980600000000477e-05, 9.009700000000426e-05, 9.04450000000015e-05, 9.044399999999508e-05, 9.052699999999997e-05, 9.063899999999653e-05, 9.037499999999671e-05, 9.061099999999739e-05, 9.008399999999722e-05, 8.984699999999707e-05, 9.051399999999987e-05, 9.027799999999919e-05, 9.059799999999729e-05, 9.047200000000116e-05, 8.984800000000348e-05, 9.059699999999782e-05, 8.973599999999998e-05, 8.979099999999879e-05, 9.034700000000451e-05, 9.007000000000459e-05, 9.055599999999858e-05, 9.06800000000027e-05, 9.026399999999962e-05, 9.027799999999919e-05, 9.005499999999861e-05, 8.995899999999363e-05, 8.980499999999836e-05, 9.05000000000003e-05, 8.994400000000152e-05, 9.036099999999714e-05, 9.072199999999447e-05, 9.056999999999815e-05, 8.988800000000324e-05, 9.013900000000297e-05, 9.041599999999594e-05, 9.023599999999354e-05, 9.037499999999671e-05, 8.974999999999955e-05, 9.044400000000202e-05, 9.016600000000263e-05, 9.023600000000048e-05, 9.031899999999843e-05]</msg>
<status status="PASS" starttime="20201112 12:43:53.380" endtime="20201112 12:43:53.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.368" endtime="20201112 12:43:53.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.394" endtime="20201112 12:43:53.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:53.403" endtime="20201112 12:43:53.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.398" endtime="20201112 12:43:53.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.389" endtime="20201112 12:43:53.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.859" endtime="20201112 12:43:53.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.858" endtime="20201112 12:43:53.429"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.453" endtime="20201112 12:43:53.474"></status>
</kw>
<msg timestamp="20201112 12:43:53.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:53.449" endtime="20201112 12:43:53.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:53.478" endtime="20201112 12:43:53.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.486" endtime="20201112 12:43:53.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.442" endtime="20201112 12:43:53.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.436" endtime="20201112 12:43:53.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.510" endtime="20201112 12:43:53.858"></status>
</kw>
<msg timestamp="20201112 12:43:53.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041444847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041536056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:53.506" endtime="20201112 12:43:53.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041444847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041536056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:53.867" endtime="20201112 12:43:53.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.886" endtime="20201112 12:43:53.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.499" endtime="20201112 12:43:53.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.494" endtime="20201112 12:43:53.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:53.912" level="INFO">${RESULT} = [{'time': 0.041536056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.120900000000182e-05, 'source_diff': 9.120900000000182e-05}, {'time': 0.041649417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:53.899" endtime="20201112 12:43:53.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:53.944" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:53.915" endtime="20201112 12:43:53.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.957" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 12:43:53.953" endtime="20201112 12:43:53.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:53.962" level="INFO">VALUE: [9.120900000000182e-05, 9.090300000000329e-05, 9.140300000000379e-05, 9.109700000000526e-05, 9.147200000000216e-05, 9.108399999999822e-05, 9.113900000000397e-05, 9.13879999999978e-05, 9.143000000000345e-05, 9.136099999999814e-05, 9.101400000000037e-05, 9.077799999999969e-05, 9.138900000000422e-05, 9.137500000000465e-05, 9.158299999999925e-05, 9.12079999999954e-05, 9.152700000000097e-05, 9.080599999999883e-05, 9.090299999999635e-05, 9.126400000000062e-05, 9.127800000000019e-05, 9.097199999999472e-05, 9.113899999999703e-05, 9.087499999999721e-05, 9.102799999999994e-05, 9.155599999999958e-05, 9.158299999999925e-05, 9.130499999999986e-05, 9.129199999999976e-05, 9.122199999999497e-05, 9.127800000000019e-05, 9.126299999999421e-05, 9.134699999999857e-05, 9.111199999999736e-05, 9.119400000000277e-05, 9.105599999999908e-05, 9.087500000000415e-05, 9.167999999999676e-05, 9.097200000000166e-05, 9.084699999999807e-05, 9.155599999999958e-05, 9.154100000000054e-05, 9.169500000000275e-05, 9.109699999999832e-05, 9.16529999999971e-05, 9.083300000000544e-05, 9.159699999999882e-05, 9.076400000000012e-05, 9.11670000000031e-05, 9.17079999999959e-05]</msg>
<status status="PASS" starttime="20201112 12:43:53.959" endtime="20201112 12:43:53.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.946" endtime="20201112 12:43:53.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:53.972" endtime="20201112 12:43:53.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:53.980" endtime="20201112 12:43:54.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.976" endtime="20201112 12:43:54.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.967" endtime="20201112 12:43:54.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.432" endtime="20201112 12:43:54.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:53.430" endtime="20201112 12:43:54.006"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.030" endtime="20201112 12:43:54.049"></status>
</kw>
<msg timestamp="20201112 12:43:54.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:54.026" endtime="20201112 12:43:54.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:54.052" endtime="20201112 12:43:54.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.059" endtime="20201112 12:43:54.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.019" endtime="20201112 12:43:54.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.013" endtime="20201112 12:43:54.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.082" endtime="20201112 12:43:54.425"></status>
</kw>
<msg timestamp="20201112 12:43:54.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041582403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041675014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:54.079" endtime="20201112 12:43:54.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041582403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041675014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:54.435" endtime="20201112 12:43:54.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.454" endtime="20201112 12:43:54.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.072" endtime="20201112 12:43:54.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.067" endtime="20201112 12:43:54.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:54.472" level="INFO">${RESULT} = [{'time': 0.041675014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.261100000000633e-05, 'source_diff': 9.261100000000633e-05}, {'time': 0.041786361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:54.463" endtime="20201112 12:43:54.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:54.503" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:54.474" endtime="20201112 12:43:54.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.514" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 12:43:54.512" endtime="20201112 12:43:54.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.520" level="INFO">VALUE: [9.261100000000633e-05, 9.208299999999975e-05, 9.22079999999964e-05, 9.197300000000214e-05, 9.202800000000094e-05, 9.211099999999889e-05, 9.247199999999622e-05, 9.274999999999561e-05, 9.241699999999742e-05, 9.201399999999443e-05, 9.188899999999778e-05, 9.261099999999939e-05, 9.242999999999751e-05, 9.202700000000147e-05, 9.247200000000316e-05, 9.188899999999778e-05, 9.270900000000332e-05, 9.212499999999846e-05, 9.209699999999932e-05, 9.187499999999821e-05, 9.213899999999803e-05, 9.248600000000273e-05, 9.175000000000155e-05, 9.222200000000291e-05, 9.23199999999999e-05, 9.247199999999622e-05, 9.236099999999914e-05, 9.269500000000375e-05, 9.258399999999972e-05, 9.222200000000291e-05, 9.267999999999776e-05, 9.183399999999897e-05, 9.238899999999828e-05, 9.234699999999957e-05, 9.212499999999846e-05, 9.177800000000069e-05, 9.18329999999995e-05, 9.206999999999965e-05, 9.245900000000307e-05, 9.191700000000386e-05, 9.258300000000025e-05, 9.265300000000504e-05, 9.273599999999604e-05, 9.22079999999964e-05, 9.227700000000172e-05, 9.245900000000307e-05, 9.257000000000015e-05, 9.237499999999871e-05, 9.191699999999692e-05, 9.252700000000197e-05]</msg>
<status status="PASS" starttime="20201112 12:43:54.516" endtime="20201112 12:43:54.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.505" endtime="20201112 12:43:54.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.530" endtime="20201112 12:43:54.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:54.539" endtime="20201112 12:43:54.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.534" endtime="20201112 12:43:54.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.526" endtime="20201112 12:43:54.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.009" endtime="20201112 12:43:54.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.007" endtime="20201112 12:43:54.564"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.587" endtime="20201112 12:43:54.606"></status>
</kw>
<msg timestamp="20201112 12:43:54.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:54.584" endtime="20201112 12:43:54.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:54.610" endtime="20201112 12:43:54.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.616" endtime="20201112 12:43:54.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.576" endtime="20201112 12:43:54.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.571" endtime="20201112 12:43:54.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.639" endtime="20201112 12:43:54.977"></status>
</kw>
<msg timestamp="20201112 12:43:54.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040483125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040575847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:54.636" endtime="20201112 12:43:54.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040483125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040575847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:54.986" endtime="20201112 12:43:55.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.005" endtime="20201112 12:43:55.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.629" endtime="20201112 12:43:55.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.624" endtime="20201112 12:43:55.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:55.023" level="INFO">${RESULT} = [{'time': 0.040575847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.272199999999647e-05, 'source_diff': 9.272199999999647e-05}, {'time': 0.040693236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:55.014" endtime="20201112 12:43:55.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:55.053" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:55.025" endtime="20201112 12:43:55.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.064" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 12:43:55.062" endtime="20201112 12:43:55.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.069" level="INFO">VALUE: [9.272199999999647e-05, 9.367999999999876e-05, 9.32079999999974e-05, 9.3333000000001e-05, 9.373599999999704e-05, 9.29859999999963e-05, 9.28200000000004e-05, 9.325000000000305e-05, 9.327699999999578e-05, 9.322200000000391e-05, 9.338899999999928e-05, 9.29729999999962e-05, 9.334700000000057e-05, 9.338899999999928e-05, 9.361100000000039e-05, 9.343099999999799e-05, 9.281900000000093e-05, 9.299999999999586e-05, 9.276399999999518e-05, 9.286199999999911e-05, 9.325000000000305e-05, 9.277699999999528e-05, 9.2945000000004e-05, 9.311099999999989e-05, 9.312499999999946e-05, 9.349999999999636e-05, 9.33200000000009e-05, 9.355500000000211e-05, 9.362499999999996e-05, 9.323600000000348e-05, 9.35000000000033e-05, 9.309799999999979e-05, 9.33059999999944e-05, 9.273600000000298e-05, 9.333400000000047e-05, 9.336100000000014e-05, 9.344499999999756e-05, 9.347199999999722e-05, 9.290299999999835e-05, 9.295800000000409e-05, 9.31659999999987e-05, 9.304200000000151e-05, 9.283399999999997e-05, 9.276400000000212e-05, 9.355500000000211e-05, 9.316699999999817e-05, 9.304100000000204e-05, 9.37079999999979e-05, 9.362499999999996e-05, 9.297300000000314e-05]</msg>
<status status="PASS" starttime="20201112 12:43:55.066" endtime="20201112 12:43:55.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.055" endtime="20201112 12:43:55.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.083" endtime="20201112 12:43:55.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:55.093" endtime="20201112 12:43:55.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.089" endtime="20201112 12:43:55.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.079" endtime="20201112 12:43:55.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.566" endtime="20201112 12:43:55.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.565" endtime="20201112 12:43:55.119"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.141" endtime="20201112 12:43:55.162"></status>
</kw>
<msg timestamp="20201112 12:43:55.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:55.138" endtime="20201112 12:43:55.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:55.165" endtime="20201112 12:43:55.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.172" endtime="20201112 12:43:55.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.131" endtime="20201112 12:43:55.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.125" endtime="20201112 12:43:55.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.195" endtime="20201112 12:43:55.545"></status>
</kw>
<msg timestamp="20201112 12:43:55.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040039833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040134569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:55.192" endtime="20201112 12:43:55.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040039833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040134569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:55.554" endtime="20201112 12:43:55.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.573" endtime="20201112 12:43:55.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.185" endtime="20201112 12:43:55.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.180" endtime="20201112 12:43:55.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:55.590" level="INFO">${RESULT} = [{'time': 0.040134569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.473600000000498e-05, 'source_diff': 9.473600000000498e-05}, {'time': 0.040247875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:55.581" endtime="20201112 12:43:55.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:55.621" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:55.592" endtime="20201112 12:43:55.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.632" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 12:43:55.629" endtime="20201112 12:43:55.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.637" level="INFO">VALUE: [9.473600000000498e-05, 9.438900000000028e-05, 9.381999999999446e-05, 9.44859999999978e-05, 9.444399999999908e-05, 9.458299999999531e-05, 9.457000000000215e-05, 9.391699999999892e-05, 9.397300000000414e-05, 9.429200000000276e-05, 9.41529999999996e-05, 9.39859999999973e-05, 9.408400000000122e-05, 9.391699999999892e-05, 9.372300000000389e-05, 9.38200000000014e-05, 9.449999999999736e-05, 9.377800000000269e-05, 9.452800000000344e-05, 9.418099999999874e-05, 9.377699999999628e-05, 9.412500000000046e-05, 9.422199999999797e-05, 9.462500000000096e-05, 9.417999999999926e-05, 9.392999999999901e-05, 9.447199999999822e-05, 9.420800000000534e-05, 9.443099999999899e-05, 9.386100000000064e-05, 9.422199999999797e-05, 9.408300000000175e-05, 9.449999999999736e-05, 9.427700000000372e-05, 9.44859999999978e-05, 9.419399999999883e-05, 9.388899999999978e-05, 9.477799999999675e-05, 9.399999999999686e-05, 9.41529999999996e-05, 9.388899999999978e-05, 9.445799999999865e-05, 9.395799999999815e-05, 9.405599999999514e-05, 9.411100000000089e-05, 9.418099999999874e-05, 9.380500000000236e-05, 9.411100000000089e-05, 9.401399999999643e-05, 9.463900000000053e-05]</msg>
<status status="PASS" starttime="20201112 12:43:55.634" endtime="20201112 12:43:55.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.623" endtime="20201112 12:43:55.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.646" endtime="20201112 12:43:55.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:55.655" endtime="20201112 12:43:55.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.650" endtime="20201112 12:43:55.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.642" endtime="20201112 12:43:55.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.121" endtime="20201112 12:43:55.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.120" endtime="20201112 12:43:55.684"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.707" endtime="20201112 12:43:55.728"></status>
</kw>
<msg timestamp="20201112 12:43:55.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:55.704" endtime="20201112 12:43:55.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:55.731" endtime="20201112 12:43:55.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.737" endtime="20201112 12:43:55.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.696" endtime="20201112 12:43:55.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.691" endtime="20201112 12:43:55.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.761" endtime="20201112 12:43:56.111"></status>
</kw>
<msg timestamp="20201112 12:43:56.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040801819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040897069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:55.757" endtime="20201112 12:43:56.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040801819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040897069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:56.120" endtime="20201112 12:43:56.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.139" endtime="20201112 12:43:56.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.750" endtime="20201112 12:43:56.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.746" endtime="20201112 12:43:56.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:56.156" level="INFO">${RESULT} = [{'time': 0.040897069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.524999999999811e-05, 'source_diff': 9.524999999999811e-05}, {'time': 0.041011431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:56.147" endtime="20201112 12:43:56.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:56.186" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:56.158" endtime="20201112 12:43:56.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.197" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 12:43:56.195" endtime="20201112 12:43:56.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.203" level="INFO">VALUE: [9.524999999999811e-05, 9.540300000000085e-05, 9.543099999999999e-05, 9.543099999999999e-05, 9.540300000000085e-05, 9.554199999999707e-05, 9.49859999999983e-05, 9.56530000000011e-05, 9.545799999999965e-05, 9.50409999999971e-05, 9.559699999999588e-05, 9.474999999999761e-05, 9.538900000000128e-05, 9.573599999999904e-05, 9.533299999999606e-05, 9.559700000000282e-05, 9.527799999999725e-05, 9.527800000000419e-05, 9.55409999999976e-05, 9.54870000000052e-05, 9.477800000000369e-05, 9.572199999999947e-05, 9.501400000000437e-05, 9.480600000000283e-05, 9.487500000000121e-05, 9.573599999999904e-05, 9.491600000000044e-05, 9.511100000000189e-05, 9.573599999999904e-05, 9.513900000000103e-05, 9.573599999999904e-05, 9.545899999999913e-05, 9.495800000000609e-05, 9.544400000000008e-05, 9.549999999999836e-05, 9.527699999999778e-05, 9.538900000000128e-05, 9.479199999999632e-05, 9.573599999999904e-05, 9.523599999999854e-05, 9.527699999999778e-05, 9.479199999999632e-05, 9.569400000000033e-05, 9.512500000000146e-05, 9.507000000000265e-05, 9.501399999999743e-05, 9.567999999999383e-05, 9.55409999999976e-05, 9.508299999999581e-05, 9.574999999999861e-05]</msg>
<status status="PASS" starttime="20201112 12:43:56.200" endtime="20201112 12:43:56.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.188" endtime="20201112 12:43:56.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.212" endtime="20201112 12:43:56.215"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:56.220" endtime="20201112 12:43:56.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.216" endtime="20201112 12:43:56.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.208" endtime="20201112 12:43:56.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.686" endtime="20201112 12:43:56.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.685" endtime="20201112 12:43:56.246"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.271" endtime="20201112 12:43:56.291"></status>
</kw>
<msg timestamp="20201112 12:43:56.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:56.267" endtime="20201112 12:43:56.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:56.295" endtime="20201112 12:43:56.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.301" endtime="20201112 12:43:56.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.260" endtime="20201112 12:43:56.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.253" endtime="20201112 12:43:56.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.324" endtime="20201112 12:43:56.670"></status>
</kw>
<msg timestamp="20201112 12:43:56.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041753431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041850097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:56.321" endtime="20201112 12:43:56.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041753431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041850097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:56.679" endtime="20201112 12:43:56.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.698" endtime="20201112 12:43:56.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.314" endtime="20201112 12:43:56.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.309" endtime="20201112 12:43:56.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:56.715" level="INFO">${RESULT} = [{'time': 0.041850097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.66660000000022e-05, 'source_diff': 9.66660000000022e-05}, {'time': 0.041966472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:56.706" endtime="20201112 12:43:56.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:56.746" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:56.717" endtime="20201112 12:43:56.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.757" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 12:43:56.755" endtime="20201112 12:43:56.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.762" level="INFO">VALUE: [9.66660000000022e-05, 9.609699999999638e-05, 9.651399999999893e-05, 9.645900000000013e-05, 9.626400000000562e-05, 9.651299999999946e-05, 9.605600000000408e-05, 9.616700000000117e-05, 9.626399999999868e-05, 9.605599999999714e-05, 9.584700000000307e-05, 9.622299999999945e-05, 9.611099999999595e-05, 9.676399999999918e-05, 9.576399999999818e-05, 9.626399999999868e-05, 9.63880000000028e-05, 9.631899999999749e-05, 9.573599999999904e-05, 9.574999999999861e-05, 9.58330000000035e-05, 9.587500000000221e-05, 9.63059999999974e-05, 9.633299999999706e-05, 9.659700000000382e-05, 9.605599999999714e-05, 9.576400000000512e-05, 9.599999999999886e-05, 9.583399999999603e-05, 9.595800000000015e-05, 9.630499999999792e-05, 9.636200000000261e-05, 9.608299999999681e-05, 9.634699999999663e-05, 9.662499999999602e-05, 9.584700000000307e-05, 9.624999999999911e-05, 9.612499999999552e-05, 9.60409999999981e-05, 9.673600000000004e-05, 9.661100000000339e-05, 9.662500000000296e-05, 9.634699999999663e-05, 9.593000000000101e-05, 9.64859999999998e-05, 9.647200000000022e-05, 9.61530000000016e-05, 9.619500000000031e-05, 9.673600000000004e-05, 9.580500000000436e-05]</msg>
<status status="PASS" starttime="20201112 12:43:56.759" endtime="20201112 12:43:56.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.748" endtime="20201112 12:43:56.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.772" endtime="20201112 12:43:56.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:56.780" endtime="20201112 12:43:56.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.775" endtime="20201112 12:43:56.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.767" endtime="20201112 12:43:56.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.249" endtime="20201112 12:43:56.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.247" endtime="20201112 12:43:56.806"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.828" endtime="20201112 12:43:56.849"></status>
</kw>
<msg timestamp="20201112 12:43:56.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:56.825" endtime="20201112 12:43:56.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:56.853" endtime="20201112 12:43:56.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.859" endtime="20201112 12:43:56.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.818" endtime="20201112 12:43:56.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.812" endtime="20201112 12:43:56.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.884" endtime="20201112 12:43:57.232"></status>
</kw>
<msg timestamp="20201112 12:43:57.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040178736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040276111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:56.880" endtime="20201112 12:43:57.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040178736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040276111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:57.242" endtime="20201112 12:43:57.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.261" endtime="20201112 12:43:57.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.873" endtime="20201112 12:43:57.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.869" endtime="20201112 12:43:57.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:57.278" level="INFO">${RESULT} = [{'time': 0.040276111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.737500000000371e-05, 'source_diff': 9.737500000000371e-05}, {'time': 0.040394431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:57.269" endtime="20201112 12:43:57.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:57.309" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:57.280" endtime="20201112 12:43:57.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.320" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 12:43:57.317" endtime="20201112 12:43:57.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.325" level="INFO">VALUE: [9.737500000000371e-05, 9.676399999999918e-05, 9.694500000000106e-05, 9.711100000000389e-05, 9.761099999999745e-05, 9.756899999999874e-05, 9.711199999999642e-05, 9.761099999999745e-05, 9.766699999999573e-05, 9.712500000000346e-05, 9.744500000000156e-05, 9.737499999999677e-05, 9.748599999999386e-05, 9.761099999999745e-05, 9.69159999999955e-05, 9.71809999999948e-05, 9.756999999999821e-05, 9.727799999999925e-05, 9.715199999999619e-05, 9.69860000000003e-05, 9.734699999999763e-05, 9.742999999999558e-05, 9.7027999999999e-05, 9.679199999999832e-05, 9.752700000000003e-05, 9.691699999999498e-05, 9.738900000000328e-05, 9.716599999999576e-05, 9.686199999999617e-05, 9.706999999999771e-05, 9.755499999999917e-05, 9.761199999999692e-05, 9.719499999999437e-05, 9.738900000000328e-05, 9.693100000000149e-05, 9.70000000000068e-05, 9.733299999999806e-05, 9.73609999999972e-05, 9.729200000000576e-05, 9.759699999999788e-05, 9.698599999999336e-05, 9.687500000000321e-05, 9.702699999999953e-05, 9.743100000000199e-05, 9.750000000000036e-05, 9.759699999999788e-05, 9.695799999999422e-05, 9.688900000000278e-05, 9.758299999999831e-05, 9.768100000000224e-05]</msg>
<status status="PASS" starttime="20201112 12:43:57.322" endtime="20201112 12:43:57.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.311" endtime="20201112 12:43:57.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.334" endtime="20201112 12:43:57.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:57.343" endtime="20201112 12:43:57.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.338" endtime="20201112 12:43:57.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.330" endtime="20201112 12:43:57.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.808" endtime="20201112 12:43:57.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.807" endtime="20201112 12:43:57.369"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.391" endtime="20201112 12:43:57.410"></status>
</kw>
<msg timestamp="20201112 12:43:57.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:57.388" endtime="20201112 12:43:57.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:57.413" endtime="20201112 12:43:57.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.420" endtime="20201112 12:43:57.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.381" endtime="20201112 12:43:57.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.375" endtime="20201112 12:43:57.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.444" endtime="20201112 12:43:57.781"></status>
</kw>
<msg timestamp="20201112 12:43:57.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039967153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040065444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:57.441" endtime="20201112 12:43:57.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039967153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040065444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:57.791" endtime="20201112 12:43:57.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.810" endtime="20201112 12:43:57.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.432" endtime="20201112 12:43:57.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.428" endtime="20201112 12:43:57.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:57.827" level="INFO">${RESULT} = [{'time': 0.040065444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.829100000000035e-05, 'source_diff': 9.829100000000035e-05}, {'time': 0.040182792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:57.818" endtime="20201112 12:43:57.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:57.858" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:57.829" endtime="20201112 12:43:57.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.868" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 12:43:57.866" endtime="20201112 12:43:57.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.874" level="INFO">VALUE: [9.829100000000035e-05, 9.826400000000068e-05, 9.801400000000043e-05, 9.844500000000256e-05, 9.809700000000532e-05, 9.843099999999605e-05, 9.804199999999957e-05, 9.829199999999982e-05, 9.793099999999555e-05, 9.795900000000163e-05, 9.790299999999641e-05, 9.858299999999931e-05, 9.83059999999994e-05, 9.872200000000247e-05, 9.806899999999924e-05, 9.801400000000043e-05, 9.815299999999666e-05, 9.797200000000172e-05, 9.859799999999835e-05, 9.843100000000299e-05, 9.830499999999992e-05, 9.86939999999964e-05, 9.834700000000557e-05, 9.805599999999914e-05, 9.788900000000378e-05, 9.844499999999562e-05, 9.840299999999691e-05, 9.827800000000025e-05, 9.793000000000301e-05, 9.87080000000029e-05, 9.829100000000035e-05, 9.84730000000017e-05, 9.811099999999795e-05, 9.872200000000247e-05, 9.850000000000136e-05, 9.827800000000025e-05, 9.87080000000029e-05, 9.840199999999744e-05, 9.866700000000367e-05, 9.869499999999587e-05, 9.777799999999975e-05, 9.841699999999648e-05, 9.827800000000025e-05, 9.808399999999828e-05, 9.840299999999691e-05, 9.800000000000086e-05, 9.800000000000086e-05, 9.78059999999989e-05, 9.78609999999977e-05, 9.827800000000025e-05]</msg>
<status status="PASS" starttime="20201112 12:43:57.871" endtime="20201112 12:43:57.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.859" endtime="20201112 12:43:57.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.883" endtime="20201112 12:43:57.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:57.892" endtime="20201112 12:43:57.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.887" endtime="20201112 12:43:57.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.879" endtime="20201112 12:43:57.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.371" endtime="20201112 12:43:57.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.369" endtime="20201112 12:43:57.918"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.940" endtime="20201112 12:43:57.959"></status>
</kw>
<msg timestamp="20201112 12:43:57.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:57.937" endtime="20201112 12:43:57.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:57.963" endtime="20201112 12:43:57.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.969" endtime="20201112 12:43:57.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.930" endtime="20201112 12:43:57.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.924" endtime="20201112 12:43:57.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.993" endtime="20201112 12:43:58.333"></status>
</kw>
<msg timestamp="20201112 12:43:58.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039929611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040028625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:57.990" endtime="20201112 12:43:58.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039929611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040028625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:58.343" endtime="20201112 12:43:58.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.361" endtime="20201112 12:43:58.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.982" endtime="20201112 12:43:58.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.977" endtime="20201112 12:43:58.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:58.379" level="INFO">${RESULT} = [{'time': 0.040028625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.901400000000143e-05, 'source_diff': 9.901400000000143e-05}, {'time': 0.040150014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:58.370" endtime="20201112 12:43:58.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:58.409" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:58.381" endtime="20201112 12:43:58.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.420" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 12:43:58.418" endtime="20201112 12:43:58.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.425" level="INFO">VALUE: [9.901400000000143e-05, 9.965299999999816e-05, 9.902700000000153e-05, 9.88479999999986e-05, 9.931999999999996e-05, 9.977700000000228e-05, 9.95280000000015e-05, 9.923600000000254e-05, 9.898599999999536e-05, 9.957000000000021e-05, 9.908399999999928e-05, 9.884700000000607e-05, 9.958300000000031e-05, 9.961100000000639e-05, 9.958300000000031e-05, 9.916699999999723e-05, 9.959699999999988e-05, 9.922200000000297e-05, 9.917999999999733e-05, 9.944499999999662e-05, 9.893100000000349e-05, 9.88609999999987e-05, 9.89860000000023e-05, 9.905600000000014e-05, 9.913899999999809e-05, 9.877800000000075e-05, 9.944499999999662e-05, 9.947200000000322e-05, 9.901400000000143e-05, 9.911099999999895e-05, 9.972200000000347e-05, 9.890299999999741e-05, 9.901400000000143e-05, 9.893099999999655e-05, 9.965299999999816e-05, 9.923600000000254e-05, 9.933399999999953e-05, 9.957000000000021e-05, 9.881899999999999e-05, 9.89860000000023e-05, 9.88609999999987e-05, 9.972300000000295e-05, 9.91809999999968e-05, 9.881999999999946e-05, 9.966699999999773e-05, 9.92359999999956e-05, 9.915299999999766e-05, 9.944500000000356e-05, 9.877799999999382e-05, 9.934699999999963e-05]</msg>
<status status="PASS" starttime="20201112 12:43:58.422" endtime="20201112 12:43:58.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.411" endtime="20201112 12:43:58.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.434" endtime="20201112 12:43:58.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:58.443" endtime="20201112 12:43:58.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.438" endtime="20201112 12:43:58.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.430" endtime="20201112 12:43:58.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.920" endtime="20201112 12:43:58.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.918" endtime="20201112 12:43:58.468"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.491" endtime="20201112 12:43:58.511"></status>
</kw>
<msg timestamp="20201112 12:43:58.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:58.488" endtime="20201112 12:43:58.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:58.514" endtime="20201112 12:43:58.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.520" endtime="20201112 12:43:58.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.480" endtime="20201112 12:43:58.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.475" endtime="20201112 12:43:58.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.543" endtime="20201112 12:43:58.883"></status>
</kw>
<msg timestamp="20201112 12:43:58.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040408264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040508375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:58.540" endtime="20201112 12:43:58.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040408264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040508375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:58.892" endtime="20201112 12:43:58.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.911" endtime="20201112 12:43:58.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.533" endtime="20201112 12:43:58.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.528" endtime="20201112 12:43:58.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:58.928" level="INFO">${RESULT} = [{'time': 0.040508375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010011099999999995, 'source_diff': 0.00010011099999999995}, {'time': 0.040628736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:58.919" endtime="20201112 12:43:58.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:58.958" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:58.930" endtime="20201112 12:43:58.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.969" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 12:43:58.966" endtime="20201112 12:43:58.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:58.974" level="INFO">VALUE: [0.00010011099999999995, 0.00010006900000000124, 0.00010016700000000517, 0.00010048699999999633, 9.995800000000415e-05, 9.990199999999894e-05, 0.00010016699999999823, 0.00010011199999999942, 9.984700000000013e-05, 0.00010065299999999916, 0.00010045799999999772, 0.0001004860000000038, 0.0001005410000000026, 0.0001006939999999984, 9.998599999999636e-05, 0.00010030500000000192, 0.00010016599999999876, 0.00010072199999999754, 0.00010025000000000311, 9.994500000000406e-05, 0.00010037500000000671, 0.00010015199999999919, 0.0001000559999999942, 0.00010032000000000096, 9.979200000000132e-05, 0.00010059700000000088, 9.987500000000621e-05, 9.983300000000056e-05, 0.00010067999999999883, 0.00010008300000000081, 0.00010011199999999942, 0.00010074999999999668, 0.00010004200000000157, 9.980599999999396e-05, 9.995799999999722e-05, 0.00010040299999999891, 9.976300000000271e-05, 0.00010040299999999891, 0.00010022300000000345, 0.00010019500000000431, 0.00010026400000000268, 9.993099999999755e-05, 0.00010009700000000038, 9.997199999999679e-05, 0.00010027700000000278, 0.00010063899999999959, 9.99159999999985e-05, 0.0001001809999999978, 0.00010041699999999848, 0.00010032000000000096]</msg>
<status status="PASS" starttime="20201112 12:43:58.971" endtime="20201112 12:43:58.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.960" endtime="20201112 12:43:58.977"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:58.983" endtime="20201112 12:43:58.986"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:58.991" endtime="20201112 12:43:59.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.987" endtime="20201112 12:43:59.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.979" endtime="20201112 12:43:59.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.471" endtime="20201112 12:43:59.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:58.469" endtime="20201112 12:43:59.017"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.040" endtime="20201112 12:43:59.059"></status>
</kw>
<msg timestamp="20201112 12:43:59.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:59.036" endtime="20201112 12:43:59.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:59.063" endtime="20201112 12:43:59.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.069" endtime="20201112 12:43:59.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.029" endtime="20201112 12:43:59.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.024" endtime="20201112 12:43:59.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.092" endtime="20201112 12:43:59.428"></status>
</kw>
<msg timestamp="20201112 12:43:59.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040033167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040134625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:59.089" endtime="20201112 12:43:59.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040033167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040134625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:59.437" endtime="20201112 12:43:59.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.455" endtime="20201112 12:43:59.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.081" endtime="20201112 12:43:59.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.077" endtime="20201112 12:43:59.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:59.474" level="INFO">${RESULT} = [{'time': 0.040134625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010145799999999872, 'source_diff': 0.00010145799999999872}, {'time': 0.040257972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:59.465" endtime="20201112 12:43:59.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:59.504" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:59.476" endtime="20201112 12:43:59.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.514" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 12:43:59.512" endtime="20201112 12:43:59.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.520" level="INFO">VALUE: [0.00010145799999999872, 0.00010119400000000583, 0.00010127799999999632, 0.00010092999999999908, 0.00010162499999999408, 0.0001012359999999976, 0.0001013060000000024, 0.0001008339999999941, 0.00010104199999999564, 0.00010158300000000231, 0.00010170900000000538, 0.00010147199999999829, 0.00010127800000000325, 0.0001016939999999994, 0.00010159800000000135, 0.00010161099999999451, 0.00010166699999999973, 0.0001008610000000007, 0.00010088899999999984, 0.0001010139999999965, 0.00010076399999999625, 0.0001007080000000049, 0.00010154099999999666, 0.00010090299999999941, 0.00010130500000000292, 0.00010111100000000095, 0.00010124999999999718, 0.0001008610000000007, 0.0001008610000000007, 0.00010145899999999819, 0.00010083400000000103, 0.0001011939999999989, 0.00010104099999999616, 0.00010179200000000332, 0.00010084700000000113, 0.00010154199999999614, 0.00010116699999999923, 0.00010163900000000059, 0.00010166600000000026, 0.0001014860000000048, 0.00010076399999999625, 0.000101028000000003, 0.00010169499999999887, 0.00010159800000000135, 0.0001009730000000042, 0.00010122200000000497, 0.00010084700000000113, 0.00010170799999999897, 0.00010147299999999776, 0.00010137500000000077]</msg>
<status status="PASS" starttime="20201112 12:43:59.517" endtime="20201112 12:43:59.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.505" endtime="20201112 12:43:59.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.529" endtime="20201112 12:43:59.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:59.537" endtime="20201112 12:43:59.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.533" endtime="20201112 12:43:59.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.525" endtime="20201112 12:43:59.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.019" endtime="20201112 12:43:59.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.018" endtime="20201112 12:43:59.563"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.586" endtime="20201112 12:43:59.606"></status>
</kw>
<msg timestamp="20201112 12:43:59.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:59.582" endtime="20201112 12:43:59.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:59.609" endtime="20201112 12:43:59.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.616" endtime="20201112 12:43:59.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.575" endtime="20201112 12:43:59.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.570" endtime="20201112 12:43:59.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.639" endtime="20201112 12:43:59.975"></status>
</kw>
<msg timestamp="20201112 12:43:59.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040605958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040708375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:59.636" endtime="20201112 12:43:59.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040605958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040708375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:59.985" endtime="20201112 12:44:00.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.003" endtime="20201112 12:44:00.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.629" endtime="20201112 12:44:00.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.624" endtime="20201112 12:44:00.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:00.022" level="INFO">${RESULT} = [{'time': 0.040708375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010241700000000048, 'source_diff': 0.00010241700000000048}, {'time': 0.040831736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:00.013" endtime="20201112 12:44:00.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:00.051" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:00.024" endtime="20201112 12:44:00.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.062" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 12:44:00.060" endtime="20201112 12:44:00.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.067" level="INFO">VALUE: [0.00010241700000000048, 0.00010266700000000073, 0.00010272199999999954, 0.00010254099999999766, 0.00010209800000000185, 0.00010280599999999696, 0.0001022359999999986, 0.00010220899999999894, 0.00010209700000000238, 0.00010207000000000271, 0.00010188900000000084, 0.0001027080000000069, 0.00010231899999999655, 0.00010202799999999707, 0.00010176399999999725, 0.00010193099999999955, 0.00010177800000000375, 0.00010229099999999741, 0.00010262500000000202, 0.00010229200000000382, 0.00010188900000000084, 0.00010275000000000561, 0.00010273700000000552, 0.00010255600000000364, 0.00010247299999999876, 0.00010234699999999569, 0.00010198599999999836, 0.00010280499999999748, 0.00010205500000000367, 0.00010181899999999605, 0.00010188800000000137, 0.00010232000000000296, 0.00010243000000000058, 0.00010181899999999605, 0.00010272199999999954, 0.00010248599999999886, 0.00010177700000000428, 0.00010187500000000127, 0.00010194399999999965, 0.00010195799999999922, 0.00010186099999999476, 0.0001018480000000016, 0.0001023610000000022, 0.000102513999999998, 0.00010186099999999476, 0.00010208300000000281, 0.00010248599999999886, 0.00010181900000000299, 0.00010188900000000084, 0.00010261100000000245]</msg>
<status status="PASS" starttime="20201112 12:44:00.064" endtime="20201112 12:44:00.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.053" endtime="20201112 12:44:00.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.081" endtime="20201112 12:44:00.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:00.089" endtime="20201112 12:44:00.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.084" endtime="20201112 12:44:00.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.076" endtime="20201112 12:44:00.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.565" endtime="20201112 12:44:00.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.564" endtime="20201112 12:44:00.115"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.137" endtime="20201112 12:44:00.157"></status>
</kw>
<msg timestamp="20201112 12:44:00.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:00.134" endtime="20201112 12:44:00.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:00.160" endtime="20201112 12:44:00.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.166" endtime="20201112 12:44:00.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.127" endtime="20201112 12:44:00.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.121" endtime="20201112 12:44:00.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.189" endtime="20201112 12:44:00.527"></status>
</kw>
<msg timestamp="20201112 12:44:00.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040125347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040228847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:00.186" endtime="20201112 12:44:00.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040125347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040228847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:00.536" endtime="20201112 12:44:00.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.554" endtime="20201112 12:44:00.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.179" endtime="20201112 12:44:00.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.174" endtime="20201112 12:44:00.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:00.574" level="INFO">${RESULT} = [{'time': 0.040228847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010349999999999943, 'source_diff': 0.00010349999999999943}, {'time': 0.040355181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:00.566" endtime="20201112 12:44:00.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:00.604" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:00.576" endtime="20201112 12:44:00.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.615" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 12:44:00.612" endtime="20201112 12:44:00.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.620" level="INFO">VALUE: [0.00010349999999999943, 0.00010322299999999951, 0.0001028060000000039, 0.00010298599999999936, 0.0001035559999999977, 0.00010276399999999825, 0.00010286099999999576, 0.00010286099999999576, 0.00010291699999999404, 0.00010299999999999893, 0.00010302700000000553, 0.00010313900000000209, 0.00010347200000000029, 0.0001035559999999977, 0.00010304200000000457, 0.00010307000000000371, 0.00010281899999999705, 0.0001036940000000014, 0.00010297199999999979, 0.00010359699999999694, 0.00010358399999999685, 0.00010348599999999986, 0.0001035689999999978, 0.00010297199999999979, 0.00010316700000000123, 0.00010313900000000209, 0.00010308299999999687, 0.00010366600000000226, 0.00010293100000000055, 0.00010374999999999968, 0.00010334700000000363, 0.00010359800000000335, 0.00010301299999999902, 0.00010316600000000176, 0.00010308399999999635, 0.00010329199999999789, 0.00010331900000000449, 0.00010332000000000396, 0.00010281900000000399, 0.00010370799999999403, 0.00010277699999999834, 0.00010334699999999669, 0.00010334700000000363, 0.00010319399999999396, 0.000103028000000005, 0.00010287500000000227, 0.00010293100000000055, 0.00010348599999999986, 0.00010294400000000065, 0.00010319500000000037]</msg>
<status status="PASS" starttime="20201112 12:44:00.617" endtime="20201112 12:44:00.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.606" endtime="20201112 12:44:00.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.630" endtime="20201112 12:44:00.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:00.639" endtime="20201112 12:44:00.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.634" endtime="20201112 12:44:00.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.626" endtime="20201112 12:44:00.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.117" endtime="20201112 12:44:00.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.116" endtime="20201112 12:44:00.665"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.688" endtime="20201112 12:44:00.708"></status>
</kw>
<msg timestamp="20201112 12:44:00.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:00.685" endtime="20201112 12:44:00.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:00.711" endtime="20201112 12:44:00.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.717" endtime="20201112 12:44:00.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.677" endtime="20201112 12:44:00.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.672" endtime="20201112 12:44:00.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.740" endtime="20201112 12:44:01.076"></status>
</kw>
<msg timestamp="20201112 12:44:01.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040359819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040464292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:00.737" endtime="20201112 12:44:01.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040359819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040464292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:01.085" endtime="20201112 12:44:01.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.103" endtime="20201112 12:44:01.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.730" endtime="20201112 12:44:01.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.725" endtime="20201112 12:44:01.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:01.122" level="INFO">${RESULT} = [{'time': 0.040464292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010447300000000076, 'source_diff': 0.00010447300000000076}, {'time': 0.040591653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:01.113" endtime="20201112 12:44:01.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:01.152" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:01.124" endtime="20201112 12:44:01.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.162" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 12:44:01.160" endtime="20201112 12:44:01.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.168" level="INFO">VALUE: [0.00010447300000000076, 0.00010452799999999957, 0.00010376400000000618, 0.00010374999999999968, 0.00010450000000000043, 0.00010450000000000043, 0.00010445799999999478, 0.00010463899999999665, 0.00010419500000000137, 0.00010397200000000079, 0.00010470799999999503, 0.00010441699999999554, 0.00010447200000000129, 0.00010413900000000309, 0.00010462499999999708, 0.00010416600000000276, 0.00010393100000000155, 0.0001043889999999964, 0.00010426399999999975, 0.00010425000000000018, 0.00010458299999999837, 0.00010458300000000531, 0.00010376399999999925, 0.00010429099999999941, 0.00010444500000000162, 0.0001045559999999987, 0.00010402799999999907, 0.0001039160000000025, 0.00010406999999999778, 0.0001047219999999946, 0.0001043610000000042, 0.00010462499999999708, 0.00010472300000000101, 0.00010388900000000284, 0.0001046940000000024, 0.00010444400000000215, 0.00010384699999999719, 0.00010440200000000344, 0.00010411199999999649, 0.00010416600000000276, 0.00010448600000000086, 0.00010388900000000284, 0.00010422300000000051, 0.0001042219999999941, 0.00010440200000000344, 0.00010448600000000086, 0.0001045689999999988, 0.00010415299999999572, 0.00010447199999999435, 0.00010390299999999547]</msg>
<status status="PASS" starttime="20201112 12:44:01.165" endtime="20201112 12:44:01.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.153" endtime="20201112 12:44:01.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.177" endtime="20201112 12:44:01.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:01.185" endtime="20201112 12:44:01.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.181" endtime="20201112 12:44:01.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.173" endtime="20201112 12:44:01.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.667" endtime="20201112 12:44:01.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.666" endtime="20201112 12:44:01.211"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.234" endtime="20201112 12:44:01.253"></status>
</kw>
<msg timestamp="20201112 12:44:01.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:01.230" endtime="20201112 12:44:01.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:01.257" endtime="20201112 12:44:01.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.263" endtime="20201112 12:44:01.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.223" endtime="20201112 12:44:01.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.218" endtime="20201112 12:44:01.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.288" endtime="20201112 12:44:01.637"></status>
</kw>
<msg timestamp="20201112 12:44:01.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039944736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040050069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:01.284" endtime="20201112 12:44:01.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039944736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040050069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:01.646" endtime="20201112 12:44:01.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.665" endtime="20201112 12:44:01.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.275" endtime="20201112 12:44:01.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.271" endtime="20201112 12:44:01.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:01.684" level="INFO">${RESULT} = [{'time': 0.040050069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010533299999999912, 'source_diff': 0.00010533299999999912}, {'time': 0.040176431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:01.675" endtime="20201112 12:44:01.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:01.714" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:01.686" endtime="20201112 12:44:01.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.725" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 12:44:01.723" endtime="20201112 12:44:01.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.730" level="INFO">VALUE: [0.00010533299999999912, 0.00010523700000000108, 0.0001050140000000005, 0.00010505499999999973, 0.00010502800000000007, 0.00010547199999999535, 0.000105514000000001, 0.00010542999999999664, 0.00010515200000000419, 0.00010538799999999793, 0.00010525000000000118, 0.0001057360000000021, 0.00010509799999999792, 0.0001050689999999993, 0.00010520900000000194, 0.00010524999999999424, 0.00010498599999999442, 0.00010527800000000032, 0.00010545900000000219, 0.00010576300000000177, 0.00010490300000000341, 0.00010531999999999903, 0.00010477799999999982, 0.00010562500000000502, 0.00010477799999999982, 0.000105514000000001, 0.00010537500000000477, 0.00010502800000000007, 0.00010552800000000057, 0.00010481899999999905, 0.00010555500000000023, 0.00010500000000000093, 0.0001050140000000005, 0.00010481999999999853, 0.00010529199999999989, 0.00010481899999999905, 0.00010511099999999801, 0.00010504100000000016, 0.00010558299999999937, 0.00010541599999999707, 0.00010504199999999964, 0.00010504100000000016, 0.00010480499999999948, 0.00010579100000000091, 0.00010566699999999679, 0.00010498600000000136, 0.0001057360000000021, 0.00010552800000000057, 0.00010494400000000265, 0.00010518000000000333]</msg>
<status status="PASS" starttime="20201112 12:44:01.727" endtime="20201112 12:44:01.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.716" endtime="20201112 12:44:01.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.740" endtime="20201112 12:44:01.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:01.748" endtime="20201112 12:44:01.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.744" endtime="20201112 12:44:01.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.735" endtime="20201112 12:44:01.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.213" endtime="20201112 12:44:01.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.212" endtime="20201112 12:44:01.774"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.797" endtime="20201112 12:44:01.818"></status>
</kw>
<msg timestamp="20201112 12:44:01.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:01.794" endtime="20201112 12:44:01.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:01.822" endtime="20201112 12:44:01.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.828" endtime="20201112 12:44:01.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.786" endtime="20201112 12:44:01.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.781" endtime="20201112 12:44:01.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.851" endtime="20201112 12:44:02.199"></status>
</kw>
<msg timestamp="20201112 12:44:02.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040157722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040263528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:01.848" endtime="20201112 12:44:02.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040157722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040263528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:02.208" endtime="20201112 12:44:02.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.227" endtime="20201112 12:44:02.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.841" endtime="20201112 12:44:02.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.836" endtime="20201112 12:44:02.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:02.245" level="INFO">${RESULT} = [{'time': 0.040263528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010580599999999996, 'source_diff': 0.00010580599999999996}, {'time': 0.040388875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:02.236" endtime="20201112 12:44:02.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:02.275" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:02.247" endtime="20201112 12:44:02.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.286" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 12:44:02.283" endtime="20201112 12:44:02.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.291" level="INFO">VALUE: [0.00010580599999999996, 0.00010669399999999746, 0.00010611100000000595, 0.00010631900000000055, 0.00010595899999999575, 0.00010618099999999686, 0.00010632000000000003, 0.00010649999999999549, 0.00010649999999999549, 0.0001066810000000043, 0.00010616700000000423, 0.00010594400000000365, 0.0001066940000000044, 0.00010663899999999865, 0.00010616700000000423, 0.00010593100000000355, 0.00010666700000000473, 0.00010665299999999822, 0.00010650000000000243, 0.00010577700000000134, 0.00010577800000000082, 0.00010598699999999489, 0.00010579100000000091, 0.0001060140000000015, 0.00010608399999999935, 0.00010579200000000039, 0.0001063889999999984, 0.00010605500000000073, 0.00010608399999999935, 0.00010587500000000527, 0.00010641700000000448, 0.0001065560000000007, 0.0001067360000000031, 0.00010640300000000491, 0.00010642999999999764, 0.0001064019999999985, 0.00010668099999999736, 0.00010615299999999772, 0.0001059160000000045, 0.00010647199999999635, 0.0001063889999999984, 0.00010659699999999994, 0.00010623599999999567, 0.00010659699999999994, 0.00010651399999999506, 0.00010650000000000243, 0.00010630500000000098, 0.00010597200000000279, 0.00010598600000000236, 0.00010608299999999987]</msg>
<status status="PASS" starttime="20201112 12:44:02.288" endtime="20201112 12:44:02.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.277" endtime="20201112 12:44:02.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.301" endtime="20201112 12:44:02.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:02.309" endtime="20201112 12:44:02.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.304" endtime="20201112 12:44:02.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.296" endtime="20201112 12:44:02.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.776" endtime="20201112 12:44:02.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.775" endtime="20201112 12:44:02.335"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.358" endtime="20201112 12:44:02.379"></status>
</kw>
<msg timestamp="20201112 12:44:02.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:02.354" endtime="20201112 12:44:02.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:02.382" endtime="20201112 12:44:02.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.389" endtime="20201112 12:44:02.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.347" endtime="20201112 12:44:02.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.341" endtime="20201112 12:44:02.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.412" endtime="20201112 12:44:02.764"></status>
</kw>
<msg timestamp="20201112 12:44:02.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040266125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040373875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:02.408" endtime="20201112 12:44:02.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040266125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040373875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:02.774" endtime="20201112 12:44:02.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.792" endtime="20201112 12:44:02.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.401" endtime="20201112 12:44:02.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.397" endtime="20201112 12:44:02.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:02.813" level="INFO">${RESULT} = [{'time': 0.040373875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010774999999999674, 'source_diff': 0.00010774999999999674}, {'time': 0.04049925, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:44:02.804" endtime="20201112 12:44:02.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:02.842" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:02.815" endtime="20201112 12:44:02.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.853" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 12:44:02.851" endtime="20201112 12:44:02.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.858" level="INFO">VALUE: [0.00010774999999999674, 0.00010765299999999922, 0.00010724999999999624, 0.00010690300000000541, 0.00010749999999999649, 0.00010692999999999814, 0.00010776299999999683, 0.00010758300000000137, 0.0001077360000000041, 0.00010767999999999889, 0.0001073889999999994, 0.00010726300000000327, 0.00010770800000000497, 0.00010679100000000191, 0.00010687499999999933, 0.00010713899999999915, 0.00010745899999999725, 0.00010691699999999804, 0.00010708400000000035, 0.0001070560000000012, 0.00010745800000000472, 0.00010681900000000105, 0.00010745899999999725, 0.00010751399999999606, 0.00010697200000000379, 0.00010758400000000085, 0.0001072219999999971, 0.00010680600000000096, 0.0001075419999999952, 0.00010773599999999717, 0.00010747199999999735, 0.00010722200000000404, 0.00010700000000000293, 0.00010704200000000164, 0.00010681900000000105, 0.00010693100000000455, 0.00010725000000000318, 0.00010679100000000191, 0.0001072219999999971, 0.00010711199999999949, 0.00010763899999999965, 0.00010733300000000112, 0.00010680500000000148, 0.00010729099999999547, 0.00010731899999999461, 0.00010749999999999649, 0.00010708300000000087, 0.00010679100000000191, 0.00010707000000000078, 0.00010693100000000455]</msg>
<status status="PASS" starttime="20201112 12:44:02.855" endtime="20201112 12:44:02.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.844" endtime="20201112 12:44:02.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.868" endtime="20201112 12:44:02.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:02.876" endtime="20201112 12:44:02.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.872" endtime="20201112 12:44:02.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.863" endtime="20201112 12:44:02.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.337" endtime="20201112 12:44:02.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.336" endtime="20201112 12:44:02.902"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.924" endtime="20201112 12:44:02.944"></status>
</kw>
<msg timestamp="20201112 12:44:02.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:02.921" endtime="20201112 12:44:02.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:02.948" endtime="20201112 12:44:02.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.954" endtime="20201112 12:44:02.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.914" endtime="20201112 12:44:02.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.908" endtime="20201112 12:44:02.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.977" endtime="20201112 12:44:03.315"></status>
</kw>
<msg timestamp="20201112 12:44:03.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040153181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040261278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:02.974" endtime="20201112 12:44:03.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040153181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040261278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:03.324" endtime="20201112 12:44:03.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.343" endtime="20201112 12:44:03.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.966" endtime="20201112 12:44:03.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.962" endtime="20201112 12:44:03.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:03.361" level="INFO">${RESULT} = [{'time': 0.040261278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001080969999999945, 'source_diff': 0.0001080969999999945}, {'time': 0.040388694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:03.353" endtime="20201112 12:44:03.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:03.391" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:03.363" endtime="20201112 12:44:03.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.402" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 12:44:03.400" endtime="20201112 12:44:03.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.407" level="INFO">VALUE: [0.0001080969999999945, 0.00010783300000000162, 0.00010841699999999954, 0.00010777799999999588, 0.00010813900000000015, 0.00010870799999999903, 0.00010865300000000022, 0.00010869499999999893, 0.00010806999999999484, 0.00010848599999999792, 0.00010813900000000015, 0.0001085549999999963, 0.00010779200000000239, 0.00010775000000000368, 0.00010833300000000212, 0.00010809700000000144, 0.00010837500000000083, 0.00010884700000000219, 0.00010797199999999785, 0.00010817999999999939, 0.00010852799999999663, 0.00010802800000000307, 0.00010794399999999871, 0.00010781900000000205, 0.0001083890000000004, 0.00010866699999999979, 0.00010811100000000101, 0.00010865300000000022, 0.00010822200000000504, 0.00010866699999999979, 0.00010784700000000119, 0.00010869499999999893, 0.00010805599999999527, 0.00010818099999999886, 0.00010837500000000083, 0.00010834800000000117, 0.00010869499999999893, 0.00010816599999999982, 0.00010780500000000248, 0.0001082769999999969, 0.00010840299999999997, 0.00010870799999999903, 0.00010779100000000291, 0.00010783300000000162, 0.00010836100000000126, 0.00010799999999999699, 0.0001080560000000022, 0.0001080560000000022, 0.00010869399999999946, 0.00010804100000000316]</msg>
<status status="PASS" starttime="20201112 12:44:03.404" endtime="20201112 12:44:03.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.393" endtime="20201112 12:44:03.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.416" endtime="20201112 12:44:03.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:03.425" endtime="20201112 12:44:03.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.420" endtime="20201112 12:44:03.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.412" endtime="20201112 12:44:03.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.904" endtime="20201112 12:44:03.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.903" endtime="20201112 12:44:03.451"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.473" endtime="20201112 12:44:03.493"></status>
</kw>
<msg timestamp="20201112 12:44:03.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:03.470" endtime="20201112 12:44:03.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:03.496" endtime="20201112 12:44:03.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.502" endtime="20201112 12:44:03.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.463" endtime="20201112 12:44:03.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.457" endtime="20201112 12:44:03.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.525" endtime="20201112 12:44:03.862"></status>
</kw>
<msg timestamp="20201112 12:44:03.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039938167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040047, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:03.522" endtime="20201112 12:44:03.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039938167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040047, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:03.871" endtime="20201112 12:44:03.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.889" endtime="20201112 12:44:03.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.515" endtime="20201112 12:44:03.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.510" endtime="20201112 12:44:03.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:03.908" level="INFO">${RESULT} = [{'time': 0.040047, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010883300000000262, 'source_diff': 0.00010883300000000262}, {'time': 0.040176361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:44:03.899" endtime="20201112 12:44:03.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:03.938" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:03.910" endtime="20201112 12:44:03.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.948" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 12:44:03.946" endtime="20201112 12:44:03.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:03.954" level="INFO">VALUE: [0.00010883300000000262, 0.00010909700000000244, 0.0001093890000000014, 0.00010926399999999781, 0.00010907000000000278, 0.00010969499999999993, 0.00010977800000000482, 0.00010927800000000432, 0.00010944499999999968, 0.00010930599999999652, 0.00010937499999999489, 0.00010940300000000097, 0.00010916700000000029, 0.00010969400000000046, 0.00010952699999999815, 0.00010916600000000082, 0.00010952799999999763, 0.0001093890000000014, 0.00010933300000000312, 0.00010958399999999591, 0.00010932000000000303, 0.00010882000000000253, 0.00010881999999999559, 0.000109208999999999, 0.00010895799999999928, 0.00010976399999999831, 0.00010915300000000072, 0.00010897299999999832, 0.00010940300000000097, 0.00010900000000000493, 0.00010883300000000262, 0.00010883300000000262, 0.00010944499999999968, 0.00010895799999999928, 0.00010972299999999907, 0.00010972299999999907, 0.00010979099999999797, 0.00010970800000000003, 0.00010904100000000416, 0.00010977800000000482, 0.00010947199999999935, 0.00010918099999999986, 0.00010980499999999754, 0.00010947200000000629, 0.00010969400000000046, 0.00010927800000000432, 0.00010879200000000339, 0.00010979199999999745, 0.00010923599999999867, 0.00010881999999999559]</msg>
<status status="PASS" starttime="20201112 12:44:03.951" endtime="20201112 12:44:03.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.939" endtime="20201112 12:44:03.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:03.963" endtime="20201112 12:44:03.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:03.972" endtime="20201112 12:44:03.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.967" endtime="20201112 12:44:03.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.959" endtime="20201112 12:44:03.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.453" endtime="20201112 12:44:03.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.451" endtime="20201112 12:44:03.998"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.020" endtime="20201112 12:44:04.040"></status>
</kw>
<msg timestamp="20201112 12:44:04.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:04.017" endtime="20201112 12:44:04.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:04.043" endtime="20201112 12:44:04.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.050" endtime="20201112 12:44:04.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.010" endtime="20201112 12:44:04.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.004" endtime="20201112 12:44:04.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.073" endtime="20201112 12:44:04.409"></status>
</kw>
<msg timestamp="20201112 12:44:04.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040215333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040325222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.070" endtime="20201112 12:44:04.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040215333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040325222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.418" endtime="20201112 12:44:04.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.436" endtime="20201112 12:44:04.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.062" endtime="20201112 12:44:04.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.058" endtime="20201112 12:44:04.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:04.455" level="INFO">${RESULT} = [{'time': 0.040325222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001098890000000019, 'source_diff': 0.0001098890000000019}, {'time': 0.040455667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:04.446" endtime="20201112 12:44:04.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:04.484" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:04.457" endtime="20201112 12:44:04.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.495" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 12:44:04.493" endtime="20201112 12:44:04.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.500" level="INFO">VALUE: [0.0001098890000000019, 0.00011052799999999863, 0.00010999999999999899, 0.00011065300000000222, 0.00011029199999999795, 0.00011072300000000007, 0.00011027800000000532, 0.00011037500000000283, 0.00011031899999999761, 0.00011070800000000103, 0.00011058399999999691, 0.00011016700000000129, 0.00010999999999999899, 0.00011008300000000387, 0.00011002800000000507, 0.00010987500000000233, 0.00010995800000000028, 0.00011006899999999736, 0.00010986100000000276, 0.0001100690000000043, 0.00011061100000000351, 0.00011049999999999949, 0.00011012500000000258, 0.00011043100000000111, 0.00011070800000000103, 0.00010987499999999539, 0.00011052799999999863, 0.00011061100000000351, 0.00011024999999999924, 0.00011049999999999949, 0.0001103340000000036, 0.00010980599999999702, 0.0001100140000000055, 0.00011054099999999872, 0.00011019400000000096, 0.00010998599999999942, 0.00010997199999999985, 0.00010984799999999573, 0.00011016600000000182, 0.00011051399999999906, 0.00011011100000000301, 0.00011027799999999838, 0.00011074999999999974, 0.00011074999999999974, 0.00010997199999999985, 0.00010995899999999975, 0.00011009799999999598, 0.0001100140000000055, 0.00011050000000000643, 0.00011013900000000215]</msg>
<status status="PASS" starttime="20201112 12:44:04.497" endtime="20201112 12:44:04.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.486" endtime="20201112 12:44:04.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.510" endtime="20201112 12:44:04.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:04.518" endtime="20201112 12:44:04.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.514" endtime="20201112 12:44:04.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.505" endtime="20201112 12:44:04.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.000" endtime="20201112 12:44:04.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:03.998" endtime="20201112 12:44:04.544"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.566" endtime="20201112 12:44:04.587"></status>
</kw>
<msg timestamp="20201112 12:44:04.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:04.563" endtime="20201112 12:44:04.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:04.590" endtime="20201112 12:44:04.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.596" endtime="20201112 12:44:04.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.556" endtime="20201112 12:44:04.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.550" endtime="20201112 12:44:04.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.620" endtime="20201112 12:44:04.957"></status>
</kw>
<msg timestamp="20201112 12:44:04.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040211264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040323042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.616" endtime="20201112 12:44:04.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040211264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040323042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.966" endtime="20201112 12:44:04.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.984" endtime="20201112 12:44:04.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.609" endtime="20201112 12:44:04.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.604" endtime="20201112 12:44:04.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:05.005" level="INFO">${RESULT} = [{'time': 0.040323042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011177800000000682, 'source_diff': 0.00011177800000000682}, {'time': 0.040455403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:04.996" endtime="20201112 12:44:05.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:05.035" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:05.007" endtime="20201112 12:44:05.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.045" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 12:44:05.043" endtime="20201112 12:44:05.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.051" level="INFO">VALUE: [0.00011177800000000682, 0.00011133399999999766, 0.00011127799999999938, 0.00011175000000000074, 0.00011158299999999843, 0.00011145800000000178, 0.00011127799999999938, 0.00011125000000000024, 0.00011143000000000264, 0.00011125000000000024, 0.00011168100000000236, 0.00011138899999999646, 0.00011177799999999988, 0.00011093099999999467, 0.00011095900000000075, 0.00011105599999999827, 0.00011098600000000042, 0.00011175000000000074, 0.00011137499999999689, 0.00011113899999999621, 0.00011183399999999816, 0.00011170800000000203, 0.00011161100000000451, 0.00011112500000000358, 0.00011095900000000075, 0.0001117090000000015, 0.00011144500000000168, 0.0001114169999999956, 0.00011144400000000221, 0.00011161099999999757, 0.0001112220000000011, 0.00011077799999999888, 0.00011150000000000049, 0.00011163899999999671, 0.0001108890000000029, 0.00011129199999999895, 0.00011177799999999988, 0.00011168100000000236, 0.00011179199999999945, 0.0001110549999999988, 0.00011095900000000075, 0.00011179099999999997, 0.00011129099999999947, 0.00011097300000000032, 0.00011081999999999759, 0.00011113900000000315, 0.00011145800000000178, 0.00011104200000000564, 0.00011143100000000211, 0.00011123600000000067]</msg>
<status status="PASS" starttime="20201112 12:44:05.048" endtime="20201112 12:44:05.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.036" endtime="20201112 12:44:05.054"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.060" endtime="20201112 12:44:05.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:05.068" endtime="20201112 12:44:05.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.064" endtime="20201112 12:44:05.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.056" endtime="20201112 12:44:05.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.546" endtime="20201112 12:44:05.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.545" endtime="20201112 12:44:05.094"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.117" endtime="20201112 12:44:05.137"></status>
</kw>
<msg timestamp="20201112 12:44:05.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:05.113" endtime="20201112 12:44:05.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:05.140" endtime="20201112 12:44:05.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.146" endtime="20201112 12:44:05.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.106" endtime="20201112 12:44:05.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.101" endtime="20201112 12:44:05.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.169" endtime="20201112 12:44:05.505"></status>
</kw>
<msg timestamp="20201112 12:44:05.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040097153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040209403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:05.166" endtime="20201112 12:44:05.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040097153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040209403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:05.514" endtime="20201112 12:44:05.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.532" endtime="20201112 12:44:05.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.159" endtime="20201112 12:44:05.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.154" endtime="20201112 12:44:05.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:05.551" level="INFO">${RESULT} = [{'time': 0.040209403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001122499999999943, 'source_diff': 0.0001122499999999943}, {'time': 0.040344819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:05.542" endtime="20201112 12:44:05.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:05.580" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:05.553" endtime="20201112 12:44:05.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.591" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 12:44:05.589" endtime="20201112 12:44:05.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.597" level="INFO">VALUE: [0.0001122499999999943, 0.00011258299999999943, 0.0001122770000000009, 0.00011194400000000271, 0.00011229100000000047, 0.00011248600000000192, 0.00011219499999999549, 0.00011251400000000106, 0.00011226399999999387, 0.00011236099999999832, 0.00011233299999999918, 0.00011181899999999911, 0.0001124169999999966, 0.00011252800000000063, 0.00011200000000000099, 0.00011273600000000217, 0.00011229199999999995, 0.00011279200000000045, 0.00011198600000000142, 0.00011273600000000217, 0.00011229199999999995, 0.00011249999999999455, 0.00011186100000000476, 0.0001123890000000044, 0.0001120419999999997, 0.00011200000000000099, 0.00011249999999999455, 0.00011276400000000131, 0.00011268099999999642, 0.00011252800000000063, 0.00011273599999999523, 0.00011245800000000278, 0.00011209799999999798, 0.00011191700000000304, 0.00011259799999999848, 0.00011237500000000483, 0.00011279100000000097, 0.0001120419999999997, 0.00011215199999999731, 0.0001125550000000003, 0.00011252800000000063, 0.00011212499999999764, 0.00011217999999999645, 0.00011191600000000357, 0.00011229100000000047, 0.00011267999999999695, 0.00011276400000000131, 0.00011208299999999893, 0.00011249999999999455, 0.00011256999999999934]</msg>
<status status="PASS" starttime="20201112 12:44:05.594" endtime="20201112 12:44:05.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.582" endtime="20201112 12:44:05.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.613" endtime="20201112 12:44:05.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:05.621" endtime="20201112 12:44:05.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.617" endtime="20201112 12:44:05.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.608" endtime="20201112 12:44:05.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.096" endtime="20201112 12:44:05.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.095" endtime="20201112 12:44:05.647"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.670" endtime="20201112 12:44:05.690"></status>
</kw>
<msg timestamp="20201112 12:44:05.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:05.666" endtime="20201112 12:44:05.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:05.693" endtime="20201112 12:44:05.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.699" endtime="20201112 12:44:05.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.659" endtime="20201112 12:44:05.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.653" endtime="20201112 12:44:05.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.722" endtime="20201112 12:44:06.059"></status>
</kw>
<msg timestamp="20201112 12:44:06.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039945361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040058611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:05.719" endtime="20201112 12:44:06.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039945361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040058611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:06.069" endtime="20201112 12:44:06.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.087" endtime="20201112 12:44:06.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.712" endtime="20201112 12:44:06.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.707" endtime="20201112 12:44:06.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:06.105" level="INFO">${RESULT} = [{'time': 0.040058611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011325000000000224, 'source_diff': 0.00011325000000000224}, {'time': 0.040192028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:06.097" endtime="20201112 12:44:06.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:06.135" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:06.107" endtime="20201112 12:44:06.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.146" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 12:44:06.144" endtime="20201112 12:44:06.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.151" level="INFO">VALUE: [0.00011325000000000224, 0.00011358399999999991, 0.00011377800000000188, 0.00011320899999999606, 0.00011302700000000165, 0.00011312500000000558, 0.00011308299999999993, 0.00011366699999999785, 0.00011377800000000188, 0.00011301400000000156, 0.00011326400000000181, 0.000113597, 0.00011280600000000002, 0.00011347299999999588, 0.00011284699999999925, 0.000113209000000003, 0.00011362499999999914, 0.00011323600000000267, 0.00011311099999999907, 0.00011362499999999914, 0.00011368099999999742, 0.0001137090000000035, 0.00011322300000000257, 0.00011323599999999573, 0.00011281900000000011, 0.00011363899999999871, 0.00011344400000000421, 0.00011369399999999752, 0.00011376399999999537, 0.00011308299999999993, 0.00011298600000000242, 0.00011334699999999975, 0.00011355599999999383, 0.00011377800000000188, 0.00011375000000000274, 0.00011329100000000147, 0.00011276400000000131, 0.00011367999999999795, 0.00011376399999999537, 0.00011301400000000156, 0.00011281999999999959, 0.00011348599999999598, 0.00011308299999999993, 0.00011308299999999993, 0.00011363899999999871, 0.00011361100000000651, 0.00011319499999999649, 0.0001133890000000054, 0.00011286200000000524, 0.00011368100000000436]</msg>
<status status="PASS" starttime="20201112 12:44:06.148" endtime="20201112 12:44:06.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.137" endtime="20201112 12:44:06.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.161" endtime="20201112 12:44:06.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:06.169" endtime="20201112 12:44:06.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.164" endtime="20201112 12:44:06.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.156" endtime="20201112 12:44:06.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.649" endtime="20201112 12:44:06.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.648" endtime="20201112 12:44:06.195"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.217" endtime="20201112 12:44:06.237"></status>
</kw>
<msg timestamp="20201112 12:44:06.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:06.214" endtime="20201112 12:44:06.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:06.241" endtime="20201112 12:44:06.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.247" endtime="20201112 12:44:06.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.207" endtime="20201112 12:44:06.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.201" endtime="20201112 12:44:06.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.270" endtime="20201112 12:44:06.607"></status>
</kw>
<msg timestamp="20201112 12:44:06.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040115333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040229292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:06.266" endtime="20201112 12:44:06.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040115333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040229292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:06.616" endtime="20201112 12:44:06.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.634" endtime="20201112 12:44:06.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.259" endtime="20201112 12:44:06.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.255" endtime="20201112 12:44:06.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:06.653" level="INFO">${RESULT} = [{'time': 0.040229292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011395899999999681, 'source_diff': 0.00011395899999999681}, {'time': 0.040365694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:06.644" endtime="20201112 12:44:06.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:06.682" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:06.655" endtime="20201112 12:44:06.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.693" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 12:44:06.691" endtime="20201112 12:44:06.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.699" level="INFO">VALUE: [0.00011395899999999681, 0.0001145550000000023, 0.00011391599999999863, 0.00011422299999999663, 0.000114082999999994, 0.00011427800000000238, 0.00011395799999999734, 0.00011404100000000222, 0.00011450000000000349, 0.00011432000000000109, 0.0001140970000000005, 0.00011436100000000032, 0.00011436100000000032, 0.0001143749999999999, 0.00011448600000000392, 0.00011400000000000299, 0.00011480600000000202, 0.00011412499999999964, 0.0001139299999999982, 0.00011398600000000342, 0.00011432000000000109, 0.00011450000000000349, 0.00011419500000000443, 0.0001138890000000059, 0.00011429200000000195, 0.00011457000000000134, 0.00011463899999999971, 0.00011388899999999896, 0.00011463899999999971, 0.00011416699999999835, 0.00011427800000000238, 0.00011382000000000059, 0.00011476400000000331, 0.0001142499999999963, 0.00011429200000000195, 0.00011399999999999605, 0.00011444499999999774, 0.00011429100000000247, 0.00011379200000000145, 0.00011401400000000256, 0.0001147499999999968, 0.00011381999999999365, 0.00011397300000000332, 0.00011416600000000582, 0.00011444499999999774, 0.00011426399999999587, 0.00011413899999999921, 0.00011479200000000245, 0.00011397200000000385, 0.00011393100000000461]</msg>
<status status="PASS" starttime="20201112 12:44:06.696" endtime="20201112 12:44:06.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.684" endtime="20201112 12:44:06.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.708" endtime="20201112 12:44:06.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:06.716" endtime="20201112 12:44:06.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.712" endtime="20201112 12:44:06.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.704" endtime="20201112 12:44:06.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.197" endtime="20201112 12:44:06.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.196" endtime="20201112 12:44:06.742"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.765" endtime="20201112 12:44:06.785"></status>
</kw>
<msg timestamp="20201112 12:44:06.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:06.762" endtime="20201112 12:44:06.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:06.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:06.788" endtime="20201112 12:44:06.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.795" endtime="20201112 12:44:06.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.754" endtime="20201112 12:44:06.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.749" endtime="20201112 12:44:06.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:06.818" endtime="20201112 12:44:07.156"></status>
</kw>
<msg timestamp="20201112 12:44:07.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040198417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040314236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:06.815" endtime="20201112 12:44:07.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040198417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040314236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:07.165" endtime="20201112 12:44:07.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.183" endtime="20201112 12:44:07.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.807" endtime="20201112 12:44:07.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.803" endtime="20201112 12:44:07.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:07.203" level="INFO">${RESULT} = [{'time': 0.040314236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011581900000000311, 'source_diff': 0.00011581900000000311}, {'time': 0.040446569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:07.195" endtime="20201112 12:44:07.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:07.233" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:07.205" endtime="20201112 12:44:07.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.244" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 12:44:07.241" endtime="20201112 12:44:07.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.249" level="INFO">VALUE: [0.00011581900000000311, 0.00011516599999999988, 0.00011530500000000304, 0.00011529199999999601, 0.00011502799999999619, 0.00011583300000000268, 0.00011519499999999849, 0.00011511100000000107, 0.0001148750000000004, 0.00011562500000000114, 0.00011558300000000243, 0.00011534700000000175, 0.00011500000000000399, 0.00011480600000000202, 0.00011499999999999705, 0.00011518099999999892, 0.00011507000000000184, 0.00011565300000000028, 0.00011520899999999806, 0.00011569499999999899, 0.00011497300000000432, 0.00011507000000000184, 0.00011481999999999465, 0.00011568100000000636, 0.00011483300000000168, 0.00011508400000000141, 0.00011493100000000561, 0.00011500000000000399, 0.00011543099999999917, 0.00011481999999999465, 0.00011576399999999737, 0.00011569499999999899, 0.00011506899999999542, 0.00011500000000000399, 0.00011550000000000449, 0.00011513900000000021, 0.00011562500000000114, 0.00011551399999999712, 0.000115597000000002, 0.00011499999999999705, 0.00011483299999999474, 0.00011563900000000071, 0.00011569499999999899, 0.00011533300000000218, 0.00011498600000000442, 0.0001150970000000015, 0.00011491599999999963, 0.00011547199999999841, 0.00011527799999999644, 0.00011573599999999823]</msg>
<status status="PASS" starttime="20201112 12:44:07.246" endtime="20201112 12:44:07.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.235" endtime="20201112 12:44:07.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.258" endtime="20201112 12:44:07.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:07.267" endtime="20201112 12:44:07.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.262" endtime="20201112 12:44:07.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.254" endtime="20201112 12:44:07.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.744" endtime="20201112 12:44:07.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:06.743" endtime="20201112 12:44:07.292"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.315" endtime="20201112 12:44:07.335"></status>
</kw>
<msg timestamp="20201112 12:44:07.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:07.312" endtime="20201112 12:44:07.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:07.339" endtime="20201112 12:44:07.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.345" endtime="20201112 12:44:07.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.304" endtime="20201112 12:44:07.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.299" endtime="20201112 12:44:07.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.368" endtime="20201112 12:44:07.705"></status>
</kw>
<msg timestamp="20201112 12:44:07.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040189528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040305861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:07.365" endtime="20201112 12:44:07.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040189528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040305861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:07.714" endtime="20201112 12:44:07.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.733" endtime="20201112 12:44:07.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.358" endtime="20201112 12:44:07.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.353" endtime="20201112 12:44:07.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:07.752" level="INFO">${RESULT} = [{'time': 0.040305861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011633299999999624, 'source_diff': 0.00011633299999999624}, {'time': 0.040444278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:07.743" endtime="20201112 12:44:07.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:07.782" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:07.754" endtime="20201112 12:44:07.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.793" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 12:44:07.790" endtime="20201112 12:44:07.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.798" level="INFO">VALUE: [0.00011633299999999624, 0.0001162499999999983, 0.0001164300000000007, 0.00011616600000000088, 0.00011644400000000027, 0.00011605499999999686, 0.00011644499999999974, 0.00011673599999999923, 0.0001167499999999988, 0.0001163750000000019, 0.0001158750000000014, 0.00011665300000000128, 0.00011611100000000207, 0.0001167770000000054, 0.00011608400000000241, 0.00011611099999999513, 0.00011620799999999959, 0.00011581899999999618, 0.00011608300000000293, 0.0001165699999999964, 0.00011623599999999873, 0.0001163750000000019, 0.00011644499999999974, 0.00011627799999999744, 0.00011647199999999941, 0.00011661100000000257, 0.00011598600000000542, 0.0001160970000000025, 0.00011600000000000499, 0.00011595799999999934, 0.00011647199999999941, 0.00011663900000000171, 0.00011649999999999855, 0.00011666600000000138, 0.00011669400000000052, 0.00011677799999999794, 0.00011644499999999974, 0.00011672199999999966, 0.00011588900000000096, 0.0001167499999999988, 0.00011602800000000413, 0.00011672199999999966, 0.00011677799999999794, 0.00011604199999999676, 0.00011670800000000009, 0.00011599999999999805, 0.00011673599999999923, 0.00011620799999999959, 0.0001158750000000014, 0.0001160970000000025]</msg>
<status status="PASS" starttime="20201112 12:44:07.795" endtime="20201112 12:44:07.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.784" endtime="20201112 12:44:07.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.808" endtime="20201112 12:44:07.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:07.816" endtime="20201112 12:44:07.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.812" endtime="20201112 12:44:07.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.804" endtime="20201112 12:44:07.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.295" endtime="20201112 12:44:07.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.293" endtime="20201112 12:44:07.842"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.866" endtime="20201112 12:44:07.888"></status>
</kw>
<msg timestamp="20201112 12:44:07.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:07.862" endtime="20201112 12:44:07.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:07.892" endtime="20201112 12:44:07.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.898" endtime="20201112 12:44:07.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.855" endtime="20201112 12:44:07.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.849" endtime="20201112 12:44:07.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.921" endtime="20201112 12:44:08.270"></status>
</kw>
<msg timestamp="20201112 12:44:08.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041367278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041484986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:07.918" endtime="20201112 12:44:08.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041367278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041484986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:08.279" endtime="20201112 12:44:08.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.298" endtime="20201112 12:44:08.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.910" endtime="20201112 12:44:08.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.906" endtime="20201112 12:44:08.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:08.317" level="INFO">${RESULT} = [{'time': 0.041484986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011770800000000109, 'source_diff': 0.00011770800000000109}, {'time': 0.041625431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:08.308" endtime="20201112 12:44:08.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:08.346" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:08.319" endtime="20201112 12:44:08.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.357" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 12:44:08.355" endtime="20201112 12:44:08.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.362" level="INFO">VALUE: [0.00011770800000000109, 0.00011749999999999955, 0.00011691600000000163, 0.0001170970000000035, 0.0001169170000000011, 0.00011698699999999895, 0.0001172499999999993, 0.0001168750000000024, 0.00011744500000000074, 0.00011687499999999545, 0.00011763899999999577, 0.00011772200000000066, 0.00011772300000000013, 0.00011704199999999776, 0.00011775000000000674, 0.00011734699999999681, 0.00011686100000000282, 0.00011718099999999398, 0.00011781899999999818, 0.00011701399999999862, 0.0001169170000000011, 0.0001170550000000048, 0.00011738899999999552, 0.00011762500000000314, 0.00011713900000000221, 0.00011742999999999476, 0.0001177499999999998, 0.00011709800000000298, 0.00011734700000000375, 0.00011694400000000077, 0.00011751399999999912, 0.00011720800000000059, 0.00011711100000000307, 0.00011777699999999947, 0.00011745900000000031, 0.00011734800000000323, 0.00011766599999999544, 0.00011690200000000206, 0.0001177499999999998, 0.00011743100000000117, 0.00011772200000000066, 0.00011711200000000255, 0.00011718100000000092, 0.00011686100000000282, 0.00011720800000000059, 0.00011748599999999998, 0.00011755599999999783, 0.00011749999999999955, 0.00011716600000000188, 0.00011698599999999948]</msg>
<status status="PASS" starttime="20201112 12:44:08.359" endtime="20201112 12:44:08.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.348" endtime="20201112 12:44:08.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.372" endtime="20201112 12:44:08.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:08.380" endtime="20201112 12:44:08.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.376" endtime="20201112 12:44:08.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.367" endtime="20201112 12:44:08.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.844" endtime="20201112 12:44:08.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.843" endtime="20201112 12:44:08.406"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.429" endtime="20201112 12:44:08.451"></status>
</kw>
<msg timestamp="20201112 12:44:08.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:08.425" endtime="20201112 12:44:08.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:08.454" endtime="20201112 12:44:08.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.460" endtime="20201112 12:44:08.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.418" endtime="20201112 12:44:08.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.413" endtime="20201112 12:44:08.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.484" endtime="20201112 12:44:08.833"></status>
</kw>
<msg timestamp="20201112 12:44:08.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040390194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040508222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:08.480" endtime="20201112 12:44:08.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040390194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040508222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:08.843" endtime="20201112 12:44:08.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.861" endtime="20201112 12:44:08.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.473" endtime="20201112 12:44:08.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.469" endtime="20201112 12:44:08.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:08.879" level="INFO">${RESULT} = [{'time': 0.040508222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011802800000000613, 'source_diff': 0.00011802800000000613}, {'time': 0.040648653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:08.871" endtime="20201112 12:44:08.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:08.910" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:08.882" endtime="20201112 12:44:08.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.921" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 12:44:08.919" endtime="20201112 12:44:08.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.926" level="INFO">VALUE: [0.00011802800000000613, 0.00011815300000000278, 0.00011868099999999548, 0.0001184029999999961, 0.00011861100000000457, 0.00011848600000000098, 0.00011776399999999937, 0.0001182370000000002, 0.0001180970000000045, 0.00011798600000000048, 0.00011863900000000371, 0.0001181249999999967, 0.00011847300000000088, 0.00011866700000000285, 0.00011813900000000321, 0.00011800000000000005, 0.00011861100000000457, 0.00011813900000000321, 0.00011806899999999843, 0.0001181249999999967, 0.00011840300000000303, 0.00011838900000000346, 0.00011780599999999808, 0.00011845900000000131, 0.00011840199999999662, 0.00011850000000000055, 0.00011797200000000091, 0.0001182500000000003, 0.00011836100000000432, 0.00011815200000000331, 0.00011877799999999994, 0.00011819400000000202, 0.00011866700000000285, 0.00011836099999999738, 0.00011872199999999472, 0.00011877799999999994, 0.00011863899999999677, 0.00011813899999999627, 0.0001184579999999949, 0.00011822199999999422, 0.00011802799999999919, 0.00011851400000000012, 0.0001185699999999984, 0.00011852700000000022, 0.00011826399999999987, 0.00011795800000000134, 0.00011792999999999526, 0.00011852799999999969, 0.00011838900000000346, 0.00011820799999999465]</msg>
<status status="PASS" starttime="20201112 12:44:08.923" endtime="20201112 12:44:08.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.912" endtime="20201112 12:44:08.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.936" endtime="20201112 12:44:08.938"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:08.944" endtime="20201112 12:44:08.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.940" endtime="20201112 12:44:08.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.931" endtime="20201112 12:44:08.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.408" endtime="20201112 12:44:08.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.407" endtime="20201112 12:44:08.970"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.992" endtime="20201112 12:44:09.015"></status>
</kw>
<msg timestamp="20201112 12:44:09.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:08.989" endtime="20201112 12:44:09.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:09.019" endtime="20201112 12:44:09.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.025" endtime="20201112 12:44:09.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.982" endtime="20201112 12:44:09.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.976" endtime="20201112 12:44:09.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.048" endtime="20201112 12:44:09.396"></status>
</kw>
<msg timestamp="20201112 12:44:09.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040517764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040637208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:09.045" endtime="20201112 12:44:09.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040517764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040637208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:09.406" endtime="20201112 12:44:09.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.424" endtime="20201112 12:44:09.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.038" endtime="20201112 12:44:09.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.033" endtime="20201112 12:44:09.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:09.444" level="INFO">${RESULT} = [{'time': 0.040637208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011944400000000327, 'source_diff': 0.00011944400000000327}, {'time': 0.040780639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:09.436" endtime="20201112 12:44:09.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:09.474" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:09.446" endtime="20201112 12:44:09.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.485" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 12:44:09.482" endtime="20201112 12:44:09.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.490" level="INFO">VALUE: [0.00011944400000000327, 0.00011979200000000051, 0.00011981999999999965, 0.00011973599999999529, 0.0001191249999999977, 0.00011962500000000514, 0.00011908300000000593, 0.00011937499999999795, 0.00011969400000000352, 0.00011924999999999436, 0.00011886099999999789, 0.00011926400000000087, 0.00011950000000000155, 0.00011915300000000378, 0.00011915300000000378, 0.00011891599999999669, 0.00011911199999999761, 0.00011902700000000072, 0.00011947199999999547, 0.0001195699999999994, 0.00011887499999999745, 0.00011944400000000327, 0.00011913899999999727, 0.0001198050000000006, 0.00011908300000000593, 0.00011943099999999623, 0.00011981900000000018, 0.0001195829999999995, 0.00011980600000000008, 0.00011909799999999804, 0.00011965299999999734, 0.00011895899999999487, 0.00011968000000000395, 0.00011904100000000029, 0.00011977800000000094, 0.00011902700000000072, 0.00011897200000000191, 0.0001189579999999954, 0.00011904100000000029, 0.00011927800000000044, 0.00011966599999999744, 0.0001192500000000013, 0.00011898599999999454, 0.00011915299999999684, 0.00011926400000000087, 0.00011926400000000087, 0.00011915300000000378, 0.00011981999999999965, 0.0001192500000000013, 0.00011973600000000223]</msg>
<status status="PASS" starttime="20201112 12:44:09.487" endtime="20201112 12:44:09.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.476" endtime="20201112 12:44:09.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.499" endtime="20201112 12:44:09.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:09.508" endtime="20201112 12:44:09.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.503" endtime="20201112 12:44:09.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.495" endtime="20201112 12:44:09.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.972" endtime="20201112 12:44:09.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.971" endtime="20201112 12:44:09.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.507" endtime="20201112 12:44:09.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:09.545" endtime="20201112 12:44:09.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.541" endtime="20201112 12:44:09.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.539" endtime="20201112 12:44:09.569"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:43:13.379" endtime="20201112 12:44:09.571" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:09.592" endtime="20201112 12:44:09.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.588" endtime="20201112 12:44:09.615"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.650" endtime="20201112 12:44:09.668"></status>
</kw>
<msg timestamp="20201112 12:44:09.669" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:09.645" endtime="20201112 12:44:09.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.676" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:09.672" endtime="20201112 12:44:09.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.682" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:44:09.678" endtime="20201112 12:44:09.683"></status>
</kw>
<status status="FAIL" starttime="20201112 12:44:09.638" endtime="20201112 12:44:09.685"></status>
</kw>
<status status="FAIL" starttime="20201112 12:44:09.631" endtime="20201112 12:44:09.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.629" endtime="20201112 12:44:09.687"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:44:09.695" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:44:09.693" endtime="20201112 12:44:09.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.689" endtime="20201112 12:44:09.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.627" endtime="20201112 12:44:09.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.625" endtime="20201112 12:44:09.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.698" endtime="20201112 12:44:09.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.621" endtime="20201112 12:44:09.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.617" endtime="20201112 12:44:09.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.585" endtime="20201112 12:44:09.705"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.732" endtime="20201112 12:44:09.749"></status>
</kw>
<msg timestamp="20201112 12:44:09.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:09.728" endtime="20201112 12:44:09.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:09.752" endtime="20201112 12:44:09.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.758" endtime="20201112 12:44:09.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.721" endtime="20201112 12:44:09.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.715" endtime="20201112 12:44:09.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.782" endtime="20201112 12:44:10.135"></status>
</kw>
<msg timestamp="20201112 12:44:10.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132151292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132172375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:09.778" endtime="20201112 12:44:10.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132151292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132172375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:10.145" endtime="20201112 12:44:10.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.163" endtime="20201112 12:44:10.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.771" endtime="20201112 12:44:10.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.766" endtime="20201112 12:44:10.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:10.181" level="INFO">${RESULT} = [{'time': 0.132172375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.108300000000507e-05, 'source_diff': 2.108300000000507e-05}, {'time': 0.132201347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:10.172" endtime="20201112 12:44:10.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:10.213" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:10.183" endtime="20201112 12:44:10.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.223" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 12:44:10.221" endtime="20201112 12:44:10.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.229" level="INFO">VALUE: [2.108300000000507e-05, 2.0582999999990692e-05, 2.108300000000507e-05, 2.1068999999984683e-05, 2.1278000000013453e-05, 2.1068999999984683e-05, 2.076399999997869e-05, 2.1236000000007804e-05, 2.0764000000006444e-05, 2.0777999999999075e-05, 2.061100000000371e-05, 2.0471999999993606e-05, 2.0749999999986057e-05, 2.0903000000016547e-05, 2.087500000000353e-05, 2.10969999999977e-05, 2.0430000000015713e-05, 2.0583000000018448e-05, 2.0750000000013813e-05, 2.0431000000015187e-05, 2.1084000000004544e-05, 2.07769999999996e-05, 2.1221999999987418e-05, 2.044399999998059e-05, 2.0764000000006444e-05, 2.04169999999948e-05, 2.061100000000371e-05, 2.076399999997869e-05, 2.0415999999995327e-05, 2.0625000000024096e-05, 2.0749999999986057e-05, 2.0402999999974414e-05, 2.1250000000000435e-05, 2.0429999999987958e-05, 2.1070000000011913e-05, 2.0695000000015007e-05, 2.1250000000000435e-05, 2.0582999999990692e-05, 2.10969999999977e-05, 2.0930000000002336e-05, 2.0901999999989318e-05, 2.0583000000018448e-05, 2.1250000000000435e-05, 2.108300000000507e-05, 2.10969999999977e-05, 2.058400000001792e-05, 2.10969999999977e-05, 2.04169999999948e-05, 2.0917000000009178e-05, 2.094499999999444e-05]</msg>
<status status="PASS" starttime="20201112 12:44:10.226" endtime="20201112 12:44:10.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.214" endtime="20201112 12:44:10.231"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.238" endtime="20201112 12:44:10.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:10.246" endtime="20201112 12:44:10.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.241" endtime="20201112 12:44:10.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.233" endtime="20201112 12:44:10.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.711" endtime="20201112 12:44:10.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.709" endtime="20201112 12:44:10.272"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.295" endtime="20201112 12:44:10.310"></status>
</kw>
<msg timestamp="20201112 12:44:10.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:10.291" endtime="20201112 12:44:10.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:10.313" endtime="20201112 12:44:10.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.319" endtime="20201112 12:44:10.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.284" endtime="20201112 12:44:10.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.279" endtime="20201112 12:44:10.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.342" endtime="20201112 12:44:10.678"></status>
</kw>
<msg timestamp="20201112 12:44:10.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040755806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040776236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:10.339" endtime="20201112 12:44:10.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040755806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040776236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:10.688" endtime="20201112 12:44:10.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.706" endtime="20201112 12:44:10.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.332" endtime="20201112 12:44:10.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.327" endtime="20201112 12:44:10.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:10.723" level="INFO">${RESULT} = [{'time': 0.040776236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0430000000001836e-05, 'source_diff': 2.0430000000001836e-05}, {'time': 0.040805236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:10.715" endtime="20201112 12:44:10.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:10.756" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:10.725" endtime="20201112 12:44:10.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.766" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 12:44:10.764" endtime="20201112 12:44:10.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.772" level="INFO">VALUE: [2.0430000000001836e-05, 2.111100000000421e-05, 2.0902000000003196e-05, 2.1250000000000435e-05, 2.1250000000000435e-05, 2.041700000000174e-05, 2.1264000000000005e-05, 2.0430000000001836e-05, 2.111100000000421e-05, 2.1264000000000005e-05, 2.1320000000005224e-05, 2.043099999999437e-05, 2.1305999999998715e-05, 2.043100000000131e-05, 2.09169999999953e-05, 2.108300000000507e-05, 2.0763999999999505e-05, 2.0915999999995827e-05, 2.1264000000000005e-05, 2.094500000000138e-05, 2.1098000000004113e-05, 2.1028000000006264e-05, 2.0415999999995327e-05, 2.065300000000242e-05, 2.07769999999996e-05, 2.0763999999999505e-05, 2.043100000000131e-05, 2.0527999999998825e-05, 2.043100000000131e-05, 2.0583999999997105e-05, 2.041700000000174e-05, 2.1041999999998895e-05, 2.10969999999977e-05, 2.108300000000507e-05, 2.056899999999806e-05, 2.051299999999978e-05, 2.1264000000000005e-05, 2.0444000000001405e-05, 2.09169999999953e-05, 2.04169999999948e-05, 2.126300000000053e-05, 2.0930000000002336e-05, 2.1277999999999575e-05, 2.0569000000005e-05, 2.0415999999995327e-05, 2.0749999999999935e-05, 2.0929999999995397e-05, 2.0763999999999505e-05, 2.0722000000000795e-05, 2.0401999999995757e-05]</msg>
<status status="PASS" starttime="20201112 12:44:10.769" endtime="20201112 12:44:10.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.758" endtime="20201112 12:44:10.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.785" endtime="20201112 12:44:10.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:10.793" endtime="20201112 12:44:10.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.789" endtime="20201112 12:44:10.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.776" endtime="20201112 12:44:10.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.274" endtime="20201112 12:44:10.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.273" endtime="20201112 12:44:10.819"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.842" endtime="20201112 12:44:10.857"></status>
</kw>
<msg timestamp="20201112 12:44:10.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:10.839" endtime="20201112 12:44:10.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:10.860" endtime="20201112 12:44:10.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.866" endtime="20201112 12:44:10.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.831" endtime="20201112 12:44:10.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.826" endtime="20201112 12:44:10.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.889" endtime="20201112 12:44:11.235"></status>
</kw>
<msg timestamp="20201112 12:44:11.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040067319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040088625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:10.886" endtime="20201112 12:44:11.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040067319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040088625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:11.245" endtime="20201112 12:44:11.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.263" endtime="20201112 12:44:11.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.879" endtime="20201112 12:44:11.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.874" endtime="20201112 12:44:11.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:11.281" level="INFO">${RESULT} = [{'time': 0.040088625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1306000000005654e-05, 'source_diff': 2.1306000000005654e-05}, {'time': 0.040115736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:11.272" endtime="20201112 12:44:11.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:11.312" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:11.283" endtime="20201112 12:44:11.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.326" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 12:44:11.324" endtime="20201112 12:44:11.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.332" level="INFO">VALUE: [2.1306000000005654e-05, 2.0430000000001836e-05, 2.044500000000088e-05, 2.0415999999995327e-05, 2.111099999999727e-05, 2.084699999999745e-05, 2.1277999999999575e-05, 2.0763999999999505e-05, 2.037500000000303e-05, 2.106899999999856e-05, 2.061100000000371e-05, 2.091700000000224e-05, 2.108300000000507e-05, 2.0736000000000365e-05, 2.10969999999977e-05, 2.04169999999948e-05, 2.1291999999999145e-05, 2.0584000000004044e-05, 2.0402000000002696e-05, 2.1250000000000435e-05, 2.10969999999977e-05, 2.058300000000457e-05, 2.091700000000224e-05, 2.1041999999998895e-05, 2.1264000000000005e-05, 2.0763999999999505e-05, 2.111100000000421e-05, 2.0749999999999935e-05, 2.0486000000000115e-05, 2.0791999999998645e-05, 2.059700000000414e-05, 2.0763999999999505e-05, 2.1250000000000435e-05, 2.1083999999997605e-05, 2.073699999999984e-05, 2.058299999999763e-05, 2.1250000000000435e-05, 2.1250000000000435e-05, 2.1180000000002586e-05, 2.1055999999998465e-05, 2.062499999999634e-05, 2.09169999999953e-05, 2.1222000000001295e-05, 2.062500000000328e-05, 2.088899999999616e-05, 2.091700000000224e-05, 2.111099999999727e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.10969999999977e-05]</msg>
<status status="PASS" starttime="20201112 12:44:11.328" endtime="20201112 12:44:11.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.313" endtime="20201112 12:44:11.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.341" endtime="20201112 12:44:11.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:11.349" endtime="20201112 12:44:11.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.345" endtime="20201112 12:44:11.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.336" endtime="20201112 12:44:11.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.821" endtime="20201112 12:44:11.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.820" endtime="20201112 12:44:11.375"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.398" endtime="20201112 12:44:11.413"></status>
</kw>
<msg timestamp="20201112 12:44:11.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:11.395" endtime="20201112 12:44:11.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:11.416" endtime="20201112 12:44:11.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.422" endtime="20201112 12:44:11.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.387" endtime="20201112 12:44:11.427"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.382" endtime="20201112 12:44:11.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.445" endtime="20201112 12:44:11.783"></status>
</kw>
<msg timestamp="20201112 12:44:11.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040501319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040522056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:11.442" endtime="20201112 12:44:11.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040501319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040522056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:11.793" endtime="20201112 12:44:11.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.811" endtime="20201112 12:44:11.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.435" endtime="20201112 12:44:11.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.430" endtime="20201112 12:44:11.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:11.829" level="INFO">${RESULT} = [{'time': 0.040522056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.073699999999984e-05, 'source_diff': 2.073699999999984e-05}, {'time': 0.040548167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:11.820" endtime="20201112 12:44:11.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:11.859" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:11.831" endtime="20201112 12:44:11.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.870" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 12:44:11.868" endtime="20201112 12:44:11.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.875" level="INFO">VALUE: [2.073699999999984e-05, 2.043100000000131e-05, 2.0749999999999935e-05, 2.1264000000000005e-05, 2.043100000000131e-05, 2.1277999999999575e-05, 2.093100000000181e-05, 2.0791999999998645e-05, 2.1264000000000005e-05, 2.040299999999523e-05, 2.126300000000053e-05, 2.061100000000371e-05, 2.058299999999763e-05, 2.093100000000181e-05, 2.0749999999999935e-05, 2.05969999999972e-05, 2.073699999999984e-05, 2.1250000000000435e-05, 2.045900000000045e-05, 2.094499999999444e-05, 2.0499999999999685e-05, 2.0887999999996687e-05, 2.091700000000224e-05, 2.1264000000000005e-05, 2.1250000000000435e-05, 2.094500000000138e-05, 2.0901999999996257e-05, 2.040299999999523e-05, 2.0944000000001906e-05, 2.093100000000181e-05, 2.0763999999999505e-05, 2.123700000000034e-05, 2.0415999999995327e-05, 2.061099999999677e-05, 2.10969999999977e-05, 2.1084000000004544e-05, 2.0916000000002766e-05, 2.0916000000002766e-05, 2.044500000000088e-05, 2.0916000000002766e-05, 2.041700000000174e-05, 2.093099999999487e-05, 2.0555999999997965e-05, 2.0416000000002266e-05, 2.0749999999999935e-05, 2.1084000000004544e-05, 2.1070000000004974e-05, 2.1250000000000435e-05, 2.0749999999999935e-05, 2.1249999999993496e-05]</msg>
<status status="PASS" starttime="20201112 12:44:11.872" endtime="20201112 12:44:11.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.861" endtime="20201112 12:44:11.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.885" endtime="20201112 12:44:11.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:11.895" endtime="20201112 12:44:11.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.890" endtime="20201112 12:44:11.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.880" endtime="20201112 12:44:11.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.377" endtime="20201112 12:44:11.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.376" endtime="20201112 12:44:11.920"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.943" endtime="20201112 12:44:11.959"></status>
</kw>
<msg timestamp="20201112 12:44:11.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:11.939" endtime="20201112 12:44:11.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:11.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:11.962" endtime="20201112 12:44:11.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.969" endtime="20201112 12:44:11.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.932" endtime="20201112 12:44:11.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.927" endtime="20201112 12:44:11.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:11.993" endtime="20201112 12:44:12.333"></status>
</kw>
<msg timestamp="20201112 12:44:12.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039983889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040005153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:11.989" endtime="20201112 12:44:12.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039983889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040005153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:12.342" endtime="20201112 12:44:12.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.361" endtime="20201112 12:44:12.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.982" endtime="20201112 12:44:12.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.977" endtime="20201112 12:44:12.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:12.378" level="INFO">${RESULT} = [{'time': 0.040005153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1264000000000005e-05, 'source_diff': 2.1264000000000005e-05}, {'time': 0.040031403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:12.369" endtime="20201112 12:44:12.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:12.409" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:12.380" endtime="20201112 12:44:12.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.420" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 12:44:12.417" endtime="20201112 12:44:12.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.425" level="INFO">VALUE: [2.1264000000000005e-05, 2.045900000000045e-05, 2.0597999999996675e-05, 2.043100000000131e-05, 2.0416000000002266e-05, 2.03890000000026e-05, 2.0778000000006014e-05, 2.109700000000464e-05, 2.10690000000055e-05, 2.126300000000053e-05, 2.0986000000000615e-05, 2.1249999999993496e-05, 2.0499999999999685e-05, 2.1165999999996077e-05, 2.09169999999953e-05, 2.0458000000000975e-05, 2.112500000000378e-05, 2.043100000000131e-05, 2.0708000000001225e-05, 2.090300000000267e-05, 2.1264000000000005e-05, 2.0916000000002766e-05, 2.058300000000457e-05, 2.10969999999977e-05, 2.0402000000002696e-05, 2.1193999999995217e-05, 2.0736000000000365e-05, 2.093099999999487e-05, 2.118100000000206e-05, 2.093100000000181e-05, 2.043099999999437e-05, 2.1264000000000005e-05, 2.0429999999994897e-05, 2.093100000000181e-05, 2.1264000000000005e-05, 2.041700000000174e-05, 2.093099999999487e-05, 2.093099999999487e-05, 2.056899999999806e-05, 2.10969999999977e-05, 2.084700000000439e-05, 2.0749999999999935e-05, 2.0416000000002266e-05, 2.108299999999813e-05, 2.1084000000004544e-05, 2.040299999999523e-05, 2.1236000000000865e-05, 2.094500000000138e-05, 2.069500000000113e-05, 2.063900000000285e-05]</msg>
<status status="PASS" starttime="20201112 12:44:12.422" endtime="20201112 12:44:12.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.410" endtime="20201112 12:44:12.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.434" endtime="20201112 12:44:12.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:12.443" endtime="20201112 12:44:12.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.438" endtime="20201112 12:44:12.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.430" endtime="20201112 12:44:12.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.922" endtime="20201112 12:44:12.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:11.921" endtime="20201112 12:44:12.468"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.493" endtime="20201112 12:44:12.507"></status>
</kw>
<msg timestamp="20201112 12:44:12.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:12.489" endtime="20201112 12:44:12.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:12.511" endtime="20201112 12:44:12.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.517" endtime="20201112 12:44:12.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.482" endtime="20201112 12:44:12.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.475" endtime="20201112 12:44:12.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.540" endtime="20201112 12:44:12.875"></status>
</kw>
<msg timestamp="20201112 12:44:12.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041698486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041719778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:12.537" endtime="20201112 12:44:12.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041698486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041719778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:12.884" endtime="20201112 12:44:12.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.903" endtime="20201112 12:44:12.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.530" endtime="20201112 12:44:12.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.525" endtime="20201112 12:44:12.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:12.920" level="INFO">${RESULT} = [{'time': 0.041719778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1291999999999145e-05, 'source_diff': 2.1291999999999145e-05}, {'time': 0.041746944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:12.911" endtime="20201112 12:44:12.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:12.951" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:12.922" endtime="20201112 12:44:12.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.962" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 12:44:12.959" endtime="20201112 12:44:12.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.967" level="INFO">VALUE: [2.1291999999999145e-05, 2.080499999999874e-05, 2.091700000000224e-05, 2.1264000000000005e-05, 2.0430000000001836e-05, 2.0763999999999505e-05, 2.08890000000031e-05, 2.143100000000231e-05, 2.0986000000000615e-05, 2.10969999999977e-05, 2.090300000000267e-05, 2.091700000000224e-05, 2.09169999999953e-05, 2.1277999999999575e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.093099999999487e-05, 2.041700000000174e-05, 2.0444000000001405e-05, 2.106899999999856e-05, 2.108300000000507e-05, 2.1250000000000435e-05, 2.106899999999856e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.09169999999953e-05, 2.0777999999999075e-05, 2.043100000000131e-05, 2.109700000000464e-05, 2.0416000000002266e-05, 2.1264000000000005e-05, 2.0637999999996437e-05, 2.058299999999763e-05, 2.055499999999849e-05, 2.111100000000421e-05, 2.058300000000457e-05, 2.1069999999998035e-05, 2.093099999999487e-05, 2.0443999999994467e-05, 2.0763999999999505e-05, 2.041700000000174e-05, 2.0764000000006444e-05, 2.1236000000000865e-05, 2.0598000000003613e-05, 2.090300000000267e-05, 2.093100000000181e-05, 2.0916000000002766e-05, 2.109700000000464e-05, 2.09169999999953e-05]</msg>
<status status="PASS" starttime="20201112 12:44:12.964" endtime="20201112 12:44:12.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.953" endtime="20201112 12:44:12.970"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.976" endtime="20201112 12:44:12.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:12.985" endtime="20201112 12:44:13.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.980" endtime="20201112 12:44:13.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.972" endtime="20201112 12:44:13.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.471" endtime="20201112 12:44:13.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.469" endtime="20201112 12:44:13.011"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.034" endtime="20201112 12:44:13.051"></status>
</kw>
<msg timestamp="20201112 12:44:13.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:13.031" endtime="20201112 12:44:13.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:13.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:13.054" endtime="20201112 12:44:13.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.061" endtime="20201112 12:44:13.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.023" endtime="20201112 12:44:13.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.017" endtime="20201112 12:44:13.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.084" endtime="20201112 12:44:13.419"></status>
</kw>
<msg timestamp="20201112 12:44:13.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043501, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043522083, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:13.081" endtime="20201112 12:44:13.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:13.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043501, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043522083, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:13.429" endtime="20201112 12:44:13.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.447" endtime="20201112 12:44:13.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.074" endtime="20201112 12:44:13.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.069" endtime="20201112 12:44:13.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:13.465" level="INFO">${RESULT} = [{'time': 0.043522083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.108300000000507e-05, 'source_diff': 2.108300000000507e-05}, {'time': 0.043551292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:13.456" endtime="20201112 12:44:13.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:13.495" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:13.467" endtime="20201112 12:44:13.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:13.506" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 12:44:13.504" endtime="20201112 12:44:13.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:13.511" level="INFO">VALUE: [2.108300000000507e-05, 2.0583999999997105e-05, 2.098700000000009e-05, 2.0763999999999505e-05, 2.058299999999763e-05, 2.05969999999972e-05, 2.1083999999997605e-05, 2.1264000000000005e-05, 2.0430000000001836e-05, 2.04169999999948e-05, 2.10969999999977e-05, 2.1264000000000005e-05, 2.0929999999995397e-05, 2.0986000000000615e-05, 2.09169999999953e-05, 2.094500000000138e-05, 2.1098000000004113e-05, 2.0583999999997105e-05, 2.0763999999999505e-05, 2.0722000000000795e-05, 2.0777999999999075e-05, 2.10969999999977e-05, 2.063899999999591e-05, 2.1277999999999575e-05, 2.041700000000174e-05, 2.0749999999999935e-05, 2.0777999999999075e-05, 2.090300000000267e-05, 2.108299999999813e-05, 2.061100000000371e-05, 2.0972000000001045e-05, 2.1264000000000005e-05, 2.090300000000267e-05, 2.1250000000000435e-05, 2.0444000000001405e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0583999999997105e-05, 2.105499999999899e-05, 2.0805999999998215e-05, 2.1250000000000435e-05, 2.0749999999999935e-05, 2.063900000000285e-05, 2.0416000000002266e-05, 2.05969999999972e-05, 2.1264000000000005e-05, 2.108299999999813e-05, 2.111099999999727e-05, 2.0458000000000975e-05, 2.1319999999998285e-05]</msg>
<status status="PASS" starttime="20201112 12:44:13.508" endtime="20201112 12:44:13.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.497" endtime="20201112 12:44:13.514"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.521" endtime="20201112 12:44:13.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:13.529" endtime="20201112 12:44:13.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.525" endtime="20201112 12:44:13.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.516" endtime="20201112 12:44:13.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.013" endtime="20201112 12:44:13.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.012" endtime="20201112 12:44:13.559"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.582" endtime="20201112 12:44:13.597"></status>
</kw>
<msg timestamp="20201112 12:44:13.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:13.578" endtime="20201112 12:44:13.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:13.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:13.600" endtime="20201112 12:44:13.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.607" endtime="20201112 12:44:13.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.571" endtime="20201112 12:44:13.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.565" endtime="20201112 12:44:13.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.634" endtime="20201112 12:44:13.976"></status>
</kw>
<msg timestamp="20201112 12:44:13.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044429292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044457236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:13.630" endtime="20201112 12:44:13.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044429292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044457236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:13.986" endtime="20201112 12:44:14.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.005" endtime="20201112 12:44:14.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.620" endtime="20201112 12:44:14.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.615" endtime="20201112 12:44:14.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:14.023" level="INFO">${RESULT} = [{'time': 0.044457236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.794399999999503e-05, 'source_diff': 2.794399999999503e-05}, {'time': 0.044494222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:14.014" endtime="20201112 12:44:14.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:14.056" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:14.025" endtime="20201112 12:44:14.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.068" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 12:44:14.065" endtime="20201112 12:44:14.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.074" level="INFO">VALUE: [2.794399999999503e-05, 2.7763999999999567e-05, 2.8277999999999637e-05, 2.7777999999999137e-05, 2.7790999999999233e-05, 2.7790999999999233e-05, 2.7846999999997513e-05, 2.7430000000001897e-05, 2.7569999999997596e-05, 2.8222000000001357e-05, 2.8110999999997333e-05, 2.813900000000341e-05, 2.80970000000047e-05, 2.744500000000094e-05, 2.8304999999999303e-05, 2.7777999999999137e-05, 2.7444000000001467e-05, 2.8111999999996806e-05, 2.7944000000001967e-05, 2.8291999999999207e-05, 2.7596999999997263e-05, 2.762500000000334e-05, 2.8222000000001357e-05, 2.7958000000001537e-05, 2.794399999999503e-05, 2.794399999999503e-05, 2.7430000000001897e-05, 2.8291999999999207e-05, 2.7610999999996833e-05, 2.8138999999996472e-05, 2.811100000000427e-05, 2.8096999999997763e-05, 2.8292000000006146e-05, 2.7791999999998707e-05, 2.8291999999999207e-05, 2.8208999999994322e-05, 2.7790999999999233e-05, 2.745900000000051e-05, 2.743100000000137e-05, 2.7458000000001037e-05, 2.744500000000094e-05, 2.813900000000341e-05, 2.7596999999997263e-05, 2.7776999999999663e-05, 2.75970000000042e-05, 2.7944999999994502e-05, 2.7791999999998707e-05, 2.794500000000144e-05, 2.811100000000427e-05, 2.7610999999996833e-05]</msg>
<status status="PASS" starttime="20201112 12:44:14.071" endtime="20201112 12:44:14.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.058" endtime="20201112 12:44:14.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.084" endtime="20201112 12:44:14.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:14.093" endtime="20201112 12:44:14.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.089" endtime="20201112 12:44:14.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.080" endtime="20201112 12:44:14.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.561" endtime="20201112 12:44:14.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.560" endtime="20201112 12:44:14.120"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.143" endtime="20201112 12:44:14.160"></status>
</kw>
<msg timestamp="20201112 12:44:14.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:14.139" endtime="20201112 12:44:14.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:14.164" endtime="20201112 12:44:14.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.172" endtime="20201112 12:44:14.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.132" endtime="20201112 12:44:14.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.126" endtime="20201112 12:44:14.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.195" endtime="20201112 12:44:14.549"></status>
</kw>
<msg timestamp="20201112 12:44:14.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041443583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041471861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:14.192" endtime="20201112 12:44:14.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041443583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041471861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:14.559" endtime="20201112 12:44:14.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.578" endtime="20201112 12:44:14.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.185" endtime="20201112 12:44:14.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.180" endtime="20201112 12:44:14.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:14.596" level="INFO">${RESULT} = [{'time': 0.041471861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8277999999999637e-05, 'source_diff': 2.8277999999999637e-05}, {'time': 0.041504847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:14.587" endtime="20201112 12:44:14.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:14.627" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:14.598" endtime="20201112 12:44:14.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.639" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 12:44:14.636" endtime="20201112 12:44:14.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.644" level="INFO">VALUE: [2.8277999999999637e-05, 2.792999999999546e-05, 2.7819999999997846e-05, 2.8069999999998096e-05, 2.761100000000377e-05, 2.7763999999999567e-05, 2.8346999999998013e-05, 2.7444000000001467e-05, 2.7430000000001897e-05, 2.8096999999997763e-05, 2.8110999999997333e-05, 2.7598000000003675e-05, 2.8083999999997666e-05, 2.8292000000006146e-05, 2.744500000000094e-05, 2.7582999999997693e-05, 2.7944000000001967e-05, 2.743100000000137e-05, 2.74170000000018e-05, 2.7596999999997263e-05, 2.7472000000000607e-05, 2.7472000000000607e-05, 2.765300000000248e-05, 2.797300000000058e-05, 2.7805999999998277e-05, 2.7791999999998707e-05, 2.7360999999996582e-05, 2.792999999999546e-05, 2.8124999999996902e-05, 2.792999999999546e-05, 2.8277999999999637e-05, 2.745900000000051e-05, 2.8290999999999733e-05, 2.8082999999998193e-05, 2.794500000000144e-05, 2.7612000000003245e-05, 2.8305999999998777e-05, 2.7944000000001967e-05, 2.7736000000000427e-05, 2.7806000000005215e-05, 2.8110999999997333e-05, 2.7583999999997166e-05, 2.8110999999997333e-05, 2.787500000000359e-05, 2.8277000000000163e-05, 2.8277999999999637e-05, 2.8277999999999637e-05, 2.7555999999998027e-05, 2.833300000000538e-05, 2.794500000000144e-05]</msg>
<status status="PASS" starttime="20201112 12:44:14.641" endtime="20201112 12:44:14.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.629" endtime="20201112 12:44:14.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.654" endtime="20201112 12:44:14.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:14.662" endtime="20201112 12:44:14.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.658" endtime="20201112 12:44:14.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.649" endtime="20201112 12:44:14.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.122" endtime="20201112 12:44:14.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.120" endtime="20201112 12:44:14.689"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.712" endtime="20201112 12:44:14.730"></status>
</kw>
<msg timestamp="20201112 12:44:14.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:14.708" endtime="20201112 12:44:14.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:14.733" endtime="20201112 12:44:14.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.740" endtime="20201112 12:44:14.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.701" endtime="20201112 12:44:14.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.695" endtime="20201112 12:44:14.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.763" endtime="20201112 12:44:15.118"></status>
</kw>
<msg timestamp="20201112 12:44:15.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041379236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041407014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:14.760" endtime="20201112 12:44:15.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041379236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041407014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:15.128" endtime="20201112 12:44:15.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.147" endtime="20201112 12:44:15.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.753" endtime="20201112 12:44:15.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.748" endtime="20201112 12:44:15.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:15.165" level="INFO">${RESULT} = [{'time': 0.041407014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7777999999999137e-05, 'source_diff': 2.7777999999999137e-05}, {'time': 0.041443208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:15.156" endtime="20201112 12:44:15.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:15.197" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:15.167" endtime="20201112 12:44:15.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.208" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 12:44:15.205" endtime="20201112 12:44:15.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.213" level="INFO">VALUE: [2.7777999999999137e-05, 2.811100000000427e-05, 2.8096999999997763e-05, 2.8124999999996902e-05, 2.7596999999997263e-05, 2.7680000000002147e-05, 2.7777999999999137e-05, 2.813900000000341e-05, 2.8096999999997763e-05, 2.8082999999998193e-05, 2.7791999999998707e-05, 2.811100000000427e-05, 2.784700000000445e-05, 2.737500000000309e-05, 2.8124999999996902e-05, 2.7763999999999567e-05, 2.75970000000042e-05, 2.8124999999996902e-05, 2.7958000000001537e-05, 2.7526999999999413e-05, 2.74170000000018e-05, 2.762500000000334e-05, 2.7790999999999233e-05, 2.8110999999997333e-05, 2.7944000000001967e-05, 2.7944000000001967e-05, 2.7777999999999137e-05, 2.8124999999996902e-05, 2.7624999999996402e-05, 2.8263000000000593e-05, 2.7610999999996833e-05, 2.812500000000384e-05, 2.8082999999998193e-05, 2.7777999999999137e-05, 2.795900000000101e-05, 2.8277999999999637e-05, 2.8264000000000067e-05, 2.8083999999997666e-05, 2.7499999999999747e-05, 2.761100000000377e-05, 2.7776999999999663e-05, 2.7416000000002327e-05, 2.8111999999996806e-05, 2.8290999999999733e-05, 2.812500000000384e-05, 2.7832999999997943e-05, 2.761100000000377e-05, 2.7542000000005395e-05, 2.7763999999999567e-05, 2.8277999999999637e-05]</msg>
<status status="PASS" starttime="20201112 12:44:15.210" endtime="20201112 12:44:15.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.199" endtime="20201112 12:44:15.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.223" endtime="20201112 12:44:15.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:15.232" endtime="20201112 12:44:15.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.227" endtime="20201112 12:44:15.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.218" endtime="20201112 12:44:15.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.691" endtime="20201112 12:44:15.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.690" endtime="20201112 12:44:15.258"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.281" endtime="20201112 12:44:15.299"></status>
</kw>
<msg timestamp="20201112 12:44:15.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:15.278" endtime="20201112 12:44:15.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:15.302" endtime="20201112 12:44:15.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.309" endtime="20201112 12:44:15.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.270" endtime="20201112 12:44:15.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.264" endtime="20201112 12:44:15.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.333" endtime="20201112 12:44:15.684"></status>
</kw>
<msg timestamp="20201112 12:44:15.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041320528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041348153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:15.329" endtime="20201112 12:44:15.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041320528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041348153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:15.694" endtime="20201112 12:44:15.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.713" endtime="20201112 12:44:15.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.322" endtime="20201112 12:44:15.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.317" endtime="20201112 12:44:15.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:15.733" level="INFO">${RESULT} = [{'time': 0.041348153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7624999999996402e-05, 'source_diff': 2.7624999999996402e-05}, {'time': 0.041381167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:15.724" endtime="20201112 12:44:15.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:15.764" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:15.735" endtime="20201112 12:44:15.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.775" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 12:44:15.773" endtime="20201112 12:44:15.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.781" level="INFO">VALUE: [2.7624999999996402e-05, 2.7764000000006506e-05, 2.7582999999997693e-05, 2.8096999999997763e-05, 2.7944000000001967e-05, 2.8110999999997333e-05, 2.8277999999999637e-05, 2.791599999999589e-05, 2.8305999999998777e-05, 2.794500000000144e-05, 2.761100000000377e-05, 2.7777999999999137e-05, 2.7694000000001717e-05, 2.7610999999996833e-05, 2.763900000000291e-05, 2.8264000000000067e-05, 2.8138999999996472e-05, 2.8305999999998777e-05, 2.7776999999999663e-05, 2.8124999999996902e-05, 2.8277999999999637e-05, 2.7624999999996402e-05, 2.794500000000144e-05, 2.8110999999997333e-05, 2.8319999999998346e-05, 2.8208000000001787e-05, 2.7486000000000177e-05, 2.761100000000377e-05, 2.8291999999999207e-05, 2.7624999999996402e-05, 2.811100000000427e-05, 2.7555999999998027e-05, 2.8250000000000497e-05, 2.75970000000042e-05, 2.763900000000291e-05, 2.7777999999999137e-05, 2.7540999999998983e-05, 2.7791999999998707e-05, 2.7777999999999137e-05, 2.7944999999994502e-05, 2.7944000000001967e-05, 2.7791999999998707e-05, 2.8291999999999207e-05, 2.812500000000384e-05, 2.8110999999997333e-05, 2.8262999999993654e-05, 2.7444000000001467e-05, 2.7596999999997263e-05, 2.811100000000427e-05, 2.7791999999998707e-05]</msg>
<status status="PASS" starttime="20201112 12:44:15.778" endtime="20201112 12:44:15.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.766" endtime="20201112 12:44:15.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.796" endtime="20201112 12:44:15.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:15.804" endtime="20201112 12:44:15.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.800" endtime="20201112 12:44:15.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.791" endtime="20201112 12:44:15.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.260" endtime="20201112 12:44:15.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.259" endtime="20201112 12:44:15.830"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.854" endtime="20201112 12:44:15.872"></status>
</kw>
<msg timestamp="20201112 12:44:15.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:15.850" endtime="20201112 12:44:15.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:15.875" endtime="20201112 12:44:15.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.881" endtime="20201112 12:44:15.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.843" endtime="20201112 12:44:15.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.837" endtime="20201112 12:44:15.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.905" endtime="20201112 12:44:16.257"></status>
</kw>
<msg timestamp="20201112 12:44:16.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041431514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041458958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:15.902" endtime="20201112 12:44:16.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041431514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041458958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:16.267" endtime="20201112 12:44:16.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:16.286" endtime="20201112 12:44:16.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.895" endtime="20201112 12:44:16.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.890" endtime="20201112 12:44:16.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:16.308" level="INFO">${RESULT} = [{'time': 0.041458958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.744399999999453e-05, 'source_diff': 2.744399999999453e-05}, {'time': 0.041495153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:16.299" endtime="20201112 12:44:16.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:16.339" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:16.310" endtime="20201112 12:44:16.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.350" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 12:44:16.348" endtime="20201112 12:44:16.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.356" level="INFO">VALUE: [2.744399999999453e-05, 2.7986000000000677e-05, 2.80970000000047e-05, 2.794399999999503e-05, 2.7458000000001037e-05, 2.7778000000006076e-05, 2.7958000000001537e-05, 2.8278000000006576e-05, 2.75970000000042e-05, 2.7597999999996736e-05, 2.7957999999994598e-05, 2.8124999999996902e-05, 2.7416000000002327e-05, 2.7791000000006172e-05, 2.8292000000006146e-05, 2.7944000000001967e-05, 2.812500000000384e-05, 2.761100000000377e-05, 2.8305999999998777e-05, 2.7930000000002397e-05, 2.7749999999999997e-05, 2.7610999999996833e-05, 2.812500000000384e-05, 2.8277999999999637e-05, 2.8290999999999733e-05, 2.812500000000384e-05, 2.74170000000018e-05, 2.7930000000002397e-05, 2.7444000000001467e-05, 2.7777999999999137e-05, 2.7763999999999567e-05, 2.8277000000000163e-05, 2.8277999999999637e-05, 2.793100000000187e-05, 2.8110999999997333e-05, 2.8098000000004175e-05, 2.7457999999994098e-05, 2.7638000000003438e-05, 2.7790999999999233e-05, 2.7930999999994932e-05, 2.811100000000427e-05, 2.762500000000334e-05, 2.7430999999994432e-05, 2.8264000000000067e-05, 2.7806000000005215e-05, 2.7944000000001967e-05, 2.7499999999999747e-05, 2.7749999999999997e-05, 2.7777999999999137e-05, 2.7555999999998027e-05]</msg>
<status status="PASS" starttime="20201112 12:44:16.353" endtime="20201112 12:44:16.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.341" endtime="20201112 12:44:16.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:16.366" endtime="20201112 12:44:16.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:16.374" endtime="20201112 12:44:16.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.370" endtime="20201112 12:44:16.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.361" endtime="20201112 12:44:16.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.832" endtime="20201112 12:44:16.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.831" endtime="20201112 12:44:16.400"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:16.423" endtime="20201112 12:44:16.441"></status>
</kw>
<msg timestamp="20201112 12:44:16.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:16.420" endtime="20201112 12:44:16.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:16.445" endtime="20201112 12:44:16.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:16.451" endtime="20201112 12:44:16.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.413" endtime="20201112 12:44:16.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.407" endtime="20201112 12:44:16.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:16.475" endtime="20201112 12:44:16.830"></status>
</kw>
<msg timestamp="20201112 12:44:16.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041287361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041314958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:16.471" endtime="20201112 12:44:16.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041287361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041314958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:16.840" endtime="20201112 12:44:16.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:16.859" endtime="20201112 12:44:16.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.464" endtime="20201112 12:44:16.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.459" endtime="20201112 12:44:16.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:16.878" level="INFO">${RESULT} = [{'time': 0.041314958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7596999999997263e-05, 'source_diff': 2.7596999999997263e-05}, {'time': 0.041354125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:16.869" endtime="20201112 12:44:16.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:16.910" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:16.880" endtime="20201112 12:44:16.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.921" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 12:44:16.918" endtime="20201112 12:44:16.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:16.926" level="INFO">VALUE: [2.7596999999997263e-05, 2.8166999999995612e-05, 2.8082999999998193e-05, 2.8277999999999637e-05, 2.7444000000001467e-05, 2.7944999999994502e-05, 2.8110999999997333e-05, 2.7777999999999137e-05, 2.758300000000463e-05, 2.811100000000427e-05, 2.812500000000384e-05, 2.7778000000006076e-05, 2.7777999999999137e-05, 2.74170000000018e-05, 2.8264000000000067e-05, 2.8277999999999637e-05, 2.8262999999993654e-05, 2.8110999999997333e-05, 2.8304999999999303e-05, 2.7958000000001537e-05, 2.7791999999998707e-05, 2.7763999999999567e-05, 2.8264000000000067e-05, 2.7749999999999997e-05, 2.8250000000000497e-05, 2.8096999999997763e-05, 2.7486000000000177e-05, 2.8332999999998443e-05, 2.8277999999999637e-05, 2.7818999999998373e-05, 2.8138999999996472e-05, 2.8083999999997666e-05, 2.8277999999999637e-05, 2.7777999999999137e-05, 2.788900000000316e-05, 2.744399999999453e-05, 2.7806000000005215e-05, 2.8264000000000067e-05, 2.743100000000137e-05, 2.8319999999998346e-05, 2.8097999999997236e-05, 2.8291999999999207e-05, 2.744500000000094e-05, 2.8138999999996472e-05, 2.7848000000003925e-05, 2.793100000000187e-05, 2.80970000000047e-05, 2.8291999999999207e-05, 2.7791999999998707e-05, 2.75970000000042e-05]</msg>
<status status="PASS" starttime="20201112 12:44:16.923" endtime="20201112 12:44:16.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.911" endtime="20201112 12:44:16.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:16.936" endtime="20201112 12:44:16.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:16.944" endtime="20201112 12:44:16.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.940" endtime="20201112 12:44:16.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.931" endtime="20201112 12:44:16.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.402" endtime="20201112 12:44:16.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.401" endtime="20201112 12:44:16.971"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:16.994" endtime="20201112 12:44:17.012"></status>
</kw>
<msg timestamp="20201112 12:44:17.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:16.990" endtime="20201112 12:44:17.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:17.015" endtime="20201112 12:44:17.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.022" endtime="20201112 12:44:17.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.983" endtime="20201112 12:44:17.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.977" endtime="20201112 12:44:17.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.045" endtime="20201112 12:44:17.398"></status>
</kw>
<msg timestamp="20201112 12:44:17.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041470847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041498417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:17.042" endtime="20201112 12:44:17.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041470847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041498417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:17.407" endtime="20201112 12:44:17.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.427" endtime="20201112 12:44:17.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.035" endtime="20201112 12:44:17.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.030" endtime="20201112 12:44:17.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:17.446" level="INFO">${RESULT} = [{'time': 0.041498417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7570000000004535e-05, 'source_diff': 2.7570000000004535e-05}, {'time': 0.041534472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:17.437" endtime="20201112 12:44:17.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:17.477" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:17.448" endtime="20201112 12:44:17.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.489" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 12:44:17.486" endtime="20201112 12:44:17.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.494" level="INFO">VALUE: [2.7570000000004535e-05, 2.80970000000047e-05, 2.817999999999571e-05, 2.7499999999999747e-05, 2.8264000000000067e-05, 2.7777999999999137e-05, 2.8277999999999637e-05, 2.7834000000004355e-05, 2.8028000000006326e-05, 2.7444000000001467e-05, 2.79170000000023e-05, 2.7611999999996306e-05, 2.7791999999998707e-05, 2.8305000000006242e-05, 2.761100000000377e-05, 2.7804999999998803e-05, 2.7930999999994932e-05, 2.8277999999999637e-05, 2.7624999999996402e-05, 2.8110999999997333e-05, 2.8290999999999733e-05, 2.816700000000255e-05, 2.736100000000352e-05, 2.7777999999999137e-05, 2.7582999999997693e-05, 2.8096999999997763e-05, 2.7944999999994502e-05, 2.8277999999999637e-05, 2.7596999999997263e-05, 2.7569999999997596e-05, 2.7777999999999137e-05, 2.7624999999996402e-05, 2.8264000000000067e-05, 2.772300000000033e-05, 2.7763999999999567e-05, 2.793100000000187e-05, 2.8319999999998346e-05, 2.8264000000000067e-05, 2.7444000000001467e-05, 2.7596999999997263e-05, 2.7791999999998707e-05, 2.8291000000006672e-05, 2.8264000000000067e-05, 2.744500000000094e-05, 2.8304999999999303e-05, 2.8112000000003745e-05, 2.793100000000187e-05, 2.812500000000384e-05, 2.795900000000101e-05, 2.8277999999999637e-05]</msg>
<status status="PASS" starttime="20201112 12:44:17.491" endtime="20201112 12:44:17.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.479" endtime="20201112 12:44:17.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.504" endtime="20201112 12:44:17.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:17.512" endtime="20201112 12:44:17.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.508" endtime="20201112 12:44:17.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.499" endtime="20201112 12:44:17.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.973" endtime="20201112 12:44:17.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:16.972" endtime="20201112 12:44:17.539"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.562" endtime="20201112 12:44:17.580"></status>
</kw>
<msg timestamp="20201112 12:44:17.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:17.559" endtime="20201112 12:44:17.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:17.584" endtime="20201112 12:44:17.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.590" endtime="20201112 12:44:17.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.551" endtime="20201112 12:44:17.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.545" endtime="20201112 12:44:17.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.614" endtime="20201112 12:44:17.966"></status>
</kw>
<msg timestamp="20201112 12:44:17.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041537528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041572667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:17.611" endtime="20201112 12:44:17.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041537528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041572667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:17.975" endtime="20201112 12:44:17.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.994" endtime="20201112 12:44:18.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.603" endtime="20201112 12:44:18.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.598" endtime="20201112 12:44:18.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:18.014" level="INFO">${RESULT} = [{'time': 0.041572667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.513900000000347e-05, 'source_diff': 3.513900000000347e-05}, {'time': 0.041612694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:18.005" endtime="20201112 12:44:18.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:18.045" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:18.016" endtime="20201112 12:44:18.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.057" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 12:44:18.054" endtime="20201112 12:44:18.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.063" level="INFO">VALUE: [3.513900000000347e-05, 3.494400000000203e-05, 3.500000000000031e-05, 3.484800000000399e-05, 3.5152999999996104e-05, 3.497200000000117e-05, 3.465300000000254e-05, 3.4763000000000155e-05, 3.511100000000433e-05, 3.4512999999999905e-05, 3.448600000000024e-05, 3.51250000000039e-05, 3.44580000000011e-05, 3.46250000000034e-05, 3.4527000000006414e-05, 3.479199999999877e-05, 3.493000000000246e-05, 3.463900000000297e-05, 3.4804999999998865e-05, 3.497300000000064e-05, 3.475000000000006e-05, 3.5124999999996964e-05, 3.463900000000297e-05, 3.513799999999706e-05, 3.513900000000347e-05, 3.447200000000067e-05, 3.500000000000031e-05, 3.494399999999509e-05, 3.4652999999995604e-05, 3.468100000000168e-05, 3.529199999999927e-05, 3.443100000000143e-05, 3.497199999999423e-05, 3.440300000000229e-05, 3.49450000000015e-05, 3.447200000000067e-05, 3.447300000000014e-05, 3.443000000000196e-05, 3.497200000000117e-05, 3.5263000000000655e-05, 3.447200000000067e-05, 3.5138999999996534e-05, 3.477800000000614e-05, 3.481999999999791e-05, 3.444399999999459e-05, 3.448600000000024e-05, 3.5124999999996964e-05, 3.5124999999996964e-05, 3.447200000000067e-05, 3.51659999999962e-05]</msg>
<status status="PASS" starttime="20201112 12:44:18.059" endtime="20201112 12:44:18.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.047" endtime="20201112 12:44:18.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.072" endtime="20201112 12:44:18.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:18.081" endtime="20201112 12:44:18.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.076" endtime="20201112 12:44:18.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.068" endtime="20201112 12:44:18.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.541" endtime="20201112 12:44:18.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.540" endtime="20201112 12:44:18.107"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.130" endtime="20201112 12:44:18.148"></status>
</kw>
<msg timestamp="20201112 12:44:18.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:18.127" endtime="20201112 12:44:18.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:18.152" endtime="20201112 12:44:18.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.158" endtime="20201112 12:44:18.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.119" endtime="20201112 12:44:18.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.114" endtime="20201112 12:44:18.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.182" endtime="20201112 12:44:18.533"></status>
</kw>
<msg timestamp="20201112 12:44:18.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041320194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041355028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:18.179" endtime="20201112 12:44:18.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041320194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041355028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:18.543" endtime="20201112 12:44:18.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.562" endtime="20201112 12:44:18.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.171" endtime="20201112 12:44:18.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.166" endtime="20201112 12:44:18.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:18.584" level="INFO">${RESULT} = [{'time': 0.041355028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.483400000000442e-05, 'source_diff': 3.483400000000442e-05}, {'time': 0.041399222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:18.574" endtime="20201112 12:44:18.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:18.614" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:18.586" endtime="20201112 12:44:18.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.626" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 12:44:18.623" endtime="20201112 12:44:18.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.631" level="INFO">VALUE: [3.483400000000442e-05, 3.447200000000067e-05, 3.4888999999996284e-05, 3.5290999999999795e-05, 3.46250000000034e-05, 3.470900000000082e-05, 3.445900000000057e-05, 3.5138999999996534e-05, 3.486200000000356e-05, 3.4624999999996464e-05, 3.480599999999834e-05, 3.513900000000347e-05, 3.44580000000011e-05, 3.51250000000039e-05, 3.449999999999981e-05, 3.534700000000501e-05, 3.483400000000442e-05, 3.447300000000014e-05, 3.49580000000016e-05, 3.469399999999484e-05, 3.49580000000016e-05, 3.5124999999996964e-05, 3.465300000000254e-05, 3.479199999999877e-05, 3.463900000000297e-05, 3.529199999999927e-05, 3.497200000000117e-05, 3.529199999999927e-05, 3.479199999999877e-05, 3.483400000000442e-05, 3.498600000000074e-05, 3.5290999999999795e-05, 3.495799999999466e-05, 3.468100000000168e-05, 3.511100000000433e-05, 3.479199999999877e-05, 3.4445000000001e-05, 3.4819000000005373e-05, 3.526400000000013e-05, 3.513900000000347e-05, 3.448600000000024e-05, 3.443000000000196e-05, 3.4402999999995354e-05, 3.479200000000571e-05, 3.5152999999996104e-05, 3.513900000000347e-05, 3.479199999999877e-05, 3.479199999999877e-05, 3.4416999999994924e-05, 3.525000000000056e-05]</msg>
<status status="PASS" starttime="20201112 12:44:18.628" endtime="20201112 12:44:18.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.616" endtime="20201112 12:44:18.634"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.641" endtime="20201112 12:44:18.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:18.649" endtime="20201112 12:44:18.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.645" endtime="20201112 12:44:18.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.636" endtime="20201112 12:44:18.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.109" endtime="20201112 12:44:18.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.108" endtime="20201112 12:44:18.676"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.699" endtime="20201112 12:44:18.717"></status>
</kw>
<msg timestamp="20201112 12:44:18.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:18.696" endtime="20201112 12:44:18.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:18.721" endtime="20201112 12:44:18.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.727" endtime="20201112 12:44:18.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.688" endtime="20201112 12:44:18.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.682" endtime="20201112 12:44:18.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.751" endtime="20201112 12:44:19.101"></status>
</kw>
<msg timestamp="20201112 12:44:19.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041652125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041686611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:18.748" endtime="20201112 12:44:19.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041652125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041686611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:19.111" endtime="20201112 12:44:19.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.130" endtime="20201112 12:44:19.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.740" endtime="20201112 12:44:19.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.735" endtime="20201112 12:44:19.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:19.149" level="INFO">${RESULT} = [{'time': 0.041686611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.448600000000024e-05, 'source_diff': 3.448600000000024e-05}, {'time': 0.041728708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:19.140" endtime="20201112 12:44:19.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:19.180" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:19.151" endtime="20201112 12:44:19.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.191" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 12:44:19.189" endtime="20201112 12:44:19.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.197" level="INFO">VALUE: [3.448600000000024e-05, 3.463900000000297e-05, 3.4804999999998865e-05, 3.530599999999884e-05, 3.516700000000261e-05, 3.4818999999998435e-05, 3.447200000000067e-05, 3.4610999999996894e-05, 3.498600000000074e-05, 3.449999999999981e-05, 3.463900000000297e-05, 3.529199999999927e-05, 3.5138000000004e-05, 3.5318999999998935e-05, 3.488900000000322e-05, 3.5138999999996534e-05, 3.515300000000304e-05, 3.44580000000011e-05, 3.494399999999509e-05, 3.480599999999834e-05, 3.498600000000074e-05, 3.5374999999997214e-05, 3.44580000000011e-05, 3.4804999999998865e-05, 3.515200000000357e-05, 3.449999999999981e-05, 3.529199999999927e-05, 3.513900000000347e-05, 3.530599999999884e-05, 3.448600000000024e-05, 3.49580000000016e-05, 3.4624999999996464e-05, 3.5180999999995244e-05, 3.490300000000279e-05, 3.480599999999834e-05, 3.44580000000011e-05, 3.498600000000074e-05, 3.4582999999997754e-05, 3.4790999999999295e-05, 3.513900000000347e-05, 3.51250000000039e-05, 3.480600000000528e-05, 3.530600000000578e-05, 3.497200000000117e-05, 3.473600000000049e-05, 3.5319000000005873e-05, 3.447200000000067e-05, 3.5346999999998074e-05, 3.530599999999884e-05, 3.463900000000297e-05]</msg>
<status status="PASS" starttime="20201112 12:44:19.194" endtime="20201112 12:44:19.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.182" endtime="20201112 12:44:19.200"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.207" endtime="20201112 12:44:19.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:19.215" endtime="20201112 12:44:19.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.211" endtime="20201112 12:44:19.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.202" endtime="20201112 12:44:19.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.678" endtime="20201112 12:44:19.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.677" endtime="20201112 12:44:19.242"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.266" endtime="20201112 12:44:19.284"></status>
</kw>
<msg timestamp="20201112 12:44:19.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:19.263" endtime="20201112 12:44:19.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:19.288" endtime="20201112 12:44:19.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.294" endtime="20201112 12:44:19.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.255" endtime="20201112 12:44:19.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.249" endtime="20201112 12:44:19.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.318" endtime="20201112 12:44:19.669"></status>
</kw>
<msg timestamp="20201112 12:44:19.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042303167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042338458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:19.315" endtime="20201112 12:44:19.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042303167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042338458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:19.679" endtime="20201112 12:44:19.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.698" endtime="20201112 12:44:19.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.308" endtime="20201112 12:44:19.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.303" endtime="20201112 12:44:19.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:19.717" level="INFO">${RESULT} = [{'time': 0.042338458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5290999999999795e-05, 'source_diff': 3.5290999999999795e-05}, {'time': 0.042380611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:19.708" endtime="20201112 12:44:19.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:19.749" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:19.720" endtime="20201112 12:44:19.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.760" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 12:44:19.758" endtime="20201112 12:44:19.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.765" level="INFO">VALUE: [3.5290999999999795e-05, 3.479199999999877e-05, 3.526400000000013e-05, 3.494400000000203e-05, 3.5304999999999365e-05, 3.498600000000074e-05, 3.49580000000016e-05, 3.46250000000034e-05, 3.523600000000099e-05, 3.445900000000057e-05, 3.441599999999545e-05, 3.513900000000347e-05, 3.4624999999996464e-05, 3.498600000000074e-05, 3.44580000000011e-05, 3.5304999999999365e-05, 3.516700000000261e-05, 3.447300000000014e-05, 3.46250000000034e-05, 3.449999999999981e-05, 3.5124999999996964e-05, 3.497200000000117e-05, 3.5318999999998935e-05, 3.5304999999999365e-05, 3.5152999999996104e-05, 3.5138999999996534e-05, 3.498600000000074e-05, 3.515199999999663e-05, 3.5304999999999365e-05, 3.513900000000347e-05, 3.51250000000039e-05, 3.4638999999996034e-05, 3.4818999999998435e-05, 3.468100000000168e-05, 3.497200000000117e-05, 3.463900000000297e-05, 3.4804999999998865e-05, 3.454199999999852e-05, 3.494400000000203e-05, 3.443000000000196e-05, 3.51250000000039e-05, 3.529199999999927e-05, 3.5138000000004e-05, 3.5012999999993466e-05, 3.530599999999884e-05, 3.497199999999423e-05, 3.5263000000000655e-05, 3.5124999999996964e-05, 3.4805000000005804e-05, 3.498600000000074e-05]</msg>
<status status="PASS" starttime="20201112 12:44:19.762" endtime="20201112 12:44:19.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.750" endtime="20201112 12:44:19.769"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.775" endtime="20201112 12:44:19.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:19.784" endtime="20201112 12:44:19.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.779" endtime="20201112 12:44:19.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.770" endtime="20201112 12:44:19.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.245" endtime="20201112 12:44:19.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.243" endtime="20201112 12:44:19.810"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.833" endtime="20201112 12:44:19.851"></status>
</kw>
<msg timestamp="20201112 12:44:19.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:19.830" endtime="20201112 12:44:19.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:19.855" endtime="20201112 12:44:19.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.861" endtime="20201112 12:44:19.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.822" endtime="20201112 12:44:19.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.816" endtime="20201112 12:44:19.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.885" endtime="20201112 12:44:20.237"></status>
</kw>
<msg timestamp="20201112 12:44:20.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041337194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041372139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:19.882" endtime="20201112 12:44:20.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041337194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041372139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:20.246" endtime="20201112 12:44:20.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.266" endtime="20201112 12:44:20.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.874" endtime="20201112 12:44:20.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.869" endtime="20201112 12:44:20.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:20.286" level="INFO">${RESULT} = [{'time': 0.041372139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.49450000000015e-05, 'source_diff': 3.49450000000015e-05}, {'time': 0.041417236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:44:20.277" endtime="20201112 12:44:20.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:20.318" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:20.288" endtime="20201112 12:44:20.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.329" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 12:44:20.326" endtime="20201112 12:44:20.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.334" level="INFO">VALUE: [3.49450000000015e-05, 3.461100000000383e-05, 3.529199999999927e-05, 3.5124999999996964e-05, 3.46250000000034e-05, 3.47779999999992e-05, 3.49580000000016e-05, 3.523600000000099e-05, 3.476399999999963e-05, 3.497200000000117e-05, 3.49580000000016e-05, 3.487500000000365e-05, 3.497200000000117e-05, 3.461100000000383e-05, 3.47779999999992e-05, 3.447300000000014e-05, 3.479199999999877e-05, 3.461100000000383e-05, 3.444400000000153e-05, 3.44580000000011e-05, 3.526400000000013e-05, 3.5332999999998504e-05, 3.4610999999996894e-05, 3.5110999999997394e-05, 3.491599999999595e-05, 3.51250000000039e-05, 3.484700000000451e-05, 3.5054999999999115e-05, 3.529199999999927e-05, 3.447300000000014e-05, 3.5304999999999365e-05, 3.523600000000099e-05, 3.447200000000067e-05, 3.515199999999663e-05, 3.454199999999852e-05, 3.5068999999998685e-05, 3.5013000000000405e-05, 3.479199999999877e-05, 3.461100000000383e-05, 3.459700000000426e-05, 3.448600000000024e-05, 3.4832999999998004e-05, 3.483300000000494e-05, 3.447200000000067e-05, 3.4638999999996034e-05, 3.4916999999995424e-05, 3.500000000000031e-05, 3.5096999999997824e-05, 3.495799999999466e-05, 3.499999999999337e-05]</msg>
<status status="PASS" starttime="20201112 12:44:20.331" endtime="20201112 12:44:20.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.319" endtime="20201112 12:44:20.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.344" endtime="20201112 12:44:20.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:20.353" endtime="20201112 12:44:20.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.348" endtime="20201112 12:44:20.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.339" endtime="20201112 12:44:20.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.812" endtime="20201112 12:44:20.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.811" endtime="20201112 12:44:20.379"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.402" endtime="20201112 12:44:20.421"></status>
</kw>
<msg timestamp="20201112 12:44:20.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:20.399" endtime="20201112 12:44:20.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:20.424" endtime="20201112 12:44:20.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.430" endtime="20201112 12:44:20.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.391" endtime="20201112 12:44:20.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.386" endtime="20201112 12:44:20.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.454" endtime="20201112 12:44:20.806"></status>
</kw>
<msg timestamp="20201112 12:44:20.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041436861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041471681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:20.451" endtime="20201112 12:44:20.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041436861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041471681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:20.815" endtime="20201112 12:44:20.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.834" endtime="20201112 12:44:20.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.443" endtime="20201112 12:44:20.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.439" endtime="20201112 12:44:20.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:20.857" level="INFO">${RESULT} = [{'time': 0.041471681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.482000000000485e-05, 'source_diff': 3.482000000000485e-05}, {'time': 0.04151175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:44:20.847" endtime="20201112 12:44:20.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:20.888" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:20.859" endtime="20201112 12:44:20.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.899" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 12:44:20.896" endtime="20201112 12:44:20.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.904" level="INFO">VALUE: [3.482000000000485e-05, 3.5332999999998504e-05, 3.466700000000211e-05, 3.448600000000024e-05, 3.466700000000211e-05, 3.5110999999997394e-05, 3.533399999999798e-05, 3.4624999999996464e-05, 3.4624999999996464e-05, 3.513799999999706e-05, 3.498600000000074e-05, 3.497200000000117e-05, 3.4652999999995604e-05, 3.513900000000347e-05, 3.498600000000074e-05, 3.4818999999998435e-05, 3.5138999999996534e-05, 3.4652999999995604e-05, 3.5138999999996534e-05, 3.448600000000024e-05, 3.465200000000307e-05, 3.5152999999996104e-05, 3.447200000000067e-05, 3.497199999999423e-05, 3.448600000000024e-05, 3.484700000000451e-05, 3.495900000000107e-05, 3.46250000000034e-05, 3.465300000000254e-05, 3.451399999999938e-05, 3.483300000000494e-05, 3.447200000000067e-05, 3.4804999999998865e-05, 3.463900000000297e-05, 3.481999999999791e-05, 3.5304999999999365e-05, 3.447200000000067e-05, 3.4804999999998865e-05, 3.475000000000006e-05, 3.481999999999791e-05, 3.495900000000107e-05, 3.463900000000297e-05, 3.497300000000064e-05, 3.513900000000347e-05, 3.447199999999373e-05, 3.5138999999996534e-05, 3.5318999999998935e-05, 3.461100000000383e-05, 3.4638999999996034e-05, 3.5304999999999365e-05]</msg>
<status status="PASS" starttime="20201112 12:44:20.901" endtime="20201112 12:44:20.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.889" endtime="20201112 12:44:20.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.914" endtime="20201112 12:44:20.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:20.922" endtime="20201112 12:44:20.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.918" endtime="20201112 12:44:20.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.909" endtime="20201112 12:44:20.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.381" endtime="20201112 12:44:20.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.380" endtime="20201112 12:44:20.949"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.972" endtime="20201112 12:44:20.990"></status>
</kw>
<msg timestamp="20201112 12:44:20.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:20.968" endtime="20201112 12:44:20.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:20.993" endtime="20201112 12:44:20.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.000" endtime="20201112 12:44:21.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.961" endtime="20201112 12:44:21.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.955" endtime="20201112 12:44:21.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.024" endtime="20201112 12:44:21.376"></status>
</kw>
<msg timestamp="20201112 12:44:21.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041341722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041376847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:21.020" endtime="20201112 12:44:21.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041341722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041376847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:21.386" endtime="20201112 12:44:21.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.405" endtime="20201112 12:44:21.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.013" endtime="20201112 12:44:21.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.008" endtime="20201112 12:44:21.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:21.425" level="INFO">${RESULT} = [{'time': 0.041376847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.51250000000039e-05, 'source_diff': 3.51250000000039e-05}, {'time': 0.041421056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:44:21.415" endtime="20201112 12:44:21.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:21.456" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:21.427" endtime="20201112 12:44:21.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.467" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 12:44:21.465" endtime="20201112 12:44:21.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.472" level="INFO">VALUE: [3.51250000000039e-05, 3.4902999999995854e-05, 3.46250000000034e-05, 3.4624999999996464e-05, 3.46250000000034e-05, 3.522200000000142e-05, 3.531999999999841e-05, 3.479199999999877e-05, 3.497300000000064e-05, 3.480599999999834e-05, 3.530599999999884e-05, 3.5124999999996964e-05, 3.44580000000011e-05, 3.463900000000297e-05, 3.52779999999997e-05, 3.495900000000107e-05, 3.5096999999997824e-05, 3.511100000000433e-05, 3.513900000000347e-05, 3.5138999999996534e-05, 3.481999999999791e-05, 3.522200000000142e-05, 3.511100000000433e-05, 3.5290999999999795e-05, 3.483399999999748e-05, 3.4805000000005804e-05, 3.51250000000039e-05, 3.463900000000297e-05, 3.504199999999902e-05, 3.49580000000016e-05, 3.479199999999877e-05, 3.515200000000357e-05, 3.497200000000117e-05, 3.46250000000034e-05, 3.4804999999998865e-05, 3.5138999999996534e-05, 3.449999999999981e-05, 3.448600000000024e-05, 3.494400000000203e-05, 3.498600000000074e-05, 3.4624999999996464e-05, 3.493000000000246e-05, 3.444400000000153e-05, 3.480599999999834e-05, 3.5332999999998504e-05, 3.4445000000001e-05, 3.5152999999996104e-05, 3.49580000000016e-05, 3.501399999999988e-05, 3.495900000000107e-05]</msg>
<status status="PASS" starttime="20201112 12:44:21.469" endtime="20201112 12:44:21.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.458" endtime="20201112 12:44:21.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.482" endtime="20201112 12:44:21.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:21.491" endtime="20201112 12:44:21.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.486" endtime="20201112 12:44:21.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.478" endtime="20201112 12:44:21.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.951" endtime="20201112 12:44:21.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.950" endtime="20201112 12:44:21.517"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.540" endtime="20201112 12:44:21.559"></status>
</kw>
<msg timestamp="20201112 12:44:21.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:21.537" endtime="20201112 12:44:21.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:21.562" endtime="20201112 12:44:21.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.568" endtime="20201112 12:44:21.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.529" endtime="20201112 12:44:21.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.523" endtime="20201112 12:44:21.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.592" endtime="20201112 12:44:21.943"></status>
</kw>
<msg timestamp="20201112 12:44:21.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041349139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041391125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:21.589" endtime="20201112 12:44:21.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:21.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041349139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041391125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:21.953" endtime="20201112 12:44:21.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:21.972" endtime="20201112 12:44:21.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.581" endtime="20201112 12:44:21.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.577" endtime="20201112 12:44:21.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:21.992" level="INFO">${RESULT} = [{'time': 0.041391125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.19860000000008e-05, 'source_diff': 4.19860000000008e-05}, {'time': 0.041439194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:44:21.982" endtime="20201112 12:44:21.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:22.023" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:21.994" endtime="20201112 12:44:22.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.034" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 12:44:22.032" endtime="20201112 12:44:22.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.040" level="INFO">VALUE: [4.19860000000008e-05, 4.165199999999619e-05, 4.1832999999998066e-05, 4.197200000000123e-05, 4.2153000000003105e-05, 4.1695000000001314e-05, 4.1667000000002175e-05, 4.1667000000002175e-05, 4.1832999999998066e-05, 4.151399999999944e-05, 4.2054999999999176e-05, 4.1624999999996526e-05, 4.1624999999996526e-05, 4.229199999999933e-05, 4.1790999999999356e-05, 4.2138999999996596e-05, 4.1667000000002175e-05, 4.2153000000003105e-05, 4.149999999999987e-05, 4.194400000000209e-05, 4.2318999999998996e-05, 4.2139000000003535e-05, 4.215199999999669e-05, 4.202799999999951e-05, 4.19860000000008e-05, 4.14860000000003e-05, 4.2360999999997706e-05, 4.145799999999422e-05, 4.165200000000313e-05, 4.19860000000008e-05, 4.23059999999989e-05, 4.165200000000313e-05, 4.219400000000234e-05, 4.219400000000234e-05, 4.2153000000003105e-05, 4.2332999999998566e-05, 4.2333000000005505e-05, 4.2181000000002244e-05, 4.1818999999998496e-05, 4.183400000000448e-05, 4.2319000000005935e-05, 4.147200000000073e-05, 4.179199999999883e-05, 4.147200000000073e-05, 4.14860000000003e-05, 4.182000000000491e-05, 4.14860000000003e-05, 4.201399999999994e-05, 4.1944999999994625e-05, 4.149999999999987e-05]</msg>
<status status="PASS" starttime="20201112 12:44:22.037" endtime="20201112 12:44:22.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.025" endtime="20201112 12:44:22.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.050" endtime="20201112 12:44:22.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:22.058" endtime="20201112 12:44:22.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.053" endtime="20201112 12:44:22.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.045" endtime="20201112 12:44:22.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.519" endtime="20201112 12:44:22.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:21.518" endtime="20201112 12:44:22.084"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.107" endtime="20201112 12:44:22.126"></status>
</kw>
<msg timestamp="20201112 12:44:22.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:22.104" endtime="20201112 12:44:22.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:22.130" endtime="20201112 12:44:22.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.136" endtime="20201112 12:44:22.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.097" endtime="20201112 12:44:22.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.091" endtime="20201112 12:44:22.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.160" endtime="20201112 12:44:22.511"></status>
</kw>
<msg timestamp="20201112 12:44:22.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041498958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041541278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:22.156" endtime="20201112 12:44:22.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041498958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041541278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:22.520" endtime="20201112 12:44:22.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.539" endtime="20201112 12:44:22.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.149" endtime="20201112 12:44:22.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.144" endtime="20201112 12:44:22.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:22.559" level="INFO">${RESULT} = [{'time': 0.041541278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.231999999999847e-05, 'source_diff': 4.231999999999847e-05}, {'time': 0.041588347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:22.549" endtime="20201112 12:44:22.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:22.590" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:22.561" endtime="20201112 12:44:22.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.601" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 12:44:22.599" endtime="20201112 12:44:22.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.606" level="INFO">VALUE: [4.231999999999847e-05, 4.176399999999969e-05, 4.1459000000000634e-05, 4.14860000000003e-05, 4.200000000000037e-05, 4.147200000000073e-05, 4.1818999999998496e-05, 4.145800000000116e-05, 4.2138999999996596e-05, 4.197199999999429e-05, 4.1486999999999774e-05, 4.1818999999998496e-05, 4.2333000000005505e-05, 4.229199999999933e-05, 4.151399999999944e-05, 4.231999999999847e-05, 4.19860000000008e-05, 4.14860000000003e-05, 4.2318999999998996e-05, 4.183400000000448e-05, 4.2166999999995736e-05, 4.1652999999995666e-05, 4.181999999999797e-05, 4.149999999999987e-05, 4.215200000000363e-05, 4.2346999999998136e-05, 4.2124999999997026e-05, 4.2153000000003105e-05, 4.21660000000032e-05, 4.201399999999994e-05, 4.19860000000008e-05, 4.200000000000037e-05, 4.2332999999998566e-05, 4.1486999999999774e-05, 4.19860000000008e-05, 4.1832999999998066e-05, 4.149999999999987e-05, 4.2332999999998566e-05, 4.2360999999997706e-05, 4.2152999999996166e-05, 4.151399999999944e-05, 4.152800000000595e-05, 4.2333000000005505e-05, 4.1639000000003035e-05, 4.225000000000062e-05, 4.1652999999995666e-05, 4.163800000000356e-05, 4.195800000000166e-05, 4.149999999999987e-05, 4.1973000000000704e-05]</msg>
<status status="PASS" starttime="20201112 12:44:22.603" endtime="20201112 12:44:22.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.592" endtime="20201112 12:44:22.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.616" endtime="20201112 12:44:22.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:22.625" endtime="20201112 12:44:22.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.620" endtime="20201112 12:44:22.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.612" endtime="20201112 12:44:22.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.086" endtime="20201112 12:44:22.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.085" endtime="20201112 12:44:22.651"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.674" endtime="20201112 12:44:22.693"></status>
</kw>
<msg timestamp="20201112 12:44:22.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:22.671" endtime="20201112 12:44:22.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:22.696" endtime="20201112 12:44:22.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.703" endtime="20201112 12:44:22.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.664" endtime="20201112 12:44:22.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.658" endtime="20201112 12:44:22.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.727" endtime="20201112 12:44:23.078"></status>
</kw>
<msg timestamp="20201112 12:44:23.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041702625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041744431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:22.723" endtime="20201112 12:44:23.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041702625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041744431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:23.088" endtime="20201112 12:44:23.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.106" endtime="20201112 12:44:23.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.716" endtime="20201112 12:44:23.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.711" endtime="20201112 12:44:23.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:23.128" level="INFO">${RESULT} = [{'time': 0.041744431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.18059999999984e-05, 'source_diff': 4.18059999999984e-05}, {'time': 0.041791667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:44:23.119" endtime="20201112 12:44:23.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:23.159" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:23.130" endtime="20201112 12:44:23.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.170" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 12:44:23.168" endtime="20201112 12:44:23.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.176" level="INFO">VALUE: [4.18059999999984e-05, 4.19860000000008e-05, 4.1846999999997636e-05, 4.2054999999999176e-05, 4.197199999999429e-05, 4.18059999999984e-05, 4.197200000000123e-05, 4.229199999999933e-05, 4.1973000000000704e-05, 4.152800000000595e-05, 4.2153000000003105e-05, 4.14860000000003e-05, 4.182000000000491e-05, 4.231999999999847e-05, 4.145800000000116e-05, 4.197200000000123e-05, 4.147200000000073e-05, 4.2166999999995736e-05, 4.182000000000491e-05, 4.215199999999669e-05, 4.2124999999997026e-05, 4.166599999999576e-05, 4.147199999999379e-05, 4.179199999999883e-05, 4.1818999999998496e-05, 4.2360999999997706e-05, 4.1653000000002605e-05, 4.14860000000003e-05, 4.2153000000003105e-05, 4.231999999999847e-05, 4.2346999999998136e-05, 4.2346999999998136e-05, 4.1973000000000704e-05, 4.1417000000001924e-05, 4.200000000000037e-05, 4.19860000000008e-05, 4.143000000000202e-05, 4.1832999999998066e-05, 4.2153000000003105e-05, 4.2152999999996166e-05, 4.149999999999987e-05, 4.180600000000534e-05, 4.2346999999998136e-05, 4.150000000000681e-05, 4.215199999999669e-05, 4.1832999999998066e-05, 4.14860000000003e-05, 4.1611000000003895e-05, 4.197200000000123e-05, 4.14860000000003e-05]</msg>
<status status="PASS" starttime="20201112 12:44:23.173" endtime="20201112 12:44:23.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.161" endtime="20201112 12:44:23.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.185" endtime="20201112 12:44:23.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:23.194" endtime="20201112 12:44:23.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.189" endtime="20201112 12:44:23.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.181" endtime="20201112 12:44:23.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.653" endtime="20201112 12:44:23.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.652" endtime="20201112 12:44:23.220"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.243" endtime="20201112 12:44:23.262"></status>
</kw>
<msg timestamp="20201112 12:44:23.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:23.240" endtime="20201112 12:44:23.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:23.265" endtime="20201112 12:44:23.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.272" endtime="20201112 12:44:23.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.233" endtime="20201112 12:44:23.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.227" endtime="20201112 12:44:23.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.296" endtime="20201112 12:44:23.647"></status>
</kw>
<msg timestamp="20201112 12:44:23.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041332028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041374167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:23.292" endtime="20201112 12:44:23.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041332028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041374167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:23.657" endtime="20201112 12:44:23.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.676" endtime="20201112 12:44:23.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.285" endtime="20201112 12:44:23.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.280" endtime="20201112 12:44:23.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:23.695" level="INFO">${RESULT} = [{'time': 0.041374167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2139000000003535e-05, 'source_diff': 4.2139000000003535e-05}, {'time': 0.041427319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:23.686" endtime="20201112 12:44:23.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:23.727" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:23.697" endtime="20201112 12:44:23.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.738" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 12:44:23.735" endtime="20201112 12:44:23.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.743" level="INFO">VALUE: [4.2139000000003535e-05, 4.215199999999669e-05, 4.152799999999901e-05, 4.231999999999847e-05, 4.1417000000001924e-05, 4.1832999999998066e-05, 4.23059999999989e-05, 4.1638999999996096e-05, 4.149999999999987e-05, 4.14860000000003e-05, 4.1819000000005435e-05, 4.18059999999984e-05, 4.2318999999998996e-05, 4.19860000000008e-05, 4.14860000000003e-05, 4.2152999999996166e-05, 4.19860000000008e-05, 4.195800000000166e-05, 4.1639000000003035e-05, 4.213799999999712e-05, 4.2332999999998566e-05, 4.232000000000541e-05, 4.1987000000000274e-05, 4.229199999999933e-05, 4.225000000000062e-05, 4.1611000000003895e-05, 4.2332999999998566e-05, 4.14860000000003e-05, 4.151399999999944e-05, 4.2333000000005505e-05, 4.145799999999422e-05, 4.1638999999996096e-05, 4.232000000000541e-05, 4.195800000000166e-05, 4.1804999999998926e-05, 4.2360999999997706e-05, 4.2152999999996166e-05, 4.1959000000001134e-05, 4.197199999999429e-05, 4.165199999999619e-05, 4.219400000000234e-05, 4.1459000000000634e-05, 4.181999999999797e-05, 4.197200000000123e-05, 4.195799999999472e-05, 4.2152999999996166e-05, 4.1987000000000274e-05, 4.181999999999797e-05, 4.151399999999944e-05, 4.147200000000073e-05]</msg>
<status status="PASS" starttime="20201112 12:44:23.740" endtime="20201112 12:44:23.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.729" endtime="20201112 12:44:23.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.753" endtime="20201112 12:44:23.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:23.762" endtime="20201112 12:44:23.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.757" endtime="20201112 12:44:23.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.748" endtime="20201112 12:44:23.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.222" endtime="20201112 12:44:23.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.221" endtime="20201112 12:44:23.788"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.811" endtime="20201112 12:44:23.830"></status>
</kw>
<msg timestamp="20201112 12:44:23.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:23.808" endtime="20201112 12:44:23.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:23.833" endtime="20201112 12:44:23.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.840" endtime="20201112 12:44:23.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.800" endtime="20201112 12:44:23.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.794" endtime="20201112 12:44:23.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.863" endtime="20201112 12:44:24.215"></status>
</kw>
<msg timestamp="20201112 12:44:24.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041548139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041589639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:23.860" endtime="20201112 12:44:24.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041548139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041589639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:24.224" endtime="20201112 12:44:24.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.244" endtime="20201112 12:44:24.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.853" endtime="20201112 12:44:24.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.848" endtime="20201112 12:44:24.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:24.263" level="INFO">${RESULT} = [{'time': 0.041589639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.149999999999987e-05, 'source_diff': 4.149999999999987e-05}, {'time': 0.041641653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:24.254" endtime="20201112 12:44:24.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:24.294" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:24.265" endtime="20201112 12:44:24.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.306" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 12:44:24.303" endtime="20201112 12:44:24.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.311" level="INFO">VALUE: [4.149999999999987e-05, 4.1459000000000634e-05, 4.1638999999996096e-05, 4.1666999999995236e-05, 4.1818999999998496e-05, 4.1652999999995666e-05, 4.165200000000313e-05, 4.23059999999989e-05, 4.145800000000116e-05, 4.16939999999949e-05, 4.200000000000037e-05, 4.1804999999998926e-05, 4.149999999999987e-05, 4.2139000000003535e-05, 4.1638999999996096e-05, 4.165200000000313e-05, 4.1818999999998496e-05, 4.197200000000123e-05, 4.1582999999997816e-05, 4.1846999999997636e-05, 4.2153000000003105e-05, 4.2332999999998566e-05, 4.16660000000027e-05, 4.173600000000055e-05, 4.200000000000037e-05, 4.14860000000003e-05, 4.1832999999998066e-05, 4.1459000000000634e-05, 4.232000000000541e-05, 4.149999999999987e-05, 4.200000000000037e-05, 4.200000000000037e-05, 4.151399999999944e-05, 4.163799999999662e-05, 4.1459000000000634e-05, 4.231999999999847e-05, 4.218000000000277e-05, 4.2152999999996166e-05, 4.2318999999998996e-05, 4.172200000000098e-05, 4.231999999999847e-05, 4.1818999999998496e-05, 4.1694999999994375e-05, 4.2153000000003105e-05, 4.2153000000003105e-05, 4.200000000000037e-05, 4.1804999999998926e-05, 4.14860000000003e-05, 4.2139000000003535e-05, 4.149999999999987e-05]</msg>
<status status="PASS" starttime="20201112 12:44:24.308" endtime="20201112 12:44:24.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.296" endtime="20201112 12:44:24.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.321" endtime="20201112 12:44:24.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:24.330" endtime="20201112 12:44:24.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.325" endtime="20201112 12:44:24.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.316" endtime="20201112 12:44:24.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.790" endtime="20201112 12:44:24.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.789" endtime="20201112 12:44:24.356"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.380" endtime="20201112 12:44:24.399"></status>
</kw>
<msg timestamp="20201112 12:44:24.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:24.376" endtime="20201112 12:44:24.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:24.402" endtime="20201112 12:44:24.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.409" endtime="20201112 12:44:24.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.368" endtime="20201112 12:44:24.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.362" endtime="20201112 12:44:24.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.433" endtime="20201112 12:44:24.785"></status>
</kw>
<msg timestamp="20201112 12:44:24.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042071278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042113222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:24.430" endtime="20201112 12:44:24.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042071278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042113222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:24.794" endtime="20201112 12:44:24.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.814" endtime="20201112 12:44:24.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.422" endtime="20201112 12:44:24.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.418" endtime="20201112 12:44:24.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:24.833" level="INFO">${RESULT} = [{'time': 0.042113222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.194400000000209e-05, 'source_diff': 4.194400000000209e-05}, {'time': 0.042164292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:24.824" endtime="20201112 12:44:24.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:24.864" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:24.835" endtime="20201112 12:44:24.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.875" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 12:44:24.873" endtime="20201112 12:44:24.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.881" level="INFO">VALUE: [4.194400000000209e-05, 4.2152999999996166e-05, 4.231999999999847e-05, 4.2153000000003105e-05, 4.1610999999996956e-05, 4.1832999999998066e-05, 4.195800000000166e-05, 4.199999999999343e-05, 4.14860000000003e-05, 4.232000000000541e-05, 4.2153000000003105e-05, 4.1804999999998926e-05, 4.181999999999797e-05, 4.1833000000005005e-05, 4.16660000000027e-05, 4.2167000000002675e-05, 4.216599999999626e-05, 4.1847000000004575e-05, 4.2304999999999426e-05, 4.1625000000003465e-05, 4.16660000000027e-05, 4.147200000000073e-05, 4.2166999999995736e-05, 4.151399999999944e-05, 4.2332999999998566e-05, 4.2082999999998316e-05, 4.2166999999995736e-05, 4.19860000000008e-05, 4.170800000000141e-05, 4.1987000000000274e-05, 4.19860000000008e-05, 4.1819000000005435e-05, 4.1652999999995666e-05, 4.14860000000003e-05, 4.215199999999669e-05, 4.2167000000002675e-05, 4.1832999999998066e-05, 4.2347000000005075e-05, 4.1804999999998926e-05, 4.149999999999987e-05, 4.2166999999995736e-05, 4.19860000000008e-05, 4.161200000000337e-05, 4.1818999999998496e-05, 4.2318999999998996e-05, 4.147200000000073e-05, 4.197200000000123e-05, 4.165199999999619e-05, 4.19860000000008e-05, 4.1486999999999774e-05]</msg>
<status status="PASS" starttime="20201112 12:44:24.878" endtime="20201112 12:44:24.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.866" endtime="20201112 12:44:24.884"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.891" endtime="20201112 12:44:24.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:24.899" endtime="20201112 12:44:24.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.895" endtime="20201112 12:44:24.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.886" endtime="20201112 12:44:24.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.358" endtime="20201112 12:44:24.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.357" endtime="20201112 12:44:24.926"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.949" endtime="20201112 12:44:24.968"></status>
</kw>
<msg timestamp="20201112 12:44:24.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:24.945" endtime="20201112 12:44:24.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:24.971" endtime="20201112 12:44:24.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.977" endtime="20201112 12:44:24.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.938" endtime="20201112 12:44:24.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.932" endtime="20201112 12:44:24.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.001" endtime="20201112 12:44:25.352"></status>
</kw>
<msg timestamp="20201112 12:44:25.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041505847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041547847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:24.998" endtime="20201112 12:44:25.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041505847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041547847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:25.362" endtime="20201112 12:44:25.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.381" endtime="20201112 12:44:25.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.990" endtime="20201112 12:44:25.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.986" endtime="20201112 12:44:25.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:25.403" level="INFO">${RESULT} = [{'time': 0.041547847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.200000000000037e-05, 'source_diff': 4.200000000000037e-05}, {'time': 0.041598, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:44:25.393" endtime="20201112 12:44:25.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:25.434" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:25.405" endtime="20201112 12:44:25.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.446" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 12:44:25.443" endtime="20201112 12:44:25.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.451" level="INFO">VALUE: [4.200000000000037e-05, 4.197200000000123e-05, 4.1818999999998496e-05, 4.19860000000008e-05, 4.1903000000002855e-05, 4.1818999999998496e-05, 4.216599999999626e-05, 4.231999999999847e-05, 4.231999999999847e-05, 4.16660000000027e-05, 4.233400000000498e-05, 4.2346999999998136e-05, 4.2347000000005075e-05, 4.198599999999386e-05, 4.200000000000037e-05, 4.23059999999989e-05, 4.219400000000234e-05, 4.151399999999944e-05, 4.14860000000003e-05, 4.1667000000002175e-05, 4.1818999999998496e-05, 4.165200000000313e-05, 4.165199999999619e-05, 4.1833000000005005e-05, 4.1667000000002175e-05, 4.2347000000005075e-05, 4.215199999999669e-05, 4.2180999999995306e-05, 4.229200000000627e-05, 4.229199999999933e-05, 4.199999999999343e-05, 4.183400000000448e-05, 4.200000000000037e-05, 4.147200000000073e-05, 4.14860000000003e-05, 4.2374999999997276e-05, 4.1667000000002175e-05, 4.1832999999998066e-05, 4.236199999999718e-05, 4.2167000000002675e-05, 4.181999999999797e-05, 4.19860000000008e-05, 4.198599999999386e-05, 4.1681000000001744e-05, 4.14860000000003e-05, 4.195800000000166e-05, 4.200000000000037e-05, 4.216599999999626e-05, 4.233399999999804e-05, 4.19860000000008e-05]</msg>
<status status="PASS" starttime="20201112 12:44:25.448" endtime="20201112 12:44:25.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.436" endtime="20201112 12:44:25.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.461" endtime="20201112 12:44:25.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:25.470" endtime="20201112 12:44:25.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.465" endtime="20201112 12:44:25.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.456" endtime="20201112 12:44:25.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.928" endtime="20201112 12:44:25.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.927" endtime="20201112 12:44:25.496"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.519" endtime="20201112 12:44:25.538"></status>
</kw>
<msg timestamp="20201112 12:44:25.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:25.516" endtime="20201112 12:44:25.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:25.542" endtime="20201112 12:44:25.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.548" endtime="20201112 12:44:25.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.508" endtime="20201112 12:44:25.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.502" endtime="20201112 12:44:25.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.572" endtime="20201112 12:44:25.924"></status>
</kw>
<msg timestamp="20201112 12:44:25.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041579528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041628028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:25.568" endtime="20201112 12:44:25.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041579528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041628028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:25.934" endtime="20201112 12:44:25.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.953" endtime="20201112 12:44:25.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.561" endtime="20201112 12:44:25.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.556" endtime="20201112 12:44:25.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:25.972" level="INFO">${RESULT} = [{'time': 0.041628028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.849999999999993e-05, 'source_diff': 4.849999999999993e-05}, {'time': 0.041682139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:25.963" endtime="20201112 12:44:25.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:26.004" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:25.974" endtime="20201112 12:44:26.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.015" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 12:44:26.013" endtime="20201112 12:44:26.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.021" level="INFO">VALUE: [4.849999999999993e-05, 4.854199999999864e-05, 4.934700000000514e-05, 4.8653000000002666e-05, 4.8875000000003777e-05, 4.90270000000001e-05, 4.897200000000129e-05, 4.93339999999981e-05, 4.902799999999957e-05, 4.852799999999907e-05, 4.933299999999863e-05, 4.852799999999907e-05, 4.931899999999906e-05, 4.9165999999996324e-05, 4.8667000000002236e-05, 4.8959000000001196e-05, 4.923600000000111e-05, 4.931899999999906e-05, 4.852799999999907e-05, 4.86669999999953e-05, 4.8695000000001376e-05, 4.9137999999997184e-05, 4.9179999999995894e-05, 4.936099999999777e-05, 4.852799999999907e-05, 4.85139999999995e-05, 4.8667000000002236e-05, 4.9375000000004277e-05, 4.919499999999494e-05, 4.938899999999691e-05, 4.85139999999995e-05, 4.931899999999906e-05, 4.904099999999967e-05, 4.9181000000002306e-05, 4.849999999999993e-05, 4.862499999999659e-05, 4.898600000000086e-05, 4.934800000000461e-05, 4.93469999999982e-05, 4.851300000000003e-05, 4.868099999999487e-05, 4.9179999999995894e-05, 4.900000000000043e-05, 4.883299999999813e-05, 4.868099999999487e-05, 4.8695000000001376e-05, 4.91940000000024e-05, 4.9139000000003596e-05, 4.88060000000054e-05, 4.9014e-05]</msg>
<status status="PASS" starttime="20201112 12:44:26.017" endtime="20201112 12:44:26.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.005" endtime="20201112 12:44:26.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.034" endtime="20201112 12:44:26.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:26.043" endtime="20201112 12:44:26.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.039" endtime="20201112 12:44:26.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.030" endtime="20201112 12:44:26.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.498" endtime="20201112 12:44:26.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.497" endtime="20201112 12:44:26.069"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.092" endtime="20201112 12:44:26.113"></status>
</kw>
<msg timestamp="20201112 12:44:26.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:26.089" endtime="20201112 12:44:26.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:26.116" endtime="20201112 12:44:26.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.123" endtime="20201112 12:44:26.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.082" endtime="20201112 12:44:26.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.076" endtime="20201112 12:44:26.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.146" endtime="20201112 12:44:26.499"></status>
</kw>
<msg timestamp="20201112 12:44:26.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041371958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041450722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:26.143" endtime="20201112 12:44:26.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041371958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041450722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:26.509" endtime="20201112 12:44:26.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.528" endtime="20201112 12:44:26.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.136" endtime="20201112 12:44:26.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.131" endtime="20201112 12:44:26.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:26.548" level="INFO">${RESULT} = [{'time': 0.041450722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.8764000000002e-05, 'source_diff': 7.8764000000002e-05}, {'time': 0.041538972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201112 12:44:26.538" endtime="20201112 12:44:26.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:26.578" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:26.550" endtime="20201112 12:44:26.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.590" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 12:44:26.587" endtime="20201112 12:44:26.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.595" level="INFO">VALUE: [7.8764000000002e-05, 7.911099999999976e-05, 7.898600000000311e-05, 7.907000000000053e-05, 7.898599999999617e-05, 7.9151999999999e-05, 7.84719999999961e-05, 7.867999999999764e-05, 7.916699999999804e-05, 7.840299999999772e-05, 7.898699999999564e-05, 7.913900000000584e-05, 7.857000000000003e-05, 7.870899999999625e-05, 7.904200000000139e-05, 7.906900000000106e-05, 7.930600000000121e-05, 7.836099999999901e-05, 7.848599999999567e-05, 7.884699999999994e-05, 7.923600000000336e-05, 7.858300000000012e-05, 7.836099999999901e-05, 7.8458999999996e-05, 7.85269999999949e-05, 7.854100000000142e-05, 7.847200000000304e-05, 7.855600000000046e-05, 7.833399999999935e-05, 7.883300000000037e-05, 7.856900000000056e-05, 7.932000000000078e-05, 7.895800000000397e-05, 7.861199999999874e-05, 7.879200000000114e-05, 7.847200000000304e-05, 7.850000000000218e-05, 7.843099999999686e-05, 7.875000000000243e-05, 7.880600000000071e-05, 7.90269999999954e-05, 7.923599999999642e-05, 7.845800000000347e-05, 7.861099999999926e-05, 7.89719999999966e-05, 7.875000000000243e-05, 7.924999999999599e-05, 7.923599999999642e-05, 7.861199999999874e-05, 7.888899999999865e-05]</msg>
<status status="PASS" starttime="20201112 12:44:26.592" endtime="20201112 12:44:26.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.580" endtime="20201112 12:44:26.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.605" endtime="20201112 12:44:26.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:26.613" endtime="20201112 12:44:26.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.609" endtime="20201112 12:44:26.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.600" endtime="20201112 12:44:26.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.071" endtime="20201112 12:44:26.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.070" endtime="20201112 12:44:26.640"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.663" endtime="20201112 12:44:26.683"></status>
</kw>
<msg timestamp="20201112 12:44:26.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:26.660" endtime="20201112 12:44:26.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:26.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:26.687" endtime="20201112 12:44:26.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.693" endtime="20201112 12:44:26.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.652" endtime="20201112 12:44:26.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.646" endtime="20201112 12:44:26.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:26.717" endtime="20201112 12:44:27.068"></status>
</kw>
<msg timestamp="20201112 12:44:27.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041365292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041445333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:26.714" endtime="20201112 12:44:27.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041365292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041445333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:27.078" endtime="20201112 12:44:27.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.097" endtime="20201112 12:44:27.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.706" endtime="20201112 12:44:27.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.701" endtime="20201112 12:44:27.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:27.117" level="INFO">${RESULT} = [{'time': 0.041445333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.004100000000292e-05, 'source_diff': 8.004100000000292e-05}, {'time': 0.041533611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:27.108" endtime="20201112 12:44:27.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:27.148" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:27.119" endtime="20201112 12:44:27.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.159" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 12:44:27.157" endtime="20201112 12:44:27.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.164" level="INFO">VALUE: [8.004100000000292e-05, 7.944399999999796e-05, 8.029200000000264e-05, 7.947300000000351e-05, 7.998599999999717e-05, 8.025000000000393e-05, 7.952799999999538e-05, 7.962499999999983e-05, 7.9846999999994e-05, 8.026399999999656e-05, 7.988899999999965e-05, 8.006899999999512e-05, 7.973599999999692e-05, 8.034700000000145e-05, 7.938899999999915e-05, 8.012500000000033e-05, 7.991599999999932e-05, 8.034800000000092e-05, 8.034700000000145e-05, 7.962499999999983e-05, 7.950000000000318e-05, 8.001399999999631e-05, 7.954200000000189e-05, 8.027800000000307e-05, 8.029200000000264e-05, 7.952800000000232e-05, 7.951399999999581e-05, 7.941700000000523e-05, 8.020800000000522e-05, 8.015299999999947e-05, 8.019399999999871e-05, 7.95840000000006e-05, 7.958399999999366e-05, 8.020899999999775e-05, 7.954200000000189e-05, 7.949999999999624e-05, 7.933400000000035e-05, 7.969399999999821e-05, 7.994399999999846e-05, 8.005499999999555e-05, 8.004100000000292e-05, 7.972200000000429e-05, 7.979200000000214e-05, 8.027800000000307e-05, 8.027800000000307e-05, 7.974999999999649e-05, 7.986199999999999e-05, 7.99169999999988e-05, 7.995799999999803e-05, 8.023600000000436e-05]</msg>
<status status="PASS" starttime="20201112 12:44:27.161" endtime="20201112 12:44:27.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.150" endtime="20201112 12:44:27.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.174" endtime="20201112 12:44:27.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:27.183" endtime="20201112 12:44:27.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.178" endtime="20201112 12:44:27.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.170" endtime="20201112 12:44:27.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.642" endtime="20201112 12:44:27.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:26.641" endtime="20201112 12:44:27.209"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.232" endtime="20201112 12:44:27.253"></status>
</kw>
<msg timestamp="20201112 12:44:27.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:27.229" endtime="20201112 12:44:27.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:27.256" endtime="20201112 12:44:27.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.263" endtime="20201112 12:44:27.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.221" endtime="20201112 12:44:27.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.216" endtime="20201112 12:44:27.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.287" endtime="20201112 12:44:27.637"></status>
</kw>
<msg timestamp="20201112 12:44:27.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041429417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041510014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:27.283" endtime="20201112 12:44:27.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041429417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041510014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:27.647" endtime="20201112 12:44:27.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.666" endtime="20201112 12:44:27.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.276" endtime="20201112 12:44:27.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.271" endtime="20201112 12:44:27.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:27.687" level="INFO">${RESULT} = [{'time': 0.041510014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.059699999999476e-05, 'source_diff': 8.059699999999476e-05}, {'time': 0.041597431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:27.678" endtime="20201112 12:44:27.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:27.718" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:27.689" endtime="20201112 12:44:27.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.729" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 12:44:27.727" endtime="20201112 12:44:27.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.735" level="INFO">VALUE: [8.059699999999476e-05, 8.07919999999962e-05, 8.10840000000021e-05, 8.05970000000017e-05, 8.06390000000004e-05, 8.027699999999666e-05, 8.084700000000195e-05, 8.040299999999972e-05, 8.075000000000443e-05, 8.034700000000145e-05, 8.086100000000151e-05, 8.038900000000015e-05, 8.056899999999562e-05, 8.022199999999785e-05, 8.118099999999961e-05, 8.062500000000083e-05, 8.04169999999993e-05, 8.090200000000075e-05, 8.123600000000536e-05, 8.093099999999936e-05, 8.129200000000364e-05, 8.106900000000306e-05, 8.133299999999594e-05, 8.06249999999939e-05, 8.023600000000436e-05, 8.047200000000504e-05, 8.058299999999519e-05, 8.12369999999979e-05, 8.073599999999792e-05, 8.116700000000004e-05, 8.037500000000058e-05, 8.03190000000023e-05, 8.129200000000364e-05, 8.041599999999982e-05, 8.058300000000213e-05, 8.066600000000007e-05, 8.049999999999724e-05, 8.070799999999878e-05, 8.063800000000093e-05, 8.062500000000083e-05, 8.077800000000357e-05, 8.06390000000004e-05, 8.080600000000271e-05, 8.056900000000256e-05, 8.0846999999995e-05, 8.086100000000151e-05, 8.086099999999458e-05, 8.082000000000228e-05, 8.105499999999655e-05, 8.054199999999595e-05]</msg>
<status status="PASS" starttime="20201112 12:44:27.731" endtime="20201112 12:44:27.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.720" endtime="20201112 12:44:27.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.744" endtime="20201112 12:44:27.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:27.753" endtime="20201112 12:44:27.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.748" endtime="20201112 12:44:27.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.740" endtime="20201112 12:44:27.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.211" endtime="20201112 12:44:27.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.210" endtime="20201112 12:44:27.779"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.802" endtime="20201112 12:44:27.823"></status>
</kw>
<msg timestamp="20201112 12:44:27.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:27.799" endtime="20201112 12:44:27.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:27.826" endtime="20201112 12:44:27.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.833" endtime="20201112 12:44:27.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.792" endtime="20201112 12:44:27.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.786" endtime="20201112 12:44:27.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.857" endtime="20201112 12:44:28.209"></status>
</kw>
<msg timestamp="20201112 12:44:28.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041441486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041523056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:27.853" endtime="20201112 12:44:28.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041441486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041523056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:28.218" endtime="20201112 12:44:28.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.237" endtime="20201112 12:44:28.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.846" endtime="20201112 12:44:28.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.841" endtime="20201112 12:44:28.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:28.257" level="INFO">${RESULT} = [{'time': 0.041523056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.157000000000303e-05, 'source_diff': 8.157000000000303e-05}, {'time': 0.041609347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:28.247" endtime="20201112 12:44:28.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:28.288" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:28.259" endtime="20201112 12:44:28.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.299" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 12:44:28.296" endtime="20201112 12:44:28.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.304" level="INFO">VALUE: [8.157000000000303e-05, 8.174999999999849e-05, 8.161100000000227e-05, 8.215300000000147e-05, 8.138900000000115e-05, 8.222199999999985e-05, 8.161100000000227e-05, 8.204099999999798e-05, 8.152799999999738e-05, 8.162500000000183e-05, 8.198600000000611e-05, 8.170799999999978e-05, 8.165300000000097e-05, 8.16249999999949e-05, 8.21390000000019e-05, 8.14719999999991e-05, 8.151399999999781e-05, 8.176299999999859e-05, 8.186100000000252e-05, 8.159800000000217e-05, 8.21390000000019e-05, 8.216700000000104e-05, 8.215300000000147e-05, 8.187499999999515e-05, 8.213899999999497e-05, 8.182000000000328e-05, 8.169400000000021e-05, 8.130600000000321e-05, 8.144499999999943e-05, 8.173599999999892e-05, 8.176399999999806e-05, 8.201399999999831e-05, 8.12770000000046e-05, 8.16390000000014e-05, 8.156999999999609e-05, 8.216600000000157e-05, 8.133299999999594e-05, 8.1846999999996e-05, 8.211099999999583e-05, 8.154099999999748e-05, 8.22919999999977e-05, 8.220800000000028e-05, 8.152799999999738e-05, 8.187500000000208e-05, 8.154200000000389e-05, 8.216599999999463e-05, 8.162500000000183e-05, 8.1458999999999e-05, 8.127799999999713e-05, 8.177799999999763e-05]</msg>
<status status="PASS" starttime="20201112 12:44:28.301" endtime="20201112 12:44:28.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.290" endtime="20201112 12:44:28.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.314" endtime="20201112 12:44:28.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:28.323" endtime="20201112 12:44:28.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.318" endtime="20201112 12:44:28.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.310" endtime="20201112 12:44:28.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.781" endtime="20201112 12:44:28.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.780" endtime="20201112 12:44:28.349"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.372" endtime="20201112 12:44:28.393"></status>
</kw>
<msg timestamp="20201112 12:44:28.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:28.369" endtime="20201112 12:44:28.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:28.396" endtime="20201112 12:44:28.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.403" endtime="20201112 12:44:28.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.361" endtime="20201112 12:44:28.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.356" endtime="20201112 12:44:28.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.426" endtime="20201112 12:44:28.778"></status>
</kw>
<msg timestamp="20201112 12:44:28.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041347625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041430042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:28.423" endtime="20201112 12:44:28.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041347625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041430042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:28.787" endtime="20201112 12:44:28.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.806" endtime="20201112 12:44:28.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.416" endtime="20201112 12:44:28.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.411" endtime="20201112 12:44:28.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:28.826" level="INFO">${RESULT} = [{'time': 0.041430042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.24170000000013e-05, 'source_diff': 8.24170000000013e-05}, {'time': 0.041518333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:44:28.817" endtime="20201112 12:44:28.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:28.857" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:28.828" endtime="20201112 12:44:28.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.868" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 12:44:28.866" endtime="20201112 12:44:28.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.874" level="INFO">VALUE: [8.24170000000013e-05, 8.229099999999823e-05, 8.287500000000309e-05, 8.294500000000093e-05, 8.262500000000284e-05, 8.30840000000041e-05, 8.24170000000013e-05, 8.265300000000197e-05, 8.29170000000018e-05, 8.323600000000042e-05, 8.284799999999648e-05, 8.266700000000154e-05, 8.245800000000053e-05, 8.281899999999787e-05, 8.272299999999982e-05, 8.275000000000643e-05, 8.286099999999658e-05, 8.252799999999838e-05, 8.255499999999805e-05, 8.268100000000111e-05, 8.302799999999888e-05, 8.245800000000053e-05, 8.286099999999658e-05, 8.283300000000438e-05, 8.238900000000215e-05, 8.311100000000377e-05, 8.237500000000259e-05, 8.291600000000232e-05, 8.273599999999992e-05, 8.232000000000378e-05, 8.286199999999605e-05, 8.318099999999468e-05, 8.252799999999838e-05, 8.329099999999923e-05, 8.276399999999906e-05, 8.265300000000197e-05, 8.236100000000302e-05, 8.31390000000029e-05, 8.243000000000139e-05, 8.304100000000592e-05, 8.277699999999916e-05, 8.236200000000249e-05, 8.333299999999794e-05, 8.232000000000378e-05, 8.295800000000103e-05, 8.254099999999848e-05, 8.283299999999744e-05, 8.244500000000043e-05, 8.327800000000607e-05, 8.288899999999572e-05]</msg>
<status status="PASS" starttime="20201112 12:44:28.871" endtime="20201112 12:44:28.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.859" endtime="20201112 12:44:28.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.884" endtime="20201112 12:44:28.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:28.892" endtime="20201112 12:44:28.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.888" endtime="20201112 12:44:28.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.879" endtime="20201112 12:44:28.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.351" endtime="20201112 12:44:28.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.350" endtime="20201112 12:44:28.918"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.942" endtime="20201112 12:44:28.962"></status>
</kw>
<msg timestamp="20201112 12:44:28.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:28.938" endtime="20201112 12:44:28.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:28.966" endtime="20201112 12:44:28.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.972" endtime="20201112 12:44:28.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.931" endtime="20201112 12:44:28.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.925" endtime="20201112 12:44:28.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.996" endtime="20201112 12:44:29.347"></status>
</kw>
<msg timestamp="20201112 12:44:29.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041510278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041594236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:28.993" endtime="20201112 12:44:29.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041510278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041594236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:29.357" endtime="20201112 12:44:29.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.375" endtime="20201112 12:44:29.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.985" endtime="20201112 12:44:29.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.981" endtime="20201112 12:44:29.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:29.395" level="INFO">${RESULT} = [{'time': 0.041594236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.395800000000203e-05, 'source_diff': 8.395800000000203e-05}, {'time': 0.041683472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:29.386" endtime="20201112 12:44:29.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:29.426" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:29.397" endtime="20201112 12:44:29.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.437" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 12:44:29.435" endtime="20201112 12:44:29.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.443" level="INFO">VALUE: [8.395800000000203e-05, 8.379099999999973e-05, 8.368100000000211e-05, 8.369500000000168e-05, 8.362500000000384e-05, 8.390299999999629e-05, 8.418099999999568e-05, 8.398600000000117e-05, 8.35970000000047e-05, 8.394399999999552e-05, 8.36119999999968e-05, 8.380599999999877e-05, 8.380599999999877e-05, 8.41249999999974e-05, 8.405499999999955e-05, 8.419399999999577e-05, 8.366600000000307e-05, 8.329099999999923e-05, 8.381899999999887e-05, 8.406899999999912e-05, 8.39720000000016e-05, 8.363899999999647e-05, 8.388899999999672e-05, 8.408399999999816e-05, 8.358399999999766e-05, 8.36249999999969e-05, 8.425000000000099e-05, 8.422300000000132e-05, 8.380500000000624e-05, 8.376400000000006e-05, 8.351399999999981e-05, 8.369500000000168e-05, 8.419400000000271e-05, 8.381999999999834e-05, 8.352799999999938e-05, 8.388899999999672e-05, 8.39170000000028e-05, 8.336200000000349e-05, 8.405599999999902e-05, 8.345800000000153e-05, 8.41249999999974e-05, 8.333300000000488e-05, 8.350000000000024e-05, 8.41669999999961e-05, 8.372199999999441e-05, 8.398600000000117e-05, 8.41390000000039e-05, 8.391699999999586e-05, 8.352799999999938e-05, 8.370799999999484e-05]</msg>
<status status="PASS" starttime="20201112 12:44:29.440" endtime="20201112 12:44:29.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.428" endtime="20201112 12:44:29.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.453" endtime="20201112 12:44:29.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:29.461" endtime="20201112 12:44:29.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.457" endtime="20201112 12:44:29.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.448" endtime="20201112 12:44:29.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.921" endtime="20201112 12:44:29.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.919" endtime="20201112 12:44:29.488"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.511" endtime="20201112 12:44:29.531"></status>
</kw>
<msg timestamp="20201112 12:44:29.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:29.507" endtime="20201112 12:44:29.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:29.535" endtime="20201112 12:44:29.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.541" endtime="20201112 12:44:29.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.500" endtime="20201112 12:44:29.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.494" endtime="20201112 12:44:29.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.567" endtime="20201112 12:44:29.917"></status>
</kw>
<msg timestamp="20201112 12:44:29.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041290708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041375569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:29.563" endtime="20201112 12:44:29.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041290708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041375569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:29.927" endtime="20201112 12:44:29.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.946" endtime="20201112 12:44:29.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.555" endtime="20201112 12:44:29.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.550" endtime="20201112 12:44:29.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:29.967" level="INFO">${RESULT} = [{'time': 0.041375569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.486099999999858e-05, 'source_diff': 8.486099999999858e-05}, {'time': 0.041470833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:29.958" endtime="20201112 12:44:29.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:29.998" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:29.970" endtime="20201112 12:44:29.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.010" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 12:44:30.007" endtime="20201112 12:44:30.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.015" level="INFO">VALUE: [8.486099999999858e-05, 8.490199999999781e-05, 8.430600000000621e-05, 8.476400000000106e-05, 8.504200000000045e-05, 8.465299999999704e-05, 8.443000000000339e-05, 8.426300000000109e-05, 8.527800000000113e-05, 8.472199999999541e-05, 8.454100000000048e-05, 8.523600000000242e-05, 8.451400000000081e-05, 8.458399999999866e-05, 8.523599999999548e-05, 8.513899999999797e-05, 8.480599999999977e-05, 8.473600000000192e-05, 8.447199999999516e-05, 8.523600000000242e-05, 8.440299999999679e-05, 8.431899999999937e-05, 8.488899999999772e-05, 8.525000000000199e-05, 8.445799999999559e-05, 8.452800000000038e-05, 8.43469999999985e-05, 8.520800000000328e-05, 8.454199999999995e-05, 8.452800000000038e-05, 8.427700000000066e-05, 8.466700000000354e-05, 8.452800000000038e-05, 8.44170000000033e-05, 8.511100000000577e-05, 8.444400000000296e-05, 8.501400000000131e-05, 8.46390000000044e-05, 8.482000000000628e-05, 8.51669999999971e-05, 8.450000000000124e-05, 8.48050000000003e-05, 8.470900000000225e-05, 8.441599999999688e-05, 8.511099999999883e-05, 8.518100000000361e-05, 8.488899999999772e-05, 8.451300000000134e-05, 8.523600000000242e-05, 8.500000000000174e-05]</msg>
<status status="PASS" starttime="20201112 12:44:30.012" endtime="20201112 12:44:30.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.000" endtime="20201112 12:44:30.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.025" endtime="20201112 12:44:30.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:30.034" endtime="20201112 12:44:30.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.029" endtime="20201112 12:44:30.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.020" endtime="20201112 12:44:30.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.490" endtime="20201112 12:44:30.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:29.488" endtime="20201112 12:44:30.060"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.083" endtime="20201112 12:44:30.104"></status>
</kw>
<msg timestamp="20201112 12:44:30.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:30.079" endtime="20201112 12:44:30.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:30.107" endtime="20201112 12:44:30.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.113" endtime="20201112 12:44:30.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.072" endtime="20201112 12:44:30.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.066" endtime="20201112 12:44:30.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.137" endtime="20201112 12:44:30.490"></status>
</kw>
<msg timestamp="20201112 12:44:30.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041275292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041360861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:30.134" endtime="20201112 12:44:30.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041275292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041360861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:30.500" endtime="20201112 12:44:30.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.519" endtime="20201112 12:44:30.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.126" endtime="20201112 12:44:30.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.122" endtime="20201112 12:44:30.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:30.538" level="INFO">${RESULT} = [{'time': 0.041360861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.556900000000062e-05, 'source_diff': 8.556900000000062e-05}, {'time': 0.041453069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:30.529" endtime="20201112 12:44:30.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:30.569" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:30.540" endtime="20201112 12:44:30.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.581" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 12:44:30.578" endtime="20201112 12:44:30.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.586" level="INFO">VALUE: [8.556900000000062e-05, 8.601300000000284e-05, 8.618000000000514e-05, 8.540300000000473e-05, 8.633300000000094e-05, 8.555600000000052e-05, 8.609700000000026e-05, 8.570800000000378e-05, 8.555600000000052e-05, 8.61669999999981e-05, 8.594500000000393e-05, 8.542999999999745e-05, 8.594399999999752e-05, 8.615299999999854e-05, 8.559799999999923e-05, 8.613899999999897e-05, 8.59999999999958e-05, 8.53469999999995e-05, 8.61249999999994e-05, 8.627800000000213e-05, 8.552800000000138e-05, 8.558300000000019e-05, 8.5847e-05, 8.555600000000052e-05, 8.580599999999383e-05, 8.574999999999555e-05, 8.53050000000008e-05, 8.582000000000034e-05, 8.613899999999897e-05, 8.543099999999693e-05, 8.594400000000446e-05, 8.597199999999666e-05, 8.547199999999616e-05, 8.602699999999547e-05, 8.552699999999497e-05, 8.579199999999426e-05, 8.548600000000267e-05, 8.5847e-05, 8.52920000000007e-05, 8.559699999999976e-05, 8.626399999999562e-05, 8.606900000000112e-05, 8.531999999999984e-05, 8.626399999999562e-05, 8.563899999999847e-05, 8.591599999999838e-05, 8.537499999999865e-05, 8.56799999999977e-05, 8.611099999999983e-05, 8.61249999999994e-05]</msg>
<status status="PASS" starttime="20201112 12:44:30.583" endtime="20201112 12:44:30.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.571" endtime="20201112 12:44:30.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.597" endtime="20201112 12:44:30.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:30.606" endtime="20201112 12:44:30.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.601" endtime="20201112 12:44:30.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.592" endtime="20201112 12:44:30.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.062" endtime="20201112 12:44:30.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.061" endtime="20201112 12:44:30.633"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.656" endtime="20201112 12:44:30.677"></status>
</kw>
<msg timestamp="20201112 12:44:30.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:30.653" endtime="20201112 12:44:30.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:30.680" endtime="20201112 12:44:30.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.687" endtime="20201112 12:44:30.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.645" endtime="20201112 12:44:30.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.639" endtime="20201112 12:44:30.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.710" endtime="20201112 12:44:31.062"></status>
</kw>
<msg timestamp="20201112 12:44:31.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041771736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041858764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:30.707" endtime="20201112 12:44:31.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041771736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041858764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:31.071" endtime="20201112 12:44:31.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:31.090" endtime="20201112 12:44:31.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.700" endtime="20201112 12:44:31.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.695" endtime="20201112 12:44:31.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:31.110" level="INFO">${RESULT} = [{'time': 0.041858764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.702800000000288e-05, 'source_diff': 8.702800000000288e-05}, {'time': 0.041950014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:31.100" endtime="20201112 12:44:31.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:31.140" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:31.112" endtime="20201112 12:44:31.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.152" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 12:44:31.149" endtime="20201112 12:44:31.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.157" level="INFO">VALUE: [8.702800000000288e-05, 8.677800000000263e-05, 8.73199999999949e-05, 8.705500000000255e-05, 8.688899999999972e-05, 8.645799999999759e-05, 8.640299999999879e-05, 8.658299999999425e-05, 8.681899999999493e-05, 8.725000000000399e-05, 8.669399999999827e-05, 8.705599999999508e-05, 8.707000000000159e-05, 8.690299999999929e-05, 8.643099999999793e-05, 8.720900000000475e-05, 8.701399999999637e-05, 8.673600000000392e-05, 8.669500000000468e-05, 8.680599999999483e-05, 8.663899999999947e-05, 8.727800000000313e-05, 8.633400000000041e-05, 8.641699999999836e-05, 8.676400000000306e-05, 8.709700000000126e-05, 8.682000000000134e-05, 8.727800000000313e-05, 8.71250000000004e-05, 8.633300000000094e-05, 8.655600000000152e-05, 8.683400000000091e-05, 8.654100000000248e-05, 8.677800000000263e-05, 8.647199999999716e-05, 8.709700000000126e-05, 8.727800000000313e-05, 8.64999999999963e-05, 8.644399999999802e-05, 8.655600000000152e-05, 8.698599999999723e-05, 8.725000000000399e-05, 8.674999999999655e-05, 8.708300000000169e-05, 8.631900000000137e-05, 8.729099999999629e-05, 8.702800000000288e-05, 8.67920000000022e-05, 8.656900000000162e-05, 8.676400000000306e-05]</msg>
<status status="PASS" starttime="20201112 12:44:31.154" endtime="20201112 12:44:31.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.142" endtime="20201112 12:44:31.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:31.171" endtime="20201112 12:44:31.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:31.180" endtime="20201112 12:44:31.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.175" endtime="20201112 12:44:31.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.166" endtime="20201112 12:44:31.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.635" endtime="20201112 12:44:31.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.633" endtime="20201112 12:44:31.206"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:31.229" endtime="20201112 12:44:31.250"></status>
</kw>
<msg timestamp="20201112 12:44:31.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:31.226" endtime="20201112 12:44:31.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:31.253" endtime="20201112 12:44:31.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:31.260" endtime="20201112 12:44:31.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.218" endtime="20201112 12:44:31.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.213" endtime="20201112 12:44:31.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:31.284" endtime="20201112 12:44:31.636"></status>
</kw>
<msg timestamp="20201112 12:44:31.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041357569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041445389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:31.280" endtime="20201112 12:44:31.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041357569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041445389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:31.646" endtime="20201112 12:44:31.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:31.665" endtime="20201112 12:44:31.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.273" endtime="20201112 12:44:31.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.268" endtime="20201112 12:44:31.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:31.685" level="INFO">${RESULT} = [{'time': 0.041445389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.782000000000234e-05, 'source_diff': 8.782000000000234e-05}, {'time': 0.041543694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:31.675" endtime="20201112 12:44:31.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:31.716" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:31.687" endtime="20201112 12:44:31.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.727" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 12:44:31.725" endtime="20201112 12:44:31.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.733" level="INFO">VALUE: [8.782000000000234e-05, 8.813800000000149e-05, 8.820899999999882e-05, 8.81670000000001e-05, 8.763900000000047e-05, 8.763900000000047e-05, 8.819499999999925e-05, 8.772299999999789e-05, 8.801300000000484e-05, 8.742999999999945e-05, 8.74869999999972e-05, 8.813900000000097e-05, 8.780600000000277e-05, 8.732000000000184e-05, 8.819499999999925e-05, 8.7944999999999e-05, 8.769499999999875e-05, 8.812499999999446e-05, 8.786100000000158e-05, 8.741599999999988e-05, 8.776399999999712e-05, 8.74999999999973e-05, 8.82920000000037e-05, 8.813900000000097e-05, 8.827799999999719e-05, 8.78050000000033e-05, 8.809700000000226e-05, 8.826399999999762e-05, 8.775000000000449e-05, 8.790300000000029e-05, 8.780599999999583e-05, 8.76669999999996e-05, 8.787500000000115e-05, 8.770799999999884e-05, 8.787500000000115e-05, 8.813900000000097e-05, 8.801400000000431e-05, 8.76250000000009e-05, 8.751400000000381e-05, 8.808400000000216e-05, 8.786099999999464e-05, 8.784699999999507e-05, 8.787499999999421e-05, 8.761100000000133e-05, 8.740300000000673e-05, 8.813900000000097e-05, 8.830600000000327e-05, 8.798700000000464e-05, 8.779199999999626e-05, 8.787500000000115e-05]</msg>
<status status="PASS" starttime="20201112 12:44:31.730" endtime="20201112 12:44:31.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.718" endtime="20201112 12:44:31.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:31.743" endtime="20201112 12:44:31.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:31.751" endtime="20201112 12:44:31.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.747" endtime="20201112 12:44:31.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.738" endtime="20201112 12:44:31.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.208" endtime="20201112 12:44:31.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.207" endtime="20201112 12:44:31.777"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:31.801" endtime="20201112 12:44:31.822"></status>
</kw>
<msg timestamp="20201112 12:44:31.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:31.797" endtime="20201112 12:44:31.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:31.825" endtime="20201112 12:44:31.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:31.831" endtime="20201112 12:44:31.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.790" endtime="20201112 12:44:31.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.784" endtime="20201112 12:44:31.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:31.855" endtime="20201112 12:44:32.206"></status>
</kw>
<msg timestamp="20201112 12:44:32.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041574111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041662639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:31.852" endtime="20201112 12:44:32.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041574111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041662639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:32.216" endtime="20201112 12:44:32.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:32.234" endtime="20201112 12:44:32.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.845" endtime="20201112 12:44:32.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.840" endtime="20201112 12:44:32.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:32.256" level="INFO">${RESULT} = [{'time': 0.041662639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.852800000000438e-05, 'source_diff': 8.852800000000438e-05}, {'time': 0.041761944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:32.247" endtime="20201112 12:44:32.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:32.287" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:32.258" endtime="20201112 12:44:32.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.298" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 12:44:32.295" endtime="20201112 12:44:32.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.303" level="INFO">VALUE: [8.852800000000438e-05, 8.881900000000387e-05, 8.893000000000095e-05, 8.843099999999993e-05, 8.837499999999471e-05, 8.843000000000045e-05, 8.838899999999428e-05, 8.895800000000009e-05, 8.906899999999718e-05, 8.859800000000223e-05, 8.936100000000308e-05, 8.919400000000077e-05, 8.86659999999942e-05, 8.927799999999819e-05, 8.859700000000276e-05, 8.919400000000077e-05, 8.91529999999946e-05, 8.863900000000147e-05, 8.895899999999957e-05, 8.893000000000095e-05, 8.920899999999982e-05, 8.901399999999837e-05, 8.856899999999668e-05, 8.850000000000524e-05, 8.847199999999916e-05, 8.922199999999991e-05, 8.893000000000095e-05, 8.881899999999693e-05, 8.852799999999744e-05, 8.84999999999983e-05, 8.890199999999487e-05, 8.930599999999733e-05, 8.862499999999496e-05, 8.897199999999966e-05, 8.847199999999916e-05, 8.886099999999564e-05, 8.911100000000283e-05, 8.93199999999969e-05, 8.838900000000122e-05, 8.86250000000019e-05, 8.854200000000395e-05, 8.855499999999711e-05, 8.909800000000273e-05, 8.848599999999873e-05, 8.930599999999733e-05, 8.88329999999965e-05, 8.863900000000147e-05, 8.858400000000266e-05, 8.88050000000043e-05, 8.837500000000165e-05]</msg>
<status status="PASS" starttime="20201112 12:44:32.300" endtime="20201112 12:44:32.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.289" endtime="20201112 12:44:32.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:32.313" endtime="20201112 12:44:32.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:32.322" endtime="20201112 12:44:32.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.317" endtime="20201112 12:44:32.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.309" endtime="20201112 12:44:32.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.779" endtime="20201112 12:44:32.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.778" endtime="20201112 12:44:32.348"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:32.371" endtime="20201112 12:44:32.392"></status>
</kw>
<msg timestamp="20201112 12:44:32.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:32.368" endtime="20201112 12:44:32.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:32.396" endtime="20201112 12:44:32.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:32.402" endtime="20201112 12:44:32.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.360" endtime="20201112 12:44:32.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.355" endtime="20201112 12:44:32.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:32.426" endtime="20201112 12:44:32.777"></status>
</kw>
<msg timestamp="20201112 12:44:32.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041431889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041521486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:32.423" endtime="20201112 12:44:32.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041431889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041521486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:32.787" endtime="20201112 12:44:32.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:32.806" endtime="20201112 12:44:32.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.415" endtime="20201112 12:44:32.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.410" endtime="20201112 12:44:32.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:32.826" level="INFO">${RESULT} = [{'time': 0.041521486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.959700000000376e-05, 'source_diff': 8.959700000000376e-05}, {'time': 0.041621708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:32.816" endtime="20201112 12:44:32.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:32.857" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:32.828" endtime="20201112 12:44:32.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.868" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 12:44:32.865" endtime="20201112 12:44:32.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.873" level="INFO">VALUE: [8.959700000000376e-05, 8.984699999999707e-05, 8.974999999999955e-05, 8.969400000000127e-05, 9.025000000000005e-05, 9.01250000000034e-05, 8.938899999999528e-05, 9.031899999999843e-05, 8.961099999999639e-05, 8.940200000000231e-05, 9.026399999999962e-05, 8.948599999999973e-05, 8.99999999999998e-05, 9.017999999999526e-05, 9.029100000000623e-05, 8.995899999999363e-05, 8.961100000000333e-05, 8.954199999999801e-05, 8.990300000000229e-05, 9.01250000000034e-05, 9.01529999999956e-05, 8.962499999999596e-05, 8.938900000000222e-05, 8.976399999999912e-05, 8.993100000000143e-05, 9.013899999999603e-05, 8.947200000000016e-05, 8.998600000000023e-05, 8.943100000000093e-05, 8.976399999999912e-05, 9.0332999999998e-05, 8.988900000000272e-05, 9.012499999999646e-05, 8.966699999999467e-05, 8.973599999999998e-05, 8.954199999999801e-05, 8.944400000000102e-05, 9.01120000000033e-05, 8.963900000000247e-05, 8.94999999999993e-05, 9.008399999999722e-05, 9.03050000000058e-05, 8.987500000000315e-05, 8.965300000000204e-05, 9.020800000000134e-05, 8.968100000000118e-05, 8.990299999999535e-05, 8.988900000000272e-05, 8.952799999999844e-05, 9.013899999999603e-05]</msg>
<status status="PASS" starttime="20201112 12:44:32.870" endtime="20201112 12:44:32.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.859" endtime="20201112 12:44:32.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:32.883" endtime="20201112 12:44:32.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:32.892" endtime="20201112 12:44:32.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.887" endtime="20201112 12:44:32.915"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.878" endtime="20201112 12:44:32.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.350" endtime="20201112 12:44:32.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.349" endtime="20201112 12:44:32.918"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:32.942" endtime="20201112 12:44:32.963"></status>
</kw>
<msg timestamp="20201112 12:44:32.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:32.939" endtime="20201112 12:44:32.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:32.967" endtime="20201112 12:44:32.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:32.973" endtime="20201112 12:44:32.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.931" endtime="20201112 12:44:32.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.925" endtime="20201112 12:44:32.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:32.997" endtime="20201112 12:44:33.347"></status>
</kw>
<msg timestamp="20201112 12:44:33.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042541472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042632542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:32.994" endtime="20201112 12:44:33.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042541472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042632542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:33.357" endtime="20201112 12:44:33.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.376" endtime="20201112 12:44:33.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.986" endtime="20201112 12:44:33.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.981" endtime="20201112 12:44:33.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:33.396" level="INFO">${RESULT} = [{'time': 0.042632542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.107000000000559e-05, 'source_diff': 9.107000000000559e-05}, {'time': 0.042729833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:33.386" endtime="20201112 12:44:33.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:33.427" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:33.398" endtime="20201112 12:44:33.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.438" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 12:44:33.436" endtime="20201112 12:44:33.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.443" level="INFO">VALUE: [9.107000000000559e-05, 9.108299999999875e-05, 9.043100000000193e-05, 9.088900000000372e-05, 9.116600000000363e-05, 9.047300000000064e-05, 9.072200000000141e-05, 9.117999999999626e-05, 9.042999999999551e-05, 9.088899999999678e-05, 9.06670000000026e-05, 9.063899999999653e-05, 9.076400000000012e-05, 9.069499999999481e-05, 9.080499999999936e-05, 9.126400000000062e-05, 9.119400000000277e-05, 9.048600000000073e-05, 9.13199999999989e-05, 9.091699999999592e-05, 9.061099999999739e-05, 9.065300000000304e-05, 9.056999999999815e-05, 9.059699999999782e-05, 9.040300000000279e-05, 9.088900000000372e-05, 9.098600000000123e-05, 9.045800000000159e-05, 9.084699999999807e-05, 9.077799999999969e-05, 9.101400000000037e-05, 9.125000000000105e-05, 9.111099999999789e-05, 9.059699999999782e-05, 9.113899999999703e-05, 9.037500000000365e-05, 9.047200000000116e-05, 9.051399999999987e-05, 9.041700000000236e-05, 9.090200000000381e-05, 9.040300000000279e-05, 9.080499999999936e-05, 9.097200000000166e-05, 9.082000000000534e-05, 9.104199999999951e-05, 9.068100000000218e-05, 9.059699999999782e-05, 9.040200000000331e-05, 9.109800000000473e-05, 9.111100000000483e-05]</msg>
<status status="PASS" starttime="20201112 12:44:33.440" endtime="20201112 12:44:33.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.429" endtime="20201112 12:44:33.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.453" endtime="20201112 12:44:33.456"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:33.462" endtime="20201112 12:44:33.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.457" endtime="20201112 12:44:33.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.448" endtime="20201112 12:44:33.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.920" endtime="20201112 12:44:33.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.919" endtime="20201112 12:44:33.488"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.512" endtime="20201112 12:44:33.533"></status>
</kw>
<msg timestamp="20201112 12:44:33.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:33.508" endtime="20201112 12:44:33.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:33.536" endtime="20201112 12:44:33.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.543" endtime="20201112 12:44:33.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.501" endtime="20201112 12:44:33.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.495" endtime="20201112 12:44:33.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.567" endtime="20201112 12:44:33.923"></status>
</kw>
<msg timestamp="20201112 12:44:33.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042103722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042195917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:33.564" endtime="20201112 12:44:33.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042103722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042195917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:33.933" endtime="20201112 12:44:33.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.952" endtime="20201112 12:44:33.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.556" endtime="20201112 12:44:33.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.551" endtime="20201112 12:44:33.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:33.972" level="INFO">${RESULT} = [{'time': 0.042195917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.219499999999631e-05, 'source_diff': 9.219499999999631e-05}, {'time': 0.042292139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:33.963" endtime="20201112 12:44:33.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:34.003" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:33.974" endtime="20201112 12:44:34.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:34.014" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 12:44:34.012" endtime="20201112 12:44:34.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:34.019" level="INFO">VALUE: [9.219499999999631e-05, 9.172200000000241e-05, 9.184699999999907e-05, 9.158399999999872e-05, 9.169499999999581e-05, 9.198600000000223e-05, 9.236099999999914e-05, 9.161099999999839e-05, 9.187499999999821e-05, 9.212499999999846e-05, 9.233399999999947e-05, 9.172200000000241e-05, 9.226400000000162e-05, 9.202700000000147e-05, 9.145799999999565e-05, 9.20000000000018e-05, 9.227800000000119e-05, 9.144400000000302e-05, 9.190300000000429e-05, 9.163899999999753e-05, 9.190299999999735e-05, 9.166600000000413e-05, 9.20409999999941e-05, 9.176399999999418e-05, 9.140199999999737e-05, 9.199999999999486e-05, 9.21659999999977e-05, 9.198600000000223e-05, 9.191699999999692e-05, 9.236100000000608e-05, 9.201399999999443e-05, 9.211099999999889e-05, 9.20000000000018e-05, 9.143099999999599e-05, 9.219400000000377e-05, 9.16529999999971e-05, 9.170899999999538e-05, 9.229200000000076e-05, 9.141599999999694e-05, 9.174999999999461e-05, 9.222299999999545e-05, 9.173600000000198e-05, 9.17079999999959e-05, 9.179200000000026e-05, 9.204100000000104e-05, 9.175000000000155e-05, 9.234799999999904e-05, 9.193100000000343e-05, 9.151400000000087e-05, 9.208299999999975e-05]</msg>
<status status="PASS" starttime="20201112 12:44:34.016" endtime="20201112 12:44:34.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.005" endtime="20201112 12:44:34.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:34.030" endtime="20201112 12:44:34.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:34.042" endtime="20201112 12:44:34.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.036" endtime="20201112 12:44:34.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.024" endtime="20201112 12:44:34.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.490" endtime="20201112 12:44:34.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.489" endtime="20201112 12:44:34.070"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:34.093" endtime="20201112 12:44:34.115"></status>
</kw>
<msg timestamp="20201112 12:44:34.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:34.089" endtime="20201112 12:44:34.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:34.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:34.119" endtime="20201112 12:44:34.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:34.125" endtime="20201112 12:44:34.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.082" endtime="20201112 12:44:34.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.076" endtime="20201112 12:44:34.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:34.150" endtime="20201112 12:44:34.510"></status>
</kw>
<msg timestamp="20201112 12:44:34.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04139875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041491889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:34.146" endtime="20201112 12:44:34.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:34.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04139875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041491889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:34.520" endtime="20201112 12:44:34.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:34.539" endtime="20201112 12:44:34.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.139" endtime="20201112 12:44:34.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.134" endtime="20201112 12:44:34.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:34.561" level="INFO">${RESULT} = [{'time': 0.041491889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.313899999999903e-05, 'source_diff': 9.313899999999903e-05}, {'time': 0.041591181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:34.551" endtime="20201112 12:44:34.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:34.591" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:34.563" endtime="20201112 12:44:34.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:34.603" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 12:44:34.600" endtime="20201112 12:44:34.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:34.608" level="INFO">VALUE: [9.313899999999903e-05, 9.279200000000126e-05, 9.269499999999681e-05, 9.257000000000015e-05, 9.295900000000357e-05, 9.306900000000118e-05, 9.277800000000169e-05, 9.287499999999921e-05, 9.275000000000255e-05, 9.326400000000262e-05, 9.242999999999751e-05, 9.291699999999792e-05, 9.259799999999929e-05, 9.287499999999921e-05, 9.248600000000273e-05, 9.243100000000393e-05, 9.23199999999999e-05, 9.287499999999921e-05, 9.279200000000126e-05, 9.252800000000144e-05, 9.248600000000273e-05, 9.249999999999536e-05, 9.336100000000014e-05, 9.315199999999912e-05, 9.313899999999903e-05, 9.288899999999878e-05, 9.256900000000068e-05, 9.3333000000001e-05, 9.306900000000118e-05, 9.237500000000565e-05, 9.306900000000118e-05, 9.336100000000014e-05, 9.277800000000169e-05, 9.251400000000187e-05, 9.291699999999792e-05, 9.270900000000332e-05, 9.304100000000204e-05, 9.262499999999896e-05, 9.315300000000554e-05, 9.255600000000058e-05, 9.323600000000348e-05, 9.319400000000477e-05, 9.331999999999396e-05, 9.330600000000133e-05, 9.265199999999862e-05, 9.323600000000348e-05, 9.266699999999767e-05, 9.331900000000143e-05, 9.301400000000237e-05, 9.273600000000298e-05]</msg>
<status status="PASS" starttime="20201112 12:44:34.605" endtime="20201112 12:44:34.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.593" endtime="20201112 12:44:34.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:34.618" endtime="20201112 12:44:34.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:34.626" endtime="20201112 12:44:34.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.622" endtime="20201112 12:44:34.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.613" endtime="20201112 12:44:34.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.072" endtime="20201112 12:44:34.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.071" endtime="20201112 12:44:34.653"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:34.677" endtime="20201112 12:44:34.700"></status>
</kw>
<msg timestamp="20201112 12:44:34.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:34.674" endtime="20201112 12:44:34.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:34.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:34.703" endtime="20201112 12:44:34.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:34.710" endtime="20201112 12:44:34.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.666" endtime="20201112 12:44:34.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.660" endtime="20201112 12:44:34.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:34.735" endtime="20201112 12:44:35.094"></status>
</kw>
<msg timestamp="20201112 12:44:35.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042472611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042566014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:34.731" endtime="20201112 12:44:35.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042472611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042566014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:35.103" endtime="20201112 12:44:35.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.123" endtime="20201112 12:44:35.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.724" endtime="20201112 12:44:35.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.719" endtime="20201112 12:44:35.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:35.142" level="INFO">${RESULT} = [{'time': 0.042566014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.340299999999885e-05, 'source_diff': 9.340299999999885e-05}, {'time': 0.042669333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:35.133" endtime="20201112 12:44:35.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:35.173" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:35.144" endtime="20201112 12:44:35.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.184" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 12:44:35.182" endtime="20201112 12:44:35.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.190" level="INFO">VALUE: [9.340299999999885e-05, 9.356899999999474e-05, 9.369499999999781e-05, 9.3333000000001e-05, 9.411100000000089e-05, 9.422200000000491e-05, 9.337499999999971e-05, 9.358299999999431e-05, 9.352800000000244e-05, 9.361100000000039e-05, 9.408300000000175e-05, 9.362499999999996e-05, 9.416699999999917e-05, 9.336100000000014e-05, 9.363899999999953e-05, 9.377699999999628e-05, 9.404199999999557e-05, 9.423600000000448e-05, 9.35279999999955e-05, 9.375000000000355e-05, 9.354200000000201e-05, 9.379200000000226e-05, 9.379199999999532e-05, 9.33200000000009e-05, 9.376400000000312e-05, 9.391599999999944e-05, 9.388899999999978e-05, 9.36659999999992e-05, 9.359800000000029e-05, 9.427800000000319e-05, 9.404199999999557e-05, 9.42079999999984e-05, 9.338899999999928e-05, 9.405600000000208e-05, 9.373599999999704e-05, 9.358300000000125e-05, 9.375000000000355e-05, 9.351399999999593e-05, 9.36659999999992e-05, 9.430600000000233e-05, 9.344400000000502e-05, 9.344499999999756e-05, 9.345800000000459e-05, 9.367999999999876e-05, 9.388899999999978e-05, 9.380499999999542e-05, 9.351400000000287e-05, 9.39859999999973e-05, 9.340299999999885e-05, 9.36800000000057e-05]</msg>
<status status="PASS" starttime="20201112 12:44:35.186" endtime="20201112 12:44:35.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.175" endtime="20201112 12:44:35.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.200" endtime="20201112 12:44:35.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:35.208" endtime="20201112 12:44:35.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.204" endtime="20201112 12:44:35.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.195" endtime="20201112 12:44:35.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.655" endtime="20201112 12:44:35.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:34.654" endtime="20201112 12:44:35.234"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.258" endtime="20201112 12:44:35.279"></status>
</kw>
<msg timestamp="20201112 12:44:35.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:35.254" endtime="20201112 12:44:35.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:35.283" endtime="20201112 12:44:35.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.289" endtime="20201112 12:44:35.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.247" endtime="20201112 12:44:35.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.241" endtime="20201112 12:44:35.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.313" endtime="20201112 12:44:35.664"></status>
</kw>
<msg timestamp="20201112 12:44:35.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041762639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041857, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:35.310" endtime="20201112 12:44:35.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041762639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041857, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:35.673" endtime="20201112 12:44:35.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.693" endtime="20201112 12:44:35.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.302" endtime="20201112 12:44:35.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.297" endtime="20201112 12:44:35.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:35.712" level="INFO">${RESULT} = [{'time': 0.041857, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.436100000000114e-05, 'source_diff': 9.436100000000114e-05}, {'time': 0.041960333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:44:35.703" endtime="20201112 12:44:35.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:35.743" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:35.714" endtime="20201112 12:44:35.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.755" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 12:44:35.752" endtime="20201112 12:44:35.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.761" level="INFO">VALUE: [9.436100000000114e-05, 9.444399999999908e-05, 9.480500000000336e-05, 9.454199999999607e-05, 9.462500000000096e-05, 9.508300000000275e-05, 9.524999999999811e-05, 9.472300000000489e-05, 9.47079999999989e-05, 9.449999999999736e-05, 9.509700000000232e-05, 9.511099999999495e-05, 9.455499999999617e-05, 9.495799999999915e-05, 9.441699999999942e-05, 9.477700000000422e-05, 9.501400000000437e-05, 9.531899999999649e-05, 9.463900000000053e-05, 9.466699999999967e-05, 9.474999999999761e-05, 9.52079999999994e-05, 9.50409999999971e-05, 9.473599999999804e-05, 9.477799999999675e-05, 9.458300000000225e-05, 9.468099999999924e-05, 9.46660000000002e-05, 9.512500000000146e-05, 9.456900000000268e-05, 9.455599999999564e-05, 9.494399999999958e-05, 9.502800000000394e-05, 9.487500000000121e-05, 9.456900000000268e-05, 9.477799999999675e-05, 9.488900000000078e-05, 9.447199999999822e-05, 9.523700000000496e-05, 9.456900000000268e-05, 9.48200000000024e-05, 9.48330000000025e-05, 9.440299999999985e-05, 9.486100000000164e-05, 9.466699999999967e-05, 9.523599999999854e-05, 9.441599999999994e-05, 9.527799999999725e-05, 9.46530000000001e-05, 9.537500000000171e-05]</msg>
<status status="PASS" starttime="20201112 12:44:35.757" endtime="20201112 12:44:35.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.745" endtime="20201112 12:44:35.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.771" endtime="20201112 12:44:35.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:35.780" endtime="20201112 12:44:35.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.776" endtime="20201112 12:44:35.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.766" endtime="20201112 12:44:35.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.237" endtime="20201112 12:44:35.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.235" endtime="20201112 12:44:35.807"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.830" endtime="20201112 12:44:35.851"></status>
</kw>
<msg timestamp="20201112 12:44:35.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:35.826" endtime="20201112 12:44:35.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:35.854" endtime="20201112 12:44:35.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.861" endtime="20201112 12:44:35.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.819" endtime="20201112 12:44:35.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.813" endtime="20201112 12:44:35.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.885" endtime="20201112 12:44:36.235"></status>
</kw>
<msg timestamp="20201112 12:44:36.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041567611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041663667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:35.882" endtime="20201112 12:44:36.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041567611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041663667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:36.244" endtime="20201112 12:44:36.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.263" endtime="20201112 12:44:36.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.875" endtime="20201112 12:44:36.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.869" endtime="20201112 12:44:36.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:36.283" level="INFO">${RESULT} = [{'time': 0.041663667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.605600000000408e-05, 'source_diff': 9.605600000000408e-05}, {'time': 0.04177, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201112 12:44:36.274" endtime="20201112 12:44:36.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:36.314" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:36.285" endtime="20201112 12:44:36.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.325" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 12:44:36.323" endtime="20201112 12:44:36.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.331" level="INFO">VALUE: [9.605600000000408e-05, 9.543099999999999e-05, 9.623599999999954e-05, 9.579199999999732e-05, 9.611099999999595e-05, 9.566700000000067e-05, 9.587500000000221e-05, 9.631899999999749e-05, 9.529099999999735e-05, 9.577799999999775e-05, 9.563900000000153e-05, 9.595899999999963e-05, 9.622199999999997e-05, 9.556900000000368e-05, 9.561199999999492e-05, 9.570899999999938e-05, 9.577799999999775e-05, 9.541600000000094e-05, 9.569499999999981e-05, 9.577799999999775e-05, 9.606999999999671e-05, 9.597199999999972e-05, 9.563900000000153e-05, 9.54729999999987e-05, 9.544400000000008e-05, 9.606999999999671e-05, 9.613900000000203e-05, 9.534700000000257e-05, 9.629200000000476e-05, 9.581899999999699e-05, 9.611100000000289e-05, 9.587500000000221e-05, 9.626399999999868e-05, 9.551399999999793e-05, 9.626300000000615e-05, 9.627800000000519e-05, 9.57079999999999e-05, 9.549999999999836e-05, 9.618000000000126e-05, 9.623599999999954e-05, 9.590200000000187e-05, 9.634700000000357e-05, 9.597199999999972e-05, 9.563900000000153e-05, 9.605500000000461e-05, 9.563900000000153e-05, 9.626399999999868e-05, 9.554199999999707e-05, 9.6027999999998e-05, 9.551399999999793e-05]</msg>
<status status="PASS" starttime="20201112 12:44:36.328" endtime="20201112 12:44:36.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.316" endtime="20201112 12:44:36.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.345" endtime="20201112 12:44:36.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:36.354" endtime="20201112 12:44:36.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.349" endtime="20201112 12:44:36.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.341" endtime="20201112 12:44:36.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.809" endtime="20201112 12:44:36.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.808" endtime="20201112 12:44:36.380"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.403" endtime="20201112 12:44:36.425"></status>
</kw>
<msg timestamp="20201112 12:44:36.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:36.400" endtime="20201112 12:44:36.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:36.428" endtime="20201112 12:44:36.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.434" endtime="20201112 12:44:36.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.393" endtime="20201112 12:44:36.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.387" endtime="20201112 12:44:36.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.458" endtime="20201112 12:44:36.807"></status>
</kw>
<msg timestamp="20201112 12:44:36.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041463389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041560306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:36.455" endtime="20201112 12:44:36.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041463389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041560306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:36.817" endtime="20201112 12:44:36.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.836" endtime="20201112 12:44:36.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.448" endtime="20201112 12:44:36.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.443" endtime="20201112 12:44:36.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:36.857" level="INFO">${RESULT} = [{'time': 0.041560306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.691699999999498e-05, 'source_diff': 9.691699999999498e-05}, {'time': 0.041667611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:36.848" endtime="20201112 12:44:36.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:36.888" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:36.860" endtime="20201112 12:44:36.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.900" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 12:44:36.897" endtime="20201112 12:44:36.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.905" level="INFO">VALUE: [9.691699999999498e-05, 9.651399999999893e-05, 9.640300000000185e-05, 9.720899999999394e-05, 9.66660000000022e-05, 9.736100000000414e-05, 9.72080000000014e-05, 9.711099999999695e-05, 9.684700000000407e-05, 9.679199999999832e-05, 9.645800000000065e-05, 9.737499999999677e-05, 9.687499999999627e-05, 9.656999999999721e-05, 9.71530000000026e-05, 9.670900000000038e-05, 9.699999999999986e-05, 9.708299999999781e-05, 9.631999999999696e-05, 9.680499999999842e-05, 9.706999999999771e-05, 9.701399999999943e-05, 9.672200000000047e-05, 9.655500000000511e-05, 9.725000000000011e-05, 9.713900000000303e-05, 9.665200000000262e-05, 9.657000000000415e-05, 9.699999999999986e-05, 9.731899999999849e-05, 9.643100000000099e-05, 9.651400000000587e-05, 9.64859999999998e-05, 9.690299999999541e-05, 9.647300000000664e-05, 9.705500000000561e-05, 9.73479999999971e-05, 9.649999999999936e-05, 9.713799999999662e-05, 9.656899999999774e-05, 9.677699999999928e-05, 9.706900000000518e-05, 9.681899999999799e-05, 9.720900000000088e-05, 9.672200000000047e-05, 9.693100000000149e-05, 9.683299999999756e-05, 9.738900000000328e-05, 9.647200000000022e-05, 9.656999999999721e-05]</msg>
<status status="PASS" starttime="20201112 12:44:36.902" endtime="20201112 12:44:36.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.890" endtime="20201112 12:44:36.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.915" endtime="20201112 12:44:36.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:36.923" endtime="20201112 12:44:36.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.919" endtime="20201112 12:44:36.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.910" endtime="20201112 12:44:36.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.382" endtime="20201112 12:44:36.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.381" endtime="20201112 12:44:36.949"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.972" endtime="20201112 12:44:36.994"></status>
</kw>
<msg timestamp="20201112 12:44:36.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:36.969" endtime="20201112 12:44:36.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:36.997" endtime="20201112 12:44:37.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:37.004" endtime="20201112 12:44:37.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.962" endtime="20201112 12:44:37.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.956" endtime="20201112 12:44:37.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:37.028" endtime="20201112 12:44:37.378"></status>
</kw>
<msg timestamp="20201112 12:44:37.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041285778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041383847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:37.024" endtime="20201112 12:44:37.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041285778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041383847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:37.387" endtime="20201112 12:44:37.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:37.407" endtime="20201112 12:44:37.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.017" endtime="20201112 12:44:37.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.012" endtime="20201112 12:44:37.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:37.426" level="INFO">${RESULT} = [{'time': 0.041383847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.806899999999924e-05, 'source_diff': 9.806899999999924e-05}, {'time': 0.041490097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:37.417" endtime="20201112 12:44:37.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:37.457" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:37.428" endtime="20201112 12:44:37.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.469" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 12:44:37.466" endtime="20201112 12:44:37.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.474" level="INFO">VALUE: [9.806899999999924e-05, 9.737499999999677e-05, 9.734699999999763e-05, 9.747200000000122e-05, 9.805499999999967e-05, 9.811099999999795e-05, 9.830600000000633e-05, 9.755600000000558e-05, 9.788900000000378e-05, 9.809699999999838e-05, 9.743000000000251e-05, 9.756999999999821e-05, 9.786199999999717e-05, 9.775000000000061e-05, 9.838899999999734e-05, 9.790299999999641e-05, 9.773600000000104e-05, 9.78059999999989e-05, 9.779199999999932e-05, 9.795800000000215e-05, 9.741700000000242e-05, 9.797200000000172e-05, 9.790299999999641e-05, 9.763900000000353e-05, 9.75279999999995e-05, 9.813800000000455e-05, 9.794499999999512e-05, 9.781899999999899e-05, 9.786100000000464e-05, 9.768100000000224e-05, 9.723600000000054e-05, 9.738900000000328e-05, 9.770900000000138e-05, 9.779099999999985e-05, 9.805599999999914e-05, 9.809699999999838e-05, 9.755499999999917e-05, 9.836100000000514e-05, 9.812499999999752e-05, 9.823700000000102e-05, 9.723600000000054e-05, 9.8028e-05, 9.798700000000077e-05, 9.740300000000285e-05, 9.723600000000054e-05, 9.747199999999429e-05, 9.763899999999659e-05, 9.751399999999993e-05, 9.779199999999932e-05, 9.772200000000147e-05]</msg>
<status status="PASS" starttime="20201112 12:44:37.471" endtime="20201112 12:44:37.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.459" endtime="20201112 12:44:37.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:37.484" endtime="20201112 12:44:37.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:37.492" endtime="20201112 12:44:37.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.488" endtime="20201112 12:44:37.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.479" endtime="20201112 12:44:37.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.952" endtime="20201112 12:44:37.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.950" endtime="20201112 12:44:37.519"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:37.542" endtime="20201112 12:44:37.563"></status>
</kw>
<msg timestamp="20201112 12:44:37.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:37.538" endtime="20201112 12:44:37.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:37.567" endtime="20201112 12:44:37.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:37.573" endtime="20201112 12:44:37.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.531" endtime="20201112 12:44:37.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.525" endtime="20201112 12:44:37.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:37.597" endtime="20201112 12:44:37.948"></status>
</kw>
<msg timestamp="20201112 12:44:37.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041359278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041457792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:37.593" endtime="20201112 12:44:37.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041359278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041457792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:37.957" endtime="20201112 12:44:37.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:37.976" endtime="20201112 12:44:37.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.586" endtime="20201112 12:44:37.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.581" endtime="20201112 12:44:37.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:37.996" level="INFO">${RESULT} = [{'time': 0.041457792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.851400000000093e-05, 'source_diff': 9.851400000000093e-05}, {'time': 0.041566139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:37.987" endtime="20201112 12:44:37.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:38.027" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:37.998" endtime="20201112 12:44:38.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.039" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 12:44:38.036" endtime="20201112 12:44:38.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.044" level="INFO">VALUE: [9.851400000000093e-05, 9.88059999999999e-05, 9.842999999999658e-05, 9.936100000000614e-05, 9.854200000000007e-05, 9.922200000000297e-05, 9.890199999999794e-05, 9.933300000000006e-05, 9.87080000000029e-05, 9.899999999999493e-05, 9.883399999999903e-05, 9.897199999999579e-05, 9.872200000000247e-05, 9.85280000000005e-05, 9.895900000000263e-05, 9.843099999999605e-05, 9.93609999999992e-05, 9.901400000000143e-05, 9.852700000000103e-05, 9.887499999999827e-05, 9.917999999999733e-05, 9.829199999999982e-05, 9.922199999999604e-05, 9.926399999999475e-05, 9.904099999999416e-05, 9.927800000000125e-05, 9.88479999999986e-05, 9.879200000000032e-05, 9.877700000000128e-05, 9.905499999999373e-05, 9.851299999999452e-05, 9.905600000000014e-05, 9.855599999999964e-05, 9.938899999999834e-05, 9.89159999999975e-05, 9.858299999999931e-05, 9.905500000000067e-05, 9.902799999999407e-05, 9.863799999999812e-05, 9.883299999999956e-05, 9.911099999999895e-05, 9.873600000000204e-05, 9.897200000000272e-05, 9.909699999999938e-05, 9.84860000000018e-05, 9.873600000000204e-05, 9.8415999999997e-05, 9.904200000000057e-05, 9.88059999999999e-05, 9.906900000000024e-05]</msg>
<status status="PASS" starttime="20201112 12:44:38.041" endtime="20201112 12:44:38.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.029" endtime="20201112 12:44:38.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.054" endtime="20201112 12:44:38.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:38.063" endtime="20201112 12:44:38.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.058" endtime="20201112 12:44:38.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.049" endtime="20201112 12:44:38.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.521" endtime="20201112 12:44:38.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.520" endtime="20201112 12:44:38.089"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.112" endtime="20201112 12:44:38.133"></status>
</kw>
<msg timestamp="20201112 12:44:38.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:38.109" endtime="20201112 12:44:38.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:38.137" endtime="20201112 12:44:38.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.143" endtime="20201112 12:44:38.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.101" endtime="20201112 12:44:38.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.095" endtime="20201112 12:44:38.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.167" endtime="20201112 12:44:38.517"></status>
</kw>
<msg timestamp="20201112 12:44:38.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041350556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041450181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:38.164" endtime="20201112 12:44:38.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041350556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041450181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:38.526" endtime="20201112 12:44:38.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.545" endtime="20201112 12:44:38.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.156" endtime="20201112 12:44:38.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.152" endtime="20201112 12:44:38.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:38.565" level="INFO">${RESULT} = [{'time': 0.041450181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.962500000000596e-05, 'source_diff': 9.962500000000596e-05}, {'time': 0.041557667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:38.556" endtime="20201112 12:44:38.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:38.596" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:38.567" endtime="20201112 12:44:38.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.607" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 12:44:38.604" endtime="20201112 12:44:38.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.612" level="INFO">VALUE: [9.962500000000596e-05, 0.00010013899999999909, 9.98609999999997e-05, 9.966700000000467e-05, 0.00010034700000000063, 0.00010027799999999532, 9.95280000000015e-05, 0.00010009799999999985, 0.0001003060000000014, 9.954200000000107e-05, 9.981900000000099e-05, 9.963899999999859e-05, 9.99159999999985e-05, 9.954200000000107e-05, 0.00010001400000000243, 9.973600000000304e-05, 9.968000000000476e-05, 9.954200000000107e-05, 9.955500000000117e-05, 9.984700000000013e-05, 9.942999999999758e-05, 9.947299999999576e-05, 9.941700000000442e-05, 9.966699999999773e-05, 0.0001002359999999966, 0.00010018100000000474, 9.945900000000313e-05, 0.00010006999999999378, 9.962499999999902e-05, 9.999999999999593e-05, 0.00010015299999999866, 9.931999999999996e-05, 9.994399999999765e-05, 9.988899999999884e-05, 0.00010002700000000253, 9.979200000000132e-05, 9.994500000000406e-05, 9.947199999999629e-05, 9.98609999999997e-05, 0.00010029200000000182, 0.00010007000000000071, 9.992999999999808e-05, 0.00010033400000000053, 9.962499999999902e-05, 9.965299999999816e-05, 9.983400000000003e-05, 9.972200000000347e-05, 9.957000000000021e-05, 9.957000000000021e-05, 9.994399999999765e-05]</msg>
<status status="PASS" starttime="20201112 12:44:38.609" endtime="20201112 12:44:38.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.597" endtime="20201112 12:44:38.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.622" endtime="20201112 12:44:38.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:38.631" endtime="20201112 12:44:38.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.626" endtime="20201112 12:44:38.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.617" endtime="20201112 12:44:38.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.091" endtime="20201112 12:44:38.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.090" endtime="20201112 12:44:38.657"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.680" endtime="20201112 12:44:38.702"></status>
</kw>
<msg timestamp="20201112 12:44:38.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:38.677" endtime="20201112 12:44:38.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:38.705" endtime="20201112 12:44:38.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.711" endtime="20201112 12:44:38.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.669" endtime="20201112 12:44:38.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.663" endtime="20201112 12:44:38.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.735" endtime="20201112 12:44:39.087"></status>
</kw>
<msg timestamp="20201112 12:44:39.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041466194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041567347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:38.732" endtime="20201112 12:44:39.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041466194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041567347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:39.096" endtime="20201112 12:44:39.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:39.114" endtime="20201112 12:44:39.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.724" endtime="20201112 12:44:39.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.720" endtime="20201112 12:44:39.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:39.136" level="INFO">${RESULT} = [{'time': 0.041567347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010115299999999966, 'source_diff': 0.00010115299999999966}, {'time': 0.041676722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:39.127" endtime="20201112 12:44:39.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:39.166" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:39.138" endtime="20201112 12:44:39.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.177" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 12:44:39.175" endtime="20201112 12:44:39.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.183" level="INFO">VALUE: [0.00010115299999999966, 0.00010088899999999984, 0.0001009860000000043, 0.00010113900000000009, 0.00010055600000000164, 0.00010099999999999693, 0.00010044499999999762, 0.00010131900000000249, 0.00010109699999999444, 0.00010122199999999804, 0.00010087500000000027, 0.00010061100000000045, 0.0001005280000000025, 0.00010074999999999668, 0.00010056900000000174, 0.00010111100000000095, 0.00010108300000000181, 0.00010045799999999772, 0.00010080500000000242, 0.0001006809999999983, 0.00010070799999999797, 0.00010111200000000042, 0.00010063899999999959, 0.00010090299999999941, 0.00010073600000000404, 0.00010077699999999634, 0.00010083300000000156, 0.00010133299999999512, 0.00010038799999999987, 0.0001006939999999984, 0.0001007080000000049, 0.00010034700000000063, 0.00010074999999999668, 0.0001007080000000049, 0.00010048599999999686, 0.00010037499999999977, 0.00010082000000000146, 0.00010104200000000257, 0.00010058300000000131, 0.00010091699999999898, 0.00010069500000000481, 0.00010054199999999514, 0.00010054199999999514, 0.00010080500000000242, 0.00010077799999999582, 0.0001013339999999946, 0.00010116599999999976, 0.0001003480000000001, 0.00010027799999999532, 0.00010106900000000224]</msg>
<status status="PASS" starttime="20201112 12:44:39.180" endtime="20201112 12:44:39.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.168" endtime="20201112 12:44:39.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:39.192" endtime="20201112 12:44:39.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:39.201" endtime="20201112 12:44:39.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.196" endtime="20201112 12:44:39.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.188" endtime="20201112 12:44:39.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.659" endtime="20201112 12:44:39.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.658" endtime="20201112 12:44:39.227"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:39.251" endtime="20201112 12:44:39.272"></status>
</kw>
<msg timestamp="20201112 12:44:39.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:39.247" endtime="20201112 12:44:39.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:39.276" endtime="20201112 12:44:39.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:39.282" endtime="20201112 12:44:39.286"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.240" endtime="20201112 12:44:39.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.234" endtime="20201112 12:44:39.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:39.306" endtime="20201112 12:44:39.657"></status>
</kw>
<msg timestamp="20201112 12:44:39.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041527972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041629917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:39.302" endtime="20201112 12:44:39.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041527972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041629917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:39.667" endtime="20201112 12:44:39.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:39.685" endtime="20201112 12:44:39.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.295" endtime="20201112 12:44:39.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.290" endtime="20201112 12:44:39.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:39.704" level="INFO">${RESULT} = [{'time': 0.041629917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010194499999999912, 'source_diff': 0.00010194499999999912}, {'time': 0.041738222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:39.695" endtime="20201112 12:44:39.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:39.735" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:39.706" endtime="20201112 12:44:39.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.749" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 12:44:39.747" endtime="20201112 12:44:39.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.755" level="INFO">VALUE: [0.00010194499999999912, 0.00010179099999999691, 0.00010133300000000206, 0.00010165300000000016, 0.000101513999999997, 0.0001023060000000034, 0.00010157000000000221, 0.0001018610000000017, 0.00010151400000000393, 0.00010173600000000504, 0.00010173699999999758, 0.00010194499999999912, 0.00010179199999999639, 0.00010155600000000264, 0.000101416, 0.00010225000000000511, 0.00010158300000000231, 0.00010165300000000016, 0.0001015559999999957, 0.00010148700000000427, 0.00010220799999999947, 0.0001019160000000005, 0.0001013480000000011, 0.00010148599999999786, 0.00010158299999999537, 0.0001020139999999975, 0.00010165200000000069, 0.00010205500000000367, 0.00010133300000000206, 0.0001020559999999962, 0.00010190300000000041, 0.00010147200000000522, 0.0001018060000000029, 0.00010179099999999691, 0.0001016939999999994, 0.00010176399999999725, 0.00010152799999999657, 0.00010141699999999948, 0.0001013060000000024, 0.00010147299999999776, 0.0001018339999999951, 0.00010144499999999862, 0.000101416, 0.00010161099999999451, 0.00010172199999999854, 0.00010126399999999675, 0.000101416, 0.00010195899999999869, 0.00010143099999999905, 0.00010194499999999912]</msg>
<status status="PASS" starttime="20201112 12:44:39.752" endtime="20201112 12:44:39.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.736" endtime="20201112 12:44:39.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:39.764" endtime="20201112 12:44:39.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:39.773" endtime="20201112 12:44:39.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.769" endtime="20201112 12:44:39.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.760" endtime="20201112 12:44:39.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.229" endtime="20201112 12:44:39.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.228" endtime="20201112 12:44:39.799"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:39.823" endtime="20201112 12:44:39.844"></status>
</kw>
<msg timestamp="20201112 12:44:39.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:39.819" endtime="20201112 12:44:39.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:39.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:39.848" endtime="20201112 12:44:39.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:39.854" endtime="20201112 12:44:39.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.812" endtime="20201112 12:44:39.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.806" endtime="20201112 12:44:39.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:39.879" endtime="20201112 12:44:40.232"></status>
</kw>
<msg timestamp="20201112 12:44:40.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041538514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041641264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:39.875" endtime="20201112 12:44:40.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041538514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041641264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:40.242" endtime="20201112 12:44:40.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.260" endtime="20201112 12:44:40.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.867" endtime="20201112 12:44:40.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.863" endtime="20201112 12:44:40.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:40.280" level="INFO">${RESULT} = [{'time': 0.041641264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010274999999999868, 'source_diff': 0.00010274999999999868}, {'time': 0.041753611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:40.271" endtime="20201112 12:44:40.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:40.310" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:40.282" endtime="20201112 12:44:40.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.321" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 12:44:40.319" endtime="20201112 12:44:40.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.327" level="INFO">VALUE: [0.00010274999999999868, 0.00010320800000000047, 0.00010272199999999954, 0.000102513999999998, 0.00010283300000000356, 0.00010258299999999637, 0.00010245799999999972, 0.00010259699999999594, 0.00010276399999999825, 0.00010284799999999567, 0.00010320800000000047, 0.00010284699999999619, 0.00010299999999999893, 0.00010254199999999714, 0.00010248599999999886, 0.00010313900000000209, 0.00010286099999999576, 0.00010241599999999407, 0.00010256900000000374, 0.00010244400000000015, 0.00010294500000000012, 0.00010234699999999569, 0.00010274999999999868, 0.00010279199999999739, 0.00010232000000000296, 0.00010280500000000442, 0.00010247299999999876, 0.00010241700000000048, 0.00010268000000000083, 0.00010311099999999601, 0.00010306900000000424, 0.00010240300000000091, 0.00010281899999999705, 0.00010299999999999893, 0.0001025559999999967, 0.00010284699999999619, 0.00010322200000000004, 0.00010322200000000004, 0.00010284700000000313, 0.00010247199999999929, 0.00010243100000000005, 0.0001032359999999996, 0.00010252700000000503, 0.00010304199999999764, 0.00010243000000000058, 0.00010229200000000382, 0.00010270799999999997, 0.00010255499999999723, 0.00010316700000000123, 0.00010299999999999893]</msg>
<status status="PASS" starttime="20201112 12:44:40.324" endtime="20201112 12:44:40.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.312" endtime="20201112 12:44:40.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.336" endtime="20201112 12:44:40.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:40.345" endtime="20201112 12:44:40.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.341" endtime="20201112 12:44:40.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.332" endtime="20201112 12:44:40.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.802" endtime="20201112 12:44:40.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:39.800" endtime="20201112 12:44:40.371"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.394" endtime="20201112 12:44:40.416"></status>
</kw>
<msg timestamp="20201112 12:44:40.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:40.391" endtime="20201112 12:44:40.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:40.420" endtime="20201112 12:44:40.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.426" endtime="20201112 12:44:40.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.384" endtime="20201112 12:44:40.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.378" endtime="20201112 12:44:40.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.450" endtime="20201112 12:44:40.801"></status>
</kw>
<msg timestamp="20201112 12:44:40.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041568986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041672903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:40.446" endtime="20201112 12:44:40.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041568986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041672903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:40.811" endtime="20201112 12:44:40.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.829" endtime="20201112 12:44:40.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.439" endtime="20201112 12:44:40.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.434" endtime="20201112 12:44:40.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:40.849" level="INFO">${RESULT} = [{'time': 0.041672903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010391699999999504, 'source_diff': 0.00010391699999999504}, {'time': 0.041787194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:40.840" endtime="20201112 12:44:40.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:40.879" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:40.851" endtime="20201112 12:44:40.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.890" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 12:44:40.888" endtime="20201112 12:44:40.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.896" level="INFO">VALUE: [0.00010391699999999504, 0.00010370800000000097, 0.00010358399999999685, 0.00010333299999999712, 0.00010394500000000112, 0.00010391599999999557, 0.00010398699999999983, 0.00010404199999999864, 0.00010380499999999848, 0.00010372200000000054, 0.00010387499999999633, 0.0001033889999999954, 0.00010416699999999529, 0.00010394400000000165, 0.00010430499999999898, 0.0001038610000000037, 0.00010408299999999787, 0.00010374999999999968, 0.00010384700000000413, 0.00010398600000000036, 0.00010333299999999712, 0.00010340200000000244, 0.0001042360000000006, 0.000103513999999999, 0.00010333300000000406, 0.00010331899999999755, 0.0001040139999999995, 0.00010357000000000421, 0.000103416000000002, 0.00010366700000000173, 0.00010348599999999986, 0.00010337500000000277, 0.00010344400000000115, 0.00010409800000000385, 0.00010394399999999471, 0.00010411100000000395, 0.00010434700000000463, 0.00010419499999999443, 0.00010366700000000173, 0.00010395800000000122, 0.00010331899999999755, 0.00010395900000000069, 0.0001040559999999982, 0.00010404099999999916, 0.00010413900000000309, 0.00010366699999999479, 0.00010398600000000036, 0.00010417999999999539, 0.00010423700000000008, 0.00010381999999999753]</msg>
<status status="PASS" starttime="20201112 12:44:40.893" endtime="20201112 12:44:40.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.881" endtime="20201112 12:44:40.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.905" endtime="20201112 12:44:40.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:40.915" endtime="20201112 12:44:40.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.910" endtime="20201112 12:44:40.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.901" endtime="20201112 12:44:40.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.373" endtime="20201112 12:44:40.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.372" endtime="20201112 12:44:40.942"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.965" endtime="20201112 12:44:40.987"></status>
</kw>
<msg timestamp="20201112 12:44:40.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:40.961" endtime="20201112 12:44:40.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:40.990" endtime="20201112 12:44:40.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.996" endtime="20201112 12:44:41.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.954" endtime="20201112 12:44:41.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.948" endtime="20201112 12:44:41.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:41.021" endtime="20201112 12:44:41.371"></status>
</kw>
<msg timestamp="20201112 12:44:41.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042148542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042252875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:41.017" endtime="20201112 12:44:41.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042148542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042252875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:41.381" endtime="20201112 12:44:41.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:41.399" endtime="20201112 12:44:41.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.010" endtime="20201112 12:44:41.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.005" endtime="20201112 12:44:41.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:41.420" level="INFO">${RESULT} = [{'time': 0.042252875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010433300000000506, 'source_diff': 0.00010433300000000506}, {'time': 0.042368222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:41.412" endtime="20201112 12:44:41.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:41.451" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:41.422" endtime="20201112 12:44:41.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.462" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 12:44:41.459" endtime="20201112 12:44:41.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.467" level="INFO">VALUE: [0.00010433300000000506, 0.00010434699999999769, 0.00010495800000000222, 0.00010497199999999485, 0.00010498600000000136, 0.0001050140000000005, 0.00010526400000000075, 0.00010479199999999939, 0.00010526400000000075, 0.00010476400000000025, 0.00010480599999999896, 0.00010505499999999973, 0.00010443100000000205, 0.00010456900000000574, 0.00010479199999999939, 0.00010500000000000093, 0.00010443100000000205, 0.00010434699999999769, 0.0001048889999999969, 0.00010512499999999758, 0.00010481999999999853, 0.00010441699999999554, 0.00010450000000000043, 0.00010440300000000291, 0.00010515199999999725, 0.00010484699999999819, 0.00010454199999999914, 0.00010484699999999819, 0.0001050689999999993, 0.00010444500000000162, 0.00010486099999999776, 0.00010517999999999639, 0.00010465199999999675, 0.0001051940000000029, 0.00010470900000000144, 0.0001051940000000029, 0.00010493099999999561, 0.00010505500000000667, 0.00010470800000000197, 0.0001050140000000005, 0.00010511100000000495, 0.00010520800000000247, 0.00010461199999999699, 0.0001046810000000023, 0.00010455500000000617, 0.00010459699999999794, 0.00010477799999999982, 0.00010448699999999339, 0.00010437500000000377, 0.00010484799999999767]</msg>
<status status="PASS" starttime="20201112 12:44:41.464" endtime="20201112 12:44:41.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.452" endtime="20201112 12:44:41.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:41.482" endtime="20201112 12:44:41.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:41.490" endtime="20201112 12:44:41.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.486" endtime="20201112 12:44:41.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.477" endtime="20201112 12:44:41.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.944" endtime="20201112 12:44:41.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.942" endtime="20201112 12:44:41.517"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:41.540" endtime="20201112 12:44:41.562"></status>
</kw>
<msg timestamp="20201112 12:44:41.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:41.536" endtime="20201112 12:44:41.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:41.565" endtime="20201112 12:44:41.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:41.572" endtime="20201112 12:44:41.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.529" endtime="20201112 12:44:41.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.523" endtime="20201112 12:44:41.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:41.596" endtime="20201112 12:44:41.949"></status>
</kw>
<msg timestamp="20201112 12:44:41.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041289208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041395042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:41.592" endtime="20201112 12:44:41.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041289208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041395042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:41.959" endtime="20201112 12:44:41.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:41.978" endtime="20201112 12:44:41.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.585" endtime="20201112 12:44:41.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.580" endtime="20201112 12:44:41.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:41.997" level="INFO">${RESULT} = [{'time': 0.041395042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001058339999999991, 'source_diff': 0.0001058339999999991}, {'time': 0.041510333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:41.988" endtime="20201112 12:44:41.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:42.028" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:41.999" endtime="20201112 12:44:42.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.039" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 12:44:42.037" endtime="20201112 12:44:42.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.044" level="INFO">VALUE: [0.0001058339999999991, 0.0001061940000000039, 0.00010612499999999858, 0.00010594499999999618, 0.00010567999999999689, 0.00010576400000000125, 0.0001053889999999974, 0.00010606999999999978, 0.00010572200000000254, 0.0001062360000000026, 0.00010559799999999842, 0.00010594399999999671, 0.0001057360000000021, 0.00010541699999999654, 0.00010599999999999499, 0.000105901999999998, 0.00010618000000000433, 0.00010613800000000562, 0.00010572200000000254, 0.00010566599999999732, 0.00010580599999999996, 0.00010604200000000064, 0.00010533400000000553, 0.00010556999999999928, 0.0001056940000000034, 0.00010562500000000502, 0.00010554200000000014, 0.00010543099999999611, 0.00010627799999999438, 0.00010562499999999808, 0.00010558299999999937, 0.00010541599999999707, 0.00010615300000000466, 0.000105514000000001, 0.00010612499999999858, 0.00010570900000000244, 0.00010530599999999946, 0.00010536099999999826, 0.00010537499999999783, 0.00010576400000000125, 0.0001057360000000021, 0.0001060690000000003, 0.00010602800000000107, 0.0001060419999999937, 0.0001059160000000045, 0.00010598599999999542, 0.00010593100000000355, 0.00010588900000000484, 0.00010611099999999901, 0.0001055689999999998]</msg>
<status status="PASS" starttime="20201112 12:44:42.041" endtime="20201112 12:44:42.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.030" endtime="20201112 12:44:42.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.054" endtime="20201112 12:44:42.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:42.063" endtime="20201112 12:44:42.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.058" endtime="20201112 12:44:42.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.050" endtime="20201112 12:44:42.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.519" endtime="20201112 12:44:42.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.518" endtime="20201112 12:44:42.089"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.112" endtime="20201112 12:44:42.134"></status>
</kw>
<msg timestamp="20201112 12:44:42.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:42.109" endtime="20201112 12:44:42.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:42.137" endtime="20201112 12:44:42.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.144" endtime="20201112 12:44:42.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.101" endtime="20201112 12:44:42.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.095" endtime="20201112 12:44:42.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.168" endtime="20201112 12:44:42.531"></status>
</kw>
<msg timestamp="20201112 12:44:42.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041379333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041486639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:42.164" endtime="20201112 12:44:42.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041379333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041486639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:42.540" endtime="20201112 12:44:42.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.558" endtime="20201112 12:44:42.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.157" endtime="20201112 12:44:42.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.152" endtime="20201112 12:44:42.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:42.577" level="INFO">${RESULT} = [{'time': 0.041486639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010730600000000146, 'source_diff': 0.00010730600000000146}, {'time': 0.041597903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:42.569" endtime="20201112 12:44:42.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:42.608" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:42.580" endtime="20201112 12:44:42.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.619" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 12:44:42.617" endtime="20201112 12:44:42.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.625" level="INFO">VALUE: [0.00010730600000000146, 0.00010648599999999592, 0.00010736100000000026, 0.0001066940000000044, 0.00010683300000000062, 0.00010702700000000259, 0.00010633300000000012, 0.00010648600000000286, 0.0001067769999999954, 0.00010645799999999678, 0.00010709700000000044, 0.00010645899999999625, 0.000106514000000002, 0.00010637499999999883, 0.00010636099999999926, 0.00010647200000000329, 0.00010662499999999908, 0.00010700000000000293, 0.00010704200000000164, 0.00010699999999999599, 0.00010700000000000293, 0.00010704100000000216, 0.00010729099999999547, 0.00010642999999999764, 0.00010715199999999925, 0.00010690299999999847, 0.00010712499999999958, 0.00010729100000000241, 0.00010672299999999607, 0.00010713899999999915, 0.00010668000000000483, 0.00010682000000000053, 0.00010729199999999495, 0.00010697300000000326, 0.00010658399999999985, 0.00010675000000000268, 0.00010687499999999933, 0.00010643099999999711, 0.00010709700000000044, 0.00010716700000000523, 0.0001070560000000012, 0.00010711100000000001, 0.00010715199999999925, 0.00010702799999999513, 0.0001063889999999984, 0.00010654200000000114, 0.00010718099999999786, 0.00010716699999999829, 0.00010650000000000243, 0.00010707000000000078]</msg>
<status status="PASS" starttime="20201112 12:44:42.622" endtime="20201112 12:44:42.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.610" endtime="20201112 12:44:42.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.634" endtime="20201112 12:44:42.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:42.643" endtime="20201112 12:44:42.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.638" endtime="20201112 12:44:42.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.630" endtime="20201112 12:44:42.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.091" endtime="20201112 12:44:42.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.090" endtime="20201112 12:44:42.669"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.692" endtime="20201112 12:44:42.714"></status>
</kw>
<msg timestamp="20201112 12:44:42.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:42.689" endtime="20201112 12:44:42.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:42.718" endtime="20201112 12:44:42.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.724" endtime="20201112 12:44:42.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.682" endtime="20201112 12:44:42.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.676" endtime="20201112 12:44:42.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.748" endtime="20201112 12:44:43.100"></status>
</kw>
<msg timestamp="20201112 12:44:43.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041458319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041566486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:42.745" endtime="20201112 12:44:43.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041458319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041566486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:43.109" endtime="20201112 12:44:43.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.127" endtime="20201112 12:44:43.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.737" endtime="20201112 12:44:43.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.732" endtime="20201112 12:44:43.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:43.147" level="INFO">${RESULT} = [{'time': 0.041566486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010816699999999929, 'source_diff': 0.00010816699999999929}, {'time': 0.041680736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:43.138" endtime="20201112 12:44:43.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:43.177" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:43.149" endtime="20201112 12:44:43.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.188" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 12:44:43.186" endtime="20201112 12:44:43.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.193" level="INFO">VALUE: [0.00010816699999999929, 0.00010800000000000393, 0.00010762500000000008, 0.0001080969999999945, 0.00010729200000000189, 0.00010740299999999897, 0.00010784700000000119, 0.00010766699999999879, 0.0001078340000000011, 0.00010740299999999897, 0.00010745799999999778, 0.00010827800000000332, 0.00010747199999999735, 0.00010811100000000101, 0.00010761100000000051, 0.00010758400000000085, 0.00010736100000000026, 0.00010743099999999811, 0.00010804200000000264, 0.00010812500000000058, 0.00010762500000000008, 0.00010748600000000386, 0.00010786100000000076, 0.00010784700000000119, 0.0001078889999999999, 0.00010787500000000033, 0.00010745900000000419, 0.00010811100000000101, 0.00010812500000000058, 0.00010737499999999983, 0.00010824999999999724, 0.00010777800000000282, 0.00010761100000000051, 0.00010797299999999732, 0.00010827800000000332, 0.00010729100000000241, 0.00010827799999999638, 0.00010759800000000042, 0.00010741599999999907, 0.00010781899999999511, 0.000107514000000003, 0.00010734700000000069, 0.00010744399999999821, 0.00010747199999999735, 0.00010744500000000462, 0.00010802799999999613, 0.00010787500000000033, 0.00010752699999999615, 0.00010777799999999588, 0.0001080690000000023]</msg>
<status status="PASS" starttime="20201112 12:44:43.190" endtime="20201112 12:44:43.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.179" endtime="20201112 12:44:43.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.203" endtime="20201112 12:44:43.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:43.212" endtime="20201112 12:44:43.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.207" endtime="20201112 12:44:43.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.199" endtime="20201112 12:44:43.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.671" endtime="20201112 12:44:43.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.670" endtime="20201112 12:44:43.238"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.261" endtime="20201112 12:44:43.283"></status>
</kw>
<msg timestamp="20201112 12:44:43.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:43.258" endtime="20201112 12:44:43.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:43.287" endtime="20201112 12:44:43.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.293" endtime="20201112 12:44:43.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.251" endtime="20201112 12:44:43.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.245" endtime="20201112 12:44:43.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.317" endtime="20201112 12:44:43.668"></status>
</kw>
<msg timestamp="20201112 12:44:43.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041564292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0416735, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:44:43.314" endtime="20201112 12:44:43.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041564292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0416735, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:44:43.677" endtime="20201112 12:44:43.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.696" endtime="20201112 12:44:43.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.306" endtime="20201112 12:44:43.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.302" endtime="20201112 12:44:43.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:43.717" level="INFO">${RESULT} = [{'time': 0.0416735, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010920799999999953, 'source_diff': 0.00010920799999999953}, {'time': 0.041791917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:43.708" endtime="20201112 12:44:43.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:43.747" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:43.719" endtime="20201112 12:44:43.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.759" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 12:44:43.756" endtime="20201112 12:44:43.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.764" level="INFO">VALUE: [0.00010920799999999953, 0.00010933399999999566, 0.00010898599999999842, 0.000108514000000004, 0.00010847200000000529, 0.00010837500000000083, 0.00010873599999999817, 0.00010861100000000151, 0.0001087219999999986, 0.00010884800000000167, 0.00010884699999999525, 0.00010880500000000348, 0.0001085560000000027, 0.00010869499999999893, 0.00010869399999999946, 0.00010883300000000262, 0.00010848600000000486, 0.0001083890000000004, 0.00010858299999999543, 0.00010869399999999946, 0.00010883300000000262, 0.00010882000000000253, 0.00010908300000000287, 0.00010924999999999824, 0.00010865300000000022, 0.00010865200000000075, 0.00010884700000000219, 0.00010880600000000296, 0.00010830600000000246, 0.00010859700000000194, 0.00010924999999999824, 0.00010927799999999738, 0.00010934700000000269, 0.00010850000000000443, 0.00010898599999999842, 0.00010912499999999464, 0.00010861100000000151, 0.00010861100000000151, 0.0001087360000000051, 0.0001090560000000032, 0.00010891700000000004, 0.00010901399999999756, 0.00010831999999999509, 0.00010834700000000169, 0.00010854099999999672, 0.00010845799999999878, 0.00010926399999999781, 0.00010894399999999971, 0.00010897199999999885, 0.00010847199999999835]</msg>
<status status="PASS" starttime="20201112 12:44:43.761" endtime="20201112 12:44:43.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.749" endtime="20201112 12:44:43.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.774" endtime="20201112 12:44:43.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:43.782" endtime="20201112 12:44:43.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.778" endtime="20201112 12:44:43.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.769" endtime="20201112 12:44:43.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.240" endtime="20201112 12:44:43.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.239" endtime="20201112 12:44:43.809"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.832" endtime="20201112 12:44:43.854"></status>
</kw>
<msg timestamp="20201112 12:44:43.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:43.828" endtime="20201112 12:44:43.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:43.857" endtime="20201112 12:44:43.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.864" endtime="20201112 12:44:43.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.821" endtime="20201112 12:44:43.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.815" endtime="20201112 12:44:43.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.888" endtime="20201112 12:44:44.241"></status>
</kw>
<msg timestamp="20201112 12:44:44.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041274764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041384625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:43.884" endtime="20201112 12:44:44.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041274764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041384625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:44.250" endtime="20201112 12:44:44.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:44.269" endtime="20201112 12:44:44.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.877" endtime="20201112 12:44:44.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.872" endtime="20201112 12:44:44.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:44.288" level="INFO">${RESULT} = [{'time': 0.041384625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010986100000000276, 'source_diff': 0.00010986100000000276}, {'time': 0.041499972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:44.279" endtime="20201112 12:44:44.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:44.318" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:44.290" endtime="20201112 12:44:44.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.329" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 12:44:44.327" endtime="20201112 12:44:44.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.335" level="INFO">VALUE: [0.00010986100000000276, 0.00010945799999999978, 0.00010940300000000097, 0.0001102769999999989, 0.00011029199999999795, 0.00010933300000000312, 0.00010933299999999618, 0.00010961100000000251, 0.00010986099999999582, 0.00010958299999999643, 0.00010969400000000046, 0.00010970800000000003, 0.000109596999999996, 0.0001095549999999973, 0.000109596999999996, 0.00010945799999999978, 0.00010987500000000233, 0.00010962500000000208, 0.00010969499999999993, 0.00010961099999999557, 0.00011026399999999881, 0.00010954099999999772, 0.00010997199999999985, 0.00010952699999999815, 0.00010945799999999978, 0.0001095419999999972, 0.00011030599999999752, 0.00010934799999999523, 0.00010956899999999686, 0.00011008300000000387, 0.00010997199999999985, 0.00010965300000000122, 0.00010961099999999557, 0.00010949999999999849, 0.00011033299999999718, 0.00011018100000000086, 0.00011006999999999684, 0.00010956999999999634, 0.00010952799999999763, 0.00010998599999999942, 0.00010974999999999874, 0.00010998599999999942, 0.00011034699999999675, 0.00010993100000000061, 0.00010937499999999489, 0.00011017999999999445, 0.00010934700000000269, 0.00010933399999999566, 0.00010950000000000543, 0.00010948599999999892]</msg>
<status status="PASS" starttime="20201112 12:44:44.332" endtime="20201112 12:44:44.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.320" endtime="20201112 12:44:44.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:44.344" endtime="20201112 12:44:44.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:44.353" endtime="20201112 12:44:44.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.349" endtime="20201112 12:44:44.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.340" endtime="20201112 12:44:44.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.811" endtime="20201112 12:44:44.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.810" endtime="20201112 12:44:44.379"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:44.403" endtime="20201112 12:44:44.425"></status>
</kw>
<msg timestamp="20201112 12:44:44.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:44.399" endtime="20201112 12:44:44.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:44.428" endtime="20201112 12:44:44.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:44.434" endtime="20201112 12:44:44.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.392" endtime="20201112 12:44:44.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.386" endtime="20201112 12:44:44.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:44.458" endtime="20201112 12:44:44.809"></status>
</kw>
<msg timestamp="20201112 12:44:44.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0416085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041719347, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:44:44.455" endtime="20201112 12:44:44.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0416085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041719347, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:44:44.819" endtime="20201112 12:44:44.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:44.837" endtime="20201112 12:44:44.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.448" endtime="20201112 12:44:44.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.443" endtime="20201112 12:44:44.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:44.857" level="INFO">${RESULT} = [{'time': 0.041719347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011084699999999725, 'source_diff': 0.00011084699999999725}, {'time': 0.041834681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:44.848" endtime="20201112 12:44:44.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:44.887" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:44.859" endtime="20201112 12:44:44.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.898" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 12:44:44.896" endtime="20201112 12:44:44.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:44.904" level="INFO">VALUE: [0.00011084699999999725, 0.00011058399999999691, 0.00011081899999999811, 0.00011093000000000214, 0.00011059700000000394, 0.00011111099999999707, 0.00011111099999999707, 0.0001105549999999983, 0.00011050000000000643, 0.00011069500000000093, 0.00011097200000000085, 0.0001112769999999999, 0.00011034699999999675, 0.00011108300000000487, 0.00011065300000000222, 0.00011088899999999596, 0.00011084800000000367, 0.00011119499999999449, 0.00011052799999999863, 0.00011047299999999982, 0.00011083299999999768, 0.00011049999999999949, 0.00011036099999999632, 0.00011120799999999459, 0.00011129099999999947, 0.00011119399999999502, 0.00011126399999999981, 0.00011088899999999596, 0.00011118100000000186, 0.00011040299999999503, 0.00011043100000000111, 0.00011049999999999949, 0.00011037500000000283, 0.00011086100000000376, 0.0001103890000000024, 0.00011112500000000358, 0.00011097200000000085, 0.00011099999999999999, 0.00011095800000000128, 0.00011083300000000462, 0.00011116600000000282, 0.00011065299999999528, 0.00011111100000000401, 0.00011031999999999709, 0.00011130599999999852, 0.00011112500000000358, 0.00011077799999999888, 0.00011041700000000154, 0.00011040199999999556, 0.00011041600000000207]</msg>
<status status="PASS" starttime="20201112 12:44:44.901" endtime="20201112 12:44:44.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.889" endtime="20201112 12:44:44.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:44.913" endtime="20201112 12:44:44.916"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:44.922" endtime="20201112 12:44:44.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.918" endtime="20201112 12:44:44.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.909" endtime="20201112 12:44:44.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.382" endtime="20201112 12:44:44.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.380" endtime="20201112 12:44:44.948"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:44.972" endtime="20201112 12:44:44.994"></status>
</kw>
<msg timestamp="20201112 12:44:44.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:44.968" endtime="20201112 12:44:44.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:44.997" endtime="20201112 12:44:45.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:45.004" endtime="20201112 12:44:45.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.961" endtime="20201112 12:44:45.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.955" endtime="20201112 12:44:45.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:45.027" endtime="20201112 12:44:45.379"></status>
</kw>
<msg timestamp="20201112 12:44:45.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0414385, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041550486, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:44:45.024" endtime="20201112 12:44:45.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0414385, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041550486, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:44:45.389" endtime="20201112 12:44:45.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:45.407" endtime="20201112 12:44:45.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.017" endtime="20201112 12:44:45.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.012" endtime="20201112 12:44:45.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:45.426" level="INFO">${RESULT} = [{'time': 0.041550486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011198599999999448, 'source_diff': 0.00011198599999999448}, {'time': 0.041667819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:45.418" endtime="20201112 12:44:45.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:45.457" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:45.429" endtime="20201112 12:44:45.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.468" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 12:44:45.466" endtime="20201112 12:44:45.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.473" level="INFO">VALUE: [0.00011198599999999448, 0.00011187500000000433, 0.00011179199999999945, 0.00011222199999999516, 0.00011141600000000307, 0.00011222199999999516, 0.00011198600000000142, 0.00011222199999999516, 0.00011212500000000458, 0.0001122220000000021, 0.00011231899999999961, 0.00011194400000000271, 0.00011186100000000476, 0.00011151400000000006, 0.00011193000000000314, 0.00011136100000000426, 0.00011195900000000175, 0.00011220799999999559, 0.00011156899999999886, 0.00011202800000000013, 0.00011191700000000304, 0.00011172199999999466, 0.00011173600000000117, 0.00011144500000000168, 0.00011144399999999527, 0.00011161099999999757, 0.00011201400000000056, 0.00011197200000000185, 0.00011195900000000175, 0.00011218100000000286, 0.00011143100000000211, 0.00011165300000000322, 0.00011131999999999809, 0.0001113890000000034, 0.00011208399999999841, 0.00011165299999999628, 0.00011151400000000006, 0.0001115419999999992, 0.00011130600000000546, 0.00011179199999999945, 0.0001117770000000004, 0.00011136099999999732, 0.0001119169999999961, 0.00011145800000000178, 0.00011211099999999807, 0.00011194399999999577, 0.00011213899999999721, 0.00011215200000000425, 0.00011140300000000297, 0.00011137500000000383]</msg>
<status status="PASS" starttime="20201112 12:44:45.470" endtime="20201112 12:44:45.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.459" endtime="20201112 12:44:45.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:45.483" endtime="20201112 12:44:45.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:45.492" endtime="20201112 12:44:45.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.487" endtime="20201112 12:44:45.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.479" endtime="20201112 12:44:45.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.950" endtime="20201112 12:44:45.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:44.949" endtime="20201112 12:44:45.518"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:45.541" endtime="20201112 12:44:45.563"></status>
</kw>
<msg timestamp="20201112 12:44:45.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:45.538" endtime="20201112 12:44:45.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:45.567" endtime="20201112 12:44:45.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:45.573" endtime="20201112 12:44:45.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.530" endtime="20201112 12:44:45.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.525" endtime="20201112 12:44:45.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:45.597" endtime="20201112 12:44:45.949"></status>
</kw>
<msg timestamp="20201112 12:44:45.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041370514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041483069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:45.594" endtime="20201112 12:44:45.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041370514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041483069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:45.958" endtime="20201112 12:44:45.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:45.977" endtime="20201112 12:44:45.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.586" endtime="20201112 12:44:45.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.582" endtime="20201112 12:44:45.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:45.998" level="INFO">${RESULT} = [{'time': 0.041483069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001125550000000003, 'source_diff': 0.0001125550000000003}, {'time': 0.041602431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:45.989" endtime="20201112 12:44:45.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:46.029" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:46.000" endtime="20201112 12:44:46.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.040" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 12:44:46.038" endtime="20201112 12:44:46.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.045" level="INFO">VALUE: [0.0001125550000000003, 0.00011241700000000354, 0.00011281900000000011, 0.0001130969999999995, 0.00011279200000000045, 0.0001123749999999979, 0.00011277800000000088, 0.0001130969999999995, 0.00011277800000000088, 0.00011265300000000422, 0.00011275000000000174, 0.00011313899999999821, 0.00011258299999999943, 0.00011250000000000149, 0.00011301400000000156, 0.00011334699999999975, 0.00011269400000000346, 0.00011320799999999659, 0.00011244400000000321, 0.00011251399999999412, 0.00011273600000000217, 0.00011312499999999864, 0.00011286099999999882, 0.00011256899999999986, 0.00011336099999999932, 0.00011294399999999677, 0.00011323600000000267, 0.0001128890000000049, 0.0001125420000000002, 0.00011261099999999857, 0.00011261200000000499, 0.00011313899999999821, 0.00011230599999999952, 0.00011240300000000397, 0.00011243100000000311, 0.00011248600000000192, 0.00011233399999999866, 0.00011332000000000009, 0.00011241599999999713, 0.00011301300000000208, 0.0001125550000000003, 0.00011300000000000199, 0.00011266699999999685, 0.00011323599999999573, 0.00011231899999999961, 0.00011313899999999821, 0.00011302800000000113, 0.00011255599999999977, 0.00011262500000000508, 0.00011250000000000149]</msg>
<status status="PASS" starttime="20201112 12:44:46.042" endtime="20201112 12:44:46.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.031" endtime="20201112 12:44:46.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.055" endtime="20201112 12:44:46.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:46.064" endtime="20201112 12:44:46.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.059" endtime="20201112 12:44:46.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.050" endtime="20201112 12:44:46.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.520" endtime="20201112 12:44:46.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.519" endtime="20201112 12:44:46.090"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.115" endtime="20201112 12:44:46.137"></status>
</kw>
<msg timestamp="20201112 12:44:46.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:46.111" endtime="20201112 12:44:46.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:46.141" endtime="20201112 12:44:46.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.147" endtime="20201112 12:44:46.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.104" endtime="20201112 12:44:46.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.097" endtime="20201112 12:44:46.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.171" endtime="20201112 12:44:46.524"></status>
</kw>
<msg timestamp="20201112 12:44:46.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043160708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043274403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:46.167" endtime="20201112 12:44:46.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043160708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043274403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:46.533" endtime="20201112 12:44:46.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.552" endtime="20201112 12:44:46.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.160" endtime="20201112 12:44:46.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.155" endtime="20201112 12:44:46.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:46.571" level="INFO">${RESULT} = [{'time': 0.043274403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011369500000000393, 'source_diff': 0.00011369500000000393}, {'time': 0.043395722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:46.562" endtime="20201112 12:44:46.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:46.601" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:46.573" endtime="20201112 12:44:46.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.613" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 12:44:46.610" endtime="20201112 12:44:46.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.618" level="INFO">VALUE: [0.00011369500000000393, 0.00011394399999999777, 0.00011384700000000025, 0.00011373700000000264, 0.00011398599999999648, 0.00011359799999999948, 0.00011351400000000206, 0.00011357000000000034, 0.00011416599999999888, 0.00011345799999999684, 0.00011407000000000084, 0.0001139169999999981, 0.00011338800000000593, 0.00011380500000000154, 0.00011341600000000507, 0.00011398599999999648, 0.00011398599999999648, 0.00011394399999999777, 0.00011369499999999699, 0.00011405600000000127, 0.0001135420000000012, 0.00011376399999999537, 0.00011411100000000007, 0.00011376400000000231, 0.00011395799999999734, 0.00011373600000000317, 0.00011365299999999828, 0.00011394400000000471, 0.00011412499999999964, 0.00011361099999999957, 0.0001140970000000005, 0.00011408300000000093, 0.00011381899999999417, 0.00011427800000000238, 0.00011381900000000111, 0.00011384700000000025, 0.00011405499999999485, 0.00011379100000000197, 0.00011369400000000446, 0.00011351400000000206, 0.0001139299999999982, 0.0001139169999999981, 0.00011351400000000206, 0.00011386099999999982, 0.00011343099999999717, 0.00011379200000000145, 0.00011401300000000308, 0.00011344499999999674, 0.00011383300000000068, 0.00011411100000000007]</msg>
<status status="PASS" starttime="20201112 12:44:46.615" endtime="20201112 12:44:46.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.603" endtime="20201112 12:44:46.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.632" endtime="20201112 12:44:46.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:46.640" endtime="20201112 12:44:46.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.636" endtime="20201112 12:44:46.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.627" endtime="20201112 12:44:46.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.093" endtime="20201112 12:44:46.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.091" endtime="20201112 12:44:46.667"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.690" endtime="20201112 12:44:46.712"></status>
</kw>
<msg timestamp="20201112 12:44:46.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:46.686" endtime="20201112 12:44:46.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:46.716" endtime="20201112 12:44:46.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.722" endtime="20201112 12:44:46.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.679" endtime="20201112 12:44:46.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.673" endtime="20201112 12:44:46.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.746" endtime="20201112 12:44:47.098"></status>
</kw>
<msg timestamp="20201112 12:44:47.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041386, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041501014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:46.743" endtime="20201112 12:44:47.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041386, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041501014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:47.108" endtime="20201112 12:44:47.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.127" endtime="20201112 12:44:47.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.735" endtime="20201112 12:44:47.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.731" endtime="20201112 12:44:47.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:47.147" level="INFO">${RESULT} = [{'time': 0.041501014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011501400000000356, 'source_diff': 0.00011501400000000356}, {'time': 0.041626389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:47.138" endtime="20201112 12:44:47.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:47.177" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:47.149" endtime="20201112 12:44:47.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.189" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 12:44:47.186" endtime="20201112 12:44:47.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.194" level="INFO">VALUE: [0.00011501400000000356, 0.00011466699999999885, 0.00011486100000000082, 0.00011444499999999774, 0.00011491700000000604, 0.0001152629999999974, 0.0001147499999999968, 0.0001152369999999972, 0.000114597000000001, 0.0001148750000000004, 0.00011523599999999773, 0.00011438899999999946, 0.00011440299999999903, 0.00011501399999999662, 0.00011441700000000554, 0.00011441700000000554, 0.00011483299999999474, 0.00011501299999999715, 0.0001150970000000015, 0.00011479199999999551, 0.00011504099999999629, 0.00011520899999999806, 0.00011501400000000356, 0.00011507000000000184, 0.00011452799999999569, 0.00011447299999999688, 0.00011473599999999723, 0.00011511100000000107, 0.0001152499999999973, 0.00011444499999999774, 0.00011470799999999809, 0.00011498599999999748, 0.00011517999999999945, 0.00011520799999999859, 0.00011468099999999842, 0.0001149169999999991, 0.00011498599999999748, 0.00011461100000000057, 0.00011465199999999981, 0.00011494399999999877, 0.00011468099999999842, 0.0001145420000000022, 0.00011468099999999842, 0.00011498599999999748, 0.00011532000000000209, 0.0001148750000000004, 0.0001148750000000004, 0.00011498599999999748, 0.0001145550000000023, 0.0001148750000000004]</msg>
<status status="PASS" starttime="20201112 12:44:47.191" endtime="20201112 12:44:47.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.179" endtime="20201112 12:44:47.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.204" endtime="20201112 12:44:47.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:47.212" endtime="20201112 12:44:47.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.208" endtime="20201112 12:44:47.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.199" endtime="20201112 12:44:47.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.669" endtime="20201112 12:44:47.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.668" endtime="20201112 12:44:47.239"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.262" endtime="20201112 12:44:47.284"></status>
</kw>
<msg timestamp="20201112 12:44:47.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:47.259" endtime="20201112 12:44:47.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:47.288" endtime="20201112 12:44:47.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.294" endtime="20201112 12:44:47.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.251" endtime="20201112 12:44:47.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.245" endtime="20201112 12:44:47.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.318" endtime="20201112 12:44:47.670"></status>
</kw>
<msg timestamp="20201112 12:44:47.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041434139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041550014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:47.315" endtime="20201112 12:44:47.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041434139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041550014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:47.679" endtime="20201112 12:44:47.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.697" endtime="20201112 12:44:47.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.307" endtime="20201112 12:44:47.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.303" endtime="20201112 12:44:47.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:47.717" level="INFO">${RESULT} = [{'time': 0.041550014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001158750000000014, 'source_diff': 0.0001158750000000014}, {'time': 0.041674361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:47.708" endtime="20201112 12:44:47.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:47.747" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:47.719" endtime="20201112 12:44:47.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.758" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 12:44:47.756" endtime="20201112 12:44:47.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.764" level="INFO">VALUE: [0.0001158750000000014, 0.0001155550000000033, 0.0001155420000000032, 0.00011594399999999977, 0.00011583300000000268, 0.00011595799999999934, 0.00011558400000000191, 0.00011570899999999856, 0.00011590300000000053, 0.00011563899999999377, 0.000115597000000002, 0.00011548600000000492, 0.00011537499999999395, 0.00011577799999999694, 0.00011609699999999556, 0.00011611100000000207, 0.00011570899999999856, 0.000115597000000002, 0.0001157629999999979, 0.00011580600000000302, 0.0001153750000000009, 0.00011613900000000121, 0.00011533299999999524, 0.0001153750000000009, 0.00011588900000000096, 0.00011572199999999866, 0.00011566699999999985, 0.00011544499999999874, 0.00011563900000000071, 0.0001154169999999996, 0.00011630599999999658, 0.00011533300000000218, 0.00011604099999999729, 0.0001157499999999978, 0.00011543099999999917, 0.00011548599999999798, 0.00011602799999999719, 0.00011588900000000096, 0.00011544400000000621, 0.00011536099999999438, 0.00011562500000000114, 0.00011612500000000164, 0.00011588900000000096, 0.00011580500000000354, 0.00011557000000000234, 0.00011597199999999891, 0.00011565200000000081, 0.00011622199999999916, 0.00011590300000000053, 0.00011612500000000164]</msg>
<status status="PASS" starttime="20201112 12:44:47.761" endtime="20201112 12:44:47.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.749" endtime="20201112 12:44:47.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.774" endtime="20201112 12:44:47.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:47.782" endtime="20201112 12:44:47.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.778" endtime="20201112 12:44:47.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.769" endtime="20201112 12:44:47.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.241" endtime="20201112 12:44:47.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.240" endtime="20201112 12:44:47.808"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.831" endtime="20201112 12:44:47.854"></status>
</kw>
<msg timestamp="20201112 12:44:47.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:47.828" endtime="20201112 12:44:47.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:47.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:47.857" endtime="20201112 12:44:47.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.864" endtime="20201112 12:44:47.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.821" endtime="20201112 12:44:47.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.815" endtime="20201112 12:44:47.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:47.888" endtime="20201112 12:44:48.239"></status>
</kw>
<msg timestamp="20201112 12:44:48.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041442903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041560056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:47.884" endtime="20201112 12:44:48.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041442903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041560056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:48.248" endtime="20201112 12:44:48.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.267" endtime="20201112 12:44:48.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.877" endtime="20201112 12:44:48.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.872" endtime="20201112 12:44:48.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:48.288" level="INFO">${RESULT} = [{'time': 0.041560056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011715299999999484, 'source_diff': 0.00011715299999999484}, {'time': 0.041686403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:48.279" endtime="20201112 12:44:48.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:48.319" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:48.290" endtime="20201112 12:44:48.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.330" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 12:44:48.328" endtime="20201112 12:44:48.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.335" level="INFO">VALUE: [0.00011715299999999484, 0.00011701399999999862, 0.0001165420000000042, 0.00011722199999999322, 0.0001163750000000019, 0.00011638900000000146, 0.00011636100000000232, 0.0001169300000000012, 0.00011733399999999672, 0.00011644499999999974, 0.00011694500000000024, 0.00011638900000000146, 0.00011648599999999898, 0.00011632000000000309, 0.00011704199999999776, 0.00011677800000000488, 0.00011651399999999812, 0.00011732000000000409, 0.00011711100000000307, 0.0001169170000000011, 0.00011736100000000332, 0.00011699999999999905, 0.00011729099999999854, 0.00011719500000000049, 0.00011651399999999812, 0.00011640300000000103, 0.0001168049999999976, 0.00011637499999999495, 0.00011638899999999452, 0.00011640300000000103, 0.00011684699999999631, 0.00011648599999999898, 0.00011730599999999758, 0.0001165829999999965, 0.00011638900000000146, 0.00011726399999999887, 0.00011698599999999948, 0.00011645799999999984, 0.00011677799999999794, 0.00011634700000000275, 0.00011684700000000325, 0.00011654199999999726, 0.00011711100000000307, 0.00011666699999999391, 0.0001165550000000043, 0.00011693100000000067, 0.0001164170000000006, 0.00011726399999999887, 0.00011655499999999736, 0.0001172499999999993]</msg>
<status status="PASS" starttime="20201112 12:44:48.332" endtime="20201112 12:44:48.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.320" endtime="20201112 12:44:48.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.345" endtime="20201112 12:44:48.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:48.353" endtime="20201112 12:44:48.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.349" endtime="20201112 12:44:48.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.340" endtime="20201112 12:44:48.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.810" endtime="20201112 12:44:48.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:47.809" endtime="20201112 12:44:48.380"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.403" endtime="20201112 12:44:48.425"></status>
</kw>
<msg timestamp="20201112 12:44:48.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:48.400" endtime="20201112 12:44:48.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:48.429" endtime="20201112 12:44:48.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.435" endtime="20201112 12:44:48.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.392" endtime="20201112 12:44:48.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.386" endtime="20201112 12:44:48.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.459" endtime="20201112 12:44:48.812"></status>
</kw>
<msg timestamp="20201112 12:44:48.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041450417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041568361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:48.456" endtime="20201112 12:44:48.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041450417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041568361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:48.821" endtime="20201112 12:44:48.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.840" endtime="20201112 12:44:48.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.448" endtime="20201112 12:44:48.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.444" endtime="20201112 12:44:48.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:48.859" level="INFO">${RESULT} = [{'time': 0.041568361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011794399999999483, 'source_diff': 0.00011794399999999483}, {'time': 0.04169675, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:44:48.851" endtime="20201112 12:44:48.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:48.890" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:48.862" endtime="20201112 12:44:48.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.901" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 12:44:48.899" endtime="20201112 12:44:48.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.906" level="INFO">VALUE: [0.00011794399999999483, 0.00011800000000000005, 0.00011755499999999836, 0.00011827799999999944, 0.00011794500000000124, 0.00011738900000000246, 0.00011826399999999987, 0.0001181249999999967, 0.00011811099999999713, 0.00011769400000000152, 0.00011826399999999987, 0.00011784799999999679, 0.00011755599999999783, 0.00011804199999999876, 0.00011761099999999663, 0.00011822200000000116, 0.0001182500000000003, 0.0001180699999999979, 0.00011776399999999937, 0.00011752699999999922, 0.00011819499999999455, 0.00011788900000000296, 0.00011734699999999681, 0.00011754099999999879, 0.00011822300000000063, 0.00011780599999999808, 0.00011763900000000271, 0.0001183049999999991, 0.0001175829999999975, 0.00011748599999999998, 0.00011734700000000375, 0.00011766700000000185, 0.00011831999999999815, 0.00011811199999999661, 0.00011788899999999602, 0.00011832000000000509, 0.00011736099999999638, 0.00011805600000000527, 0.00011768100000000142, 0.00011757000000000434, 0.00011820800000000159, 0.00011790199999999612, 0.00011748599999999998, 0.0001179170000000021, 0.00011784699999999732, 0.00011798600000000048, 0.00011784800000000373, 0.0001181950000000015, 0.00011794500000000124, 0.00011756899999999793]</msg>
<status status="PASS" starttime="20201112 12:44:48.903" endtime="20201112 12:44:48.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.892" endtime="20201112 12:44:48.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.916" endtime="20201112 12:44:48.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:48.925" endtime="20201112 12:44:48.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.920" endtime="20201112 12:44:48.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.912" endtime="20201112 12:44:48.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.382" endtime="20201112 12:44:48.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.381" endtime="20201112 12:44:48.951"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.974" endtime="20201112 12:44:48.997"></status>
</kw>
<msg timestamp="20201112 12:44:48.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:48.971" endtime="20201112 12:44:48.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:49.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:49.000" endtime="20201112 12:44:49.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:49.007" endtime="20201112 12:44:49.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.964" endtime="20201112 12:44:49.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.958" endtime="20201112 12:44:49.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:49.031" endtime="20201112 12:44:49.383"></status>
</kw>
<msg timestamp="20201112 12:44:49.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04149275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041611347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:49.027" endtime="20201112 12:44:49.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:49.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04149275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041611347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:49.392" endtime="20201112 12:44:49.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:49.411" endtime="20201112 12:44:49.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.020" endtime="20201112 12:44:49.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.015" endtime="20201112 12:44:49.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:49.430" level="INFO">${RESULT} = [{'time': 0.041611347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011859699999999807, 'source_diff': 0.00011859699999999807}, {'time': 0.041740792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:49.421" endtime="20201112 12:44:49.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:49.460" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:49.432" endtime="20201112 12:44:49.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:49.472" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 12:44:49.469" endtime="20201112 12:44:49.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:49.477" level="INFO">VALUE: [0.00011859699999999807, 0.0001184029999999961, 0.00011876400000000037, 0.00011884699999999832, 0.00011869399999999558, 0.0001184170000000026, 0.00011902800000000019, 0.00011892999999999626, 0.00011863900000000371, 0.00011847200000000141, 0.0001186249999999972, 0.00011923600000000173, 0.00011861099999999763, 0.00011937499999999795, 0.00011900000000000105, 0.00011883299999999875, 0.00011852700000000022, 0.00011893100000000267, 0.00011929200000000001, 0.00011929200000000001, 0.00011845900000000131, 0.0001188049999999996, 0.00011883299999999875, 0.00011931999999999915, 0.0001191249999999977, 0.0001190699999999989, 0.00011937499999999795, 0.00011934699999999882, 0.00011926400000000087, 0.00011850000000000055, 0.0001185829999999985, 0.00011923599999999479, 0.000119082999999999, 0.0001190699999999989, 0.00011893100000000267, 0.00011856899999999893, 0.00011918100000000292, 0.00011861099999999763, 0.00011890300000000353, 0.00011906899999999943, 0.0001184029999999961, 0.00011848600000000098, 0.00011911099999999814, 0.00011923600000000173, 0.00011865299999999634, 0.00011913899999999727, 0.00011887499999999745, 0.00011877799999999994, 0.00011902800000000019, 0.00011888900000000396]</msg>
<status status="PASS" starttime="20201112 12:44:49.474" endtime="20201112 12:44:49.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.462" endtime="20201112 12:44:49.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:49.487" endtime="20201112 12:44:49.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:49.495" endtime="20201112 12:44:49.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.491" endtime="20201112 12:44:49.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.482" endtime="20201112 12:44:49.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.953" endtime="20201112 12:44:49.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.952" endtime="20201112 12:44:49.522"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:49.545" endtime="20201112 12:44:49.568"></status>
</kw>
<msg timestamp="20201112 12:44:49.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:49.542" endtime="20201112 12:44:49.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:49.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:49.571" endtime="20201112 12:44:49.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:49.577" endtime="20201112 12:44:49.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.534" endtime="20201112 12:44:49.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.528" endtime="20201112 12:44:49.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:49.601" endtime="20201112 12:44:49.953"></status>
</kw>
<msg timestamp="20201112 12:44:49.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041690931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041810694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:49.598" endtime="20201112 12:44:49.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:49.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041690931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041810694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:49.962" endtime="20201112 12:44:49.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:49.981" endtime="20201112 12:44:49.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.591" endtime="20201112 12:44:49.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.586" endtime="20201112 12:44:49.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:50.000" level="INFO">${RESULT} = [{'time': 0.041810694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001197630000000019, 'source_diff': 0.0001197630000000019}, {'time': 0.041937083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:49.991" endtime="20201112 12:44:50.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:50.031" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:50.002" endtime="20201112 12:44:50.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:50.042" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 12:44:50.040" endtime="20201112 12:44:50.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:50.047" level="INFO">VALUE: [0.0001197630000000019, 0.00011945800000000284, 0.0001194170000000036, 0.00012008400000000641, 0.00011976399999999443, 0.00011944500000000274, 0.00012036099999999939, 0.00012005600000000033, 0.00011959699999999907, 0.00011966700000000385, 0.00012020900000000306, 0.0001194579999999959, 0.0001194300000000037, 0.00011950000000000155, 0.00011944500000000274, 0.00012034699999999982, 0.0001197370000000017, 0.00012013900000000521, 0.00011993100000000367, 0.00011958400000000591, 0.00012030600000000058, 0.00012015300000000478, 0.00011956899999999993, 0.00011990300000000453, 0.0001194029999999971, 0.000120083, 0.00011955500000000036, 0.0001202500000000023, 0.00011970799999999615, 0.00012036199999999886, 0.00011984699999999932, 0.00012016699999999741, 0.00012023599999999579, 0.0001199029999999976, 0.00011963899999999777, 0.0001201249999999987, 0.00012029200000000101, 0.0001198050000000006, 0.00011944500000000274, 0.00011973599999999529, 0.00012037499999999896, 0.00011949999999999461, 0.00012012500000000564, 0.00011936100000000532, 0.00011983299999999975, 0.000119695000000003, 0.0001201249999999987, 0.00012016699999999741, 0.00011941699999999666, 0.00011948599999999504]</msg>
<status status="PASS" starttime="20201112 12:44:50.044" endtime="20201112 12:44:50.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.033" endtime="20201112 12:44:50.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:50.057" endtime="20201112 12:44:50.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:50.066" endtime="20201112 12:44:50.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.061" endtime="20201112 12:44:50.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.052" endtime="20201112 12:44:50.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.524" endtime="20201112 12:44:50.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:49.522" endtime="20201112 12:44:50.092"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:50.115" endtime="20201112 12:44:50.138"></status>
</kw>
<msg timestamp="20201112 12:44:50.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:50.112" endtime="20201112 12:44:50.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:50.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:50.141" endtime="20201112 12:44:50.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:50.147" endtime="20201112 12:44:50.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.104" endtime="20201112 12:44:50.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.099" endtime="20201112 12:44:50.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:50.171" endtime="20201112 12:44:50.522"></status>
</kw>
<msg timestamp="20201112 12:44:50.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041284708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041405181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:50.168" endtime="20201112 12:44:50.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:50.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041284708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041405181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:50.531" endtime="20201112 12:44:50.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:50.550" endtime="20201112 12:44:50.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.161" endtime="20201112 12:44:50.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.156" endtime="20201112 12:44:50.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:50.571" level="INFO">${RESULT} = [{'time': 0.041405181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012047299999999594, 'source_diff': 0.00012047299999999594}, {'time': 0.041536569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:50.562" endtime="20201112 12:44:50.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:50.675" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:50.573" endtime="20201112 12:44:50.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:50.687" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 12:44:50.684" endtime="20201112 12:44:50.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:50.692" level="INFO">VALUE: [0.00012047299999999594, 0.00012037499999999896, 0.00012132000000000115, 0.00012065299999999834, 0.00012100000000000305, 0.0001204579999999969, 0.0001210700000000009, 0.00012073599999999629, 0.00012106899999999449, 0.00012080600000000108, 0.0001205830000000005, 0.00012111100000000014, 0.00012113899999999928, 0.00012091599999999869, 0.00012120799999999765, 0.00012115299999999884, 0.00012113899999999928, 0.00012086199999999936, 0.00012069399999999758, 0.00012116699999999841, 0.00012097199999999697, 0.0001207229999999962, 0.00012094399999999783, 0.00012088899999999903, 0.00012076399999999543, 0.00012070800000000409, 0.00012126400000000287, 0.0001203750000000059, 0.00012080600000000108, 0.00012065299999999834, 0.0001211249999999997, 0.00012127800000000244, 0.00012040199999999862, 0.00012084799999999979, 0.00012073600000000323, 0.00012088899999999903, 0.00012058399999999997, 0.00012122200000000416, 0.00012041699999999766, 0.00012065299999999834, 0.00012077800000000194, 0.00012066599999999844, 0.0001204579999999969, 0.00012086199999999936, 0.00012109700000000057, 0.00012081900000000118, 0.00012088899999999903, 0.00012067999999999801, 0.00012086099999999989, 0.00012083300000000075]</msg>
<status status="PASS" starttime="20201112 12:44:50.689" endtime="20201112 12:44:50.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.677" endtime="20201112 12:44:50.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:50.702" endtime="20201112 12:44:50.705"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:50.710" endtime="20201112 12:44:50.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.706" endtime="20201112 12:44:50.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.697" endtime="20201112 12:44:50.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.094" endtime="20201112 12:44:50.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.093" endtime="20201112 12:44:50.736"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:50.761" endtime="20201112 12:44:50.784"></status>
</kw>
<msg timestamp="20201112 12:44:50.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:50.756" endtime="20201112 12:44:50.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:50.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:50.787" endtime="20201112 12:44:50.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:50.794" endtime="20201112 12:44:50.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.749" endtime="20201112 12:44:50.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.743" endtime="20201112 12:44:50.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:50.818" endtime="20201112 12:44:51.169"></status>
</kw>
<msg timestamp="20201112 12:44:51.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042722208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042843611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:50.814" endtime="20201112 12:44:51.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042722208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042843611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:51.178" endtime="20201112 12:44:51.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.197" endtime="20201112 12:44:51.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.807" endtime="20201112 12:44:51.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.802" endtime="20201112 12:44:51.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:51.214" level="INFO">${RESULT} = [{'time': 0.042843611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001214029999999991, 'source_diff': 0.0001214029999999991}, {'time': 0.042973028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:51.205" endtime="20201112 12:44:51.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:51.245" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:51.216" endtime="20201112 12:44:51.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.257" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 12:44:51.254" endtime="20201112 12:44:51.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.263" level="INFO">VALUE: [0.0001214029999999991, 0.00012154200000000226, 0.0001216250000000002, 0.00012172200000000466, 0.00012190300000000653, 0.00012142999999999876, 0.00012177700000000347, 0.00012206900000000243, 0.00012155600000000183, 0.00012223699999999726, 0.00012138899999999953, 0.000121777999999996, 0.00012154200000000226, 0.00012141599999999919, 0.00012222199999999822, 0.0001215700000000014, 0.00012156899999999499, 0.0001219579999999984, 0.00012143099999999823, 0.00012168099999999848, 0.00012148599999999704, 0.00012142999999999876, 0.00012213900000000028, 0.0001216109999999937, 0.00012190200000000012, 0.00012219399999999908, 0.0001215700000000014, 0.0001222779999999965, 0.00012179199999999557, 0.00012177800000000294, 0.00012219499999999855, 0.00012188900000000003, 0.00012202700000000372, 0.00012183300000000175, 0.00012176399999999643, 0.00012137499999999996, 0.0001217630000000039, 0.00012152700000000322, 0.00012222199999999822, 0.0001222779999999965, 0.00012186100000000089, 0.0001217500000000038, 0.00012209700000000157, 0.00012159700000000107, 0.00012168099999999848, 0.0001218329999999948, 0.00012163899999999978, 0.0001220700000000019, 0.00012155599999999489, 0.0001216250000000002]</msg>
<status status="PASS" starttime="20201112 12:44:51.259" endtime="20201112 12:44:51.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.247" endtime="20201112 12:44:51.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.273" endtime="20201112 12:44:51.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:51.282" endtime="20201112 12:44:51.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.277" endtime="20201112 12:44:51.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.268" endtime="20201112 12:44:51.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.739" endtime="20201112 12:44:51.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:50.738" endtime="20201112 12:44:51.308"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.331" endtime="20201112 12:44:51.355"></status>
</kw>
<msg timestamp="20201112 12:44:51.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:51.328" endtime="20201112 12:44:51.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:51.359" endtime="20201112 12:44:51.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.365" endtime="20201112 12:44:51.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.320" endtime="20201112 12:44:51.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.314" endtime="20201112 12:44:51.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.389" endtime="20201112 12:44:51.740"></status>
</kw>
<msg timestamp="20201112 12:44:51.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042967931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043091236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:51.386" endtime="20201112 12:44:51.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042967931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043091236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:51.749" endtime="20201112 12:44:51.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.768" endtime="20201112 12:44:51.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.378" endtime="20201112 12:44:51.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.374" endtime="20201112 12:44:51.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:51.785" level="INFO">${RESULT} = [{'time': 0.043091236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012330499999999717, 'source_diff': 0.00012330499999999717}, {'time': 0.043221625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:51.777" endtime="20201112 12:44:51.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:51.816" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:51.788" endtime="20201112 12:44:51.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.827" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 12:44:51.825" endtime="20201112 12:44:51.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.833" level="INFO">VALUE: [0.00012330499999999717, 0.00012259700000000207, 0.00012288899999999409, 0.00012262499999999427, 0.0001229720000000059, 0.00012265300000000035, 0.0001231250000000017, 0.00012319400000000008, 0.0001229160000000007, 0.00012237500000000096, 0.00012263899999999384, 0.00012280600000000308, 0.00012238900000000053, 0.00012272199999999872, 0.00012315300000000085, 0.00012322199999999922, 0.000123083000000003, 0.0001225280000000037, 0.00012284700000000232, 0.00012268099999999948, 0.0001224999999999976, 0.00012256999999999546, 0.00012255600000000283, 0.00012283400000000222, 0.00012251400000000412, 0.00012272199999999872, 0.0001230700000000029, 0.000123083000000003, 0.0001224030000000001, 0.00012336100000000239, 0.00012322199999999922, 0.00012248599999999804, 0.0001228480000000018, 0.00012243099999999923, 0.00012244399999999933, 0.00012316700000000042, 0.000122292000000003, 0.00012313900000000128, 0.00012302799999999725, 0.0001229449999999993, 0.0001224160000000002, 0.00012301399999999768, 0.0001225700000000024, 0.00012283300000000275, 0.00012255600000000283, 0.00012293099999999973, 0.0001231800000000005, 0.0001230559999999964, 0.00012233400000000172, 0.00012284700000000232]</msg>
<status status="PASS" starttime="20201112 12:44:51.830" endtime="20201112 12:44:51.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.818" endtime="20201112 12:44:51.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.847" endtime="20201112 12:44:51.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:51.856" endtime="20201112 12:44:51.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.851" endtime="20201112 12:44:51.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.842" endtime="20201112 12:44:51.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.310" endtime="20201112 12:44:51.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.309" endtime="20201112 12:44:51.882"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.905" endtime="20201112 12:44:51.928"></status>
</kw>
<msg timestamp="20201112 12:44:51.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:51.902" endtime="20201112 12:44:51.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:51.931" endtime="20201112 12:44:51.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.938" endtime="20201112 12:44:51.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.894" endtime="20201112 12:44:51.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.889" endtime="20201112 12:44:51.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.964" endtime="20201112 12:44:52.316"></status>
</kw>
<msg timestamp="20201112 12:44:52.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041444597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041568583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:51.960" endtime="20201112 12:44:52.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041444597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041568583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:52.326" endtime="20201112 12:44:52.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:52.344" endtime="20201112 12:44:52.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.951" endtime="20201112 12:44:52.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.946" endtime="20201112 12:44:52.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:52.362" level="INFO">${RESULT} = [{'time': 0.041568583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012398599999999954, 'source_diff': 0.00012398599999999954}, {'time': 0.041697958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:52.353" endtime="20201112 12:44:52.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:52.392" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:52.364" endtime="20201112 12:44:52.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.404" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 12:44:52.401" endtime="20201112 12:44:52.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.409" level="INFO">VALUE: [0.00012398599999999954, 0.00012401399999999868, 0.00012365200000000187, 0.00012411100000000314, 0.0001236250000000022, 0.0001237359999999993, 0.0001239580000000004, 0.00012358299999999656, 0.00012347199999999947, 0.0001241109999999962, 0.00012377800000000494, 0.00012398599999999954, 0.0001234720000000064, 0.0001239450000000003, 0.0001236659999999945, 0.00012356900000000393, 0.00012434699999999688, 0.00012366700000000092, 0.00012340299999999416, 0.00012374999999999886, 0.000123777999999998, 0.0001238329999999968, 0.00012347199999999947, 0.0001237909999999981, 0.00012338900000000153, 0.00012398599999999954, 0.000123680000000001, 0.00012361100000000264, 0.00012397199999999997, 0.0001241250000000027, 0.00012338900000000153, 0.00012358299999999656, 0.0001242229999999997, 0.00012383400000000322, 0.00012415300000000185, 0.00012363900000000178, 0.0001237909999999981, 0.00012387500000000246, 0.00012398599999999954, 0.00012383300000000375, 0.000123568999999997, 0.00012361199999999517, 0.00012391700000000117, 0.00012394400000000083, 0.00012409700000000357, 0.00012359699999999613, 0.0001238329999999968, 0.00012413899999999534, 0.0001235559999999969, 0.00012366600000000144]</msg>
<status status="PASS" starttime="20201112 12:44:52.406" endtime="20201112 12:44:52.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.394" endtime="20201112 12:44:52.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:52.419" endtime="20201112 12:44:52.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:52.427" endtime="20201112 12:44:52.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.423" endtime="20201112 12:44:52.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.414" endtime="20201112 12:44:52.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.884" endtime="20201112 12:44:52.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.883" endtime="20201112 12:44:52.454"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:52.477" endtime="20201112 12:44:52.500"></status>
</kw>
<msg timestamp="20201112 12:44:52.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:52.473" endtime="20201112 12:44:52.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:52.503" endtime="20201112 12:44:52.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:52.510" endtime="20201112 12:44:52.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.466" endtime="20201112 12:44:52.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.460" endtime="20201112 12:44:52.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:52.533" endtime="20201112 12:44:52.886"></status>
</kw>
<msg timestamp="20201112 12:44:52.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041433097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041558292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:52.530" endtime="20201112 12:44:52.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041433097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041558292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:52.896" endtime="20201112 12:44:52.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:52.915" endtime="20201112 12:44:52.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.522" endtime="20201112 12:44:52.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.518" endtime="20201112 12:44:52.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:52.932" level="INFO">${RESULT} = [{'time': 0.041558292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012519499999999462, 'source_diff': 0.00012519499999999462}, {'time': 0.041689597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:52.923" endtime="20201112 12:44:52.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:52.965" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:52.935" endtime="20201112 12:44:52.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.976" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 12:44:52.974" endtime="20201112 12:44:52.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:52.982" level="INFO">VALUE: [0.00012519499999999462, 0.0001252779999999995, 0.0001244580000000009, 0.00012509700000000457, 0.00012465300000000235, 0.000124777999999999, 0.0001253199999999982, 0.0001252909999999996, 0.00012484699999999738, 0.00012509699999999763, 0.00012491699999999523, 0.00012469400000000158, 0.00012529199999999907, 0.00012518100000000199, 0.0001250000000000001, 0.0001244999999999996, 0.00012469400000000158, 0.00012470800000000115, 0.00012443100000000124, 0.00012441700000000167, 0.00012486199999999642, 0.00012465300000000235, 0.00012509699999999763, 0.00012509699999999763, 0.00012463899999999584, 0.0001246250000000032, 0.00012533399999999778, 0.00012490200000000312, 0.00012448600000000004, 0.00012488900000000303, 0.00012534699999999788, 0.0001252779999999995, 0.00012481899999999824, 0.0001253329999999983, 0.00012508400000000447, 0.00012520900000000112, 0.0001244999999999996, 0.0001245559999999979, 0.0001250689999999985, 0.0001250000000000001, 0.00012451400000000612, 0.00012441700000000167, 0.00012515199999999643, 0.00012522200000000122, 0.00012437500000000296, 0.00012480599999999814, 0.00012470800000000115, 0.00012525000000000036, 0.00012468100000000149, 0.00012451399999999918]</msg>
<status status="PASS" starttime="20201112 12:44:52.979" endtime="20201112 12:44:52.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.967" endtime="20201112 12:44:52.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:52.992" endtime="20201112 12:44:52.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:53.000" endtime="20201112 12:44:53.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.996" endtime="20201112 12:44:53.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.987" endtime="20201112 12:44:53.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.456" endtime="20201112 12:44:53.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:52.454" endtime="20201112 12:44:53.026"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:53.050" endtime="20201112 12:44:53.073"></status>
</kw>
<msg timestamp="20201112 12:44:53.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:53.046" endtime="20201112 12:44:53.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:53.076" endtime="20201112 12:44:53.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:53.083" endtime="20201112 12:44:53.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.039" endtime="20201112 12:44:53.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.033" endtime="20201112 12:44:53.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:53.107" endtime="20201112 12:44:53.461"></status>
</kw>
<msg timestamp="20201112 12:44:53.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041321903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041448069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:53.103" endtime="20201112 12:44:53.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041321903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041448069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:53.470" endtime="20201112 12:44:53.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:53.492" endtime="20201112 12:44:53.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.096" endtime="20201112 12:44:53.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.091" endtime="20201112 12:44:53.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:53.509" level="INFO">${RESULT} = [{'time': 0.041448069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000126165999999997, 'source_diff': 0.000126165999999997}, {'time': 0.041581472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:44:53.501" endtime="20201112 12:44:53.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:53.540" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:53.512" endtime="20201112 12:44:53.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.551" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 12:44:53.548" endtime="20201112 12:44:53.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.556" level="INFO">VALUE: [0.000126165999999997, 0.00012543000000000276, 0.0001263480000000053, 0.00012592999999999632, 0.00012618100000000299, 0.00012584799999999785, 0.00012541699999999573, 0.00012626400000000093, 0.00012594400000000283, 0.0001255559999999989, 0.0001263199999999992, 0.00012586199999999742, 0.00012604199999999982, 0.00012548600000000104, 0.00012604199999999982, 0.0001255000000000006, 0.0001257360000000013, 0.00012590299999999666, 0.00012554199999999932, 0.0001254030000000031, 0.0001261109999999982, 0.00012575000000000086, 0.00012618099999999605, 0.00012562499999999727, 0.00012576400000000043, 0.00012575000000000086, 0.00012558399999999803, 0.00012548600000000104, 0.00012565300000000335, 0.00012608299999999906, 0.0001260130000000012, 0.00012543100000000224, 0.00012544400000000233, 0.0001260000000000011, 0.0001262230000000017, 0.00012597200000000197, 0.00012543100000000224, 0.00012613900000000428, 0.00012608299999999906, 0.00012558400000000497, 0.00012611100000000514, 0.00012630600000000658, 0.00012608299999999906, 0.00012601400000000068, 0.00012637499999999802, 0.00012588900000000403, 0.00012597199999999503, 0.0001254030000000031, 0.00012587500000000446, 0.0001260000000000011]</msg>
<status status="PASS" starttime="20201112 12:44:53.553" endtime="20201112 12:44:53.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.542" endtime="20201112 12:44:53.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:53.566" endtime="20201112 12:44:53.568"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:53.574" endtime="20201112 12:44:53.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.570" endtime="20201112 12:44:53.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.561" endtime="20201112 12:44:53.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.029" endtime="20201112 12:44:53.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.027" endtime="20201112 12:44:53.600"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:53.623" endtime="20201112 12:44:53.645"></status>
</kw>
<msg timestamp="20201112 12:44:53.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:53.620" endtime="20201112 12:44:53.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:53.649" endtime="20201112 12:44:53.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:53.655" endtime="20201112 12:44:53.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.612" endtime="20201112 12:44:53.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.607" endtime="20201112 12:44:53.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:53.678" endtime="20201112 12:44:54.021"></status>
</kw>
<msg timestamp="20201112 12:44:54.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040979861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041106514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:53.675" endtime="20201112 12:44:54.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040979861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041106514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:54.030" endtime="20201112 12:44:54.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:54.049" endtime="20201112 12:44:54.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.668" endtime="20201112 12:44:54.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.663" endtime="20201112 12:44:54.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:54.068" level="INFO">${RESULT} = [{'time': 0.041106514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001266529999999974, 'source_diff': 0.0001266529999999974}, {'time': 0.041238944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:54.059" endtime="20201112 12:44:54.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:54.098" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:54.070" endtime="20201112 12:44:54.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.109" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 12:44:54.107" endtime="20201112 12:44:54.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.115" level="INFO">VALUE: [0.0001266529999999974, 0.00012665199999999793, 0.00012729200000000107, 0.0001269729999999955, 0.0001270000000000021, 0.0001267360000000023, 0.00012672200000000272, 0.00012697200000000297, 0.0001272780000000015, 0.00012647200000000247, 0.00012641699999999673, 0.000126569, 0.00012647200000000247, 0.0001272230000000027, 0.00012740299999999816, 0.00012666699999999698, 0.00012670800000000315, 0.00012705500000000092, 0.00012690299999999766, 0.000126778000000001, 0.00012694400000000383, 0.0001273200000000002, 0.00012666699999999698, 0.0001270560000000004, 0.00012666699999999698, 0.0001264030000000041, 0.00012687500000000546, 0.0001272360000000028, 0.00012675000000000186, 0.00012694400000000383, 0.0001268199999999997, 0.0001269729999999955, 0.0001272360000000028, 0.00012704200000000082, 0.00012723599999999585, 0.00012731900000000074, 0.00012658299999999956, 0.00012695799999999646, 0.00012736099999999945, 0.00012680500000000067, 0.00012731900000000074, 0.00012718099999999705, 0.00012724999999999542, 0.00012666699999999698, 0.00012651399999999424, 0.00012670800000000315, 0.00012651400000000118, 0.00012736099999999945, 0.00012716700000000442, 0.00012656999999999946]</msg>
<status status="PASS" starttime="20201112 12:44:54.112" endtime="20201112 12:44:54.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.099" endtime="20201112 12:44:54.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:54.125" endtime="20201112 12:44:54.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:54.133" endtime="20201112 12:44:54.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.129" endtime="20201112 12:44:54.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.120" endtime="20201112 12:44:54.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.602" endtime="20201112 12:44:54.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.601" endtime="20201112 12:44:54.159"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:54.182" endtime="20201112 12:44:54.202"></status>
</kw>
<msg timestamp="20201112 12:44:54.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:54.178" endtime="20201112 12:44:54.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:54.206" endtime="20201112 12:44:54.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:54.212" endtime="20201112 12:44:54.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.171" endtime="20201112 12:44:54.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.165" endtime="20201112 12:44:54.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:54.236" endtime="20201112 12:44:54.578"></status>
</kw>
<msg timestamp="20201112 12:44:54.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040638458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040766139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:54.232" endtime="20201112 12:44:54.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040638458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040766139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:54.587" endtime="20201112 12:44:54.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:54.606" endtime="20201112 12:44:54.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.225" endtime="20201112 12:44:54.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.220" endtime="20201112 12:44:54.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:54.625" level="INFO">${RESULT} = [{'time': 0.040766139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012768099999999755, 'source_diff': 0.00012768099999999755}, {'time': 0.040904569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:54.616" endtime="20201112 12:44:54.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:54.654" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:54.627" endtime="20201112 12:44:54.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.665" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 12:44:54.663" endtime="20201112 12:44:54.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.671" level="INFO">VALUE: [0.00012768099999999755, 0.00012762499999999927, 0.00012840299999999916, 0.00012770800000000415, 0.00012801399999999574, 0.00012758300000000056, 0.00012752700000000228, 0.00012773599999999635, 0.0001278200000000007, 0.0001279439999999979, 0.0001278879999999996, 0.00012770800000000415, 0.0001278889999999991, 0.00012786099999999995, 0.0001274439999999974, 0.00012823599999999685, 0.0001275409999999949, 0.00012836100000000045, 0.00012837500000000002, 0.00012773599999999635, 0.00012822299999999676, 0.00012802800000000225, 0.00012742999999999782, 0.00012772199999999678, 0.00012767999999999807, 0.00012840199999999968, 0.00012806999999999402, 0.00012758400000000003, 0.00012813899999999934, 0.00012770900000000363, 0.00012804200000000182, 0.00012812499999999977, 0.00012754200000000132, 0.00012829200000000207, 0.0001280000000000031, 0.0001279309999999978, 0.00012751400000000218, 0.00012808400000000053, 0.00012772200000000372, 0.00012770800000000415, 0.00012780600000000114, 0.00012813899999999934, 0.0001274580000000039, 0.00012740199999999868, 0.00012804200000000182, 0.00012801400000000268, 0.0001280690000000015, 0.00012773599999999635, 0.00012751399999999524, 0.00012754100000000185]</msg>
<status status="PASS" starttime="20201112 12:44:54.668" endtime="20201112 12:44:54.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.656" endtime="20201112 12:44:54.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:54.680" endtime="20201112 12:44:54.683"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:54.688" endtime="20201112 12:44:54.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.684" endtime="20201112 12:44:54.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.675" endtime="20201112 12:44:54.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.161" endtime="20201112 12:44:54.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.160" endtime="20201112 12:44:54.715"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:54.739" endtime="20201112 12:44:54.760"></status>
</kw>
<msg timestamp="20201112 12:44:54.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:54.735" endtime="20201112 12:44:54.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:54.763" endtime="20201112 12:44:54.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:54.769" endtime="20201112 12:44:54.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.727" endtime="20201112 12:44:54.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.722" endtime="20201112 12:44:54.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:54.793" endtime="20201112 12:44:55.132"></status>
</kw>
<msg timestamp="20201112 12:44:55.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042836611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042966403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:54.789" endtime="20201112 12:44:55.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:55.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042836611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042966403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:55.141" endtime="20201112 12:44:55.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:55.159" endtime="20201112 12:44:55.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.782" endtime="20201112 12:44:55.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.777" endtime="20201112 12:44:55.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:55.178" level="INFO">${RESULT} = [{'time': 0.042966403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012979200000000357, 'source_diff': 0.00012979200000000357}, {'time': 0.043105722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:55.169" endtime="20201112 12:44:55.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:55.210" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:55.180" endtime="20201112 12:44:55.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:55.221" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 12:44:55.219" endtime="20201112 12:44:55.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:55.226" level="INFO">VALUE: [0.00012979200000000357, 0.00012845799999999796, 0.00012924999999999742, 0.00012920899999999819, 0.00012873599999999735, 0.0001293189999999958, 0.00012907000000000196, 0.00012894499999999837, 0.00012869499999999812, 0.00012883400000000128, 0.00012892999999999932, 0.00012851400000000318, 0.00012851400000000318, 0.0001285000000000036, 0.00012872199999999778, 0.00012842999999999882, 0.00012863899999999984, 0.00012930499999999623, 0.0001288330000000018, 0.00012918100000000599, 0.00012908299999999512, 0.00012936100000000145, 0.00012843100000000524, 0.00012884800000000085, 0.000128569000000002, 0.00012881900000000224, 0.00012879199999999563, 0.0001289859999999976, 0.00012883299999999487, 0.00012862500000000027, 0.00012925000000000436, 0.00012844400000000533, 0.00012905599999999545, 0.0001288330000000018, 0.0001288330000000018, 0.00012877799999999606, 0.00012936100000000145, 0.00012854200000000232, 0.0001285980000000006, 0.00012858300000000156, 0.00012854200000000232, 0.00012922199999999828, 0.0001288200000000017, 0.00012937499999999408, 0.00012836100000000045, 0.00012874999999999692, 0.00012874999999999692, 0.00012868099999999855, 0.0001285000000000036, 0.00012930600000000264]</msg>
<status status="PASS" starttime="20201112 12:44:55.223" endtime="20201112 12:44:55.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.212" endtime="20201112 12:44:55.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:55.236" endtime="20201112 12:44:55.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:55.244" endtime="20201112 12:44:55.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.240" endtime="20201112 12:44:55.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.231" endtime="20201112 12:44:55.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.717" endtime="20201112 12:44:55.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.716" endtime="20201112 12:44:55.270"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:55.293" endtime="20201112 12:44:55.313"></status>
</kw>
<msg timestamp="20201112 12:44:55.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:55.289" endtime="20201112 12:44:55.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:55.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:55.316" endtime="20201112 12:44:55.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:55.323" endtime="20201112 12:44:55.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.282" endtime="20201112 12:44:55.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.276" endtime="20201112 12:44:55.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:55.346" endtime="20201112 12:44:55.697"></status>
</kw>
<msg timestamp="20201112 12:44:55.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04035125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040480681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:55.343" endtime="20201112 12:44:55.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:55.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04035125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040480681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:55.706" endtime="20201112 12:44:55.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:55.725" endtime="20201112 12:44:55.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.335" endtime="20201112 12:44:55.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.331" endtime="20201112 12:44:55.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:55.742" level="INFO">${RESULT} = [{'time': 0.040480681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001294309999999993, 'source_diff': 0.0001294309999999993}, {'time': 0.040618125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:44:55.733" endtime="20201112 12:44:55.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:55.773" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:55.744" endtime="20201112 12:44:55.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:55.784" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 12:44:55.782" endtime="20201112 12:44:55.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:55.789" level="INFO">VALUE: [0.0001294309999999993, 0.00013022199999999928, 0.00012949999999999767, 0.00013012500000000177, 0.0001300279999999973, 0.00013034700000000288, 0.00012975000000000486, 0.00013037499999999508, 0.00013013900000000134, 0.00013037500000000202, 0.00013001399999999774, 0.00013044499999999987, 0.00012941600000000025, 0.00012963800000000136, 0.00012963900000000084, 0.00012986200000000142, 0.00013013900000000134, 0.00012942999999999982, 0.00012957000000000246, 0.00012993000000000032, 0.00012945799999999896, 0.0001293890000000006, 0.0001301110000000022, 0.00013033399999999584, 0.00012990300000000066, 0.0001296660000000005, 0.00012947199999999853, 0.00013036100000000245, 0.00012999999999999817, 0.00012986200000000142, 0.00012999999999999817, 0.00012997199999999903, 0.00012962499999999433, 0.0001300969999999957, 0.0001299859999999986, 0.00012977700000000453, 0.00012954199999999638, 0.00012984700000000238, 0.00012995799999999946, 0.00013043000000000082, 0.00012977700000000453, 0.00012958300000000256, 0.00012973599999999835, 0.00012954199999999638, 0.00012945900000000538, 0.00012991700000000023, 0.00012949999999999767, 0.00012952700000000428, 0.00013033299999999637, 0.00013012500000000177]</msg>
<status status="PASS" starttime="20201112 12:44:55.786" endtime="20201112 12:44:55.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.775" endtime="20201112 12:44:55.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:55.799" endtime="20201112 12:44:55.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:55.807" endtime="20201112 12:44:55.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.803" endtime="20201112 12:44:55.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.795" endtime="20201112 12:44:55.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.272" endtime="20201112 12:44:55.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.271" endtime="20201112 12:44:55.833"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:55.856" endtime="20201112 12:44:55.878"></status>
</kw>
<msg timestamp="20201112 12:44:55.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:55.853" endtime="20201112 12:44:55.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:55.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:55.882" endtime="20201112 12:44:55.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:55.888" endtime="20201112 12:44:55.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.846" endtime="20201112 12:44:55.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.840" endtime="20201112 12:44:55.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:55.911" endtime="20201112 12:44:56.264"></status>
</kw>
<msg timestamp="20201112 12:44:56.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040623167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040754167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:55.908" endtime="20201112 12:44:56.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040623167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040754167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:56.273" endtime="20201112 12:44:56.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:56.291" endtime="20201112 12:44:56.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.901" endtime="20201112 12:44:56.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.896" endtime="20201112 12:44:56.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:56.308" level="INFO">${RESULT} = [{'time': 0.040754167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013099999999999917, 'source_diff': 0.00013099999999999917}, {'time': 0.040893611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:56.300" endtime="20201112 12:44:56.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:56.340" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:56.311" endtime="20201112 12:44:56.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.351" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 12:44:56.349" endtime="20201112 12:44:56.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.356" level="INFO">VALUE: [0.00013099999999999917, 0.0001309440000000009, 0.00013106999999999702, 0.0001305839999999961, 0.0001311389999999954, 0.0001310980000000031, 0.00013056999999999652, 0.0001313890000000026, 0.00013106899999999755, 0.0001309440000000009, 0.00013123599999999985, 0.0001304440000000004, 0.00013058300000000356, 0.0001307639999999985, 0.00013073599999999935, 0.00013051399999999824, 0.00013119400000000114, 0.00013119500000000062, 0.00013137500000000302, 0.00013056999999999652, 0.0001305279999999978, 0.0001307639999999985, 0.00013102699999999884, 0.00013056899999999705, 0.00013112500000000277, 0.00013073599999999935, 0.00013087500000000252, 0.00013074999999999892, 0.00013137499999999608, 0.00013079199999999763, 0.00013084699999999644, 0.00013119500000000062, 0.0001311530000000019, 0.0001313479999999964, 0.00013095800000000046, 0.00013116700000000148, 0.000130472999999999, 0.0001305130000000057, 0.00013077799999999806, 0.00013062500000000227, 0.00013068000000000107, 0.00013134700000000388, 0.00013119400000000114, 0.00013106999999999702, 0.0001305980000000026, 0.00013079199999999763, 0.00013049999999999867, 0.00013068100000000055, 0.00013091700000000123, 0.00013101399999999874]</msg>
<status status="PASS" starttime="20201112 12:44:56.353" endtime="20201112 12:44:56.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.342" endtime="20201112 12:44:56.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:56.366" endtime="20201112 12:44:56.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:56.374" endtime="20201112 12:44:56.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.369" endtime="20201112 12:44:56.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.361" endtime="20201112 12:44:56.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.835" endtime="20201112 12:44:56.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:55.834" endtime="20201112 12:44:56.400"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:56.424" endtime="20201112 12:44:56.446"></status>
</kw>
<msg timestamp="20201112 12:44:56.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:56.420" endtime="20201112 12:44:56.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:56.450" endtime="20201112 12:44:56.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:56.456" endtime="20201112 12:44:56.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.413" endtime="20201112 12:44:56.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.407" endtime="20201112 12:44:56.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:56.479" endtime="20201112 12:44:56.830"></status>
</kw>
<msg timestamp="20201112 12:44:56.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041949861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042081958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:56.476" endtime="20201112 12:44:56.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041949861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042081958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:56.839" endtime="20201112 12:44:56.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:56.857" endtime="20201112 12:44:56.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.469" endtime="20201112 12:44:56.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.464" endtime="20201112 12:44:56.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:56.874" level="INFO">${RESULT} = [{'time': 0.042081958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013209700000000463, 'source_diff': 0.00013209700000000463}, {'time': 0.042219333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:56.866" endtime="20201112 12:44:56.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:56.905" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:56.876" endtime="20201112 12:44:56.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.916" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 12:44:56.914" endtime="20201112 12:44:56.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.922" level="INFO">VALUE: [0.00013209700000000463, 0.00013138899999999565, 0.00013206899999999855, 0.00013219499999999468, 0.00013234800000000435, 0.00013173699999999983, 0.0001317639999999995, 0.0001319169999999953, 0.00013174999999999992, 0.00013180600000000514, 0.00013184699999999744, 0.0001320969999999977, 0.0001317639999999995, 0.00013192999999999538, 0.00013207000000000496, 0.00013219500000000162, 0.0001322770000000001, 0.00013151399999999924, 0.0001315279999999988, 0.00013211099999999726, 0.00013183400000000428, 0.00013141600000000225, 0.0001317639999999995, 0.00013158299999999762, 0.0001318479999999969, 0.000131473, 0.0001321809999999951, 0.0001320839999999976, 0.00013149999999999967, 0.00013223600000000085, 0.0001319310000000018, 0.00013151399999999924, 0.00013215200000000343, 0.00013174999999999992, 0.00013151399999999924, 0.0001315409999999989, 0.0001315409999999989, 0.00013174999999999992, 0.00013142999999999488, 0.00013166599999999556, 0.0001317639999999995, 0.0001319440000000019, 0.0001319310000000018, 0.00013180600000000514, 0.000132264, 0.0001314860000000001, 0.00013179200000000557, 0.0001320409999999994, 0.0001323890000000036, 0.00013168000000000207]</msg>
<status status="PASS" starttime="20201112 12:44:56.919" endtime="20201112 12:44:56.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.907" endtime="20201112 12:44:56.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:56.984" endtime="20201112 12:44:56.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:56.992" endtime="20201112 12:44:57.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.988" endtime="20201112 12:44:57.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.980" endtime="20201112 12:44:57.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.402" endtime="20201112 12:44:57.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.401" endtime="20201112 12:44:57.019"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:57.041" endtime="20201112 12:44:57.063"></status>
</kw>
<msg timestamp="20201112 12:44:57.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:57.038" endtime="20201112 12:44:57.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:57.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:57.067" endtime="20201112 12:44:57.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:57.073" endtime="20201112 12:44:57.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.031" endtime="20201112 12:44:57.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.025" endtime="20201112 12:44:57.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:57.096" endtime="20201112 12:44:57.445"></status>
</kw>
<msg timestamp="20201112 12:44:57.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04044675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040579653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:57.093" endtime="20201112 12:44:57.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:57.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04044675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040579653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:57.455" endtime="20201112 12:44:57.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:57.473" endtime="20201112 12:44:57.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.085" endtime="20201112 12:44:57.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.081" endtime="20201112 12:44:57.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:57.490" level="INFO">${RESULT} = [{'time': 0.040579653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013290300000000366, 'source_diff': 0.00013290300000000366}, {'time': 0.040720111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:57.482" endtime="20201112 12:44:57.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:57.523" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:57.493" endtime="20201112 12:44:57.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:57.534" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 12:44:57.532" endtime="20201112 12:44:57.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:57.539" level="INFO">VALUE: [0.00013290300000000366, 0.00013290300000000366, 0.00013272299999999432, 0.00013248599999999416, 0.00013281999999999877, 0.00013251400000000024, 0.0001325269999999934, 0.00013337500000000502, 0.00013305499999999998, 0.00013266699999999604, 0.00013294500000000237, 0.0001325279999999998, 0.00013329100000000066, 0.0001332090000000022, 0.00013259700000000513, 0.0001333059999999997, 0.00013250000000000067, 0.00013261099999999776, 0.00013309799999999816, 0.00013266699999999604, 0.00013261200000000417, 0.00013262499999999733, 0.0001328059999999992, 0.0001329310000000028, 0.00013315299999999697, 0.00013306899999999955, 0.00013306899999999955, 0.00013344500000000287, 0.00013334699999999894, 0.00013250000000000067, 0.00013338899999999765, 0.00013279100000000016, 0.00013247200000000153, 0.00013305599999999945, 0.0001328890000000041, 0.00013245799999999502, 0.00013308299999999912, 0.00013305599999999945, 0.000133264000000001, 0.0001327080000000022, 0.00013323599999999491, 0.0001332080000000027, 0.0001332090000000022, 0.00013281999999999877, 0.00013334700000000588, 0.00013343099999999636, 0.0001332080000000027, 0.00013297299999999457, 0.00013262499999999733, 0.00013288899999999715]</msg>
<status status="PASS" starttime="20201112 12:44:57.536" endtime="20201112 12:44:57.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.525" endtime="20201112 12:44:57.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:57.549" endtime="20201112 12:44:57.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:57.557" endtime="20201112 12:44:57.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.553" endtime="20201112 12:44:57.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.544" endtime="20201112 12:44:57.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.021" endtime="20201112 12:44:57.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.020" endtime="20201112 12:44:57.583"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:57.606" endtime="20201112 12:44:57.629"></status>
</kw>
<msg timestamp="20201112 12:44:57.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:57.603" endtime="20201112 12:44:57.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:57.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:57.632" endtime="20201112 12:44:57.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:57.638" endtime="20201112 12:44:57.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.595" endtime="20201112 12:44:57.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.590" endtime="20201112 12:44:57.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:57.661" endtime="20201112 12:44:58.013"></status>
</kw>
<msg timestamp="20201112 12:44:58.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040677472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040811125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:57.658" endtime="20201112 12:44:58.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040677472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040811125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:58.022" endtime="20201112 12:44:58.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:58.041" endtime="20201112 12:44:58.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.651" endtime="20201112 12:44:58.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.646" endtime="20201112 12:44:58.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:58.058" level="INFO">${RESULT} = [{'time': 0.040811125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013365299999999747, 'source_diff': 0.00013365299999999747}, {'time': 0.040951639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:58.049" endtime="20201112 12:44:58.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:58.088" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:58.060" endtime="20201112 12:44:58.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.100" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 12:44:58.097" endtime="20201112 12:44:58.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.106" level="INFO">VALUE: [0.00013365299999999747, 0.00013348599999999516, 0.00013384800000000585, 0.0001341519999999985, 0.000133473000000002, 0.00013355599999999995, 0.00013437499999999908, 0.00013344499999999593, 0.00013365299999999747, 0.00013394500000000337, 0.0001334169999999968, 0.00013361099999999876, 0.00013411099999999926, 0.00013440199999999874, 0.00013390199999999824, 0.00013433300000000037, 0.00013356999999999952, 0.0001336660000000045, 0.00013358299999999962, 0.000133860999999999, 0.00013372300000000226, 0.0001334719999999956, 0.00013345799999999602, 0.0001338060000000002, 0.0001339860000000026, 0.00013375000000000192, 0.00013415299999999797, 0.00013432000000000027, 0.00013411099999999926, 0.0001339860000000026, 0.00013365200000000493, 0.0001341389999999984, 0.00013429100000000166, 0.000133651999999998, 0.00013394500000000337, 0.0001338190000000003, 0.0001334719999999956, 0.00013416599999999806, 0.00013433300000000037, 0.00013388899999999815, 0.00013390199999999824, 0.0001337640000000015, 0.00013420799999999677, 0.0001339730000000025, 0.00013363799999999842, 0.00013437499999999908, 0.0001340280000000013, 0.00013391600000000475, 0.00013429100000000166, 0.00013413900000000534]</msg>
<status status="PASS" starttime="20201112 12:44:58.103" endtime="20201112 12:44:58.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.090" endtime="20201112 12:44:58.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:58.115" endtime="20201112 12:44:58.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:58.123" endtime="20201112 12:44:58.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.119" endtime="20201112 12:44:58.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.111" endtime="20201112 12:44:58.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.585" endtime="20201112 12:44:58.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:57.584" endtime="20201112 12:44:58.150"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:58.172" endtime="20201112 12:44:58.194"></status>
</kw>
<msg timestamp="20201112 12:44:58.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:58.169" endtime="20201112 12:44:58.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:58.198" endtime="20201112 12:44:58.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:58.204" endtime="20201112 12:44:58.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.162" endtime="20201112 12:44:58.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.156" endtime="20201112 12:44:58.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:58.227" endtime="20201112 12:44:58.580"></status>
</kw>
<msg timestamp="20201112 12:44:58.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040469181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040604236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:58.224" endtime="20201112 12:44:58.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040469181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040604236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:58.590" endtime="20201112 12:44:58.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:58.608" endtime="20201112 12:44:58.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.217" endtime="20201112 12:44:58.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.212" endtime="20201112 12:44:58.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:58.625" level="INFO">${RESULT} = [{'time': 0.040604236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013505500000000198, 'source_diff': 0.00013505500000000198}, {'time': 0.040748736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:58.616" endtime="20201112 12:44:58.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:58.655" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:58.627" endtime="20201112 12:44:58.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.666" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 12:44:58.664" endtime="20201112 12:44:58.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.671" level="INFO">VALUE: [0.00013505500000000198, 0.00013475000000000292, 0.00013466599999999856, 0.00013469499999999718, 0.00013488899999999915, 0.00013537500000000008, 0.000134861, 0.00013455600000000095, 0.00013445800000000396, 0.00013465299999999847, 0.00013443099999999736, 0.00013476399999999555, 0.00013504099999999547, 0.00013473700000000283, 0.0001353060000000017, 0.0001351389999999994, 0.00013462499999999933, 0.00013454200000000138, 0.00013465299999999847, 0.00013462499999999933, 0.00013479200000000163, 0.00013530500000000223, 0.00013534700000000094, 0.0001345139999999953, 0.00013537500000000008, 0.0001349860000000036, 0.00013490299999999872, 0.000134651999999999, 0.00013505499999999504, 0.00013505600000000145, 0.00013500000000000317, 0.00013469499999999718, 0.00013455500000000148, 0.00013550000000000367, 0.00013479200000000163, 0.00013479200000000163, 0.00013472200000000378, 0.00013516699999999854, 0.000135264000000003, 0.00013483400000000034, 0.0001345970000000002, 0.0001348190000000013, 0.0001348890000000061, 0.00013505500000000198, 0.00013490299999999872, 0.00013497200000000403, 0.00013455500000000148, 0.00013527800000000256, 0.00013479100000000216, 0.00013483400000000034]</msg>
<status status="PASS" starttime="20201112 12:44:58.668" endtime="20201112 12:44:58.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.657" endtime="20201112 12:44:58.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:58.682" endtime="20201112 12:44:58.685"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:58.690" endtime="20201112 12:44:58.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.686" endtime="20201112 12:44:58.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.678" endtime="20201112 12:44:58.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.152" endtime="20201112 12:44:58.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.151" endtime="20201112 12:44:58.716"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:58.739" endtime="20201112 12:44:58.761"></status>
</kw>
<msg timestamp="20201112 12:44:58.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:58.735" endtime="20201112 12:44:58.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:58.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:58.765" endtime="20201112 12:44:58.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:58.771" endtime="20201112 12:44:58.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.728" endtime="20201112 12:44:58.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.723" endtime="20201112 12:44:58.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:58.794" endtime="20201112 12:44:59.144"></status>
</kw>
<msg timestamp="20201112 12:44:59.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040662556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040798736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:58.791" endtime="20201112 12:44:59.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:59.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040662556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040798736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:59.153" endtime="20201112 12:44:59.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:59.172" endtime="20201112 12:44:59.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.784" endtime="20201112 12:44:59.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.779" endtime="20201112 12:44:59.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:59.189" level="INFO">${RESULT} = [{'time': 0.040798736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013617999999999963, 'source_diff': 0.00013617999999999963}, {'time': 0.040942139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:59.180" endtime="20201112 12:44:59.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:59.219" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:59.191" endtime="20201112 12:44:59.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:59.229" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 12:44:59.227" endtime="20201112 12:44:59.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:59.235" level="INFO">VALUE: [0.00013617999999999963, 0.00013611100000000126, 0.00013590200000000024, 0.0001354310000000053, 0.00013538899999999965, 0.000136264000000004, 0.0001361939999999992, 0.00013548599999999716, 0.00013641600000000031, 0.00013611100000000126, 0.00013562500000000033, 0.00013640200000000074, 0.0001363049999999963, 0.00013644499999999893, 0.00013605599999999551, 0.0001355840000000011, 0.00013580500000000273, 0.00013572299999999732, 0.00013561100000000076, 0.0001363190000000028, 0.00013604199999999594, 0.00013611200000000073, 0.0001364169999999998, 0.00013573599999999741, 0.00013566699999999904, 0.00013629200000000313, 0.00013573599999999741, 0.000135958999999998, 0.00013612500000000083, 0.00013583299999999493, 0.0001360970000000017, 0.00013541700000000573, 0.00013617999999999963, 0.00013544500000000487, 0.00013590200000000024, 0.0001363060000000027, 0.00013572199999999784, 0.00013572200000000478, 0.00013583300000000187, 0.00013638900000000065, 0.00013620799999999877, 0.0001364169999999998, 0.00013640300000000022, 0.00013638900000000065, 0.00013623599999999791, 0.00013612500000000083, 0.00013576399999999655, 0.00013587500000000058, 0.00013569499999999818, 0.00013640300000000022]</msg>
<status status="PASS" starttime="20201112 12:44:59.232" endtime="20201112 12:44:59.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.220" endtime="20201112 12:44:59.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:59.244" endtime="20201112 12:44:59.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:59.254" endtime="20201112 12:44:59.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.250" endtime="20201112 12:44:59.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.240" endtime="20201112 12:44:59.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.718" endtime="20201112 12:44:59.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:58.717" endtime="20201112 12:44:59.280"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:59.303" endtime="20201112 12:44:59.325"></status>
</kw>
<msg timestamp="20201112 12:44:59.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:59.299" endtime="20201112 12:44:59.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:59.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:59.329" endtime="20201112 12:44:59.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:59.335" endtime="20201112 12:44:59.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.292" endtime="20201112 12:44:59.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.287" endtime="20201112 12:44:59.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:59.358" endtime="20201112 12:44:59.709"></status>
</kw>
<msg timestamp="20201112 12:44:59.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040635861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040773097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:59.355" endtime="20201112 12:44:59.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:59.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040635861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040773097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:59.719" endtime="20201112 12:44:59.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:59.736" endtime="20201112 12:44:59.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.348" endtime="20201112 12:44:59.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.343" endtime="20201112 12:44:59.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:59.754" level="INFO">${RESULT} = [{'time': 0.040773097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013723599999999891, 'source_diff': 0.00013723599999999891}, {'time': 0.040915556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:44:59.745" endtime="20201112 12:44:59.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:44:59.786" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:59.756" endtime="20201112 12:44:59.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:59.797" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 12:44:59.794" endtime="20201112 12:44:59.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:59.803" level="INFO">VALUE: [0.00013723599999999891, 0.0001372919999999972, 0.00013725000000000542, 0.00013723700000000533, 0.00013733299999999643, 0.00013740300000000122, 0.0001370970000000027, 0.00013681899999999636, 0.00013720899999999925, 0.00013662500000000133, 0.00013674999999999798, 0.0001371810000000001, 0.00013744400000000045, 0.00013727800000000456, 0.00013747200000000653, 0.00013672199999999884, 0.00013679200000000363, 0.0001374170000000008, 0.00013677799999999712, 0.00013708399999999565, 0.00013740300000000122, 0.00013727800000000456, 0.00013737499999999514, 0.00013674999999999798, 0.00013722199999999934, 0.0001370840000000026, 0.0001370280000000043, 0.00013687500000000158, 0.00013691600000000081, 0.00013718000000000063, 0.00013672299999999832, 0.00013666600000000056, 0.00013736099999999557, 0.000136958999999999, 0.00013656900000000305, 0.0001373610000000025, 0.0001366809999999996, 0.00013738800000000218, 0.00013690300000000072, 0.00013708300000000312, 0.00013743100000000036, 0.0001369860000000056, 0.00013704099999999747, 0.0001366939999999997, 0.00013706900000000355, 0.0001365840000000021, 0.00013679099999999722, 0.00013654099999999697, 0.00013699999999999823, 0.0001368469999999955]</msg>
<status status="PASS" starttime="20201112 12:44:59.800" endtime="20201112 12:44:59.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.788" endtime="20201112 12:44:59.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:59.813" endtime="20201112 12:44:59.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:59.821" endtime="20201112 12:44:59.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.817" endtime="20201112 12:44:59.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.808" endtime="20201112 12:44:59.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.282" endtime="20201112 12:44:59.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.281" endtime="20201112 12:44:59.849"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:59.871" endtime="20201112 12:44:59.894"></status>
</kw>
<msg timestamp="20201112 12:44:59.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:59.868" endtime="20201112 12:44:59.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:59.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:44:59.897" endtime="20201112 12:44:59.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:59.903" endtime="20201112 12:44:59.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.861" endtime="20201112 12:44:59.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.855" endtime="20201112 12:44:59.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:59.926" endtime="20201112 12:45:00.266"></status>
</kw>
<msg timestamp="20201112 12:45:00.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041957111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042095125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:59.923" endtime="20201112 12:45:00.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041957111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042095125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:00.275" endtime="20201112 12:45:00.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:00.293" endtime="20201112 12:45:00.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.916" endtime="20201112 12:45:00.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.911" endtime="20201112 12:45:00.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:00.311" level="INFO">${RESULT} = [{'time': 0.042095125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001380139999999988, 'source_diff': 0.0001380139999999988}, {'time': 0.042241556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:45:00.302" endtime="20201112 12:45:00.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:45:00.341" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:00.313" endtime="20201112 12:45:00.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.352" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 12:45:00.350" endtime="20201112 12:45:00.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.357" level="INFO">VALUE: [0.0001380139999999988, 0.00013836200000000298, 0.0001378469999999965, 0.00013797299999999957, 0.0001380139999999988, 0.00013787500000000258, 0.00013752799999999787, 0.00013780599999999726, 0.0001380970000000037, 0.00013831899999999786, 0.0001379019999999953, 0.00013777799999999812, 0.00013809699999999675, 0.00013838800000000318, 0.00013790200000000225, 0.00013748599999999916, 0.0001376390000000019, 0.00013772299999999932, 0.00013769500000000018, 0.00013804099999999847, 0.00013783300000000387, 0.00013793000000000138, 0.00013772300000000626, 0.00013820800000000077, 0.000137652000000002, 0.00013745800000000002, 0.00013745800000000002, 0.00013781899999999736, 0.00013945800000000202, 0.00013748599999999916, 0.00013827799999999862, 0.0001374719999999996, 0.00013823599999999991, 0.000137861000000003, 0.0001375280000000048, 0.00013745800000000002, 0.00013824999999999948, 0.00013786099999999607, 0.00013786200000000248, 0.0001376249999999954, 0.00013816700000000154, 0.00013743000000000088, 0.0001374170000000008, 0.00013809699999999675, 0.00013837500000000308, 0.00013826399999999905, 0.00013797299999999957, 0.00013748599999999916, 0.00013813899999999546, 0.0001380139999999988]</msg>
<status status="PASS" starttime="20201112 12:45:00.354" endtime="20201112 12:45:00.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.343" endtime="20201112 12:45:00.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:00.367" endtime="20201112 12:45:00.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:00.375" endtime="20201112 12:45:00.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.371" endtime="20201112 12:45:00.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.362" endtime="20201112 12:45:00.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.851" endtime="20201112 12:45:00.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:59.849" endtime="20201112 12:45:00.401"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:00.425" endtime="20201112 12:45:00.446"></status>
</kw>
<msg timestamp="20201112 12:45:00.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:00.422" endtime="20201112 12:45:00.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:00.449" endtime="20201112 12:45:00.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:00.456" endtime="20201112 12:45:00.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.414" endtime="20201112 12:45:00.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.407" endtime="20201112 12:45:00.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:00.479" endtime="20201112 12:45:00.828"></status>
</kw>
<msg timestamp="20201112 12:45:00.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042067681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042206792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:00.476" endtime="20201112 12:45:00.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042067681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042206792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:00.837" endtime="20201112 12:45:00.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:00.856" endtime="20201112 12:45:00.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.468" endtime="20201112 12:45:00.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.464" endtime="20201112 12:45:00.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:00.873" level="INFO">${RESULT} = [{'time': 0.042206792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013911099999999732, 'source_diff': 0.00013911099999999732}, {'time': 0.042352236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:45:00.864" endtime="20201112 12:45:00.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:45:00.903" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:00.875" endtime="20201112 12:45:00.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.914" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 12:45:00.912" endtime="20201112 12:45:00.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:00.919" level="INFO">VALUE: [0.00013911099999999732, 0.00013870800000000127, 0.00013862500000000333, 0.00013855599999999801, 0.00013926400000000005, 0.00013887500000000358, 0.00013909799999999722, 0.00013906999999999808, 0.00013894500000000143, 0.00013945800000000202, 0.0001384720000000006, 0.00013873599999999348, 0.00013943100000000236, 0.0001385970000000042, 0.00013876399999999955, 0.00013923600000000091, 0.00013937500000000408, 0.0001388469999999975, 0.0001390139999999998, 0.00013927799999999962, 0.00013858299999999768, 0.00013920800000000177, 0.00013869500000000118, 0.00013862500000000333, 0.00013877799999999912, 0.00013943000000000288, 0.0001388339999999974, 0.00013872200000000084, 0.0001387919999999987, 0.00013876399999999955, 0.00013855600000000495, 0.00013905599999999851, 0.00013927799999999962, 0.00013870799999999434, 0.00013855500000000548, 0.00013865300000000247, 0.00013886099999999707, 0.0001389720000000011, 0.00013913899999999646, 0.00013937500000000408, 0.00013922200000000134, 0.00013861099999999682, 0.00013936099999999757, 0.0001388480000000039, 0.00013927799999999962, 0.00013933299999999843, 0.0001391810000000021, 0.00013844500000000093, 0.00013925000000000048, 0.00013856999999999758]</msg>
<status status="PASS" starttime="20201112 12:45:00.916" endtime="20201112 12:45:00.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.905" endtime="20201112 12:45:00.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:00.929" endtime="20201112 12:45:00.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:00.937" endtime="20201112 12:45:00.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.932" endtime="20201112 12:45:00.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.924" endtime="20201112 12:45:00.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.403" endtime="20201112 12:45:00.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.402" endtime="20201112 12:45:00.963"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:00.985" endtime="20201112 12:45:01.008"></status>
</kw>
<msg timestamp="20201112 12:45:01.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:00.982" endtime="20201112 12:45:01.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:01.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:01.012" endtime="20201112 12:45:01.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:01.018" endtime="20201112 12:45:01.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.975" endtime="20201112 12:45:01.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.969" endtime="20201112 12:45:01.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:01.043" endtime="20201112 12:45:01.388"></status>
</kw>
<msg timestamp="20201112 12:45:01.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040491014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040631042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:01.039" endtime="20201112 12:45:01.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:01.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040491014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040631042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:01.398" endtime="20201112 12:45:01.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:01.417" endtime="20201112 12:45:01.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.032" endtime="20201112 12:45:01.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.028" endtime="20201112 12:45:01.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:01.438" level="INFO">${RESULT} = [{'time': 0.040631042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014002800000000037, 'source_diff': 0.00014002800000000037}, {'time': 0.0407765, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:45:01.427" endtime="20201112 12:45:01.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:45:01.471" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:01.440" endtime="20201112 12:45:01.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:01.487" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 12:45:01.484" endtime="20201112 12:45:01.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:01.494" level="INFO">VALUE: [0.00014002800000000037, 0.00014025000000000148, 0.00013998600000000166, 0.00014026400000000105, 0.00013976400000000055, 0.00013975000000000098, 0.00013945799999999509, 0.00013976400000000055, 0.00014008299999999918, 0.00013987500000000458, 0.00013955599999999901, 0.00013998600000000166, 0.0001398889999999972, 0.0001403889999999977, 0.00013990300000000372, 0.000139959000000002, 0.00013948599999999423, 0.0001398889999999972, 0.0001398469999999985, 0.00014037500000000508, 0.00013976400000000055, 0.00013948700000000064, 0.00014025000000000148, 0.00013973600000000141, 0.00013995899999999506, 0.00013997300000000157, 0.00013994399999999602, 0.000140346999999999, 0.0001395270000000004, 0.00013990200000000425, 0.00013981999999999883, 0.000140346999999999, 0.0001398889999999972, 0.00014037499999999814, 0.00014041600000000432, 0.00013950000000000073, 0.0001402920000000002, 0.00014029100000000072, 0.00013994500000000243, 0.00014036099999999857, 0.00013987499999999764, 0.00013952799999999987, 0.00013991600000000382, 0.0001403889999999977, 0.0001405140000000013, 0.00013988900000000415, 0.00013986099999999807, 0.00014013899999999746, 0.00013973600000000141, 0.00013972200000000184]</msg>
<status status="PASS" starttime="20201112 12:45:01.490" endtime="20201112 12:45:01.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.474" endtime="20201112 12:45:01.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:01.505" endtime="20201112 12:45:01.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:01.516" endtime="20201112 12:45:01.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.510" endtime="20201112 12:45:01.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.500" endtime="20201112 12:45:01.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.965" endtime="20201112 12:45:01.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:00.964" endtime="20201112 12:45:01.543"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:01.570" endtime="20201112 12:45:01.591"></status>
</kw>
<msg timestamp="20201112 12:45:01.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:01.563" endtime="20201112 12:45:01.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:01.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:01.595" endtime="20201112 12:45:01.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:01.601" endtime="20201112 12:45:01.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.556" endtime="20201112 12:45:01.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.550" endtime="20201112 12:45:01.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:01.626" endtime="20201112 12:45:01.965"></status>
</kw>
<msg timestamp="20201112 12:45:01.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045489, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045630042, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:45:01.623" endtime="20201112 12:45:01.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:01.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045489, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045630042, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:45:01.974" endtime="20201112 12:45:01.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:01.992" endtime="20201112 12:45:01.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.614" endtime="20201112 12:45:01.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.610" endtime="20201112 12:45:01.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:02.009" level="INFO">${RESULT} = [{'time': 0.045630042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014104200000000094, 'source_diff': 0.00014104200000000094}, {'time': 0.0457775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:45:02.000" endtime="20201112 12:45:02.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:45:02.041" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:02.011" endtime="20201112 12:45:02.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:02.052" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 12:45:02.049" endtime="20201112 12:45:02.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:02.057" level="INFO">VALUE: [0.00014104200000000094, 0.00014102800000000137, 0.0001405970000000062, 0.00014048599999999523, 0.0001408469999999995, 0.00014108300000000018, 0.00014119399999999727, 0.0001409449999999965, 0.0001410690000000006, 0.00014157000000000058, 0.00014143000000000489, 0.00014109699999999975, 0.00014054200000000044, 0.00014088900000000515, 0.00014131900000000086, 0.000140652000000005, 0.00014065299999999753, 0.00014073600000000241, 0.00014066599999999763, 0.00014131900000000086, 0.00014104200000000094, 0.00014141599999999838, 0.0001412089999999963, 0.0001411799999999977, 0.00014179100000000222, 0.000141347, 0.00014108399999999965, 0.00014063899999999796, 0.00014076400000000155, 0.0001413339999999999, 0.0001411119999999988, 0.00014136099999999957, 0.00014050000000000173, 0.00014079100000000122, 0.0001413339999999999, 0.00014090300000000472, 0.0001407769999999947, 0.0001406669999999971, 0.00014093099999999692, 0.00014052800000000087, 0.00014122200000000334, 0.00014130599999999383, 0.00014097300000000257, 0.00014041699999999685, 0.00014141599999999838, 0.00014108399999999965, 0.0001412920000000012, 0.000141347, 0.00014058399999999915, 0.00014075000000000198]</msg>
<status status="PASS" starttime="20201112 12:45:02.054" endtime="20201112 12:45:02.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:02.043" endtime="20201112 12:45:02.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:02.073" endtime="20201112 12:45:02.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:02.081" endtime="20201112 12:45:02.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:02.076" endtime="20201112 12:45:02.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:02.068" endtime="20201112 12:45:02.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.545" endtime="20201112 12:45:02.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:01.544" endtime="20201112 12:45:02.107"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:02.129" endtime="20201112 12:45:02.152"></status>
</kw>
<msg timestamp="20201112 12:45:02.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:02.126" endtime="20201112 12:45:02.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:02.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:02.156" endtime="20201112 12:45:02.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:02.162" endtime="20201112 12:45:02.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:02.119" endtime="20201112 12:45:02.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:02.113" endtime="20201112 12:45:02.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:02.185" endtime="20201112 12:45:02.538"></status>
</kw>
<msg timestamp="20201112 12:45:02.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040349806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040491889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:02.182" endtime="20201112 12:45:02.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:02.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040349806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040491889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:02.547" endtime="20201112 12:45:02.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:02.566" endtime="20201112 12:45:02.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:02.175" endtime="20201112 12:45:02.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:02.170" endtime="20201112 12:45:02.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:02.583" level="INFO">${RESULT} = [{'time': 0.040491889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014208300000000118, 'source_diff': 0.00014208300000000118}, {'time': 0.040641347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:45:02.574" endtime="20201112 12:45:02.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:45:02.613" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:02.585" endtime="20201112 12:45:02.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:02.624" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 12:45:02.622" endtime="20201112 12:45:02.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:02.630" level="INFO">VALUE: [0.00014208300000000118, 0.0001418889999999992, 0.00014159799999999972, 0.00014190299999999878, 0.0001418889999999992, 0.00014173599999999648, 0.00014211100000000032, 0.00014187499999999964, 0.0001421940000000052, 0.00014170799999999734, 0.00014161099999999982, 0.00014165299999999853, 0.00014213899999999946, 0.00014200000000000323, 0.0001418470000000005, 0.0001415140000000023, 0.00014147199999999666, 0.0001419449999999975, 0.00014194399999999802, 0.00014227800000000262, 0.00014150000000000273, 0.00014234800000000047, 0.0001419449999999975, 0.00014236100000000057, 0.00014222300000000382, 0.0001422920000000022, 0.00014248700000000364, 0.00014195899999999706, 0.00014152799999999494, 0.00014195800000000453, 0.0001421799999999987, 0.0001417769999999957, 0.00014200000000000323, 0.00014202799999999544, 0.00014152800000000187, 0.00014220800000000478, 0.00014192999999999845, 0.00014216600000000607, 0.0001420140000000028, 0.00014145899999999656, 0.00014237500000000014, 0.00014229199999999526, 0.00014220799999999784, 0.00014215299999999903, 0.0001418050000000018, 0.00014195899999999706, 0.0001422089999999973, 0.00014230499999999535, 0.00014174999999999605, 0.0001419999999999963]</msg>
<status status="PASS" starttime="20201112 12:45:02.627" endtime="20201112 12:45:02.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:02.615" endtime="20201112 12:45:02.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:02.640" endtime="20201112 12:45:02.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:02.648" endtime="20201112 12:45:02.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:02.644" endtime="20201112 12:45:02.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:02.635" endtime="20201112 12:45:02.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:02.109" endtime="20201112 12:45:02.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:02.108" endtime="20201112 12:45:02.674"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:02.696" endtime="20201112 12:45:02.720"></status>
</kw>
<msg timestamp="20201112 12:45:02.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:02.693" endtime="20201112 12:45:02.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:02.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:02.723" endtime="20201112 12:45:02.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:02.729" endtime="20201112 12:45:02.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:02.686" endtime="20201112 12:45:02.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:02.680" endtime="20201112 12:45:02.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:02.753" endtime="20201112 12:45:03.104"></status>
</kw>
<msg timestamp="20201112 12:45:03.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040595292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040739639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:02.749" endtime="20201112 12:45:03.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040595292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040739639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:03.113" endtime="20201112 12:45:03.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:03.132" endtime="20201112 12:45:03.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:02.742" endtime="20201112 12:45:03.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:02.737" endtime="20201112 12:45:03.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:03.149" level="INFO">${RESULT} = [{'time': 0.040739639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000144347000000003, 'source_diff': 0.000144347000000003}, {'time': 0.040890056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:45:03.140" endtime="20201112 12:45:03.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:45:03.179" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:03.151" endtime="20201112 12:45:03.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.190" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 12:45:03.188" endtime="20201112 12:45:03.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.195" level="INFO">VALUE: [0.000144347000000003, 0.000142444999999998, 0.00014268099999999867, 0.0001431669999999996, 0.0001427219999999979, 0.00014254100000000297, 0.00014261100000000082, 0.00014301399999999687, 0.0001433890000000007, 0.00014270799999999834, 0.0001432089999999983, 0.00014280599999999533, 0.00014340300000000028, 0.00014331899999999592, 0.00014313900000000046, 0.0001428050000000028, 0.00014245799999999809, 0.0001430140000000038, 0.00014241699999999885, 0.000143347000000002, 0.0001431669999999996, 0.00014259700000000125, 0.00014266700000000604, 0.0001426799999999992, 0.0001433890000000007, 0.0001426250000000004, 0.000143347000000002, 0.00014305500000000304, 0.00014340300000000028, 0.00014295899999999806, 0.00014263899999999996, 0.0001431669999999996, 0.00014291699999999935, 0.000143347000000002, 0.0001433890000000007, 0.00014308400000000165, 0.0001425140000000033, 0.0001424999999999968, 0.0001432920000000032, 0.0001429999999999973, 0.00014308400000000165, 0.000142832999999995, 0.00014269399999999877, 0.0001428749999999937, 0.00014397199999999916, 0.00014261100000000082, 0.00014308300000000218, 0.00014319499999999874, 0.00014282000000000183, 0.00014298600000000466]</msg>
<status status="PASS" starttime="20201112 12:45:03.192" endtime="20201112 12:45:03.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.181" endtime="20201112 12:45:03.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:03.205" endtime="20201112 12:45:03.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:03.213" endtime="20201112 12:45:03.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.209" endtime="20201112 12:45:03.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.200" endtime="20201112 12:45:03.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:02.676" endtime="20201112 12:45:03.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:02.675" endtime="20201112 12:45:03.239"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:03.262" endtime="20201112 12:45:03.285"></status>
</kw>
<msg timestamp="20201112 12:45:03.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:03.258" endtime="20201112 12:45:03.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:03.288" endtime="20201112 12:45:03.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:03.294" endtime="20201112 12:45:03.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.251" endtime="20201112 12:45:03.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.246" endtime="20201112 12:45:03.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:03.318" endtime="20201112 12:45:03.670"></status>
</kw>
<msg timestamp="20201112 12:45:03.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040782889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040927347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:03.314" endtime="20201112 12:45:03.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040782889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040927347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:03.679" endtime="20201112 12:45:03.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:03.697" endtime="20201112 12:45:03.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.307" endtime="20201112 12:45:03.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.302" endtime="20201112 12:45:03.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:03.716" level="INFO">${RESULT} = [{'time': 0.040927347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014445800000000009, 'source_diff': 0.00014445800000000009}, {'time': 0.041076778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:45:03.707" endtime="20201112 12:45:03.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:45:03.746" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:03.718" endtime="20201112 12:45:03.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.757" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 12:45:03.754" endtime="20201112 12:45:03.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.762" level="INFO">VALUE: [0.00014445800000000009, 0.00014355600000000301, 0.00014419400000000027, 0.000144347000000003, 0.00014374999999999805, 0.00014402699999999796, 0.00014393000000000045, 0.00014359700000000225, 0.0001443890000000017, 0.00014355600000000301, 0.00014404100000000447, 0.00014391700000000035, 0.0001435140000000043, 0.00014443100000000042, 0.00014390300000000078, 0.00014429099999999778, 0.00014406899999999667, 0.00014412499999999495, 0.00014358399999999522, 0.0001438749999999947, 0.00014413900000000146, 0.0001440270000000049, 0.00014431899999999692, 0.00014374999999999805, 0.00014376400000000455, 0.0001441670000000006, 0.00014377700000000465, 0.00014432000000000333, 0.00014413900000000146, 0.000144445, 0.00014398599999999873, 0.00014386099999999513, 0.00014358299999999574, 0.0001441670000000006, 0.00014355600000000301, 0.00014340300000000028, 0.00014438899999999477, 0.00014363900000000096, 0.00014356899999999617, 0.00014348599999999823, 0.00014408300000000318, 0.00014363900000000096, 0.00014398600000000567, 0.00014348599999999823, 0.0001438890000000012, 0.00014512499999999595, 0.00014398599999999873, 0.00014422299999999888, 0.0001443890000000017, 0.000144041999999997]</msg>
<status status="PASS" starttime="20201112 12:45:03.759" endtime="20201112 12:45:03.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.748" endtime="20201112 12:45:03.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:03.772" endtime="20201112 12:45:03.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:03.780" endtime="20201112 12:45:03.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.776" endtime="20201112 12:45:03.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.767" endtime="20201112 12:45:03.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.241" endtime="20201112 12:45:03.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.240" endtime="20201112 12:45:03.806"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:03.829" endtime="20201112 12:45:03.852"></status>
</kw>
<msg timestamp="20201112 12:45:03.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:03.826" endtime="20201112 12:45:03.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:03.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:03.855" endtime="20201112 12:45:03.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:03.861" endtime="20201112 12:45:03.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.818" endtime="20201112 12:45:03.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.812" endtime="20201112 12:45:03.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:03.885" endtime="20201112 12:45:04.233"></status>
</kw>
<msg timestamp="20201112 12:45:04.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040791833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040937944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:03.881" endtime="20201112 12:45:04.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040791833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040937944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:04.242" endtime="20201112 12:45:04.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:04.260" endtime="20201112 12:45:04.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.874" endtime="20201112 12:45:04.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.870" endtime="20201112 12:45:04.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:04.279" level="INFO">${RESULT} = [{'time': 0.040937944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014611099999999738, 'source_diff': 0.00014611099999999738}, {'time': 0.041087403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:45:04.270" endtime="20201112 12:45:04.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:45:04.311" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:04.281" endtime="20201112 12:45:04.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.322" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 12:45:04.320" endtime="20201112 12:45:04.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.328" level="INFO">VALUE: [0.00014611099999999738, 0.0001446250000000024, 0.00014508300000000418, 0.00014511099999999638, 0.00014490300000000178, 0.000145041999999998, 0.0001445419999999975, 0.00014611100000000432, 0.00014487500000000264, 0.00014508300000000418, 0.00014509700000000375, 0.0001446800000000012, 0.00014481899999999742, 0.00014533399999999697, 0.00014515300000000203, 0.00014455599999999708, 0.0001448890000000022, 0.00014519400000000127, 0.00014507000000000408, 0.00014482000000000383, 0.00014505600000000451, 0.00014450000000000573, 0.00014484699999999656, 0.00014513900000000246, 0.0001447769999999987, 0.00014498599999999973, 0.00014513900000000246, 0.00014474999999999905, 0.0001446670000000011, 0.00014501399999999887, 0.00014484699999999656, 0.00014508299999999724, 0.00014469400000000077, 0.0001446659999999947, 0.00014507000000000408, 0.00014513899999999552, 0.00014526299999999964, 0.00014545800000000109, 0.00014470800000000034, 0.00014531899999999792, 0.00014448600000000617, 0.00014523599999999998, 0.0001446670000000011, 0.00014497299999999963, 0.00014469500000000024, 0.00014530599999999783, 0.00014502799999999844, 0.00014605599999999858, 0.000145347000000004, 0.00014465300000000153]</msg>
<status status="PASS" starttime="20201112 12:45:04.325" endtime="20201112 12:45:04.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.313" endtime="20201112 12:45:04.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:04.337" endtime="20201112 12:45:04.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:04.345" endtime="20201112 12:45:04.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.341" endtime="20201112 12:45:04.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.332" endtime="20201112 12:45:04.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.808" endtime="20201112 12:45:04.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:03.807" endtime="20201112 12:45:04.371"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:04.394" endtime="20201112 12:45:04.417"></status>
</kw>
<msg timestamp="20201112 12:45:04.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:04.391" endtime="20201112 12:45:04.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:04.420" endtime="20201112 12:45:04.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:04.427" endtime="20201112 12:45:04.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.383" endtime="20201112 12:45:04.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.378" endtime="20201112 12:45:04.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:04.450" endtime="20201112 12:45:04.793"></status>
</kw>
<msg timestamp="20201112 12:45:04.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040726, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040872125, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:45:04.446" endtime="20201112 12:45:04.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040726, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040872125, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:45:04.802" endtime="20201112 12:45:04.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:04.821" endtime="20201112 12:45:04.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.439" endtime="20201112 12:45:04.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.435" endtime="20201112 12:45:04.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:04.838" level="INFO">${RESULT} = [{'time': 0.040872125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001461250000000039, 'source_diff': 0.0001461250000000039}, {'time': 0.041023597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:45:04.829" endtime="20201112 12:45:04.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:45:04.869" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:04.840" endtime="20201112 12:45:04.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.880" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 12:45:04.878" endtime="20201112 12:45:04.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.885" level="INFO">VALUE: [0.0001461250000000039, 0.0001456800000000022, 0.0001460000000000003, 0.00014643099999999548, 0.0001458749999999967, 0.00014606899999999867, 0.00014697300000000163, 0.0001460000000000003, 0.00014545900000000056, 0.00014551399999999937, 0.00014598600000000073, 0.00014579099999999928, 0.0001459580000000016, 0.00014575000000000005, 0.00014568099999999473, 0.00014598600000000073, 0.00014584699999999756, 0.00014568100000000167, 0.0001463749999999972, 0.00014579100000000622, 0.00014626400000000012, 0.00014636100000000457, 0.00014591700000000235, 0.00014563900000000296, 0.00014630600000000576, 0.00014608400000000465, 0.00014638899999999677, 0.00014623700000000045, 0.00014662499999999745, 0.0001457079999999944, 0.0001457220000000009, 0.00014558399999999722, 0.00014643100000000242, 0.00014588899999999627, 0.00014548600000000023, 0.00014634699999999806, 0.00014569400000000177, 0.00014612499999999695, 0.00014548600000000023, 0.00014605599999999858, 0.00014641599999999644, 0.00014572300000000038, 0.00014623599999999404, 0.00014593000000000245, 0.0001456670000000021, 0.0001463879999999973, 0.00014561100000000382, 0.000146041999999999, 0.00014556899999999817, 0.00014629199999999926]</msg>
<status status="PASS" starttime="20201112 12:45:04.882" endtime="20201112 12:45:04.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.871" endtime="20201112 12:45:04.888"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:04.894" endtime="20201112 12:45:04.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:04.903" endtime="20201112 12:45:04.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.898" endtime="20201112 12:45:04.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.890" endtime="20201112 12:45:04.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.373" endtime="20201112 12:45:04.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.372" endtime="20201112 12:45:04.929"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:04.951" endtime="20201112 12:45:04.972"></status>
</kw>
<msg timestamp="20201112 12:45:04.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:04.948" endtime="20201112 12:45:04.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:04.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:04.976" endtime="20201112 12:45:04.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:04.982" endtime="20201112 12:45:04.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.940" endtime="20201112 12:45:04.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.935" endtime="20201112 12:45:04.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:05.005" endtime="20201112 12:45:05.343"></status>
</kw>
<msg timestamp="20201112 12:45:05.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040100069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040247222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:05.002" endtime="20201112 12:45:05.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:05.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040100069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040247222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:05.352" endtime="20201112 12:45:05.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:05.371" endtime="20201112 12:45:05.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.995" endtime="20201112 12:45:05.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.990" endtime="20201112 12:45:05.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:05.388" level="INFO">${RESULT} = [{'time': 0.040247222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001471529999999971, 'source_diff': 0.0001471529999999971}, {'time': 0.040400681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:45:05.379" endtime="20201112 12:45:05.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:45:05.419" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:05.390" endtime="20201112 12:45:05.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:05.430" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 12:45:05.428" endtime="20201112 12:45:05.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:05.435" level="INFO">VALUE: [0.0001471529999999971, 0.0001471670000000036, 0.00014695799999999565, 0.00014658300000000568, 0.00014669400000000277, 0.00014718100000000317, 0.00014688899999999727, 0.00014651400000000037, 0.00014702800000000044, 0.00014675000000000105, 0.0001468199999999989, 0.0001465549999999996, 0.00014731899999999992, 0.00014738899999999777, 0.00014668100000000267, 0.00014677800000000019, 0.00014751400000000137, 0.000147429999999997, 0.0001470000000000013, 0.0001465419999999995, 0.0001465000000000008, 0.0001467079999999954, 0.00014795900000000306, 0.00014656899999999917, 0.00014684699999999856, 0.00014729100000000078, 0.00014707000000000608, 0.00014725000000000155, 0.0001470000000000013, 0.00014647300000000113, 0.00014699999999999436, 0.00014780600000000033, 0.00014694400000000302, 0.00014663899999999702, 0.00014684800000000497, 0.00014713899999999752, 0.00014701400000000087, 0.00014658399999999822, 0.00014676399999999368, 0.00014736099999999863, 0.00014649999999999386, 0.00014709799999999829, 0.00014701400000000087, 0.00014673600000000148, 0.0001465409999999931, 0.0001467499999999941, 0.00014680499999999985, 0.00014708299999999924, 0.0001471529999999971, 0.00014647199999999472]</msg>
<status status="PASS" starttime="20201112 12:45:05.432" endtime="20201112 12:45:05.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:05.421" endtime="20201112 12:45:05.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:05.445" endtime="20201112 12:45:05.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:05.453" endtime="20201112 12:45:05.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:05.448" endtime="20201112 12:45:05.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:05.440" endtime="20201112 12:45:05.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.931" endtime="20201112 12:45:05.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:04.929" endtime="20201112 12:45:05.479"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:05.501" endtime="20201112 12:45:05.523"></status>
</kw>
<msg timestamp="20201112 12:45:05.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:05.498" endtime="20201112 12:45:05.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:05.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:05.526" endtime="20201112 12:45:05.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:05.532" endtime="20201112 12:45:05.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:05.491" endtime="20201112 12:45:05.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:05.485" endtime="20201112 12:45:05.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:05.555" endtime="20201112 12:45:05.894"></status>
</kw>
<msg timestamp="20201112 12:45:05.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040188181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040336375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:05.552" endtime="20201112 12:45:05.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:05.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040188181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040336375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:05.903" endtime="20201112 12:45:05.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:05.922" endtime="20201112 12:45:05.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:05.545" endtime="20201112 12:45:05.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:05.540" endtime="20201112 12:45:05.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:05.939" level="INFO">${RESULT} = [{'time': 0.040336375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014819399999999733, 'source_diff': 0.00014819399999999733}, {'time': 0.040494861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:45:05.930" endtime="20201112 12:45:05.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:45:05.970" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:05.941" endtime="20201112 12:45:05.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:05.981" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 12:45:05.979" endtime="20201112 12:45:05.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:05.986" level="INFO">VALUE: [0.00014819399999999733, 0.00014748600000000223, 0.00014772199999999597, 0.0001483330000000005, 0.0001483749999999992, 0.00014775000000000205, 0.00014817999999999776, 0.00014752800000000094, 0.00014818099999999723, 0.00014820899999999637, 0.0001481250000000059, 0.0001482220000000034, 0.00014790300000000478, 0.0001477090000000028, 0.00014801400000000187, 0.00014838899999999877, 0.00014791700000000435, 0.00014755600000000008, 0.00014747199999999572, 0.000147833, 0.0001479450000000035, 0.00014797199999999622, 0.00014773600000000248, 0.00014786099999999913, 0.0001476659999999977, 0.00014845799999999715, 0.00014776399999999468, 0.00014748600000000223, 0.000148445000000004, 0.000148042000000001, 0.00014784699999999956, 0.00014787500000000564, 0.00014758299999999974, 0.0001481949999999968, 0.00014801299999999545, 0.00014845799999999715, 0.00014804100000000153, 0.0001484580000000041, 0.0001478749999999987, 0.00014786100000000607, 0.00014762499999999845, 0.0001481670000000046, 0.00014762499999999845, 0.00014763899999999802, 0.0001478749999999987, 0.0001484859999999963, 0.0001477090000000028, 0.00014812499999999895, 0.00014776400000000162, 0.0001478890000000052]</msg>
<status status="PASS" starttime="20201112 12:45:05.983" endtime="20201112 12:45:05.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:05.972" endtime="20201112 12:45:05.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:05.995" endtime="20201112 12:45:05.998"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:06.004" endtime="20201112 12:45:06.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:05.999" endtime="20201112 12:45:06.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:05.991" endtime="20201112 12:45:06.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:05.481" endtime="20201112 12:45:06.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:05.480" endtime="20201112 12:45:06.030"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:06.052" endtime="20201112 12:45:06.074"></status>
</kw>
<msg timestamp="20201112 12:45:06.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:06.049" endtime="20201112 12:45:06.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:06.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:06.077" endtime="20201112 12:45:06.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:06.083" endtime="20201112 12:45:06.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.042" endtime="20201112 12:45:06.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.036" endtime="20201112 12:45:06.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:06.106" endtime="20201112 12:45:06.446"></status>
</kw>
<msg timestamp="20201112 12:45:06.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040304417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040453153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:06.103" endtime="20201112 12:45:06.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:06.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040304417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040453153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:06.455" endtime="20201112 12:45:06.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:06.473" endtime="20201112 12:45:06.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.096" endtime="20201112 12:45:06.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.092" endtime="20201112 12:45:06.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:06.490" level="INFO">${RESULT} = [{'time': 0.040453153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014873599999999654, 'source_diff': 0.00014873599999999654}, {'time': 0.040610667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:45:06.481" endtime="20201112 12:45:06.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:45:06.523" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:06.492" endtime="20201112 12:45:06.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:06.533" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 12:45:06.531" endtime="20201112 12:45:06.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:06.539" level="INFO">VALUE: [0.00014873599999999654, 0.0001490000000000033, 0.00014918100000000517, 0.00014877800000000219, 0.000149042000000002, 0.0001493750000000002, 0.00014891599999999894, 0.00014875000000000305, 0.00014926400000000312, 0.00014849999999999586, 0.00014855600000000108, 0.0001487079999999974, 0.00014872199999999697, 0.00014877800000000219, 0.00014913899999999952, 0.00014873700000000295, 0.00014872199999999697, 0.0001485970000000003, 0.00014938899999999977, 0.00014907000000000115, 0.00014883400000000047, 0.000148833000000001, 0.0001486529999999986, 0.0001491800000000057, 0.0001489450000000045, 0.00014961100000000088, 0.00014909800000000029, 0.00014875000000000305, 0.00014877699999999577, 0.00014867999999999826, 0.00014940199999999987, 0.00014873600000000348, 0.00014926399999999618, 0.00014912499999999995, 0.0001490970000000008, 0.000148833000000001, 0.0001489580000000046, 0.00014847199999999672, 0.00014901400000000287, 0.00014917999999999876, 0.00014886100000000013, 0.0001494580000000051, 0.00014927699999999627, 0.0001486120000000063, 0.00014865300000000553, 0.00014902700000000296, 0.0001490000000000033, 0.00014863899999999902, 0.00014861099999999988, 0.00014902800000000244]</msg>
<status status="PASS" starttime="20201112 12:45:06.536" endtime="20201112 12:45:06.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.524" endtime="20201112 12:45:06.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:06.548" endtime="20201112 12:45:06.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:06.556" endtime="20201112 12:45:06.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.552" endtime="20201112 12:45:06.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.544" endtime="20201112 12:45:06.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.032" endtime="20201112 12:45:06.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.031" endtime="20201112 12:45:06.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.707" endtime="20201112 12:45:06.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:06.593" endtime="20201112 12:45:06.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.589" endtime="20201112 12:45:06.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.586" endtime="20201112 12:45:06.617"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:44:09.579" endtime="20201112 12:45:06.618" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:43:10.877" endtime="20201112 12:45:06.629"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:45:06.771" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:45:06.786" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:45:08.712" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:45:06.767" endtime="20201112 12:45:08.713"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:45:08.719" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:45:08.716" endtime="20201112 12:45:08.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.764" endtime="20201112 12:45:08.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:08.726" endtime="20201112 12:45:09.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:08.723" endtime="20201112 12:45:09.059"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:09.088" endtime="20201112 12:45:09.104"></status>
</kw>
<msg timestamp="20201112 12:45:09.106" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:09.085" endtime="20201112 12:45:09.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:09.112" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:09.108" endtime="20201112 12:45:09.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:45:09.119" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:45:09.114" endtime="20201112 12:45:09.119"></status>
</kw>
<status status="FAIL" starttime="20201112 12:45:09.079" endtime="20201112 12:45:09.121"></status>
</kw>
<status status="FAIL" starttime="20201112 12:45:09.073" endtime="20201112 12:45:09.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.071" endtime="20201112 12:45:09.123"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:45:09.131" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:45:09.130" endtime="20201112 12:45:09.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.125" endtime="20201112 12:45:09.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.069" endtime="20201112 12:45:09.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.067" endtime="20201112 12:45:09.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:09.137" endtime="20201112 12:45:09.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.064" endtime="20201112 12:45:09.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:09.144" endtime="20201112 12:45:09.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.060" endtime="20201112 12:45:09.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:06.761" endtime="20201112 12:45:09.150"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:09.165" endtime="20201112 12:45:09.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.161" endtime="20201112 12:45:09.188"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:09.221" endtime="20201112 12:45:09.236"></status>
</kw>
<msg timestamp="20201112 12:45:09.238" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:09.218" endtime="20201112 12:45:09.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:09.244" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:45:09.240" endtime="20201112 12:45:09.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:45:09.251" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:45:09.246" endtime="20201112 12:45:09.251"></status>
</kw>
<status status="FAIL" starttime="20201112 12:45:09.211" endtime="20201112 12:45:09.253"></status>
</kw>
<status status="FAIL" starttime="20201112 12:45:09.204" endtime="20201112 12:45:09.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.202" endtime="20201112 12:45:09.255"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:45:09.263" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:45:09.262" endtime="20201112 12:45:09.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.257" endtime="20201112 12:45:09.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.200" endtime="20201112 12:45:09.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.198" endtime="20201112 12:45:09.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:09.267" endtime="20201112 12:45:09.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.194" endtime="20201112 12:45:09.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.190" endtime="20201112 12:45:09.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.158" endtime="20201112 12:45:09.274"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:45:09.282" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:09.305" endtime="20201112 12:45:11.418"></status>
</kw>
<msg timestamp="20201112 12:45:11.420" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 661209, 'wakeups': [671248, 681248, 691248, 701248, 711248, 721248, 73...</msg>
<status status="PASS" starttime="20201112 12:45:09.302" endtime="20201112 12:45:11.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.427" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 661209, 'wakeups': [671248, 681248, 691248, 701248, 711248, 721248, 73...</msg>
<status status="PASS" starttime="20201112 12:45:11.422" endtime="20201112 12:45:11.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:11.430" endtime="20201112 12:45:11.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.292" endtime="20201112 12:45:11.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.287" endtime="20201112 12:45:11.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:11.443" level="INFO">${RESULT} = {'timer-count': 1, 'wakeups': [671248, 681248, 691248, 701248, 711248, 721248, 731248, 741248, 751248, 761247, 771248, 781248, 791248, 801248, 811248, 821248, 831248, 841248, 851248, 861248, 871247, 8...</msg>
<status status="PASS" starttime="20201112 12:45:11.438" endtime="20201112 12:45:11.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.453" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:11.451" endtime="20201112 12:45:11.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.457" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:11.455" endtime="20201112 12:45:11.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.445" endtime="20201112 12:45:11.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.470" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:45:11.467" endtime="20201112 12:45:11.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.474" level="INFO">VALUE: 661209</msg>
<status status="PASS" starttime="20201112 12:45:11.472" endtime="20201112 12:45:11.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.461" endtime="20201112 12:45:11.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.486" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:11.484" endtime="20201112 12:45:11.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.491" level="INFO">VALUE: [671248, 681248, 691248, 701248, 711248, 721248, 731248, 741248, 751248, 761247, 771248, 781248, 791248, 801248, 811248, 821248, 831248, 841248, 851248, 861248, 871247, 881248, 891248, 901248, 911247, 921248, 931248, 941248, 951248, 961248, 971248, 981248, 991248, 1001248, 1011248, 1021248, 1031248, 1041248, 1051248, 1061247, 1071248, 1081248, 1091248, 1101247, 1111248, 1121248, 1131248, 1141248, 1151248, 1161248, 1171248, 1181248, 1191248, 1201248, 1211248, 1221248, 1231248, 1241248, 1251248, 1261248, 1271248, 1281248, 1291248, 1301248, 1311248, 1321248, 1331248, 1341248, 1351248, 1361248, 1371248, 1381247, 1391248, 1401247, 1411248, 1421248, 1431248, 1441248, 1451248, 1461247, 1471248, 1481248, 1491248, 1501248, 1511248, 1521248, 1531248, 1541248, 1551248, 1561248, 1571248, 1581248, 1591248, 1601248, 1611247, 1621248, 1631248, 1641248, 1651248, 1661248]</msg>
<status status="PASS" starttime="20201112 12:45:11.489" endtime="20201112 12:45:11.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.477" endtime="20201112 12:45:11.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:11.510" endtime="20201112 12:45:11.859"></status>
</kw>
<msg timestamp="20201112 12:45:11.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131114694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141187722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:11.506" endtime="20201112 12:45:11.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131114694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.141187722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:11.867" endtime="20201112 12:45:11.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:11.884" endtime="20201112 12:45:11.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.499" endtime="20201112 12:45:11.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.495" endtime="20201112 12:45:11.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:11.947" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:11.893" endtime="20201112 12:45:11.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.958" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:45:11.956" endtime="20201112 12:45:11.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.963" level="INFO">VALUE: 0.131114694</msg>
<status status="PASS" starttime="20201112 12:45:11.961" endtime="20201112 12:45:11.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.949" endtime="20201112 12:45:11.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.977" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:11.974" endtime="20201112 12:45:11.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:11.981" level="INFO">VALUE: [0.141187722, 0.151221347, 0.161256069, 0.171289819, 0.181323819, 0.191358069, 0.201392597, 0.211424958, 0.221457736, 0.231489639, 0.241524153, 0.251557611, 0.261591611, 0.271625028, 0.281658167, 0.291691208, 0.3017255, 0.311758653, 0.321791694, 0.331825097, 0.341858111, 0.351892431, 0.361925528, 0.371959139, 0.381992153, 0.392026264, 0.402060389, 0.412094361, 0.422128292, 0.432161778, 0.442195083, 0.452228208, 0.462262403, 0.472295264, 0.482328403, 0.492361861, 0.502396347, 0.512430389, 0.522463056, 0.532495583, 0.542531472, 0.552566194, 0.562600375, 0.572633458, 0.582669014, 0.592703653, 0.602738542, 0.612773097, 0.622807611, 0.632842153, 0.642876778, 0.652912014, 0.662946153, 0.672978944, 0.683012986, 0.693047056, 0.703081306, 0.713114694, 0.723148847, 0.733181972, 0.743214139, 0.753247153, 0.763281472, 0.773315292, 0.783349931, 0.793384194, 0.803418722, 0.813453833, 0.823487917, 0.833521861, 0.843556486, 0.853589958, 0.863624625, 0.873657597, 0.883692472, 0.893726236, 0.903760611, 0.913793306, 0.923826111, 0.933857972, 0.943892097, 0.953925069, 0.963957903, 0.973990278, 0.984023528, 0.994056042, 1.004089514, 1.014121042, 1.024152417, 1.034184764, 1.044217903, 1.054250583, 1.064282736, 1.074315667, 1.084347903, 1.094381014, 1.104414431, 1.114447028, 1.124479583, 1.134512] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:11.979" endtime="20201112 12:45:11.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.967" endtime="20201112 12:45:11.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:11.990" endtime="20201112 12:45:11.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:11.999" endtime="20201112 12:45:12.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.994" endtime="20201112 12:45:12.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:11.985" endtime="20201112 12:45:12.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.283" endtime="20201112 12:45:12.024"></status>
</kw>
<msg timestamp="20201112 12:45:12.025" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:12.046" endtime="20201112 12:45:14.163"></status>
</kw>
<msg timestamp="20201112 12:45:14.165" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3392922, 'wakeups': [3402961, 3412961, 3422961, 3432961, 3442961, 3452...</msg>
<status status="PASS" starttime="20201112 12:45:12.042" endtime="20201112 12:45:14.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.172" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3392922, 'wakeups': [3402961, 3412961, 3422961, 3432961, 3442961, 3452...</msg>
<status status="PASS" starttime="20201112 12:45:14.167" endtime="20201112 12:45:14.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:14.175" endtime="20201112 12:45:14.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:12.035" endtime="20201112 12:45:14.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:12.030" endtime="20201112 12:45:14.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:14.191" level="INFO">${RESULT} = {'timer-count': 1, 'wakeups': [3402961, 3412961, 3422961, 3432961, 3442961, 3452961, 3462961, 3472961, 3482961, 3492961, 3502961, 3512961, 3522961, 3532961, 3542961, 3552961, 3562960, 3572961, 3582961...</msg>
<status status="PASS" starttime="20201112 12:45:14.185" endtime="20201112 12:45:14.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.202" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:14.200" endtime="20201112 12:45:14.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.206" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:14.204" endtime="20201112 12:45:14.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.193" endtime="20201112 12:45:14.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.219" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:45:14.216" endtime="20201112 12:45:14.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.224" level="INFO">VALUE: 3392922</msg>
<status status="PASS" starttime="20201112 12:45:14.222" endtime="20201112 12:45:14.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.210" endtime="20201112 12:45:14.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.238" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:14.234" endtime="20201112 12:45:14.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.243" level="INFO">VALUE: [3402961, 3412961, 3422961, 3432961, 3442961, 3452961, 3462961, 3472961, 3482961, 3492961, 3502961, 3512961, 3522961, 3532961, 3542961, 3552961, 3562960, 3572961, 3582961, 3592960, 3602961, 3612960, 3622961, 3632961, 3642961, 3652961, 3662961, 3672961, 3682961, 3692961, 3702960, 3712961, 3722961, 3732961, 3742961, 3752961, 3762961, 3772961, 3782961, 3792961, 3802961, 3812961, 3822961, 3832961, 3842961, 3852961, 3862960, 3872960, 3882961, 3892961, 3902961, 3912961, 3922961, 3932961, 3942961, 3952961, 3962961, 3972960, 3982961, 3992961, 4002961, 4012961, 4022961, 4032961, 4042960, 4052961, 4062960, 4072961, 4082961, 4092961, 4102960, 4112961, 4122961, 4132961, 4142961, 4152961, 4162961, 4172960, 4182961, 4192961, 4202961, 4212961, 4222961, 4232961, 4242961, 4252960, 4262961, 4272961, 4282961, 4292961, 4302961, 4312961, 4322961, 4332961, 4342961, 4352961, 4362961, 4372961, 4382961, 4392961]</msg>
<status status="PASS" starttime="20201112 12:45:14.241" endtime="20201112 12:45:14.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.227" endtime="20201112 12:45:14.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:14.262" endtime="20201112 12:45:14.607"></status>
</kw>
<msg timestamp="20201112 12:45:14.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037895639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047969264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:14.259" endtime="20201112 12:45:14.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037895639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047969264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:14.615" endtime="20201112 12:45:14.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:14.632" endtime="20201112 12:45:14.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.252" endtime="20201112 12:45:14.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.247" endtime="20201112 12:45:14.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:14.695" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:14.641" endtime="20201112 12:45:14.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.705" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:45:14.703" endtime="20201112 12:45:14.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.710" level="INFO">VALUE: 0.037895639</msg>
<status status="PASS" starttime="20201112 12:45:14.708" endtime="20201112 12:45:14.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.697" endtime="20201112 12:45:14.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.723" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:14.721" endtime="20201112 12:45:14.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:14.728" level="INFO">VALUE: [0.047969264, 0.058002972, 0.068037472, 0.078071569, 0.088105111, 0.098138111, 0.108171722, 0.118205861, 0.128240083, 0.13827325, 0.148307667, 0.158340681, 0.168373639, 0.178407583, 0.188441889, 0.198476681, 0.208509306, 0.218542722, 0.228576097, 0.238607625, 0.248641153, 0.258673181, 0.268707847, 0.278740528, 0.288772542, 0.298804139, 0.308835403, 0.318866042, 0.328896292, 0.3389265, 0.348956528, 0.358988861, 0.369020514, 0.379053139, 0.389085639, 0.399117236, 0.409149681, 0.419181944, 0.429214486, 0.439248653, 0.449282708, 0.459316194, 0.469350875, 0.479383917, 0.489416819, 0.499449569, 0.509480625, 0.519512667, 0.529546083, 0.539578694, 0.54961175, 0.559642986, 0.569674625, 0.579706417, 0.58974, 0.599774611, 0.609809472, 0.619841889, 0.629877306, 0.639911347, 0.649945708, 0.659979903, 0.670014361, 0.680048222, 0.690081181, 0.700115931, 0.710149792, 0.720185764, 0.730222472, 0.740257778, 0.750290903, 0.760325139, 0.770359056, 0.780393875, 0.790428958, 0.800463431, 0.810498083, 0.820531444, 0.830567264, 0.840602042, 0.850636806, 0.860670153, 0.870703125, 0.880736528, 0.890771389, 0.900803625, 0.910838056, 0.920871653, 0.930905028, 0.940937431, 0.950971569, 0.961005611, 0.971042736, 0.981078819, 0.991115181, 1.001151542, 1.011186778, 1.021221861, 1.031257319, 1.041292083] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:14.725" endtime="20201112 12:45:14.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.713" endtime="20201112 12:45:14.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:14.737" endtime="20201112 12:45:14.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:14.746" endtime="20201112 12:45:14.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.741" endtime="20201112 12:45:14.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.733" endtime="20201112 12:45:14.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:12.026" endtime="20201112 12:45:14.771"></status>
</kw>
<msg timestamp="20201112 12:45:14.772" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:14.795" endtime="20201112 12:45:16.912"></status>
</kw>
<msg timestamp="20201112 12:45:16.914" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6132754, 'wakeups': [6142792, 6152793, 6162793, 6172793, 6182793, 6192...</msg>
<status status="PASS" starttime="20201112 12:45:14.791" endtime="20201112 12:45:16.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.921" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6132754, 'wakeups': [6142792, 6152793, 6162793, 6172793, 6182793, 6192...</msg>
<status status="PASS" starttime="20201112 12:45:16.916" endtime="20201112 12:45:16.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:16.923" endtime="20201112 12:45:16.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.784" endtime="20201112 12:45:16.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.777" endtime="20201112 12:45:16.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:16.936" level="INFO">${RESULT} = {'timer-count': 1, 'wakeups': [6142792, 6152793, 6162793, 6172793, 6182793, 6192793, 6202793, 6212793, 6222792, 6232793, 6242793, 6252793, 6262792, 6272793, 6282793, 6292793, 6302793, 6312793, 6322793...</msg>
<status status="PASS" starttime="20201112 12:45:16.931" endtime="20201112 12:45:16.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.946" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:16.944" endtime="20201112 12:45:16.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.951" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:16.949" endtime="20201112 12:45:16.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.938" endtime="20201112 12:45:16.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.963" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:45:16.961" endtime="20201112 12:45:16.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.967" level="INFO">VALUE: 6132754</msg>
<status status="PASS" starttime="20201112 12:45:16.965" endtime="20201112 12:45:16.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.954" endtime="20201112 12:45:16.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.979" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:16.977" endtime="20201112 12:45:16.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:16.984" level="INFO">VALUE: [6142792, 6152793, 6162793, 6172793, 6182793, 6192793, 6202793, 6212793, 6222792, 6232793, 6242793, 6252793, 6262792, 6272793, 6282793, 6292793, 6302793, 6312793, 6322793, 6332793, 6342793, 6352793, 6362793, 6372793, 6382793, 6392793, 6402792, 6412793, 6422793, 6432793, 6442792, 6452793, 6462793, 6472793, 6482792, 6492793, 6502791, 6512793, 6522793, 6532793, 6542793, 6552792, 6562793, 6572793, 6582793, 6592792, 6602793, 6612793, 6622793, 6632792, 6642793, 6652793, 6662793, 6672793, 6682793, 6692793, 6702793, 6712793, 6722792, 6732793, 6742793, 6752793, 6762793, 6772793, 6782793, 6792793, 6802793, 6812793, 6822793, 6832793, 6842792, 6852793, 6862793, 6872793, 6882793, 6892793, 6902793, 6912793, 6922793, 6932793, 6942793, 6952793, 6962793, 6972793, 6982793, 6992793, 7002793, 7012793, 7022793, 7032793, 7042793, 7052792, 7062793, 7072793, 7082793, 7092793, 7102793, 7112792, 7122793, 7132793]</msg>
<status status="PASS" starttime="20201112 12:45:16.982" endtime="20201112 12:45:16.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.971" endtime="20201112 12:45:16.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:17.004" endtime="20201112 12:45:17.360"></status>
</kw>
<msg timestamp="20201112 12:45:17.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039454, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049527236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:45:17.001" endtime="20201112 12:45:17.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:17.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039454, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049527236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:45:17.368" endtime="20201112 12:45:17.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:17.385" endtime="20201112 12:45:17.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.993" endtime="20201112 12:45:17.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:16.988" endtime="20201112 12:45:17.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:17.447" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:17.394" endtime="20201112 12:45:17.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:17.458" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:45:17.456" endtime="20201112 12:45:17.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:17.463" level="INFO">VALUE: 0.039454</msg>
<status status="PASS" starttime="20201112 12:45:17.461" endtime="20201112 12:45:17.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:17.450" endtime="20201112 12:45:17.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:17.476" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:17.474" endtime="20201112 12:45:17.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:17.481" level="INFO">VALUE: [0.049527236, 0.059562597, 0.069597556, 0.079631222, 0.089666111, 0.099700917, 0.109736347, 0.119769861, 0.129802708, 0.139838181, 0.149873736, 0.159908958, 0.169942097, 0.179978278, 0.190013028, 0.200046569, 0.210082028, 0.220116375, 0.230150597, 0.240184403, 0.250218694, 0.260252236, 0.270285944, 0.28032, 0.290355403, 0.300390333, 0.310424569, 0.320460181, 0.330495167, 0.340530333, 0.350565319, 0.3606015, 0.370636431, 0.380670931, 0.390704069, 0.400738139, 0.410770292, 0.420805653, 0.430839708, 0.440874056, 0.450908028, 0.460940597, 0.470976861, 0.481011069, 0.491044986, 0.501077528, 0.511114403, 0.52115025, 0.531185694, 0.541219806, 0.551256167, 0.561290125, 0.571324833, 0.581359083, 0.591393778, 0.601427833, 0.611462278, 0.621496292, 0.631529611, 0.641564278, 0.651598764, 0.661633764, 0.671668556, 0.681703847, 0.691738792, 0.701773014, 0.711807, 0.721841208, 0.731875403, 0.741908694, 0.75194275, 0.761978903, 0.772014292, 0.782050264, 0.792085528, 0.802119778, 0.812154833, 0.822190361, 0.832225278, 0.842258875, 0.852292764, 0.862325611, 0.872359972, 0.882393667, 0.892428528, 0.902464333, 0.912500764, 0.922536542, 0.932573653, 0.942609819, 0.952646, 0.962679194, 0.972715694, 0.982748889, 0.992783153, 1.002817347, 1.012852389, 1.022886708, 1.032922139, 1.042957417] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:17.478" endtime="20201112 12:45:17.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:17.466" endtime="20201112 12:45:17.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:17.489" endtime="20201112 12:45:17.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:17.498" endtime="20201112 12:45:17.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:17.493" endtime="20201112 12:45:17.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:17.485" endtime="20201112 12:45:17.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:14.773" endtime="20201112 12:45:17.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.279" endtime="20201112 12:45:17.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.277" endtime="20201112 12:45:17.524"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:45:17.530" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:17.552" endtime="20201112 12:45:19.689"></status>
</kw>
<msg timestamp="20201112 12:45:19.691" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8880252, 'wakeups': [8890322, 8900321, 8910320, 8920321, 8930321, 8940...</msg>
<status status="PASS" starttime="20201112 12:45:17.547" endtime="20201112 12:45:19.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.698" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8880252, 'wakeups': [8890322, 8900321, 8910320, 8920321, 8930321, 8940...</msg>
<status status="PASS" starttime="20201112 12:45:19.693" endtime="20201112 12:45:19.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:19.700" endtime="20201112 12:45:19.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:17.540" endtime="20201112 12:45:19.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:17.535" endtime="20201112 12:45:19.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:19.713" level="INFO">${RESULT} = {'timer-count': 2, 'wakeups': [8890322, 8900321, 8910320, 8920321, 8930321, 8940321, 8950321, 8960321, 8970320, 8980321, 8990321, 9000320, 9010321, 9020321, 9030321, 9040321, 9050321, 9060321, 9070321...</msg>
<status status="PASS" starttime="20201112 12:45:19.709" endtime="20201112 12:45:19.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.724" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:19.721" endtime="20201112 12:45:19.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.728" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:19.726" endtime="20201112 12:45:19.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.715" endtime="20201112 12:45:19.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.741" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:45:19.738" endtime="20201112 12:45:19.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.745" level="INFO">VALUE: 8880252</msg>
<status status="PASS" starttime="20201112 12:45:19.743" endtime="20201112 12:45:19.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.732" endtime="20201112 12:45:19.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.758" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:19.755" endtime="20201112 12:45:19.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:19.762" level="INFO">VALUE: [8890322, 8900321, 8910320, 8920321, 8930321, 8940321, 8950321, 8960321, 8970320, 8980321, 8990321, 9000320, 9010321, 9020321, 9030321, 9040321, 9050321, 9060321, 9070321, 9080321, 9090321, 9100321, 9110321, 9120321, 9130321, 9140320, 9150321, 9160321, 9170321, 9180321, 9190321, 9200320, 9210321, 9220321, 9230321, 9240321, 9250321, 9260321, 9270321, 9280321, 9290321, 9300321, 9310320, 9320321, 9330320, 9340321, 9350320, 9360321, 9370321, 9380321, 9390321, 9400321, 9410321, 9420321, 9430321, 9440321, 9450321, 9460321, 9470321, 9480321, 9490321, 9500321, 9510321, 9520321, 9530321, 9540321, 9550320, 9560321, 9570320, 9580321, 9590321, 9600322, 9610321, 9620321, 9630320, 9640321, 9650320, 9660321, 9670321, 9680321, 9690321, 9700321, 9710321, 9720321, 9730320, 9740321, 9750321, 9760321, 9770321, 9780321, 9790320, 9800321, 9810320, 9820321, 9830320, 9840321, 9850320, 9860321, 9870321, 9880321]</msg>
<status status="PASS" starttime="20201112 12:45:19.760" endtime="20201112 12:45:19.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.749" endtime="20201112 12:45:19.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:19.783" endtime="20201112 12:45:20.140"></status>
</kw>
<msg timestamp="20201112 12:45:20.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044565194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054671944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:19.780" endtime="20201112 12:45:20.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:20.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044565194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054671944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:20.148" endtime="20201112 12:45:20.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:20.165" endtime="20201112 12:45:20.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.773" endtime="20201112 12:45:20.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:19.768" endtime="20201112 12:45:20.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:20.229" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:20.175" endtime="20201112 12:45:20.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:20.240" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:45:20.237" endtime="20201112 12:45:20.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:20.244" level="INFO">VALUE: 0.044565194</msg>
<status status="PASS" starttime="20201112 12:45:20.242" endtime="20201112 12:45:20.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:20.231" endtime="20201112 12:45:20.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:20.258" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:20.255" endtime="20201112 12:45:20.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:20.262" level="INFO">VALUE: [0.054671944, 0.064706389, 0.074741236, 0.084778833, 0.094815417, 0.104851625, 0.114888569, 0.124924861, 0.134960597, 0.144998694, 0.155035278, 0.165070319, 0.175106819, 0.185142042, 0.195177319, 0.205212222, 0.215247736, 0.225283347, 0.235319361, 0.245355847, 0.255391653, 0.265427597, 0.275464375, 0.285500403, 0.295536403, 0.305571694, 0.315609903, 0.325646083, 0.335683306, 0.345721181, 0.355759264, 0.365796514, 0.375834167, 0.38587, 0.395906875, 0.405943125, 0.415979361, 0.426015222, 0.436051361, 0.446087194, 0.456122403, 0.46615775, 0.476192, 0.486227153, 0.496260681, 0.506296125, 0.51633025, 0.526367806, 0.536402889, 0.546437917, 0.556472375, 0.566507806, 0.576542958, 0.586577, 0.596611542, 0.606645361, 0.616680625, 0.62671525, 0.636750694, 0.646785764, 0.656821361, 0.666856611, 0.676892, 0.686925861, 0.696960806, 0.706995167, 0.717029931, 0.727065028, 0.737098903, 0.747133917, 0.757169194, 0.767205264, 0.777238181, 0.787271556, 0.797304764, 0.807340125, 0.817374278, 0.827409375, 0.837443778, 0.847478083, 0.85751275, 0.867547694, 0.877581375, 0.887615278, 0.897648736, 0.907683722, 0.917719042, 0.927755722, 0.937791986, 0.947826944, 0.957861472, 0.967897889, 0.977933125, 0.987970542, 0.998005875, 1.008042292, 1.018076056, 1.028111514, 1.038146528, 1.048181917] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:20.260" endtime="20201112 12:45:20.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:20.248" endtime="20201112 12:45:20.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:20.271" endtime="20201112 12:45:20.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:20.279" endtime="20201112 12:45:20.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:20.275" endtime="20201112 12:45:20.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:20.267" endtime="20201112 12:45:20.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:17.531" endtime="20201112 12:45:20.305"></status>
</kw>
<msg timestamp="20201112 12:45:20.306" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:20.328" endtime="20201112 12:45:22.479"></status>
</kw>
<msg timestamp="20201112 12:45:22.481" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11647589, 'wakeups': [11657659, 11667658, 11677658, 11687658, 11697658...</msg>
<status status="PASS" starttime="20201112 12:45:20.325" endtime="20201112 12:45:22.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:22.487" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11647589, 'wakeups': [11657659, 11667658, 11677658, 11687658, 11697658...</msg>
<status status="PASS" starttime="20201112 12:45:22.483" endtime="20201112 12:45:22.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:22.490" endtime="20201112 12:45:22.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:20.318" endtime="20201112 12:45:22.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:20.311" endtime="20201112 12:45:22.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:22.503" level="INFO">${RESULT} = {'timer-count': 2, 'wakeups': [11657659, 11667658, 11677658, 11687658, 11697658, 11707657, 11717658, 11727658, 11737658, 11747657, 11757658, 11767658, 11777658, 11787658, 11797657, 11807658, 11817658,...</msg>
<status status="PASS" starttime="20201112 12:45:22.498" endtime="20201112 12:45:22.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:22.513" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:22.511" endtime="20201112 12:45:22.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:22.518" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:22.516" endtime="20201112 12:45:22.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.504" endtime="20201112 12:45:22.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:22.530" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:45:22.528" endtime="20201112 12:45:22.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:22.535" level="INFO">VALUE: 11647589</msg>
<status status="PASS" starttime="20201112 12:45:22.533" endtime="20201112 12:45:22.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.522" endtime="20201112 12:45:22.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:22.547" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:22.545" endtime="20201112 12:45:22.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:22.552" level="INFO">VALUE: [11657659, 11667658, 11677658, 11687658, 11697658, 11707657, 11717658, 11727658, 11737658, 11747657, 11757658, 11767658, 11777658, 11787658, 11797657, 11807658, 11817658, 11827658, 11837658, 11847658, 11857658, 11867658, 11877658, 11887658, 11897658, 11907658, 11917657, 11927658, 11937657, 11947659, 11957659, 11967658, 11977657, 11987658, 11997658, 12007658, 12017658, 12027657, 12037658, 12047658, 12057658, 12067658, 12077658, 12087658, 12097658, 12107659, 12117659, 12127658, 12137657, 12147658, 12157658, 12167657, 12177657, 12187658, 12197658, 12207658, 12217658, 12227658, 12237658, 12247658, 12257658, 12267658, 12277657, 12287658, 12297658, 12307658, 12317658, 12327658, 12337657, 12347658, 12357657, 12367658, 12377657, 12387658, 12397657, 12407658, 12417658, 12427658, 12437657, 12447657, 12457658, 12467658, 12477658, 12487658, 12497658, 12507658, 12517658, 12527658, 12537657, 12547658, 12557658, 12567658, 12577658, 12587658, 12597657, 12607658, 12617657, 12627657, 12637658, 12647657]</msg>
<status status="PASS" starttime="20201112 12:45:22.549" endtime="20201112 12:45:22.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.538" endtime="20201112 12:45:22.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:22.571" endtime="20201112 12:45:22.927"></status>
</kw>
<msg timestamp="20201112 12:45:22.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039758042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049862611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:22.567" endtime="20201112 12:45:22.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:22.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039758042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049862611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:22.935" endtime="20201112 12:45:22.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:22.952" endtime="20201112 12:45:22.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.560" endtime="20201112 12:45:22.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:22.555" endtime="20201112 12:45:22.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:23.015" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:22.961" endtime="20201112 12:45:23.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:23.026" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:45:23.024" endtime="20201112 12:45:23.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:23.030" level="INFO">VALUE: 0.039758042</msg>
<status status="PASS" starttime="20201112 12:45:23.028" endtime="20201112 12:45:23.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:23.017" endtime="20201112 12:45:23.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:23.043" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:23.041" endtime="20201112 12:45:23.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:23.049" level="INFO">VALUE: [0.049862611, 0.059895278, 0.069928167, 0.079963028, 0.089998569, 0.100032167, 0.110067958, 0.120103278, 0.130138931, 0.140173444, 0.150209931, 0.160244167, 0.17027775, 0.180312611, 0.190346708, 0.200383153, 0.210417764, 0.220451403, 0.230485931, 0.240519986, 0.250553667, 0.260586056, 0.270618889, 0.280652347, 0.290686347, 0.300719792, 0.310752903, 0.3207895, 0.330824083, 0.340860819, 0.350895222, 0.360929264, 0.370963819, 0.380999583, 0.391035403, 0.401070736, 0.411105097, 0.421137944, 0.431173097, 0.441206889, 0.451242347, 0.461276667, 0.471311931, 0.481348597, 0.491384222, 0.501421444, 0.511456236, 0.52149, 0.53152375, 0.541559653, 0.551595681, 0.561630431, 0.571665792, 0.581701042, 0.591735333, 0.601769764, 0.611803639, 0.621836986, 0.631871208, 0.641905819, 0.651940611, 0.661974375, 0.672007861, 0.682043097, 0.692077889, 0.702114056, 0.712150514, 0.72218775, 0.732223736, 0.742262611, 0.752297444, 0.762333625, 0.772368361, 0.782404639, 0.792439486, 0.802474958, 0.812509931, 0.822545028, 0.832579389, 0.842614083, 0.852649722, 0.862683889, 0.872720292, 0.882755097, 0.89278975, 0.902824431, 0.912859347, 0.922893667, 0.932926931, 0.942962042, 0.952996597, 0.963031333, 0.973066236, 0.983101653, 0.993136583, 1.003172125, 1.013207542, 1.023244194, 1.033282056, 1.043317778] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:23.046" endtime="20201112 12:45:23.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:23.034" endtime="20201112 12:45:23.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:23.057" endtime="20201112 12:45:23.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:23.066" endtime="20201112 12:45:23.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:23.062" endtime="20201112 12:45:23.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:23.053" endtime="20201112 12:45:23.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:20.307" endtime="20201112 12:45:23.092"></status>
</kw>
<msg timestamp="20201112 12:45:23.092" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:23.113" endtime="20201112 12:45:25.263"></status>
</kw>
<msg timestamp="20201112 12:45:25.265" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14422809, 'wakeups': [14432879, 14442878, 14452878, 14462878, 14472878...</msg>
<status status="PASS" starttime="20201112 12:45:23.110" endtime="20201112 12:45:25.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:25.272" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14422809, 'wakeups': [14432879, 14442878, 14452878, 14462878, 14472878...</msg>
<status status="PASS" starttime="20201112 12:45:25.267" endtime="20201112 12:45:25.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:25.274" endtime="20201112 12:45:25.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:23.102" endtime="20201112 12:45:25.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:23.097" endtime="20201112 12:45:25.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:25.287" level="INFO">${RESULT} = {'timer-count': 2, 'wakeups': [14432879, 14442878, 14452878, 14462878, 14472878, 14482878, 14492878, 14502878, 14512878, 14522878, 14532878, 14542878, 14552878, 14562878, 14572878, 14582878, 14592877,...</msg>
<status status="PASS" starttime="20201112 12:45:25.282" endtime="20201112 12:45:25.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:25.297" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:25.295" endtime="20201112 12:45:25.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:25.301" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:25.299" endtime="20201112 12:45:25.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:25.289" endtime="20201112 12:45:25.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:25.314" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:45:25.311" endtime="20201112 12:45:25.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:25.319" level="INFO">VALUE: 14422809</msg>
<status status="PASS" starttime="20201112 12:45:25.316" endtime="20201112 12:45:25.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:25.305" endtime="20201112 12:45:25.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:25.331" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:25.329" endtime="20201112 12:45:25.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:25.344" level="INFO">VALUE: [14432879, 14442878, 14452878, 14462878, 14472878, 14482878, 14492878, 14502878, 14512878, 14522878, 14532878, 14542878, 14552878, 14562878, 14572878, 14582878, 14592877, 14602878, 14612877, 14622878, 14632877, 14642878, 14652878, 14662878, 14672878, 14682878, 14692878, 14702878, 14712878, 14722878, 14732878, 14742878, 14752878, 14762878, 14772878, 14782877, 14792878, 14802877, 14812878, 14822878, 14832878, 14842878, 14852878, 14862878, 14872877, 14882878, 14892878, 14902879, 14912878, 14922878, 14932878, 14942878, 14952878, 14962877, 14972877, 14982878, 14992878, 15002878, 15012877, 15022878, 15032878, 15042878, 15052878, 15062878, 15072878, 15082878, 15092878, 15102878, 15112878, 15122878, 15132878, 15142878, 15152878, 15162878, 15172878, 15182877, 15192878, 15202878, 15212878, 15222878, 15232878, 15242878, 15252878, 15262878, 15272878, 15282878, 15292878, 15302878, 15312877, 15322878, 15332877, 15342878, 15352878, 15362878, 15372878, 15382878, 15392877, 15402878, 15412878, 15422878]</msg>
<status status="PASS" starttime="20201112 12:45:25.334" endtime="20201112 12:45:25.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:25.322" endtime="20201112 12:45:25.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:25.363" endtime="20201112 12:45:25.720"></status>
</kw>
<msg timestamp="20201112 12:45:25.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037785056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047890458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:25.360" endtime="20201112 12:45:25.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:25.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037785056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047890458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:25.728" endtime="20201112 12:45:25.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:25.745" endtime="20201112 12:45:25.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:25.353" endtime="20201112 12:45:25.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:25.348" endtime="20201112 12:45:25.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:25.807" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:25.754" endtime="20201112 12:45:25.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:25.818" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:45:25.816" endtime="20201112 12:45:25.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:25.823" level="INFO">VALUE: 0.037785056</msg>
<status status="PASS" starttime="20201112 12:45:25.820" endtime="20201112 12:45:25.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:25.809" endtime="20201112 12:45:25.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:25.836" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:25.833" endtime="20201112 12:45:25.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:25.840" level="INFO">VALUE: [0.047890458, 0.057923875, 0.067961486, 0.077998903, 0.088036097, 0.098071708, 0.108107028, 0.118142042, 0.128176569, 0.138210597, 0.148245903, 0.158281542, 0.168317236, 0.178352708, 0.188388292, 0.198422292, 0.20845675, 0.218492222, 0.228525306, 0.238560292, 0.248593875, 0.258630056, 0.268663833, 0.278696306, 0.288730125, 0.298763097, 0.308797736, 0.318831431, 0.328864792, 0.338898792, 0.348933375, 0.358967, 0.369000972, 0.379034889, 0.389068222, 0.399100431, 0.409135542, 0.41916675, 0.429201903, 0.439236167, 0.449270514, 0.459304333, 0.469339361, 0.479373431, 0.489406764, 0.499442764, 0.509477653, 0.519513069, 0.529546653, 0.539581069, 0.549616222, 0.559649736, 0.569684194, 0.579716986, 0.589752417, 0.599788069, 0.609822194, 0.619856292, 0.629889292, 0.639923944, 0.649958111, 0.659991347, 0.670024, 0.680058014, 0.690093278, 0.700127806, 0.710162597, 0.720195278, 0.730229264, 0.740262542, 0.750296236, 0.760329708, 0.770362625, 0.780395806, 0.790429125, 0.800460417, 0.810494194, 0.820526736, 0.830560792, 0.840594903, 0.850630264, 0.860665125, 0.870699861, 0.880734597, 0.890770222, 0.900804986, 0.910839333, 0.920873611, 0.930906931, 0.940942806, 0.950977306, 0.961013389, 0.971049667, 0.981085333, 0.991120625, 1.001154847, 1.011188833, 1.021224819, 1.031260139, 1.041294903] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:25.838" endtime="20201112 12:45:25.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:25.826" endtime="20201112 12:45:25.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:25.849" endtime="20201112 12:45:25.852"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:25.857" endtime="20201112 12:45:25.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:25.853" endtime="20201112 12:45:25.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:25.844" endtime="20201112 12:45:25.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:23.093" endtime="20201112 12:45:25.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:17.527" endtime="20201112 12:45:25.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:17.525" endtime="20201112 12:45:25.884"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:45:25.890" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:25.913" endtime="20201112 12:45:28.054"></status>
</kw>
<msg timestamp="20201112 12:45:28.056" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17212940, 'wakeups': [17223044, 17233044, 17243044, 17253044, 17263044...</msg>
<status status="PASS" starttime="20201112 12:45:25.909" endtime="20201112 12:45:28.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:28.063" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17212940, 'wakeups': [17223044, 17233044, 17243044, 17253044, 17263044...</msg>
<status status="PASS" starttime="20201112 12:45:28.058" endtime="20201112 12:45:28.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:28.065" endtime="20201112 12:45:28.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:25.902" endtime="20201112 12:45:28.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:25.895" endtime="20201112 12:45:28.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:28.078" level="INFO">${RESULT} = {'timer-count': 3, 'wakeups': [17223044, 17233044, 17243044, 17253044, 17263044, 17273044, 17283044, 17293044, 17303044, 17313044, 17323044, 17333044, 17343044, 17353044, 17363044, 17373044, 17383044,...</msg>
<status status="PASS" starttime="20201112 12:45:28.073" endtime="20201112 12:45:28.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:28.088" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:28.086" endtime="20201112 12:45:28.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:28.092" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:28.090" endtime="20201112 12:45:28.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:28.080" endtime="20201112 12:45:28.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:28.104" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:45:28.102" endtime="20201112 12:45:28.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:28.109" level="INFO">VALUE: 17212940</msg>
<status status="PASS" starttime="20201112 12:45:28.107" endtime="20201112 12:45:28.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:28.096" endtime="20201112 12:45:28.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:28.121" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:28.119" endtime="20201112 12:45:28.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:28.126" level="INFO">VALUE: [17223044, 17233044, 17243044, 17253044, 17263044, 17273044, 17283044, 17293044, 17303044, 17313044, 17323044, 17333044, 17343044, 17353044, 17363044, 17373044, 17383044, 17393044, 17403044, 17413044, 17423044, 17433044, 17443044, 17453044, 17463044, 17473044, 17483044, 17493044, 17503044, 17513044, 17523044, 17533044, 17543044, 17553044, 17563044, 17573044, 17583044, 17593044, 17603044, 17613044, 17623044, 17633044, 17643044, 17653044, 17663044, 17673044, 17683044, 17693044, 17703044, 17713044, 17723044, 17733044, 17743044, 17753044, 17763044, 17773044, 17783044, 17793044, 17803044, 17813044, 17823044, 17833044, 17843044, 17853044, 17863044, 17873044, 17883044, 17893044, 17903044, 17913044, 17923044, 17933044, 17943044, 17953044, 17963044, 17973044, 17983044, 17993044, 18003044, 18013044, 18023044, 18033044, 18043044, 18053044, 18063044, 18073044, 18083044, 18093044, 18103044, 18113044, 18123044, 18133044, 18143044, 18153044, 18163044, 18173044, 18183044, 18193044, 18203044, 18213044]</msg>
<status status="PASS" starttime="20201112 12:45:28.124" endtime="20201112 12:45:28.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:28.113" endtime="20201112 12:45:28.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:28.146" endtime="20201112 12:45:28.490"></status>
</kw>
<msg timestamp="20201112 12:45:28.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046115069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056253847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:28.142" endtime="20201112 12:45:28.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:28.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046115069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056253847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:28.499" endtime="20201112 12:45:28.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:28.516" endtime="20201112 12:45:28.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:28.135" endtime="20201112 12:45:28.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:28.130" endtime="20201112 12:45:28.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:28.579" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:28.525" endtime="20201112 12:45:28.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:28.589" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:45:28.587" endtime="20201112 12:45:28.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:28.594" level="INFO">VALUE: 0.046115069</msg>
<status status="PASS" starttime="20201112 12:45:28.592" endtime="20201112 12:45:28.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:28.581" endtime="20201112 12:45:28.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:28.607" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:28.605" endtime="20201112 12:45:28.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:28.612" level="INFO">VALUE: [0.056253847, 0.066287292, 0.076322847, 0.086358097, 0.096393236, 0.106427764, 0.116462611, 0.126497083, 0.136533014, 0.146569931, 0.156608014, 0.166645181, 0.176682625, 0.186719958, 0.196757917, 0.206796236, 0.216834486, 0.226872236, 0.236909861, 0.246946125, 0.256983431, 0.267019639, 0.277054958, 0.287089556, 0.297123833, 0.307157472, 0.317191889, 0.327226319, 0.337261403, 0.347296083, 0.357331306, 0.367367014, 0.377403708, 0.387438833, 0.397474181, 0.407510111, 0.417546167, 0.427582653, 0.437618708, 0.447655236, 0.457692167, 0.467728056, 0.477764222, 0.487799542, 0.497834875, 0.507869861, 0.517904694, 0.527938792, 0.537973514, 0.548008569, 0.558043958, 0.568078361, 0.578113972, 0.588148667, 0.598183194, 0.608218569, 0.618254736, 0.628289611, 0.638325069, 0.648359597, 0.658394125, 0.668428306, 0.678462792, 0.688497208, 0.698532972, 0.708569028, 0.718606333, 0.728641847, 0.738677569, 0.748713056, 0.75874875, 0.768785042, 0.778820556, 0.788855528, 0.798891319, 0.808926861, 0.818962236, 0.828997403, 0.839032306, 0.849067278, 0.859101792, 0.869136375, 0.879171778, 0.889206917, 0.899242792, 0.909277278, 0.919312083, 0.929346806, 0.939384042, 0.949420056, 0.959455264, 0.969490847, 0.979525528, 0.989560292, 0.999595347, 1.009629347, 1.019661819, 1.029695417, 1.03973025, 1.049763806] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:28.609" endtime="20201112 12:45:28.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:28.597" endtime="20201112 12:45:28.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:28.620" endtime="20201112 12:45:28.623"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:28.629" endtime="20201112 12:45:28.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:28.625" endtime="20201112 12:45:28.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:28.616" endtime="20201112 12:45:28.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:25.892" endtime="20201112 12:45:28.654"></status>
</kw>
<msg timestamp="20201112 12:45:28.655" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:28.676" endtime="20201112 12:45:30.805"></status>
</kw>
<msg timestamp="20201112 12:45:30.806" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19966982, 'wakeups': [19977086, 19987086, 19997086, 20007086, 20017086...</msg>
<status status="PASS" starttime="20201112 12:45:28.672" endtime="20201112 12:45:30.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:30.818" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 19966982, 'wakeups': [19977086, 19987086, 19997086, 20007086, 20017086...</msg>
<status status="PASS" starttime="20201112 12:45:30.808" endtime="20201112 12:45:30.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:30.821" endtime="20201112 12:45:30.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:28.665" endtime="20201112 12:45:30.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:28.660" endtime="20201112 12:45:30.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:30.834" level="INFO">${RESULT} = {'timer-count': 3, 'wakeups': [19977086, 19987086, 19997086, 20007086, 20017086, 20027086, 20037086, 20047086, 20057086, 20067086, 20077086, 20087086, 20097086, 20107086, 20117086, 20127086, 20137086,...</msg>
<status status="PASS" starttime="20201112 12:45:30.829" endtime="20201112 12:45:30.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:30.844" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:30.842" endtime="20201112 12:45:30.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:30.848" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:30.846" endtime="20201112 12:45:30.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.836" endtime="20201112 12:45:30.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:30.861" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:45:30.858" endtime="20201112 12:45:30.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:30.865" level="INFO">VALUE: 19966982</msg>
<status status="PASS" starttime="20201112 12:45:30.863" endtime="20201112 12:45:30.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.852" endtime="20201112 12:45:30.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:30.877" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:30.875" endtime="20201112 12:45:30.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:30.884" level="INFO">VALUE: [19977086, 19987086, 19997086, 20007086, 20017086, 20027086, 20037086, 20047086, 20057086, 20067086, 20077086, 20087086, 20097086, 20107086, 20117086, 20127086, 20137086, 20147086, 20157086, 20167086, 20177086, 20187086, 20197086, 20207086, 20217086, 20227086, 20237086, 20247086, 20257086, 20267086, 20277086, 20287086, 20297086, 20307086, 20317086, 20327086, 20337086, 20347086, 20357086, 20367086, 20377086, 20387086, 20397086, 20407086, 20417086, 20427086, 20437086, 20447086, 20457086, 20467086, 20477086, 20487086, 20497086, 20507086, 20517086, 20527086, 20537086, 20547086, 20557086, 20567086, 20577086, 20587086, 20597086, 20607086, 20617086, 20627086, 20637086, 20647086, 20657086, 20667086, 20677086, 20687086, 20697086, 20707086, 20717086, 20727086, 20737086, 20747086, 20757086, 20767086, 20777086, 20787086, 20797086, 20807086, 20817086, 20827086, 20837086, 20847086, 20857086, 20867086, 20877086, 20887086, 20897086, 20907086, 20917086, 20927086, 20937086, 20947086, 20957086, 20967086]</msg>
<status status="PASS" starttime="20201112 12:45:30.880" endtime="20201112 12:45:30.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.869" endtime="20201112 12:45:30.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:30.903" endtime="20201112 12:45:31.248"></status>
</kw>
<msg timestamp="20201112 12:45:31.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037730306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047869694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:30.900" endtime="20201112 12:45:31.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:31.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037730306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047869694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:31.256" endtime="20201112 12:45:31.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:31.273" endtime="20201112 12:45:31.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.893" endtime="20201112 12:45:31.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:30.888" endtime="20201112 12:45:31.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:31.334" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:31.281" endtime="20201112 12:45:31.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:31.345" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:45:31.343" endtime="20201112 12:45:31.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:31.349" level="INFO">VALUE: 0.037730306</msg>
<status status="PASS" starttime="20201112 12:45:31.347" endtime="20201112 12:45:31.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:31.336" endtime="20201112 12:45:31.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:31.363" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:31.360" endtime="20201112 12:45:31.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:31.367" level="INFO">VALUE: [0.047869694, 0.057904903, 0.067939583, 0.077974833, 0.088009861, 0.098043792, 0.108077194, 0.118111694, 0.128145917, 0.138179403, 0.148214125, 0.158247722, 0.168282694, 0.178316931, 0.188352181, 0.198386028, 0.208420278, 0.218454306, 0.228488583, 0.238522722, 0.248557278, 0.258591389, 0.268624361, 0.278658167, 0.288693278, 0.298727611, 0.308762625, 0.318795875, 0.328830861, 0.338865083, 0.348900444, 0.358934736, 0.368970236, 0.379005, 0.389040028, 0.399073903, 0.409108569, 0.419142, 0.429175806, 0.439209111, 0.449241736, 0.459274333, 0.469307722, 0.479339708, 0.489372611, 0.499405111, 0.50943975, 0.519473083, 0.529507069, 0.539541153, 0.549576653, 0.559611278, 0.569646681, 0.579680542, 0.589714917, 0.599749875, 0.609784319, 0.619818611, 0.629852736, 0.639886111, 0.649920319, 0.659954917, 0.669989292, 0.680023694, 0.690058306, 0.700092, 0.710125556, 0.720159472, 0.730192736, 0.740226306, 0.750259972, 0.760293847, 0.770327361, 0.780361681, 0.790396083, 0.80043025, 0.810465611, 0.820500153, 0.830534806, 0.840569083, 0.850603458, 0.860637333, 0.870672153, 0.880706375, 0.890740792, 0.900775278, 0.910809236, 0.920842597, 0.930875583, 0.940908083, 0.950940708, 0.960975, 0.971009639, 0.981045139, 0.991080194, 1.001114042, 1.011148, 1.021182681, 1.031218139, 1.041251833] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:31.365" endtime="20201112 12:45:31.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:31.353" endtime="20201112 12:45:31.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:31.376" endtime="20201112 12:45:31.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:31.384" endtime="20201112 12:45:31.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:31.380" endtime="20201112 12:45:31.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:31.371" endtime="20201112 12:45:31.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:28.656" endtime="20201112 12:45:31.412"></status>
</kw>
<msg timestamp="20201112 12:45:31.413" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:31.433" endtime="20201112 12:45:33.562"></status>
</kw>
<msg timestamp="20201112 12:45:33.563" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22715322, 'wakeups': [22725426, 22735426, 22745426, 22755426, 22765426...</msg>
<status status="PASS" starttime="20201112 12:45:31.430" endtime="20201112 12:45:33.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:33.570" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22715322, 'wakeups': [22725426, 22735426, 22745426, 22755426, 22765426...</msg>
<status status="PASS" starttime="20201112 12:45:33.565" endtime="20201112 12:45:33.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:33.572" endtime="20201112 12:45:33.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:31.423" endtime="20201112 12:45:33.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:31.418" endtime="20201112 12:45:33.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:33.586" level="INFO">${RESULT} = {'timer-count': 3, 'wakeups': [22725426, 22735426, 22745426, 22755426, 22765426, 22775426, 22785426, 22795426, 22805426, 22815426, 22825426, 22835426, 22845426, 22855426, 22865426, 22875426, 22885426,...</msg>
<status status="PASS" starttime="20201112 12:45:33.581" endtime="20201112 12:45:33.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:33.596" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:33.594" endtime="20201112 12:45:33.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:33.601" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:33.599" endtime="20201112 12:45:33.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:33.588" endtime="20201112 12:45:33.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:33.615" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:45:33.612" endtime="20201112 12:45:33.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:33.620" level="INFO">VALUE: 22715322</msg>
<status status="PASS" starttime="20201112 12:45:33.617" endtime="20201112 12:45:33.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:33.606" endtime="20201112 12:45:33.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:33.634" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:33.632" endtime="20201112 12:45:33.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:33.640" level="INFO">VALUE: [22725426, 22735426, 22745426, 22755426, 22765426, 22775426, 22785426, 22795426, 22805426, 22815426, 22825426, 22835426, 22845426, 22855426, 22865426, 22875426, 22885426, 22895426, 22905426, 22915426, 22925426, 22935426, 22945426, 22955426, 22965426, 22975426, 22985426, 22995426, 23005426, 23015426, 23025426, 23035426, 23045426, 23055426, 23065426, 23075426, 23085426, 23095426, 23105426, 23115426, 23125426, 23135426, 23145426, 23155426, 23165426, 23175426, 23185426, 23195426, 23205426, 23215426, 23225426, 23235426, 23245426, 23255426, 23265426, 23275426, 23285426, 23295426, 23305426, 23315426, 23325426, 23335426, 23345426, 23355426, 23365426, 23375426, 23385426, 23395426, 23405426, 23415426, 23425426, 23435426, 23445426, 23455426, 23465426, 23475426, 23485426, 23495426, 23505426, 23515426, 23525426, 23535426, 23545426, 23555426, 23565426, 23575426, 23585426, 23595426, 23605426, 23615426, 23625426, 23635426, 23645426, 23655426, 23665426, 23675426, 23685426, 23695426, 23705426, 23715426]</msg>
<status status="PASS" starttime="20201112 12:45:33.637" endtime="20201112 12:45:33.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:33.623" endtime="20201112 12:45:33.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:33.660" endtime="20201112 12:45:34.008"></status>
</kw>
<msg timestamp="20201112 12:45:34.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037684, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047821625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:45:33.657" endtime="20201112 12:45:34.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:34.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037684, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047821625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:45:34.016" endtime="20201112 12:45:34.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:34.033" endtime="20201112 12:45:34.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:33.650" endtime="20201112 12:45:34.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:33.644" endtime="20201112 12:45:34.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:34.098" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:34.045" endtime="20201112 12:45:34.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:34.109" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:45:34.106" endtime="20201112 12:45:34.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:34.113" level="INFO">VALUE: 0.037684</msg>
<status status="PASS" starttime="20201112 12:45:34.111" endtime="20201112 12:45:34.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:34.100" endtime="20201112 12:45:34.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:34.126" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:34.124" endtime="20201112 12:45:34.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:34.131" level="INFO">VALUE: [0.047821625, 0.057855194, 0.067889042, 0.077921431, 0.087954306, 0.097986986, 0.108020153, 0.118053917, 0.128088583, 0.138121792, 0.148156736, 0.158191583, 0.168225472, 0.178260917, 0.188295514, 0.198329333, 0.208364611, 0.218400292, 0.228435194, 0.238469583, 0.248504569, 0.258540847, 0.268576514, 0.278612417, 0.288646861, 0.298680917, 0.308714583, 0.318748417, 0.32878175, 0.338815069, 0.348849458, 0.3588835, 0.368918236, 0.378952431, 0.388987083, 0.399021194, 0.409056125, 0.419091375, 0.429127069, 0.439162375, 0.449199514, 0.459236014, 0.469270722, 0.479304, 0.489337639, 0.499372597, 0.509407903, 0.519440889, 0.529474611, 0.539507903, 0.549543125, 0.559578153, 0.569613167, 0.579648708, 0.589683069, 0.599717542, 0.609751458, 0.619785042, 0.629819111, 0.639853403, 0.649889875, 0.659924069, 0.669959556, 0.679993875, 0.69002825, 0.700063208, 0.710100542, 0.720135639, 0.730169944, 0.740204181, 0.750238111, 0.760272097, 0.770307264, 0.780342542, 0.790377542, 0.800411542, 0.810445097, 0.820478083, 0.830511958, 0.840545778, 0.850580431, 0.860614694, 0.870650056, 0.880685472, 0.890720472, 0.900755569, 0.910791375, 0.920826736, 0.930862167, 0.94089725, 0.950931486, 0.960965014, 0.971000014, 0.981034847, 0.991069625, 1.001104097, 1.011139458, 1.021174139, 1.03121125, 1.041249111] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:34.128" endtime="20201112 12:45:34.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:34.116" endtime="20201112 12:45:34.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:34.140" endtime="20201112 12:45:34.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:34.149" endtime="20201112 12:45:34.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:34.144" endtime="20201112 12:45:34.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:34.136" endtime="20201112 12:45:34.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:31.414" endtime="20201112 12:45:34.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:25.887" endtime="20201112 12:45:34.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:25.885" endtime="20201112 12:45:34.175"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:45:34.181" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:34.202" endtime="20201112 12:45:36.330"></status>
</kw>
<msg timestamp="20201112 12:45:36.331" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25474134, 'wakeups': [25484272, 25494272, 25504272, 25514272, 25524272...</msg>
<status status="PASS" starttime="20201112 12:45:34.198" endtime="20201112 12:45:36.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:36.338" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25474134, 'wakeups': [25484272, 25494272, 25504272, 25514272, 25524272...</msg>
<status status="PASS" starttime="20201112 12:45:36.333" endtime="20201112 12:45:36.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:36.340" endtime="20201112 12:45:36.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:34.191" endtime="20201112 12:45:36.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:34.186" endtime="20201112 12:45:36.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:36.355" level="INFO">${RESULT} = {'timer-count': 4, 'wakeups': [25484272, 25494272, 25504272, 25514272, 25524272, 25534272, 25544272, 25554272, 25564271, 25574272, 25584272, 25594272, 25604272, 25614272, 25624272, 25634272, 25644272,...</msg>
<status status="PASS" starttime="20201112 12:45:36.350" endtime="20201112 12:45:36.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:36.365" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:36.363" endtime="20201112 12:45:36.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:36.370" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:36.367" endtime="20201112 12:45:36.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:36.357" endtime="20201112 12:45:36.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:36.382" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:45:36.380" endtime="20201112 12:45:36.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:36.386" level="INFO">VALUE: 25474134</msg>
<status status="PASS" starttime="20201112 12:45:36.384" endtime="20201112 12:45:36.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:36.373" endtime="20201112 12:45:36.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:36.399" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:36.396" endtime="20201112 12:45:36.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:36.404" level="INFO">VALUE: [25484272, 25494272, 25504272, 25514272, 25524272, 25534272, 25544272, 25554272, 25564271, 25574272, 25584272, 25594272, 25604272, 25614272, 25624272, 25634272, 25644272, 25654272, 25664272, 25674272, 25684272, 25694272, 25704272, 25714272, 25724272, 25734272, 25744272, 25754272, 25764271, 25774272, 25784272, 25794272, 25804272, 25814272, 25824272, 25834272, 25844272, 25854271, 25864272, 25874272, 25884272, 25894272, 25904272, 25914272, 25924272, 25934272, 25944272, 25954272, 25964272, 25974272, 25984272, 25994272, 26004272, 26014272, 26024272, 26034272, 26044272, 26054272, 26064272, 26074272, 26084272, 26094272, 26104271, 26114272, 26124272, 26134272, 26144272, 26154272, 26164272, 26174272, 26184272, 26194272, 26204271, 26214272, 26224272, 26234272, 26244271, 26254272, 26264272, 26274272, 26284271, 26294272, 26304272, 26314272, 26324272, 26334272, 26344272, 26354272, 26364272, 26374272, 26384272, 26394271, 26404272, 26414272, 26424272, 26434272, 26444272, 26454272, 26464272, 26474272]</msg>
<status status="PASS" starttime="20201112 12:45:36.401" endtime="20201112 12:45:36.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:36.390" endtime="20201112 12:45:36.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:36.428" endtime="20201112 12:45:36.772"></status>
</kw>
<msg timestamp="20201112 12:45:36.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043525306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053697569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:36.424" endtime="20201112 12:45:36.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:36.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043525306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053697569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:36.780" endtime="20201112 12:45:36.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:36.797" endtime="20201112 12:45:36.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:36.417" endtime="20201112 12:45:36.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:36.412" endtime="20201112 12:45:36.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:36.859" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:36.806" endtime="20201112 12:45:36.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:36.870" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:45:36.867" endtime="20201112 12:45:36.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:36.874" level="INFO">VALUE: 0.043525306</msg>
<status status="PASS" starttime="20201112 12:45:36.872" endtime="20201112 12:45:36.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:36.861" endtime="20201112 12:45:36.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:36.887" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:36.885" endtime="20201112 12:45:36.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:36.892" level="INFO">VALUE: [0.053697569, 0.063732056, 0.073768597, 0.0838055, 0.093841111, 0.103878319, 0.113916625, 0.123954875, 0.133991444, 0.144026625, 0.154061653, 0.164094611, 0.174127778, 0.184161417, 0.194194306, 0.204226056, 0.214260819, 0.224294944, 0.234328542, 0.244362278, 0.254397472, 0.264432167, 0.274467097, 0.284502, 0.294538042, 0.304573458, 0.314608417, 0.324642653, 0.334676667, 0.344712597, 0.354748153, 0.364782292, 0.374816625, 0.384849597, 0.394882722, 0.404916194, 0.414949931, 0.424983375, 0.435020639, 0.445055181, 0.455089361, 0.465123958, 0.475159222, 0.485194319, 0.495229306, 0.505263083, 0.515296986, 0.525330806, 0.535365681, 0.545400347, 0.555436403, 0.565470931, 0.575505264, 0.585538833, 0.595572833, 0.605605167, 0.615640125, 0.625674944, 0.635710361, 0.645745194, 0.655780861, 0.665815431, 0.675850736, 0.685886181, 0.695921194, 0.705955375, 0.715989139, 0.726022917, 0.736056542, 0.746091417, 0.756126, 0.766160194, 0.776193611, 0.786229819, 0.796265292, 0.806301083, 0.8163355, 0.826371361, 0.836406236, 0.846441042, 0.856475875, 0.866512917, 0.876549403, 0.886584597, 0.896620222, 0.906654625, 0.9166905, 0.926724917, 0.936759972, 0.946794194, 0.956829931, 0.966863222, 0.976900931, 0.986937125, 0.996973431, 1.007008708, 1.017044319, 1.027079139, 1.037113736, 1.047148694] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:36.890" endtime="20201112 12:45:36.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:36.878" endtime="20201112 12:45:36.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:36.901" endtime="20201112 12:45:36.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:36.909" endtime="20201112 12:45:36.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:36.904" endtime="20201112 12:45:36.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:36.896" endtime="20201112 12:45:36.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:34.182" endtime="20201112 12:45:36.934"></status>
</kw>
<msg timestamp="20201112 12:45:36.935" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:36.956" endtime="20201112 12:45:39.085"></status>
</kw>
<msg timestamp="20201112 12:45:39.086" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28219731, 'wakeups': [28229869, 28239869, 28249869, 28259869, 28269869...</msg>
<status status="PASS" starttime="20201112 12:45:36.952" endtime="20201112 12:45:39.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:39.093" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28219731, 'wakeups': [28229869, 28239869, 28249869, 28259869, 28269869...</msg>
<status status="PASS" starttime="20201112 12:45:39.089" endtime="20201112 12:45:39.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:39.095" endtime="20201112 12:45:39.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:36.945" endtime="20201112 12:45:39.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:36.940" endtime="20201112 12:45:39.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:39.108" level="INFO">${RESULT} = {'timer-count': 4, 'wakeups': [28229869, 28239869, 28249869, 28259869, 28269869, 28279869, 28289869, 28299869, 28309869, 28319869, 28329868, 28339869, 28349869, 28359869, 28369868, 28379869, 28389868,...</msg>
<status status="PASS" starttime="20201112 12:45:39.104" endtime="20201112 12:45:39.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:39.118" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:39.116" endtime="20201112 12:45:39.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:39.123" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:39.120" endtime="20201112 12:45:39.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:39.110" endtime="20201112 12:45:39.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:39.135" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:45:39.133" endtime="20201112 12:45:39.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:39.139" level="INFO">VALUE: 28219731</msg>
<status status="PASS" starttime="20201112 12:45:39.137" endtime="20201112 12:45:39.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:39.126" endtime="20201112 12:45:39.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:39.151" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:39.149" endtime="20201112 12:45:39.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:39.156" level="INFO">VALUE: [28229869, 28239869, 28249869, 28259869, 28269869, 28279869, 28289869, 28299869, 28309869, 28319869, 28329868, 28339869, 28349869, 28359869, 28369868, 28379869, 28389868, 28399869, 28409869, 28419869, 28429869, 28439869, 28449869, 28459868, 28469869, 28479868, 28489869, 28499869, 28509869, 28519869, 28529869, 28539869, 28549869, 28559869, 28569869, 28579869, 28589869, 28599869, 28609869, 28619869, 28629869, 28639869, 28649869, 28659869, 28669869, 28679869, 28689868, 28699869, 28709869, 28719869, 28729869, 28739869, 28749868, 28759869, 28769869, 28779869, 28789869, 28799869, 28809869, 28819868, 28829869, 28839869, 28849869, 28859869, 28869869, 28879869, 28889869, 28899869, 28909869, 28919869, 28929869, 28939869, 28949869, 28959869, 28969868, 28979869, 28989869, 28999869, 29009869, 29019869, 29029869, 29039869, 29049869, 29059869, 29069869, 29079869, 29089869, 29099869, 29109868, 29119869, 29129869, 29139869, 29149869, 29159869, 29169869, 29179869, 29189869, 29199869, 29209869, 29219868]</msg>
<status status="PASS" starttime="20201112 12:45:39.154" endtime="20201112 12:45:39.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:39.143" endtime="20201112 12:45:39.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:39.178" endtime="20201112 12:45:39.521"></status>
</kw>
<msg timestamp="20201112 12:45:39.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038329639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048504, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:45:39.175" endtime="20201112 12:45:39.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:39.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038329639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048504, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:45:39.530" endtime="20201112 12:45:39.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:39.547" endtime="20201112 12:45:39.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:39.168" endtime="20201112 12:45:39.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:39.163" endtime="20201112 12:45:39.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:39.609" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:39.556" endtime="20201112 12:45:39.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:39.619" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:45:39.617" endtime="20201112 12:45:39.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:39.624" level="INFO">VALUE: 0.038329639</msg>
<status status="PASS" starttime="20201112 12:45:39.621" endtime="20201112 12:45:39.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:39.610" endtime="20201112 12:45:39.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:39.637" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:39.635" endtime="20201112 12:45:39.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:39.642" level="INFO">VALUE: [0.048504, 0.058538153, 0.068572736, 0.078607, 0.088641903, 0.098676819, 0.108712847, 0.118749097, 0.128784556, 0.138818333, 0.148852222, 0.158888153, 0.168922792, 0.178957236, 0.188991236, 0.199025514, 0.209059625, 0.219095472, 0.229129792, 0.239163667, 0.249197583, 0.259230778, 0.269264208, 0.279297931, 0.289335681, 0.299370597, 0.309408111, 0.319443417, 0.329479222, 0.339515681, 0.3495525, 0.359586417, 0.369620653, 0.3796555, 0.389689625, 0.399722847, 0.409756278, 0.419790486, 0.429825042, 0.439856417, 0.449888958, 0.459921833, 0.469955556, 0.479987194, 0.490020097, 0.500053292, 0.510085778, 0.520120347, 0.530154833, 0.540188083, 0.550222292, 0.560256236, 0.570289681, 0.580324444, 0.590358611, 0.600392417, 0.610426708, 0.620459792, 0.630493597, 0.640526319, 0.650561319, 0.660595069, 0.670629222, 0.6806625, 0.690695292, 0.700727153, 0.710760694, 0.720794639, 0.730828681, 0.740860944, 0.750894069, 0.760927653, 0.770961347, 0.780994347, 0.791027139, 0.801060403, 0.811093333, 0.821126167, 0.831159403, 0.841192083, 0.851225944, 0.861259208, 0.871292306, 0.881324292, 0.891357111, 0.90138975, 0.911421764, 0.921454514, 0.931485917, 0.941519417, 0.951551611, 0.961583472, 0.971617444, 0.981650472, 0.991684306, 1.001717778, 1.011750931, 1.021784819, 1.031818958, 1.041851167] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:39.639" endtime="20201112 12:45:39.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:39.627" endtime="20201112 12:45:39.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:39.650" endtime="20201112 12:45:39.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:39.659" endtime="20201112 12:45:39.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:39.654" endtime="20201112 12:45:39.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:39.646" endtime="20201112 12:45:39.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:36.936" endtime="20201112 12:45:39.685"></status>
</kw>
<msg timestamp="20201112 12:45:39.686" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:39.706" endtime="20201112 12:45:41.835"></status>
</kw>
<msg timestamp="20201112 12:45:41.836" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 30960839, 'wakeups': [30970977, 30980977, 30990977, 31000977, 31010976...</msg>
<status status="PASS" starttime="20201112 12:45:39.703" endtime="20201112 12:45:41.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:41.843" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 30960839, 'wakeups': [30970977, 30980977, 30990977, 31000977, 31010976...</msg>
<status status="PASS" starttime="20201112 12:45:41.839" endtime="20201112 12:45:41.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:41.845" endtime="20201112 12:45:41.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:39.696" endtime="20201112 12:45:41.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:39.691" endtime="20201112 12:45:41.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:41.859" level="INFO">${RESULT} = {'timer-count': 4, 'wakeups': [30970977, 30980977, 30990977, 31000977, 31010976, 31020977, 31030977, 31040977, 31050976, 31060977, 31070977, 31080977, 31090976, 31100977, 31110976, 31120977, 31130976,...</msg>
<status status="PASS" starttime="20201112 12:45:41.854" endtime="20201112 12:45:41.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:41.874" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:41.872" endtime="20201112 12:45:41.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:41.879" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:41.877" endtime="20201112 12:45:41.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:41.861" endtime="20201112 12:45:41.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:41.892" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:45:41.889" endtime="20201112 12:45:41.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:41.896" level="INFO">VALUE: 30960839</msg>
<status status="PASS" starttime="20201112 12:45:41.894" endtime="20201112 12:45:41.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:41.883" endtime="20201112 12:45:41.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:41.909" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:41.906" endtime="20201112 12:45:41.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:41.913" level="INFO">VALUE: [30970977, 30980977, 30990977, 31000977, 31010976, 31020977, 31030977, 31040977, 31050976, 31060977, 31070977, 31080977, 31090976, 31100977, 31110976, 31120977, 31130976, 31140977, 31150977, 31160976, 31170977, 31180977, 31190977, 31200977, 31210977, 31220977, 31230977, 31240977, 31250977, 31260977, 31270977, 31280977, 31290977, 31300977, 31310977, 31320977, 31330977, 31340977, 31350977, 31360977, 31370977, 31380977, 31390977, 31400977, 31410977, 31420977, 31430977, 31440977, 31450977, 31460977, 31470977, 31480977, 31490977, 31500977, 31510977, 31520977, 31530977, 31540977, 31550977, 31560977, 31570977, 31580977, 31590977, 31600977, 31610977, 31620977, 31630977, 31640977, 31650977, 31660977, 31670977, 31680977, 31690977, 31700977, 31710977, 31720977, 31730977, 31740977, 31750977, 31760977, 31770977, 31780977, 31790977, 31800977, 31810977, 31820977, 31830977, 31840977, 31850977, 31860977, 31870977, 31880977, 31890977, 31900977, 31910977, 31920977, 31930977, 31940977, 31950977, 31960977]</msg>
<status status="PASS" starttime="20201112 12:45:41.911" endtime="20201112 12:45:41.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:41.900" endtime="20201112 12:45:41.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:41.932" endtime="20201112 12:45:42.276"></status>
</kw>
<msg timestamp="20201112 12:45:42.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037463264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047634903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:41.929" endtime="20201112 12:45:42.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:42.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037463264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047634903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:42.285" endtime="20201112 12:45:42.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:42.302" endtime="20201112 12:45:42.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:41.922" endtime="20201112 12:45:42.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:41.917" endtime="20201112 12:45:42.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:42.364" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:42.312" endtime="20201112 12:45:42.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:42.375" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:45:42.372" endtime="20201112 12:45:42.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:42.379" level="INFO">VALUE: 0.037463264</msg>
<status status="PASS" starttime="20201112 12:45:42.377" endtime="20201112 12:45:42.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:42.366" endtime="20201112 12:45:42.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:42.392" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:42.390" endtime="20201112 12:45:42.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:42.398" level="INFO">VALUE: [0.047634903, 0.057668569, 0.067701556, 0.077734931, 0.087765403, 0.097798611, 0.107831514, 0.117864625, 0.127895125, 0.137927681, 0.147961708, 0.157997542, 0.168033208, 0.178070028, 0.188106056, 0.198143056, 0.20817825, 0.218214486, 0.228248917, 0.238282514, 0.248316917, 0.258351958, 0.268386417, 0.278419875, 0.288453333, 0.298487819, 0.308522431, 0.31855575, 0.328589792, 0.338623083, 0.348657667, 0.358691903, 0.368726972, 0.378761583, 0.388795486, 0.398829236, 0.408863861, 0.418897903, 0.428931625, 0.438964972, 0.448998472, 0.459032736, 0.469066667, 0.479100292, 0.48913375, 0.499167542, 0.509201028, 0.519234111, 0.529267597, 0.539300319, 0.549334028, 0.559367722, 0.569401, 0.579434222, 0.589467069, 0.599498806, 0.609531028, 0.619563694, 0.629596931, 0.639629611, 0.649662542, 0.659695722, 0.669729764, 0.679762653, 0.689795, 0.699827222, 0.709860444, 0.719893542, 0.729927125, 0.739960639, 0.749992792, 0.760023222, 0.770055014, 0.780086236, 0.790117917, 0.800150014, 0.810181333, 0.820212486, 0.830244111, 0.840274417, 0.850306222, 0.860338111, 0.870371222, 0.880403861, 0.890436431, 0.900469, 0.9105015, 0.920533458, 0.93056575, 0.940597625, 0.950629639, 0.960662903, 0.970696833, 0.980732278, 0.990767611, 1.00080375, 1.010840542, 1.020875931, 1.030911903, 1.040947764] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:42.395" endtime="20201112 12:45:42.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:42.383" endtime="20201112 12:45:42.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:42.407" endtime="20201112 12:45:42.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:42.415" endtime="20201112 12:45:42.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:42.410" endtime="20201112 12:45:42.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:42.402" endtime="20201112 12:45:42.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:39.687" endtime="20201112 12:45:42.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:34.178" endtime="20201112 12:45:42.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:34.176" endtime="20201112 12:45:42.441"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:45:42.447" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:42.467" endtime="20201112 12:45:44.596"></status>
</kw>
<msg timestamp="20201112 12:45:44.597" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33712604, 'wakeups': [33722778, 33732777, 33742777, 33752776, 33762777...</msg>
<status status="PASS" starttime="20201112 12:45:42.464" endtime="20201112 12:45:44.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:44.604" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33712604, 'wakeups': [33722778, 33732777, 33742777, 33752776, 33762777...</msg>
<status status="PASS" starttime="20201112 12:45:44.599" endtime="20201112 12:45:44.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:44.606" endtime="20201112 12:45:44.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:42.457" endtime="20201112 12:45:44.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:42.452" endtime="20201112 12:45:44.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:44.621" level="INFO">${RESULT} = {'timer-count': 5, 'wakeups': [33722778, 33732777, 33742777, 33752776, 33762777, 33772775, 33782776, 33792777, 33802777, 33812776, 33822775, 33832777, 33842776, 33852775, 33862776, 33872776, 33882777,...</msg>
<status status="PASS" starttime="20201112 12:45:44.616" endtime="20201112 12:45:44.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:44.631" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:44.629" endtime="20201112 12:45:44.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:44.635" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:44.633" endtime="20201112 12:45:44.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:44.623" endtime="20201112 12:45:44.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:44.647" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:45:44.645" endtime="20201112 12:45:44.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:44.652" level="INFO">VALUE: 33712604</msg>
<status status="PASS" starttime="20201112 12:45:44.650" endtime="20201112 12:45:44.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:44.639" endtime="20201112 12:45:44.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:44.665" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:44.663" endtime="20201112 12:45:44.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:44.670" level="INFO">VALUE: [33722778, 33732777, 33742777, 33752776, 33762777, 33772775, 33782776, 33792777, 33802777, 33812776, 33822775, 33832777, 33842776, 33852775, 33862776, 33872776, 33882777, 33892777, 33902777, 33912777, 33922776, 33932776, 33942777, 33952776, 33962776, 33972775, 33982776, 33992776, 34002777, 34012776, 34022777, 34032776, 34042776, 34052777, 34062776, 34072777, 34082777, 34092776, 34102777, 34112777, 34122776, 34132776, 34142777, 34152776, 34162777, 34172777, 34182776, 34192777, 34202776, 34212776, 34222776, 34232777, 34242776, 34252777, 34262776, 34272776, 34282776, 34292777, 34302777, 34312776, 34322777, 34332777, 34342776, 34352776, 34362777, 34372776, 34382777, 34392777, 34402777, 34412776, 34422777, 34432776, 34442777, 34452777, 34462777, 34472777, 34482776, 34492776, 34502777, 34512776, 34522777, 34532776, 34542776, 34552777, 34562776, 34572777, 34582776, 34592776, 34602776, 34612775, 34622777, 34632776, 34642776, 34652776, 34662776, 34672777, 34682776, 34692776, 34702777, 34712777]</msg>
<status status="PASS" starttime="20201112 12:45:44.667" endtime="20201112 12:45:44.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:44.655" endtime="20201112 12:45:44.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:44.688" endtime="20201112 12:45:45.033"></status>
</kw>
<msg timestamp="20201112 12:45:45.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043443847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05365175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:45:44.685" endtime="20201112 12:45:45.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:45.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043443847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05365175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:45:45.041" endtime="20201112 12:45:45.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:45.058" endtime="20201112 12:45:45.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:44.678" endtime="20201112 12:45:45.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:44.673" endtime="20201112 12:45:45.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:45.122" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:45.067" endtime="20201112 12:45:45.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:45.132" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:45:45.130" endtime="20201112 12:45:45.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:45.137" level="INFO">VALUE: 0.043443847</msg>
<status status="PASS" starttime="20201112 12:45:45.135" endtime="20201112 12:45:45.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:45.124" endtime="20201112 12:45:45.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:45.150" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:45.148" endtime="20201112 12:45:45.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:45.154" level="INFO">VALUE: [0.05365175, 0.063685958, 0.073722028, 0.083757194, 0.093793917, 0.103825764, 0.113860056, 0.123895042, 0.133928764, 0.143962236, 0.153996292, 0.164033069, 0.174066667, 0.184098556, 0.194133403, 0.204166875, 0.214201931, 0.224236319, 0.234270708, 0.244304333, 0.254336542, 0.264369931, 0.274404806, 0.284437347, 0.294470792, 0.304503611, 0.314538986, 0.324571972, 0.334606583, 0.344640569, 0.354675889, 0.364708444, 0.374743361, 0.384778972, 0.394813611, 0.404849167, 0.414883056, 0.424916528, 0.434951625, 0.444985667, 0.455018236, 0.465051111, 0.475086333, 0.485119167, 0.495155583, 0.505189097, 0.515221208, 0.525255139, 0.535286847, 0.5453205, 0.555354361, 0.5653885, 0.575421333, 0.585456375, 0.595489736, 0.605522569, 0.615557139, 0.62559275, 0.635627361, 0.645659722, 0.655695042, 0.665728778, 0.675761889, 0.685795694, 0.69583025, 0.705863111, 0.715898931, 0.725933472, 0.735968444, 0.746002625, 0.756037375, 0.7660695, 0.776104569, 0.786137458, 0.796170181, 0.806202319, 0.816234, 0.826267486, 0.836301292, 0.846332944, 0.856366917, 0.866398028, 0.876431181, 0.886465375, 0.896498583, 0.906533389, 0.916567472, 0.926602111, 0.93663675, 0.946670889, 0.956706139, 0.966739361, 0.976773389, 0.986807583, 0.996841653, 1.006875403, 1.016908472, 1.026941389, 1.036976903, 1.047010139] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:45.152" endtime="20201112 12:45:45.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:45.140" endtime="20201112 12:45:45.157"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:45.163" endtime="20201112 12:45:45.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:45.172" endtime="20201112 12:45:45.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:45.168" endtime="20201112 12:45:45.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:45.159" endtime="20201112 12:45:45.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:42.448" endtime="20201112 12:45:45.198"></status>
</kw>
<msg timestamp="20201112 12:45:45.198" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:45.219" endtime="20201112 12:45:47.347"></status>
</kw>
<msg timestamp="20201112 12:45:47.349" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36455319, 'wakeups': [36465493, 36475491, 36485492, 36495492, 36505492...</msg>
<status status="PASS" starttime="20201112 12:45:45.216" endtime="20201112 12:45:47.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:47.355" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36455319, 'wakeups': [36465493, 36475491, 36485492, 36495492, 36505492...</msg>
<status status="PASS" starttime="20201112 12:45:47.351" endtime="20201112 12:45:47.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:47.358" endtime="20201112 12:45:47.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:45.209" endtime="20201112 12:45:47.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:45.203" endtime="20201112 12:45:47.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:47.371" level="INFO">${RESULT} = {'timer-count': 5, 'wakeups': [36465493, 36475491, 36485492, 36495492, 36505492, 36515492, 36525492, 36535492, 36545491, 36555492, 36565491, 36575491, 36585491, 36595491, 36605492, 36615492, 36625491,...</msg>
<status status="PASS" starttime="20201112 12:45:47.366" endtime="20201112 12:45:47.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:47.381" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:47.378" endtime="20201112 12:45:47.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:47.385" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:47.383" endtime="20201112 12:45:47.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:47.372" endtime="20201112 12:45:47.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:47.397" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:45:47.395" endtime="20201112 12:45:47.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:47.402" level="INFO">VALUE: 36455319</msg>
<status status="PASS" starttime="20201112 12:45:47.400" endtime="20201112 12:45:47.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:47.389" endtime="20201112 12:45:47.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:47.414" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:47.412" endtime="20201112 12:45:47.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:47.419" level="INFO">VALUE: [36465493, 36475491, 36485492, 36495492, 36505492, 36515492, 36525492, 36535492, 36545491, 36555492, 36565491, 36575491, 36585491, 36595491, 36605492, 36615492, 36625491, 36635492, 36645492, 36655492, 36665492, 36675491, 36685491, 36695492, 36705491, 36715492, 36725491, 36735491, 36745491, 36755491, 36765492, 36775492, 36785492, 36795492, 36805491, 36815492, 36825491, 36835491, 36845492, 36855492, 36865492, 36875491, 36885492, 36895492, 36905492, 36915492, 36925492, 36935491, 36945492, 36955491, 36965492, 36975492, 36985491, 36995491, 37005492, 37015492, 37025492, 37035491, 37045492, 37055491, 37065492, 37075491, 37085492, 37095491, 37105492, 37115491, 37125492, 37135492, 37145492, 37155491, 37165492, 37175491, 37185491, 37195492, 37205493, 37215492, 37225491, 37235491, 37245492, 37255491, 37265492, 37275492, 37285491, 37295492, 37305492, 37315492, 37325491, 37335492, 37345492, 37355492, 37365492, 37375492, 37385492, 37395491, 37405491, 37415491, 37425491, 37435492, 37445491, 37455492]</msg>
<status status="PASS" starttime="20201112 12:45:47.416" endtime="20201112 12:45:47.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:47.405" endtime="20201112 12:45:47.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:47.444" endtime="20201112 12:45:47.788"></status>
</kw>
<msg timestamp="20201112 12:45:47.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037619986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047828847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:47.436" endtime="20201112 12:45:47.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:47.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037619986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047828847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:47.796" endtime="20201112 12:45:47.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:47.813" endtime="20201112 12:45:47.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:47.429" endtime="20201112 12:45:47.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:47.422" endtime="20201112 12:45:47.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:47.873" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:47.821" endtime="20201112 12:45:47.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:47.884" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:45:47.882" endtime="20201112 12:45:47.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:47.889" level="INFO">VALUE: 0.037619986</msg>
<status status="PASS" starttime="20201112 12:45:47.886" endtime="20201112 12:45:47.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:47.875" endtime="20201112 12:45:47.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:47.902" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:47.899" endtime="20201112 12:45:47.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:47.906" level="INFO">VALUE: [0.047828847, 0.057861167, 0.067897097, 0.077931389, 0.087967208, 0.098002333, 0.108037819, 0.118072889, 0.128106333, 0.138141431, 0.148175, 0.158208056, 0.168242514, 0.178277903, 0.188314528, 0.198350139, 0.208385556, 0.218422056, 0.228457542, 0.238492694, 0.248527958, 0.258562431, 0.268598083, 0.278634875, 0.288669542, 0.298705528, 0.308739125, 0.318773167, 0.328808986, 0.338844875, 0.348880208, 0.358914486, 0.368949389, 0.378983583, 0.389017319, 0.399053333, 0.409086986, 0.419120708, 0.429156292, 0.439191625, 0.449227597, 0.459262833, 0.469300153, 0.479336389, 0.489370903, 0.499405917, 0.509441472, 0.519475, 0.529510875, 0.539545556, 0.549582694, 0.559617847, 0.569652458, 0.579687111, 0.589722583, 0.599756375, 0.60979175, 0.619825125, 0.629862986, 0.639898514, 0.649934528, 0.659968125, 0.670002986, 0.680033903, 0.690067153, 0.700100042, 0.710135361, 0.720169125, 0.730202986, 0.740235681, 0.750270667, 0.760304819, 0.770339722, 0.780374569, 0.790409736, 0.800443861, 0.810477556, 0.820512542, 0.830548042, 0.840581819, 0.850616931, 0.860649903, 0.870681847, 0.880715819, 0.890748472, 0.900782431, 0.910815208, 0.920849264, 0.930882472, 0.940915986, 0.950951125, 0.960984708, 0.971019264, 0.981052278, 0.991086333, 1.0011195, 1.0111535, 1.021188208, 1.031220292, 1.041254181] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:47.904" endtime="20201112 12:45:47.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:47.892" endtime="20201112 12:45:47.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:47.915" endtime="20201112 12:45:47.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:47.923" endtime="20201112 12:45:47.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:47.919" endtime="20201112 12:45:47.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:47.910" endtime="20201112 12:45:47.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:45.200" endtime="20201112 12:45:47.949"></status>
</kw>
<msg timestamp="20201112 12:45:47.949" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:47.971" endtime="20201112 12:45:50.099"></status>
</kw>
<msg timestamp="20201112 12:45:50.101" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39198541, 'wakeups': [39208715, 39218713, 39228713, 39238713, 39248714...</msg>
<status status="PASS" starttime="20201112 12:45:47.968" endtime="20201112 12:45:50.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:50.108" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39198541, 'wakeups': [39208715, 39218713, 39228713, 39238713, 39248714...</msg>
<status status="PASS" starttime="20201112 12:45:50.103" endtime="20201112 12:45:50.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:50.111" endtime="20201112 12:45:50.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:47.959" endtime="20201112 12:45:50.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:47.954" endtime="20201112 12:45:50.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:50.125" level="INFO">${RESULT} = {'timer-count': 5, 'wakeups': [39208715, 39218713, 39228713, 39238713, 39248714, 39258713, 39268713, 39278714, 39288713, 39298714, 39308714, 39318713, 39328713, 39338714, 39348714, 39358713, 39368714,...</msg>
<status status="PASS" starttime="20201112 12:45:50.120" endtime="20201112 12:45:50.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:50.135" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:50.133" endtime="20201112 12:45:50.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:50.140" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:50.138" endtime="20201112 12:45:50.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:50.126" endtime="20201112 12:45:50.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:50.153" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:45:50.150" endtime="20201112 12:45:50.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:50.157" level="INFO">VALUE: 39198541</msg>
<status status="PASS" starttime="20201112 12:45:50.155" endtime="20201112 12:45:50.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:50.144" endtime="20201112 12:45:50.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:50.169" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:50.167" endtime="20201112 12:45:50.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:50.174" level="INFO">VALUE: [39208715, 39218713, 39228713, 39238713, 39248714, 39258713, 39268713, 39278714, 39288713, 39298714, 39308714, 39318713, 39328713, 39338714, 39348714, 39358713, 39368714, 39378714, 39388713, 39398713, 39408714, 39418713, 39428713, 39438714, 39448713, 39458713, 39468713, 39478714, 39488714, 39498713, 39508714, 39518714, 39528714, 39538714, 39548713, 39558713, 39568714, 39578713, 39588713, 39598714, 39608714, 39618714, 39628713, 39638714, 39648714, 39658712, 39668714, 39678714, 39688713, 39698713, 39708714, 39718714, 39728714, 39738714, 39748713, 39758714, 39768714, 39778714, 39788714, 39798714, 39808714, 39818714, 39828714, 39838714, 39848714, 39858714, 39868713, 39878714, 39888714, 39898713, 39908713, 39918714, 39928714, 39938712, 39948714, 39958714, 39968713, 39978713, 39988714, 39998713, 40008713, 40018713, 40028714, 40038713, 40048714, 40058713, 40068713, 40078714, 40088713, 40098713, 40108714, 40118714, 40128713, 40138714, 40148713, 40158713, 40168714, 40178713, 40188713, 40198713]</msg>
<status status="PASS" starttime="20201112 12:45:50.172" endtime="20201112 12:45:50.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:50.161" endtime="20201112 12:45:50.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:50.193" endtime="20201112 12:45:50.536"></status>
</kw>
<msg timestamp="20201112 12:45:50.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0391265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049333236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:45:50.190" endtime="20201112 12:45:50.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:50.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0391265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049333236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:45:50.545" endtime="20201112 12:45:50.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:50.562" endtime="20201112 12:45:50.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:50.182" endtime="20201112 12:45:50.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:50.178" endtime="20201112 12:45:50.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:50.625" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:50.570" endtime="20201112 12:45:50.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:50.636" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:45:50.634" endtime="20201112 12:45:50.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:50.640" level="INFO">VALUE: 0.0391265</msg>
<status status="PASS" starttime="20201112 12:45:50.638" endtime="20201112 12:45:50.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:50.627" endtime="20201112 12:45:50.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:50.654" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:50.651" endtime="20201112 12:45:50.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:50.658" level="INFO">VALUE: [0.049333236, 0.059364542, 0.069397458, 0.079430181, 0.089463361, 0.099493847, 0.109525431, 0.119559222, 0.129591, 0.139623917, 0.149656431, 0.159688458, 0.169721986, 0.179756097, 0.189789375, 0.199821667, 0.209856819, 0.219890681, 0.229924208, 0.239958125, 0.249993667, 0.260027125, 0.270061167, 0.280095708, 0.290127347, 0.300160986, 0.310194958, 0.320227972, 0.330260181, 0.340293, 0.350327583, 0.360360583, 0.370393639, 0.380426375, 0.3904575, 0.400489139, 0.410522611, 0.420554417, 0.430588361, 0.440621514, 0.450654667, 0.4606875, 0.470719167, 0.480753014, 0.490784403, 0.500813944, 0.510848083, 0.520879931, 0.530910958, 0.540943153, 0.550976806, 0.561009347, 0.571041819, 0.581073375, 0.591103917, 0.601135819, 0.611167514, 0.621199319, 0.631232431, 0.641265736, 0.651300222, 0.661335153, 0.671369833, 0.681403153, 0.691437736, 0.701471917, 0.711505653, 0.721540875, 0.731573431, 0.741604722, 0.751636792, 0.761670361, 0.771703792, 0.781735903, 0.791771556, 0.801804792, 0.811838292, 0.821872097, 0.831906792, 0.84193975, 0.851973958, 0.862007528, 0.872041764, 0.882073139, 0.892105278, 0.902136667, 0.912169653, 0.922203611, 0.932236722, 0.942271361, 0.952307708, 0.962340569, 0.972372694, 0.982406903, 0.992438569, 1.002470389, 1.012504486, 1.022536833, 1.032570958, 1.042604986] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:50.656" endtime="20201112 12:45:50.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:50.644" endtime="20201112 12:45:50.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:50.667" endtime="20201112 12:45:50.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:50.675" endtime="20201112 12:45:50.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:50.671" endtime="20201112 12:45:50.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:50.662" endtime="20201112 12:45:50.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:47.950" endtime="20201112 12:45:50.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:42.444" endtime="20201112 12:45:50.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:42.442" endtime="20201112 12:45:50.701"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:45:50.707" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:50.728" endtime="20201112 12:45:52.856"></status>
</kw>
<msg timestamp="20201112 12:45:52.858" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41945865, 'wakeups': [41956073, 41966074, 41976074, 41986074, 41996074...</msg>
<status status="PASS" starttime="20201112 12:45:50.724" endtime="20201112 12:45:52.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:52.864" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41945865, 'wakeups': [41956073, 41966074, 41976074, 41986074, 41996074...</msg>
<status status="PASS" starttime="20201112 12:45:52.860" endtime="20201112 12:45:52.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:52.867" endtime="20201112 12:45:52.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:50.717" endtime="20201112 12:45:52.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:50.712" endtime="20201112 12:45:52.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:52.879" level="INFO">${RESULT} = {'timer-count': 6, 'wakeups': [41956073, 41966074, 41976074, 41986074, 41996074, 42006074, 42016074, 42026074, 42036074, 42046074, 42056074, 42066074, 42076074, 42086074, 42096075, 42106074, 42116074,...</msg>
<status status="PASS" starttime="20201112 12:45:52.875" endtime="20201112 12:45:52.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:52.895" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:52.887" endtime="20201112 12:45:52.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:52.900" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:52.898" endtime="20201112 12:45:52.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:52.881" endtime="20201112 12:45:52.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:52.912" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:45:52.910" endtime="20201112 12:45:52.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:52.917" level="INFO">VALUE: 41945865</msg>
<status status="PASS" starttime="20201112 12:45:52.915" endtime="20201112 12:45:52.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:52.904" endtime="20201112 12:45:52.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:52.931" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:52.929" endtime="20201112 12:45:52.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:52.936" level="INFO">VALUE: [41956073, 41966074, 41976074, 41986074, 41996074, 42006074, 42016074, 42026074, 42036074, 42046074, 42056074, 42066074, 42076074, 42086074, 42096075, 42106074, 42116074, 42126074, 42136074, 42146074, 42156074, 42166074, 42176074, 42186074, 42196074, 42206074, 42216074, 42226074, 42236074, 42246074, 42256073, 42266074, 42276074, 42286074, 42296073, 42306074, 42316074, 42326074, 42336074, 42346074, 42356074, 42366074, 42376074, 42386074, 42396074, 42406074, 42416074, 42426074, 42436073, 42446074, 42456074, 42466074, 42476073, 42486074, 42496074, 42506074, 42516074, 42526074, 42536074, 42546074, 42556074, 42566074, 42576074, 42586074, 42596074, 42606074, 42616074, 42626074, 42636073, 42646074, 42656074, 42666074, 42676073, 42686074, 42696074, 42706074, 42716074, 42726074, 42736073, 42746074, 42756074, 42766074, 42776074, 42786074, 42796073, 42806074, 42816073, 42826074, 42836073, 42846074, 42856074, 42866074, 42876073, 42886074, 42896074, 42906074, 42916074, 42926074, 42936074, 42946073]</msg>
<status status="PASS" starttime="20201112 12:45:52.933" endtime="20201112 12:45:52.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:52.920" endtime="20201112 12:45:52.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:52.954" endtime="20201112 12:45:53.297"></status>
</kw>
<msg timestamp="20201112 12:45:53.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043478889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05372275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:45:52.951" endtime="20201112 12:45:53.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:53.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043478889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05372275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:45:53.306" endtime="20201112 12:45:53.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:53.323" endtime="20201112 12:45:53.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:52.944" endtime="20201112 12:45:53.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:52.940" endtime="20201112 12:45:53.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:53.383" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:53.331" endtime="20201112 12:45:53.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:53.394" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:45:53.392" endtime="20201112 12:45:53.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:53.399" level="INFO">VALUE: 0.043478889</msg>
<status status="PASS" starttime="20201112 12:45:53.396" endtime="20201112 12:45:53.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:53.385" endtime="20201112 12:45:53.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:53.412" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:53.410" endtime="20201112 12:45:53.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:53.416" level="INFO">VALUE: [0.05372275, 0.063758278, 0.073793222, 0.083827403, 0.093862569, 0.103897014, 0.113934431, 0.123971111, 0.134008625, 0.144046069, 0.154082722, 0.164117958, 0.174152625, 0.184187792, 0.194223194, 0.204257181, 0.214293708, 0.224329625, 0.234364889, 0.244401083, 0.254436875, 0.264473486, 0.274509542, 0.284545528, 0.294581292, 0.304616306, 0.314652111, 0.324687306, 0.334721667, 0.344756306, 0.354790014, 0.364824903, 0.374861236, 0.384898264, 0.394934889, 0.404973986, 0.415011806, 0.425049236, 0.435086583, 0.445123903, 0.455160278, 0.465196875, 0.475233292, 0.485267153, 0.495301014, 0.505334361, 0.515368458, 0.525402306, 0.53543425, 0.545469125, 0.555503486, 0.565538361, 0.575572069, 0.585607153, 0.595641792, 0.605676611, 0.615711333, 0.625745417, 0.635780042, 0.645815042, 0.655850681, 0.665884625, 0.675919028, 0.685953597, 0.695988347, 0.706023014, 0.716057667, 0.726092722, 0.736126917, 0.746161347, 0.756195583, 0.766231181, 0.776264472, 0.786300208, 0.796335444, 0.806371486, 0.816407597, 0.826441194, 0.836474944, 0.846508833, 0.856541986, 0.866574639, 0.876609167, 0.886643458, 0.896676319, 0.906711056, 0.916745222, 0.926781028, 0.9368155, 0.946850306, 0.956883778, 0.966917792, 0.976951486, 0.986986847, 0.997022236, 1.007056972, 1.017092167, 1.027126708, 1.037163014, 1.047196167] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:53.414" endtime="20201112 12:45:53.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:53.402" endtime="20201112 12:45:53.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:53.426" endtime="20201112 12:45:53.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:53.435" endtime="20201112 12:45:53.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:53.430" endtime="20201112 12:45:53.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:53.421" endtime="20201112 12:45:53.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:50.708" endtime="20201112 12:45:53.461"></status>
</kw>
<msg timestamp="20201112 12:45:53.461" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:53.482" endtime="20201112 12:45:55.610"></status>
</kw>
<msg timestamp="20201112 12:45:55.612" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44690936, 'wakeups': [44701144, 44711145, 44721145, 44731145, 44741145...</msg>
<status status="PASS" starttime="20201112 12:45:53.479" endtime="20201112 12:45:55.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:55.618" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44690936, 'wakeups': [44701144, 44711145, 44721145, 44731145, 44741145...</msg>
<status status="PASS" starttime="20201112 12:45:55.614" endtime="20201112 12:45:55.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:55.621" endtime="20201112 12:45:55.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:53.472" endtime="20201112 12:45:55.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:53.466" endtime="20201112 12:45:55.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:55.633" level="INFO">${RESULT} = {'timer-count': 6, 'wakeups': [44701144, 44711145, 44721145, 44731145, 44741145, 44751145, 44761145, 44771145, 44781145, 44791145, 44801144, 44811145, 44821144, 44831145, 44841145, 44851144, 44861145,...</msg>
<status status="PASS" starttime="20201112 12:45:55.629" endtime="20201112 12:45:55.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:55.643" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:55.641" endtime="20201112 12:45:55.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:55.648" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:55.646" endtime="20201112 12:45:55.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:55.635" endtime="20201112 12:45:55.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:55.660" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:45:55.658" endtime="20201112 12:45:55.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:55.665" level="INFO">VALUE: 44690936</msg>
<status status="PASS" starttime="20201112 12:45:55.662" endtime="20201112 12:45:55.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:55.651" endtime="20201112 12:45:55.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:55.677" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:55.674" endtime="20201112 12:45:55.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:55.682" level="INFO">VALUE: [44701144, 44711145, 44721145, 44731145, 44741145, 44751145, 44761145, 44771145, 44781145, 44791145, 44801144, 44811145, 44821144, 44831145, 44841145, 44851144, 44861145, 44871145, 44881145, 44891144, 44901145, 44911145, 44921145, 44931145, 44941145, 44951145, 44961145, 44971145, 44981145, 44991145, 45001145, 45011145, 45021145, 45031145, 45041144, 45051145, 45061145, 45071145, 45081145, 45091145, 45101145, 45111145, 45121145, 45131145, 45141145, 45151145, 45161145, 45171145, 45181145, 45191145, 45201145, 45211145, 45221145, 45231145, 45241145, 45251144, 45261145, 45271145, 45281145, 45291145, 45301145, 45311145, 45321145, 45331145, 45341145, 45351145, 45361145, 45371145, 45381145, 45391145, 45401145, 45411144, 45421145, 45431145, 45441145, 45451145, 45461145, 45471145, 45481145, 45491145, 45501145, 45511145, 45521146, 45531145, 45541145, 45551145, 45561145, 45571145, 45581145, 45591145, 45601145, 45611145, 45621145, 45631144, 45641145, 45651145, 45661145, 45671145, 45681145, 45691145]</msg>
<status status="PASS" starttime="20201112 12:45:55.679" endtime="20201112 12:45:55.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:55.668" endtime="20201112 12:45:55.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:55.701" endtime="20201112 12:45:56.044"></status>
</kw>
<msg timestamp="20201112 12:45:56.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037413069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047656292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:55.698" endtime="20201112 12:45:56.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:56.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037413069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047656292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:56.052" endtime="20201112 12:45:56.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:56.069" endtime="20201112 12:45:56.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:55.691" endtime="20201112 12:45:56.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:55.685" endtime="20201112 12:45:56.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:56.132" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:56.079" endtime="20201112 12:45:56.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:56.143" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:45:56.141" endtime="20201112 12:45:56.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:56.148" level="INFO">VALUE: 0.037413069</msg>
<status status="PASS" starttime="20201112 12:45:56.145" endtime="20201112 12:45:56.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:56.134" endtime="20201112 12:45:56.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:56.161" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:56.159" endtime="20201112 12:45:56.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:56.165" level="INFO">VALUE: [0.047656292, 0.057693389, 0.067728597, 0.077763472, 0.087798264, 0.097831917, 0.107866125, 0.117899958, 0.127934042, 0.137968014, 0.148000681, 0.158036333, 0.168070694, 0.178106681, 0.188141125, 0.198174333, 0.208209403, 0.218243306, 0.228278083, 0.23831125, 0.248348264, 0.258384431, 0.268420153, 0.278455208, 0.288489153, 0.298523542, 0.308557181, 0.318590472, 0.328625458, 0.338658889, 0.34869275, 0.358727139, 0.368761306, 0.378795403, 0.388827875, 0.398863903, 0.408898944, 0.418932583, 0.428966986, 0.439000208, 0.449034681, 0.459068875, 0.469102792, 0.479137597, 0.489172097, 0.499206292, 0.509241528, 0.519276736, 0.529311139, 0.539346167, 0.549381167, 0.559415472, 0.569450764, 0.579486306, 0.589522431, 0.599556542, 0.609591875, 0.619626292, 0.629661347, 0.639695597, 0.649730375, 0.659764542, 0.669798653, 0.679832903, 0.689868653, 0.69990325, 0.709937639, 0.719972167, 0.730008597, 0.740042472, 0.750077625, 0.760111125, 0.770146819, 0.780180792, 0.790214597, 0.800247292, 0.810280333, 0.820313431, 0.830347292, 0.840381514, 0.850415556, 0.860449875, 0.870486764, 0.880521139, 0.890557778, 0.9005935, 0.910629375, 0.920665875, 0.930701486, 0.940735597, 0.950768639, 0.960803472, 0.970838875, 0.980871236, 0.990906958, 1.000941056, 1.010975583, 1.021011222, 1.031046986, 1.041083639] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:56.163" endtime="20201112 12:45:56.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:56.151" endtime="20201112 12:45:56.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:56.174" endtime="20201112 12:45:56.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:56.182" endtime="20201112 12:45:56.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:56.178" endtime="20201112 12:45:56.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:56.170" endtime="20201112 12:45:56.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:53.463" endtime="20201112 12:45:56.208"></status>
</kw>
<msg timestamp="20201112 12:45:56.208" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:56.229" endtime="20201112 12:45:58.357"></status>
</kw>
<msg timestamp="20201112 12:45:58.358" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47428308, 'wakeups': [47438517, 47448517, 47458517, 47468516, 47478517...</msg>
<status status="PASS" starttime="20201112 12:45:56.225" endtime="20201112 12:45:58.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:58.371" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47428308, 'wakeups': [47438517, 47448517, 47458517, 47468516, 47478517...</msg>
<status status="PASS" starttime="20201112 12:45:58.366" endtime="20201112 12:45:58.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:58.373" endtime="20201112 12:45:58.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:56.218" endtime="20201112 12:45:58.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:56.213" endtime="20201112 12:45:58.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:58.389" level="INFO">${RESULT} = {'timer-count': 6, 'wakeups': [47438517, 47448517, 47458517, 47468516, 47478517, 47488517, 47498517, 47508516, 47518517, 47528517, 47538517, 47548517, 47558517, 47568517, 47578517, 47588517, 47598517,...</msg>
<status status="PASS" starttime="20201112 12:45:58.382" endtime="20201112 12:45:58.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:58.399" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:45:58.397" endtime="20201112 12:45:58.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:58.404" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:45:58.402" endtime="20201112 12:45:58.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:58.391" endtime="20201112 12:45:58.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:58.416" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:45:58.414" endtime="20201112 12:45:58.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:58.421" level="INFO">VALUE: 47428308</msg>
<status status="PASS" starttime="20201112 12:45:58.418" endtime="20201112 12:45:58.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:58.407" endtime="20201112 12:45:58.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:58.433" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:58.431" endtime="20201112 12:45:58.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:58.438" level="INFO">VALUE: [47438517, 47448517, 47458517, 47468516, 47478517, 47488517, 47498517, 47508516, 47518517, 47528517, 47538517, 47548517, 47558517, 47568517, 47578517, 47588517, 47598517, 47608517, 47618517, 47628517, 47638517, 47648517, 47658517, 47668517, 47678517, 47688517, 47698517, 47708517, 47718517, 47728517, 47738517, 47748517, 47758517, 47768517, 47778517, 47788517, 47798516, 47808517, 47818517, 47828517, 47838517, 47848516, 47858517, 47868516, 47878517, 47888517, 47898517, 47908517, 47918517, 47928517, 47938517, 47948517, 47958517, 47968517, 47978517, 47988517, 47998517, 48008517, 48018517, 48028518, 48038517, 48048516, 48058517, 48068517, 48078516, 48088517, 48098517, 48108517, 48118517, 48128517, 48138517, 48148517, 48158517, 48168516, 48178517, 48188517, 48198516, 48208517, 48218517, 48228517, 48238517, 48248517, 48258517, 48268517, 48278517, 48288517, 48298517, 48308516, 48318517, 48328517, 48338517, 48348517, 48358517, 48368517, 48378517, 48388517, 48398517, 48408517, 48418516, 48428517]</msg>
<status status="PASS" starttime="20201112 12:45:58.435" endtime="20201112 12:45:58.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:58.424" endtime="20201112 12:45:58.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:58.456" endtime="20201112 12:45:58.809"></status>
</kw>
<msg timestamp="20201112 12:45:58.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037341458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047586806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:58.453" endtime="20201112 12:45:58.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:45:58.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037341458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047586806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:45:58.817" endtime="20201112 12:45:58.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:58.834" endtime="20201112 12:45:58.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:58.446" endtime="20201112 12:45:58.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:58.441" endtime="20201112 12:45:58.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:45:58.897" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:45:58.842" endtime="20201112 12:45:58.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:58.907" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:45:58.905" endtime="20201112 12:45:58.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:58.912" level="INFO">VALUE: 0.037341458</msg>
<status status="PASS" starttime="20201112 12:45:58.910" endtime="20201112 12:45:58.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:58.898" endtime="20201112 12:45:58.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:45:58.925" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:45:58.923" endtime="20201112 12:45:58.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:45:58.930" level="INFO">VALUE: [0.047586806, 0.057621931, 0.067658389, 0.077693028, 0.087729278, 0.097764639, 0.107800083, 0.117835194, 0.127872639, 0.137907125, 0.14794225, 0.157977139, 0.168012625, 0.178047375, 0.188083444, 0.198119028, 0.208154611, 0.21819, 0.228224667, 0.238259528, 0.248294944, 0.258329486, 0.268365667, 0.278400417, 0.288435653, 0.298469986, 0.308504514, 0.318538472, 0.328573056, 0.338607375, 0.348642667, 0.358677722, 0.368713083, 0.378747792, 0.388783042, 0.398817667, 0.408851389, 0.418888139, 0.428923583, 0.438958514, 0.44899375, 0.459028736, 0.469066069, 0.479099028, 0.489134944, 0.499169028, 0.509202819, 0.519235806, 0.529269319, 0.539302222, 0.549337361, 0.559372347, 0.569407458, 0.579443306, 0.589479556, 0.599514583, 0.609550389, 0.619585736, 0.629621278, 0.6396585, 0.649693819, 0.659728389, 0.669765042, 0.679800222, 0.689833806, 0.699868681, 0.709903722, 0.719938375, 0.729972806, 0.740008958, 0.750044208, 0.760079042, 0.770114778, 0.780149653, 0.790186403, 0.800221417, 0.810255833, 0.820291264, 0.830325931, 0.840359903, 0.850395528, 0.860429444, 0.870463819, 0.880497472, 0.890531153, 0.900564597, 0.910598611, 0.920632569, 0.930668083, 0.94070175, 0.950735667, 0.960770139, 0.970805139, 0.980839958, 0.990874847, 1.000909847, 1.010946431, 1.020983625, 1.031019097, 1.041056931] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:45:58.927" endtime="20201112 12:45:58.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:58.915" endtime="20201112 12:45:58.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:58.938" endtime="20201112 12:45:58.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:45:58.946" endtime="20201112 12:45:58.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:58.942" endtime="20201112 12:45:58.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:58.934" endtime="20201112 12:45:58.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:56.210" endtime="20201112 12:45:58.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:50.704" endtime="20201112 12:45:58.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:50.702" endtime="20201112 12:45:58.973"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:45:58.979" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:45:58.999" endtime="20201112 12:46:01.150"></status>
</kw>
<msg timestamp="20201112 12:46:01.151" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 50189858, 'wakeups': [50200108, 50210109, 50220109, 50230109, 50240109...</msg>
<status status="PASS" starttime="20201112 12:45:58.996" endtime="20201112 12:46:01.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:01.158" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 50189858, 'wakeups': [50200108, 50210109, 50220109, 50230109, 50240109...</msg>
<status status="PASS" starttime="20201112 12:46:01.153" endtime="20201112 12:46:01.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:01.160" endtime="20201112 12:46:01.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:58.989" endtime="20201112 12:46:01.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:58.984" endtime="20201112 12:46:01.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:01.173" level="INFO">${RESULT} = {'timer-count': 7, 'wakeups': [50200108, 50210109, 50220109, 50230109, 50240109, 50250108, 50260109, 50270109, 50280109, 50290109, 50300109, 50310109, 50320109, 50330109, 50340108, 50350109, 50360109,...</msg>
<status status="PASS" starttime="20201112 12:46:01.168" endtime="20201112 12:46:01.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:01.184" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:46:01.181" endtime="20201112 12:46:01.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:01.188" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:46:01.186" endtime="20201112 12:46:01.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:01.175" endtime="20201112 12:46:01.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:01.200" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:46:01.198" endtime="20201112 12:46:01.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:01.205" level="INFO">VALUE: 50189858</msg>
<status status="PASS" starttime="20201112 12:46:01.203" endtime="20201112 12:46:01.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:01.192" endtime="20201112 12:46:01.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:01.217" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:01.215" endtime="20201112 12:46:01.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:01.222" level="INFO">VALUE: [50200108, 50210109, 50220109, 50230109, 50240109, 50250108, 50260109, 50270109, 50280109, 50290109, 50300109, 50310109, 50320109, 50330109, 50340108, 50350109, 50360109, 50370109, 50380109, 50390109, 50400109, 50410109, 50420109, 50430109, 50440108, 50450109, 50460109, 50470109, 50480109, 50490109, 50500109, 50510109, 50520109, 50530109, 50540109, 50550109, 50560109, 50570109, 50580109, 50590109, 50600109, 50610109, 50620109, 50630109, 50640109, 50650109, 50660109, 50670109, 50680109, 50690109, 50700109, 50710109, 50720109, 50730109, 50740109, 50750109, 50760109, 50770109, 50780109, 50790108, 50800109, 50810109, 50820109, 50830109, 50840109, 50850109, 50860109, 50870109, 50880109, 50890109, 50900109, 50910109, 50920108, 50930109, 50940109, 50950109, 50960109, 50970108, 50980109, 50990109, 51000109, 51010109, 51020109, 51030109, 51040109, 51050109, 51060109, 51070109, 51080108, 51090109, 51100108, 51110109, 51120109, 51130109, 51140109, 51150109, 51160109, 51170109, 51180109, 51190109]</msg>
<status status="PASS" starttime="20201112 12:46:01.219" endtime="20201112 12:46:01.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:01.208" endtime="20201112 12:46:01.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:01.243" endtime="20201112 12:46:01.601"></status>
</kw>
<msg timestamp="20201112 12:46:01.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043836319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054121306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:01.239" endtime="20201112 12:46:01.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:01.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043836319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.054121306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:01.613" endtime="20201112 12:46:01.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:01.633" endtime="20201112 12:46:01.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:01.230" endtime="20201112 12:46:01.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:01.225" endtime="20201112 12:46:01.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:01.700" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:46:01.643" endtime="20201112 12:46:01.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:01.711" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:46:01.709" endtime="20201112 12:46:01.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:01.715" level="INFO">VALUE: 0.043836319</msg>
<status status="PASS" starttime="20201112 12:46:01.713" endtime="20201112 12:46:01.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:01.702" endtime="20201112 12:46:01.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:01.729" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:01.727" endtime="20201112 12:46:01.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:01.734" level="INFO">VALUE: [0.054121306, 0.064154375, 0.074187528, 0.084220069, 0.094252792, 0.104284972, 0.114320069, 0.124354583, 0.134388667, 0.144422875, 0.15445675, 0.164489681, 0.174523208, 0.184557056, 0.194590778, 0.204625042, 0.214658889, 0.224693653, 0.234728528, 0.244762917, 0.254797042, 0.264830222, 0.274864431, 0.284899222, 0.294932458, 0.304967528, 0.315002111, 0.325036597, 0.335070903, 0.345105333, 0.355139681, 0.365173625, 0.375208347, 0.385241861, 0.3952765, 0.405309944, 0.415344861, 0.425378069, 0.435412319, 0.445445708, 0.455478875, 0.465512903, 0.475548097, 0.485581042, 0.495614944, 0.505648125, 0.515681736, 0.525714194, 0.535747889, 0.545781917, 0.555815611, 0.565850125, 0.575884486, 0.58591825, 0.5959525, 0.605985347, 0.616018528, 0.62605225, 0.636087194, 0.646121597, 0.656157486, 0.666191958, 0.676226153, 0.686259028, 0.696292056, 0.706325431, 0.716358056, 0.726390208, 0.736421347, 0.746453431, 0.756487222, 0.766520764, 0.776552875, 0.786586611, 0.796619708, 0.806652125, 0.8166855, 0.826718486, 0.836753819, 0.846787681, 0.856822431, 0.866856444, 0.876890736, 0.886924097, 0.896957736, 0.906991569, 0.917026014, 0.927060014, 0.937092917, 0.947127028, 0.957160819, 0.967196097, 0.977232069, 0.987267986, 0.997304264, 1.007338806, 1.017374042, 1.027407625, 1.037441542, 1.047474944] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:46:01.732" endtime="20201112 12:46:01.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:01.719" endtime="20201112 12:46:01.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:01.743" endtime="20201112 12:46:01.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:46:01.752" endtime="20201112 12:46:01.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:01.747" endtime="20201112 12:46:01.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:01.739" endtime="20201112 12:46:01.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:58.980" endtime="20201112 12:46:01.778"></status>
</kw>
<msg timestamp="20201112 12:46:01.778" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:01.800" endtime="20201112 12:46:03.951"></status>
</kw>
<msg timestamp="20201112 12:46:03.952" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52981207, 'wakeups': [52991456, 53001458, 53011457, 53021458, 53031458...</msg>
<status status="PASS" starttime="20201112 12:46:01.797" endtime="20201112 12:46:03.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:03.959" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52981207, 'wakeups': [52991456, 53001458, 53011457, 53021458, 53031458...</msg>
<status status="PASS" starttime="20201112 12:46:03.954" endtime="20201112 12:46:03.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:03.961" endtime="20201112 12:46:03.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:01.788" endtime="20201112 12:46:03.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:01.783" endtime="20201112 12:46:03.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:03.974" level="INFO">${RESULT} = {'timer-count': 7, 'wakeups': [52991456, 53001458, 53011457, 53021458, 53031458, 53041458, 53051458, 53061457, 53071458, 53081458, 53091458, 53101458, 53111457, 53121458, 53131458, 53141458, 53151458,...</msg>
<status status="PASS" starttime="20201112 12:46:03.970" endtime="20201112 12:46:03.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:03.984" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:46:03.982" endtime="20201112 12:46:03.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:03.989" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:46:03.987" endtime="20201112 12:46:03.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:03.976" endtime="20201112 12:46:03.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:04.001" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:46:03.999" endtime="20201112 12:46:04.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:04.006" level="INFO">VALUE: 52981207</msg>
<status status="PASS" starttime="20201112 12:46:04.004" endtime="20201112 12:46:04.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:03.992" endtime="20201112 12:46:04.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:04.018" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:04.016" endtime="20201112 12:46:04.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:04.023" level="INFO">VALUE: [52991456, 53001458, 53011457, 53021458, 53031458, 53041458, 53051458, 53061457, 53071458, 53081458, 53091458, 53101458, 53111457, 53121458, 53131458, 53141458, 53151458, 53161458, 53171457, 53181458, 53191458, 53201458, 53211457, 53221458, 53231458, 53241458, 53251458, 53261458, 53271458, 53281458, 53291458, 53301458, 53311458, 53321458, 53331458, 53341458, 53351458, 53361458, 53371458, 53381458, 53391457, 53401458, 53411458, 53421458, 53431458, 53441458, 53451457, 53461458, 53471458, 53481458, 53491458, 53501458, 53511458, 53521458, 53531458, 53541458, 53551458, 53561458, 53571458, 53581458, 53591458, 53601458, 53611458, 53621458, 53631458, 53641458, 53651458, 53661458, 53671458, 53681458, 53691458, 53701458, 53711458, 53721458, 53731458, 53741458, 53751458, 53761458, 53771458, 53781458, 53791458, 53801458, 53811458, 53821457, 53831458, 53841458, 53851458, 53861458, 53871458, 53881458, 53891458, 53901458, 53911458, 53921458, 53931458, 53941458, 53951458, 53961458, 53971458, 53981458]</msg>
<status status="PASS" starttime="20201112 12:46:04.021" endtime="20201112 12:46:04.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:04.009" endtime="20201112 12:46:04.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:04.042" endtime="20201112 12:46:04.398"></status>
</kw>
<msg timestamp="20201112 12:46:04.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039349875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049633583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:04.039" endtime="20201112 12:46:04.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:04.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039349875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049633583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:04.407" endtime="20201112 12:46:04.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:04.424" endtime="20201112 12:46:04.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:04.032" endtime="20201112 12:46:04.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:04.027" endtime="20201112 12:46:04.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:04.486" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:46:04.432" endtime="20201112 12:46:04.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:04.496" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:46:04.494" endtime="20201112 12:46:04.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:04.501" level="INFO">VALUE: 0.039349875</msg>
<status status="PASS" starttime="20201112 12:46:04.499" endtime="20201112 12:46:04.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:04.488" endtime="20201112 12:46:04.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:04.514" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:04.512" endtime="20201112 12:46:04.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:04.519" level="INFO">VALUE: [0.049633583, 0.059668306, 0.069701972, 0.079736597, 0.089771361, 0.099806236, 0.109842097, 0.119875667, 0.129912097, 0.139948097, 0.149983667, 0.160019694, 0.170053667, 0.180089403, 0.190124486, 0.200158681, 0.210193625, 0.220227778, 0.230261472, 0.240297389, 0.250332569, 0.260367583, 0.270399694, 0.280433958, 0.290468403, 0.300502347, 0.310537361, 0.320570931, 0.330604264, 0.340637986, 0.350671931, 0.360705333, 0.370739708, 0.380773458, 0.390806264, 0.400838556, 0.410873139, 0.420907514, 0.430942597, 0.440978292, 0.451012514, 0.461048653, 0.471083639, 0.481118847, 0.491154208, 0.501189417, 0.511224764, 0.521261958, 0.531298292, 0.541332861, 0.5513675, 0.561400222, 0.571434486, 0.581469236, 0.591503542, 0.601537208, 0.611571653, 0.621605028, 0.631639903, 0.641673958, 0.651708222, 0.661741819, 0.671775125, 0.681808931, 0.691843333, 0.701876681, 0.711910125, 0.721942625, 0.731975097, 0.742008542, 0.752042625, 0.762076125, 0.772109986, 0.782143708, 0.792177208, 0.802210028, 0.812244056, 0.822277278, 0.832311292, 0.842343653, 0.852377875, 0.862411486, 0.872445153, 0.882477375, 0.892512111, 0.902545736, 0.91258, 0.922613569, 0.932646403, 0.942679208, 0.952712639, 0.962746208, 0.972781028, 0.982814556, 0.992848042, 1.002881625, 1.012915833, 1.022949639, 1.032984097, 1.043016875] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:46:04.516" endtime="20201112 12:46:04.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:04.504" endtime="20201112 12:46:04.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:04.527" endtime="20201112 12:46:04.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:46:04.535" endtime="20201112 12:46:04.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:04.531" endtime="20201112 12:46:04.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:04.523" endtime="20201112 12:46:04.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:01.779" endtime="20201112 12:46:04.562"></status>
</kw>
<msg timestamp="20201112 12:46:04.563" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:04.585" endtime="20201112 12:46:06.721"></status>
</kw>
<msg timestamp="20201112 12:46:06.722" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 55756547, 'wakeups': [55766797, 55776798, 55786798, 55796798, 55806798...</msg>
<status status="PASS" starttime="20201112 12:46:04.581" endtime="20201112 12:46:06.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:06.729" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 55756547, 'wakeups': [55766797, 55776798, 55786798, 55796798, 55806798...</msg>
<status status="PASS" starttime="20201112 12:46:06.724" endtime="20201112 12:46:06.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:06.731" endtime="20201112 12:46:06.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:04.574" endtime="20201112 12:46:06.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:04.568" endtime="20201112 12:46:06.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:06.744" level="INFO">${RESULT} = {'timer-count': 7, 'wakeups': [55766797, 55776798, 55786798, 55796798, 55806798, 55816798, 55826798, 55836798, 55846798, 55856798, 55866798, 55876798, 55886798, 55896798, 55906798, 55916798, 55926798,...</msg>
<status status="PASS" starttime="20201112 12:46:06.740" endtime="20201112 12:46:06.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:06.754" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:46:06.752" endtime="20201112 12:46:06.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:06.759" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:46:06.757" endtime="20201112 12:46:06.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:06.746" endtime="20201112 12:46:06.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:06.771" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:46:06.769" endtime="20201112 12:46:06.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:06.776" level="INFO">VALUE: 55756547</msg>
<status status="PASS" starttime="20201112 12:46:06.774" endtime="20201112 12:46:06.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:06.763" endtime="20201112 12:46:06.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:06.788" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:06.786" endtime="20201112 12:46:06.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:06.793" level="INFO">VALUE: [55766797, 55776798, 55786798, 55796798, 55806798, 55816798, 55826798, 55836798, 55846798, 55856798, 55866798, 55876798, 55886798, 55896798, 55906798, 55916798, 55926798, 55936798, 55946798, 55956798, 55966798, 55976798, 55986797, 55996798, 56006798, 56016798, 56026798, 56036798, 56046798, 56056798, 56066798, 56076798, 56086798, 56096798, 56106797, 56116798, 56126798, 56136798, 56146798, 56156798, 56166798, 56176798, 56186798, 56196798, 56206798, 56216798, 56226798, 56236798, 56246798, 56256798, 56266798, 56276798, 56286797, 56296798, 56306798, 56316798, 56326797, 56336798, 56346798, 56356798, 56366798, 56376798, 56386798, 56396798, 56406798, 56416798, 56426798, 56436798, 56446798, 56456798, 56466798, 56476798, 56486798, 56496798, 56506798, 56516798, 56526798, 56536798, 56546797, 56556798, 56566798, 56576798, 56586798, 56596797, 56606797, 56616798, 56626798, 56636797, 56646798, 56656798, 56666797, 56676798, 56686798, 56696798, 56706798, 56716798, 56726798, 56736797, 56746798, 56756798]</msg>
<status status="PASS" starttime="20201112 12:46:06.790" endtime="20201112 12:46:06.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:06.779" endtime="20201112 12:46:06.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:06.814" endtime="20201112 12:46:07.157"></status>
</kw>
<msg timestamp="20201112 12:46:07.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040346333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050632486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:06.810" endtime="20201112 12:46:07.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:07.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040346333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050632486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:07.166" endtime="20201112 12:46:07.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:07.183" endtime="20201112 12:46:07.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:06.803" endtime="20201112 12:46:07.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:06.796" endtime="20201112 12:46:07.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:07.245" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:46:07.191" endtime="20201112 12:46:07.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:07.255" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:46:07.253" endtime="20201112 12:46:07.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:07.260" level="INFO">VALUE: 0.040346333</msg>
<status status="PASS" starttime="20201112 12:46:07.257" endtime="20201112 12:46:07.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:07.246" endtime="20201112 12:46:07.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:07.273" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:07.271" endtime="20201112 12:46:07.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:07.277" level="INFO">VALUE: [0.050632486, 0.060667833, 0.070703944, 0.080738986, 0.090774639, 0.100809208, 0.110844181, 0.120878944, 0.130914542, 0.140949806, 0.150985986, 0.161021736, 0.171057333, 0.181092083, 0.191127264, 0.201162264, 0.21119725, 0.221231764, 0.231266639, 0.241301375, 0.251335778, 0.261369708, 0.271403931, 0.281439528, 0.291474056, 0.301507833, 0.311540889, 0.321573708, 0.331609306, 0.341645306, 0.351681083, 0.361716917, 0.371751806, 0.381786972, 0.391821361, 0.401856931, 0.411891528, 0.421925736, 0.431959764, 0.441993056, 0.452026069, 0.4620595, 0.472094111, 0.48212925, 0.492164292, 0.502199056, 0.512235181, 0.522270208, 0.532305972, 0.542340847, 0.552377083, 0.562412194, 0.572446111, 0.582481986, 0.592516639, 0.602551306, 0.612586028, 0.622622931, 0.632659917, 0.6426975, 0.652734153, 0.662769639, 0.672805708, 0.682841528, 0.692876181, 0.702910403, 0.712944417, 0.722977833, 0.7330125, 0.743046403, 0.753079792, 0.763112847, 0.773146306, 0.783179639, 0.793214278, 0.803249069, 0.813284736, 0.823320083, 0.833354542, 0.843389278, 0.853423972, 0.863458069, 0.873492847, 0.883526333, 0.893560333, 0.903594361, 0.913628625, 0.923661917, 0.933697319, 0.943731028, 0.953764222, 0.963799792, 0.973835264, 0.983870708, 0.993905778, 1.003939653, 1.013974597, 1.024008792, 1.034046208, 1.044082306] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:46:07.275" endtime="20201112 12:46:07.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:07.263" endtime="20201112 12:46:07.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:07.286" endtime="20201112 12:46:07.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:46:07.294" endtime="20201112 12:46:07.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:07.290" endtime="20201112 12:46:07.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:07.282" endtime="20201112 12:46:07.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:04.564" endtime="20201112 12:46:07.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:58.976" endtime="20201112 12:46:07.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:58.974" endtime="20201112 12:46:07.321"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:46:07.327" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:07.349" endtime="20201112 12:46:09.477"></status>
</kw>
<msg timestamp="20201112 12:46:09.478" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 58511204, 'wakeups': [58521495, 58531496, 58541496, 58551496, 58561495...</msg>
<status status="PASS" starttime="20201112 12:46:07.346" endtime="20201112 12:46:09.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:09.486" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 58511204, 'wakeups': [58521495, 58531496, 58541496, 58551496, 58561495...</msg>
<status status="PASS" starttime="20201112 12:46:09.481" endtime="20201112 12:46:09.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:09.488" endtime="20201112 12:46:09.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:07.337" endtime="20201112 12:46:09.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:07.332" endtime="20201112 12:46:09.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:09.501" level="INFO">${RESULT} = {'timer-count': 8, 'wakeups': [58521495, 58531496, 58541496, 58551496, 58561495, 58571496, 58581496, 58591496, 58601496, 58611496, 58621496, 58631496, 58641496, 58651496, 58661496, 58671496, 58681496,...</msg>
<status status="PASS" starttime="20201112 12:46:09.497" endtime="20201112 12:46:09.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:09.511" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:46:09.509" endtime="20201112 12:46:09.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:09.515" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:46:09.513" endtime="20201112 12:46:09.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:09.503" endtime="20201112 12:46:09.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:09.528" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:46:09.525" endtime="20201112 12:46:09.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:09.532" level="INFO">VALUE: 58511204</msg>
<status status="PASS" starttime="20201112 12:46:09.530" endtime="20201112 12:46:09.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:09.519" endtime="20201112 12:46:09.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:09.544" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:09.542" endtime="20201112 12:46:09.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:09.549" level="INFO">VALUE: [58521495, 58531496, 58541496, 58551496, 58561495, 58571496, 58581496, 58591496, 58601496, 58611496, 58621496, 58631496, 58641496, 58651496, 58661496, 58671496, 58681496, 58691496, 58701496, 58711496, 58721496, 58731496, 58741496, 58751496, 58761496, 58771496, 58781495, 58791496, 58801496, 58811496, 58821495, 58831496, 58841496, 58851495, 58861496, 58871496, 58881496, 58891496, 58901496, 58911496, 58921496, 58931496, 58941496, 58951495, 58961496, 58971496, 58981496, 58991496, 59001496, 59011496, 59021495, 59031496, 59041496, 59051496, 59061495, 59071496, 59081496, 59091496, 59101496, 59111496, 59121495, 59131496, 59141496, 59151496, 59161495, 59171496, 59181496, 59191496, 59201496, 59211496, 59221496, 59231496, 59241496, 59251496, 59261496, 59271496, 59281496, 59291496, 59301496, 59311496, 59321496, 59331496, 59341496, 59351496, 59361496, 59371496, 59381495, 59391496, 59401496, 59411496, 59421496, 59431496, 59441496, 59451496, 59461496, 59471496, 59481495, 59491496, 59501496, 59511496]</msg>
<status status="PASS" starttime="20201112 12:46:09.547" endtime="20201112 12:46:09.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:09.536" endtime="20201112 12:46:09.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:09.568" endtime="20201112 12:46:09.921"></status>
</kw>
<msg timestamp="20201112 12:46:09.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045374736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055705236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:09.565" endtime="20201112 12:46:09.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:09.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045374736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055705236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:09.929" endtime="20201112 12:46:09.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:09.946" endtime="20201112 12:46:09.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:09.558" endtime="20201112 12:46:09.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:09.553" endtime="20201112 12:46:09.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:10.009" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:46:09.955" endtime="20201112 12:46:10.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:10.020" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:46:10.018" endtime="20201112 12:46:10.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:10.024" level="INFO">VALUE: 0.045374736</msg>
<status status="PASS" starttime="20201112 12:46:10.022" endtime="20201112 12:46:10.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:10.011" endtime="20201112 12:46:10.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:10.038" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:10.035" endtime="20201112 12:46:10.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:10.042" level="INFO">VALUE: [0.055705236, 0.065742722, 0.075778944, 0.085813847, 0.095848681, 0.105885611, 0.115920792, 0.125956764, 0.135993375, 0.146029069, 0.156064903, 0.166098875, 0.176132389, 0.186166639, 0.196203347, 0.206240153, 0.216275653, 0.226310736, 0.236346972, 0.246383542, 0.256419708, 0.266453458, 0.276488208, 0.286523903, 0.296560472, 0.306596639, 0.31663175, 0.326669667, 0.336707847, 0.346745306, 0.356780278, 0.366816958, 0.376853264, 0.386886778, 0.396922514, 0.406955347, 0.416989889, 0.427023889, 0.437058569, 0.447092056, 0.457125625, 0.46715875, 0.477193681, 0.487227139, 0.497263153, 0.507298639, 0.517334792, 0.527370514, 0.537406694, 0.547442889, 0.557478264, 0.567515153, 0.577550819, 0.587587111, 0.597623014, 0.607660764, 0.617697847, 0.627733236, 0.637768347, 0.647804014, 0.657837597, 0.66787275, 0.677908083, 0.687943931, 0.69797825, 0.708014236, 0.718049792, 0.728086014, 0.738121236, 0.748155778, 0.758191181, 0.768226639, 0.778262139, 0.78829675, 0.798331778, 0.808366167, 0.818401014, 0.828436056, 0.838472653, 0.848509167, 0.858544056, 0.868576458, 0.878611694, 0.888646903, 0.8986815, 0.908716028, 0.918751278, 0.928787319, 0.938822097, 0.948857778, 0.958892583, 0.968927944, 0.978965014, 0.989002042, 0.99903875, 1.009075514, 1.019110319, 1.029146, 1.039182264, 1.049217486] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:46:10.040" endtime="20201112 12:46:10.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:10.028" endtime="20201112 12:46:10.045"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:10.051" endtime="20201112 12:46:10.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:46:10.059" endtime="20201112 12:46:10.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:10.055" endtime="20201112 12:46:10.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:10.046" endtime="20201112 12:46:10.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:07.328" endtime="20201112 12:46:10.085"></status>
</kw>
<msg timestamp="20201112 12:46:10.085" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:10.106" endtime="20201112 12:46:12.234"></status>
</kw>
<msg timestamp="20201112 12:46:12.235" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 61258438, 'wakeups': [61268729, 61278730, 61288729, 61298730, 61308729...</msg>
<status status="PASS" starttime="20201112 12:46:10.102" endtime="20201112 12:46:12.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:12.242" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 61258438, 'wakeups': [61268729, 61278730, 61288729, 61298730, 61308729...</msg>
<status status="PASS" starttime="20201112 12:46:12.237" endtime="20201112 12:46:12.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:12.244" endtime="20201112 12:46:12.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:10.095" endtime="20201112 12:46:12.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:10.090" endtime="20201112 12:46:12.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:12.257" level="INFO">${RESULT} = {'timer-count': 8, 'wakeups': [61268729, 61278730, 61288729, 61298730, 61308729, 61318730, 61328730, 61338730, 61348729, 61358730, 61368729, 61378730, 61388730, 61398730, 61408730, 61418730, 61428730,...</msg>
<status status="PASS" starttime="20201112 12:46:12.253" endtime="20201112 12:46:12.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:12.267" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:46:12.265" endtime="20201112 12:46:12.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:12.272" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:46:12.269" endtime="20201112 12:46:12.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:12.259" endtime="20201112 12:46:12.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:12.284" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:46:12.282" endtime="20201112 12:46:12.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:12.289" level="INFO">VALUE: 61258438</msg>
<status status="PASS" starttime="20201112 12:46:12.287" endtime="20201112 12:46:12.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:12.276" endtime="20201112 12:46:12.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:12.301" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:12.299" endtime="20201112 12:46:12.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:12.306" level="INFO">VALUE: [61268729, 61278730, 61288729, 61298730, 61308729, 61318730, 61328730, 61338730, 61348729, 61358730, 61368729, 61378730, 61388730, 61398730, 61408730, 61418730, 61428730, 61438730, 61448730, 61458730, 61468729, 61478730, 61488729, 61498730, 61508730, 61518730, 61528729, 61538730, 61548730, 61558730, 61568730, 61578730, 61588730, 61598730, 61608729, 61618730, 61628730, 61638730, 61648730, 61658730, 61668730, 61678730, 61688730, 61698730, 61708729, 61718730, 61728730, 61738730, 61748730, 61758730, 61768730, 61778730, 61788730, 61798730, 61808729, 61818730, 61828730, 61838730, 61848730, 61858730, 61868730, 61878730, 61888730, 61898730, 61908729, 61918730, 61928730, 61938730, 61948730, 61958730, 61968730, 61978730, 61988730, 61998730, 62008729, 62018730, 62028730, 62038730, 62048729, 62058730, 62068730, 62078730, 62088730, 62098730, 62108730, 62118730, 62128730, 62138730, 62148730, 62158729, 62168730, 62178730, 62188730, 62198730, 62208729, 62218730, 62228729, 62238730, 62248730, 62258730]</msg>
<status status="PASS" starttime="20201112 12:46:12.303" endtime="20201112 12:46:12.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:12.293" endtime="20201112 12:46:12.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:12.327" endtime="20201112 12:46:12.671"></status>
</kw>
<msg timestamp="20201112 12:46:12.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037474417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047801597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:12.324" endtime="20201112 12:46:12.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:12.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037474417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047801597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:12.679" endtime="20201112 12:46:12.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:12.696" endtime="20201112 12:46:12.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:12.316" endtime="20201112 12:46:12.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:12.310" endtime="20201112 12:46:12.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:12.757" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:46:12.704" endtime="20201112 12:46:12.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:12.767" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:46:12.765" endtime="20201112 12:46:12.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:12.772" level="INFO">VALUE: 0.037474417</msg>
<status status="PASS" starttime="20201112 12:46:12.770" endtime="20201112 12:46:12.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:12.759" endtime="20201112 12:46:12.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:12.785" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:12.783" endtime="20201112 12:46:12.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:12.790" level="INFO">VALUE: [0.047801597, 0.057837819, 0.067872653, 0.077909514, 0.087944736, 0.097981347, 0.108016153, 0.118049611, 0.128084306, 0.138120708, 0.148156403, 0.158193069, 0.168228181, 0.178263569, 0.188299056, 0.198333875, 0.208369708, 0.218405389, 0.228441806, 0.238477083, 0.248511972, 0.258549083, 0.268584375, 0.278621264, 0.288657222, 0.298693708, 0.308728514, 0.318765597, 0.328801444, 0.338835069, 0.348869833, 0.358905306, 0.368941111, 0.378977444, 0.389013431, 0.399051417, 0.409087806, 0.419123139, 0.429157722, 0.439193083, 0.449228889, 0.459262931, 0.469297431, 0.47933175, 0.489366458, 0.499404139, 0.509440083, 0.519475681, 0.529511139, 0.539545375, 0.549580625, 0.559615667, 0.569651403, 0.579686111, 0.589719306, 0.599753528, 0.609788208, 0.619822833, 0.629858347, 0.639893667, 0.649927694, 0.659961653, 0.669997472, 0.680032819, 0.690067806, 0.700103889, 0.710139903, 0.720175653, 0.730210556, 0.740245097, 0.75028075, 0.760315, 0.770349264, 0.780383583, 0.790417681, 0.800454139, 0.810489778, 0.820524681, 0.830558028, 0.840594819, 0.850630042, 0.860665278, 0.870701222, 0.880736792, 0.890772403, 0.900807639, 0.910843306, 0.92087875, 0.930914944, 0.940949917, 0.950988194, 0.961024361, 0.971061708, 0.981098542, 0.991134, 1.001170694, 1.011205514, 1.021240986, 1.03127525, 1.041308556] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:46:12.787" endtime="20201112 12:46:12.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:12.775" endtime="20201112 12:46:12.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:12.799" endtime="20201112 12:46:12.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:46:12.808" endtime="20201112 12:46:12.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:12.803" endtime="20201112 12:46:12.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:12.795" endtime="20201112 12:46:12.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:10.086" endtime="20201112 12:46:12.833"></status>
</kw>
<msg timestamp="20201112 12:46:12.834" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:12.858" endtime="20201112 12:46:15.009"></status>
</kw>
<msg timestamp="20201112 12:46:15.010" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 64001493, 'wakeups': [64011784, 64021785, 64031785, 64041785, 64051785...</msg>
<status status="PASS" starttime="20201112 12:46:12.855" endtime="20201112 12:46:15.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:15.017" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 64001493, 'wakeups': [64011784, 64021785, 64031785, 64041785, 64051785...</msg>
<status status="PASS" starttime="20201112 12:46:15.012" endtime="20201112 12:46:15.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:15.019" endtime="20201112 12:46:15.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:12.845" endtime="20201112 12:46:15.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:12.839" endtime="20201112 12:46:15.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:15.032" level="INFO">${RESULT} = {'timer-count': 8, 'wakeups': [64011784, 64021785, 64031785, 64041785, 64051785, 64061785, 64071785, 64081785, 64091785, 64101785, 64111785, 64121785, 64131785, 64141785, 64151785, 64161785, 64171785,...</msg>
<status status="PASS" starttime="20201112 12:46:15.028" endtime="20201112 12:46:15.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:15.042" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:46:15.040" endtime="20201112 12:46:15.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:15.047" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:46:15.044" endtime="20201112 12:46:15.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:15.034" endtime="20201112 12:46:15.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:15.059" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:46:15.057" endtime="20201112 12:46:15.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:15.063" level="INFO">VALUE: 64001493</msg>
<status status="PASS" starttime="20201112 12:46:15.061" endtime="20201112 12:46:15.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:15.050" endtime="20201112 12:46:15.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:15.075" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:15.073" endtime="20201112 12:46:15.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:15.080" level="INFO">VALUE: [64011784, 64021785, 64031785, 64041785, 64051785, 64061785, 64071785, 64081785, 64091785, 64101785, 64111785, 64121785, 64131785, 64141785, 64151785, 64161785, 64171785, 64181785, 64191785, 64201785, 64211785, 64221785, 64231785, 64241785, 64251785, 64261785, 64271784, 64281785, 64291785, 64301785, 64311785, 64321785, 64331785, 64341785, 64351785, 64361785, 64371785, 64381785, 64391785, 64401785, 64411785, 64421785, 64431784, 64441785, 64451785, 64461785, 64471785, 64481785, 64491785, 64501785, 64511785, 64521785, 64531785, 64541785, 64551785, 64561785, 64571785, 64581785, 64591785, 64601785, 64611785, 64621785, 64631785, 64641785, 64651785, 64661785, 64671784, 64681785, 64691785, 64701785, 64711785, 64721785, 64731784, 64741785, 64751785, 64761785, 64771784, 64781785, 64791785, 64801785, 64811785, 64821785, 64831785, 64841785, 64851785, 64861785, 64871784, 64881785, 64891785, 64901785, 64911785, 64921785, 64931785, 64941784, 64951785, 64961785, 64971785, 64981785, 64991785, 65001785]</msg>
<status status="PASS" starttime="20201112 12:46:15.078" endtime="20201112 12:46:15.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:15.067" endtime="20201112 12:46:15.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:15.100" endtime="20201112 12:46:15.455"></status>
</kw>
<msg timestamp="20201112 12:46:15.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041414444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051741847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:15.097" endtime="20201112 12:46:15.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:15.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041414444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051741847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:15.463" endtime="20201112 12:46:15.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:15.480" endtime="20201112 12:46:15.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:15.089" endtime="20201112 12:46:15.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:15.084" endtime="20201112 12:46:15.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:15.542" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:46:15.488" endtime="20201112 12:46:15.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:15.553" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:46:15.551" endtime="20201112 12:46:15.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:15.557" level="INFO">VALUE: 0.041414444</msg>
<status status="PASS" starttime="20201112 12:46:15.555" endtime="20201112 12:46:15.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:15.544" endtime="20201112 12:46:15.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:15.571" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:15.569" endtime="20201112 12:46:15.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:15.575" level="INFO">VALUE: [0.051741847, 0.061778208, 0.071813778, 0.081849167, 0.091885389, 0.10192025, 0.111955472, 0.121989028, 0.132022986, 0.142056514, 0.152090028, 0.162124014, 0.172159611, 0.182196014, 0.192230903, 0.202264375, 0.212299097, 0.222333167, 0.232368167, 0.242402903, 0.252438486, 0.262473583, 0.272508347, 0.282542444, 0.292577333, 0.302611861, 0.312646583, 0.322683347, 0.332719042, 0.342753722, 0.352789792, 0.362825583, 0.372863014, 0.382899917, 0.392936917, 0.402972222, 0.413008403, 0.423044556, 0.433081111, 0.443116583, 0.45315175, 0.463187639, 0.473223847, 0.483260278, 0.493296069, 0.503330931, 0.513365889, 0.523400819, 0.533435014, 0.543469417, 0.553503319, 0.563537472, 0.573573569, 0.583610028, 0.593645889, 0.603681625, 0.613718028, 0.623753722, 0.633790764, 0.643826708, 0.653862792, 0.663900569, 0.673938847, 0.683975583, 0.694012431, 0.704048944, 0.714084958, 0.724121639, 0.734157694, 0.744192694, 0.754229583, 0.764264472, 0.774298111, 0.784333111, 0.794367653, 0.804402444, 0.814436764, 0.824472542, 0.834508806, 0.844544389, 0.854579486, 0.864616458, 0.8746535, 0.884690778, 0.894727528, 0.904762819, 0.914797611, 0.924834472, 0.934870708, 0.944906139, 0.954941931, 0.964976958, 0.975012097, 0.985045639, 0.995081361, 1.00511525, 1.015150278, 1.025184847, 1.035220806, 1.045255486] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:46:15.573" endtime="20201112 12:46:15.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:15.561" endtime="20201112 12:46:15.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:15.584" endtime="20201112 12:46:15.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:46:15.592" endtime="20201112 12:46:15.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:15.588" endtime="20201112 12:46:15.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:15.580" endtime="20201112 12:46:15.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:12.835" endtime="20201112 12:46:15.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:07.324" endtime="20201112 12:46:15.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:07.322" endtime="20201112 12:46:15.619"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:46:15.624" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:15.646" endtime="20201112 12:46:17.797"></status>
</kw>
<msg timestamp="20201112 12:46:17.798" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66779580, 'wakeups': [66789907, 66799908, 66809908, 66819908, 66829908...</msg>
<status status="PASS" starttime="20201112 12:46:15.642" endtime="20201112 12:46:17.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:17.805" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66779580, 'wakeups': [66789907, 66799908, 66809908, 66819908, 66829908...</msg>
<status status="PASS" starttime="20201112 12:46:17.800" endtime="20201112 12:46:17.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:17.807" endtime="20201112 12:46:17.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:15.635" endtime="20201112 12:46:17.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:15.629" endtime="20201112 12:46:17.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:17.820" level="INFO">${RESULT} = {'timer-count': 9, 'wakeups': [66789907, 66799908, 66809908, 66819908, 66829908, 66839908, 66849908, 66859908, 66869908, 66879908, 66889908, 66899908, 66909908, 66919908, 66929908, 66939908, 66949908,...</msg>
<status status="PASS" starttime="20201112 12:46:17.816" endtime="20201112 12:46:17.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:17.830" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:46:17.828" endtime="20201112 12:46:17.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:17.834" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:46:17.832" endtime="20201112 12:46:17.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:17.822" endtime="20201112 12:46:17.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:17.847" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:46:17.844" endtime="20201112 12:46:17.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:17.851" level="INFO">VALUE: 66779580</msg>
<status status="PASS" starttime="20201112 12:46:17.849" endtime="20201112 12:46:17.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:17.838" endtime="20201112 12:46:17.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:17.863" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:17.861" endtime="20201112 12:46:17.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:17.868" level="INFO">VALUE: [66789907, 66799908, 66809908, 66819908, 66829908, 66839908, 66849908, 66859908, 66869908, 66879908, 66889908, 66899908, 66909908, 66919908, 66929908, 66939908, 66949908, 66959907, 66969908, 66979908, 66989908, 66999908, 67009908, 67019908, 67029907, 67039908, 67049908, 67059908, 67069908, 67079908, 67089908, 67099908, 67109908, 67119907, 67129908, 67139908, 67149908, 67159908, 67169908, 67179908, 67189908, 67199907, 67209908, 67219908, 67229907, 67239908, 67249907, 67259908, 67269907, 67279907, 67289908, 67299908, 67309908, 67319908, 67329907, 67339908, 67349907, 67359908, 67369908, 67379908, 67389907, 67399908, 67409908, 67419907, 67429908, 67439908, 67449908, 67459908, 67469908, 67479908, 67489908, 67499908, 67509908, 67519908, 67529908, 67539908, 67549908, 67559907, 67569908, 67579908, 67589907, 67599908, 67609908, 67619908, 67629908, 67639908, 67649908, 67659908, 67669908, 67679908, 67689908, 67699908, 67709908, 67719908, 67729908, 67739908, 67749908, 67759908, 67769908, 67779907]</msg>
<status status="PASS" starttime="20201112 12:46:17.866" endtime="20201112 12:46:17.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:17.855" endtime="20201112 12:46:17.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:17.889" endtime="20201112 12:46:18.240"></status>
</kw>
<msg timestamp="20201112 12:46:18.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044423875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05478775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:46:17.886" endtime="20201112 12:46:18.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:18.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044423875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05478775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:46:18.248" endtime="20201112 12:46:18.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:18.265" endtime="20201112 12:46:18.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:17.879" endtime="20201112 12:46:18.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:17.874" endtime="20201112 12:46:18.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:18.326" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:46:18.274" endtime="20201112 12:46:18.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:18.337" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:46:18.335" endtime="20201112 12:46:18.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:18.341" level="INFO">VALUE: 0.044423875</msg>
<status status="PASS" starttime="20201112 12:46:18.339" endtime="20201112 12:46:18.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:18.328" endtime="20201112 12:46:18.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:18.355" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:18.352" endtime="20201112 12:46:18.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:18.359" level="INFO">VALUE: [0.05478775, 0.064824722, 0.074860861, 0.084896653, 0.094931833, 0.104966528, 0.115002431, 0.125037958, 0.135074417, 0.145109556, 0.1551455, 0.165181417, 0.175218292, 0.185253667, 0.195287347, 0.205322792, 0.215358667, 0.225392611, 0.235429458, 0.245464042, 0.255499639, 0.265535472, 0.275571764, 0.285607986, 0.295642722, 0.305679681, 0.315716028, 0.325751806, 0.335787917, 0.345823556, 0.355858944, 0.365894292, 0.375930764, 0.385965431, 0.396002722, 0.40603875, 0.416074028, 0.426110042, 0.436149153, 0.446187056, 0.456224472, 0.466261986, 0.476301181, 0.486337319, 0.49637325, 0.506410931, 0.516446583, 0.526483181, 0.536518556, 0.546553833, 0.556591097, 0.566626944, 0.576663944, 0.586700792, 0.596736653, 0.606775042, 0.616811139, 0.626847944, 0.636884556, 0.646920736, 0.656956667, 0.666993847, 0.677030083, 0.687065486, 0.697102875, 0.707139708, 0.717176542, 0.727212625, 0.737248347, 0.747285194, 0.757323431, 0.767360208, 0.777396264, 0.787432333, 0.797470181, 0.807507014, 0.817546069, 0.827585194, 0.837625167, 0.847661222, 0.857698208, 0.867735347, 0.877772111, 0.887809417, 0.897846903, 0.907884472, 0.917920972, 0.927957444, 0.937994292, 0.948029944, 0.958066569, 0.968102236, 0.978140417, 0.988177708, 0.998214333, 1.008250361, 1.018286847, 1.028322542, 1.038359472, 1.048395542] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:46:18.357" endtime="20201112 12:46:18.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:18.345" endtime="20201112 12:46:18.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:18.368" endtime="20201112 12:46:18.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:46:18.376" endtime="20201112 12:46:18.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:18.372" endtime="20201112 12:46:18.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:18.363" endtime="20201112 12:46:18.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:15.626" endtime="20201112 12:46:18.403"></status>
</kw>
<msg timestamp="20201112 12:46:18.404" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:18.424" endtime="20201112 12:46:20.553"></status>
</kw>
<msg timestamp="20201112 12:46:20.554" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69548232, 'wakeups': [69558559, 69568560, 69578560, 69588560, 69598559...</msg>
<status status="PASS" starttime="20201112 12:46:18.421" endtime="20201112 12:46:20.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:20.561" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69548232, 'wakeups': [69558559, 69568560, 69578560, 69588560, 69598559...</msg>
<status status="PASS" starttime="20201112 12:46:20.557" endtime="20201112 12:46:20.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:20.564" endtime="20201112 12:46:20.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:18.414" endtime="20201112 12:46:20.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:18.409" endtime="20201112 12:46:20.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:20.576" level="INFO">${RESULT} = {'timer-count': 9, 'wakeups': [69558559, 69568560, 69578560, 69588560, 69598559, 69608560, 69618560, 69628560, 69638560, 69648560, 69658560, 69668560, 69678560, 69688560, 69698560, 69708560, 69718560,...</msg>
<status status="PASS" starttime="20201112 12:46:20.572" endtime="20201112 12:46:20.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:20.587" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:46:20.585" endtime="20201112 12:46:20.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:20.592" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:46:20.590" endtime="20201112 12:46:20.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:20.579" endtime="20201112 12:46:20.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:20.604" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:46:20.602" endtime="20201112 12:46:20.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:20.609" level="INFO">VALUE: 69548232</msg>
<status status="PASS" starttime="20201112 12:46:20.606" endtime="20201112 12:46:20.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:20.595" endtime="20201112 12:46:20.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:20.621" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:20.619" endtime="20201112 12:46:20.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:20.625" level="INFO">VALUE: [69558559, 69568560, 69578560, 69588560, 69598559, 69608560, 69618560, 69628560, 69638560, 69648560, 69658560, 69668560, 69678560, 69688560, 69698560, 69708560, 69718560, 69728560, 69738560, 69748560, 69758560, 69768560, 69778560, 69788560, 69798560, 69808560, 69818560, 69828560, 69838560, 69848560, 69858559, 69868560, 69878559, 69888560, 69898560, 69908560, 69918560, 69928560, 69938560, 69948560, 69958560, 69968560, 69978560, 69988560, 69998560, 70008560, 70018559, 70028560, 70038559, 70048560, 70058560, 70068560, 70078560, 70088560, 70098560, 70108560, 70118560, 70128560, 70138560, 70148560, 70158560, 70168560, 70178560, 70188560, 70198560, 70208560, 70218560, 70228560, 70238560, 70248560, 70258560, 70268560, 70278560, 70288560, 70298560, 70308560, 70318560, 70328560, 70338560, 70348560, 70358560, 70368560, 70378560, 70388560, 70398560, 70408560, 70418560, 70428560, 70438560, 70448560, 70458560, 70468560, 70478560, 70488560, 70498559, 70508560, 70518560, 70528560, 70538560, 70548560]</msg>
<status status="PASS" starttime="20201112 12:46:20.623" endtime="20201112 12:46:20.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:20.612" endtime="20201112 12:46:20.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:20.644" endtime="20201112 12:46:20.986"></status>
</kw>
<msg timestamp="20201112 12:46:20.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037661083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048023861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:20.641" endtime="20201112 12:46:20.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:21.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037661083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048023861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:20.994" endtime="20201112 12:46:21.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:21.011" endtime="20201112 12:46:21.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:20.634" endtime="20201112 12:46:21.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:20.629" endtime="20201112 12:46:21.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:21.074" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:46:21.022" endtime="20201112 12:46:21.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:21.085" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:46:21.083" endtime="20201112 12:46:21.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:21.090" level="INFO">VALUE: 0.037661083</msg>
<status status="PASS" starttime="20201112 12:46:21.088" endtime="20201112 12:46:21.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:21.076" endtime="20201112 12:46:21.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:21.104" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:21.102" endtime="20201112 12:46:21.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:21.110" level="INFO">VALUE: [0.048023861, 0.058059833, 0.068094958, 0.078130556, 0.088164889, 0.098202014, 0.108238167, 0.118274111, 0.128310625, 0.138346722, 0.148382542, 0.158418347, 0.168453889, 0.178489042, 0.188525792, 0.198560542, 0.208595069, 0.218628347, 0.228662708, 0.238696181, 0.248730931, 0.258767042, 0.268803597, 0.278839819, 0.288875597, 0.298911653, 0.308948125, 0.318984194, 0.329018681, 0.339052111, 0.349085639, 0.35912125, 0.369155069, 0.37919125, 0.38922725, 0.3992635, 0.409299306, 0.419333917, 0.429368694, 0.439402611, 0.449437111, 0.459470833, 0.469505403, 0.479540236, 0.489574681, 0.499610125, 0.509645319, 0.519681875, 0.529716708, 0.539753597, 0.549788069, 0.559822597, 0.569859028, 0.579893847, 0.589929458, 0.599966083, 0.610004028, 0.620040569, 0.630077528, 0.640114708, 0.650152125, 0.660188903, 0.670225958, 0.680261847, 0.690298403, 0.700334444, 0.710369833, 0.720403139, 0.730435986, 0.740469569, 0.750503931, 0.760537431, 0.77057175, 0.780605236, 0.790638944, 0.800672319, 0.810706931, 0.820741708, 0.830776889, 0.840812042, 0.850847486, 0.860881931, 0.870916972, 0.880952736, 0.890988861, 0.901025083, 0.911059542, 0.921093833, 0.931128194, 0.941161597, 0.951195556, 0.961229556, 0.971263986, 0.981296903, 0.991328958, 1.001362625, 1.011396653, 1.021429931, 1.031464319, 1.041498222] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:46:21.107" endtime="20201112 12:46:21.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:21.094" endtime="20201112 12:46:21.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:21.118" endtime="20201112 12:46:21.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:46:21.127" endtime="20201112 12:46:21.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:21.122" endtime="20201112 12:46:21.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:21.114" endtime="20201112 12:46:21.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:18.405" endtime="20201112 12:46:21.152"></status>
</kw>
<msg timestamp="20201112 12:46:21.153" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:21.173" endtime="20201112 12:46:23.302"></status>
</kw>
<msg timestamp="20201112 12:46:23.304" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72288053, 'wakeups': [72298380, 72308381, 72318381, 72328380, 72338381...</msg>
<status status="PASS" starttime="20201112 12:46:21.170" endtime="20201112 12:46:23.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:23.311" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72288053, 'wakeups': [72298380, 72308381, 72318381, 72328380, 72338381...</msg>
<status status="PASS" starttime="20201112 12:46:23.306" endtime="20201112 12:46:23.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:23.313" endtime="20201112 12:46:23.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:21.163" endtime="20201112 12:46:23.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:21.158" endtime="20201112 12:46:23.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:23.328" level="INFO">${RESULT} = {'timer-count': 9, 'wakeups': [72298380, 72308381, 72318381, 72328380, 72338381, 72348380, 72358381, 72368381, 72378381, 72388381, 72398381, 72408381, 72418381, 72428381, 72438381, 72448381, 72458381,...</msg>
<status status="PASS" starttime="20201112 12:46:23.323" endtime="20201112 12:46:23.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:23.338" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:46:23.335" endtime="20201112 12:46:23.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:23.342" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:46:23.340" endtime="20201112 12:46:23.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:23.330" endtime="20201112 12:46:23.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:23.354" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:46:23.352" endtime="20201112 12:46:23.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:23.359" level="INFO">VALUE: 72288053</msg>
<status status="PASS" starttime="20201112 12:46:23.357" endtime="20201112 12:46:23.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:23.346" endtime="20201112 12:46:23.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:23.371" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:23.369" endtime="20201112 12:46:23.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:23.376" level="INFO">VALUE: [72298380, 72308381, 72318381, 72328380, 72338381, 72348380, 72358381, 72368381, 72378381, 72388381, 72398381, 72408381, 72418381, 72428381, 72438381, 72448381, 72458381, 72468381, 72478381, 72488381, 72498380, 72508381, 72518381, 72528381, 72538381, 72548381, 72558381, 72568381, 72578381, 72588381, 72598381, 72608381, 72618380, 72628381, 72638381, 72648381, 72658380, 72668381, 72678381, 72688381, 72698381, 72708381, 72718381, 72728381, 72738381, 72748381, 72758381, 72768381, 72778380, 72788381, 72798381, 72808381, 72818381, 72828381, 72838381, 72848381, 72858381, 72868380, 72878381, 72888381, 72898381, 72908381, 72918381, 72928381, 72938381, 72948381, 72958381, 72968381, 72978381, 72988381, 72998381, 73008381, 73018381, 73028381, 73038381, 73048381, 73058380, 73068381, 73078381, 73088381, 73098381, 73108381, 73118381, 73128381, 73138380, 73148381, 73158381, 73168381, 73178381, 73188380, 73198381, 73208380, 73218380, 73228381, 73238381, 73248381, 73258381, 73268381, 73278381, 73288381]</msg>
<status status="PASS" starttime="20201112 12:46:23.374" endtime="20201112 12:46:23.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:23.362" endtime="20201112 12:46:23.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:23.395" endtime="20201112 12:46:23.738"></status>
</kw>
<msg timestamp="20201112 12:46:23.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037397111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047760347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:23.392" endtime="20201112 12:46:23.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:23.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037397111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047760347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:23.747" endtime="20201112 12:46:23.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:23.764" endtime="20201112 12:46:23.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:23.385" endtime="20201112 12:46:23.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:23.380" endtime="20201112 12:46:23.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:23.825" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:46:23.772" endtime="20201112 12:46:23.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:23.836" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:46:23.834" endtime="20201112 12:46:23.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:23.841" level="INFO">VALUE: 0.037397111</msg>
<status status="PASS" starttime="20201112 12:46:23.838" endtime="20201112 12:46:23.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:23.827" endtime="20201112 12:46:23.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:23.854" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:23.852" endtime="20201112 12:46:23.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:23.858" level="INFO">VALUE: [0.047760347, 0.057794806, 0.067829375, 0.077863361, 0.087899903, 0.097934347, 0.107969403, 0.118003931, 0.128038375, 0.138072917, 0.148108611, 0.158141958, 0.168174444, 0.178208042, 0.188242264, 0.198276861, 0.208311764, 0.218346111, 0.228380806, 0.238413611, 0.248447389, 0.258484167, 0.268518986, 0.278553319, 0.2885885, 0.298624181, 0.308658278, 0.318693292, 0.328727917, 0.338762111, 0.348796431, 0.358830625, 0.368863083, 0.37889775, 0.388932792, 0.398967069, 0.408999472, 0.419034917, 0.429068639, 0.439102014, 0.449135639, 0.459169667, 0.469205097, 0.479239708, 0.489274292, 0.499307736, 0.509341264, 0.519374514, 0.5294075, 0.539442181, 0.549476222, 0.559509931, 0.569544167, 0.579577444, 0.589610125, 0.599643056, 0.609675875, 0.61970775, 0.629741986, 0.639776083, 0.649810542, 0.65984475, 0.669879139, 0.679913625, 0.689948569, 0.699983667, 0.710018903, 0.720054208, 0.730091583, 0.740128625, 0.750164375, 0.760199181, 0.770233722, 0.780266792, 0.790301236, 0.800335347, 0.810369667, 0.820405097, 0.83043925, 0.840473472, 0.8505085, 0.860543069, 0.870577306, 0.880611764, 0.89064575, 0.900681833, 0.910716764, 0.920750319, 0.930783986, 0.940815917, 0.950851736, 0.960885986, 0.970921472, 0.980957097, 0.990990278, 1.001024056, 1.011057431, 1.021091306, 1.031125486, 1.041159569] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:46:23.856" endtime="20201112 12:46:23.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:23.844" endtime="20201112 12:46:23.861"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:23.867" endtime="20201112 12:46:23.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:46:23.875" endtime="20201112 12:46:23.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:23.871" endtime="20201112 12:46:23.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:23.863" endtime="20201112 12:46:23.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:21.154" endtime="20201112 12:46:23.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:15.621" endtime="20201112 12:46:23.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:15.620" endtime="20201112 12:46:23.902"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:46:23.908" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:23.929" endtime="20201112 12:46:26.057"></status>
</kw>
<msg timestamp="20201112 12:46:26.059" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75034261, 'wakeups': [75044633, 75054632, 75064632, 75074632, 750846...</msg>
<status status="PASS" starttime="20201112 12:46:23.925" endtime="20201112 12:46:26.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:26.065" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75034261, 'wakeups': [75044633, 75054632, 75064632, 75074632, 750846...</msg>
<status status="PASS" starttime="20201112 12:46:26.061" endtime="20201112 12:46:26.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:26.068" endtime="20201112 12:46:26.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:23.918" endtime="20201112 12:46:26.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:23.913" endtime="20201112 12:46:26.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:26.080" level="INFO">${RESULT} = {'timer-count': 10, 'wakeups': [75044633, 75054632, 75064632, 75074632, 75084632, 75094632, 75104632, 75114632, 75124632, 75134632, 75144632, 75154632, 75164632, 75174633, 75184632, 75194632, 75204632...</msg>
<status status="PASS" starttime="20201112 12:46:26.076" endtime="20201112 12:46:26.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:26.090" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:46:26.088" endtime="20201112 12:46:26.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:26.095" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:46:26.093" endtime="20201112 12:46:26.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:26.082" endtime="20201112 12:46:26.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:26.107" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:46:26.105" endtime="20201112 12:46:26.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:26.112" level="INFO">VALUE: 75034261</msg>
<status status="PASS" starttime="20201112 12:46:26.109" endtime="20201112 12:46:26.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:26.098" endtime="20201112 12:46:26.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:26.124" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:26.122" endtime="20201112 12:46:26.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:26.130" level="INFO">VALUE: [75044633, 75054632, 75064632, 75074632, 75084632, 75094632, 75104632, 75114632, 75124632, 75134632, 75144632, 75154632, 75164632, 75174633, 75184632, 75194632, 75204632, 75214632, 75224632, 75234632, 75244632, 75254632, 75264632, 75274632, 75284632, 75294632, 75304632, 75314632, 75324632, 75334632, 75344632, 75354631, 75364632, 75374632, 75384632, 75394632, 75404632, 75414632, 75424632, 75434632, 75444632, 75454632, 75464632, 75474632, 75484632, 75494632, 75504632, 75514631, 75524632, 75534632, 75544632, 75554632, 75564632, 75574631, 75584632, 75594632, 75604632, 75614632, 75624632, 75634632, 75644632, 75654632, 75664632, 75674632, 75684632, 75694632, 75704632, 75714632, 75724632, 75734632, 75744631, 75754632, 75764632, 75774632, 75784632, 75794632, 75804632, 75814632, 75824632, 75834632, 75844632, 75854632, 75864632, 75874632, 75884632, 75894632, 75904632, 75914632, 75924632, 75934632, 75944632, 75954632, 75964632, 75974632, 75984632, 75994632, 76004632, 76014632, 76024632, 76034632]</msg>
<status status="PASS" starttime="20201112 12:46:26.126" endtime="20201112 12:46:26.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:26.115" endtime="20201112 12:46:26.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:26.154" endtime="20201112 12:46:26.498"></status>
</kw>
<msg timestamp="20201112 12:46:26.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043493903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053902069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:26.151" endtime="20201112 12:46:26.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:26.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043493903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053902069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:26.506" endtime="20201112 12:46:26.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:26.523" endtime="20201112 12:46:26.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:26.139" endtime="20201112 12:46:26.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:26.134" endtime="20201112 12:46:26.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:26.585" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:46:26.532" endtime="20201112 12:46:26.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:26.595" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:46:26.593" endtime="20201112 12:46:26.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:26.600" level="INFO">VALUE: 0.043493903</msg>
<status status="PASS" starttime="20201112 12:46:26.598" endtime="20201112 12:46:26.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:26.586" endtime="20201112 12:46:26.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:26.613" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:26.611" endtime="20201112 12:46:26.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:26.618" level="INFO">VALUE: [0.053902069, 0.063935778, 0.073970347, 0.084004181, 0.094037375, 0.1040705, 0.114104347, 0.124137764, 0.134173403, 0.144209472, 0.154244569, 0.164278764, 0.174313625, 0.184347875, 0.194382167, 0.204417194, 0.214452903, 0.224486847, 0.234520833, 0.244554111, 0.254588139, 0.264621778, 0.274657153, 0.284691819, 0.294725708, 0.304759444, 0.314794472, 0.324829, 0.334864542, 0.344899083, 0.35493475, 0.364968819, 0.375003639, 0.38503775, 0.395071444, 0.405104694, 0.415137833, 0.425171542, 0.435204597, 0.445236625, 0.455269833, 0.465303278, 0.475337181, 0.485369125, 0.495402764, 0.505435472, 0.515468542, 0.525501083, 0.535535708, 0.545568569, 0.555602556, 0.565636208, 0.575673569, 0.585707986, 0.595742542, 0.605776986, 0.615811806, 0.625845972, 0.635880431, 0.645914236, 0.655949778, 0.665983583, 0.676017903, 0.686051778, 0.696085875, 0.706118375, 0.716151181, 0.726183736, 0.736215722, 0.746248333, 0.756281958, 0.766316722, 0.77635, 0.786382181, 0.796415542, 0.806447403, 0.816479569, 0.826512278, 0.836545306, 0.846577458, 0.856610889, 0.866642347, 0.876674792, 0.886707083, 0.89674, 0.906772653, 0.916806069, 0.926838347, 0.936871097, 0.946904181, 0.956937153, 0.966969764, 0.977003222, 0.987037014, 0.997072264, 1.007106153, 1.017140083, 1.027173528, 1.037207903, 1.047242153] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:46:26.615" endtime="20201112 12:46:26.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:26.603" endtime="20201112 12:46:26.620"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:26.626" endtime="20201112 12:46:26.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:46:26.635" endtime="20201112 12:46:26.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:26.630" endtime="20201112 12:46:26.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:26.622" endtime="20201112 12:46:26.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:23.909" endtime="20201112 12:46:26.660"></status>
</kw>
<msg timestamp="20201112 12:46:26.661" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:26.681" endtime="20201112 12:46:28.818"></status>
</kw>
<msg timestamp="20201112 12:46:28.820" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77778204, 'wakeups': [77788575, 77798575, 77808574, 77818575, 778285...</msg>
<status status="PASS" starttime="20201112 12:46:26.678" endtime="20201112 12:46:28.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:28.832" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77778204, 'wakeups': [77788575, 77798575, 77808574, 77818575, 778285...</msg>
<status status="PASS" starttime="20201112 12:46:28.825" endtime="20201112 12:46:28.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:28.835" endtime="20201112 12:46:28.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:26.671" endtime="20201112 12:46:28.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:26.666" endtime="20201112 12:46:28.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:28.855" level="INFO">${RESULT} = {'timer-count': 10, 'wakeups': [77788575, 77798575, 77808574, 77818575, 77828575, 77838575, 77848574, 77858575, 77868575, 77878575, 77888575, 77898575, 77908575, 77918575, 77928574, 77938575, 77948575...</msg>
<status status="PASS" starttime="20201112 12:46:28.847" endtime="20201112 12:46:28.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:28.871" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:46:28.867" endtime="20201112 12:46:28.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:28.877" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:46:28.874" endtime="20201112 12:46:28.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:28.858" endtime="20201112 12:46:28.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:28.893" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:46:28.890" endtime="20201112 12:46:28.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:28.900" level="INFO">VALUE: 77778204</msg>
<status status="PASS" starttime="20201112 12:46:28.896" endtime="20201112 12:46:28.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:28.882" endtime="20201112 12:46:28.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:28.918" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:28.915" endtime="20201112 12:46:28.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:28.925" level="INFO">VALUE: [77788575, 77798575, 77808574, 77818575, 77828575, 77838575, 77848574, 77858575, 77868575, 77878575, 77888575, 77898575, 77908575, 77918575, 77928574, 77938575, 77948575, 77958575, 77968575, 77978575, 77988575, 77998575, 78008575, 78018575, 78028575, 78038575, 78048575, 78058575, 78068575, 78078575, 78088575, 78098574, 78108575, 78118575, 78128575, 78138575, 78148575, 78158575, 78168575, 78178574, 78188575, 78198575, 78208575, 78218575, 78228575, 78238575, 78248574, 78258575, 78268575, 78278575, 78288575, 78298575, 78308575, 78318575, 78328575, 78338575, 78348575, 78358575, 78368575, 78378575, 78388575, 78398575, 78408575, 78418575, 78428575, 78438575, 78448575, 78458575, 78468575, 78478575, 78488575, 78498575, 78508575, 78518575, 78528574, 78538575, 78548575, 78558575, 78568575, 78578575, 78588574, 78598575, 78608575, 78618575, 78628575, 78638575, 78648575, 78658575, 78668575, 78678575, 78688575, 78698575, 78708575, 78718575, 78728575, 78738575, 78748575, 78758575, 78768575, 78778575]</msg>
<status status="PASS" starttime="20201112 12:46:28.922" endtime="20201112 12:46:28.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:28.906" endtime="20201112 12:46:28.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:28.953" endtime="20201112 12:46:29.322"></status>
</kw>
<msg timestamp="20201112 12:46:29.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037728292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048134056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:28.949" endtime="20201112 12:46:29.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:29.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037728292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048134056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:29.331" endtime="20201112 12:46:29.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:29.350" endtime="20201112 12:46:29.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:28.938" endtime="20201112 12:46:29.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:28.931" endtime="20201112 12:46:29.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:29.414" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:46:29.360" endtime="20201112 12:46:29.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:29.430" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:46:29.427" endtime="20201112 12:46:29.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:29.437" level="INFO">VALUE: 0.037728292</msg>
<status status="PASS" starttime="20201112 12:46:29.433" endtime="20201112 12:46:29.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:29.418" endtime="20201112 12:46:29.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:29.456" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:29.453" endtime="20201112 12:46:29.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:29.463" level="INFO">VALUE: [0.048134056, 0.058167153, 0.068199194, 0.078232639, 0.088266653, 0.098301264, 0.108335056, 0.118370792, 0.128405111, 0.138438653, 0.148472542, 0.158504694, 0.168536986, 0.178569167, 0.188601639, 0.198636361, 0.208669514, 0.218701167, 0.228733722, 0.238765389, 0.248798653, 0.258829986, 0.268862736, 0.278896, 0.288929444, 0.298963097, 0.308996028, 0.319029347, 0.329061736, 0.339094944, 0.349129167, 0.359162069, 0.369197194, 0.379231153, 0.389264611, 0.399298875, 0.409332278, 0.419365542, 0.429398292, 0.439430417, 0.449464347, 0.459497514, 0.469530222, 0.479563278, 0.489596875, 0.499630597, 0.509664639, 0.519700333, 0.529735403, 0.539769361, 0.549802764, 0.559836778, 0.569871292, 0.579906056, 0.589939319, 0.599971625, 0.610005181, 0.620038722, 0.630073069, 0.640106556, 0.650139097, 0.660171306, 0.670204639, 0.680237806, 0.690272056, 0.700305403, 0.710339806, 0.720372264, 0.730406694, 0.740440597, 0.750473861, 0.760507389, 0.770541417, 0.780574278, 0.790606625, 0.800641306, 0.810674583, 0.820707944, 0.830742014, 0.840774903, 0.850806556, 0.860839972, 0.870874222, 0.880907708, 0.890942625, 0.900977597, 0.911013431, 0.921048333, 0.931083111, 0.941117625, 0.951152222, 0.961185806, 0.971218611, 0.981252278, 0.991285347, 1.001318417, 1.011352792, 1.021387306, 1.031422236, 1.041455722] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:46:29.459" endtime="20201112 12:46:29.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:29.442" endtime="20201112 12:46:29.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:29.475" endtime="20201112 12:46:29.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:46:29.488" endtime="20201112 12:46:29.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:29.481" endtime="20201112 12:46:29.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:29.469" endtime="20201112 12:46:29.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:26.662" endtime="20201112 12:46:29.515"></status>
</kw>
<msg timestamp="20201112 12:46:29.516" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:29.537" endtime="20201112 12:46:31.668"></status>
</kw>
<msg timestamp="20201112 12:46:31.669" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80624279, 'wakeups': [80634650, 80644650, 80654650, 80664650, 806746...</msg>
<status status="PASS" starttime="20201112 12:46:29.534" endtime="20201112 12:46:31.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:31.676" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80624279, 'wakeups': [80634650, 80644650, 80654650, 80664650, 806746...</msg>
<status status="PASS" starttime="20201112 12:46:31.671" endtime="20201112 12:46:31.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:31.678" endtime="20201112 12:46:31.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:29.526" endtime="20201112 12:46:31.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:29.521" endtime="20201112 12:46:31.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:31.693" level="INFO">${RESULT} = {'timer-count': 10, 'wakeups': [80634650, 80644650, 80654650, 80664650, 80674650, 80684650, 80694650, 80704650, 80714649, 80724650, 80734650, 80744650, 80754650, 80764650, 80774650, 80784650, 80794650...</msg>
<status status="PASS" starttime="20201112 12:46:31.688" endtime="20201112 12:46:31.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:31.703" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:46:31.701" endtime="20201112 12:46:31.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:31.707" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:46:31.705" endtime="20201112 12:46:31.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:31.695" endtime="20201112 12:46:31.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:31.725" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:46:31.723" endtime="20201112 12:46:31.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:31.729" level="INFO">VALUE: 80624279</msg>
<status status="PASS" starttime="20201112 12:46:31.727" endtime="20201112 12:46:31.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:31.716" endtime="20201112 12:46:31.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:31.742" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:31.740" endtime="20201112 12:46:31.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:31.747" level="INFO">VALUE: [80634650, 80644650, 80654650, 80664650, 80674650, 80684650, 80694650, 80704650, 80714649, 80724650, 80734650, 80744650, 80754650, 80764650, 80774650, 80784650, 80794650, 80804650, 80814650, 80824650, 80834650, 80844650, 80854650, 80864650, 80874649, 80884650, 80894650, 80904650, 80914649, 80924650, 80934649, 80944650, 80954650, 80964650, 80974650, 80984651, 80994650, 81004650, 81014650, 81024650, 81034650, 81044650, 81054650, 81064650, 81074650, 81084650, 81094650, 81104650, 81114650, 81124650, 81134650, 81144650, 81154650, 81164650, 81174650, 81184650, 81194650, 81204650, 81214650, 81224650, 81234650, 81244650, 81254650, 81264650, 81274650, 81284650, 81294650, 81304650, 81314650, 81324650, 81334650, 81344650, 81354650, 81364650, 81374650, 81384650, 81394650, 81404650, 81414650, 81424650, 81434649, 81444650, 81454650, 81464650, 81474650, 81484650, 81494650, 81504650, 81514650, 81524650, 81534650, 81544650, 81554650, 81564650, 81574650, 81584650, 81594649, 81604650, 81614650, 81624650]</msg>
<status status="PASS" starttime="20201112 12:46:31.745" endtime="20201112 12:46:31.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:31.733" endtime="20201112 12:46:31.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:31.767" endtime="20201112 12:46:32.114"></status>
</kw>
<msg timestamp="20201112 12:46:32.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039279931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049688056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:31.764" endtime="20201112 12:46:32.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:46:32.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039279931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049688056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:46:32.123" endtime="20201112 12:46:32.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:32.140" endtime="20201112 12:46:32.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:31.756" endtime="20201112 12:46:32.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:31.751" endtime="20201112 12:46:32.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:46:32.204" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:46:32.149" endtime="20201112 12:46:32.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:32.214" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:46:32.212" endtime="20201112 12:46:32.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:32.219" level="INFO">VALUE: 0.039279931</msg>
<status status="PASS" starttime="20201112 12:46:32.216" endtime="20201112 12:46:32.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:32.205" endtime="20201112 12:46:32.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:46:32.232" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:46:32.230" endtime="20201112 12:46:32.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:46:32.236" level="INFO">VALUE: [0.049688056, 0.059722931, 0.069758014, 0.079792889, 0.089827903, 0.099862111, 0.109896375, 0.119931653, 0.129965014, 0.140000472, 0.150035778, 0.160071181, 0.170106514, 0.180140708, 0.190175014, 0.200209472, 0.210244583, 0.220278542, 0.230313667, 0.240348889, 0.250383847, 0.260418583, 0.27045275, 0.280487486, 0.290520472, 0.300554764, 0.310587931, 0.320622028, 0.330656889, 0.340692653, 0.350727014, 0.360762625, 0.370795972, 0.380829694, 0.390864097, 0.400898625, 0.410932042, 0.420966708, 0.431002194, 0.441038042, 0.451074194, 0.461110806, 0.471146278, 0.481181514, 0.491216597, 0.501251444, 0.511286208, 0.521321889, 0.531356958, 0.541390861, 0.551425708, 0.561460819, 0.571495778, 0.581530194, 0.591564764, 0.601598375, 0.611633569, 0.621668736, 0.631704542, 0.64173975, 0.651775292, 0.661810736, 0.671847181, 0.681883097, 0.691918792, 0.701954292, 0.711989403, 0.722024319, 0.732059306, 0.742094653, 0.752129653, 0.762164528, 0.77220025, 0.782236264, 0.792271681, 0.802306792, 0.812341875, 0.822377431, 0.832415097, 0.842452569, 0.852489056, 0.862526236, 0.872562917, 0.882600347, 0.892637625, 0.902674653, 0.912712, 0.922749625, 0.932787236, 0.942824194, 0.952862347, 0.962900097, 0.972937, 0.982973472, 0.993011236, 1.003047764, 1.013084, 1.023121861, 1.033159792, 1.043195014] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:46:32.234" endtime="20201112 12:46:32.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:32.222" endtime="20201112 12:46:32.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:46:32.246" endtime="20201112 12:46:32.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:46:32.254" endtime="20201112 12:46:32.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:32.250" endtime="20201112 12:46:32.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:32.241" endtime="20201112 12:46:32.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:29.517" endtime="20201112 12:46:32.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:23.905" endtime="20201112 12:46:32.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:46:23.903" endtime="20201112 12:46:32.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:45:09.275" endtime="20201112 12:46:32.281"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:45:09.151" endtime="20201112 12:46:32.283" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:45:06.652" endtime="20201112 12:46:32.291"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201112 12:42:34.421" endtime="20201112 12:46:32.331"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_samr21-xpro</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
